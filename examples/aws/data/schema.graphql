"""AWS SDK 2.490.0"""
type Aws {
  acm(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsACM
  acmpca(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsACMPCA
  apigateway(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsAPIGateway
  alexaforbusiness(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsAlexaForBusiness
  amplify(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsAmplify
  apigatewaymanagementapi(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsApiGatewayManagementApi
  apigatewayv2(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsApiGatewayV2
  appmesh(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsAppMesh
  appstream(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsAppStream
  appsync(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsAppSync
  applicationautoscaling(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsApplicationAutoScaling
  applicationinsights(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsApplicationInsights
  athena(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsAthena
  autoscaling(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsAutoScaling
  autoscalingplans(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsAutoScalingPlans
  backup(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsBackup
  batch(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsBatch
  budgets(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsBudgets
  cur(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCUR
  chime(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsChime
  cloud9(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloud9
  clouddirectory(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudDirectory
  cloudformation(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudFormation
  cloudfront(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudFront
  cloudhsm(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudHSM
  cloudhsmv2(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudHSMV2
  cloudsearch(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudSearch
  cloudsearchdomain(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudSearchDomain
  cloudtrail(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudTrail
  cloudwatch(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudWatch
  cloudwatchevents(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudWatchEvents
  cloudwatchlogs(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCloudWatchLogs
  codebuild(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCodeBuild
  codecommit(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCodeCommit
  codedeploy(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCodeDeploy
  codepipeline(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCodePipeline
  codestar(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCodeStar
  cognitoidentity(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCognitoIdentity
  cognitoidentityserviceprovider(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCognitoIdentityServiceProvider
  cognitosync(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCognitoSync
  comprehend(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsComprehend
  comprehendmedical(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsComprehendMedical
  configservice(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsConfigService
  connect(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsConnect
  costexplorer(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsCostExplorer
  dax(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDAX
  dlm(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDLM
  dms(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDMS
  datapipeline(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDataPipeline
  datasync(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDataSync
  devicefarm(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDeviceFarm
  directconnect(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDirectConnect
  directoryservice(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDirectoryService
  discovery(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDiscovery
  docdb(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDocDB
  dynamodb(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDynamoDB
  dynamodbstreams(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsDynamoDBStreams
  ec2(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsEC2
  ec2instanceconnect(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsEC2InstanceConnect
  ecr(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsECR
  ecs(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsECS
  efs(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsEFS
  eks(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsEKS
  elb(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsELB
  elbv2(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsELBv2
  emr(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsEMR
  es(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsES
  elasticache(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsElastiCache
  elasticbeanstalk(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsElasticBeanstalk
  elastictranscoder(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsElasticTranscoder
  fms(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsFMS
  fsx(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsFSx
  firehose(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsFirehose
  gamelift(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsGameLift
  glacier(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsGlacier
  globalaccelerator(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsGlobalAccelerator
  glue(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsGlue
  greengrass(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsGreengrass
  groundstation(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsGroundStation
  guardduty(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsGuardDuty
  health(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsHealth
  iam(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsIAM
  importexport(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsImportExport
  inspector(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsInspector
  iot1clickdevicesservice(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsIoT1ClickDevicesService
  iot1clickprojects(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsIoT1ClickProjects
  iotanalytics(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsIoTAnalytics
  iotevents(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsIoTEvents
  ioteventsdata(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsIoTEventsData
  iotjobsdataplane(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsIoTJobsDataPlane
  iotthingsgraph(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsIoTThingsGraph
  iot(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsIot
  iotdata(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsIotData
  kms(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsKMS
  kafka(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsKafka
  kinesis(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsKinesis
  kinesisanalytics(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsKinesisAnalytics
  kinesisanalyticsv2(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsKinesisAnalyticsV2
  kinesisvideo(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsKinesisVideo
  kinesisvideoarchivedmedia(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsKinesisVideoArchivedMedia
  kinesisvideomedia(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsKinesisVideoMedia
  lambda(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsLambda
  lexmodelbuildingservice(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsLexModelBuildingService
  lexruntime(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsLexRuntime
  licensemanager(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsLicenseManager
  lightsail(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsLightsail
  mq(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMQ
  mturk(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMTurk
  machinelearning(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMachineLearning
  macie(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMacie
  managedblockchain(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsManagedBlockchain
  marketplacecommerceanalytics(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMarketplaceCommerceAnalytics
  marketplaceentitlementservice(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMarketplaceEntitlementService
  marketplacemetering(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMarketplaceMetering
  mediaconnect(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMediaConnect
  mediaconvert(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMediaConvert
  medialive(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMediaLive
  mediapackage(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMediaPackage
  mediapackagevod(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMediaPackageVod
  mediastore(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMediaStore
  mediastoredata(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMediaStoreData
  mediatailor(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMediaTailor
  migrationhub(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMigrationHub
  mobile(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMobile
  mobileanalytics(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsMobileAnalytics
  neptune(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsNeptune
  opsworks(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsOpsWorks
  opsworkscm(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsOpsWorksCM
  organizations(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsOrganizations
  pi(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsPI
  personalize(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsPersonalize
  personalizeevents(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsPersonalizeEvents
  personalizeruntime(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsPersonalizeRuntime
  pinpoint(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsPinpoint
  pinpointemail(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsPinpointEmail
  pinpointsmsvoice(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsPinpointSMSVoice
  polly(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsPolly
  pricing(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsPricing
  quicksight(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsQuickSight
  ram(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsRAM
  rds(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsRDS
  rdsdataservice(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsRDSDataService
  redshift(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsRedshift
  rekognition(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsRekognition
  resourcegroups(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsResourceGroups
  resourcegroupstaggingapi(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsResourceGroupsTaggingAPI
  robomaker(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsRoboMaker
  route53(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsRoute53
  route53domains(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsRoute53Domains
  route53resolver(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsRoute53Resolver
  s3(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsS3
  s3control(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsS3Control
  ses(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSES
  sms(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSMS
  sns(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSNS
  sqs(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSQS
  ssm(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSSM
  sts(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSTS
  swf(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSWF
  sagemaker(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSageMaker
  sagemakerruntime(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSageMakerRuntime
  secretsmanager(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSecretsManager
  securityhub(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSecurityHub
  serverlessapplicationrepository(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsServerlessApplicationRepository
  servicecatalog(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsServiceCatalog
  servicediscovery(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsServiceDiscovery
  servicequotas(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsServiceQuotas
  shield(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsShield
  signer(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSigner
  simpledb(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSimpleDB
  snowball(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSnowball
  stepfunctions(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsStepFunctions
  storagegateway(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsStorageGateway
  support(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsSupport
  textract(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsTextract
  transcribeservice(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsTranscribeService
  transfer(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsTransfer
  translate(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsTranslate
  waf(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsWAF
  wafregional(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsWAFRegional
  workdocs(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsWorkDocs
  worklink(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsWorkLink
  workmail(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsWorkMail
  workspaces(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsWorkSpaces
  xray(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): AwsXRay
}

"""AWS Certificate Manager (2015-12-08)"""
type AwsACM {
  addTagsToCertificate(input: AwsACMAddTagsToCertificateInput!, config: AwsConfig): JSON
  deleteCertificate(input: AwsACMDeleteCertificateInput!, config: AwsConfig): JSON
  describeCertificate(input: AwsACMDescribeCertificateInput!, config: AwsConfig): AwsACMDescribeCertificateOutput
  exportCertificate(input: AwsACMExportCertificateInput!, config: AwsConfig): AwsACMExportCertificateOutput
  getCertificate(input: AwsACMGetCertificateInput!, config: AwsConfig): AwsACMGetCertificateOutput
  importCertificate(input: AwsACMImportCertificateInput!, config: AwsConfig): AwsACMImportCertificateOutput
  listCertificates(input: AwsACMListCertificatesInput, config: AwsConfig): AwsACMListCertificatesOutput
  listTagsForCertificate(input: AwsACMListTagsForCertificateInput!, config: AwsConfig): AwsACMListTagsForCertificateOutput
  removeTagsFromCertificate(input: AwsACMRemoveTagsFromCertificateInput!, config: AwsConfig): JSON
  renewCertificate(input: AwsACMRenewCertificateInput!, config: AwsConfig): JSON
  requestCertificate(input: AwsACMRequestCertificateInput!, config: AwsConfig): AwsACMRequestCertificateOutput
  resendValidationEmail(input: AwsACMResendValidationEmailInput!, config: AwsConfig): JSON
  updateCertificateOptions(input: AwsACMUpdateCertificateOptionsInput!, config: AwsConfig): JSON
}

input AwsACMAddTagsToCertificateInput {
  CertificateArn: String!
  Tags: [AwsACMS3Input]!
}

input AwsACMDeleteCertificateInput {
  CertificateArn: String!
}

input AwsACMDescribeCertificateInput {
  CertificateArn: String!
}

type AwsACMDescribeCertificateOutput {
  Certificate: AwsACMDescribeCertificateOutputCertificate
}

type AwsACMDescribeCertificateOutputCertificate {
  CertificateArn: String
  DomainName: String
  SubjectAlternativeNames: [String]
  DomainValidationOptions: [AwsACMSd]
  Serial: String
  Subject: String
  Issuer: String
  CreatedAt: Date
  IssuedAt: Date
  ImportedAt: Date
  Status: String
  RevokedAt: Date
  RevocationReason: String
  NotBefore: Date
  NotAfter: Date
  KeyAlgorithm: String
  SignatureAlgorithm: String
  InUseBy: [String]
  FailureReason: String
  Type: String
  RenewalSummary: AwsACMDescribeCertificateOutputCertificateRenewalSummary
  KeyUsages: [AwsACMDescribeCertificateOutputCertificateKeyUsages]
  ExtendedKeyUsages: [AwsACMDescribeCertificateOutputCertificateExtendedKeyUsages]
  CertificateAuthorityArn: String
  RenewalEligibility: String
  Options: AwsACMS11
}

type AwsACMDescribeCertificateOutputCertificateExtendedKeyUsages {
  Name: String
  OID: String
}

type AwsACMDescribeCertificateOutputCertificateKeyUsages {
  Name: String
}

type AwsACMDescribeCertificateOutputCertificateRenewalSummary {
  RenewalStatus: String!
  DomainValidationOptions: [AwsACMSd]!
  RenewalStatusReason: String
  UpdatedAt: Date!
}

input AwsACMExportCertificateInput {
  CertificateArn: String!
  Passphrase: JSON!
}

type AwsACMExportCertificateOutput {
  Certificate: String
  CertificateChain: String
  PrivateKey: String
}

input AwsACMGetCertificateInput {
  CertificateArn: String!
}

type AwsACMGetCertificateOutput {
  Certificate: String
  CertificateChain: String
}

input AwsACMImportCertificateInput {
  CertificateArn: String
  Certificate: JSON!
  PrivateKey: JSON!
  CertificateChain: JSON
}

type AwsACMImportCertificateOutput {
  CertificateArn: String
}

input AwsACMListCertificatesIncludesInput {
  extendedKeyUsage: [String]
  keyUsage: [String]
  keyTypes: [String]
}

input AwsACMListCertificatesInput {
  CertificateStatuses: [String]
  Includes: AwsACMListCertificatesIncludesInput
  NextToken: String
  MaxItems: Int
}

type AwsACMListCertificatesOutput {
  NextToken: String
  CertificateSummaryList: [AwsACMListCertificatesOutputCertificateSummaryList]
}

type AwsACMListCertificatesOutputCertificateSummaryList {
  CertificateArn: String
  DomainName: String
}

input AwsACMListTagsForCertificateInput {
  CertificateArn: String!
}

type AwsACMListTagsForCertificateOutput {
  Tags: [AwsACMS3]
}

"""AWS Certificate Manager Private Certificate Authority (2017-08-22)"""
type AwsACMPCA {
  createCertificateAuthority(input: AwsACMPCACreateCertificateAuthorityInput!, config: AwsConfig): AwsACMPCACreateCertificateAuthorityOutput
  createCertificateAuthorityAuditReport(input: AwsACMPCACreateCertificateAuthorityAuditReportInput!, config: AwsConfig): AwsACMPCACreateCertificateAuthorityAuditReportOutput
  createPermission(input: AwsACMPCACreatePermissionInput!, config: AwsConfig): JSON
  deleteCertificateAuthority(input: AwsACMPCADeleteCertificateAuthorityInput!, config: AwsConfig): JSON
  deletePermission(input: AwsACMPCADeletePermissionInput!, config: AwsConfig): JSON
  describeCertificateAuthority(input: AwsACMPCADescribeCertificateAuthorityInput!, config: AwsConfig): AwsACMPCADescribeCertificateAuthorityOutput
  describeCertificateAuthorityAuditReport(input: AwsACMPCADescribeCertificateAuthorityAuditReportInput!, config: AwsConfig): AwsACMPCADescribeCertificateAuthorityAuditReportOutput
  getCertificate(input: AwsACMPCAGetCertificateInput!, config: AwsConfig): AwsACMPCAGetCertificateOutput
  getCertificateAuthorityCertificate(input: AwsACMPCAGetCertificateAuthorityCertificateInput!, config: AwsConfig): AwsACMPCAGetCertificateAuthorityCertificateOutput
  getCertificateAuthorityCsr(input: AwsACMPCAGetCertificateAuthorityCsrInput!, config: AwsConfig): AwsACMPCAGetCertificateAuthorityCsrOutput
  importCertificateAuthorityCertificate(input: AwsACMPCAImportCertificateAuthorityCertificateInput!, config: AwsConfig): JSON
  issueCertificate(input: AwsACMPCAIssueCertificateInput!, config: AwsConfig): AwsACMPCAIssueCertificateOutput
  listCertificateAuthorities(input: AwsACMPCAListCertificateAuthoritiesInput, config: AwsConfig): AwsACMPCAListCertificateAuthoritiesOutput
  listPermissions(input: AwsACMPCAListPermissionsInput!, config: AwsConfig): AwsACMPCAListPermissionsOutput
  listTags(input: AwsACMPCAListTagsInput!, config: AwsConfig): AwsACMPCAListTagsOutput
  restoreCertificateAuthority(input: AwsACMPCARestoreCertificateAuthorityInput!, config: AwsConfig): JSON
  revokeCertificate(input: AwsACMPCARevokeCertificateInput!, config: AwsConfig): JSON
  tagCertificateAuthority(input: AwsACMPCATagCertificateAuthorityInput!, config: AwsConfig): JSON
  untagCertificateAuthority(input: AwsACMPCAUntagCertificateAuthorityInput!, config: AwsConfig): JSON
  updateCertificateAuthority(input: AwsACMPCAUpdateCertificateAuthorityInput!, config: AwsConfig): JSON
}

input AwsACMPCACreateCertificateAuthorityAuditReportInput {
  CertificateAuthorityArn: String!
  S3BucketName: String!
  AuditReportResponseFormat: String!
}

type AwsACMPCACreateCertificateAuthorityAuditReportOutput {
  AuditReportId: String
  S3Key: String
}

input AwsACMPCACreateCertificateAuthorityInput {
  CertificateAuthorityConfiguration: AwsACMPCAS2Input!
  RevocationConfiguration: AwsACMPCASeInput
  CertificateAuthorityType: String!
  IdempotencyToken: String
  Tags: [AwsACMPCASmInput]
}

type AwsACMPCACreateCertificateAuthorityOutput {
  CertificateAuthorityArn: String
}

input AwsACMPCACreatePermissionInput {
  CertificateAuthorityArn: String!
  Principal: String!
  SourceAccount: String
  Actions: [String]!
}

input AwsACMPCADeleteCertificateAuthorityInput {
  CertificateAuthorityArn: String!
  PermanentDeletionTimeInDays: Int
}

input AwsACMPCADeletePermissionInput {
  CertificateAuthorityArn: String!
  Principal: String!
  SourceAccount: String
}

input AwsACMPCADescribeCertificateAuthorityAuditReportInput {
  CertificateAuthorityArn: String!
  AuditReportId: String!
}

type AwsACMPCADescribeCertificateAuthorityAuditReportOutput {
  AuditReportStatus: String
  S3BucketName: String
  S3Key: String
  CreatedAt: Date
}

input AwsACMPCADescribeCertificateAuthorityInput {
  CertificateAuthorityArn: String!
}

type AwsACMPCADescribeCertificateAuthorityOutput {
  CertificateAuthority: AwsACMPCAS17
}

input AwsACMPCAGetCertificateAuthorityCertificateInput {
  CertificateAuthorityArn: String!
}

type AwsACMPCAGetCertificateAuthorityCertificateOutput {
  Certificate: String
  CertificateChain: String
}

input AwsACMPCAGetCertificateAuthorityCsrInput {
  CertificateAuthorityArn: String!
}

type AwsACMPCAGetCertificateAuthorityCsrOutput {
  Csr: String
}

input AwsACMPCAGetCertificateInput {
  CertificateAuthorityArn: String!
  CertificateArn: String!
}

type AwsACMPCAGetCertificateOutput {
  Certificate: String
  CertificateChain: String
}

input AwsACMPCAImportCertificateAuthorityCertificateInput {
  CertificateAuthorityArn: String!
  Certificate: JSON!
  CertificateChain: JSON
}

input AwsACMPCAIssueCertificateInput {
  CertificateAuthorityArn: String!
  Csr: JSON!
  SigningAlgorithm: String!
  TemplateArn: String
  Validity: AwsACMPCAIssueCertificateValidityInput!
  IdempotencyToken: String
}

type AwsACMPCAIssueCertificateOutput {
  CertificateArn: String
}

input AwsACMPCAIssueCertificateValidityInput {
  Value: JSON!
  Type: String!
}

input AwsACMPCAListCertificateAuthoritiesInput {
  NextToken: String
  MaxResults: Int
}

type AwsACMPCAListCertificateAuthoritiesOutput {
  CertificateAuthorities: [AwsACMPCAS17]
  NextToken: String
}

input AwsACMPCAListPermissionsInput {
  CertificateAuthorityArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsACMPCAListPermissionsOutput {
  Permissions: [AwsACMPCAListPermissionsOutputPermissions]
  NextToken: String
}

type AwsACMPCAListPermissionsOutputPermissions {
  CertificateAuthorityArn: String
  CreatedAt: Date
  Principal: String
  SourceAccount: String
  Actions: [String]
  Policy: String
}

input AwsACMPCAListTagsInput {
  CertificateAuthorityArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsACMPCAListTagsOutput {
  Tags: [AwsACMPCASm]
  NextToken: String
}

input AwsACMPCARestoreCertificateAuthorityInput {
  CertificateAuthorityArn: String!
}

input AwsACMPCARevokeCertificateInput {
  CertificateAuthorityArn: String!
  CertificateSerial: String!
  RevocationReason: String!
}

type AwsACMPCAS17 {
  Arn: String
  CreatedAt: Date
  LastStateChangeAt: Date
  Type: String
  Serial: String
  Status: String
  NotBefore: Date
  NotAfter: Date
  FailureReason: String
  CertificateAuthorityConfiguration: AwsACMPCAS2
  RevocationConfiguration: AwsACMPCASe
  RestorableUntil: Date
}

type AwsACMPCAS2 {
  KeyAlgorithm: String!
  SigningAlgorithm: String!
  Subject: AwsACMPCAS2Subject!
}

input AwsACMPCAS2Input {
  KeyAlgorithm: String!
  SigningAlgorithm: String!
  Subject: AwsACMPCAS2SubjectInput!
}

type AwsACMPCAS2Subject {
  Country: String
  Organization: String
  OrganizationalUnit: String
  DistinguishedNameQualifier: String
  State: String
  CommonName: String
  SerialNumber: String
  Locality: String
  Title: String
  Surname: String
  GivenName: String
  Initials: String
  Pseudonym: String
  GenerationQualifier: String
}

input AwsACMPCAS2SubjectInput {
  Country: String
  Organization: String
  OrganizationalUnit: String
  DistinguishedNameQualifier: String
  State: String
  CommonName: String
  SerialNumber: String
  Locality: String
  Title: String
  Surname: String
  GivenName: String
  Initials: String
  Pseudonym: String
  GenerationQualifier: String
}

type AwsACMPCASe {
  CrlConfiguration: AwsACMPCASeCrlConfiguration
}

type AwsACMPCASeCrlConfiguration {
  Enabled: Boolean!
  ExpirationInDays: Int
  CustomCname: String
  S3BucketName: String
}

input AwsACMPCASeCrlConfigurationInput {
  Enabled: Boolean!
  ExpirationInDays: Int
  CustomCname: String
  S3BucketName: String
}

input AwsACMPCASeInput {
  CrlConfiguration: AwsACMPCASeCrlConfigurationInput
}

type AwsACMPCASm {
  Key: String!
  Value: String
}

input AwsACMPCASmInput {
  Key: String!
  Value: String
}

input AwsACMPCATagCertificateAuthorityInput {
  CertificateAuthorityArn: String!
  Tags: [AwsACMPCASmInput]!
}

input AwsACMPCAUntagCertificateAuthorityInput {
  CertificateAuthorityArn: String!
  Tags: [AwsACMPCASmInput]!
}

input AwsACMPCAUpdateCertificateAuthorityInput {
  CertificateAuthorityArn: String!
  RevocationConfiguration: AwsACMPCASeInput
  Status: String
}

input AwsACMRemoveTagsFromCertificateInput {
  CertificateArn: String!
  Tags: [AwsACMS3Input]!
}

input AwsACMRenewCertificateInput {
  CertificateArn: String!
}

input AwsACMRequestCertificateDomainValidationOptionsInput {
  DomainName: String!
  ValidationDomain: String!
}

input AwsACMRequestCertificateInput {
  DomainName: String!
  ValidationMethod: String
  SubjectAlternativeNames: [String]
  IdempotencyToken: String
  DomainValidationOptions: [AwsACMRequestCertificateDomainValidationOptionsInput]
  Options: AwsACMS11Input
  CertificateAuthorityArn: String
}

type AwsACMRequestCertificateOutput {
  CertificateArn: String
}

input AwsACMResendValidationEmailInput {
  CertificateArn: String!
  Domain: String!
  ValidationDomain: String!
}

type AwsACMS11 {
  CertificateTransparencyLoggingPreference: String
}

input AwsACMS11Input {
  CertificateTransparencyLoggingPreference: String
}

type AwsACMS3 {
  Key: String!
  Value: String
}

input AwsACMS3Input {
  Key: String!
  Value: String
}

type AwsACMSd {
  DomainName: String!
  ValidationEmails: [String]
  ValidationDomain: String
  ValidationStatus: String
  ResourceRecord: AwsACMSdResourceRecord
  ValidationMethod: String
}

type AwsACMSdResourceRecord {
  Name: String!
  Type: String!
  Value: String!
}

input AwsACMUpdateCertificateOptionsInput {
  CertificateArn: String!
  Options: AwsACMS11Input!
}

"""Alexa For Business (2017-11-09)"""
type AwsAlexaForBusiness {
  approveSkill(input: AwsAlexaForBusinessApproveSkillInput!, config: AwsConfig): JSON
  associateContactWithAddressBook(input: AwsAlexaForBusinessAssociateContactWithAddressBookInput!, config: AwsConfig): JSON
  associateDeviceWithNetworkProfile(input: AwsAlexaForBusinessAssociateDeviceWithNetworkProfileInput!, config: AwsConfig): JSON
  associateDeviceWithRoom(input: AwsAlexaForBusinessAssociateDeviceWithRoomInput, config: AwsConfig): JSON
  associateSkillGroupWithRoom(input: AwsAlexaForBusinessAssociateSkillGroupWithRoomInput, config: AwsConfig): JSON
  associateSkillWithSkillGroup(input: AwsAlexaForBusinessAssociateSkillWithSkillGroupInput!, config: AwsConfig): JSON
  associateSkillWithUsers(input: AwsAlexaForBusinessAssociateSkillWithUsersInput!, config: AwsConfig): JSON
  createAddressBook(input: AwsAlexaForBusinessCreateAddressBookInput!, config: AwsConfig): AwsAlexaForBusinessCreateAddressBookOutput
  createBusinessReportSchedule(input: AwsAlexaForBusinessCreateBusinessReportScheduleInput!, config: AwsConfig): AwsAlexaForBusinessCreateBusinessReportScheduleOutput
  createConferenceProvider(input: AwsAlexaForBusinessCreateConferenceProviderInput!, config: AwsConfig): AwsAlexaForBusinessCreateConferenceProviderOutput
  createContact(input: AwsAlexaForBusinessCreateContactInput!, config: AwsConfig): AwsAlexaForBusinessCreateContactOutput
  createGatewayGroup(input: AwsAlexaForBusinessCreateGatewayGroupInput!, config: AwsConfig): AwsAlexaForBusinessCreateGatewayGroupOutput
  createNetworkProfile(input: AwsAlexaForBusinessCreateNetworkProfileInput!, config: AwsConfig): AwsAlexaForBusinessCreateNetworkProfileOutput
  createProfile(input: AwsAlexaForBusinessCreateProfileInput!, config: AwsConfig): AwsAlexaForBusinessCreateProfileOutput
  createRoom(input: AwsAlexaForBusinessCreateRoomInput!, config: AwsConfig): AwsAlexaForBusinessCreateRoomOutput
  createSkillGroup(input: AwsAlexaForBusinessCreateSkillGroupInput!, config: AwsConfig): AwsAlexaForBusinessCreateSkillGroupOutput
  createUser(input: AwsAlexaForBusinessCreateUserInput!, config: AwsConfig): AwsAlexaForBusinessCreateUserOutput
  deleteAddressBook(input: AwsAlexaForBusinessDeleteAddressBookInput!, config: AwsConfig): JSON
  deleteBusinessReportSchedule(input: AwsAlexaForBusinessDeleteBusinessReportScheduleInput!, config: AwsConfig): JSON
  deleteConferenceProvider(input: AwsAlexaForBusinessDeleteConferenceProviderInput!, config: AwsConfig): JSON
  deleteContact(input: AwsAlexaForBusinessDeleteContactInput!, config: AwsConfig): JSON
  deleteDevice(input: AwsAlexaForBusinessDeleteDeviceInput!, config: AwsConfig): JSON
  deleteDeviceUsageData(input: AwsAlexaForBusinessDeleteDeviceUsageDataInput!, config: AwsConfig): JSON
  deleteGatewayGroup(input: AwsAlexaForBusinessDeleteGatewayGroupInput!, config: AwsConfig): JSON
  deleteNetworkProfile(input: AwsAlexaForBusinessDeleteNetworkProfileInput!, config: AwsConfig): JSON
  deleteProfile(input: AwsAlexaForBusinessDeleteProfileInput, config: AwsConfig): JSON
  deleteRoom(input: AwsAlexaForBusinessDeleteRoomInput, config: AwsConfig): JSON
  deleteRoomSkillParameter(input: AwsAlexaForBusinessDeleteRoomSkillParameterInput!, config: AwsConfig): JSON
  deleteSkillAuthorization(input: AwsAlexaForBusinessDeleteSkillAuthorizationInput!, config: AwsConfig): JSON
  deleteSkillGroup(input: AwsAlexaForBusinessDeleteSkillGroupInput, config: AwsConfig): JSON
  deleteUser(input: AwsAlexaForBusinessDeleteUserInput!, config: AwsConfig): JSON
  disassociateContactFromAddressBook(input: AwsAlexaForBusinessDisassociateContactFromAddressBookInput!, config: AwsConfig): JSON
  disassociateDeviceFromRoom(input: AwsAlexaForBusinessDisassociateDeviceFromRoomInput, config: AwsConfig): JSON
  disassociateSkillFromSkillGroup(input: AwsAlexaForBusinessDisassociateSkillFromSkillGroupInput!, config: AwsConfig): JSON
  disassociateSkillFromUsers(input: AwsAlexaForBusinessDisassociateSkillFromUsersInput!, config: AwsConfig): JSON
  disassociateSkillGroupFromRoom(input: AwsAlexaForBusinessDisassociateSkillGroupFromRoomInput, config: AwsConfig): JSON
  forgetSmartHomeAppliances(input: AwsAlexaForBusinessForgetSmartHomeAppliancesInput!, config: AwsConfig): JSON
  getAddressBook(input: AwsAlexaForBusinessGetAddressBookInput!, config: AwsConfig): AwsAlexaForBusinessGetAddressBookOutput
  getConferencePreference(input: JSON, config: AwsConfig): AwsAlexaForBusinessGetConferencePreferenceOutput
  getConferenceProvider(input: AwsAlexaForBusinessGetConferenceProviderInput!, config: AwsConfig): AwsAlexaForBusinessGetConferenceProviderOutput
  getContact(input: AwsAlexaForBusinessGetContactInput!, config: AwsConfig): AwsAlexaForBusinessGetContactOutput
  getDevice(input: AwsAlexaForBusinessGetDeviceInput, config: AwsConfig): AwsAlexaForBusinessGetDeviceOutput
  getGateway(input: AwsAlexaForBusinessGetGatewayInput!, config: AwsConfig): AwsAlexaForBusinessGetGatewayOutput
  getGatewayGroup(input: AwsAlexaForBusinessGetGatewayGroupInput!, config: AwsConfig): AwsAlexaForBusinessGetGatewayGroupOutput
  getInvitationConfiguration(input: JSON, config: AwsConfig): AwsAlexaForBusinessGetInvitationConfigurationOutput
  getNetworkProfile(input: AwsAlexaForBusinessGetNetworkProfileInput!, config: AwsConfig): AwsAlexaForBusinessGetNetworkProfileOutput
  getProfile(input: AwsAlexaForBusinessGetProfileInput, config: AwsConfig): AwsAlexaForBusinessGetProfileOutput
  getRoom(input: AwsAlexaForBusinessGetRoomInput, config: AwsConfig): AwsAlexaForBusinessGetRoomOutput
  getRoomSkillParameter(input: AwsAlexaForBusinessGetRoomSkillParameterInput!, config: AwsConfig): AwsAlexaForBusinessGetRoomSkillParameterOutput
  getSkillGroup(input: AwsAlexaForBusinessGetSkillGroupInput, config: AwsConfig): AwsAlexaForBusinessGetSkillGroupOutput
  listBusinessReportSchedules(input: AwsAlexaForBusinessListBusinessReportSchedulesInput, config: AwsConfig): AwsAlexaForBusinessListBusinessReportSchedulesOutput
  listConferenceProviders(input: AwsAlexaForBusinessListConferenceProvidersInput, config: AwsConfig): AwsAlexaForBusinessListConferenceProvidersOutput
  listDeviceEvents(input: AwsAlexaForBusinessListDeviceEventsInput!, config: AwsConfig): AwsAlexaForBusinessListDeviceEventsOutput
  listGatewayGroups(input: AwsAlexaForBusinessListGatewayGroupsInput, config: AwsConfig): AwsAlexaForBusinessListGatewayGroupsOutput
  listGateways(input: AwsAlexaForBusinessListGatewaysInput, config: AwsConfig): AwsAlexaForBusinessListGatewaysOutput
  listSkills(input: AwsAlexaForBusinessListSkillsInput, config: AwsConfig): AwsAlexaForBusinessListSkillsOutput
  listSkillsStoreCategories(input: AwsAlexaForBusinessListSkillsStoreCategoriesInput, config: AwsConfig): AwsAlexaForBusinessListSkillsStoreCategoriesOutput
  listSkillsStoreSkillsByCategory(input: AwsAlexaForBusinessListSkillsStoreSkillsByCategoryInput!, config: AwsConfig): AwsAlexaForBusinessListSkillsStoreSkillsByCategoryOutput
  listSmartHomeAppliances(input: AwsAlexaForBusinessListSmartHomeAppliancesInput!, config: AwsConfig): AwsAlexaForBusinessListSmartHomeAppliancesOutput
  listTags(input: AwsAlexaForBusinessListTagsInput!, config: AwsConfig): AwsAlexaForBusinessListTagsOutput
  putConferencePreference(input: AwsAlexaForBusinessPutConferencePreferenceInput!, config: AwsConfig): JSON
  putInvitationConfiguration(input: AwsAlexaForBusinessPutInvitationConfigurationInput!, config: AwsConfig): JSON
  putRoomSkillParameter(input: AwsAlexaForBusinessPutRoomSkillParameterInput!, config: AwsConfig): JSON
  putSkillAuthorization(input: AwsAlexaForBusinessPutSkillAuthorizationInput!, config: AwsConfig): JSON
  registerAVSDevice(input: AwsAlexaForBusinessRegisterAVSDeviceInput!, config: AwsConfig): AwsAlexaForBusinessRegisterAVSDeviceOutput
  rejectSkill(input: AwsAlexaForBusinessRejectSkillInput!, config: AwsConfig): JSON
  resolveRoom(input: AwsAlexaForBusinessResolveRoomInput!, config: AwsConfig): AwsAlexaForBusinessResolveRoomOutput
  revokeInvitation(input: AwsAlexaForBusinessRevokeInvitationInput, config: AwsConfig): JSON
  searchAddressBooks(input: AwsAlexaForBusinessSearchAddressBooksInput, config: AwsConfig): AwsAlexaForBusinessSearchAddressBooksOutput
  searchContacts(input: AwsAlexaForBusinessSearchContactsInput, config: AwsConfig): AwsAlexaForBusinessSearchContactsOutput
  searchDevices(input: AwsAlexaForBusinessSearchDevicesInput, config: AwsConfig): AwsAlexaForBusinessSearchDevicesOutput
  searchNetworkProfiles(input: AwsAlexaForBusinessSearchNetworkProfilesInput, config: AwsConfig): AwsAlexaForBusinessSearchNetworkProfilesOutput
  searchProfiles(input: AwsAlexaForBusinessSearchProfilesInput, config: AwsConfig): AwsAlexaForBusinessSearchProfilesOutput
  searchRooms(input: AwsAlexaForBusinessSearchRoomsInput, config: AwsConfig): AwsAlexaForBusinessSearchRoomsOutput
  searchSkillGroups(input: AwsAlexaForBusinessSearchSkillGroupsInput, config: AwsConfig): AwsAlexaForBusinessSearchSkillGroupsOutput
  searchUsers(input: AwsAlexaForBusinessSearchUsersInput, config: AwsConfig): AwsAlexaForBusinessSearchUsersOutput
  sendAnnouncement(input: AwsAlexaForBusinessSendAnnouncementInput!, config: AwsConfig): AwsAlexaForBusinessSendAnnouncementOutput
  sendInvitation(input: AwsAlexaForBusinessSendInvitationInput, config: AwsConfig): JSON
  startDeviceSync(input: AwsAlexaForBusinessStartDeviceSyncInput!, config: AwsConfig): JSON
  startSmartHomeApplianceDiscovery(input: AwsAlexaForBusinessStartSmartHomeApplianceDiscoveryInput!, config: AwsConfig): JSON
  tagResource(input: AwsAlexaForBusinessTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsAlexaForBusinessUntagResourceInput!, config: AwsConfig): JSON
  updateAddressBook(input: AwsAlexaForBusinessUpdateAddressBookInput!, config: AwsConfig): JSON
  updateBusinessReportSchedule(input: AwsAlexaForBusinessUpdateBusinessReportScheduleInput!, config: AwsConfig): JSON
  updateConferenceProvider(input: AwsAlexaForBusinessUpdateConferenceProviderInput!, config: AwsConfig): JSON
  updateContact(input: AwsAlexaForBusinessUpdateContactInput!, config: AwsConfig): JSON
  updateDevice(input: AwsAlexaForBusinessUpdateDeviceInput, config: AwsConfig): JSON
  updateGateway(input: AwsAlexaForBusinessUpdateGatewayInput!, config: AwsConfig): JSON
  updateGatewayGroup(input: AwsAlexaForBusinessUpdateGatewayGroupInput!, config: AwsConfig): JSON
  updateNetworkProfile(input: AwsAlexaForBusinessUpdateNetworkProfileInput!, config: AwsConfig): JSON
  updateProfile(input: AwsAlexaForBusinessUpdateProfileInput, config: AwsConfig): JSON
  updateRoom(input: AwsAlexaForBusinessUpdateRoomInput, config: AwsConfig): JSON
  updateSkillGroup(input: AwsAlexaForBusinessUpdateSkillGroupInput, config: AwsConfig): JSON
}

input AwsAlexaForBusinessApproveSkillInput {
  SkillId: String!
}

input AwsAlexaForBusinessAssociateContactWithAddressBookInput {
  ContactArn: String!
  AddressBookArn: String!
}

input AwsAlexaForBusinessAssociateDeviceWithNetworkProfileInput {
  DeviceArn: String!
  NetworkProfileArn: String!
}

input AwsAlexaForBusinessAssociateDeviceWithRoomInput {
  DeviceArn: String
  RoomArn: String
}

input AwsAlexaForBusinessAssociateSkillGroupWithRoomInput {
  SkillGroupArn: String
  RoomArn: String
}

input AwsAlexaForBusinessAssociateSkillWithSkillGroupInput {
  SkillGroupArn: String
  SkillId: String!
}

input AwsAlexaForBusinessAssociateSkillWithUsersInput {
  SkillId: String!
}

input AwsAlexaForBusinessCreateAddressBookInput {
  Name: String!
  Description: String
  ClientRequestToken: String
}

type AwsAlexaForBusinessCreateAddressBookOutput {
  AddressBookArn: String
}

input AwsAlexaForBusinessCreateBusinessReportScheduleInput {
  ScheduleName: String
  S3BucketName: String
  S3KeyPrefix: String
  Format: String!
  ContentRange: AwsAlexaForBusinessSrInput!
  Recurrence: AwsAlexaForBusinessStInput
  ClientRequestToken: String
}

type AwsAlexaForBusinessCreateBusinessReportScheduleOutput {
  ScheduleArn: String
}

input AwsAlexaForBusinessCreateConferenceProviderInput {
  ConferenceProviderName: String!
  ConferenceProviderType: String!
  IPDialIn: AwsAlexaForBusinessSzInput
  PSTNDialIn: AwsAlexaForBusinessS12Input
  MeetingSetting: AwsAlexaForBusinessS17Input!
  ClientRequestToken: String
}

type AwsAlexaForBusinessCreateConferenceProviderOutput {
  ConferenceProviderArn: String
}

input AwsAlexaForBusinessCreateContactInput {
  DisplayName: String
  FirstName: String!
  LastName: String
  PhoneNumber: String
  PhoneNumbers: [AwsAlexaForBusinessS1dInput]
  SipAddresses: [AwsAlexaForBusinessS1gInput]
  ClientRequestToken: String
}

type AwsAlexaForBusinessCreateContactOutput {
  ContactArn: String
}

input AwsAlexaForBusinessCreateGatewayGroupInput {
  Name: String!
  Description: String
  ClientRequestToken: String!
}

type AwsAlexaForBusinessCreateGatewayGroupOutput {
  GatewayGroupArn: String
}

input AwsAlexaForBusinessCreateNetworkProfileInput {
  NetworkProfileName: String!
  Description: String
  Ssid: String!
  SecurityType: String!
  EapMethod: String
  CurrentPassword: String
  NextPassword: String
  CertificateAuthorityArn: String
  TrustAnchors: [String]
  ClientRequestToken: String!
}

type AwsAlexaForBusinessCreateNetworkProfileOutput {
  NetworkProfileArn: String
}

input AwsAlexaForBusinessCreateProfileInput {
  ProfileName: String!
  Timezone: String!
  Address: String!
  DistanceUnit: String!
  TemperatureUnit: String!
  WakeWord: String!
  ClientRequestToken: String
  SetupModeDisabled: Boolean
  MaxVolumeLimit: Int
  PSTNEnabled: Boolean
}

type AwsAlexaForBusinessCreateProfileOutput {
  ProfileArn: String
}

input AwsAlexaForBusinessCreateRoomInput {
  RoomName: String!
  Description: String
  ProfileArn: String
  ProviderCalendarId: String
  ClientRequestToken: String
  Tags: [AwsAlexaForBusinessS2eInput]
}

type AwsAlexaForBusinessCreateRoomOutput {
  RoomArn: String
}

input AwsAlexaForBusinessCreateSkillGroupInput {
  SkillGroupName: String!
  Description: String
  ClientRequestToken: String
}

type AwsAlexaForBusinessCreateSkillGroupOutput {
  SkillGroupArn: String
}

input AwsAlexaForBusinessCreateUserInput {
  UserId: String!
  FirstName: String
  LastName: String
  Email: String
  ClientRequestToken: String
  Tags: [AwsAlexaForBusinessS2eInput]
}

type AwsAlexaForBusinessCreateUserOutput {
  UserArn: String
}

input AwsAlexaForBusinessDeleteAddressBookInput {
  AddressBookArn: String!
}

input AwsAlexaForBusinessDeleteBusinessReportScheduleInput {
  ScheduleArn: String!
}

input AwsAlexaForBusinessDeleteConferenceProviderInput {
  ConferenceProviderArn: String!
}

input AwsAlexaForBusinessDeleteContactInput {
  ContactArn: String!
}

input AwsAlexaForBusinessDeleteDeviceInput {
  DeviceArn: String!
}

input AwsAlexaForBusinessDeleteDeviceUsageDataInput {
  DeviceArn: String!
  DeviceUsageType: String!
}

input AwsAlexaForBusinessDeleteGatewayGroupInput {
  GatewayGroupArn: String!
}

input AwsAlexaForBusinessDeleteNetworkProfileInput {
  NetworkProfileArn: String!
}

input AwsAlexaForBusinessDeleteProfileInput {
  ProfileArn: String
}

input AwsAlexaForBusinessDeleteRoomInput {
  RoomArn: String
}

input AwsAlexaForBusinessDeleteRoomSkillParameterInput {
  RoomArn: String
  SkillId: String!
  ParameterKey: String!
}

input AwsAlexaForBusinessDeleteSkillAuthorizationInput {
  SkillId: String!
  RoomArn: String
}

input AwsAlexaForBusinessDeleteSkillGroupInput {
  SkillGroupArn: String
}

input AwsAlexaForBusinessDeleteUserInput {
  UserArn: String
  EnrollmentId: String!
}

input AwsAlexaForBusinessDisassociateContactFromAddressBookInput {
  ContactArn: String!
  AddressBookArn: String!
}

input AwsAlexaForBusinessDisassociateDeviceFromRoomInput {
  DeviceArn: String
}

input AwsAlexaForBusinessDisassociateSkillFromSkillGroupInput {
  SkillGroupArn: String
  SkillId: String!
}

input AwsAlexaForBusinessDisassociateSkillFromUsersInput {
  SkillId: String!
}

input AwsAlexaForBusinessDisassociateSkillGroupFromRoomInput {
  SkillGroupArn: String
  RoomArn: String
}

input AwsAlexaForBusinessForgetSmartHomeAppliancesInput {
  RoomArn: String!
}

input AwsAlexaForBusinessGetAddressBookInput {
  AddressBookArn: String!
}

type AwsAlexaForBusinessGetAddressBookOutput {
  AddressBook: AwsAlexaForBusinessGetAddressBookOutputAddressBook
}

type AwsAlexaForBusinessGetAddressBookOutputAddressBook {
  AddressBookArn: String
  Name: String
  Description: String
}

type AwsAlexaForBusinessGetConferencePreferenceOutput {
  Preference: AwsAlexaForBusinessS45
}

input AwsAlexaForBusinessGetConferenceProviderInput {
  ConferenceProviderArn: String!
}

type AwsAlexaForBusinessGetConferenceProviderOutput {
  ConferenceProvider: AwsAlexaForBusinessS48
}

input AwsAlexaForBusinessGetContactInput {
  ContactArn: String!
}

type AwsAlexaForBusinessGetContactOutput {
  Contact: AwsAlexaForBusinessGetContactOutputContact
}

type AwsAlexaForBusinessGetContactOutputContact {
  ContactArn: String
  DisplayName: String
  FirstName: String
  LastName: String
  PhoneNumber: String
  PhoneNumbers: [AwsAlexaForBusinessS1d]
  SipAddresses: [AwsAlexaForBusinessS1g]
}

input AwsAlexaForBusinessGetDeviceInput {
  DeviceArn: String
}

type AwsAlexaForBusinessGetDeviceOutput {
  Device: AwsAlexaForBusinessGetDeviceOutputDevice
}

type AwsAlexaForBusinessGetDeviceOutputDevice {
  DeviceArn: String
  DeviceSerialNumber: String
  DeviceType: String
  DeviceName: String
  SoftwareVersion: String
  MacAddress: String
  RoomArn: String
  DeviceStatus: String
  DeviceStatusInfo: AwsAlexaForBusinessS4l
  NetworkProfileInfo: AwsAlexaForBusinessGetDeviceOutputDeviceNetworkProfileInfo
}

type AwsAlexaForBusinessGetDeviceOutputDeviceNetworkProfileInfo {
  NetworkProfileArn: String
  CertificateArn: String
  CertificateExpirationTime: Date
}

input AwsAlexaForBusinessGetGatewayGroupInput {
  GatewayGroupArn: String!
}

type AwsAlexaForBusinessGetGatewayGroupOutput {
  GatewayGroup: AwsAlexaForBusinessGetGatewayGroupOutputGatewayGroup
}

type AwsAlexaForBusinessGetGatewayGroupOutputGatewayGroup {
  Arn: String
  Name: String
  Description: String
}

input AwsAlexaForBusinessGetGatewayInput {
  GatewayArn: String!
}

type AwsAlexaForBusinessGetGatewayOutput {
  Gateway: AwsAlexaForBusinessGetGatewayOutputGateway
}

type AwsAlexaForBusinessGetGatewayOutputGateway {
  Arn: String
  Name: String
  Description: String
  GatewayGroupArn: String
  SoftwareVersion: String
}

type AwsAlexaForBusinessGetInvitationConfigurationOutput {
  OrganizationName: String
  ContactEmail: String
  PrivateSkillIds: [String]
}

input AwsAlexaForBusinessGetNetworkProfileInput {
  NetworkProfileArn: String!
}

type AwsAlexaForBusinessGetNetworkProfileOutput {
  NetworkProfile: AwsAlexaForBusinessGetNetworkProfileOutputNetworkProfile
}

type AwsAlexaForBusinessGetNetworkProfileOutputNetworkProfile {
  NetworkProfileArn: String
  NetworkProfileName: String
  Description: String
  Ssid: String
  SecurityType: String
  EapMethod: String
  CurrentPassword: String
  NextPassword: String
  CertificateAuthorityArn: String
  TrustAnchors: [String]
}

input AwsAlexaForBusinessGetProfileInput {
  ProfileArn: String
}

type AwsAlexaForBusinessGetProfileOutput {
  Profile: AwsAlexaForBusinessGetProfileOutputProfile
}

type AwsAlexaForBusinessGetProfileOutputProfile {
  ProfileArn: String
  ProfileName: String
  IsDefault: Boolean
  Address: String
  Timezone: String
  DistanceUnit: String
  TemperatureUnit: String
  WakeWord: String
  SetupModeDisabled: Boolean
  MaxVolumeLimit: Int
  PSTNEnabled: Boolean
  AddressBookArn: String
}

input AwsAlexaForBusinessGetRoomInput {
  RoomArn: String
}

type AwsAlexaForBusinessGetRoomOutput {
  Room: AwsAlexaForBusinessGetRoomOutputRoom
}

type AwsAlexaForBusinessGetRoomOutputRoom {
  RoomArn: String
  RoomName: String
  Description: String
  ProviderCalendarId: String
  ProfileArn: String
}

input AwsAlexaForBusinessGetRoomSkillParameterInput {
  RoomArn: String
  SkillId: String!
  ParameterKey: String!
}

type AwsAlexaForBusinessGetRoomSkillParameterOutput {
  RoomSkillParameter: AwsAlexaForBusinessS5h
}

input AwsAlexaForBusinessGetSkillGroupInput {
  SkillGroupArn: String
}

type AwsAlexaForBusinessGetSkillGroupOutput {
  SkillGroup: AwsAlexaForBusinessGetSkillGroupOutputSkillGroup
}

type AwsAlexaForBusinessGetSkillGroupOutputSkillGroup {
  SkillGroupArn: String
  SkillGroupName: String
  Description: String
}

input AwsAlexaForBusinessListBusinessReportSchedulesInput {
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessListBusinessReportSchedulesOutput {
  BusinessReportSchedules: [AwsAlexaForBusinessListBusinessReportSchedulesOutputBusinessReportSchedules]
  NextToken: String
}

type AwsAlexaForBusinessListBusinessReportSchedulesOutputBusinessReportSchedules {
  ScheduleArn: String
  ScheduleName: String
  S3BucketName: String
  S3KeyPrefix: String
  Format: String
  ContentRange: AwsAlexaForBusinessSr
  Recurrence: AwsAlexaForBusinessSt
  LastBusinessReport: AwsAlexaForBusinessListBusinessReportSchedulesOutputBusinessReportSchedulesLastBusinessReport
}

type AwsAlexaForBusinessListBusinessReportSchedulesOutputBusinessReportSchedulesLastBusinessReport {
  Status: String
  FailureCode: String
  S3Location: AwsAlexaForBusinessListBusinessReportSchedulesOutputBusinessReportSchedulesLastBusinessReportS3Location
  DeliveryTime: Date
  DownloadUrl: String
}

type AwsAlexaForBusinessListBusinessReportSchedulesOutputBusinessReportSchedulesLastBusinessReportS3Location {
  Path: String
  BucketName: String
}

input AwsAlexaForBusinessListConferenceProvidersInput {
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessListConferenceProvidersOutput {
  ConferenceProviders: [AwsAlexaForBusinessS48]
  NextToken: String
}

input AwsAlexaForBusinessListDeviceEventsInput {
  DeviceArn: String!
  EventType: String
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessListDeviceEventsOutput {
  DeviceEvents: [AwsAlexaForBusinessListDeviceEventsOutputDeviceEvents]
  NextToken: String
}

type AwsAlexaForBusinessListDeviceEventsOutputDeviceEvents {
  Type: String
  Value: String
  Timestamp: Date
}

input AwsAlexaForBusinessListGatewayGroupsInput {
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessListGatewayGroupsOutput {
  GatewayGroups: [AwsAlexaForBusinessListGatewayGroupsOutputGatewayGroups]
  NextToken: String
}

type AwsAlexaForBusinessListGatewayGroupsOutputGatewayGroups {
  Arn: String
  Name: String
  Description: String
}

input AwsAlexaForBusinessListGatewaysInput {
  GatewayGroupArn: String
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessListGatewaysOutput {
  Gateways: [AwsAlexaForBusinessListGatewaysOutputGateways]
  NextToken: String
}

type AwsAlexaForBusinessListGatewaysOutputGateways {
  Arn: String
  Name: String
  Description: String
  GatewayGroupArn: String
  SoftwareVersion: String
}

input AwsAlexaForBusinessListSkillsInput {
  SkillGroupArn: String
  EnablementType: String
  SkillType: String
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessListSkillsOutput {
  SkillSummaries: [AwsAlexaForBusinessListSkillsOutputSkillSummaries]
  NextToken: String
}

type AwsAlexaForBusinessListSkillsOutputSkillSummaries {
  SkillId: String
  SkillName: String
  SupportsLinking: Boolean
  EnablementType: String
  SkillType: String
}

input AwsAlexaForBusinessListSkillsStoreCategoriesInput {
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessListSkillsStoreCategoriesOutput {
  CategoryList: [AwsAlexaForBusinessListSkillsStoreCategoriesOutputCategoryList]
  NextToken: String
}

type AwsAlexaForBusinessListSkillsStoreCategoriesOutputCategoryList {
  CategoryId: JSON
  CategoryName: String
}

input AwsAlexaForBusinessListSkillsStoreSkillsByCategoryInput {
  CategoryId: JSON!
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessListSkillsStoreSkillsByCategoryOutput {
  SkillsStoreSkills: [AwsAlexaForBusinessListSkillsStoreSkillsByCategoryOutputSkillsStoreSkills]
  NextToken: String
}

type AwsAlexaForBusinessListSkillsStoreSkillsByCategoryOutputSkillsStoreSkills {
  SkillId: String
  SkillName: String
  ShortDescription: String
  IconUrl: String
  SampleUtterances: [String]
  SkillDetails: AwsAlexaForBusinessListSkillsStoreSkillsByCategoryOutputSkillsStoreSkillsSkillDetails
  SupportsLinking: Boolean
}

type AwsAlexaForBusinessListSkillsStoreSkillsByCategoryOutputSkillsStoreSkillsSkillDetails {
  ProductDescription: String
  InvocationPhrase: String
  ReleaseDate: String
  EndUserLicenseAgreement: String
  GenericKeywords: [String]
  BulletPoints: [String]
  NewInThisVersionBulletPoints: [String]
  SkillTypes: [String]
  Reviews: JSON
  DeveloperInfo: AwsAlexaForBusinessListSkillsStoreSkillsByCategoryOutputSkillsStoreSkillsSkillDetailsDeveloperInfo
}

type AwsAlexaForBusinessListSkillsStoreSkillsByCategoryOutputSkillsStoreSkillsSkillDetailsDeveloperInfo {
  DeveloperName: String
  PrivacyPolicy: String
  Email: String
  Url: String
}

input AwsAlexaForBusinessListSmartHomeAppliancesInput {
  RoomArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsAlexaForBusinessListSmartHomeAppliancesOutput {
  SmartHomeAppliances: [AwsAlexaForBusinessListSmartHomeAppliancesOutputSmartHomeAppliances]
  NextToken: String
}

type AwsAlexaForBusinessListSmartHomeAppliancesOutputSmartHomeAppliances {
  FriendlyName: String
  Description: String
  ManufacturerName: String
}

input AwsAlexaForBusinessListTagsInput {
  Arn: String!
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessListTagsOutput {
  Tags: [AwsAlexaForBusinessS2e]
  NextToken: String
}

input AwsAlexaForBusinessPutConferencePreferenceInput {
  ConferencePreference: AwsAlexaForBusinessS45Input!
}

input AwsAlexaForBusinessPutInvitationConfigurationInput {
  OrganizationName: String!
  ContactEmail: String
  PrivateSkillIds: [String]
}

input AwsAlexaForBusinessPutRoomSkillParameterInput {
  RoomArn: String
  SkillId: String!
  RoomSkillParameter: AwsAlexaForBusinessS5hInput!
}

input AwsAlexaForBusinessPutSkillAuthorizationInput {
  AuthorizationResult: JSON!
  SkillId: String!
  RoomArn: String
}

input AwsAlexaForBusinessRegisterAVSDeviceInput {
  ClientId: String!
  UserCode: String!
  ProductId: String!
  DeviceSerialNumber: String!
  AmazonId: String!
}

type AwsAlexaForBusinessRegisterAVSDeviceOutput {
  DeviceArn: String
}

input AwsAlexaForBusinessRejectSkillInput {
  SkillId: String!
}

input AwsAlexaForBusinessResolveRoomInput {
  UserId: String!
  SkillId: String!
}

type AwsAlexaForBusinessResolveRoomOutput {
  RoomArn: String
  RoomName: String
  RoomSkillParameters: [AwsAlexaForBusinessS5h]
}

input AwsAlexaForBusinessRevokeInvitationInput {
  UserArn: String
  EnrollmentId: String
}

type AwsAlexaForBusinessS12 {
  CountryCode: String!
  PhoneNumber: String!
  OneClickIdDelay: String!
  OneClickPinDelay: String!
}

input AwsAlexaForBusinessS12Input {
  CountryCode: String!
  PhoneNumber: String!
  OneClickIdDelay: String!
  OneClickPinDelay: String!
}

type AwsAlexaForBusinessS17 {
  RequirePin: String!
}

input AwsAlexaForBusinessS17Input {
  RequirePin: String!
}

type AwsAlexaForBusinessS1d {
  Number: String!
  Type: String!
}

input AwsAlexaForBusinessS1dInput {
  Number: String!
  Type: String!
}

type AwsAlexaForBusinessS1g {
  Uri: String!
  Type: String!
}

input AwsAlexaForBusinessS1gInput {
  Uri: String!
  Type: String!
}

type AwsAlexaForBusinessS2e {
  Key: String!
  Value: String!
}

input AwsAlexaForBusinessS2eInput {
  Key: String!
  Value: String!
}

type AwsAlexaForBusinessS45 {
  DefaultConferenceProviderArn: String
}

input AwsAlexaForBusinessS45Input {
  DefaultConferenceProviderArn: String
}

type AwsAlexaForBusinessS48 {
  Arn: String
  Name: String
  Type: String
  IPDialIn: AwsAlexaForBusinessSz
  PSTNDialIn: AwsAlexaForBusinessS12
  MeetingSetting: AwsAlexaForBusinessS17
}

type AwsAlexaForBusinessS4l {
  DeviceStatusDetails: [AwsAlexaForBusinessS4lDeviceStatusDetails]
  ConnectionStatus: String
}

type AwsAlexaForBusinessS4lDeviceStatusDetails {
  Feature: String
  Code: String
}

type AwsAlexaForBusinessS5h {
  ParameterKey: String!
  ParameterValue: String!
}

input AwsAlexaForBusinessS5hInput {
  ParameterKey: String!
  ParameterValue: String!
}

input AwsAlexaForBusinessS8pInput {
  Key: String!
  Values: [String]!
}

input AwsAlexaForBusinessS8uInput {
  Key: String!
  Value: String!
}

input AwsAlexaForBusinessSearchAddressBooksInput {
  Filters: [AwsAlexaForBusinessS8pInput]
  SortCriteria: [AwsAlexaForBusinessS8uInput]
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessSearchAddressBooksOutput {
  AddressBooks: [AwsAlexaForBusinessSearchAddressBooksOutputAddressBooks]
  NextToken: String
  TotalCount: Int
}

type AwsAlexaForBusinessSearchAddressBooksOutputAddressBooks {
  AddressBookArn: String
  Name: String
  Description: String
}

input AwsAlexaForBusinessSearchContactsInput {
  Filters: [AwsAlexaForBusinessS8pInput]
  SortCriteria: [AwsAlexaForBusinessS8uInput]
  NextToken: String
  MaxResults: Int
}

type AwsAlexaForBusinessSearchContactsOutput {
  Contacts: [AwsAlexaForBusinessSearchContactsOutputContacts]
  NextToken: String
  TotalCount: Int
}

type AwsAlexaForBusinessSearchContactsOutputContacts {
  ContactArn: String
  DisplayName: String
  FirstName: String
  LastName: String
  PhoneNumber: String
  PhoneNumbers: [AwsAlexaForBusinessS1d]
  SipAddresses: [AwsAlexaForBusinessS1g]
}

input AwsAlexaForBusinessSearchDevicesInput {
  NextToken: String
  MaxResults: Int
  Filters: [AwsAlexaForBusinessS8pInput]
  SortCriteria: [AwsAlexaForBusinessS8uInput]
}

type AwsAlexaForBusinessSearchDevicesOutput {
  Devices: [AwsAlexaForBusinessSearchDevicesOutputDevices]
  NextToken: String
  TotalCount: Int
}

type AwsAlexaForBusinessSearchDevicesOutputDevices {
  DeviceArn: String
  DeviceSerialNumber: String
  DeviceType: String
  DeviceName: String
  SoftwareVersion: String
  MacAddress: String
  DeviceStatus: String
  NetworkProfileArn: String
  NetworkProfileName: String
  RoomArn: String
  RoomName: String
  DeviceStatusInfo: AwsAlexaForBusinessS4l
}

input AwsAlexaForBusinessSearchNetworkProfilesInput {
  NextToken: String
  MaxResults: Int
  Filters: [AwsAlexaForBusinessS8pInput]
  SortCriteria: [AwsAlexaForBusinessS8uInput]
}

type AwsAlexaForBusinessSearchNetworkProfilesOutput {
  NetworkProfiles: [AwsAlexaForBusinessSearchNetworkProfilesOutputNetworkProfiles]
  NextToken: String
  TotalCount: Int
}

type AwsAlexaForBusinessSearchNetworkProfilesOutputNetworkProfiles {
  NetworkProfileArn: String
  NetworkProfileName: String
  Description: String
  Ssid: String
  SecurityType: String
  EapMethod: String
  CertificateAuthorityArn: String
}

input AwsAlexaForBusinessSearchProfilesInput {
  NextToken: String
  MaxResults: Int
  Filters: [AwsAlexaForBusinessS8pInput]
  SortCriteria: [AwsAlexaForBusinessS8uInput]
}

type AwsAlexaForBusinessSearchProfilesOutput {
  Profiles: [AwsAlexaForBusinessSearchProfilesOutputProfiles]
  NextToken: String
  TotalCount: Int
}

type AwsAlexaForBusinessSearchProfilesOutputProfiles {
  ProfileArn: String
  ProfileName: String
  IsDefault: Boolean
  Address: String
  Timezone: String
  DistanceUnit: String
  TemperatureUnit: String
  WakeWord: String
}

input AwsAlexaForBusinessSearchRoomsInput {
  NextToken: String
  MaxResults: Int
  Filters: [AwsAlexaForBusinessS8pInput]
  SortCriteria: [AwsAlexaForBusinessS8uInput]
}

type AwsAlexaForBusinessSearchRoomsOutput {
  Rooms: [AwsAlexaForBusinessSearchRoomsOutputRooms]
  NextToken: String
  TotalCount: Int
}

type AwsAlexaForBusinessSearchRoomsOutputRooms {
  RoomArn: String
  RoomName: String
  Description: String
  ProviderCalendarId: String
  ProfileArn: String
  ProfileName: String
}

input AwsAlexaForBusinessSearchSkillGroupsInput {
  NextToken: String
  MaxResults: Int
  Filters: [AwsAlexaForBusinessS8pInput]
  SortCriteria: [AwsAlexaForBusinessS8uInput]
}

type AwsAlexaForBusinessSearchSkillGroupsOutput {
  SkillGroups: [AwsAlexaForBusinessSearchSkillGroupsOutputSkillGroups]
  NextToken: String
  TotalCount: Int
}

type AwsAlexaForBusinessSearchSkillGroupsOutputSkillGroups {
  SkillGroupArn: String
  SkillGroupName: String
  Description: String
}

input AwsAlexaForBusinessSearchUsersInput {
  NextToken: String
  MaxResults: Int
  Filters: [AwsAlexaForBusinessS8pInput]
  SortCriteria: [AwsAlexaForBusinessS8uInput]
}

type AwsAlexaForBusinessSearchUsersOutput {
  Users: [AwsAlexaForBusinessSearchUsersOutputUsers]
  NextToken: String
  TotalCount: Int
}

type AwsAlexaForBusinessSearchUsersOutputUsers {
  UserArn: String
  FirstName: String
  LastName: String
  Email: String
  EnrollmentStatus: String
  EnrollmentId: String
}

input AwsAlexaForBusinessSendAnnouncementContentAudioListInput {
  Locale: String!
  Location: String!
}

input AwsAlexaForBusinessSendAnnouncementContentInput {
  TextList: [AwsAlexaForBusinessSendAnnouncementContentTextListInput]
  SsmlList: [AwsAlexaForBusinessSendAnnouncementContentSsmlListInput]
  AudioList: [AwsAlexaForBusinessSendAnnouncementContentAudioListInput]
}

input AwsAlexaForBusinessSendAnnouncementContentSsmlListInput {
  Locale: String!
  Value: String!
}

input AwsAlexaForBusinessSendAnnouncementContentTextListInput {
  Locale: String!
  Value: String!
}

input AwsAlexaForBusinessSendAnnouncementInput {
  RoomFilters: [AwsAlexaForBusinessS8pInput]!
  Content: AwsAlexaForBusinessSendAnnouncementContentInput!
  TimeToLiveInSeconds: Int
  ClientRequestToken: String!
}

type AwsAlexaForBusinessSendAnnouncementOutput {
  AnnouncementArn: String
}

input AwsAlexaForBusinessSendInvitationInput {
  UserArn: String
}

type AwsAlexaForBusinessSr {
  Interval: String
}

input AwsAlexaForBusinessSrInput {
  Interval: String
}

type AwsAlexaForBusinessSt {
  StartDate: String
}

input AwsAlexaForBusinessStartDeviceSyncInput {
  RoomArn: String
  DeviceArn: String
  Features: [String]!
}

input AwsAlexaForBusinessStartSmartHomeApplianceDiscoveryInput {
  RoomArn: String!
}

input AwsAlexaForBusinessStInput {
  StartDate: String
}

type AwsAlexaForBusinessSz {
  Endpoint: String!
  CommsProtocol: String!
}

input AwsAlexaForBusinessSzInput {
  Endpoint: String!
  CommsProtocol: String!
}

input AwsAlexaForBusinessTagResourceInput {
  Arn: String!
  Tags: [AwsAlexaForBusinessS2eInput]!
}

input AwsAlexaForBusinessUntagResourceInput {
  Arn: String!
  TagKeys: [String]!
}

input AwsAlexaForBusinessUpdateAddressBookInput {
  AddressBookArn: String!
  Name: String
  Description: String
}

input AwsAlexaForBusinessUpdateBusinessReportScheduleInput {
  ScheduleArn: String!
  S3BucketName: String
  S3KeyPrefix: String
  Format: String
  ScheduleName: String
  Recurrence: AwsAlexaForBusinessStInput
}

input AwsAlexaForBusinessUpdateConferenceProviderInput {
  ConferenceProviderArn: String!
  ConferenceProviderType: String!
  IPDialIn: AwsAlexaForBusinessSzInput
  PSTNDialIn: AwsAlexaForBusinessS12Input
  MeetingSetting: AwsAlexaForBusinessS17Input!
}

input AwsAlexaForBusinessUpdateContactInput {
  ContactArn: String!
  DisplayName: String
  FirstName: String
  LastName: String
  PhoneNumber: String
  PhoneNumbers: [AwsAlexaForBusinessS1dInput]
  SipAddresses: [AwsAlexaForBusinessS1gInput]
}

input AwsAlexaForBusinessUpdateDeviceInput {
  DeviceArn: String
  DeviceName: String
}

input AwsAlexaForBusinessUpdateGatewayGroupInput {
  GatewayGroupArn: String!
  Name: String
  Description: String
}

input AwsAlexaForBusinessUpdateGatewayInput {
  GatewayArn: String!
  Name: String
  Description: String
  SoftwareVersion: String
}

input AwsAlexaForBusinessUpdateNetworkProfileInput {
  NetworkProfileArn: String!
  NetworkProfileName: String
  Description: String
  CurrentPassword: String
  NextPassword: String
  CertificateAuthorityArn: String
  TrustAnchors: [String]
}

input AwsAlexaForBusinessUpdateProfileInput {
  ProfileArn: String
  ProfileName: String
  IsDefault: Boolean
  Timezone: String
  Address: String
  DistanceUnit: String
  TemperatureUnit: String
  WakeWord: String
  SetupModeDisabled: Boolean
  MaxVolumeLimit: Int
  PSTNEnabled: Boolean
}

input AwsAlexaForBusinessUpdateRoomInput {
  RoomArn: String
  RoomName: String
  Description: String
  ProviderCalendarId: String
  ProfileArn: String
}

input AwsAlexaForBusinessUpdateSkillGroupInput {
  SkillGroupArn: String
  SkillGroupName: String
  Description: String
}

"""AWS Amplify (2017-07-25)"""
type AwsAmplify {
  createApp(input: AwsAmplifyCreateAppInput!, config: AwsConfig): AwsAmplifyCreateAppOutput
  createBranch(input: AwsAmplifyCreateBranchInput!, config: AwsConfig): AwsAmplifyCreateBranchOutput
  createDeployment(input: AwsAmplifyCreateDeploymentInput!, config: AwsConfig): AwsAmplifyCreateDeploymentOutput
  createDomainAssociation(input: AwsAmplifyCreateDomainAssociationInput!, config: AwsConfig): AwsAmplifyCreateDomainAssociationOutput
  createWebhook(input: AwsAmplifyCreateWebhookInput!, config: AwsConfig): AwsAmplifyCreateWebhookOutput
  deleteApp(input: AwsAmplifyDeleteAppInput!, config: AwsConfig): AwsAmplifyDeleteAppOutput
  deleteBranch(input: AwsAmplifyDeleteBranchInput!, config: AwsConfig): AwsAmplifyDeleteBranchOutput
  deleteDomainAssociation(input: AwsAmplifyDeleteDomainAssociationInput!, config: AwsConfig): AwsAmplifyDeleteDomainAssociationOutput
  deleteJob(input: AwsAmplifyDeleteJobInput!, config: AwsConfig): AwsAmplifyDeleteJobOutput
  deleteWebhook(input: AwsAmplifyDeleteWebhookInput!, config: AwsConfig): AwsAmplifyDeleteWebhookOutput
  getApp(input: AwsAmplifyGetAppInput!, config: AwsConfig): AwsAmplifyGetAppOutput
  getBranch(input: AwsAmplifyGetBranchInput!, config: AwsConfig): AwsAmplifyGetBranchOutput
  getDomainAssociation(input: AwsAmplifyGetDomainAssociationInput!, config: AwsConfig): AwsAmplifyGetDomainAssociationOutput
  getJob(input: AwsAmplifyGetJobInput!, config: AwsConfig): AwsAmplifyGetJobOutput
  getWebhook(input: AwsAmplifyGetWebhookInput!, config: AwsConfig): AwsAmplifyGetWebhookOutput
  listApps(input: AwsAmplifyListAppsInput, config: AwsConfig): AwsAmplifyListAppsOutput
  listBranches(input: AwsAmplifyListBranchesInput!, config: AwsConfig): AwsAmplifyListBranchesOutput
  listDomainAssociations(input: AwsAmplifyListDomainAssociationsInput!, config: AwsConfig): AwsAmplifyListDomainAssociationsOutput
  listJobs(input: AwsAmplifyListJobsInput!, config: AwsConfig): AwsAmplifyListJobsOutput
  listTagsForResource(input: AwsAmplifyListTagsForResourceInput!, config: AwsConfig): AwsAmplifyListTagsForResourceOutput
  listWebhooks(input: AwsAmplifyListWebhooksInput!, config: AwsConfig): AwsAmplifyListWebhooksOutput
  startDeployment(input: AwsAmplifyStartDeploymentInput!, config: AwsConfig): AwsAmplifyStartDeploymentOutput
  startJob(input: AwsAmplifyStartJobInput!, config: AwsConfig): AwsAmplifyStartJobOutput
  stopJob(input: AwsAmplifyStopJobInput!, config: AwsConfig): AwsAmplifyStopJobOutput
  tagResource(input: AwsAmplifyTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsAmplifyUntagResourceInput!, config: AwsConfig): JSON
  updateApp(input: AwsAmplifyUpdateAppInput!, config: AwsConfig): AwsAmplifyUpdateAppOutput
  updateBranch(input: AwsAmplifyUpdateBranchInput!, config: AwsConfig): AwsAmplifyUpdateBranchOutput
  updateDomainAssociation(input: AwsAmplifyUpdateDomainAssociationInput!, config: AwsConfig): AwsAmplifyUpdateDomainAssociationOutput
  updateWebhook(input: AwsAmplifyUpdateWebhookInput!, config: AwsConfig): AwsAmplifyUpdateWebhookOutput
}

input AwsAmplifyCreateAppInput {
  name: String!
  description: String
  repository: String
  platform: String
  iamServiceRoleArn: String
  oauthToken: String
  accessToken: String
  environmentVariables: JSON
  enableBranchAutoBuild: Boolean
  enableBasicAuth: Boolean
  basicAuthCredentials: String
  customRules: [AwsAmplifySfInput]
  tags: JSON
  buildSpec: String
  enableAutoBranchCreation: Boolean
  autoBranchCreationPatterns: [String]
  autoBranchCreationConfig: AwsAmplifySsInput
}

type AwsAmplifyCreateAppOutput {
  app: AwsAmplifySx!
}

input AwsAmplifyCreateBranchInput {
  appId: String!
  branchName: String!
  description: String
  stage: String
  framework: String
  enableNotification: Boolean
  enableAutoBuild: Boolean
  environmentVariables: JSON
  basicAuthCredentials: String
  enableBasicAuth: Boolean
  tags: JSON
  buildSpec: String
  ttl: String
  displayName: String
}

type AwsAmplifyCreateBranchOutput {
  branch: AwsAmplifyS1c!
}

input AwsAmplifyCreateDeploymentInput {
  appId: String!
  branchName: String!
  fileMap: JSON
}

type AwsAmplifyCreateDeploymentOutput {
  jobId: String
  fileUploadUrls: JSON!
  zipUploadUrl: String!
}

input AwsAmplifyCreateDomainAssociationInput {
  appId: String!
  domainName: String!
  enableAutoSubDomain: Boolean
  subDomainSettings: [AwsAmplifyS1wInput]!
}

type AwsAmplifyCreateDomainAssociationOutput {
  domainAssociation: AwsAmplifyS1z!
}

input AwsAmplifyCreateWebhookInput {
  appId: String!
  branchName: String!
  description: String
}

type AwsAmplifyCreateWebhookOutput {
  webhook: AwsAmplifyS2a!
}

input AwsAmplifyDeleteAppInput {
  appId: String!
}

type AwsAmplifyDeleteAppOutput {
  app: AwsAmplifySx!
}

input AwsAmplifyDeleteBranchInput {
  appId: String!
  branchName: String!
}

type AwsAmplifyDeleteBranchOutput {
  branch: AwsAmplifyS1c!
}

input AwsAmplifyDeleteDomainAssociationInput {
  appId: String!
  domainName: String!
}

type AwsAmplifyDeleteDomainAssociationOutput {
  domainAssociation: AwsAmplifyS1z!
}

input AwsAmplifyDeleteJobInput {
  appId: String!
  branchName: String!
  jobId: String!
}

type AwsAmplifyDeleteJobOutput {
  jobSummary: AwsAmplifyS2m!
}

input AwsAmplifyDeleteWebhookInput {
  webhookId: String!
}

type AwsAmplifyDeleteWebhookOutput {
  webhook: AwsAmplifyS2a!
}

input AwsAmplifyGetAppInput {
  appId: String!
}

type AwsAmplifyGetAppOutput {
  app: AwsAmplifySx!
}

input AwsAmplifyGetBranchInput {
  appId: String!
  branchName: String!
}

type AwsAmplifyGetBranchOutput {
  branch: AwsAmplifyS1c!
}

input AwsAmplifyGetDomainAssociationInput {
  appId: String!
  domainName: String!
}

type AwsAmplifyGetDomainAssociationOutput {
  domainAssociation: AwsAmplifyS1z!
}

input AwsAmplifyGetJobInput {
  appId: String!
  branchName: String!
  jobId: String!
}

type AwsAmplifyGetJobOutput {
  job: AwsAmplifyGetJobOutputJob!
}

type AwsAmplifyGetJobOutputJob {
  summary: AwsAmplifyS2m!
  steps: [AwsAmplifyGetJobOutputJobSteps]!
}

type AwsAmplifyGetJobOutputJobSteps {
  stepName: String!
  startTime: Date!
  status: String!
  endTime: Date!
  logUrl: String
  artifactsUrl: String
  screenshots: JSON
  statusReason: String
  context: String
}

input AwsAmplifyGetWebhookInput {
  webhookId: String!
}

type AwsAmplifyGetWebhookOutput {
  webhook: AwsAmplifyS2a!
}

input AwsAmplifyListAppsInput {
  nextToken: String
  maxResults: Int
}

type AwsAmplifyListAppsOutput {
  apps: [AwsAmplifySx]!
  nextToken: String
}

input AwsAmplifyListBranchesInput {
  appId: String!
  nextToken: String
  maxResults: Int
}

type AwsAmplifyListBranchesOutput {
  branches: [AwsAmplifyS1c]!
  nextToken: String
}

input AwsAmplifyListDomainAssociationsInput {
  appId: String!
  nextToken: String
  maxResults: Int
}

type AwsAmplifyListDomainAssociationsOutput {
  domainAssociations: [AwsAmplifyS1z]!
  nextToken: String
}

input AwsAmplifyListJobsInput {
  appId: String!
  branchName: String!
  nextToken: String
  maxResults: Int
}

type AwsAmplifyListJobsOutput {
  jobSummaries: [AwsAmplifyS2m]!
  nextToken: String
}

input AwsAmplifyListTagsForResourceInput {
  resourceArn: String!
}

type AwsAmplifyListTagsForResourceOutput {
  tags: JSON
}

input AwsAmplifyListWebhooksInput {
  appId: String!
  nextToken: String
  maxResults: Int
}

type AwsAmplifyListWebhooksOutput {
  webhooks: [AwsAmplifyS2a]!
  nextToken: String
}

type AwsAmplifyS1c {
  branchArn: String!
  branchName: String!
  description: String!
  tags: JSON
  stage: String!
  displayName: String!
  enableNotification: Boolean!
  createTime: Date!
  updateTime: Date!
  environmentVariables: JSON!
  enableAutoBuild: Boolean!
  customDomains: [String]!
  framework: String!
  activeJobId: String!
  totalNumberOfJobs: String!
  enableBasicAuth: Boolean!
  thumbnailUrl: String
  basicAuthCredentials: String
  buildSpec: String
  ttl: String!
  associatedResources: [String]
}

type AwsAmplifyS1w {
  prefix: String!
  branchName: String!
}

input AwsAmplifyS1wInput {
  prefix: String!
  branchName: String!
}

type AwsAmplifyS1z {
  domainAssociationArn: String!
  domainName: String!
  enableAutoSubDomain: Boolean!
  domainStatus: String!
  statusReason: String!
  certificateVerificationDNSRecord: String
  subDomains: [AwsAmplifyS1zSubDomains]!
}

type AwsAmplifyS1zSubDomains {
  subDomainSetting: AwsAmplifyS1w!
  verified: Boolean!
  dnsRecord: String!
}

type AwsAmplifyS2a {
  webhookArn: String!
  webhookId: String!
  webhookUrl: String!
  branchName: String!
  description: String!
  createTime: Date!
  updateTime: Date!
}

type AwsAmplifyS2m {
  jobArn: String!
  jobId: String!
  commitId: String!
  commitMessage: String!
  commitTime: Date!
  startTime: Date!
  status: String!
  endTime: Date
  jobType: String!
}

type AwsAmplifySf {
  source: String!
  target: String!
  status: String
  condition: String
}

input AwsAmplifySfInput {
  source: String!
  target: String!
  status: String
  condition: String
}

type AwsAmplifySs {
  stage: String
  framework: String
  enableAutoBuild: Boolean
  environmentVariables: JSON
  basicAuthCredentials: String
  enableBasicAuth: Boolean
  buildSpec: String
}

input AwsAmplifySsInput {
  stage: String
  framework: String
  enableAutoBuild: Boolean
  environmentVariables: JSON
  basicAuthCredentials: String
  enableBasicAuth: Boolean
  buildSpec: String
}

input AwsAmplifyStartDeploymentInput {
  appId: String!
  branchName: String!
  jobId: String
  sourceUrl: String
}

type AwsAmplifyStartDeploymentOutput {
  jobSummary: AwsAmplifyS2m!
}

input AwsAmplifyStartJobInput {
  appId: String!
  branchName: String!
  jobId: String
  jobType: String!
  jobReason: String
  commitId: String
  commitMessage: String
  commitTime: Date
}

type AwsAmplifyStartJobOutput {
  jobSummary: AwsAmplifyS2m!
}

input AwsAmplifyStopJobInput {
  appId: String!
  branchName: String!
  jobId: String!
}

type AwsAmplifyStopJobOutput {
  jobSummary: AwsAmplifyS2m!
}

type AwsAmplifySx {
  appId: String!
  appArn: String!
  name: String!
  tags: JSON
  description: String!
  repository: String!
  platform: String!
  createTime: Date!
  updateTime: Date!
  iamServiceRoleArn: String
  environmentVariables: JSON!
  defaultDomain: String!
  enableBranchAutoBuild: Boolean!
  enableBasicAuth: Boolean!
  basicAuthCredentials: String
  customRules: [AwsAmplifySf]
  productionBranch: AwsAmplifySxProductionBranch
  buildSpec: String
  enableAutoBranchCreation: Boolean
  autoBranchCreationPatterns: [String]
  autoBranchCreationConfig: AwsAmplifySs
}

type AwsAmplifySxProductionBranch {
  lastDeployTime: Date
  status: String
  thumbnailUrl: String
  branchName: String
}

input AwsAmplifyTagResourceInput {
  resourceArn: String!
  tags: JSON!
}

input AwsAmplifyUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsAmplifyUpdateAppInput {
  appId: String!
  name: String
  description: String
  platform: String
  iamServiceRoleArn: String
  environmentVariables: JSON
  enableBranchAutoBuild: Boolean
  enableBasicAuth: Boolean
  basicAuthCredentials: String
  customRules: [AwsAmplifySfInput]
  buildSpec: String
  enableAutoBranchCreation: Boolean
  autoBranchCreationPatterns: [String]
  autoBranchCreationConfig: AwsAmplifySsInput
}

type AwsAmplifyUpdateAppOutput {
  app: AwsAmplifySx!
}

input AwsAmplifyUpdateBranchInput {
  appId: String!
  branchName: String!
  description: String
  framework: String
  stage: String
  enableNotification: Boolean
  enableAutoBuild: Boolean
  environmentVariables: JSON
  basicAuthCredentials: String
  enableBasicAuth: Boolean
  buildSpec: String
  ttl: String
  displayName: String
}

type AwsAmplifyUpdateBranchOutput {
  branch: AwsAmplifyS1c!
}

input AwsAmplifyUpdateDomainAssociationInput {
  appId: String!
  domainName: String!
  enableAutoSubDomain: Boolean
  subDomainSettings: [AwsAmplifyS1wInput]!
}

type AwsAmplifyUpdateDomainAssociationOutput {
  domainAssociation: AwsAmplifyS1z!
}

input AwsAmplifyUpdateWebhookInput {
  webhookId: String!
  branchName: String
  description: String
}

type AwsAmplifyUpdateWebhookOutput {
  webhook: AwsAmplifyS2a!
}

"""Amazon API Gateway (2015-07-09)"""
type AwsAPIGateway {
  createApiKey(input: AwsAPIGatewayCreateApiKeyInput, config: AwsConfig): JSON
  createAuthorizer(input: AwsAPIGatewayCreateAuthorizerInput!, config: AwsConfig): JSON
  createBasePathMapping(input: AwsAPIGatewayCreateBasePathMappingInput!, config: AwsConfig): JSON
  createDeployment(input: AwsAPIGatewayCreateDeploymentInput!, config: AwsConfig): JSON
  createDocumentationPart(input: AwsAPIGatewayCreateDocumentationPartInput!, config: AwsConfig): JSON
  createDocumentationVersion(input: AwsAPIGatewayCreateDocumentationVersionInput!, config: AwsConfig): JSON
  createDomainName(input: AwsAPIGatewayCreateDomainNameInput!, config: AwsConfig): JSON
  createModel(input: AwsAPIGatewayCreateModelInput!, config: AwsConfig): JSON
  createRequestValidator(input: AwsAPIGatewayCreateRequestValidatorInput!, config: AwsConfig): JSON
  createResource(input: AwsAPIGatewayCreateResourceInput!, config: AwsConfig): JSON
  createRestApi(input: AwsAPIGatewayCreateRestApiInput!, config: AwsConfig): JSON
  createStage(input: AwsAPIGatewayCreateStageInput!, config: AwsConfig): JSON
  createUsagePlan(input: AwsAPIGatewayCreateUsagePlanInput!, config: AwsConfig): JSON
  createUsagePlanKey(input: AwsAPIGatewayCreateUsagePlanKeyInput!, config: AwsConfig): JSON
  createVpcLink(input: AwsAPIGatewayCreateVpcLinkInput!, config: AwsConfig): JSON
  deleteApiKey(input: AwsAPIGatewayDeleteApiKeyInput!, config: AwsConfig): JSON
  deleteAuthorizer(input: AwsAPIGatewayDeleteAuthorizerInput!, config: AwsConfig): JSON
  deleteBasePathMapping(input: AwsAPIGatewayDeleteBasePathMappingInput!, config: AwsConfig): JSON
  deleteClientCertificate(input: AwsAPIGatewayDeleteClientCertificateInput!, config: AwsConfig): JSON
  deleteDeployment(input: AwsAPIGatewayDeleteDeploymentInput!, config: AwsConfig): JSON
  deleteDocumentationPart(input: AwsAPIGatewayDeleteDocumentationPartInput!, config: AwsConfig): JSON
  deleteDocumentationVersion(input: AwsAPIGatewayDeleteDocumentationVersionInput!, config: AwsConfig): JSON
  deleteDomainName(input: AwsAPIGatewayDeleteDomainNameInput!, config: AwsConfig): JSON
  deleteGatewayResponse(input: AwsAPIGatewayDeleteGatewayResponseInput!, config: AwsConfig): JSON
  deleteIntegration(input: AwsAPIGatewayDeleteIntegrationInput!, config: AwsConfig): JSON
  deleteIntegrationResponse(input: AwsAPIGatewayDeleteIntegrationResponseInput!, config: AwsConfig): JSON
  deleteMethod(input: AwsAPIGatewayDeleteMethodInput!, config: AwsConfig): JSON
  deleteMethodResponse(input: AwsAPIGatewayDeleteMethodResponseInput!, config: AwsConfig): JSON
  deleteModel(input: AwsAPIGatewayDeleteModelInput!, config: AwsConfig): JSON
  deleteRequestValidator(input: AwsAPIGatewayDeleteRequestValidatorInput!, config: AwsConfig): JSON
  deleteResource(input: AwsAPIGatewayDeleteResourceInput!, config: AwsConfig): JSON
  deleteRestApi(input: AwsAPIGatewayDeleteRestApiInput!, config: AwsConfig): JSON
  deleteStage(input: AwsAPIGatewayDeleteStageInput!, config: AwsConfig): JSON
  deleteUsagePlan(input: AwsAPIGatewayDeleteUsagePlanInput!, config: AwsConfig): JSON
  deleteUsagePlanKey(input: AwsAPIGatewayDeleteUsagePlanKeyInput!, config: AwsConfig): JSON
  deleteVpcLink(input: AwsAPIGatewayDeleteVpcLinkInput!, config: AwsConfig): JSON
  flushStageAuthorizersCache(input: AwsAPIGatewayFlushStageAuthorizersCacheInput!, config: AwsConfig): JSON
  flushStageCache(input: AwsAPIGatewayFlushStageCacheInput!, config: AwsConfig): JSON
  generateClientCertificate(input: AwsAPIGatewayGenerateClientCertificateInput, config: AwsConfig): JSON
  getAccount(input: JSON, config: AwsConfig): JSON
  getApiKey(input: AwsAPIGatewayGetApiKeyInput!, config: AwsConfig): JSON
  getApiKeys(input: AwsAPIGatewayGetApiKeysInput, config: AwsConfig): AwsAPIGatewayGetApiKeysOutput
  getAuthorizer(input: AwsAPIGatewayGetAuthorizerInput!, config: AwsConfig): JSON
  getAuthorizers(input: AwsAPIGatewayGetAuthorizersInput!, config: AwsConfig): AwsAPIGatewayGetAuthorizersOutput
  getBasePathMapping(input: AwsAPIGatewayGetBasePathMappingInput!, config: AwsConfig): JSON
  getBasePathMappings(input: AwsAPIGatewayGetBasePathMappingsInput!, config: AwsConfig): AwsAPIGatewayGetBasePathMappingsOutput
  getClientCertificate(input: AwsAPIGatewayGetClientCertificateInput!, config: AwsConfig): JSON
  getClientCertificates(input: AwsAPIGatewayGetClientCertificatesInput, config: AwsConfig): AwsAPIGatewayGetClientCertificatesOutput
  getDeployment(input: AwsAPIGatewayGetDeploymentInput!, config: AwsConfig): JSON
  getDeployments(input: AwsAPIGatewayGetDeploymentsInput!, config: AwsConfig): AwsAPIGatewayGetDeploymentsOutput
  getDocumentationPart(input: AwsAPIGatewayGetDocumentationPartInput!, config: AwsConfig): JSON
  getDocumentationParts(input: AwsAPIGatewayGetDocumentationPartsInput!, config: AwsConfig): AwsAPIGatewayGetDocumentationPartsOutput
  getDocumentationVersion(input: AwsAPIGatewayGetDocumentationVersionInput!, config: AwsConfig): JSON
  getDocumentationVersions(input: AwsAPIGatewayGetDocumentationVersionsInput!, config: AwsConfig): AwsAPIGatewayGetDocumentationVersionsOutput
  getDomainName(input: AwsAPIGatewayGetDomainNameInput!, config: AwsConfig): JSON
  getDomainNames(input: AwsAPIGatewayGetDomainNamesInput, config: AwsConfig): AwsAPIGatewayGetDomainNamesOutput
  getExport(input: AwsAPIGatewayGetExportInput!, config: AwsConfig): AwsAPIGatewayGetExportOutput
  getGatewayResponse(input: AwsAPIGatewayGetGatewayResponseInput!, config: AwsConfig): JSON
  getGatewayResponses(input: AwsAPIGatewayGetGatewayResponsesInput!, config: AwsConfig): AwsAPIGatewayGetGatewayResponsesOutput
  getIntegration(input: AwsAPIGatewayGetIntegrationInput!, config: AwsConfig): JSON
  getIntegrationResponse(input: AwsAPIGatewayGetIntegrationResponseInput!, config: AwsConfig): JSON
  getMethod(input: AwsAPIGatewayGetMethodInput!, config: AwsConfig): JSON
  getMethodResponse(input: AwsAPIGatewayGetMethodResponseInput!, config: AwsConfig): JSON
  getModel(input: AwsAPIGatewayGetModelInput!, config: AwsConfig): JSON
  getModelTemplate(input: AwsAPIGatewayGetModelTemplateInput!, config: AwsConfig): AwsAPIGatewayGetModelTemplateOutput
  getModels(input: AwsAPIGatewayGetModelsInput!, config: AwsConfig): AwsAPIGatewayGetModelsOutput
  getRequestValidator(input: AwsAPIGatewayGetRequestValidatorInput!, config: AwsConfig): JSON
  getRequestValidators(input: AwsAPIGatewayGetRequestValidatorsInput!, config: AwsConfig): AwsAPIGatewayGetRequestValidatorsOutput
  getResource(input: AwsAPIGatewayGetResourceInput!, config: AwsConfig): JSON
  getResources(input: AwsAPIGatewayGetResourcesInput!, config: AwsConfig): AwsAPIGatewayGetResourcesOutput
  getRestApi(input: AwsAPIGatewayGetRestApiInput!, config: AwsConfig): JSON
  getRestApis(input: AwsAPIGatewayGetRestApisInput, config: AwsConfig): AwsAPIGatewayGetRestApisOutput
  getSdk(input: AwsAPIGatewayGetSdkInput!, config: AwsConfig): AwsAPIGatewayGetSdkOutput
  getSdkType(input: AwsAPIGatewayGetSdkTypeInput!, config: AwsConfig): JSON
  getSdkTypes(input: AwsAPIGatewayGetSdkTypesInput, config: AwsConfig): AwsAPIGatewayGetSdkTypesOutput
  getStage(input: AwsAPIGatewayGetStageInput!, config: AwsConfig): JSON
  getStages(input: AwsAPIGatewayGetStagesInput!, config: AwsConfig): AwsAPIGatewayGetStagesOutput
  getTags(input: AwsAPIGatewayGetTagsInput!, config: AwsConfig): AwsAPIGatewayGetTagsOutput
  getUsage(input: AwsAPIGatewayGetUsageInput!, config: AwsConfig): JSON
  getUsagePlan(input: AwsAPIGatewayGetUsagePlanInput!, config: AwsConfig): JSON
  getUsagePlanKey(input: AwsAPIGatewayGetUsagePlanKeyInput!, config: AwsConfig): JSON
  getUsagePlanKeys(input: AwsAPIGatewayGetUsagePlanKeysInput!, config: AwsConfig): AwsAPIGatewayGetUsagePlanKeysOutput
  getUsagePlans(input: AwsAPIGatewayGetUsagePlansInput, config: AwsConfig): AwsAPIGatewayGetUsagePlansOutput
  getVpcLink(input: AwsAPIGatewayGetVpcLinkInput!, config: AwsConfig): JSON
  getVpcLinks(input: AwsAPIGatewayGetVpcLinksInput, config: AwsConfig): AwsAPIGatewayGetVpcLinksOutput
  importApiKeys(input: AwsAPIGatewayImportApiKeysInput!, config: AwsConfig): AwsAPIGatewayImportApiKeysOutput
  importDocumentationParts(input: AwsAPIGatewayImportDocumentationPartsInput!, config: AwsConfig): AwsAPIGatewayImportDocumentationPartsOutput
  importRestApi(input: AwsAPIGatewayImportRestApiInput!, config: AwsConfig): JSON
  putGatewayResponse(input: AwsAPIGatewayPutGatewayResponseInput!, config: AwsConfig): JSON
  putIntegration(input: AwsAPIGatewayPutIntegrationInput!, config: AwsConfig): JSON
  putIntegrationResponse(input: AwsAPIGatewayPutIntegrationResponseInput!, config: AwsConfig): JSON
  putMethod(input: AwsAPIGatewayPutMethodInput!, config: AwsConfig): JSON
  putMethodResponse(input: AwsAPIGatewayPutMethodResponseInput!, config: AwsConfig): JSON
  putRestApi(input: AwsAPIGatewayPutRestApiInput!, config: AwsConfig): JSON
  tagResource(input: AwsAPIGatewayTagResourceInput!, config: AwsConfig): JSON
  testInvokeAuthorizer(input: AwsAPIGatewayTestInvokeAuthorizerInput!, config: AwsConfig): AwsAPIGatewayTestInvokeAuthorizerOutput
  testInvokeMethod(input: AwsAPIGatewayTestInvokeMethodInput!, config: AwsConfig): AwsAPIGatewayTestInvokeMethodOutput
  untagResource(input: AwsAPIGatewayUntagResourceInput!, config: AwsConfig): JSON
  updateAccount(input: AwsAPIGatewayUpdateAccountInput, config: AwsConfig): JSON
  updateApiKey(input: AwsAPIGatewayUpdateApiKeyInput!, config: AwsConfig): JSON
  updateAuthorizer(input: AwsAPIGatewayUpdateAuthorizerInput!, config: AwsConfig): JSON
  updateBasePathMapping(input: AwsAPIGatewayUpdateBasePathMappingInput!, config: AwsConfig): JSON
  updateClientCertificate(input: AwsAPIGatewayUpdateClientCertificateInput!, config: AwsConfig): JSON
  updateDeployment(input: AwsAPIGatewayUpdateDeploymentInput!, config: AwsConfig): JSON
  updateDocumentationPart(input: AwsAPIGatewayUpdateDocumentationPartInput!, config: AwsConfig): JSON
  updateDocumentationVersion(input: AwsAPIGatewayUpdateDocumentationVersionInput!, config: AwsConfig): JSON
  updateDomainName(input: AwsAPIGatewayUpdateDomainNameInput!, config: AwsConfig): JSON
  updateGatewayResponse(input: AwsAPIGatewayUpdateGatewayResponseInput!, config: AwsConfig): JSON
  updateIntegration(input: AwsAPIGatewayUpdateIntegrationInput!, config: AwsConfig): JSON
  updateIntegrationResponse(input: AwsAPIGatewayUpdateIntegrationResponseInput!, config: AwsConfig): JSON
  updateMethod(input: AwsAPIGatewayUpdateMethodInput!, config: AwsConfig): JSON
  updateMethodResponse(input: AwsAPIGatewayUpdateMethodResponseInput!, config: AwsConfig): JSON
  updateModel(input: AwsAPIGatewayUpdateModelInput!, config: AwsConfig): JSON
  updateRequestValidator(input: AwsAPIGatewayUpdateRequestValidatorInput!, config: AwsConfig): JSON
  updateResource(input: AwsAPIGatewayUpdateResourceInput!, config: AwsConfig): JSON
  updateRestApi(input: AwsAPIGatewayUpdateRestApiInput!, config: AwsConfig): JSON
  updateStage(input: AwsAPIGatewayUpdateStageInput!, config: AwsConfig): JSON
  updateUsage(input: AwsAPIGatewayUpdateUsageInput!, config: AwsConfig): JSON
  updateUsagePlan(input: AwsAPIGatewayUpdateUsagePlanInput!, config: AwsConfig): JSON
  updateVpcLink(input: AwsAPIGatewayUpdateVpcLinkInput!, config: AwsConfig): JSON
}

input AwsAPIGatewayCreateApiKeyInput {
  name: String
  description: String
  enabled: Boolean
  generateDistinctId: Boolean
  value: String
  stageKeys: [AwsAPIGatewayCreateApiKeyStageKeysInput]
  customerId: String
  tags: JSON
}

input AwsAPIGatewayCreateApiKeyStageKeysInput {
  restApiId: String
  stageName: String
}

input AwsAPIGatewayCreateAuthorizerInput {
  restApiId: String!
  name: String!
  type: String!
  providerARNs: [String]
  authType: String
  authorizerUri: String
  authorizerCredentials: String
  identitySource: String
  identityValidationExpression: String
  authorizerResultTtlInSeconds: Int
}

input AwsAPIGatewayCreateBasePathMappingInput {
  domainName: String!
  basePath: String
  restApiId: String!
  stage: String
}

input AwsAPIGatewayCreateDeploymentCanarySettingsInput {
  percentTraffic: JSON
  stageVariableOverrides: JSON
  useStageCache: Boolean
}

input AwsAPIGatewayCreateDeploymentInput {
  restApiId: String!
  stageName: String
  stageDescription: String
  description: String
  cacheClusterEnabled: Boolean
  cacheClusterSize: String
  variables: JSON
  canarySettings: AwsAPIGatewayCreateDeploymentCanarySettingsInput
  tracingEnabled: Boolean
}

input AwsAPIGatewayCreateDocumentationPartInput {
  restApiId: String!
  location: AwsAPIGatewaySsInput!
  properties: String!
}

input AwsAPIGatewayCreateDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
  stageName: String
  description: String
}

input AwsAPIGatewayCreateDomainNameInput {
  domainName: String!
  certificateName: String
  certificateBody: String
  certificatePrivateKey: String
  certificateChain: String
  certificateArn: String
  regionalCertificateName: String
  regionalCertificateArn: String
  endpointConfiguration: AwsAPIGatewaySzInput
  tags: JSON
  securityPolicy: String
}

input AwsAPIGatewayCreateModelInput {
  restApiId: String!
  name: String!
  description: String
  schema: String
  contentType: String!
}

input AwsAPIGatewayCreateRequestValidatorInput {
  restApiId: String!
  name: String
  validateRequestBody: Boolean
  validateRequestParameters: Boolean
}

input AwsAPIGatewayCreateResourceInput {
  restApiId: String!
  parentId: String!
  pathPart: String!
}

input AwsAPIGatewayCreateRestApiInput {
  name: String!
  description: String
  version: String
  cloneFrom: String
  binaryMediaTypes: [String]
  minimumCompressionSize: Int
  apiKeySource: String
  endpointConfiguration: AwsAPIGatewaySzInput
  policy: String
  tags: JSON
}

input AwsAPIGatewayCreateStageInput {
  restApiId: String!
  stageName: String!
  deploymentId: String!
  description: String
  cacheClusterEnabled: Boolean
  cacheClusterSize: String
  variables: JSON
  documentationVersion: String
  canarySettings: AwsAPIGatewayS1sInput
  tracingEnabled: Boolean
  tags: JSON
}

input AwsAPIGatewayCreateUsagePlanInput {
  name: String!
  description: String
  apiStages: [AwsAPIGatewayS20Input]
  throttle: AwsAPIGatewayS23Input
  quota: AwsAPIGatewayS24Input
  tags: JSON
}

input AwsAPIGatewayCreateUsagePlanKeyInput {
  usagePlanId: String!
  keyId: String!
  keyType: String!
}

input AwsAPIGatewayCreateVpcLinkInput {
  name: String!
  description: String
  targetArns: [String]!
  tags: JSON
}

input AwsAPIGatewayDeleteApiKeyInput {
  apiKey: String!
}

input AwsAPIGatewayDeleteAuthorizerInput {
  restApiId: String!
  authorizerId: String!
}

input AwsAPIGatewayDeleteBasePathMappingInput {
  domainName: String!
  basePath: String!
}

input AwsAPIGatewayDeleteClientCertificateInput {
  clientCertificateId: String!
}

input AwsAPIGatewayDeleteDeploymentInput {
  restApiId: String!
  deploymentId: String!
}

input AwsAPIGatewayDeleteDocumentationPartInput {
  restApiId: String!
  documentationPartId: String!
}

input AwsAPIGatewayDeleteDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
}

input AwsAPIGatewayDeleteDomainNameInput {
  domainName: String!
}

input AwsAPIGatewayDeleteGatewayResponseInput {
  restApiId: String!
  responseType: String!
}

input AwsAPIGatewayDeleteIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsAPIGatewayDeleteIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsAPIGatewayDeleteMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsAPIGatewayDeleteMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsAPIGatewayDeleteModelInput {
  restApiId: String!
  modelName: String!
}

input AwsAPIGatewayDeleteRequestValidatorInput {
  restApiId: String!
  requestValidatorId: String!
}

input AwsAPIGatewayDeleteResourceInput {
  restApiId: String!
  resourceId: String!
}

input AwsAPIGatewayDeleteRestApiInput {
  restApiId: String!
}

input AwsAPIGatewayDeleteStageInput {
  restApiId: String!
  stageName: String!
}

input AwsAPIGatewayDeleteUsagePlanInput {
  usagePlanId: String!
}

input AwsAPIGatewayDeleteUsagePlanKeyInput {
  usagePlanId: String!
  keyId: String!
}

input AwsAPIGatewayDeleteVpcLinkInput {
  vpcLinkId: String!
}

input AwsAPIGatewayFlushStageAuthorizersCacheInput {
  restApiId: String!
  stageName: String!
}

input AwsAPIGatewayFlushStageCacheInput {
  restApiId: String!
  stageName: String!
}

input AwsAPIGatewayGenerateClientCertificateInput {
  description: String
  tags: JSON
}

input AwsAPIGatewayGetApiKeyInput {
  apiKey: String!
  includeValue: Boolean
}

input AwsAPIGatewayGetApiKeysInput {
  position: String
  limit: Int
  nameQuery: String
  customerId: String
  includeValues: Boolean
}

type AwsAPIGatewayGetApiKeysOutput {
  warnings: [String]
  position: String
  items: [AwsAPIGatewayS7]
}

input AwsAPIGatewayGetAuthorizerInput {
  restApiId: String!
  authorizerId: String!
}

input AwsAPIGatewayGetAuthorizersInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetAuthorizersOutput {
  position: String
  items: [AwsAPIGatewaySf]
}

input AwsAPIGatewayGetBasePathMappingInput {
  domainName: String!
  basePath: String!
}

input AwsAPIGatewayGetBasePathMappingsInput {
  domainName: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetBasePathMappingsOutput {
  position: String
  items: [AwsAPIGatewaySh]
}

input AwsAPIGatewayGetClientCertificateInput {
  clientCertificateId: String!
}

input AwsAPIGatewayGetClientCertificatesInput {
  position: String
  limit: Int
}

type AwsAPIGatewayGetClientCertificatesOutput {
  position: String
  items: [AwsAPIGatewayS31]
}

input AwsAPIGatewayGetDeploymentInput {
  restApiId: String!
  deploymentId: String!
  embed: [String]
}

input AwsAPIGatewayGetDeploymentsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetDeploymentsOutput {
  position: String
  items: [AwsAPIGatewaySn]
}

input AwsAPIGatewayGetDocumentationPartInput {
  restApiId: String!
  documentationPartId: String!
}

input AwsAPIGatewayGetDocumentationPartsInput {
  restApiId: String!
  type: String
  nameQuery: String
  path: String
  position: String
  limit: Int
  locationStatus: String
}

type AwsAPIGatewayGetDocumentationPartsOutput {
  position: String
  items: [AwsAPIGatewaySv]
}

input AwsAPIGatewayGetDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
}

input AwsAPIGatewayGetDocumentationVersionsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetDocumentationVersionsOutput {
  position: String
  items: [AwsAPIGatewaySx]
}

input AwsAPIGatewayGetDomainNameInput {
  domainName: String!
}

input AwsAPIGatewayGetDomainNamesInput {
  position: String
  limit: Int
}

type AwsAPIGatewayGetDomainNamesOutput {
  position: String
  items: [AwsAPIGatewayS13]
}

input AwsAPIGatewayGetExportInput {
  restApiId: String!
  stageName: String!
  exportType: String!
  parameters: JSON
  accepts: String
}

type AwsAPIGatewayGetExportOutput {
  contentType: String
  contentDisposition: String
  body: JSON
}

input AwsAPIGatewayGetGatewayResponseInput {
  restApiId: String!
  responseType: String!
}

input AwsAPIGatewayGetGatewayResponsesInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetGatewayResponsesOutput {
  position: String
  items: [AwsAPIGatewayS45]
}

input AwsAPIGatewayGetIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsAPIGatewayGetIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsAPIGatewayGetMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsAPIGatewayGetMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsAPIGatewayGetModelInput {
  restApiId: String!
  modelName: String!
  flatten: Boolean
}

input AwsAPIGatewayGetModelsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetModelsOutput {
  position: String
  items: [AwsAPIGatewayS16]
}

input AwsAPIGatewayGetModelTemplateInput {
  restApiId: String!
  modelName: String!
}

type AwsAPIGatewayGetModelTemplateOutput {
  value: String
}

input AwsAPIGatewayGetRequestValidatorInput {
  restApiId: String!
  requestValidatorId: String!
}

input AwsAPIGatewayGetRequestValidatorsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetRequestValidatorsOutput {
  position: String
  items: [AwsAPIGatewayS18]
}

input AwsAPIGatewayGetResourceInput {
  restApiId: String!
  resourceId: String!
  embed: [String]
}

input AwsAPIGatewayGetResourcesInput {
  restApiId: String!
  position: String
  limit: Int
  embed: [String]
}

type AwsAPIGatewayGetResourcesOutput {
  position: String
  items: [AwsAPIGatewayS1a]
}

input AwsAPIGatewayGetRestApiInput {
  restApiId: String!
}

input AwsAPIGatewayGetRestApisInput {
  position: String
  limit: Int
}

type AwsAPIGatewayGetRestApisOutput {
  position: String
  items: [AwsAPIGatewayS1q]
}

input AwsAPIGatewayGetSdkInput {
  restApiId: String!
  stageName: String!
  sdkType: String!
  parameters: JSON
}

type AwsAPIGatewayGetSdkOutput {
  contentType: String
  contentDisposition: String
  body: JSON
}

input AwsAPIGatewayGetSdkTypeInput {
  id: String!
}

input AwsAPIGatewayGetSdkTypesInput {
  position: String
  limit: Int
}

type AwsAPIGatewayGetSdkTypesOutput {
  position: String
  items: [AwsAPIGatewayS4y]
}

input AwsAPIGatewayGetStageInput {
  restApiId: String!
  stageName: String!
}

input AwsAPIGatewayGetStagesInput {
  restApiId: String!
  deploymentId: String
}

type AwsAPIGatewayGetStagesOutput {
  item: [AwsAPIGatewayS1t]
}

input AwsAPIGatewayGetTagsInput {
  resourceArn: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetTagsOutput {
  tags: JSON
}

input AwsAPIGatewayGetUsageInput {
  usagePlanId: String!
  keyId: String
  startDate: String!
  endDate: String!
  position: String
  limit: Int
}

input AwsAPIGatewayGetUsagePlanInput {
  usagePlanId: String!
}

input AwsAPIGatewayGetUsagePlanKeyInput {
  usagePlanId: String!
  keyId: String!
}

input AwsAPIGatewayGetUsagePlanKeysInput {
  usagePlanId: String!
  position: String
  limit: Int
  nameQuery: String
}

type AwsAPIGatewayGetUsagePlanKeysOutput {
  position: String
  items: [AwsAPIGatewayS28]
}

input AwsAPIGatewayGetUsagePlansInput {
  position: String
  keyId: String
  limit: Int
}

type AwsAPIGatewayGetUsagePlansOutput {
  position: String
  items: [AwsAPIGatewayS26]
}

input AwsAPIGatewayGetVpcLinkInput {
  vpcLinkId: String!
}

input AwsAPIGatewayGetVpcLinksInput {
  position: String
  limit: Int
}

type AwsAPIGatewayGetVpcLinksOutput {
  position: String
  items: [AwsAPIGatewayS2a]
}

input AwsAPIGatewayImportApiKeysInput {
  body: JSON!
  format: String!
  failOnWarnings: Boolean
}

type AwsAPIGatewayImportApiKeysOutput {
  ids: [String]
  warnings: [String]
}

input AwsAPIGatewayImportDocumentationPartsInput {
  restApiId: String!
  mode: String
  failOnWarnings: Boolean
  body: JSON!
}

type AwsAPIGatewayImportDocumentationPartsOutput {
  ids: [String]
  warnings: [String]
}

input AwsAPIGatewayImportRestApiInput {
  failOnWarnings: Boolean
  parameters: JSON
  body: JSON!
}

"""AmazonApiGatewayManagementApi (2018-11-29)"""
type AwsApiGatewayManagementApi {
  postToConnection(input: AwsApiGatewayManagementApiPostToConnectionInput!, config: AwsConfig): JSON
}

input AwsApiGatewayManagementApiPostToConnectionInput {
  Data: JSON!
  ConnectionId: String!
}

input AwsAPIGatewayPutGatewayResponseInput {
  restApiId: String!
  responseType: String!
  statusCode: String
  responseParameters: JSON
  responseTemplates: JSON
}

input AwsAPIGatewayPutIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  type: String!
  integrationHttpMethod: String
  uri: String
  connectionType: String
  connectionId: String
  credentials: String
  requestParameters: JSON
  requestTemplates: JSON
  passthroughBehavior: String
  cacheNamespace: String
  cacheKeyParameters: [String]
  contentHandling: String
  timeoutInMillis: Int
}

input AwsAPIGatewayPutIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  selectionPattern: String
  responseParameters: JSON
  responseTemplates: JSON
  contentHandling: String
}

input AwsAPIGatewayPutMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  authorizationType: String!
  authorizerId: String
  apiKeyRequired: Boolean
  operationName: String
  requestParameters: JSON
  requestModels: JSON
  requestValidatorId: String
  authorizationScopes: [String]
}

input AwsAPIGatewayPutMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  responseParameters: JSON
  responseModels: JSON
}

input AwsAPIGatewayPutRestApiInput {
  restApiId: String!
  mode: String
  failOnWarnings: Boolean
  parameters: JSON
  body: JSON!
}

type AwsAPIGatewayS13 {
  domainName: String
  certificateName: String
  certificateArn: String
  certificateUploadDate: Date
  regionalDomainName: String
  regionalHostedZoneId: String
  regionalCertificateName: String
  regionalCertificateArn: String
  distributionDomainName: String
  distributionHostedZoneId: String
  endpointConfiguration: AwsAPIGatewaySz
  domainNameStatus: String
  domainNameStatusMessage: String
  securityPolicy: String
  tags: JSON
}

type AwsAPIGatewayS16 {
  id: String
  name: String
  description: String
  schema: String
  contentType: String
}

type AwsAPIGatewayS18 {
  id: String
  name: String
  validateRequestBody: Boolean
  validateRequestParameters: Boolean
}

type AwsAPIGatewayS1a {
  id: String
  parentId: String
  pathPart: String
  path: String
  resourceMethods: JSON
}

type AwsAPIGatewayS1q {
  id: String
  name: String
  description: String
  createdDate: Date
  version: String
  warnings: [String]
  binaryMediaTypes: [String]
  minimumCompressionSize: Int
  apiKeySource: String
  endpointConfiguration: AwsAPIGatewaySz
  policy: String
  tags: JSON
}

type AwsAPIGatewayS1s {
  percentTraffic: JSON
  deploymentId: String
  stageVariableOverrides: JSON
  useStageCache: Boolean
}

input AwsAPIGatewayS1sInput {
  percentTraffic: JSON
  deploymentId: String
  stageVariableOverrides: JSON
  useStageCache: Boolean
}

type AwsAPIGatewayS1t {
  deploymentId: String
  clientCertificateId: String
  stageName: String
  description: String
  cacheClusterEnabled: Boolean
  cacheClusterSize: String
  cacheClusterStatus: String
  methodSettings: JSON
  variables: JSON
  documentationVersion: String
  accessLogSettings: AwsAPIGatewayS1tAccessLogSettings
  canarySettings: AwsAPIGatewayS1s
  tracingEnabled: Boolean
  webAclArn: String
  tags: JSON
  createdDate: Date
  lastUpdatedDate: Date
}

type AwsAPIGatewayS1tAccessLogSettings {
  format: String
  destinationArn: String
}

type AwsAPIGatewayS20 {
  apiId: String
  stage: String
  throttle: JSON
}

input AwsAPIGatewayS20Input {
  apiId: String
  stage: String
  throttle: JSON
}

type AwsAPIGatewayS23 {
  burstLimit: Int
  rateLimit: JSON
}

input AwsAPIGatewayS23Input {
  burstLimit: Int
  rateLimit: JSON
}

type AwsAPIGatewayS24 {
  limit: Int
  offset: Int
  period: String
}

input AwsAPIGatewayS24Input {
  limit: Int
  offset: Int
  period: String
}

type AwsAPIGatewayS26 {
  id: String
  name: String
  description: String
  apiStages: [AwsAPIGatewayS20]
  throttle: AwsAPIGatewayS23
  quota: AwsAPIGatewayS24
  productCode: String
  tags: JSON
}

type AwsAPIGatewayS28 {
  id: String
  type: String
  value: String
  name: String
}

type AwsAPIGatewayS2a {
  id: String
  name: String
  description: String
  targetArns: [String]
  status: String
  statusMessage: String
  tags: JSON
}

type AwsAPIGatewayS31 {
  clientCertificateId: String
  description: String
  pemEncodedCertificate: String
  createdDate: Date
  expirationDate: Date
  tags: JSON
}

type AwsAPIGatewayS45 {
  responseType: String
  statusCode: String
  responseParameters: JSON
  responseTemplates: JSON
  defaultResponse: Boolean
}

type AwsAPIGatewayS4y {
  id: String
  friendlyName: String
  description: String
  configurationProperties: [AwsAPIGatewayS4yConfigurationProperties]
}

type AwsAPIGatewayS4yConfigurationProperties {
  name: String
  friendlyName: String
  description: String
  required: Boolean
  defaultValue: String
}

input AwsAPIGatewayS6dInput {
  op: String
  path: String
  value: String
  from: String
}

type AwsAPIGatewayS7 {
  id: String
  value: String
  name: String
  customerId: String
  description: String
  enabled: Boolean
  createdDate: Date
  lastUpdatedDate: Date
  stageKeys: [String]
  tags: JSON
}

type AwsAPIGatewaySf {
  id: String
  name: String
  type: String
  providerARNs: [String]
  authType: String
  authorizerUri: String
  authorizerCredentials: String
  identitySource: String
  identityValidationExpression: String
  authorizerResultTtlInSeconds: Int
}

type AwsAPIGatewaySh {
  basePath: String
  restApiId: String
  stage: String
}

type AwsAPIGatewaySn {
  id: String
  description: String
  createdDate: Date
  apiSummary: JSON
}

type AwsAPIGatewaySs {
  type: String!
  path: String
  method: String
  statusCode: String
  name: String
}

input AwsAPIGatewaySsInput {
  type: String!
  path: String
  method: String
  statusCode: String
  name: String
}

type AwsAPIGatewaySv {
  id: String
  location: AwsAPIGatewaySs
  properties: String
}

type AwsAPIGatewaySx {
  version: String
  createdDate: Date
  description: String
}

type AwsAPIGatewaySz {
  types: [String]
}

input AwsAPIGatewaySzInput {
  types: [String]
}

input AwsAPIGatewayTagResourceInput {
  resourceArn: String!
  tags: JSON!
}

input AwsAPIGatewayTestInvokeAuthorizerInput {
  restApiId: String!
  authorizerId: String!
  headers: JSON
  multiValueHeaders: JSON
  pathWithQueryString: String
  body: String
  stageVariables: JSON
  additionalContext: JSON
}

type AwsAPIGatewayTestInvokeAuthorizerOutput {
  clientStatus: Int
  log: String
  latency: JSON
  principalId: String
  policy: String
  authorization: JSON
  claims: JSON
}

input AwsAPIGatewayTestInvokeMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  pathWithQueryString: String
  body: String
  headers: JSON
  multiValueHeaders: JSON
  clientCertificateId: String
  stageVariables: JSON
}

type AwsAPIGatewayTestInvokeMethodOutput {
  status: Int
  body: String
  headers: JSON
  multiValueHeaders: JSON
  log: String
  latency: JSON
}

input AwsAPIGatewayUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsAPIGatewayUpdateAccountInput {
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateApiKeyInput {
  apiKey: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateAuthorizerInput {
  restApiId: String!
  authorizerId: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateBasePathMappingInput {
  domainName: String!
  basePath: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateClientCertificateInput {
  clientCertificateId: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateDeploymentInput {
  restApiId: String!
  deploymentId: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateDocumentationPartInput {
  restApiId: String!
  documentationPartId: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateDomainNameInput {
  domainName: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateGatewayResponseInput {
  restApiId: String!
  responseType: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateModelInput {
  restApiId: String!
  modelName: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateRequestValidatorInput {
  restApiId: String!
  requestValidatorId: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateResourceInput {
  restApiId: String!
  resourceId: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateRestApiInput {
  restApiId: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateStageInput {
  restApiId: String!
  stageName: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateUsageInput {
  usagePlanId: String!
  keyId: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateUsagePlanInput {
  usagePlanId: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

input AwsAPIGatewayUpdateVpcLinkInput {
  vpcLinkId: String!
  patchOperations: [AwsAPIGatewayS6dInput]
}

"""AmazonApiGatewayV2 (2018-11-29)"""
type AwsApiGatewayV2 {
  createApi(input: AwsApiGatewayV2CreateApiInput!, config: AwsConfig): AwsApiGatewayV2CreateApiOutput
  createApiMapping(input: AwsApiGatewayV2CreateApiMappingInput!, config: AwsConfig): AwsApiGatewayV2CreateApiMappingOutput
  createAuthorizer(input: AwsApiGatewayV2CreateAuthorizerInput!, config: AwsConfig): AwsApiGatewayV2CreateAuthorizerOutput
  createDeployment(input: AwsApiGatewayV2CreateDeploymentInput!, config: AwsConfig): AwsApiGatewayV2CreateDeploymentOutput
  createDomainName(input: AwsApiGatewayV2CreateDomainNameInput!, config: AwsConfig): AwsApiGatewayV2CreateDomainNameOutput
  createIntegration(input: AwsApiGatewayV2CreateIntegrationInput!, config: AwsConfig): AwsApiGatewayV2CreateIntegrationOutput
  createIntegrationResponse(input: AwsApiGatewayV2CreateIntegrationResponseInput!, config: AwsConfig): AwsApiGatewayV2CreateIntegrationResponseOutput
  createModel(input: AwsApiGatewayV2CreateModelInput!, config: AwsConfig): AwsApiGatewayV2CreateModelOutput
  createRoute(input: AwsApiGatewayV2CreateRouteInput!, config: AwsConfig): AwsApiGatewayV2CreateRouteOutput
  createRouteResponse(input: AwsApiGatewayV2CreateRouteResponseInput!, config: AwsConfig): AwsApiGatewayV2CreateRouteResponseOutput
  createStage(input: AwsApiGatewayV2CreateStageInput!, config: AwsConfig): AwsApiGatewayV2CreateStageOutput
  deleteApi(input: AwsApiGatewayV2DeleteApiInput!, config: AwsConfig): JSON
  deleteApiMapping(input: AwsApiGatewayV2DeleteApiMappingInput!, config: AwsConfig): JSON
  deleteAuthorizer(input: AwsApiGatewayV2DeleteAuthorizerInput!, config: AwsConfig): JSON
  deleteDeployment(input: AwsApiGatewayV2DeleteDeploymentInput!, config: AwsConfig): JSON
  deleteDomainName(input: AwsApiGatewayV2DeleteDomainNameInput!, config: AwsConfig): JSON
  deleteIntegration(input: AwsApiGatewayV2DeleteIntegrationInput!, config: AwsConfig): JSON
  deleteIntegrationResponse(input: AwsApiGatewayV2DeleteIntegrationResponseInput!, config: AwsConfig): JSON
  deleteModel(input: AwsApiGatewayV2DeleteModelInput!, config: AwsConfig): JSON
  deleteRoute(input: AwsApiGatewayV2DeleteRouteInput!, config: AwsConfig): JSON
  deleteRouteResponse(input: AwsApiGatewayV2DeleteRouteResponseInput!, config: AwsConfig): JSON
  deleteStage(input: AwsApiGatewayV2DeleteStageInput!, config: AwsConfig): JSON
  getApi(input: AwsApiGatewayV2GetApiInput!, config: AwsConfig): AwsApiGatewayV2GetApiOutput
  getApiMapping(input: AwsApiGatewayV2GetApiMappingInput!, config: AwsConfig): AwsApiGatewayV2GetApiMappingOutput
  getApiMappings(input: AwsApiGatewayV2GetApiMappingsInput!, config: AwsConfig): AwsApiGatewayV2GetApiMappingsOutput
  getApis(input: AwsApiGatewayV2GetApisInput, config: AwsConfig): AwsApiGatewayV2GetApisOutput
  getAuthorizer(input: AwsApiGatewayV2GetAuthorizerInput!, config: AwsConfig): AwsApiGatewayV2GetAuthorizerOutput
  getAuthorizers(input: AwsApiGatewayV2GetAuthorizersInput!, config: AwsConfig): AwsApiGatewayV2GetAuthorizersOutput
  getDeployment(input: AwsApiGatewayV2GetDeploymentInput!, config: AwsConfig): AwsApiGatewayV2GetDeploymentOutput
  getDeployments(input: AwsApiGatewayV2GetDeploymentsInput!, config: AwsConfig): AwsApiGatewayV2GetDeploymentsOutput
  getDomainName(input: AwsApiGatewayV2GetDomainNameInput!, config: AwsConfig): AwsApiGatewayV2GetDomainNameOutput
  getDomainNames(input: AwsApiGatewayV2GetDomainNamesInput, config: AwsConfig): AwsApiGatewayV2GetDomainNamesOutput
  getIntegration(input: AwsApiGatewayV2GetIntegrationInput!, config: AwsConfig): AwsApiGatewayV2GetIntegrationOutput
  getIntegrationResponse(input: AwsApiGatewayV2GetIntegrationResponseInput!, config: AwsConfig): AwsApiGatewayV2GetIntegrationResponseOutput
  getIntegrationResponses(input: AwsApiGatewayV2GetIntegrationResponsesInput!, config: AwsConfig): AwsApiGatewayV2GetIntegrationResponsesOutput
  getIntegrations(input: AwsApiGatewayV2GetIntegrationsInput!, config: AwsConfig): AwsApiGatewayV2GetIntegrationsOutput
  getModel(input: AwsApiGatewayV2GetModelInput!, config: AwsConfig): AwsApiGatewayV2GetModelOutput
  getModelTemplate(input: AwsApiGatewayV2GetModelTemplateInput!, config: AwsConfig): AwsApiGatewayV2GetModelTemplateOutput
  getModels(input: AwsApiGatewayV2GetModelsInput!, config: AwsConfig): AwsApiGatewayV2GetModelsOutput
  getRoute(input: AwsApiGatewayV2GetRouteInput!, config: AwsConfig): AwsApiGatewayV2GetRouteOutput
  getRouteResponse(input: AwsApiGatewayV2GetRouteResponseInput!, config: AwsConfig): AwsApiGatewayV2GetRouteResponseOutput
  getRouteResponses(input: AwsApiGatewayV2GetRouteResponsesInput!, config: AwsConfig): AwsApiGatewayV2GetRouteResponsesOutput
  getRoutes(input: AwsApiGatewayV2GetRoutesInput!, config: AwsConfig): AwsApiGatewayV2GetRoutesOutput
  getStage(input: AwsApiGatewayV2GetStageInput!, config: AwsConfig): AwsApiGatewayV2GetStageOutput
  getStages(input: AwsApiGatewayV2GetStagesInput!, config: AwsConfig): AwsApiGatewayV2GetStagesOutput
  getTags(input: AwsApiGatewayV2GetTagsInput!, config: AwsConfig): AwsApiGatewayV2GetTagsOutput
  tagResource(input: AwsApiGatewayV2TagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsApiGatewayV2UntagResourceInput!, config: AwsConfig): JSON
  updateApi(input: AwsApiGatewayV2UpdateApiInput!, config: AwsConfig): AwsApiGatewayV2UpdateApiOutput
  updateApiMapping(input: AwsApiGatewayV2UpdateApiMappingInput!, config: AwsConfig): AwsApiGatewayV2UpdateApiMappingOutput
  updateAuthorizer(input: AwsApiGatewayV2UpdateAuthorizerInput!, config: AwsConfig): AwsApiGatewayV2UpdateAuthorizerOutput
  updateDeployment(input: AwsApiGatewayV2UpdateDeploymentInput!, config: AwsConfig): AwsApiGatewayV2UpdateDeploymentOutput
  updateDomainName(input: AwsApiGatewayV2UpdateDomainNameInput!, config: AwsConfig): AwsApiGatewayV2UpdateDomainNameOutput
  updateIntegration(input: AwsApiGatewayV2UpdateIntegrationInput!, config: AwsConfig): AwsApiGatewayV2UpdateIntegrationOutput
  updateIntegrationResponse(input: AwsApiGatewayV2UpdateIntegrationResponseInput!, config: AwsConfig): AwsApiGatewayV2UpdateIntegrationResponseOutput
  updateModel(input: AwsApiGatewayV2UpdateModelInput!, config: AwsConfig): AwsApiGatewayV2UpdateModelOutput
  updateRoute(input: AwsApiGatewayV2UpdateRouteInput!, config: AwsConfig): AwsApiGatewayV2UpdateRouteOutput
  updateRouteResponse(input: AwsApiGatewayV2UpdateRouteResponseInput!, config: AwsConfig): AwsApiGatewayV2UpdateRouteResponseOutput
  updateStage(input: AwsApiGatewayV2UpdateStageInput!, config: AwsConfig): AwsApiGatewayV2UpdateStageOutput
}

input AwsApiGatewayV2CreateApiInput {
  ApiKeySelectionExpression: String
  Description: String
  DisableSchemaValidation: Boolean
  Name: String!
  ProtocolType: String!
  RouteSelectionExpression: String!
  Version: String
  Tags: JSON
}

input AwsApiGatewayV2CreateApiMappingInput {
  ApiId: String!
  ApiMappingKey: String
  DomainName: String!
  Stage: String!
}

type AwsApiGatewayV2CreateApiMappingOutput {
  ApiId: String
  ApiMappingId: String
  ApiMappingKey: String
  Stage: String
}

type AwsApiGatewayV2CreateApiOutput {
  ApiEndpoint: String
  ApiId: String
  ApiKeySelectionExpression: String
  CreatedDate: Date
  Description: String
  DisableSchemaValidation: Boolean
  Name: String
  ProtocolType: String
  RouteSelectionExpression: String
  Version: String
  Warnings: [String]
  Tags: JSON
}

input AwsApiGatewayV2CreateAuthorizerInput {
  ApiId: String!
  AuthorizerCredentialsArn: String
  AuthorizerResultTtlInSeconds: Int
  AuthorizerType: String!
  AuthorizerUri: String!
  IdentitySource: [String]!
  IdentityValidationExpression: String
  Name: String!
  ProviderArns: [String]
}

type AwsApiGatewayV2CreateAuthorizerOutput {
  AuthorizerCredentialsArn: String
  AuthorizerId: String
  AuthorizerResultTtlInSeconds: Int
  AuthorizerType: String
  AuthorizerUri: String
  IdentitySource: [String]
  IdentityValidationExpression: String
  Name: String
  ProviderArns: [String]
}

input AwsApiGatewayV2CreateDeploymentInput {
  ApiId: String!
  Description: String
  StageName: String
}

type AwsApiGatewayV2CreateDeploymentOutput {
  CreatedDate: Date
  DeploymentId: String
  DeploymentStatus: String
  DeploymentStatusMessage: String
  Description: String
}

input AwsApiGatewayV2CreateDomainNameInput {
  DomainName: String!
  DomainNameConfigurations: [AwsApiGatewayV2SvInput]
  Tags: JSON
}

type AwsApiGatewayV2CreateDomainNameOutput {
  ApiMappingSelectionExpression: String
  DomainName: String
  DomainNameConfigurations: [AwsApiGatewayV2Sv]
  Tags: JSON
}

input AwsApiGatewayV2CreateIntegrationInput {
  ApiId: String!
  ConnectionId: String
  ConnectionType: String
  ContentHandlingStrategy: String
  CredentialsArn: String
  Description: String
  IntegrationMethod: String
  IntegrationType: String!
  IntegrationUri: String
  PassthroughBehavior: String
  RequestParameters: JSON
  RequestTemplates: JSON
  TemplateSelectionExpression: String
  TimeoutInMillis: Int
}

type AwsApiGatewayV2CreateIntegrationOutput {
  ConnectionId: String
  ConnectionType: String
  ContentHandlingStrategy: String
  CredentialsArn: String
  Description: String
  IntegrationId: String
  IntegrationMethod: String
  IntegrationResponseSelectionExpression: String
  IntegrationType: String
  IntegrationUri: String
  PassthroughBehavior: String
  RequestParameters: JSON
  RequestTemplates: JSON
  TemplateSelectionExpression: String
  TimeoutInMillis: Int
}

input AwsApiGatewayV2CreateIntegrationResponseInput {
  ApiId: String!
  ContentHandlingStrategy: String
  IntegrationId: String!
  IntegrationResponseKey: String!
  ResponseParameters: JSON
  ResponseTemplates: JSON
  TemplateSelectionExpression: String
}

type AwsApiGatewayV2CreateIntegrationResponseOutput {
  ContentHandlingStrategy: String
  IntegrationResponseId: String
  IntegrationResponseKey: String
  ResponseParameters: JSON
  ResponseTemplates: JSON
  TemplateSelectionExpression: String
}

input AwsApiGatewayV2CreateModelInput {
  ApiId: String!
  ContentType: String
  Description: String
  Name: String!
  Schema: String!
}

type AwsApiGatewayV2CreateModelOutput {
  ContentType: String
  Description: String
  ModelId: String
  Name: String
  Schema: String
}

input AwsApiGatewayV2CreateRouteInput {
  ApiId: String!
  ApiKeyRequired: Boolean
  AuthorizationScopes: [String]
  AuthorizationType: String
  AuthorizerId: String
  ModelSelectionExpression: String
  OperationName: String
  RequestModels: JSON
  RequestParameters: JSON
  RouteKey: String!
  RouteResponseSelectionExpression: String
  Target: String
}

type AwsApiGatewayV2CreateRouteOutput {
  ApiKeyRequired: Boolean
  AuthorizationScopes: [String]
  AuthorizationType: String
  AuthorizerId: String
  ModelSelectionExpression: String
  OperationName: String
  RequestModels: JSON
  RequestParameters: JSON
  RouteId: String
  RouteKey: String
  RouteResponseSelectionExpression: String
  Target: String
}

input AwsApiGatewayV2CreateRouteResponseInput {
  ApiId: String!
  ModelSelectionExpression: String
  ResponseModels: JSON
  ResponseParameters: JSON
  RouteId: String!
  RouteResponseKey: String!
}

type AwsApiGatewayV2CreateRouteResponseOutput {
  ModelSelectionExpression: String
  ResponseModels: JSON
  ResponseParameters: JSON
  RouteResponseId: String
  RouteResponseKey: String
}

input AwsApiGatewayV2CreateStageInput {
  AccessLogSettings: AwsApiGatewayV2S1rInput
  ApiId: String!
  ClientCertificateId: String
  DefaultRouteSettings: AwsApiGatewayV2S1sInput
  DeploymentId: String
  Description: String
  RouteSettings: JSON
  StageName: String!
  StageVariables: JSON
  Tags: JSON
}

type AwsApiGatewayV2CreateStageOutput {
  AccessLogSettings: AwsApiGatewayV2S1r
  ClientCertificateId: String
  CreatedDate: Date
  DefaultRouteSettings: AwsApiGatewayV2S1s
  DeploymentId: String
  Description: String
  LastUpdatedDate: Date
  RouteSettings: JSON
  StageName: String
  StageVariables: JSON
  Tags: JSON
}

input AwsApiGatewayV2DeleteApiInput {
  ApiId: String!
}

input AwsApiGatewayV2DeleteApiMappingInput {
  ApiMappingId: String!
  DomainName: String!
}

input AwsApiGatewayV2DeleteAuthorizerInput {
  ApiId: String!
  AuthorizerId: String!
}

input AwsApiGatewayV2DeleteDeploymentInput {
  ApiId: String!
  DeploymentId: String!
}

input AwsApiGatewayV2DeleteDomainNameInput {
  DomainName: String!
}

input AwsApiGatewayV2DeleteIntegrationInput {
  ApiId: String!
  IntegrationId: String!
}

input AwsApiGatewayV2DeleteIntegrationResponseInput {
  ApiId: String!
  IntegrationId: String!
  IntegrationResponseId: String!
}

input AwsApiGatewayV2DeleteModelInput {
  ApiId: String!
  ModelId: String!
}

input AwsApiGatewayV2DeleteRouteInput {
  ApiId: String!
  RouteId: String!
}

input AwsApiGatewayV2DeleteRouteResponseInput {
  ApiId: String!
  RouteId: String!
  RouteResponseId: String!
}

input AwsApiGatewayV2DeleteStageInput {
  ApiId: String!
  StageName: String!
}

input AwsApiGatewayV2GetApiInput {
  ApiId: String!
}

input AwsApiGatewayV2GetApiMappingInput {
  ApiMappingId: String!
  DomainName: String!
}

type AwsApiGatewayV2GetApiMappingOutput {
  ApiId: String
  ApiMappingId: String
  ApiMappingKey: String
  Stage: String
}

input AwsApiGatewayV2GetApiMappingsInput {
  DomainName: String!
  MaxResults: String
  NextToken: String
}

type AwsApiGatewayV2GetApiMappingsOutput {
  Items: [AwsApiGatewayV2GetApiMappingsOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetApiMappingsOutputItems {
  ApiId: String!
  ApiMappingId: String
  ApiMappingKey: String
  Stage: String!
}

type AwsApiGatewayV2GetApiOutput {
  ApiEndpoint: String
  ApiId: String
  ApiKeySelectionExpression: String
  CreatedDate: Date
  Description: String
  DisableSchemaValidation: Boolean
  Name: String
  ProtocolType: String
  RouteSelectionExpression: String
  Version: String
  Warnings: [String]
  Tags: JSON
}

input AwsApiGatewayV2GetApisInput {
  MaxResults: String
  NextToken: String
}

type AwsApiGatewayV2GetApisOutput {
  Items: [AwsApiGatewayV2GetApisOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetApisOutputItems {
  ApiEndpoint: String
  ApiId: String
  ApiKeySelectionExpression: String
  CreatedDate: Date
  Description: String
  DisableSchemaValidation: Boolean
  Name: String!
  ProtocolType: String!
  RouteSelectionExpression: String!
  Version: String
  Warnings: [String]
  Tags: JSON
}

input AwsApiGatewayV2GetAuthorizerInput {
  ApiId: String!
  AuthorizerId: String!
}

type AwsApiGatewayV2GetAuthorizerOutput {
  AuthorizerCredentialsArn: String
  AuthorizerId: String
  AuthorizerResultTtlInSeconds: Int
  AuthorizerType: String
  AuthorizerUri: String
  IdentitySource: [String]
  IdentityValidationExpression: String
  Name: String
  ProviderArns: [String]
}

input AwsApiGatewayV2GetAuthorizersInput {
  ApiId: String!
  MaxResults: String
  NextToken: String
}

type AwsApiGatewayV2GetAuthorizersOutput {
  Items: [AwsApiGatewayV2GetAuthorizersOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetAuthorizersOutputItems {
  AuthorizerCredentialsArn: String
  AuthorizerId: String
  AuthorizerResultTtlInSeconds: Int
  AuthorizerType: String
  AuthorizerUri: String
  IdentitySource: [String]
  IdentityValidationExpression: String
  Name: String!
  ProviderArns: [String]
}

input AwsApiGatewayV2GetDeploymentInput {
  ApiId: String!
  DeploymentId: String!
}

type AwsApiGatewayV2GetDeploymentOutput {
  CreatedDate: Date
  DeploymentId: String
  DeploymentStatus: String
  DeploymentStatusMessage: String
  Description: String
}

input AwsApiGatewayV2GetDeploymentsInput {
  ApiId: String!
  MaxResults: String
  NextToken: String
}

type AwsApiGatewayV2GetDeploymentsOutput {
  Items: [AwsApiGatewayV2GetDeploymentsOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetDeploymentsOutputItems {
  CreatedDate: Date
  DeploymentId: String
  DeploymentStatus: String
  DeploymentStatusMessage: String
  Description: String
}

input AwsApiGatewayV2GetDomainNameInput {
  DomainName: String!
}

type AwsApiGatewayV2GetDomainNameOutput {
  ApiMappingSelectionExpression: String
  DomainName: String
  DomainNameConfigurations: [AwsApiGatewayV2Sv]
  Tags: JSON
}

input AwsApiGatewayV2GetDomainNamesInput {
  MaxResults: String
  NextToken: String
}

type AwsApiGatewayV2GetDomainNamesOutput {
  Items: [AwsApiGatewayV2GetDomainNamesOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetDomainNamesOutputItems {
  ApiMappingSelectionExpression: String
  DomainName: String!
  DomainNameConfigurations: [AwsApiGatewayV2Sv]
  Tags: JSON
}

input AwsApiGatewayV2GetIntegrationInput {
  ApiId: String!
  IntegrationId: String!
}

type AwsApiGatewayV2GetIntegrationOutput {
  ConnectionId: String
  ConnectionType: String
  ContentHandlingStrategy: String
  CredentialsArn: String
  Description: String
  IntegrationId: String
  IntegrationMethod: String
  IntegrationResponseSelectionExpression: String
  IntegrationType: String
  IntegrationUri: String
  PassthroughBehavior: String
  RequestParameters: JSON
  RequestTemplates: JSON
  TemplateSelectionExpression: String
  TimeoutInMillis: Int
}

input AwsApiGatewayV2GetIntegrationResponseInput {
  ApiId: String!
  IntegrationId: String!
  IntegrationResponseId: String!
}

type AwsApiGatewayV2GetIntegrationResponseOutput {
  ContentHandlingStrategy: String
  IntegrationResponseId: String
  IntegrationResponseKey: String
  ResponseParameters: JSON
  ResponseTemplates: JSON
  TemplateSelectionExpression: String
}

input AwsApiGatewayV2GetIntegrationResponsesInput {
  ApiId: String!
  IntegrationId: String!
  MaxResults: String
  NextToken: String
}

type AwsApiGatewayV2GetIntegrationResponsesOutput {
  Items: [AwsApiGatewayV2GetIntegrationResponsesOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetIntegrationResponsesOutputItems {
  ContentHandlingStrategy: String
  IntegrationResponseId: String
  IntegrationResponseKey: String!
  ResponseParameters: JSON
  ResponseTemplates: JSON
  TemplateSelectionExpression: String
}

input AwsApiGatewayV2GetIntegrationsInput {
  ApiId: String!
  MaxResults: String
  NextToken: String
}

type AwsApiGatewayV2GetIntegrationsOutput {
  Items: [AwsApiGatewayV2GetIntegrationsOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetIntegrationsOutputItems {
  ConnectionId: String
  ConnectionType: String
  ContentHandlingStrategy: String
  CredentialsArn: String
  Description: String
  IntegrationId: String
  IntegrationMethod: String
  IntegrationResponseSelectionExpression: String
  IntegrationType: String
  IntegrationUri: String
  PassthroughBehavior: String
  RequestParameters: JSON
  RequestTemplates: JSON
  TemplateSelectionExpression: String
  TimeoutInMillis: Int
}

input AwsApiGatewayV2GetModelInput {
  ApiId: String!
  ModelId: String!
}

type AwsApiGatewayV2GetModelOutput {
  ContentType: String
  Description: String
  ModelId: String
  Name: String
  Schema: String
}

input AwsApiGatewayV2GetModelsInput {
  ApiId: String!
  MaxResults: String
  NextToken: String
}

type AwsApiGatewayV2GetModelsOutput {
  Items: [AwsApiGatewayV2GetModelsOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetModelsOutputItems {
  ContentType: String
  Description: String
  ModelId: String
  Name: String!
  Schema: String
}

input AwsApiGatewayV2GetModelTemplateInput {
  ApiId: String!
  ModelId: String!
}

type AwsApiGatewayV2GetModelTemplateOutput {
  Value: String
}

input AwsApiGatewayV2GetRouteInput {
  ApiId: String!
  RouteId: String!
}

type AwsApiGatewayV2GetRouteOutput {
  ApiKeyRequired: Boolean
  AuthorizationScopes: [String]
  AuthorizationType: String
  AuthorizerId: String
  ModelSelectionExpression: String
  OperationName: String
  RequestModels: JSON
  RequestParameters: JSON
  RouteId: String
  RouteKey: String
  RouteResponseSelectionExpression: String
  Target: String
}

input AwsApiGatewayV2GetRouteResponseInput {
  ApiId: String!
  RouteId: String!
  RouteResponseId: String!
}

type AwsApiGatewayV2GetRouteResponseOutput {
  ModelSelectionExpression: String
  ResponseModels: JSON
  ResponseParameters: JSON
  RouteResponseId: String
  RouteResponseKey: String
}

input AwsApiGatewayV2GetRouteResponsesInput {
  ApiId: String!
  MaxResults: String
  NextToken: String
  RouteId: String!
}

type AwsApiGatewayV2GetRouteResponsesOutput {
  Items: [AwsApiGatewayV2GetRouteResponsesOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetRouteResponsesOutputItems {
  ModelSelectionExpression: String
  ResponseModels: JSON
  ResponseParameters: JSON
  RouteResponseId: String
  RouteResponseKey: String!
}

input AwsApiGatewayV2GetRoutesInput {
  ApiId: String!
  MaxResults: String
  NextToken: String
}

type AwsApiGatewayV2GetRoutesOutput {
  Items: [AwsApiGatewayV2GetRoutesOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetRoutesOutputItems {
  ApiKeyRequired: Boolean
  AuthorizationScopes: [String]
  AuthorizationType: String
  AuthorizerId: String
  ModelSelectionExpression: String
  OperationName: String
  RequestModels: JSON
  RequestParameters: JSON
  RouteId: String
  RouteKey: String!
  RouteResponseSelectionExpression: String
  Target: String
}

input AwsApiGatewayV2GetStageInput {
  ApiId: String!
  StageName: String!
}

type AwsApiGatewayV2GetStageOutput {
  AccessLogSettings: AwsApiGatewayV2S1r
  ClientCertificateId: String
  CreatedDate: Date
  DefaultRouteSettings: AwsApiGatewayV2S1s
  DeploymentId: String
  Description: String
  LastUpdatedDate: Date
  RouteSettings: JSON
  StageName: String
  StageVariables: JSON
  Tags: JSON
}

input AwsApiGatewayV2GetStagesInput {
  ApiId: String!
  MaxResults: String
  NextToken: String
}

type AwsApiGatewayV2GetStagesOutput {
  Items: [AwsApiGatewayV2GetStagesOutputItems]
  NextToken: String
}

type AwsApiGatewayV2GetStagesOutputItems {
  AccessLogSettings: AwsApiGatewayV2S1r
  ClientCertificateId: String
  CreatedDate: Date
  DefaultRouteSettings: AwsApiGatewayV2S1s
  DeploymentId: String
  Description: String
  LastUpdatedDate: Date
  RouteSettings: JSON
  StageName: String!
  StageVariables: JSON
  Tags: JSON
}

input AwsApiGatewayV2GetTagsInput {
  ResourceArn: String!
}

type AwsApiGatewayV2GetTagsOutput {
  Tags: JSON
}

type AwsApiGatewayV2S1r {
  DestinationArn: String
  Format: String
}

input AwsApiGatewayV2S1rInput {
  DestinationArn: String
  Format: String
}

type AwsApiGatewayV2S1s {
  DataTraceEnabled: Boolean
  DetailedMetricsEnabled: Boolean
  LoggingLevel: String
  ThrottlingBurstLimit: Int
  ThrottlingRateLimit: JSON
}

input AwsApiGatewayV2S1sInput {
  DataTraceEnabled: Boolean
  DetailedMetricsEnabled: Boolean
  LoggingLevel: String
  ThrottlingBurstLimit: Int
  ThrottlingRateLimit: JSON
}

type AwsApiGatewayV2Sv {
  ApiGatewayDomainName: String
  CertificateArn: String
  CertificateName: String
  CertificateUploadDate: Date
  EndpointType: String
  HostedZoneId: String
  SecurityPolicy: String
  DomainNameStatus: String
  DomainNameStatusMessage: String
}

input AwsApiGatewayV2SvInput {
  ApiGatewayDomainName: String
  CertificateArn: String
  CertificateName: String
  CertificateUploadDate: Date
  EndpointType: String
  HostedZoneId: String
  SecurityPolicy: String
  DomainNameStatus: String
  DomainNameStatusMessage: String
}

input AwsApiGatewayV2TagResourceInput {
  ResourceArn: String!
  Tags: JSON
}

input AwsApiGatewayV2UntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsApiGatewayV2UpdateApiInput {
  ApiId: String!
  ApiKeySelectionExpression: String
  Description: String
  DisableSchemaValidation: Boolean
  Name: String
  RouteSelectionExpression: String
  Version: String
}

input AwsApiGatewayV2UpdateApiMappingInput {
  ApiId: String!
  ApiMappingId: String!
  ApiMappingKey: String
  DomainName: String!
  Stage: String
}

type AwsApiGatewayV2UpdateApiMappingOutput {
  ApiId: String
  ApiMappingId: String
  ApiMappingKey: String
  Stage: String
}

type AwsApiGatewayV2UpdateApiOutput {
  ApiEndpoint: String
  ApiId: String
  ApiKeySelectionExpression: String
  CreatedDate: Date
  Description: String
  DisableSchemaValidation: Boolean
  Name: String
  ProtocolType: String
  RouteSelectionExpression: String
  Version: String
  Warnings: [String]
}

input AwsApiGatewayV2UpdateAuthorizerInput {
  ApiId: String!
  AuthorizerCredentialsArn: String
  AuthorizerId: String!
  AuthorizerResultTtlInSeconds: Int
  AuthorizerType: String
  AuthorizerUri: String
  IdentitySource: [String]
  IdentityValidationExpression: String
  Name: String
  ProviderArns: [String]
}

type AwsApiGatewayV2UpdateAuthorizerOutput {
  AuthorizerCredentialsArn: String
  AuthorizerId: String
  AuthorizerResultTtlInSeconds: Int
  AuthorizerType: String
  AuthorizerUri: String
  IdentitySource: [String]
  IdentityValidationExpression: String
  Name: String
  ProviderArns: [String]
}

input AwsApiGatewayV2UpdateDeploymentInput {
  ApiId: String!
  DeploymentId: String!
  Description: String
}

type AwsApiGatewayV2UpdateDeploymentOutput {
  CreatedDate: Date
  DeploymentId: String
  DeploymentStatus: String
  DeploymentStatusMessage: String
  Description: String
}

input AwsApiGatewayV2UpdateDomainNameInput {
  DomainName: String!
  DomainNameConfigurations: [AwsApiGatewayV2SvInput]
}

type AwsApiGatewayV2UpdateDomainNameOutput {
  ApiMappingSelectionExpression: String
  DomainName: String
  DomainNameConfigurations: [AwsApiGatewayV2Sv]
}

input AwsApiGatewayV2UpdateIntegrationInput {
  ApiId: String!
  ConnectionId: String
  ConnectionType: String
  ContentHandlingStrategy: String
  CredentialsArn: String
  Description: String
  IntegrationId: String!
  IntegrationMethod: String
  IntegrationType: String
  IntegrationUri: String
  PassthroughBehavior: String
  RequestParameters: JSON
  RequestTemplates: JSON
  TemplateSelectionExpression: String
  TimeoutInMillis: Int
}

type AwsApiGatewayV2UpdateIntegrationOutput {
  ConnectionId: String
  ConnectionType: String
  ContentHandlingStrategy: String
  CredentialsArn: String
  Description: String
  IntegrationId: String
  IntegrationMethod: String
  IntegrationResponseSelectionExpression: String
  IntegrationType: String
  IntegrationUri: String
  PassthroughBehavior: String
  RequestParameters: JSON
  RequestTemplates: JSON
  TemplateSelectionExpression: String
  TimeoutInMillis: Int
}

input AwsApiGatewayV2UpdateIntegrationResponseInput {
  ApiId: String!
  ContentHandlingStrategy: String
  IntegrationId: String!
  IntegrationResponseId: String!
  IntegrationResponseKey: String
  ResponseParameters: JSON
  ResponseTemplates: JSON
  TemplateSelectionExpression: String
}

type AwsApiGatewayV2UpdateIntegrationResponseOutput {
  ContentHandlingStrategy: String
  IntegrationResponseId: String
  IntegrationResponseKey: String
  ResponseParameters: JSON
  ResponseTemplates: JSON
  TemplateSelectionExpression: String
}

input AwsApiGatewayV2UpdateModelInput {
  ApiId: String!
  ContentType: String
  Description: String
  ModelId: String!
  Name: String
  Schema: String
}

type AwsApiGatewayV2UpdateModelOutput {
  ContentType: String
  Description: String
  ModelId: String
  Name: String
  Schema: String
}

input AwsApiGatewayV2UpdateRouteInput {
  ApiId: String!
  ApiKeyRequired: Boolean
  AuthorizationScopes: [String]
  AuthorizationType: String
  AuthorizerId: String
  ModelSelectionExpression: String
  OperationName: String
  RequestModels: JSON
  RequestParameters: JSON
  RouteId: String!
  RouteKey: String
  RouteResponseSelectionExpression: String
  Target: String
}

type AwsApiGatewayV2UpdateRouteOutput {
  ApiKeyRequired: Boolean
  AuthorizationScopes: [String]
  AuthorizationType: String
  AuthorizerId: String
  ModelSelectionExpression: String
  OperationName: String
  RequestModels: JSON
  RequestParameters: JSON
  RouteId: String
  RouteKey: String
  RouteResponseSelectionExpression: String
  Target: String
}

input AwsApiGatewayV2UpdateRouteResponseInput {
  ApiId: String!
  ModelSelectionExpression: String
  ResponseModels: JSON
  ResponseParameters: JSON
  RouteId: String!
  RouteResponseId: String!
  RouteResponseKey: String
}

type AwsApiGatewayV2UpdateRouteResponseOutput {
  ModelSelectionExpression: String
  ResponseModels: JSON
  ResponseParameters: JSON
  RouteResponseId: String
  RouteResponseKey: String
}

input AwsApiGatewayV2UpdateStageInput {
  AccessLogSettings: AwsApiGatewayV2S1rInput
  ApiId: String!
  ClientCertificateId: String
  DefaultRouteSettings: AwsApiGatewayV2S1sInput
  DeploymentId: String
  Description: String
  RouteSettings: JSON
  StageName: String!
  StageVariables: JSON
}

type AwsApiGatewayV2UpdateStageOutput {
  AccessLogSettings: AwsApiGatewayV2S1r
  ClientCertificateId: String
  CreatedDate: Date
  DefaultRouteSettings: AwsApiGatewayV2S1s
  DeploymentId: String
  Description: String
  LastUpdatedDate: Date
  RouteSettings: JSON
  StageName: String
  StageVariables: JSON
}

"""Application Auto Scaling (2016-02-06)"""
type AwsApplicationAutoScaling {
  deleteScalingPolicy(input: AwsApplicationAutoScalingDeleteScalingPolicyInput!, config: AwsConfig): JSON
  deleteScheduledAction(input: AwsApplicationAutoScalingDeleteScheduledActionInput!, config: AwsConfig): JSON
  deregisterScalableTarget(input: AwsApplicationAutoScalingDeregisterScalableTargetInput!, config: AwsConfig): JSON
  describeScalableTargets(input: AwsApplicationAutoScalingDescribeScalableTargetsInput!, config: AwsConfig): AwsApplicationAutoScalingDescribeScalableTargetsOutput
  describeScalingActivities(input: AwsApplicationAutoScalingDescribeScalingActivitiesInput!, config: AwsConfig): AwsApplicationAutoScalingDescribeScalingActivitiesOutput
  describeScalingPolicies(input: AwsApplicationAutoScalingDescribeScalingPoliciesInput!, config: AwsConfig): AwsApplicationAutoScalingDescribeScalingPoliciesOutput
  describeScheduledActions(input: AwsApplicationAutoScalingDescribeScheduledActionsInput!, config: AwsConfig): AwsApplicationAutoScalingDescribeScheduledActionsOutput
  putScalingPolicy(input: AwsApplicationAutoScalingPutScalingPolicyInput!, config: AwsConfig): AwsApplicationAutoScalingPutScalingPolicyOutput
  putScheduledAction(input: AwsApplicationAutoScalingPutScheduledActionInput!, config: AwsConfig): JSON
  registerScalableTarget(input: AwsApplicationAutoScalingRegisterScalableTargetInput!, config: AwsConfig): JSON
}

input AwsApplicationAutoScalingDeleteScalingPolicyInput {
  PolicyName: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
}

input AwsApplicationAutoScalingDeleteScheduledActionInput {
  ServiceNamespace: String!
  ScheduledActionName: String!
  ResourceId: String!
  ScalableDimension: String!
}

input AwsApplicationAutoScalingDeregisterScalableTargetInput {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
}

input AwsApplicationAutoScalingDescribeScalableTargetsInput {
  ServiceNamespace: String!
  ResourceIds: [String]
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalableTargetsOutput {
  ScalableTargets: [AwsApplicationAutoScalingDescribeScalableTargetsOutputScalableTargets]
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalableTargetsOutputScalableTargets {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  MinCapacity: Int!
  MaxCapacity: Int!
  RoleARN: String!
  CreationTime: Date!
}

input AwsApplicationAutoScalingDescribeScalingActivitiesInput {
  ServiceNamespace: String!
  ResourceId: String
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalingActivitiesOutput {
  ScalingActivities: [AwsApplicationAutoScalingDescribeScalingActivitiesOutputScalingActivities]
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalingActivitiesOutputScalingActivities {
  ActivityId: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  Description: String!
  Cause: String!
  StartTime: Date!
  EndTime: Date
  StatusCode: String!
  StatusMessage: String
  Details: String
}

input AwsApplicationAutoScalingDescribeScalingPoliciesInput {
  PolicyNames: [String]
  ServiceNamespace: String!
  ResourceId: String
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalingPoliciesOutput {
  ScalingPolicies: [AwsApplicationAutoScalingDescribeScalingPoliciesOutputScalingPolicies]
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalingPoliciesOutputScalingPolicies {
  PolicyARN: String!
  PolicyName: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  PolicyType: String!
  StepScalingPolicyConfiguration: AwsApplicationAutoScalingSv
  TargetTrackingScalingPolicyConfiguration: AwsApplicationAutoScalingS14
  Alarms: [AwsApplicationAutoScalingS1i]
  CreationTime: Date!
}

input AwsApplicationAutoScalingDescribeScheduledActionsInput {
  ScheduledActionNames: [String]
  ServiceNamespace: String!
  ResourceId: String
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScheduledActionsOutput {
  ScheduledActions: [AwsApplicationAutoScalingDescribeScheduledActionsOutputScheduledActions]
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScheduledActionsOutputScheduledActions {
  ScheduledActionName: String!
  ScheduledActionARN: String!
  ServiceNamespace: String!
  Schedule: String!
  ResourceId: String!
  ScalableDimension: String
  StartTime: Date
  EndTime: Date
  ScalableTargetAction: AwsApplicationAutoScalingS1p
  CreationTime: Date!
}

input AwsApplicationAutoScalingPutScalingPolicyInput {
  PolicyName: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  PolicyType: String
  StepScalingPolicyConfiguration: AwsApplicationAutoScalingSvInput
  TargetTrackingScalingPolicyConfiguration: AwsApplicationAutoScalingS14Input
}

type AwsApplicationAutoScalingPutScalingPolicyOutput {
  PolicyARN: String!
  Alarms: [AwsApplicationAutoScalingS1i]
}

input AwsApplicationAutoScalingPutScheduledActionInput {
  ServiceNamespace: String!
  Schedule: String
  ScheduledActionName: String!
  ResourceId: String!
  ScalableDimension: String!
  StartTime: Date
  EndTime: Date
  ScalableTargetAction: AwsApplicationAutoScalingS1pInput
}

input AwsApplicationAutoScalingRegisterScalableTargetInput {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  MinCapacity: Int
  MaxCapacity: Int
  RoleARN: String
}

type AwsApplicationAutoScalingS14 {
  TargetValue: JSON!
  PredefinedMetricSpecification: AwsApplicationAutoScalingS14PredefinedMetricSpecification
  CustomizedMetricSpecification: AwsApplicationAutoScalingS14CustomizedMetricSpecification
  ScaleOutCooldown: Int
  ScaleInCooldown: Int
  DisableScaleIn: Boolean
}

type AwsApplicationAutoScalingS14CustomizedMetricSpecification {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsApplicationAutoScalingS14CustomizedMetricSpecificationDimensions]
  Statistic: String!
  Unit: String
}

type AwsApplicationAutoScalingS14CustomizedMetricSpecificationDimensions {
  Name: String!
  Value: String!
}

input AwsApplicationAutoScalingS14CustomizedMetricSpecificationDimensionsInput {
  Name: String!
  Value: String!
}

input AwsApplicationAutoScalingS14CustomizedMetricSpecificationInput {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsApplicationAutoScalingS14CustomizedMetricSpecificationDimensionsInput]
  Statistic: String!
  Unit: String
}

input AwsApplicationAutoScalingS14Input {
  TargetValue: JSON!
  PredefinedMetricSpecification: AwsApplicationAutoScalingS14PredefinedMetricSpecificationInput
  CustomizedMetricSpecification: AwsApplicationAutoScalingS14CustomizedMetricSpecificationInput
  ScaleOutCooldown: Int
  ScaleInCooldown: Int
  DisableScaleIn: Boolean
}

type AwsApplicationAutoScalingS14PredefinedMetricSpecification {
  PredefinedMetricType: String!
  ResourceLabel: String
}

input AwsApplicationAutoScalingS14PredefinedMetricSpecificationInput {
  PredefinedMetricType: String!
  ResourceLabel: String
}

type AwsApplicationAutoScalingS1i {
  AlarmName: String!
  AlarmARN: String!
}

type AwsApplicationAutoScalingS1p {
  MinCapacity: Int
  MaxCapacity: Int
}

input AwsApplicationAutoScalingS1pInput {
  MinCapacity: Int
  MaxCapacity: Int
}

type AwsApplicationAutoScalingSv {
  AdjustmentType: String
  StepAdjustments: [AwsApplicationAutoScalingSvStepAdjustments]
  MinAdjustmentMagnitude: Int
  Cooldown: Int
  MetricAggregationType: String
}

input AwsApplicationAutoScalingSvInput {
  AdjustmentType: String
  StepAdjustments: [AwsApplicationAutoScalingSvStepAdjustmentsInput]
  MinAdjustmentMagnitude: Int
  Cooldown: Int
  MetricAggregationType: String
}

type AwsApplicationAutoScalingSvStepAdjustments {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

input AwsApplicationAutoScalingSvStepAdjustmentsInput {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

"""Amazon CloudWatch Application Insights (2018-11-25)"""
type AwsApplicationInsights {
  createApplication(input: AwsApplicationInsightsCreateApplicationInput!, config: AwsConfig): AwsApplicationInsightsCreateApplicationOutput
  createComponent(input: AwsApplicationInsightsCreateComponentInput!, config: AwsConfig): JSON
  deleteApplication(input: AwsApplicationInsightsDeleteApplicationInput!, config: AwsConfig): JSON
  deleteComponent(input: AwsApplicationInsightsDeleteComponentInput!, config: AwsConfig): JSON
  describeApplication(input: AwsApplicationInsightsDescribeApplicationInput!, config: AwsConfig): AwsApplicationInsightsDescribeApplicationOutput
  describeComponent(input: AwsApplicationInsightsDescribeComponentInput!, config: AwsConfig): AwsApplicationInsightsDescribeComponentOutput
  describeComponentConfiguration(input: AwsApplicationInsightsDescribeComponentConfigurationInput!, config: AwsConfig): AwsApplicationInsightsDescribeComponentConfigurationOutput
  describeComponentConfigurationRecommendation(input: AwsApplicationInsightsDescribeComponentConfigurationRecommendationInput!, config: AwsConfig): AwsApplicationInsightsDescribeComponentConfigurationRecommendationOutput
  describeObservation(input: AwsApplicationInsightsDescribeObservationInput!, config: AwsConfig): AwsApplicationInsightsDescribeObservationOutput
  describeProblem(input: AwsApplicationInsightsDescribeProblemInput!, config: AwsConfig): AwsApplicationInsightsDescribeProblemOutput
  describeProblemObservations(input: AwsApplicationInsightsDescribeProblemObservationsInput!, config: AwsConfig): AwsApplicationInsightsDescribeProblemObservationsOutput
  listApplications(input: AwsApplicationInsightsListApplicationsInput, config: AwsConfig): AwsApplicationInsightsListApplicationsOutput
  listComponents(input: AwsApplicationInsightsListComponentsInput!, config: AwsConfig): AwsApplicationInsightsListComponentsOutput
  listProblems(input: AwsApplicationInsightsListProblemsInput, config: AwsConfig): AwsApplicationInsightsListProblemsOutput
  updateComponent(input: AwsApplicationInsightsUpdateComponentInput!, config: AwsConfig): JSON
  updateComponentConfiguration(input: AwsApplicationInsightsUpdateComponentConfigurationInput!, config: AwsConfig): JSON
}

input AwsApplicationInsightsCreateApplicationInput {
  ResourceGroupName: String!
}

type AwsApplicationInsightsCreateApplicationOutput {
  ApplicationInfo: AwsApplicationInsightsS4
}

input AwsApplicationInsightsCreateComponentInput {
  ResourceGroupName: String!
  ComponentName: String!
  ResourceList: [String]!
}

input AwsApplicationInsightsDeleteApplicationInput {
  ResourceGroupName: String!
}

input AwsApplicationInsightsDeleteComponentInput {
  ResourceGroupName: String!
  ComponentName: String!
}

input AwsApplicationInsightsDescribeApplicationInput {
  ResourceGroupName: String!
}

type AwsApplicationInsightsDescribeApplicationOutput {
  ApplicationInfo: AwsApplicationInsightsS4
}

input AwsApplicationInsightsDescribeComponentConfigurationInput {
  ResourceGroupName: String!
  ComponentName: String!
}

type AwsApplicationInsightsDescribeComponentConfigurationOutput {
  Monitor: Boolean
  Tier: String
  ComponentConfiguration: String
}

input AwsApplicationInsightsDescribeComponentConfigurationRecommendationInput {
  ResourceGroupName: String!
  ComponentName: String!
  Tier: String!
}

type AwsApplicationInsightsDescribeComponentConfigurationRecommendationOutput {
  ComponentConfiguration: String
}

input AwsApplicationInsightsDescribeComponentInput {
  ResourceGroupName: String!
  ComponentName: String!
}

type AwsApplicationInsightsDescribeComponentOutput {
  ApplicationComponent: AwsApplicationInsightsSk
  ResourceList: [String]
}

input AwsApplicationInsightsDescribeObservationInput {
  ObservationId: String!
}

type AwsApplicationInsightsDescribeObservationOutput {
  Observation: AwsApplicationInsightsSw
}

input AwsApplicationInsightsDescribeProblemInput {
  ProblemId: String!
}

input AwsApplicationInsightsDescribeProblemObservationsInput {
  ProblemId: String!
}

type AwsApplicationInsightsDescribeProblemObservationsOutput {
  RelatedObservations: AwsApplicationInsightsDescribeProblemObservationsOutputRelatedObservations
}

type AwsApplicationInsightsDescribeProblemObservationsOutputRelatedObservations {
  ObservationList: [AwsApplicationInsightsSw]
}

type AwsApplicationInsightsDescribeProblemOutput {
  Problem: AwsApplicationInsightsS1c
}

input AwsApplicationInsightsListApplicationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsApplicationInsightsListApplicationsOutput {
  ApplicationInfoList: [AwsApplicationInsightsS4]
  NextToken: String
}

input AwsApplicationInsightsListComponentsInput {
  ResourceGroupName: String!
  MaxResults: Int
  NextToken: String
}

type AwsApplicationInsightsListComponentsOutput {
  ApplicationComponentList: [AwsApplicationInsightsSk]
  NextToken: String
}

input AwsApplicationInsightsListProblemsInput {
  ResourceGroupName: String
  StartTime: Date
  EndTime: Date
  MaxResults: Int
  NextToken: String
}

type AwsApplicationInsightsListProblemsOutput {
  ProblemList: [AwsApplicationInsightsS1c]
  NextToken: String
}

type AwsApplicationInsightsS1c {
  Id: String
  Title: String
  Insights: String
  Status: String
  AffectedResource: String
  StartTime: Date
  EndTime: Date
  SeverityLevel: String
  ResourceGroupName: String
  Feedback: JSON
}

type AwsApplicationInsightsS4 {
  ResourceGroupName: String
  LifeCycle: String
  Remarks: String
}

type AwsApplicationInsightsSk {
  ComponentName: String
  ResourceType: String
  Tier: String
  Monitor: Boolean
}

type AwsApplicationInsightsSw {
  Id: String
  StartTime: Date
  EndTime: Date
  SourceType: String
  SourceARN: String
  LogGroup: String
  LineTime: Date
  LogText: String
  LogFilter: String
  MetricNamespace: String
  MetricName: String
  Unit: String
  Value: JSON
}

input AwsApplicationInsightsUpdateComponentConfigurationInput {
  ResourceGroupName: String!
  ComponentName: String!
  Monitor: Boolean
  Tier: String
  ComponentConfiguration: String
}

input AwsApplicationInsightsUpdateComponentInput {
  ResourceGroupName: String!
  ComponentName: String!
  NewComponentName: String
  ResourceList: [String]
}

"""AWS App Mesh (2019-01-25)"""
type AwsAppMesh {
  createMesh(input: AwsAppMeshCreateMeshInput!, config: AwsConfig): AwsAppMeshCreateMeshOutput
  createRoute(input: AwsAppMeshCreateRouteInput!, config: AwsConfig): AwsAppMeshCreateRouteOutput
  createVirtualNode(input: AwsAppMeshCreateVirtualNodeInput!, config: AwsConfig): AwsAppMeshCreateVirtualNodeOutput
  createVirtualRouter(input: AwsAppMeshCreateVirtualRouterInput!, config: AwsConfig): AwsAppMeshCreateVirtualRouterOutput
  createVirtualService(input: AwsAppMeshCreateVirtualServiceInput!, config: AwsConfig): AwsAppMeshCreateVirtualServiceOutput
  deleteMesh(input: AwsAppMeshDeleteMeshInput!, config: AwsConfig): AwsAppMeshDeleteMeshOutput
  deleteRoute(input: AwsAppMeshDeleteRouteInput!, config: AwsConfig): AwsAppMeshDeleteRouteOutput
  deleteVirtualNode(input: AwsAppMeshDeleteVirtualNodeInput!, config: AwsConfig): AwsAppMeshDeleteVirtualNodeOutput
  deleteVirtualRouter(input: AwsAppMeshDeleteVirtualRouterInput!, config: AwsConfig): AwsAppMeshDeleteVirtualRouterOutput
  deleteVirtualService(input: AwsAppMeshDeleteVirtualServiceInput!, config: AwsConfig): AwsAppMeshDeleteVirtualServiceOutput
  describeMesh(input: AwsAppMeshDescribeMeshInput!, config: AwsConfig): AwsAppMeshDescribeMeshOutput
  describeRoute(input: AwsAppMeshDescribeRouteInput!, config: AwsConfig): AwsAppMeshDescribeRouteOutput
  describeVirtualNode(input: AwsAppMeshDescribeVirtualNodeInput!, config: AwsConfig): AwsAppMeshDescribeVirtualNodeOutput
  describeVirtualRouter(input: AwsAppMeshDescribeVirtualRouterInput!, config: AwsConfig): AwsAppMeshDescribeVirtualRouterOutput
  describeVirtualService(input: AwsAppMeshDescribeVirtualServiceInput!, config: AwsConfig): AwsAppMeshDescribeVirtualServiceOutput
  listMeshes(input: AwsAppMeshListMeshesInput, config: AwsConfig): AwsAppMeshListMeshesOutput
  listRoutes(input: AwsAppMeshListRoutesInput!, config: AwsConfig): AwsAppMeshListRoutesOutput
  listTagsForResource(input: AwsAppMeshListTagsForResourceInput!, config: AwsConfig): AwsAppMeshListTagsForResourceOutput
  listVirtualNodes(input: AwsAppMeshListVirtualNodesInput!, config: AwsConfig): AwsAppMeshListVirtualNodesOutput
  listVirtualRouters(input: AwsAppMeshListVirtualRoutersInput!, config: AwsConfig): AwsAppMeshListVirtualRoutersOutput
  listVirtualServices(input: AwsAppMeshListVirtualServicesInput!, config: AwsConfig): AwsAppMeshListVirtualServicesOutput
  tagResource(input: AwsAppMeshTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsAppMeshUntagResourceInput!, config: AwsConfig): JSON
  updateMesh(input: AwsAppMeshUpdateMeshInput!, config: AwsConfig): AwsAppMeshUpdateMeshOutput
  updateRoute(input: AwsAppMeshUpdateRouteInput!, config: AwsConfig): AwsAppMeshUpdateRouteOutput
  updateVirtualNode(input: AwsAppMeshUpdateVirtualNodeInput!, config: AwsConfig): AwsAppMeshUpdateVirtualNodeOutput
  updateVirtualRouter(input: AwsAppMeshUpdateVirtualRouterInput!, config: AwsConfig): AwsAppMeshUpdateVirtualRouterOutput
  updateVirtualService(input: AwsAppMeshUpdateVirtualServiceInput!, config: AwsConfig): AwsAppMeshUpdateVirtualServiceOutput
}

input AwsAppMeshCreateMeshInput {
  clientToken: String
  meshName: String!
  spec: AwsAppMeshS4Input
  tags: [AwsAppMeshS7Input]
}

type AwsAppMeshCreateMeshOutput {
  mesh: AwsAppMeshSc!
}

input AwsAppMeshCreateRouteInput {
  clientToken: String
  meshName: String!
  routeName: String!
  spec: AwsAppMeshSkInput!
  tags: [AwsAppMeshS7Input]
  virtualRouterName: String!
}

type AwsAppMeshCreateRouteOutput {
  route: AwsAppMeshSu!
}

input AwsAppMeshCreateVirtualNodeInput {
  clientToken: String
  meshName: String!
  spec: AwsAppMeshSyInput!
  tags: [AwsAppMeshS7Input]
  virtualNodeName: String!
}

type AwsAppMeshCreateVirtualNodeOutput {
  virtualNode: AwsAppMeshS1q!
}

input AwsAppMeshCreateVirtualRouterInput {
  clientToken: String
  meshName: String!
  spec: AwsAppMeshS1uInput!
  tags: [AwsAppMeshS7Input]
  virtualRouterName: String!
}

type AwsAppMeshCreateVirtualRouterOutput {
  virtualRouter: AwsAppMeshS1y!
}

input AwsAppMeshCreateVirtualServiceInput {
  clientToken: String
  meshName: String!
  spec: AwsAppMeshS22Input!
  tags: [AwsAppMeshS7Input]
  virtualServiceName: String!
}

type AwsAppMeshCreateVirtualServiceOutput {
  virtualService: AwsAppMeshS27!
}

input AwsAppMeshDeleteMeshInput {
  meshName: String!
}

type AwsAppMeshDeleteMeshOutput {
  mesh: AwsAppMeshSc!
}

input AwsAppMeshDeleteRouteInput {
  meshName: String!
  routeName: String!
  virtualRouterName: String!
}

type AwsAppMeshDeleteRouteOutput {
  route: AwsAppMeshSu!
}

input AwsAppMeshDeleteVirtualNodeInput {
  meshName: String!
  virtualNodeName: String!
}

type AwsAppMeshDeleteVirtualNodeOutput {
  virtualNode: AwsAppMeshS1q!
}

input AwsAppMeshDeleteVirtualRouterInput {
  meshName: String!
  virtualRouterName: String!
}

type AwsAppMeshDeleteVirtualRouterOutput {
  virtualRouter: AwsAppMeshS1y!
}

input AwsAppMeshDeleteVirtualServiceInput {
  meshName: String!
  virtualServiceName: String!
}

type AwsAppMeshDeleteVirtualServiceOutput {
  virtualService: AwsAppMeshS27!
}

input AwsAppMeshDescribeMeshInput {
  meshName: String!
}

type AwsAppMeshDescribeMeshOutput {
  mesh: AwsAppMeshSc!
}

input AwsAppMeshDescribeRouteInput {
  meshName: String!
  routeName: String!
  virtualRouterName: String!
}

type AwsAppMeshDescribeRouteOutput {
  route: AwsAppMeshSu!
}

input AwsAppMeshDescribeVirtualNodeInput {
  meshName: String!
  virtualNodeName: String!
}

type AwsAppMeshDescribeVirtualNodeOutput {
  virtualNode: AwsAppMeshS1q!
}

input AwsAppMeshDescribeVirtualRouterInput {
  meshName: String!
  virtualRouterName: String!
}

type AwsAppMeshDescribeVirtualRouterOutput {
  virtualRouter: AwsAppMeshS1y!
}

input AwsAppMeshDescribeVirtualServiceInput {
  meshName: String!
  virtualServiceName: String!
}

type AwsAppMeshDescribeVirtualServiceOutput {
  virtualService: AwsAppMeshS27!
}

input AwsAppMeshListMeshesInput {
  limit: Int
  nextToken: String
}

type AwsAppMeshListMeshesOutput {
  meshes: [AwsAppMeshListMeshesOutputMeshes]!
  nextToken: String
}

type AwsAppMeshListMeshesOutputMeshes {
  arn: String!
  meshName: String!
}

input AwsAppMeshListRoutesInput {
  limit: Int
  meshName: String!
  nextToken: String
  virtualRouterName: String!
}

type AwsAppMeshListRoutesOutput {
  nextToken: String
  routes: [AwsAppMeshListRoutesOutputRoutes]!
}

type AwsAppMeshListRoutesOutputRoutes {
  arn: String!
  meshName: String!
  routeName: String!
  virtualRouterName: String!
}

input AwsAppMeshListTagsForResourceInput {
  limit: Int
  nextToken: String
  resourceArn: String!
}

type AwsAppMeshListTagsForResourceOutput {
  nextToken: String
  tags: [AwsAppMeshS7]!
}

input AwsAppMeshListVirtualNodesInput {
  limit: Int
  meshName: String!
  nextToken: String
}

type AwsAppMeshListVirtualNodesOutput {
  nextToken: String
  virtualNodes: [AwsAppMeshListVirtualNodesOutputVirtualNodes]!
}

type AwsAppMeshListVirtualNodesOutputVirtualNodes {
  arn: String!
  meshName: String!
  virtualNodeName: String!
}

input AwsAppMeshListVirtualRoutersInput {
  limit: Int
  meshName: String!
  nextToken: String
}

type AwsAppMeshListVirtualRoutersOutput {
  nextToken: String
  virtualRouters: [AwsAppMeshListVirtualRoutersOutputVirtualRouters]!
}

type AwsAppMeshListVirtualRoutersOutputVirtualRouters {
  arn: String!
  meshName: String!
  virtualRouterName: String!
}

input AwsAppMeshListVirtualServicesInput {
  limit: Int
  meshName: String!
  nextToken: String
}

type AwsAppMeshListVirtualServicesOutput {
  nextToken: String
  virtualServices: [AwsAppMeshListVirtualServicesOutputVirtualServices]!
}

type AwsAppMeshListVirtualServicesOutputVirtualServices {
  arn: String!
  meshName: String!
  virtualServiceName: String!
}

type AwsAppMeshS1b {
  port: Int!
  protocol: String!
}

input AwsAppMeshS1bInput {
  port: Int!
  protocol: String!
}

type AwsAppMeshS1q {
  meshName: String!
  metadata: AwsAppMeshSd!
  spec: AwsAppMeshSy!
  status: AwsAppMeshS1qStatus!
  virtualNodeName: String!
}

type AwsAppMeshS1qStatus {
  status: String!
}

type AwsAppMeshS1u {
  listeners: [AwsAppMeshS1uListeners]
}

input AwsAppMeshS1uInput {
  listeners: [AwsAppMeshS1uListenersInput]
}

type AwsAppMeshS1uListeners {
  portMapping: AwsAppMeshS1b!
}

input AwsAppMeshS1uListenersInput {
  portMapping: AwsAppMeshS1bInput!
}

type AwsAppMeshS1y {
  meshName: String!
  metadata: AwsAppMeshSd!
  spec: AwsAppMeshS1u!
  status: AwsAppMeshS1yStatus!
  virtualRouterName: String!
}

type AwsAppMeshS1yStatus {
  status: String!
}

type AwsAppMeshS22 {
  provider: AwsAppMeshS22Provider
}

input AwsAppMeshS22Input {
  provider: AwsAppMeshS22ProviderInput
}

type AwsAppMeshS22Provider {
  virtualNode: AwsAppMeshS22ProviderVirtualNode
  virtualRouter: AwsAppMeshS22ProviderVirtualRouter
}

input AwsAppMeshS22ProviderInput {
  virtualNode: AwsAppMeshS22ProviderVirtualNodeInput
  virtualRouter: AwsAppMeshS22ProviderVirtualRouterInput
}

type AwsAppMeshS22ProviderVirtualNode {
  virtualNodeName: String!
}

input AwsAppMeshS22ProviderVirtualNodeInput {
  virtualNodeName: String!
}

type AwsAppMeshS22ProviderVirtualRouter {
  virtualRouterName: String!
}

input AwsAppMeshS22ProviderVirtualRouterInput {
  virtualRouterName: String!
}

type AwsAppMeshS27 {
  meshName: String!
  metadata: AwsAppMeshSd!
  spec: AwsAppMeshS22!
  status: AwsAppMeshS27Status!
  virtualServiceName: String!
}

type AwsAppMeshS27Status {
  status: String!
}

type AwsAppMeshS4 {
  egressFilter: AwsAppMeshS4EgressFilter
}

type AwsAppMeshS4EgressFilter {
  type: String!
}

input AwsAppMeshS4EgressFilterInput {
  type: String!
}

input AwsAppMeshS4Input {
  egressFilter: AwsAppMeshS4EgressFilterInput
}

type AwsAppMeshS7 {
  key: String!
  value: String
}

input AwsAppMeshS7Input {
  key: String!
  value: String
}

type AwsAppMeshSc {
  meshName: String!
  metadata: AwsAppMeshSd!
  spec: AwsAppMeshS4!
  status: AwsAppMeshScStatus!
}

type AwsAppMeshScStatus {
  status: String
}

type AwsAppMeshSd {
  arn: String!
  createdAt: Date!
  lastUpdatedAt: Date!
  uid: String!
  version: JSON!
}

type AwsAppMeshSk {
  httpRoute: AwsAppMeshSkHttpRoute
  tcpRoute: AwsAppMeshSkTcpRoute
}

type AwsAppMeshSkHttpRoute {
  action: AwsAppMeshSkHttpRouteAction!
  match: AwsAppMeshSkHttpRouteMatch!
}

type AwsAppMeshSkHttpRouteAction {
  weightedTargets: [AwsAppMeshSn]!
}

input AwsAppMeshSkHttpRouteActionInput {
  weightedTargets: [AwsAppMeshSnInput]!
}

input AwsAppMeshSkHttpRouteInput {
  action: AwsAppMeshSkHttpRouteActionInput!
  match: AwsAppMeshSkHttpRouteMatchInput!
}

type AwsAppMeshSkHttpRouteMatch {
  prefix: String!
}

input AwsAppMeshSkHttpRouteMatchInput {
  prefix: String!
}

input AwsAppMeshSkInput {
  httpRoute: AwsAppMeshSkHttpRouteInput
  tcpRoute: AwsAppMeshSkTcpRouteInput
}

type AwsAppMeshSkTcpRoute {
  action: AwsAppMeshSkTcpRouteAction!
}

type AwsAppMeshSkTcpRouteAction {
  weightedTargets: [AwsAppMeshSn]!
}

input AwsAppMeshSkTcpRouteActionInput {
  weightedTargets: [AwsAppMeshSnInput]!
}

input AwsAppMeshSkTcpRouteInput {
  action: AwsAppMeshSkTcpRouteActionInput!
}

type AwsAppMeshSn {
  virtualNode: String!
  weight: Int!
}

input AwsAppMeshSnInput {
  virtualNode: String!
  weight: Int!
}

type AwsAppMeshSu {
  meshName: String!
  metadata: AwsAppMeshSd!
  routeName: String!
  spec: AwsAppMeshSk!
  status: AwsAppMeshSuStatus!
  virtualRouterName: String!
}

type AwsAppMeshSuStatus {
  status: String!
}

type AwsAppMeshSy {
  backends: [AwsAppMeshSyBackends]
  listeners: [AwsAppMeshSyListeners]
  logging: AwsAppMeshSyLogging
  serviceDiscovery: AwsAppMeshSyServiceDiscovery
}

type AwsAppMeshSyBackends {
  virtualService: AwsAppMeshSyBackendsVirtualService
}

input AwsAppMeshSyBackendsInput {
  virtualService: AwsAppMeshSyBackendsVirtualServiceInput
}

type AwsAppMeshSyBackendsVirtualService {
  virtualServiceName: String!
}

input AwsAppMeshSyBackendsVirtualServiceInput {
  virtualServiceName: String!
}

input AwsAppMeshSyInput {
  backends: [AwsAppMeshSyBackendsInput]
  listeners: [AwsAppMeshSyListenersInput]
  logging: AwsAppMeshSyLoggingInput
  serviceDiscovery: AwsAppMeshSyServiceDiscoveryInput
}

type AwsAppMeshSyListeners {
  healthCheck: AwsAppMeshSyListenersHealthCheck
  portMapping: AwsAppMeshS1b!
}

type AwsAppMeshSyListenersHealthCheck {
  healthyThreshold: Int!
  intervalMillis: JSON!
  path: String
  port: Int
  protocol: String!
  timeoutMillis: JSON!
  unhealthyThreshold: Int!
}

input AwsAppMeshSyListenersHealthCheckInput {
  healthyThreshold: Int!
  intervalMillis: JSON!
  path: String
  port: Int
  protocol: String!
  timeoutMillis: JSON!
  unhealthyThreshold: Int!
}

input AwsAppMeshSyListenersInput {
  healthCheck: AwsAppMeshSyListenersHealthCheckInput
  portMapping: AwsAppMeshS1bInput!
}

type AwsAppMeshSyLogging {
  accessLog: AwsAppMeshSyLoggingAccessLog
}

type AwsAppMeshSyLoggingAccessLog {
  file: AwsAppMeshSyLoggingAccessLogFile
}

type AwsAppMeshSyLoggingAccessLogFile {
  path: String!
}

input AwsAppMeshSyLoggingAccessLogFileInput {
  path: String!
}

input AwsAppMeshSyLoggingAccessLogInput {
  file: AwsAppMeshSyLoggingAccessLogFileInput
}

input AwsAppMeshSyLoggingInput {
  accessLog: AwsAppMeshSyLoggingAccessLogInput
}

type AwsAppMeshSyServiceDiscovery {
  awsCloudMap: AwsAppMeshSyServiceDiscoveryAwsCloudMap
  dns: AwsAppMeshSyServiceDiscoveryDns
}

type AwsAppMeshSyServiceDiscoveryAwsCloudMap {
  attributes: [AwsAppMeshSyServiceDiscoveryAwsCloudMapAttributes]
  namespaceName: String!
  serviceName: String!
}

type AwsAppMeshSyServiceDiscoveryAwsCloudMapAttributes {
  key: String!
  value: String!
}

input AwsAppMeshSyServiceDiscoveryAwsCloudMapAttributesInput {
  key: String!
  value: String!
}

input AwsAppMeshSyServiceDiscoveryAwsCloudMapInput {
  attributes: [AwsAppMeshSyServiceDiscoveryAwsCloudMapAttributesInput]
  namespaceName: String!
  serviceName: String!
}

type AwsAppMeshSyServiceDiscoveryDns {
  hostname: String!
}

input AwsAppMeshSyServiceDiscoveryDnsInput {
  hostname: String!
}

input AwsAppMeshSyServiceDiscoveryInput {
  awsCloudMap: AwsAppMeshSyServiceDiscoveryAwsCloudMapInput
  dns: AwsAppMeshSyServiceDiscoveryDnsInput
}

input AwsAppMeshTagResourceInput {
  resourceArn: String!
  tags: [AwsAppMeshS7Input]!
}

input AwsAppMeshUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsAppMeshUpdateMeshInput {
  clientToken: String
  meshName: String!
  spec: AwsAppMeshS4Input
}

type AwsAppMeshUpdateMeshOutput {
  mesh: AwsAppMeshSc!
}

input AwsAppMeshUpdateRouteInput {
  clientToken: String
  meshName: String!
  routeName: String!
  spec: AwsAppMeshSkInput!
  virtualRouterName: String!
}

type AwsAppMeshUpdateRouteOutput {
  route: AwsAppMeshSu!
}

input AwsAppMeshUpdateVirtualNodeInput {
  clientToken: String
  meshName: String!
  spec: AwsAppMeshSyInput!
  virtualNodeName: String!
}

type AwsAppMeshUpdateVirtualNodeOutput {
  virtualNode: AwsAppMeshS1q!
}

input AwsAppMeshUpdateVirtualRouterInput {
  clientToken: String
  meshName: String!
  spec: AwsAppMeshS1uInput!
  virtualRouterName: String!
}

type AwsAppMeshUpdateVirtualRouterOutput {
  virtualRouter: AwsAppMeshS1y!
}

input AwsAppMeshUpdateVirtualServiceInput {
  clientToken: String
  meshName: String!
  spec: AwsAppMeshS22Input!
  virtualServiceName: String!
}

type AwsAppMeshUpdateVirtualServiceOutput {
  virtualService: AwsAppMeshS27!
}

"""Amazon AppStream (2016-12-01)"""
type AwsAppStream {
  associateFleet(input: AwsAppStreamAssociateFleetInput!, config: AwsConfig): JSON
  batchAssociateUserStack(input: AwsAppStreamBatchAssociateUserStackInput!, config: AwsConfig): AwsAppStreamBatchAssociateUserStackOutput
  batchDisassociateUserStack(input: AwsAppStreamBatchDisassociateUserStackInput!, config: AwsConfig): AwsAppStreamBatchDisassociateUserStackOutput
  copyImage(input: AwsAppStreamCopyImageInput!, config: AwsConfig): AwsAppStreamCopyImageOutput
  createDirectoryConfig(input: AwsAppStreamCreateDirectoryConfigInput!, config: AwsConfig): AwsAppStreamCreateDirectoryConfigOutput
  createFleet(input: AwsAppStreamCreateFleetInput!, config: AwsConfig): AwsAppStreamCreateFleetOutput
  createImageBuilder(input: AwsAppStreamCreateImageBuilderInput!, config: AwsConfig): AwsAppStreamCreateImageBuilderOutput
  createImageBuilderStreamingURL(input: AwsAppStreamCreateImageBuilderStreamingURLInput!, config: AwsConfig): AwsAppStreamCreateImageBuilderStreamingURLOutput
  createStack(input: AwsAppStreamCreateStackInput!, config: AwsConfig): AwsAppStreamCreateStackOutput
  createStreamingURL(input: AwsAppStreamCreateStreamingURLInput!, config: AwsConfig): AwsAppStreamCreateStreamingURLOutput
  createUsageReportSubscription(input: JSON, config: AwsConfig): AwsAppStreamCreateUsageReportSubscriptionOutput
  createUser(input: AwsAppStreamCreateUserInput!, config: AwsConfig): JSON
  deleteDirectoryConfig(input: AwsAppStreamDeleteDirectoryConfigInput!, config: AwsConfig): JSON
  deleteFleet(input: AwsAppStreamDeleteFleetInput!, config: AwsConfig): JSON
  deleteImage(input: AwsAppStreamDeleteImageInput!, config: AwsConfig): AwsAppStreamDeleteImageOutput
  deleteImageBuilder(input: AwsAppStreamDeleteImageBuilderInput!, config: AwsConfig): AwsAppStreamDeleteImageBuilderOutput
  deleteImagePermissions(input: AwsAppStreamDeleteImagePermissionsInput!, config: AwsConfig): JSON
  deleteStack(input: AwsAppStreamDeleteStackInput!, config: AwsConfig): JSON
  deleteUsageReportSubscription(input: JSON, config: AwsConfig): JSON
  deleteUser(input: AwsAppStreamDeleteUserInput!, config: AwsConfig): JSON
  describeDirectoryConfigs(input: AwsAppStreamDescribeDirectoryConfigsInput, config: AwsConfig): AwsAppStreamDescribeDirectoryConfigsOutput
  describeFleets(input: AwsAppStreamDescribeFleetsInput, config: AwsConfig): AwsAppStreamDescribeFleetsOutput
  describeImageBuilders(input: AwsAppStreamDescribeImageBuildersInput, config: AwsConfig): AwsAppStreamDescribeImageBuildersOutput
  describeImagePermissions(input: AwsAppStreamDescribeImagePermissionsInput!, config: AwsConfig): AwsAppStreamDescribeImagePermissionsOutput
  describeImages(input: AwsAppStreamDescribeImagesInput, config: AwsConfig): AwsAppStreamDescribeImagesOutput
  describeSessions(input: AwsAppStreamDescribeSessionsInput!, config: AwsConfig): AwsAppStreamDescribeSessionsOutput
  describeStacks(input: AwsAppStreamDescribeStacksInput, config: AwsConfig): AwsAppStreamDescribeStacksOutput
  describeUsageReportSubscriptions(input: AwsAppStreamDescribeUsageReportSubscriptionsInput, config: AwsConfig): AwsAppStreamDescribeUsageReportSubscriptionsOutput
  describeUserStackAssociations(input: AwsAppStreamDescribeUserStackAssociationsInput, config: AwsConfig): AwsAppStreamDescribeUserStackAssociationsOutput
  describeUsers(input: AwsAppStreamDescribeUsersInput!, config: AwsConfig): AwsAppStreamDescribeUsersOutput
  disableUser(input: AwsAppStreamDisableUserInput!, config: AwsConfig): JSON
  disassociateFleet(input: AwsAppStreamDisassociateFleetInput!, config: AwsConfig): JSON
  enableUser(input: AwsAppStreamEnableUserInput!, config: AwsConfig): JSON
  expireSession(input: AwsAppStreamExpireSessionInput!, config: AwsConfig): JSON
  listAssociatedFleets(input: AwsAppStreamListAssociatedFleetsInput!, config: AwsConfig): AwsAppStreamListAssociatedFleetsOutput
  listAssociatedStacks(input: AwsAppStreamListAssociatedStacksInput!, config: AwsConfig): AwsAppStreamListAssociatedStacksOutput
  listTagsForResource(input: AwsAppStreamListTagsForResourceInput!, config: AwsConfig): AwsAppStreamListTagsForResourceOutput
  startFleet(input: AwsAppStreamStartFleetInput!, config: AwsConfig): JSON
  startImageBuilder(input: AwsAppStreamStartImageBuilderInput!, config: AwsConfig): AwsAppStreamStartImageBuilderOutput
  stopFleet(input: AwsAppStreamStopFleetInput!, config: AwsConfig): JSON
  stopImageBuilder(input: AwsAppStreamStopImageBuilderInput!, config: AwsConfig): AwsAppStreamStopImageBuilderOutput
  tagResource(input: AwsAppStreamTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsAppStreamUntagResourceInput!, config: AwsConfig): JSON
  updateDirectoryConfig(input: AwsAppStreamUpdateDirectoryConfigInput!, config: AwsConfig): AwsAppStreamUpdateDirectoryConfigOutput
  updateFleet(input: AwsAppStreamUpdateFleetInput, config: AwsConfig): AwsAppStreamUpdateFleetOutput
  updateImagePermissions(input: AwsAppStreamUpdateImagePermissionsInput!, config: AwsConfig): JSON
  updateStack(input: AwsAppStreamUpdateStackInput!, config: AwsConfig): AwsAppStreamUpdateStackOutput
}

input AwsAppStreamAssociateFleetInput {
  FleetName: String!
  StackName: String!
}

input AwsAppStreamBatchAssociateUserStackInput {
  UserStackAssociations: [AwsAppStreamS6Input]!
}

type AwsAppStreamBatchAssociateUserStackOutput {
  errors: [AwsAppStreamSb]
}

input AwsAppStreamBatchDisassociateUserStackInput {
  UserStackAssociations: [AwsAppStreamS6Input]!
}

type AwsAppStreamBatchDisassociateUserStackOutput {
  errors: [AwsAppStreamSb]
}

input AwsAppStreamCopyImageInput {
  SourceImageName: String!
  DestinationImageName: String!
  DestinationRegion: String!
  DestinationImageDescription: String
}

type AwsAppStreamCopyImageOutput {
  DestinationImageName: String
}

input AwsAppStreamCreateDirectoryConfigInput {
  DirectoryName: String!
  OrganizationalUnitDistinguishedNames: [String]!
  ServiceAccountCredentials: AwsAppStreamSpInput!
}

type AwsAppStreamCreateDirectoryConfigOutput {
  DirectoryConfig: AwsAppStreamSt
}

input AwsAppStreamCreateFleetInput {
  Name: String!
  ImageName: String
  ImageArn: String
  InstanceType: String!
  FleetType: String
  ComputeCapacity: AwsAppStreamSyInput!
  VpcConfig: AwsAppStreamS10Input
  MaxUserDurationInSeconds: Int
  DisconnectTimeoutInSeconds: Int
  Description: String
  DisplayName: String
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppStreamS15Input
  Tags: JSON
  IdleDisconnectTimeoutInSeconds: Int
}

type AwsAppStreamCreateFleetOutput {
  Fleet: AwsAppStreamS1a
}

input AwsAppStreamCreateImageBuilderInput {
  Name: String!
  ImageName: String
  ImageArn: String
  InstanceType: String!
  Description: String
  DisplayName: String
  VpcConfig: AwsAppStreamS10Input
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppStreamS15Input
  AppstreamAgentVersion: String
  Tags: JSON
}

type AwsAppStreamCreateImageBuilderOutput {
  ImageBuilder: AwsAppStreamS1j
}

input AwsAppStreamCreateImageBuilderStreamingURLInput {
  Name: String!
  Validity: JSON
}

type AwsAppStreamCreateImageBuilderStreamingURLOutput {
  StreamingURL: String
  Expires: Date
}

input AwsAppStreamCreateStackInput {
  Name: String!
  Description: String
  DisplayName: String
  StorageConnectors: [AwsAppStreamS1vInput]
  RedirectURL: String
  FeedbackURL: String
  UserSettings: [AwsAppStreamS23Input]
  ApplicationSettings: AwsAppStreamS27Input
  Tags: JSON
}

type AwsAppStreamCreateStackOutput {
  Stack: AwsAppStreamS2a
}

input AwsAppStreamCreateStreamingURLInput {
  StackName: String!
  FleetName: String!
  UserId: String!
  ApplicationId: String
  Validity: JSON
  SessionContext: String
}

type AwsAppStreamCreateStreamingURLOutput {
  StreamingURL: String
  Expires: Date
}

type AwsAppStreamCreateUsageReportSubscriptionOutput {
  S3BucketName: String
  Schedule: String
}

input AwsAppStreamCreateUserInput {
  UserName: String!
  MessageAction: String
  FirstName: String
  LastName: String
  AuthenticationType: String!
}

input AwsAppStreamDeleteDirectoryConfigInput {
  DirectoryName: String!
}

input AwsAppStreamDeleteFleetInput {
  Name: String!
}

input AwsAppStreamDeleteImageBuilderInput {
  Name: String!
}

type AwsAppStreamDeleteImageBuilderOutput {
  ImageBuilder: AwsAppStreamS1j
}

input AwsAppStreamDeleteImageInput {
  Name: String!
}

type AwsAppStreamDeleteImageOutput {
  Image: AwsAppStreamS2v
}

input AwsAppStreamDeleteImagePermissionsInput {
  Name: String!
  SharedAccountId: String!
}

input AwsAppStreamDeleteStackInput {
  Name: String!
}

input AwsAppStreamDeleteUserInput {
  UserName: String!
  AuthenticationType: String!
}

input AwsAppStreamDescribeDirectoryConfigsInput {
  DirectoryNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsAppStreamDescribeDirectoryConfigsOutput {
  DirectoryConfigs: [AwsAppStreamSt]
  NextToken: String
}

input AwsAppStreamDescribeFleetsInput {
  Names: [String]
  NextToken: String
}

type AwsAppStreamDescribeFleetsOutput {
  Fleets: [AwsAppStreamS1a]
  NextToken: String
}

input AwsAppStreamDescribeImageBuildersInput {
  Names: [String]
  MaxResults: Int
  NextToken: String
}

type AwsAppStreamDescribeImageBuildersOutput {
  ImageBuilders: [AwsAppStreamS1j]
  NextToken: String
}

input AwsAppStreamDescribeImagePermissionsInput {
  Name: String!
  MaxResults: Int
  SharedAwsAccountIds: [String]
  NextToken: String
}

type AwsAppStreamDescribeImagePermissionsOutput {
  Name: String
  SharedImagePermissionsList: [AwsAppStreamDescribeImagePermissionsOutputSharedImagePermissionsList]
  NextToken: String
}

type AwsAppStreamDescribeImagePermissionsOutputSharedImagePermissionsList {
  sharedAccountId: String!
  imagePermissions: AwsAppStreamS33!
}

input AwsAppStreamDescribeImagesInput {
  Names: [String]
  Arns: [String]
  Type: String
  NextToken: String
  MaxResults: Int
}

type AwsAppStreamDescribeImagesOutput {
  Images: [AwsAppStreamS2v]
  NextToken: String
}

input AwsAppStreamDescribeSessionsInput {
  StackName: String!
  FleetName: String!
  UserId: String
  NextToken: String
  Limit: Int
  AuthenticationType: String
}

type AwsAppStreamDescribeSessionsOutput {
  Sessions: [AwsAppStreamDescribeSessionsOutputSessions]
  NextToken: String
}

type AwsAppStreamDescribeSessionsOutputSessions {
  Id: String!
  UserId: String!
  StackName: String!
  FleetName: String!
  State: String!
  ConnectionState: String
  StartTime: Date
  MaxExpirationTime: Date
  AuthenticationType: String
  NetworkAccessConfiguration: AwsAppStreamS1o
}

input AwsAppStreamDescribeStacksInput {
  Names: [String]
  NextToken: String
}

type AwsAppStreamDescribeStacksOutput {
  Stacks: [AwsAppStreamS2a]
  NextToken: String
}

input AwsAppStreamDescribeUsageReportSubscriptionsInput {
  MaxResults: Int
  NextToken: String
}

type AwsAppStreamDescribeUsageReportSubscriptionsOutput {
  UsageReportSubscriptions: [AwsAppStreamDescribeUsageReportSubscriptionsOutputUsageReportSubscriptions]
  NextToken: String
}

type AwsAppStreamDescribeUsageReportSubscriptionsOutputUsageReportSubscriptions {
  S3BucketName: String
  Schedule: String
  LastGeneratedReportDate: Date
  SubscriptionErrors: [AwsAppStreamDescribeUsageReportSubscriptionsOutputUsageReportSubscriptionsSubscriptionErrors]
}

type AwsAppStreamDescribeUsageReportSubscriptionsOutputUsageReportSubscriptionsSubscriptionErrors {
  ErrorCode: String
  ErrorMessage: String
}

input AwsAppStreamDescribeUsersInput {
  AuthenticationType: String!
  MaxResults: Int
  NextToken: String
}

type AwsAppStreamDescribeUsersOutput {
  Users: [AwsAppStreamDescribeUsersOutputUsers]
  NextToken: String
}

type AwsAppStreamDescribeUsersOutputUsers {
  Arn: String
  UserName: String
  Enabled: Boolean
  Status: String
  FirstName: String
  LastName: String
  CreatedTime: Date
  AuthenticationType: String!
}

input AwsAppStreamDescribeUserStackAssociationsInput {
  StackName: String
  UserName: String
  AuthenticationType: String
  MaxResults: Int
  NextToken: String
}

type AwsAppStreamDescribeUserStackAssociationsOutput {
  UserStackAssociations: [AwsAppStreamS6]
  NextToken: String
}

input AwsAppStreamDisableUserInput {
  UserName: String!
  AuthenticationType: String!
}

input AwsAppStreamDisassociateFleetInput {
  FleetName: String!
  StackName: String!
}

input AwsAppStreamEnableUserInput {
  UserName: String!
  AuthenticationType: String!
}

input AwsAppStreamExpireSessionInput {
  SessionId: String!
}

input AwsAppStreamListAssociatedFleetsInput {
  StackName: String!
  NextToken: String
}

type AwsAppStreamListAssociatedFleetsOutput {
  Names: [String]
  NextToken: String
}

input AwsAppStreamListAssociatedStacksInput {
  FleetName: String!
  NextToken: String
}

type AwsAppStreamListAssociatedStacksOutput {
  Names: [String]
  NextToken: String
}

input AwsAppStreamListTagsForResourceInput {
  ResourceArn: String!
}

type AwsAppStreamListTagsForResourceOutput {
  Tags: JSON
}

type AwsAppStreamS10 {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

input AwsAppStreamS10Input {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

type AwsAppStreamS15 {
  DirectoryName: String
  OrganizationalUnitDistinguishedName: String
}

input AwsAppStreamS15Input {
  DirectoryName: String
  OrganizationalUnitDistinguishedName: String
}

type AwsAppStreamS1a {
  Arn: String!
  Name: String!
  DisplayName: String
  Description: String
  ImageName: String
  ImageArn: String
  InstanceType: String!
  FleetType: String
  ComputeCapacityStatus: AwsAppStreamS1aComputeCapacityStatus!
  MaxUserDurationInSeconds: Int
  DisconnectTimeoutInSeconds: Int
  State: String!
  VpcConfig: AwsAppStreamS10
  CreatedTime: Date
  FleetErrors: [AwsAppStreamS1aFleetErrors]
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppStreamS15
  IdleDisconnectTimeoutInSeconds: Int
}

type AwsAppStreamS1aComputeCapacityStatus {
  Desired: Int!
  Running: Int
  InUse: Int
  Available: Int
}

type AwsAppStreamS1aFleetErrors {
  ErrorCode: String
  ErrorMessage: String
}

type AwsAppStreamS1j {
  Name: String!
  Arn: String
  ImageArn: String
  Description: String
  DisplayName: String
  VpcConfig: AwsAppStreamS10
  InstanceType: String
  Platform: String
  State: String
  StateChangeReason: AwsAppStreamS1jStateChangeReason
  CreatedTime: Date
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppStreamS15
  NetworkAccessConfiguration: AwsAppStreamS1o
  ImageBuilderErrors: [AwsAppStreamS1jImageBuilderErrors]
  AppstreamAgentVersion: String
}

type AwsAppStreamS1jImageBuilderErrors {
  ErrorCode: String
  ErrorMessage: String
  ErrorTimestamp: Date
}

type AwsAppStreamS1jStateChangeReason {
  Code: String
  Message: String
}

type AwsAppStreamS1o {
  EniPrivateIpAddress: String
  EniId: String
}

type AwsAppStreamS1v {
  ConnectorType: String!
  ResourceIdentifier: String
  Domains: [String]
}

input AwsAppStreamS1vInput {
  ConnectorType: String!
  ResourceIdentifier: String
  Domains: [String]
}

type AwsAppStreamS23 {
  Action: String!
  Permission: String!
}

input AwsAppStreamS23Input {
  Action: String!
  Permission: String!
}

input AwsAppStreamS27Input {
  Enabled: Boolean!
  SettingsGroup: String
}

type AwsAppStreamS2a {
  Arn: String
  Name: String!
  Description: String
  DisplayName: String
  CreatedTime: Date
  StorageConnectors: [AwsAppStreamS1v]
  RedirectURL: String
  FeedbackURL: String
  StackErrors: [AwsAppStreamS2aStackErrors]
  UserSettings: [AwsAppStreamS23]
  ApplicationSettings: AwsAppStreamS2aApplicationSettings
}

type AwsAppStreamS2aApplicationSettings {
  Enabled: Boolean
  SettingsGroup: String
  S3BucketName: String
}

type AwsAppStreamS2aStackErrors {
  ErrorCode: String
  ErrorMessage: String
}

type AwsAppStreamS2v {
  Name: String!
  Arn: String
  BaseImageArn: String
  DisplayName: String
  State: String
  Visibility: String
  ImageBuilderSupported: Boolean
  ImageBuilderName: String
  Platform: String
  Description: String
  StateChangeReason: AwsAppStreamS2vStateChangeReason
  Applications: [AwsAppStreamS2vApplications]
  CreatedTime: Date
  PublicBaseImageReleasedDate: Date
  AppstreamAgentVersion: String
  ImagePermissions: AwsAppStreamS33
}

type AwsAppStreamS2vApplications {
  Name: String
  DisplayName: String
  IconURL: String
  LaunchPath: String
  LaunchParameters: String
  Enabled: Boolean
  Metadata: JSON
}

type AwsAppStreamS2vStateChangeReason {
  Code: String
  Message: String
}

type AwsAppStreamS33 {
  allowFleet: Boolean
  allowImageBuilder: Boolean
}

input AwsAppStreamS33Input {
  allowFleet: Boolean
  allowImageBuilder: Boolean
}

type AwsAppStreamS6 {
  StackName: String!
  UserName: String!
  AuthenticationType: String!
  SendEmailNotification: Boolean
}

input AwsAppStreamS6Input {
  StackName: String!
  UserName: String!
  AuthenticationType: String!
  SendEmailNotification: Boolean
}

type AwsAppStreamSb {
  UserStackAssociation: AwsAppStreamS6
  ErrorCode: String
  ErrorMessage: String
}

type AwsAppStreamSp {
  AccountName: String!
  AccountPassword: String!
}

input AwsAppStreamSpInput {
  AccountName: String!
  AccountPassword: String!
}

type AwsAppStreamSt {
  DirectoryName: String!
  OrganizationalUnitDistinguishedNames: [String]
  ServiceAccountCredentials: AwsAppStreamSp
  CreatedTime: Date
}

input AwsAppStreamStartFleetInput {
  Name: String!
}

input AwsAppStreamStartImageBuilderInput {
  Name: String!
  AppstreamAgentVersion: String
}

type AwsAppStreamStartImageBuilderOutput {
  ImageBuilder: AwsAppStreamS1j
}

input AwsAppStreamStopFleetInput {
  Name: String!
}

input AwsAppStreamStopImageBuilderInput {
  Name: String!
}

type AwsAppStreamStopImageBuilderOutput {
  ImageBuilder: AwsAppStreamS1j
}

input AwsAppStreamSyInput {
  DesiredInstances: Int!
}

input AwsAppStreamTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsAppStreamUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsAppStreamUpdateDirectoryConfigInput {
  DirectoryName: String!
  OrganizationalUnitDistinguishedNames: [String]
  ServiceAccountCredentials: AwsAppStreamSpInput
}

type AwsAppStreamUpdateDirectoryConfigOutput {
  DirectoryConfig: AwsAppStreamSt
}

input AwsAppStreamUpdateFleetInput {
  ImageName: String
  ImageArn: String
  Name: String
  InstanceType: String
  ComputeCapacity: AwsAppStreamSyInput
  VpcConfig: AwsAppStreamS10Input
  MaxUserDurationInSeconds: Int
  DisconnectTimeoutInSeconds: Int
  DeleteVpcConfig: Boolean
  Description: String
  DisplayName: String
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppStreamS15Input
  IdleDisconnectTimeoutInSeconds: Int
  AttributesToDelete: [String]
}

type AwsAppStreamUpdateFleetOutput {
  Fleet: AwsAppStreamS1a
}

input AwsAppStreamUpdateImagePermissionsInput {
  Name: String!
  SharedAccountId: String!
  ImagePermissions: AwsAppStreamS33Input!
}

input AwsAppStreamUpdateStackInput {
  DisplayName: String
  Description: String
  Name: String!
  StorageConnectors: [AwsAppStreamS1vInput]
  DeleteStorageConnectors: Boolean
  RedirectURL: String
  FeedbackURL: String
  AttributesToDelete: [String]
  UserSettings: [AwsAppStreamS23Input]
  ApplicationSettings: AwsAppStreamS27Input
}

type AwsAppStreamUpdateStackOutput {
  Stack: AwsAppStreamS2a
}

"""AWS AppSync (2017-07-25)"""
type AwsAppSync {
  createApiKey(input: AwsAppSyncCreateApiKeyInput!, config: AwsConfig): AwsAppSyncCreateApiKeyOutput
  createDataSource(input: AwsAppSyncCreateDataSourceInput!, config: AwsConfig): AwsAppSyncCreateDataSourceOutput
  createFunction(input: AwsAppSyncCreateFunctionInput!, config: AwsConfig): AwsAppSyncCreateFunctionOutput
  createGraphqlApi(input: AwsAppSyncCreateGraphqlApiInput!, config: AwsConfig): AwsAppSyncCreateGraphqlApiOutput
  createResolver(input: AwsAppSyncCreateResolverInput!, config: AwsConfig): AwsAppSyncCreateResolverOutput
  createType(input: AwsAppSyncCreateTypeInput!, config: AwsConfig): AwsAppSyncCreateTypeOutput
  deleteApiKey(input: AwsAppSyncDeleteApiKeyInput!, config: AwsConfig): JSON
  deleteDataSource(input: AwsAppSyncDeleteDataSourceInput!, config: AwsConfig): JSON
  deleteFunction(input: AwsAppSyncDeleteFunctionInput!, config: AwsConfig): JSON
  deleteGraphqlApi(input: AwsAppSyncDeleteGraphqlApiInput!, config: AwsConfig): JSON
  deleteResolver(input: AwsAppSyncDeleteResolverInput!, config: AwsConfig): JSON
  deleteType(input: AwsAppSyncDeleteTypeInput!, config: AwsConfig): JSON
  getDataSource(input: AwsAppSyncGetDataSourceInput!, config: AwsConfig): AwsAppSyncGetDataSourceOutput
  getFunction(input: AwsAppSyncGetFunctionInput!, config: AwsConfig): AwsAppSyncGetFunctionOutput
  getGraphqlApi(input: AwsAppSyncGetGraphqlApiInput!, config: AwsConfig): AwsAppSyncGetGraphqlApiOutput
  getIntrospectionSchema(input: AwsAppSyncGetIntrospectionSchemaInput!, config: AwsConfig): AwsAppSyncGetIntrospectionSchemaOutput
  getResolver(input: AwsAppSyncGetResolverInput!, config: AwsConfig): AwsAppSyncGetResolverOutput
  getSchemaCreationStatus(input: AwsAppSyncGetSchemaCreationStatusInput!, config: AwsConfig): AwsAppSyncGetSchemaCreationStatusOutput
  getType(input: AwsAppSyncGetTypeInput!, config: AwsConfig): AwsAppSyncGetTypeOutput
  listApiKeys(input: AwsAppSyncListApiKeysInput!, config: AwsConfig): AwsAppSyncListApiKeysOutput
  listDataSources(input: AwsAppSyncListDataSourcesInput!, config: AwsConfig): AwsAppSyncListDataSourcesOutput
  listFunctions(input: AwsAppSyncListFunctionsInput!, config: AwsConfig): AwsAppSyncListFunctionsOutput
  listGraphqlApis(input: AwsAppSyncListGraphqlApisInput, config: AwsConfig): AwsAppSyncListGraphqlApisOutput
  listResolvers(input: AwsAppSyncListResolversInput!, config: AwsConfig): AwsAppSyncListResolversOutput
  listResolversByFunction(input: AwsAppSyncListResolversByFunctionInput!, config: AwsConfig): AwsAppSyncListResolversByFunctionOutput
  listTagsForResource(input: AwsAppSyncListTagsForResourceInput!, config: AwsConfig): AwsAppSyncListTagsForResourceOutput
  listTypes(input: AwsAppSyncListTypesInput!, config: AwsConfig): AwsAppSyncListTypesOutput
  startSchemaCreation(input: AwsAppSyncStartSchemaCreationInput!, config: AwsConfig): AwsAppSyncStartSchemaCreationOutput
  tagResource(input: AwsAppSyncTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsAppSyncUntagResourceInput!, config: AwsConfig): JSON
  updateApiKey(input: AwsAppSyncUpdateApiKeyInput!, config: AwsConfig): AwsAppSyncUpdateApiKeyOutput
  updateDataSource(input: AwsAppSyncUpdateDataSourceInput!, config: AwsConfig): AwsAppSyncUpdateDataSourceOutput
  updateFunction(input: AwsAppSyncUpdateFunctionInput!, config: AwsConfig): AwsAppSyncUpdateFunctionOutput
  updateGraphqlApi(input: AwsAppSyncUpdateGraphqlApiInput!, config: AwsConfig): AwsAppSyncUpdateGraphqlApiOutput
  updateResolver(input: AwsAppSyncUpdateResolverInput!, config: AwsConfig): AwsAppSyncUpdateResolverOutput
  updateType(input: AwsAppSyncUpdateTypeInput!, config: AwsConfig): AwsAppSyncUpdateTypeOutput
}

input AwsAppSyncCreateApiKeyInput {
  apiId: String!
  description: String
  expires: JSON
}

type AwsAppSyncCreateApiKeyOutput {
  apiKey: AwsAppSyncS5
}

input AwsAppSyncCreateDataSourceInput {
  apiId: String!
  name: String!
  description: String
  type: String!
  serviceRoleArn: String
  dynamodbConfig: AwsAppSyncS9Input
  lambdaConfig: AwsAppSyncSbInput
  elasticsearchConfig: AwsAppSyncScInput
  httpConfig: AwsAppSyncSdInput
  relationalDatabaseConfig: AwsAppSyncShInput
}

type AwsAppSyncCreateDataSourceOutput {
  dataSource: AwsAppSyncSl
}

input AwsAppSyncCreateFunctionInput {
  apiId: String!
  name: String!
  description: String
  dataSourceName: String!
  requestMappingTemplate: String!
  responseMappingTemplate: String
  functionVersion: String!
}

type AwsAppSyncCreateFunctionOutput {
  functionConfiguration: AwsAppSyncSp
}

input AwsAppSyncCreateGraphqlApiInput {
  name: String!
  logConfig: AwsAppSyncSrInput
  authenticationType: String!
  userPoolConfig: AwsAppSyncSuInput
  openIDConnectConfig: AwsAppSyncSwInput
  tags: JSON
  additionalAuthenticationProviders: [AwsAppSyncS10Input]
}

type AwsAppSyncCreateGraphqlApiOutput {
  graphqlApi: AwsAppSyncS14
}

input AwsAppSyncCreateResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
  dataSourceName: String
  requestMappingTemplate: String!
  responseMappingTemplate: String
  kind: String
  pipelineConfig: AwsAppSyncS18Input
}

type AwsAppSyncCreateResolverOutput {
  resolver: AwsAppSyncS1b
}

input AwsAppSyncCreateTypeInput {
  apiId: String!
  definition: String!
  format: String!
}

type AwsAppSyncCreateTypeOutput {
  type: AwsAppSyncS1f
}

input AwsAppSyncDeleteApiKeyInput {
  apiId: String!
  id: String!
}

input AwsAppSyncDeleteDataSourceInput {
  apiId: String!
  name: String!
}

input AwsAppSyncDeleteFunctionInput {
  apiId: String!
  functionId: String!
}

input AwsAppSyncDeleteGraphqlApiInput {
  apiId: String!
}

input AwsAppSyncDeleteResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
}

input AwsAppSyncDeleteTypeInput {
  apiId: String!
  typeName: String!
}

input AwsAppSyncGetDataSourceInput {
  apiId: String!
  name: String!
}

type AwsAppSyncGetDataSourceOutput {
  dataSource: AwsAppSyncSl
}

input AwsAppSyncGetFunctionInput {
  apiId: String!
  functionId: String!
}

type AwsAppSyncGetFunctionOutput {
  functionConfiguration: AwsAppSyncSp
}

input AwsAppSyncGetGraphqlApiInput {
  apiId: String!
}

type AwsAppSyncGetGraphqlApiOutput {
  graphqlApi: AwsAppSyncS14
}

input AwsAppSyncGetIntrospectionSchemaInput {
  apiId: String!
  format: String!
  includeDirectives: Boolean
}

type AwsAppSyncGetIntrospectionSchemaOutput {
  schema: JSON
}

input AwsAppSyncGetResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
}

type AwsAppSyncGetResolverOutput {
  resolver: AwsAppSyncS1b
}

input AwsAppSyncGetSchemaCreationStatusInput {
  apiId: String!
}

type AwsAppSyncGetSchemaCreationStatusOutput {
  status: String
  details: String
}

input AwsAppSyncGetTypeInput {
  apiId: String!
  typeName: String!
  format: String!
}

type AwsAppSyncGetTypeOutput {
  type: AwsAppSyncS1f
}

input AwsAppSyncListApiKeysInput {
  apiId: String!
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListApiKeysOutput {
  apiKeys: [AwsAppSyncS5]
  nextToken: String
}

input AwsAppSyncListDataSourcesInput {
  apiId: String!
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListDataSourcesOutput {
  dataSources: [AwsAppSyncSl]
  nextToken: String
}

input AwsAppSyncListFunctionsInput {
  apiId: String!
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListFunctionsOutput {
  functions: [AwsAppSyncSp]
  nextToken: String
}

input AwsAppSyncListGraphqlApisInput {
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListGraphqlApisOutput {
  graphqlApis: [AwsAppSyncS14]
  nextToken: String
}

input AwsAppSyncListResolversByFunctionInput {
  apiId: String!
  functionId: String!
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListResolversByFunctionOutput {
  resolvers: [AwsAppSyncS1b]
  nextToken: String
}

input AwsAppSyncListResolversInput {
  apiId: String!
  typeName: String!
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListResolversOutput {
  resolvers: [AwsAppSyncS1b]
  nextToken: String
}

input AwsAppSyncListTagsForResourceInput {
  resourceArn: String!
}

type AwsAppSyncListTagsForResourceOutput {
  tags: JSON
}

input AwsAppSyncListTypesInput {
  apiId: String!
  format: String!
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListTypesOutput {
  types: [AwsAppSyncS1f]
  nextToken: String
}

type AwsAppSyncS10 {
  authenticationType: String
  openIDConnectConfig: AwsAppSyncSw
  userPoolConfig: AwsAppSyncS10UserPoolConfig
}

input AwsAppSyncS10Input {
  authenticationType: String
  openIDConnectConfig: AwsAppSyncSwInput
  userPoolConfig: AwsAppSyncS10UserPoolConfigInput
}

type AwsAppSyncS10UserPoolConfig {
  userPoolId: String!
  awsRegion: String!
  appIdClientRegex: String
}

input AwsAppSyncS10UserPoolConfigInput {
  userPoolId: String!
  awsRegion: String!
  appIdClientRegex: String
}

type AwsAppSyncS14 {
  name: String
  apiId: String
  authenticationType: String
  logConfig: AwsAppSyncSr
  userPoolConfig: AwsAppSyncSu
  openIDConnectConfig: AwsAppSyncSw
  arn: String
  uris: JSON
  tags: JSON
  additionalAuthenticationProviders: [AwsAppSyncS10]
}

type AwsAppSyncS18 {
  functions: [String]
}

input AwsAppSyncS18Input {
  functions: [String]
}

type AwsAppSyncS1b {
  typeName: String
  fieldName: String
  dataSourceName: String
  resolverArn: String
  requestMappingTemplate: String
  responseMappingTemplate: String
  kind: String
  pipelineConfig: AwsAppSyncS18
}

type AwsAppSyncS1f {
  name: String
  description: String
  arn: String
  definition: String
  format: String
}

type AwsAppSyncS5 {
  id: String
  description: String
  expires: JSON
}

type AwsAppSyncS9 {
  tableName: String!
  awsRegion: String!
  useCallerCredentials: Boolean
}

input AwsAppSyncS9Input {
  tableName: String!
  awsRegion: String!
  useCallerCredentials: Boolean
}

type AwsAppSyncSb {
  lambdaFunctionArn: String!
}

input AwsAppSyncSbInput {
  lambdaFunctionArn: String!
}

type AwsAppSyncSc {
  endpoint: String!
  awsRegion: String!
}

input AwsAppSyncScInput {
  endpoint: String!
  awsRegion: String!
}

type AwsAppSyncSd {
  endpoint: String
  authorizationConfig: AwsAppSyncSdAuthorizationConfig
}

type AwsAppSyncSdAuthorizationConfig {
  authorizationType: String!
  awsIamConfig: AwsAppSyncSdAuthorizationConfigAwsIamConfig
}

type AwsAppSyncSdAuthorizationConfigAwsIamConfig {
  signingRegion: String
  signingServiceName: String
}

input AwsAppSyncSdAuthorizationConfigAwsIamConfigInput {
  signingRegion: String
  signingServiceName: String
}

input AwsAppSyncSdAuthorizationConfigInput {
  authorizationType: String!
  awsIamConfig: AwsAppSyncSdAuthorizationConfigAwsIamConfigInput
}

input AwsAppSyncSdInput {
  endpoint: String
  authorizationConfig: AwsAppSyncSdAuthorizationConfigInput
}

type AwsAppSyncSh {
  relationalDatabaseSourceType: String
  rdsHttpEndpointConfig: AwsAppSyncShRdsHttpEndpointConfig
}

input AwsAppSyncShInput {
  relationalDatabaseSourceType: String
  rdsHttpEndpointConfig: AwsAppSyncShRdsHttpEndpointConfigInput
}

type AwsAppSyncShRdsHttpEndpointConfig {
  awsRegion: String
  dbClusterIdentifier: String
  databaseName: String
  schema: String
  awsSecretStoreArn: String
}

input AwsAppSyncShRdsHttpEndpointConfigInput {
  awsRegion: String
  dbClusterIdentifier: String
  databaseName: String
  schema: String
  awsSecretStoreArn: String
}

type AwsAppSyncSl {
  dataSourceArn: String
  name: String
  description: String
  type: String
  serviceRoleArn: String
  dynamodbConfig: AwsAppSyncS9
  lambdaConfig: AwsAppSyncSb
  elasticsearchConfig: AwsAppSyncSc
  httpConfig: AwsAppSyncSd
  relationalDatabaseConfig: AwsAppSyncSh
}

type AwsAppSyncSp {
  functionId: String
  functionArn: String
  name: String
  description: String
  dataSourceName: String
  requestMappingTemplate: String
  responseMappingTemplate: String
  functionVersion: String
}

type AwsAppSyncSr {
  fieldLogLevel: String!
  cloudWatchLogsRoleArn: String!
}

input AwsAppSyncSrInput {
  fieldLogLevel: String!
  cloudWatchLogsRoleArn: String!
}

input AwsAppSyncStartSchemaCreationInput {
  apiId: String!
  definition: JSON!
}

type AwsAppSyncStartSchemaCreationOutput {
  status: String
}

type AwsAppSyncSu {
  userPoolId: String!
  awsRegion: String!
  defaultAction: String!
  appIdClientRegex: String
}

input AwsAppSyncSuInput {
  userPoolId: String!
  awsRegion: String!
  defaultAction: String!
  appIdClientRegex: String
}

type AwsAppSyncSw {
  issuer: String!
  clientId: String
  iatTTL: JSON
  authTTL: JSON
}

input AwsAppSyncSwInput {
  issuer: String!
  clientId: String
  iatTTL: JSON
  authTTL: JSON
}

input AwsAppSyncTagResourceInput {
  resourceArn: String!
  tags: JSON!
}

input AwsAppSyncUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsAppSyncUpdateApiKeyInput {
  apiId: String!
  id: String!
  description: String
  expires: JSON
}

type AwsAppSyncUpdateApiKeyOutput {
  apiKey: AwsAppSyncS5
}

input AwsAppSyncUpdateDataSourceInput {
  apiId: String!
  name: String!
  description: String
  type: String!
  serviceRoleArn: String
  dynamodbConfig: AwsAppSyncS9Input
  lambdaConfig: AwsAppSyncSbInput
  elasticsearchConfig: AwsAppSyncScInput
  httpConfig: AwsAppSyncSdInput
  relationalDatabaseConfig: AwsAppSyncShInput
}

type AwsAppSyncUpdateDataSourceOutput {
  dataSource: AwsAppSyncSl
}

input AwsAppSyncUpdateFunctionInput {
  apiId: String!
  name: String!
  description: String
  functionId: String!
  dataSourceName: String!
  requestMappingTemplate: String!
  responseMappingTemplate: String
  functionVersion: String!
}

type AwsAppSyncUpdateFunctionOutput {
  functionConfiguration: AwsAppSyncSp
}

input AwsAppSyncUpdateGraphqlApiInput {
  apiId: String!
  name: String!
  logConfig: AwsAppSyncSrInput
  authenticationType: String
  userPoolConfig: AwsAppSyncSuInput
  openIDConnectConfig: AwsAppSyncSwInput
  additionalAuthenticationProviders: [AwsAppSyncS10Input]
}

type AwsAppSyncUpdateGraphqlApiOutput {
  graphqlApi: AwsAppSyncS14
}

input AwsAppSyncUpdateResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
  dataSourceName: String
  requestMappingTemplate: String!
  responseMappingTemplate: String
  kind: String
  pipelineConfig: AwsAppSyncS18Input
}

type AwsAppSyncUpdateResolverOutput {
  resolver: AwsAppSyncS1b
}

input AwsAppSyncUpdateTypeInput {
  apiId: String!
  typeName: String!
  definition: String
  format: String!
}

type AwsAppSyncUpdateTypeOutput {
  type: AwsAppSyncS1f
}

"""Amazon Athena (2017-05-18)"""
type AwsAthena {
  batchGetNamedQuery(input: AwsAthenaBatchGetNamedQueryInput!, config: AwsConfig): AwsAthenaBatchGetNamedQueryOutput
  batchGetQueryExecution(input: AwsAthenaBatchGetQueryExecutionInput!, config: AwsConfig): AwsAthenaBatchGetQueryExecutionOutput
  createNamedQuery(input: AwsAthenaCreateNamedQueryInput!, config: AwsConfig): AwsAthenaCreateNamedQueryOutput
  createWorkGroup(input: AwsAthenaCreateWorkGroupInput!, config: AwsConfig): JSON
  deleteNamedQuery(input: AwsAthenaDeleteNamedQueryInput!, config: AwsConfig): JSON
  deleteWorkGroup(input: AwsAthenaDeleteWorkGroupInput!, config: AwsConfig): JSON
  getNamedQuery(input: AwsAthenaGetNamedQueryInput!, config: AwsConfig): AwsAthenaGetNamedQueryOutput
  getQueryExecution(input: AwsAthenaGetQueryExecutionInput!, config: AwsConfig): AwsAthenaGetQueryExecutionOutput
  getQueryResults(input: AwsAthenaGetQueryResultsInput!, config: AwsConfig): AwsAthenaGetQueryResultsOutput
  getWorkGroup(input: AwsAthenaGetWorkGroupInput!, config: AwsConfig): AwsAthenaGetWorkGroupOutput
  listNamedQueries(input: AwsAthenaListNamedQueriesInput, config: AwsConfig): AwsAthenaListNamedQueriesOutput
  listQueryExecutions(input: AwsAthenaListQueryExecutionsInput, config: AwsConfig): AwsAthenaListQueryExecutionsOutput
  listTagsForResource(input: AwsAthenaListTagsForResourceInput!, config: AwsConfig): AwsAthenaListTagsForResourceOutput
  listWorkGroups(input: AwsAthenaListWorkGroupsInput, config: AwsConfig): AwsAthenaListWorkGroupsOutput
  startQueryExecution(input: AwsAthenaStartQueryExecutionInput!, config: AwsConfig): AwsAthenaStartQueryExecutionOutput
  stopQueryExecution(input: AwsAthenaStopQueryExecutionInput!, config: AwsConfig): JSON
  tagResource(input: AwsAthenaTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsAthenaUntagResourceInput!, config: AwsConfig): JSON
  updateWorkGroup(input: AwsAthenaUpdateWorkGroupInput!, config: AwsConfig): JSON
}

input AwsAthenaBatchGetNamedQueryInput {
  NamedQueryIds: [String]!
}

type AwsAthenaBatchGetNamedQueryOutput {
  NamedQueries: [AwsAthenaS6]
  UnprocessedNamedQueryIds: [AwsAthenaBatchGetNamedQueryOutputUnprocessedNamedQueryIds]
}

type AwsAthenaBatchGetNamedQueryOutputUnprocessedNamedQueryIds {
  NamedQueryId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsAthenaBatchGetQueryExecutionInput {
  QueryExecutionIds: [String]!
}

type AwsAthenaBatchGetQueryExecutionOutput {
  QueryExecutions: [AwsAthenaSl]
  UnprocessedQueryExecutionIds: [AwsAthenaBatchGetQueryExecutionOutputUnprocessedQueryExecutionIds]
}

type AwsAthenaBatchGetQueryExecutionOutputUnprocessedQueryExecutionIds {
  QueryExecutionId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsAthenaCreateNamedQueryInput {
  Name: String!
  Description: String
  Database: String!
  QueryString: String!
  ClientRequestToken: String
  WorkGroup: String
}

type AwsAthenaCreateNamedQueryOutput {
  NamedQueryId: String
}

input AwsAthenaCreateWorkGroupInput {
  Name: String!
  Configuration: AwsAthenaS13Input
  Description: String
  Tags: [AwsAthenaS17Input]
}

input AwsAthenaDeleteNamedQueryInput {
  NamedQueryId: String!
}

input AwsAthenaDeleteWorkGroupInput {
  WorkGroup: String!
  RecursiveDeleteOption: Boolean
}

input AwsAthenaGetNamedQueryInput {
  NamedQueryId: String!
}

type AwsAthenaGetNamedQueryOutput {
  NamedQuery: AwsAthenaS6
}

input AwsAthenaGetQueryExecutionInput {
  QueryExecutionId: String!
}

type AwsAthenaGetQueryExecutionOutput {
  QueryExecution: AwsAthenaSl
}

input AwsAthenaGetQueryResultsInput {
  QueryExecutionId: String!
  NextToken: String
  MaxResults: Int
}

type AwsAthenaGetQueryResultsOutput {
  UpdateCount: JSON
  ResultSet: AwsAthenaGetQueryResultsOutputResultSet
  NextToken: String
}

type AwsAthenaGetQueryResultsOutputResultSet {
  Rows: [AwsAthenaGetQueryResultsOutputResultSetRows]
  ResultSetMetadata: AwsAthenaGetQueryResultsOutputResultSetResultSetMetadata
}

type AwsAthenaGetQueryResultsOutputResultSetResultSetMetadata {
  ColumnInfo: [AwsAthenaGetQueryResultsOutputResultSetResultSetMetadataColumnInfo]
}

type AwsAthenaGetQueryResultsOutputResultSetResultSetMetadataColumnInfo {
  CatalogName: String
  SchemaName: String
  TableName: String
  Name: String!
  Label: String
  Type: String!
  Precision: Int
  Scale: Int
  Nullable: String
  CaseSensitive: Boolean
}

type AwsAthenaGetQueryResultsOutputResultSetRows {
  Data: [AwsAthenaGetQueryResultsOutputResultSetRowsData]
}

type AwsAthenaGetQueryResultsOutputResultSetRowsData {
  VarCharValue: String
}

input AwsAthenaGetWorkGroupInput {
  WorkGroup: String!
}

type AwsAthenaGetWorkGroupOutput {
  WorkGroup: AwsAthenaGetWorkGroupOutputWorkGroup
}

type AwsAthenaGetWorkGroupOutputWorkGroup {
  Name: String!
  State: String
  Configuration: AwsAthenaS13
  Description: String
  CreationTime: Date
}

input AwsAthenaListNamedQueriesInput {
  NextToken: String
  MaxResults: Int
  WorkGroup: String
}

type AwsAthenaListNamedQueriesOutput {
  NamedQueryIds: [String]
  NextToken: String
}

input AwsAthenaListQueryExecutionsInput {
  NextToken: String
  MaxResults: Int
  WorkGroup: String
}

type AwsAthenaListQueryExecutionsOutput {
  QueryExecutionIds: [String]
  NextToken: String
}

input AwsAthenaListTagsForResourceInput {
  ResourceARN: String!
  NextToken: String
  MaxResults: Int
}

type AwsAthenaListTagsForResourceOutput {
  Tags: [AwsAthenaS17]
  NextToken: String
}

input AwsAthenaListWorkGroupsInput {
  NextToken: String
  MaxResults: Int
}

type AwsAthenaListWorkGroupsOutput {
  WorkGroups: [AwsAthenaListWorkGroupsOutputWorkGroups]
  NextToken: String
}

type AwsAthenaListWorkGroupsOutputWorkGroups {
  Name: String
  State: String
  Description: String
  CreationTime: Date
}

type AwsAthenaS13 {
  ResultConfiguration: AwsAthenaSn
  EnforceWorkGroupConfiguration: Boolean
  PublishCloudWatchMetricsEnabled: Boolean
  BytesScannedCutoffPerQuery: JSON
}

input AwsAthenaS13Input {
  ResultConfiguration: AwsAthenaSnInput
  EnforceWorkGroupConfiguration: Boolean
  PublishCloudWatchMetricsEnabled: Boolean
  BytesScannedCutoffPerQuery: JSON
}

type AwsAthenaS17 {
  Key: String
  Value: String
}

input AwsAthenaS17Input {
  Key: String
  Value: String
}

type AwsAthenaS6 {
  Name: String!
  Description: String
  Database: String!
  QueryString: String!
  NamedQueryId: String
  WorkGroup: String
}

type AwsAthenaSl {
  QueryExecutionId: String
  Query: String
  StatementType: String
  ResultConfiguration: AwsAthenaSn
  QueryExecutionContext: AwsAthenaSr
  Status: AwsAthenaSlStatus
  Statistics: AwsAthenaSlStatistics
  WorkGroup: String
}

type AwsAthenaSlStatistics {
  EngineExecutionTimeInMillis: JSON
  DataScannedInBytes: JSON
}

type AwsAthenaSlStatus {
  State: String
  StateChangeReason: String
  SubmissionDateTime: Date
  CompletionDateTime: Date
}

type AwsAthenaSn {
  OutputLocation: String
  EncryptionConfiguration: AwsAthenaSp
}

input AwsAthenaSnInput {
  OutputLocation: String
  EncryptionConfiguration: AwsAthenaSpInput
}

type AwsAthenaSp {
  EncryptionOption: String!
  KmsKey: String
}

input AwsAthenaSpInput {
  EncryptionOption: String!
  KmsKey: String
}

type AwsAthenaSr {
  Database: String
}

input AwsAthenaSrInput {
  Database: String
}

input AwsAthenaStartQueryExecutionInput {
  QueryString: String!
  ClientRequestToken: String
  QueryExecutionContext: AwsAthenaSrInput
  ResultConfiguration: AwsAthenaSnInput
  WorkGroup: String
}

type AwsAthenaStartQueryExecutionOutput {
  QueryExecutionId: String
}

input AwsAthenaStopQueryExecutionInput {
  QueryExecutionId: String!
}

input AwsAthenaTagResourceInput {
  ResourceARN: String!
  Tags: [AwsAthenaS17Input]!
}

input AwsAthenaUntagResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

input AwsAthenaUpdateWorkGroupConfigurationUpdatesInput {
  EnforceWorkGroupConfiguration: Boolean
  ResultConfigurationUpdates: AwsAthenaUpdateWorkGroupConfigurationUpdatesResultConfigurationUpdatesInput
  PublishCloudWatchMetricsEnabled: Boolean
  BytesScannedCutoffPerQuery: JSON
  RemoveBytesScannedCutoffPerQuery: Boolean
}

input AwsAthenaUpdateWorkGroupConfigurationUpdatesResultConfigurationUpdatesInput {
  OutputLocation: String
  RemoveOutputLocation: Boolean
  EncryptionConfiguration: AwsAthenaSpInput
  RemoveEncryptionConfiguration: Boolean
}

input AwsAthenaUpdateWorkGroupInput {
  WorkGroup: String!
  Description: String
  ConfigurationUpdates: AwsAthenaUpdateWorkGroupConfigurationUpdatesInput
  State: String
}

"""Auto Scaling (2011-01-01)"""
type AwsAutoScaling {
  attachInstances(input: AwsAutoScalingAttachInstancesInput!, config: AwsConfig): JSON
  attachLoadBalancerTargetGroups(input: AwsAutoScalingAttachLoadBalancerTargetGroupsInput!, config: AwsConfig): JSON
  attachLoadBalancers(input: AwsAutoScalingAttachLoadBalancersInput!, config: AwsConfig): JSON
  batchDeleteScheduledAction(input: AwsAutoScalingBatchDeleteScheduledActionInput!, config: AwsConfig): AwsAutoScalingBatchDeleteScheduledActionOutput
  batchPutScheduledUpdateGroupAction(input: AwsAutoScalingBatchPutScheduledUpdateGroupActionInput!, config: AwsConfig): AwsAutoScalingBatchPutScheduledUpdateGroupActionOutput
  completeLifecycleAction(input: AwsAutoScalingCompleteLifecycleActionInput!, config: AwsConfig): JSON
  createAutoScalingGroup(input: AwsAutoScalingCreateAutoScalingGroupInput!, config: AwsConfig): JSON
  createLaunchConfiguration(input: AwsAutoScalingCreateLaunchConfigurationInput!, config: AwsConfig): JSON
  createOrUpdateTags(input: AwsAutoScalingCreateOrUpdateTagsInput!, config: AwsConfig): JSON
  deleteAutoScalingGroup(input: AwsAutoScalingDeleteAutoScalingGroupInput!, config: AwsConfig): JSON
  deleteLaunchConfiguration(input: AwsAutoScalingDeleteLaunchConfigurationInput!, config: AwsConfig): JSON
  deleteLifecycleHook(input: AwsAutoScalingDeleteLifecycleHookInput!, config: AwsConfig): JSON
  deleteNotificationConfiguration(input: AwsAutoScalingDeleteNotificationConfigurationInput!, config: AwsConfig): JSON
  deletePolicy(input: AwsAutoScalingDeletePolicyInput!, config: AwsConfig): JSON
  deleteScheduledAction(input: AwsAutoScalingDeleteScheduledActionInput!, config: AwsConfig): JSON
  deleteTags(input: AwsAutoScalingDeleteTagsInput!, config: AwsConfig): JSON
  describeAccountLimits(config: AwsConfig): AwsAutoScalingDescribeAccountLimitsOutput
  describeAdjustmentTypes(config: AwsConfig): AwsAutoScalingDescribeAdjustmentTypesOutput
  describeAutoScalingGroups(input: AwsAutoScalingDescribeAutoScalingGroupsInput, config: AwsConfig): AwsAutoScalingDescribeAutoScalingGroupsOutput
  describeAutoScalingInstances(input: AwsAutoScalingDescribeAutoScalingInstancesInput, config: AwsConfig): AwsAutoScalingDescribeAutoScalingInstancesOutput
  describeAutoScalingNotificationTypes(config: AwsConfig): AwsAutoScalingDescribeAutoScalingNotificationTypesOutput
  describeLaunchConfigurations(input: AwsAutoScalingDescribeLaunchConfigurationsInput, config: AwsConfig): AwsAutoScalingDescribeLaunchConfigurationsOutput
  describeLifecycleHookTypes(config: AwsConfig): AwsAutoScalingDescribeLifecycleHookTypesOutput
  describeLifecycleHooks(input: AwsAutoScalingDescribeLifecycleHooksInput!, config: AwsConfig): AwsAutoScalingDescribeLifecycleHooksOutput
  describeLoadBalancerTargetGroups(input: AwsAutoScalingDescribeLoadBalancerTargetGroupsInput!, config: AwsConfig): AwsAutoScalingDescribeLoadBalancerTargetGroupsOutput
  describeLoadBalancers(input: AwsAutoScalingDescribeLoadBalancersInput!, config: AwsConfig): AwsAutoScalingDescribeLoadBalancersOutput
  describeMetricCollectionTypes(config: AwsConfig): AwsAutoScalingDescribeMetricCollectionTypesOutput
  describeNotificationConfigurations(input: AwsAutoScalingDescribeNotificationConfigurationsInput, config: AwsConfig): AwsAutoScalingDescribeNotificationConfigurationsOutput
  describePolicies(input: AwsAutoScalingDescribePoliciesInput, config: AwsConfig): AwsAutoScalingDescribePoliciesOutput
  describeScalingActivities(input: AwsAutoScalingDescribeScalingActivitiesInput, config: AwsConfig): AwsAutoScalingDescribeScalingActivitiesOutput
  describeScalingProcessTypes(config: AwsConfig): AwsAutoScalingDescribeScalingProcessTypesOutput
  describeScheduledActions(input: AwsAutoScalingDescribeScheduledActionsInput, config: AwsConfig): AwsAutoScalingDescribeScheduledActionsOutput
  describeTags(input: AwsAutoScalingDescribeTagsInput, config: AwsConfig): AwsAutoScalingDescribeTagsOutput
  describeTerminationPolicyTypes(config: AwsConfig): AwsAutoScalingDescribeTerminationPolicyTypesOutput
  detachInstances(input: AwsAutoScalingDetachInstancesInput!, config: AwsConfig): AwsAutoScalingDetachInstancesOutput
  detachLoadBalancerTargetGroups(input: AwsAutoScalingDetachLoadBalancerTargetGroupsInput!, config: AwsConfig): JSON
  detachLoadBalancers(input: AwsAutoScalingDetachLoadBalancersInput!, config: AwsConfig): JSON
  disableMetricsCollection(input: AwsAutoScalingDisableMetricsCollectionInput!, config: AwsConfig): JSON
  enableMetricsCollection(input: AwsAutoScalingEnableMetricsCollectionInput!, config: AwsConfig): JSON
  enterStandby(input: AwsAutoScalingEnterStandbyInput!, config: AwsConfig): AwsAutoScalingEnterStandbyOutput
  executePolicy(input: AwsAutoScalingExecutePolicyInput!, config: AwsConfig): JSON
  exitStandby(input: AwsAutoScalingExitStandbyInput!, config: AwsConfig): AwsAutoScalingExitStandbyOutput
  putLifecycleHook(input: AwsAutoScalingPutLifecycleHookInput!, config: AwsConfig): JSON
  putNotificationConfiguration(input: AwsAutoScalingPutNotificationConfigurationInput!, config: AwsConfig): JSON
  putScalingPolicy(input: AwsAutoScalingPutScalingPolicyInput!, config: AwsConfig): AwsAutoScalingPutScalingPolicyOutput
  putScheduledUpdateGroupAction(input: AwsAutoScalingPutScheduledUpdateGroupActionInput!, config: AwsConfig): JSON
  recordLifecycleActionHeartbeat(input: AwsAutoScalingRecordLifecycleActionHeartbeatInput!, config: AwsConfig): JSON
  resumeProcesses(input: JSON, config: AwsConfig): JSON
  setDesiredCapacity(input: AwsAutoScalingSetDesiredCapacityInput!, config: AwsConfig): JSON
  setInstanceHealth(input: AwsAutoScalingSetInstanceHealthInput!, config: AwsConfig): JSON
  setInstanceProtection(input: AwsAutoScalingSetInstanceProtectionInput!, config: AwsConfig): JSON
  suspendProcesses(input: JSON, config: AwsConfig): JSON
  terminateInstanceInAutoScalingGroup(input: AwsAutoScalingTerminateInstanceInAutoScalingGroupInput!, config: AwsConfig): AwsAutoScalingTerminateInstanceInAutoScalingGroupOutput
  updateAutoScalingGroup(input: AwsAutoScalingUpdateAutoScalingGroupInput!, config: AwsConfig): JSON
}

input AwsAutoScalingAttachInstancesInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
}

input AwsAutoScalingAttachLoadBalancersInput {
  AutoScalingGroupName: String!
  LoadBalancerNames: [String]!
}

input AwsAutoScalingAttachLoadBalancerTargetGroupsInput {
  AutoScalingGroupName: String!
  TargetGroupARNs: [String]!
}

input AwsAutoScalingBatchDeleteScheduledActionInput {
  AutoScalingGroupName: String!
  ScheduledActionNames: [String]!
}

type AwsAutoScalingBatchDeleteScheduledActionOutput {
  FailedScheduledActions: [AwsAutoScalingSg]
}

input AwsAutoScalingBatchPutScheduledUpdateGroupActionInput {
  AutoScalingGroupName: String!
  ScheduledUpdateGroupActions: [AwsAutoScalingBatchPutScheduledUpdateGroupActionScheduledUpdateGroupActionsInput]!
}

type AwsAutoScalingBatchPutScheduledUpdateGroupActionOutput {
  FailedScheduledUpdateGroupActions: [AwsAutoScalingSg]
}

input AwsAutoScalingBatchPutScheduledUpdateGroupActionScheduledUpdateGroupActionsInput {
  ScheduledActionName: String!
  StartTime: Date
  EndTime: Date
  Recurrence: String
  MinSize: Int
  MaxSize: Int
  DesiredCapacity: Int
}

input AwsAutoScalingCompleteLifecycleActionInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
  LifecycleActionToken: String
  LifecycleActionResult: String!
  InstanceId: String
}

input AwsAutoScalingCreateAutoScalingGroupInput {
  AutoScalingGroupName: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoScalingSyInput
  MixedInstancesPolicy: AwsAutoScalingS10Input
  InstanceId: String
  MinSize: Int!
  MaxSize: Int!
  DesiredCapacity: Int
  DefaultCooldown: Int
  AvailabilityZones: [String]
  LoadBalancerNames: [String]
  TargetGroupARNs: [String]
  HealthCheckType: String
  HealthCheckGracePeriod: Int
  PlacementGroup: String
  VPCZoneIdentifier: String
  TerminationPolicies: [String]
  NewInstancesProtectedFromScaleIn: Boolean
  LifecycleHookSpecificationList: [AwsAutoScalingCreateAutoScalingGroupLifecycleHookSpecificationListInput]
  Tags: [AwsAutoScalingS1nInput]
  ServiceLinkedRoleARN: String
}

input AwsAutoScalingCreateAutoScalingGroupLifecycleHookSpecificationListInput {
  LifecycleHookName: String!
  LifecycleTransition: String!
  NotificationMetadata: String
  HeartbeatTimeout: Int
  DefaultResult: String
  NotificationTargetARN: String
  RoleARN: String
}

input AwsAutoScalingCreateLaunchConfigurationInput {
  LaunchConfigurationName: String!
  ImageId: String
  KeyName: String
  SecurityGroups: [String]
  ClassicLinkVPCId: String
  ClassicLinkVPCSecurityGroups: [String]
  UserData: String
  InstanceId: String
  InstanceType: String
  KernelId: String
  RamdiskId: String
  BlockDeviceMappings: [AwsAutoScalingS1wInput]
  InstanceMonitoring: AwsAutoScalingS25Input
  SpotPrice: String
  IamInstanceProfile: String
  EbsOptimized: Boolean
  AssociatePublicIpAddress: Boolean
  PlacementTenancy: String
}

input AwsAutoScalingCreateOrUpdateTagsInput {
  Tags: [AwsAutoScalingS1nInput]!
}

input AwsAutoScalingDeleteAutoScalingGroupInput {
  AutoScalingGroupName: String!
  ForceDelete: Boolean
}

input AwsAutoScalingDeleteLaunchConfigurationInput {
  LaunchConfigurationName: String!
}

input AwsAutoScalingDeleteLifecycleHookInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
}

input AwsAutoScalingDeleteNotificationConfigurationInput {
  AutoScalingGroupName: String!
  TopicARN: String!
}

input AwsAutoScalingDeletePolicyInput {
  AutoScalingGroupName: String
  PolicyName: String!
}

input AwsAutoScalingDeleteScheduledActionInput {
  AutoScalingGroupName: String!
  ScheduledActionName: String!
}

input AwsAutoScalingDeleteTagsInput {
  Tags: [AwsAutoScalingS1nInput]!
}

type AwsAutoScalingDescribeAccountLimitsOutput {
  MaxNumberOfAutoScalingGroups: Int
  MaxNumberOfLaunchConfigurations: Int
  NumberOfAutoScalingGroups: Int
  NumberOfLaunchConfigurations: Int
}

type AwsAutoScalingDescribeAdjustmentTypesOutput {
  AdjustmentTypes: [AwsAutoScalingDescribeAdjustmentTypesOutputAdjustmentTypes]
}

type AwsAutoScalingDescribeAdjustmentTypesOutputAdjustmentTypes {
  AdjustmentType: String
}

input AwsAutoScalingDescribeAutoScalingGroupsInput {
  AutoScalingGroupNames: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeAutoScalingGroupsOutput {
  AutoScalingGroups: [AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroups]!
  NextToken: String
}

type AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroups {
  AutoScalingGroupName: String!
  AutoScalingGroupARN: String
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoScalingSy
  MixedInstancesPolicy: AwsAutoScalingS10
  MinSize: Int!
  MaxSize: Int!
  DesiredCapacity: Int!
  DefaultCooldown: Int!
  AvailabilityZones: [String]!
  LoadBalancerNames: [String]
  TargetGroupARNs: [String]
  HealthCheckType: String!
  HealthCheckGracePeriod: Int
  Instances: [AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsInstances]
  CreatedTime: Date!
  SuspendedProcesses: [AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsSuspendedProcesses]
  PlacementGroup: String
  VPCZoneIdentifier: String
  EnabledMetrics: [AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsEnabledMetrics]
  Status: String
  Tags: [AwsAutoScalingS35]
  TerminationPolicies: [String]
  NewInstancesProtectedFromScaleIn: Boolean
  ServiceLinkedRoleARN: String
}

type AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsEnabledMetrics {
  Metric: String
  Granularity: String
}

type AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsInstances {
  InstanceId: String!
  AvailabilityZone: String!
  LifecycleState: String!
  HealthStatus: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoScalingSy
  ProtectedFromScaleIn: Boolean!
}

type AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsSuspendedProcesses {
  ProcessName: String
  SuspensionReason: String
}

input AwsAutoScalingDescribeAutoScalingInstancesInput {
  InstanceIds: [String]
  MaxRecords: Int
  NextToken: String
}

type AwsAutoScalingDescribeAutoScalingInstancesOutput {
  AutoScalingInstances: [AwsAutoScalingDescribeAutoScalingInstancesOutputAutoScalingInstances]
  NextToken: String
}

type AwsAutoScalingDescribeAutoScalingInstancesOutputAutoScalingInstances {
  InstanceId: String!
  AutoScalingGroupName: String!
  AvailabilityZone: String!
  LifecycleState: String!
  HealthStatus: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoScalingSy
  ProtectedFromScaleIn: Boolean!
}

type AwsAutoScalingDescribeAutoScalingNotificationTypesOutput {
  AutoScalingNotificationTypes: [String]
}

input AwsAutoScalingDescribeLaunchConfigurationsInput {
  LaunchConfigurationNames: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeLaunchConfigurationsOutput {
  LaunchConfigurations: [AwsAutoScalingDescribeLaunchConfigurationsOutputLaunchConfigurations]!
  NextToken: String
}

type AwsAutoScalingDescribeLaunchConfigurationsOutputLaunchConfigurations {
  LaunchConfigurationName: String!
  LaunchConfigurationARN: String
  ImageId: String!
  KeyName: String
  SecurityGroups: [String]
  ClassicLinkVPCId: String
  ClassicLinkVPCSecurityGroups: [String]
  UserData: String
  InstanceType: String!
  KernelId: String
  RamdiskId: String
  BlockDeviceMappings: [AwsAutoScalingS1w]
  InstanceMonitoring: AwsAutoScalingS25
  SpotPrice: String
  IamInstanceProfile: String
  CreatedTime: Date!
  EbsOptimized: Boolean
  AssociatePublicIpAddress: Boolean
  PlacementTenancy: String
}

input AwsAutoScalingDescribeLifecycleHooksInput {
  AutoScalingGroupName: String!
  LifecycleHookNames: [String]
}

type AwsAutoScalingDescribeLifecycleHooksOutput {
  LifecycleHooks: [AwsAutoScalingDescribeLifecycleHooksOutputLifecycleHooks]
}

type AwsAutoScalingDescribeLifecycleHooksOutputLifecycleHooks {
  LifecycleHookName: String
  AutoScalingGroupName: String
  LifecycleTransition: String
  NotificationTargetARN: String
  RoleARN: String
  NotificationMetadata: String
  HeartbeatTimeout: Int
  GlobalTimeout: Int
  DefaultResult: String
}

type AwsAutoScalingDescribeLifecycleHookTypesOutput {
  LifecycleHookTypes: [String]
}

input AwsAutoScalingDescribeLoadBalancersInput {
  AutoScalingGroupName: String!
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeLoadBalancersOutput {
  LoadBalancers: [AwsAutoScalingDescribeLoadBalancersOutputLoadBalancers]
  NextToken: String
}

type AwsAutoScalingDescribeLoadBalancersOutputLoadBalancers {
  LoadBalancerName: String
  State: String
}

input AwsAutoScalingDescribeLoadBalancerTargetGroupsInput {
  AutoScalingGroupName: String!
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeLoadBalancerTargetGroupsOutput {
  LoadBalancerTargetGroups: [AwsAutoScalingDescribeLoadBalancerTargetGroupsOutputLoadBalancerTargetGroups]
  NextToken: String
}

type AwsAutoScalingDescribeLoadBalancerTargetGroupsOutputLoadBalancerTargetGroups {
  LoadBalancerTargetGroupARN: String
  State: String
}

type AwsAutoScalingDescribeMetricCollectionTypesOutput {
  Metrics: [AwsAutoScalingDescribeMetricCollectionTypesOutputMetrics]
  Granularities: [AwsAutoScalingDescribeMetricCollectionTypesOutputGranularities]
}

type AwsAutoScalingDescribeMetricCollectionTypesOutputGranularities {
  Granularity: String
}

type AwsAutoScalingDescribeMetricCollectionTypesOutputMetrics {
  Metric: String
}

input AwsAutoScalingDescribeNotificationConfigurationsInput {
  AutoScalingGroupNames: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeNotificationConfigurationsOutput {
  NotificationConfigurations: [AwsAutoScalingDescribeNotificationConfigurationsOutputNotificationConfigurations]!
  NextToken: String
}

type AwsAutoScalingDescribeNotificationConfigurationsOutputNotificationConfigurations {
  AutoScalingGroupName: String
  TopicARN: String
  NotificationType: String
}

input AwsAutoScalingDescribePoliciesInput {
  AutoScalingGroupName: String
  PolicyNames: [String]
  PolicyTypes: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribePoliciesOutput {
  ScalingPolicies: [AwsAutoScalingDescribePoliciesOutputScalingPolicies]
  NextToken: String
}

type AwsAutoScalingDescribePoliciesOutputScalingPolicies {
  AutoScalingGroupName: String
  PolicyName: String
  PolicyARN: String
  PolicyType: String
  AdjustmentType: String
  MinAdjustmentStep: Int
  MinAdjustmentMagnitude: Int
  ScalingAdjustment: Int
  Cooldown: Int
  StepAdjustments: [AwsAutoScalingS4f]
  MetricAggregationType: String
  EstimatedInstanceWarmup: Int
  Alarms: [AwsAutoScalingS4j]
  TargetTrackingConfiguration: AwsAutoScalingS4l
}

input AwsAutoScalingDescribeScalingActivitiesInput {
  ActivityIds: [String]
  AutoScalingGroupName: String
  MaxRecords: Int
  NextToken: String
}

type AwsAutoScalingDescribeScalingActivitiesOutput {
  Activities: [AwsAutoScalingS52]!
  NextToken: String
}

type AwsAutoScalingDescribeScalingProcessTypesOutput {
  Processes: [AwsAutoScalingDescribeScalingProcessTypesOutputProcesses]
}

type AwsAutoScalingDescribeScalingProcessTypesOutputProcesses {
  ProcessName: String!
}

input AwsAutoScalingDescribeScheduledActionsInput {
  AutoScalingGroupName: String
  ScheduledActionNames: [String]
  StartTime: Date
  EndTime: Date
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeScheduledActionsOutput {
  ScheduledUpdateGroupActions: [AwsAutoScalingDescribeScheduledActionsOutputScheduledUpdateGroupActions]
  NextToken: String
}

type AwsAutoScalingDescribeScheduledActionsOutputScheduledUpdateGroupActions {
  AutoScalingGroupName: String
  ScheduledActionName: String
  ScheduledActionARN: String
  Time: Date
  StartTime: Date
  EndTime: Date
  Recurrence: String
  MinSize: Int
  MaxSize: Int
  DesiredCapacity: Int
}

input AwsAutoScalingDescribeTagsFiltersInput {
  Name: String
  Values: [String]
}

input AwsAutoScalingDescribeTagsInput {
  Filters: [AwsAutoScalingDescribeTagsFiltersInput]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeTagsOutput {
  Tags: [AwsAutoScalingS35]
  NextToken: String
}

type AwsAutoScalingDescribeTerminationPolicyTypesOutput {
  TerminationPolicyTypes: [String]
}

input AwsAutoScalingDetachInstancesInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
  ShouldDecrementDesiredCapacity: Boolean!
}

type AwsAutoScalingDetachInstancesOutput {
  Activities: [AwsAutoScalingS52]
}

input AwsAutoScalingDetachLoadBalancersInput {
  AutoScalingGroupName: String!
  LoadBalancerNames: [String]!
}

input AwsAutoScalingDetachLoadBalancerTargetGroupsInput {
  AutoScalingGroupName: String!
  TargetGroupARNs: [String]!
}

input AwsAutoScalingDisableMetricsCollectionInput {
  AutoScalingGroupName: String!
  Metrics: [String]
}

input AwsAutoScalingEnableMetricsCollectionInput {
  AutoScalingGroupName: String!
  Metrics: [String]
  Granularity: String!
}

input AwsAutoScalingEnterStandbyInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
  ShouldDecrementDesiredCapacity: Boolean!
}

type AwsAutoScalingEnterStandbyOutput {
  Activities: [AwsAutoScalingS52]
}

input AwsAutoScalingExecutePolicyInput {
  AutoScalingGroupName: String
  PolicyName: String!
  HonorCooldown: Boolean
  MetricValue: JSON
  BreachThreshold: JSON
}

input AwsAutoScalingExitStandbyInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
}

type AwsAutoScalingExitStandbyOutput {
  Activities: [AwsAutoScalingS52]
}

"""AWS Auto Scaling Plans (2018-01-06)"""
type AwsAutoScalingPlans {
  createScalingPlan(input: AwsAutoScalingPlansCreateScalingPlanInput!, config: AwsConfig): AwsAutoScalingPlansCreateScalingPlanOutput
  deleteScalingPlan(input: AwsAutoScalingPlansDeleteScalingPlanInput!, config: AwsConfig): JSON
  describeScalingPlanResources(input: AwsAutoScalingPlansDescribeScalingPlanResourcesInput!, config: AwsConfig): AwsAutoScalingPlansDescribeScalingPlanResourcesOutput
  describeScalingPlans(input: AwsAutoScalingPlansDescribeScalingPlansInput, config: AwsConfig): AwsAutoScalingPlansDescribeScalingPlansOutput
  getScalingPlanResourceForecastData(input: AwsAutoScalingPlansGetScalingPlanResourceForecastDataInput!, config: AwsConfig): AwsAutoScalingPlansGetScalingPlanResourceForecastDataOutput
  updateScalingPlan(input: AwsAutoScalingPlansUpdateScalingPlanInput!, config: AwsConfig): JSON
}

input AwsAutoScalingPlansCreateScalingPlanInput {
  ScalingPlanName: String!
  ApplicationSource: AwsAutoScalingPlansS3Input!
  ScalingInstructions: [AwsAutoScalingPlansSaInput]!
}

type AwsAutoScalingPlansCreateScalingPlanOutput {
  ScalingPlanVersion: JSON!
}

input AwsAutoScalingPlansDeleteScalingPlanInput {
  ScalingPlanName: String!
  ScalingPlanVersion: JSON!
}

input AwsAutoScalingPlansDescribeScalingPlanResourcesInput {
  ScalingPlanName: String!
  ScalingPlanVersion: JSON!
  MaxResults: Int
  NextToken: String
}

type AwsAutoScalingPlansDescribeScalingPlanResourcesOutput {
  ScalingPlanResources: [AwsAutoScalingPlansDescribeScalingPlanResourcesOutputScalingPlanResources]
  NextToken: String
}

type AwsAutoScalingPlansDescribeScalingPlanResourcesOutputScalingPlanResources {
  ScalingPlanName: String!
  ScalingPlanVersion: JSON!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  ScalingPolicies: [AwsAutoScalingPlansDescribeScalingPlanResourcesOutputScalingPlanResourcesScalingPolicies]
  ScalingStatusCode: String!
  ScalingStatusMessage: String
}

type AwsAutoScalingPlansDescribeScalingPlanResourcesOutputScalingPlanResourcesScalingPolicies {
  PolicyName: String!
  PolicyType: String!
  TargetTrackingConfiguration: AwsAutoScalingPlansSh
}

input AwsAutoScalingPlansDescribeScalingPlansInput {
  ScalingPlanNames: [String]
  ScalingPlanVersion: JSON
  ApplicationSources: [AwsAutoScalingPlansS3Input]
  MaxResults: Int
  NextToken: String
}

type AwsAutoScalingPlansDescribeScalingPlansOutput {
  ScalingPlans: [AwsAutoScalingPlansDescribeScalingPlansOutputScalingPlans]
  NextToken: String
}

type AwsAutoScalingPlansDescribeScalingPlansOutputScalingPlans {
  ScalingPlanName: String!
  ScalingPlanVersion: JSON!
  ApplicationSource: AwsAutoScalingPlansS3!
  ScalingInstructions: [AwsAutoScalingPlansSa]!
  StatusCode: String!
  StatusMessage: String
  StatusStartTime: Date
  CreationTime: Date
}

input AwsAutoScalingPlansGetScalingPlanResourceForecastDataInput {
  ScalingPlanName: String!
  ScalingPlanVersion: JSON!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  ForecastDataType: String!
  StartTime: Date!
  EndTime: Date!
}

type AwsAutoScalingPlansGetScalingPlanResourceForecastDataOutput {
  Datapoints: [AwsAutoScalingPlansGetScalingPlanResourceForecastDataOutputDatapoints]!
}

type AwsAutoScalingPlansGetScalingPlanResourceForecastDataOutputDatapoints {
  Timestamp: Date
  Value: JSON
}

type AwsAutoScalingPlansS3 {
  CloudFormationStackARN: String
  TagFilters: [AwsAutoScalingPlansS3TagFilters]
}

input AwsAutoScalingPlansS3Input {
  CloudFormationStackARN: String
  TagFilters: [AwsAutoScalingPlansS3TagFiltersInput]
}

type AwsAutoScalingPlansS3TagFilters {
  Key: String
  Values: [String]
}

input AwsAutoScalingPlansS3TagFiltersInput {
  Key: String
  Values: [String]
}

type AwsAutoScalingPlansSa {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  MinCapacity: Int!
  MaxCapacity: Int!
  TargetTrackingConfigurations: [AwsAutoScalingPlansSh]!
  PredefinedLoadMetricSpecification: AwsAutoScalingPlansSaPredefinedLoadMetricSpecification
  CustomizedLoadMetricSpecification: AwsAutoScalingPlansSaCustomizedLoadMetricSpecification
  ScheduledActionBufferTime: Int
  PredictiveScalingMaxCapacityBehavior: String
  PredictiveScalingMaxCapacityBuffer: Int
  PredictiveScalingMode: String
  ScalingPolicyUpdateBehavior: String
  DisableDynamicScaling: Boolean
}

type AwsAutoScalingPlansSaCustomizedLoadMetricSpecification {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsAutoScalingPlansSo]
  Statistic: String!
  Unit: String
}

input AwsAutoScalingPlansSaCustomizedLoadMetricSpecificationInput {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsAutoScalingPlansSoInput]
  Statistic: String!
  Unit: String
}

input AwsAutoScalingPlansSaInput {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  MinCapacity: Int!
  MaxCapacity: Int!
  TargetTrackingConfigurations: [AwsAutoScalingPlansShInput]!
  PredefinedLoadMetricSpecification: AwsAutoScalingPlansSaPredefinedLoadMetricSpecificationInput
  CustomizedLoadMetricSpecification: AwsAutoScalingPlansSaCustomizedLoadMetricSpecificationInput
  ScheduledActionBufferTime: Int
  PredictiveScalingMaxCapacityBehavior: String
  PredictiveScalingMaxCapacityBuffer: Int
  PredictiveScalingMode: String
  ScalingPolicyUpdateBehavior: String
  DisableDynamicScaling: Boolean
}

type AwsAutoScalingPlansSaPredefinedLoadMetricSpecification {
  PredefinedLoadMetricType: String!
  ResourceLabel: String
}

input AwsAutoScalingPlansSaPredefinedLoadMetricSpecificationInput {
  PredefinedLoadMetricType: String!
  ResourceLabel: String
}

type AwsAutoScalingPlansSh {
  PredefinedScalingMetricSpecification: AwsAutoScalingPlansShPredefinedScalingMetricSpecification
  CustomizedScalingMetricSpecification: AwsAutoScalingPlansShCustomizedScalingMetricSpecification
  TargetValue: JSON!
  DisableScaleIn: Boolean
  ScaleOutCooldown: Int
  ScaleInCooldown: Int
  EstimatedInstanceWarmup: Int
}

type AwsAutoScalingPlansShCustomizedScalingMetricSpecification {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsAutoScalingPlansSo]
  Statistic: String!
  Unit: String
}

input AwsAutoScalingPlansShCustomizedScalingMetricSpecificationInput {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsAutoScalingPlansSoInput]
  Statistic: String!
  Unit: String
}

input AwsAutoScalingPlansShInput {
  PredefinedScalingMetricSpecification: AwsAutoScalingPlansShPredefinedScalingMetricSpecificationInput
  CustomizedScalingMetricSpecification: AwsAutoScalingPlansShCustomizedScalingMetricSpecificationInput
  TargetValue: JSON!
  DisableScaleIn: Boolean
  ScaleOutCooldown: Int
  ScaleInCooldown: Int
  EstimatedInstanceWarmup: Int
}

type AwsAutoScalingPlansShPredefinedScalingMetricSpecification {
  PredefinedScalingMetricType: String!
  ResourceLabel: String
}

input AwsAutoScalingPlansShPredefinedScalingMetricSpecificationInput {
  PredefinedScalingMetricType: String!
  ResourceLabel: String
}

type AwsAutoScalingPlansSo {
  Name: String!
  Value: String!
}

input AwsAutoScalingPlansSoInput {
  Name: String!
  Value: String!
}

input AwsAutoScalingPlansUpdateScalingPlanInput {
  ScalingPlanName: String!
  ScalingPlanVersion: JSON!
  ApplicationSource: AwsAutoScalingPlansS3Input
  ScalingInstructions: [AwsAutoScalingPlansSaInput]
}

input AwsAutoScalingPutLifecycleHookInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
  LifecycleTransition: String
  RoleARN: String
  NotificationTargetARN: String
  NotificationMetadata: String
  HeartbeatTimeout: Int
  DefaultResult: String
}

input AwsAutoScalingPutNotificationConfigurationInput {
  AutoScalingGroupName: String!
  TopicARN: String!
  NotificationTypes: [String]!
}

input AwsAutoScalingPutScalingPolicyInput {
  AutoScalingGroupName: String!
  PolicyName: String!
  PolicyType: String
  AdjustmentType: String
  MinAdjustmentStep: Int
  MinAdjustmentMagnitude: Int
  ScalingAdjustment: Int
  Cooldown: Int
  MetricAggregationType: String
  StepAdjustments: [AwsAutoScalingS4fInput]
  EstimatedInstanceWarmup: Int
  TargetTrackingConfiguration: AwsAutoScalingS4lInput
}

type AwsAutoScalingPutScalingPolicyOutput {
  PolicyARN: String
  Alarms: [AwsAutoScalingS4j]
}

input AwsAutoScalingPutScheduledUpdateGroupActionInput {
  AutoScalingGroupName: String!
  ScheduledActionName: String!
  Time: Date
  StartTime: Date
  EndTime: Date
  Recurrence: String
  MinSize: Int
  MaxSize: Int
  DesiredCapacity: Int
}

input AwsAutoScalingRecordLifecycleActionHeartbeatInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
  LifecycleActionToken: String
  InstanceId: String
}

type AwsAutoScalingS10 {
  LaunchTemplate: AwsAutoScalingS10LaunchTemplate
  InstancesDistribution: AwsAutoScalingS10InstancesDistribution
}

input AwsAutoScalingS10Input {
  LaunchTemplate: AwsAutoScalingS10LaunchTemplateInput
  InstancesDistribution: AwsAutoScalingS10InstancesDistributionInput
}

type AwsAutoScalingS10InstancesDistribution {
  OnDemandAllocationStrategy: String
  OnDemandBaseCapacity: Int
  OnDemandPercentageAboveBaseCapacity: Int
  SpotAllocationStrategy: String
  SpotInstancePools: Int
  SpotMaxPrice: String
}

input AwsAutoScalingS10InstancesDistributionInput {
  OnDemandAllocationStrategy: String
  OnDemandBaseCapacity: Int
  OnDemandPercentageAboveBaseCapacity: Int
  SpotAllocationStrategy: String
  SpotInstancePools: Int
  SpotMaxPrice: String
}

type AwsAutoScalingS10LaunchTemplate {
  LaunchTemplateSpecification: AwsAutoScalingSy
  Overrides: [AwsAutoScalingS10LaunchTemplateOverrides]
}

input AwsAutoScalingS10LaunchTemplateInput {
  LaunchTemplateSpecification: AwsAutoScalingSyInput
  Overrides: [AwsAutoScalingS10LaunchTemplateOverridesInput]
}

type AwsAutoScalingS10LaunchTemplateOverrides {
  InstanceType: String
}

input AwsAutoScalingS10LaunchTemplateOverridesInput {
  InstanceType: String
}

input AwsAutoScalingS1nInput {
  ResourceId: String
  ResourceType: String
  Key: String!
  Value: String
  PropagateAtLaunch: Boolean
}

type AwsAutoScalingS1w {
  VirtualName: String
  DeviceName: String!
  Ebs: AwsAutoScalingS1wEbs
  NoDevice: Boolean
}

type AwsAutoScalingS1wEbs {
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
  Iops: Int
  Encrypted: Boolean
}

input AwsAutoScalingS1wEbsInput {
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
  Iops: Int
  Encrypted: Boolean
}

input AwsAutoScalingS1wInput {
  VirtualName: String
  DeviceName: String!
  Ebs: AwsAutoScalingS1wEbsInput
  NoDevice: Boolean
}

type AwsAutoScalingS25 {
  Enabled: Boolean
}

input AwsAutoScalingS25Input {
  Enabled: Boolean
}

type AwsAutoScalingS35 {
  ResourceId: String
  ResourceType: String
  Key: String
  Value: String
  PropagateAtLaunch: Boolean
}

type AwsAutoScalingS4f {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

input AwsAutoScalingS4fInput {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

type AwsAutoScalingS4j {
  AlarmName: String
  AlarmARN: String
}

type AwsAutoScalingS4l {
  PredefinedMetricSpecification: AwsAutoScalingS4lPredefinedMetricSpecification
  CustomizedMetricSpecification: AwsAutoScalingS4lCustomizedMetricSpecification
  TargetValue: JSON!
  DisableScaleIn: Boolean
}

type AwsAutoScalingS4lCustomizedMetricSpecification {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsAutoScalingS4lCustomizedMetricSpecificationDimensions]
  Statistic: String!
  Unit: String
}

type AwsAutoScalingS4lCustomizedMetricSpecificationDimensions {
  Name: String!
  Value: String!
}

input AwsAutoScalingS4lCustomizedMetricSpecificationDimensionsInput {
  Name: String!
  Value: String!
}

input AwsAutoScalingS4lCustomizedMetricSpecificationInput {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsAutoScalingS4lCustomizedMetricSpecificationDimensionsInput]
  Statistic: String!
  Unit: String
}

input AwsAutoScalingS4lInput {
  PredefinedMetricSpecification: AwsAutoScalingS4lPredefinedMetricSpecificationInput
  CustomizedMetricSpecification: AwsAutoScalingS4lCustomizedMetricSpecificationInput
  TargetValue: JSON!
  DisableScaleIn: Boolean
}

type AwsAutoScalingS4lPredefinedMetricSpecification {
  PredefinedMetricType: String!
  ResourceLabel: String
}

input AwsAutoScalingS4lPredefinedMetricSpecificationInput {
  PredefinedMetricType: String!
  ResourceLabel: String
}

type AwsAutoScalingS52 {
  ActivityId: String!
  AutoScalingGroupName: String!
  Description: String
  Cause: String!
  StartTime: Date!
  EndTime: Date
  StatusCode: String!
  StatusMessage: String
  Progress: Int
  Details: String
}

input AwsAutoScalingSetDesiredCapacityInput {
  AutoScalingGroupName: String!
  DesiredCapacity: Int!
  HonorCooldown: Boolean
}

input AwsAutoScalingSetInstanceHealthInput {
  InstanceId: String!
  HealthStatus: String!
  ShouldRespectGracePeriod: Boolean
}

input AwsAutoScalingSetInstanceProtectionInput {
  InstanceIds: [String]!
  AutoScalingGroupName: String!
  ProtectedFromScaleIn: Boolean!
}

type AwsAutoScalingSg {
  ScheduledActionName: String!
  ErrorCode: String
  ErrorMessage: String
}

type AwsAutoScalingSy {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsAutoScalingSyInput {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsAutoScalingTerminateInstanceInAutoScalingGroupInput {
  InstanceId: String!
  ShouldDecrementDesiredCapacity: Boolean!
}

type AwsAutoScalingTerminateInstanceInAutoScalingGroupOutput {
  Activity: AwsAutoScalingS52
}

input AwsAutoScalingUpdateAutoScalingGroupInput {
  AutoScalingGroupName: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoScalingSyInput
  MixedInstancesPolicy: AwsAutoScalingS10Input
  MinSize: Int
  MaxSize: Int
  DesiredCapacity: Int
  DefaultCooldown: Int
  AvailabilityZones: [String]
  HealthCheckType: String
  HealthCheckGracePeriod: Int
  PlacementGroup: String
  VPCZoneIdentifier: String
  TerminationPolicies: [String]
  NewInstancesProtectedFromScaleIn: Boolean
  ServiceLinkedRoleARN: String
}

"""AWS Backup (2018-11-15)"""
type AwsBackup {
  createBackupPlan(input: AwsBackupCreateBackupPlanInput!, config: AwsConfig): AwsBackupCreateBackupPlanOutput
  createBackupSelection(input: AwsBackupCreateBackupSelectionInput!, config: AwsConfig): AwsBackupCreateBackupSelectionOutput
  createBackupVault(input: AwsBackupCreateBackupVaultInput!, config: AwsConfig): AwsBackupCreateBackupVaultOutput
  deleteBackupPlan(input: AwsBackupDeleteBackupPlanInput!, config: AwsConfig): AwsBackupDeleteBackupPlanOutput
  deleteBackupSelection(input: AwsBackupDeleteBackupSelectionInput!, config: AwsConfig): JSON
  deleteBackupVault(input: AwsBackupDeleteBackupVaultInput!, config: AwsConfig): JSON
  deleteBackupVaultAccessPolicy(input: AwsBackupDeleteBackupVaultAccessPolicyInput!, config: AwsConfig): JSON
  deleteBackupVaultNotifications(input: AwsBackupDeleteBackupVaultNotificationsInput!, config: AwsConfig): JSON
  deleteRecoveryPoint(input: AwsBackupDeleteRecoveryPointInput!, config: AwsConfig): JSON
  describeBackupJob(input: AwsBackupDescribeBackupJobInput!, config: AwsConfig): AwsBackupDescribeBackupJobOutput
  describeBackupVault(input: AwsBackupDescribeBackupVaultInput!, config: AwsConfig): AwsBackupDescribeBackupVaultOutput
  describeProtectedResource(input: AwsBackupDescribeProtectedResourceInput!, config: AwsConfig): AwsBackupDescribeProtectedResourceOutput
  describeRecoveryPoint(input: AwsBackupDescribeRecoveryPointInput!, config: AwsConfig): AwsBackupDescribeRecoveryPointOutput
  describeRestoreJob(input: AwsBackupDescribeRestoreJobInput!, config: AwsConfig): AwsBackupDescribeRestoreJobOutput
  exportBackupPlanTemplate(input: AwsBackupExportBackupPlanTemplateInput!, config: AwsConfig): AwsBackupExportBackupPlanTemplateOutput
  getBackupPlan(input: AwsBackupGetBackupPlanInput!, config: AwsConfig): AwsBackupGetBackupPlanOutput
  getBackupPlanFromJSON(input: AwsBackupGetBackupPlanFromJSONInput!, config: AwsConfig): AwsBackupGetBackupPlanFromJSONOutput
  getBackupPlanFromTemplate(input: AwsBackupGetBackupPlanFromTemplateInput!, config: AwsConfig): AwsBackupGetBackupPlanFromTemplateOutput
  getBackupSelection(input: AwsBackupGetBackupSelectionInput!, config: AwsConfig): AwsBackupGetBackupSelectionOutput
  getBackupVaultAccessPolicy(input: AwsBackupGetBackupVaultAccessPolicyInput!, config: AwsConfig): AwsBackupGetBackupVaultAccessPolicyOutput
  getBackupVaultNotifications(input: AwsBackupGetBackupVaultNotificationsInput!, config: AwsConfig): AwsBackupGetBackupVaultNotificationsOutput
  getRecoveryPointRestoreMetadata(input: AwsBackupGetRecoveryPointRestoreMetadataInput!, config: AwsConfig): AwsBackupGetRecoveryPointRestoreMetadataOutput
  getSupportedResourceTypes(config: AwsConfig): AwsBackupGetSupportedResourceTypesOutput
  listBackupJobs(input: AwsBackupListBackupJobsInput, config: AwsConfig): AwsBackupListBackupJobsOutput
  listBackupPlanTemplates(input: AwsBackupListBackupPlanTemplatesInput, config: AwsConfig): AwsBackupListBackupPlanTemplatesOutput
  listBackupPlanVersions(input: AwsBackupListBackupPlanVersionsInput!, config: AwsConfig): AwsBackupListBackupPlanVersionsOutput
  listBackupPlans(input: AwsBackupListBackupPlansInput, config: AwsConfig): AwsBackupListBackupPlansOutput
  listBackupSelections(input: AwsBackupListBackupSelectionsInput!, config: AwsConfig): AwsBackupListBackupSelectionsOutput
  listBackupVaults(input: AwsBackupListBackupVaultsInput, config: AwsConfig): AwsBackupListBackupVaultsOutput
  listProtectedResources(input: AwsBackupListProtectedResourcesInput, config: AwsConfig): AwsBackupListProtectedResourcesOutput
  listRecoveryPointsByBackupVault(input: AwsBackupListRecoveryPointsByBackupVaultInput!, config: AwsConfig): AwsBackupListRecoveryPointsByBackupVaultOutput
  listRecoveryPointsByResource(input: AwsBackupListRecoveryPointsByResourceInput!, config: AwsConfig): AwsBackupListRecoveryPointsByResourceOutput
  listRestoreJobs(input: AwsBackupListRestoreJobsInput, config: AwsConfig): AwsBackupListRestoreJobsOutput
  listTags(input: AwsBackupListTagsInput!, config: AwsConfig): AwsBackupListTagsOutput
  putBackupVaultAccessPolicy(input: AwsBackupPutBackupVaultAccessPolicyInput!, config: AwsConfig): JSON
  putBackupVaultNotifications(input: AwsBackupPutBackupVaultNotificationsInput!, config: AwsConfig): JSON
  startBackupJob(input: AwsBackupStartBackupJobInput!, config: AwsConfig): AwsBackupStartBackupJobOutput
  startRestoreJob(input: AwsBackupStartRestoreJobInput!, config: AwsConfig): AwsBackupStartRestoreJobOutput
  stopBackupJob(input: AwsBackupStopBackupJobInput!, config: AwsConfig): JSON
  tagResource(input: AwsBackupTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsBackupUntagResourceInput!, config: AwsConfig): JSON
  updateBackupPlan(input: AwsBackupUpdateBackupPlanInput!, config: AwsConfig): AwsBackupUpdateBackupPlanOutput
  updateRecoveryPointLifecycle(input: AwsBackupUpdateRecoveryPointLifecycleInput!, config: AwsConfig): AwsBackupUpdateRecoveryPointLifecycleOutput
}

input AwsBackupCreateBackupPlanInput {
  BackupPlan: AwsBackupS2Input!
  BackupPlanTags: JSON
  CreatorRequestId: String
}

type AwsBackupCreateBackupPlanOutput {
  BackupPlanId: String
  BackupPlanArn: String
  CreationDate: Date
  VersionId: String
}

input AwsBackupCreateBackupSelectionInput {
  BackupPlanId: String!
  BackupSelection: AwsBackupSkInput!
  CreatorRequestId: String
}

type AwsBackupCreateBackupSelectionOutput {
  SelectionId: String
  BackupPlanId: String
  CreationDate: Date
}

input AwsBackupCreateBackupVaultInput {
  BackupVaultName: String!
  BackupVaultTags: JSON
  EncryptionKeyArn: String
  CreatorRequestId: String
}

type AwsBackupCreateBackupVaultOutput {
  BackupVaultName: String
  BackupVaultArn: String
  CreationDate: Date
}

input AwsBackupDeleteBackupPlanInput {
  BackupPlanId: String!
}

type AwsBackupDeleteBackupPlanOutput {
  BackupPlanId: String
  BackupPlanArn: String
  DeletionDate: Date
  VersionId: String
}

input AwsBackupDeleteBackupSelectionInput {
  BackupPlanId: String!
  SelectionId: String!
}

input AwsBackupDeleteBackupVaultAccessPolicyInput {
  BackupVaultName: String!
}

input AwsBackupDeleteBackupVaultInput {
  BackupVaultName: String!
}

input AwsBackupDeleteBackupVaultNotificationsInput {
  BackupVaultName: String!
}

input AwsBackupDeleteRecoveryPointInput {
  BackupVaultName: String!
  RecoveryPointArn: String!
}

input AwsBackupDescribeBackupJobInput {
  BackupJobId: String!
}

type AwsBackupDescribeBackupJobOutput {
  BackupJobId: String
  BackupVaultName: String
  BackupVaultArn: String
  RecoveryPointArn: String
  ResourceArn: String
  CreationDate: Date
  CompletionDate: Date
  State: String
  StatusMessage: String
  PercentDone: String
  BackupSizeInBytes: JSON
  IamRoleArn: String
  CreatedBy: AwsBackupS16
  ResourceType: String
  BytesTransferred: JSON
  ExpectedCompletionDate: Date
  StartBy: Date
}

input AwsBackupDescribeBackupVaultInput {
  BackupVaultName: String!
}

type AwsBackupDescribeBackupVaultOutput {
  BackupVaultName: String
  BackupVaultArn: String
  EncryptionKeyArn: String
  CreationDate: Date
  CreatorRequestId: String
  NumberOfRecoveryPoints: JSON
}

input AwsBackupDescribeProtectedResourceInput {
  ResourceArn: String!
}

type AwsBackupDescribeProtectedResourceOutput {
  ResourceArn: String
  ResourceType: String
  LastBackupTime: Date
}

input AwsBackupDescribeRecoveryPointInput {
  BackupVaultName: String!
  RecoveryPointArn: String!
}

type AwsBackupDescribeRecoveryPointOutput {
  RecoveryPointArn: String
  BackupVaultName: String
  BackupVaultArn: String
  ResourceArn: String
  ResourceType: String
  CreatedBy: AwsBackupS16
  IamRoleArn: String
  Status: String
  CreationDate: Date
  CompletionDate: Date
  BackupSizeInBytes: JSON
  CalculatedLifecycle: AwsBackupS1g
  Lifecycle: AwsBackupSa
  EncryptionKeyArn: String
  IsEncrypted: Boolean
  StorageClass: String
  LastRestoreTime: Date
}

input AwsBackupDescribeRestoreJobInput {
  RestoreJobId: String!
}

type AwsBackupDescribeRestoreJobOutput {
  RestoreJobId: String
  RecoveryPointArn: String
  CreationDate: Date
  CompletionDate: Date
  Status: String
  StatusMessage: String
  PercentDone: String
  BackupSizeInBytes: JSON
  IamRoleArn: String
  ExpectedCompletionTimeMinutes: JSON
  CreatedResourceArn: String
}

input AwsBackupExportBackupPlanTemplateInput {
  BackupPlanId: String!
}

type AwsBackupExportBackupPlanTemplateOutput {
  BackupPlanTemplateJson: String
}

input AwsBackupGetBackupPlanFromJSONInput {
  BackupPlanTemplateJson: String!
}

type AwsBackupGetBackupPlanFromJSONOutput {
  BackupPlan: AwsBackupS1r
}

input AwsBackupGetBackupPlanFromTemplateInput {
  BackupPlanTemplateId: String!
}

type AwsBackupGetBackupPlanFromTemplateOutput {
  BackupPlanDocument: AwsBackupS1r
}

input AwsBackupGetBackupPlanInput {
  BackupPlanId: String!
  VersionId: String
}

type AwsBackupGetBackupPlanOutput {
  BackupPlan: AwsBackupS1r
  BackupPlanId: String
  BackupPlanArn: String
  VersionId: String
  CreatorRequestId: String
  CreationDate: Date
  DeletionDate: Date
  LastExecutionDate: Date
}

input AwsBackupGetBackupSelectionInput {
  BackupPlanId: String!
  SelectionId: String!
}

type AwsBackupGetBackupSelectionOutput {
  BackupSelection: AwsBackupSk
  SelectionId: String
  BackupPlanId: String
  CreationDate: Date
  CreatorRequestId: String
}

input AwsBackupGetBackupVaultAccessPolicyInput {
  BackupVaultName: String!
}

type AwsBackupGetBackupVaultAccessPolicyOutput {
  BackupVaultName: String
  BackupVaultArn: String
  Policy: String
}

input AwsBackupGetBackupVaultNotificationsInput {
  BackupVaultName: String!
}

type AwsBackupGetBackupVaultNotificationsOutput {
  BackupVaultName: String
  BackupVaultArn: String
  SNSTopicArn: String
  BackupVaultEvents: [String]
}

input AwsBackupGetRecoveryPointRestoreMetadataInput {
  BackupVaultName: String!
  RecoveryPointArn: String!
}

type AwsBackupGetRecoveryPointRestoreMetadataOutput {
  BackupVaultArn: String
  RecoveryPointArn: String
  RestoreMetadata: JSON
}

type AwsBackupGetSupportedResourceTypesOutput {
  ResourceTypes: [String]
}

input AwsBackupListBackupJobsInput {
  NextToken: String
  MaxResults: Int
  ByResourceArn: String
  ByState: String
  ByBackupVaultName: String
  ByCreatedBefore: Date
  ByCreatedAfter: Date
  ByResourceType: String
}

type AwsBackupListBackupJobsOutput {
  BackupJobs: [AwsBackupListBackupJobsOutputBackupJobs]
  NextToken: String
}

type AwsBackupListBackupJobsOutputBackupJobs {
  BackupJobId: String
  BackupVaultName: String
  BackupVaultArn: String
  RecoveryPointArn: String
  ResourceArn: String
  CreationDate: Date
  CompletionDate: Date
  State: String
  StatusMessage: String
  PercentDone: String
  BackupSizeInBytes: JSON
  IamRoleArn: String
  CreatedBy: AwsBackupS16
  ExpectedCompletionDate: Date
  StartBy: Date
  ResourceType: String
  BytesTransferred: JSON
}

input AwsBackupListBackupPlansInput {
  NextToken: String
  MaxResults: Int
  IncludeDeleted: Boolean
}

type AwsBackupListBackupPlansOutput {
  NextToken: String
  BackupPlansList: [AwsBackupS2q]
}

input AwsBackupListBackupPlanTemplatesInput {
  NextToken: String
  MaxResults: Int
}

type AwsBackupListBackupPlanTemplatesOutput {
  NextToken: String
  BackupPlanTemplatesList: [AwsBackupListBackupPlanTemplatesOutputBackupPlanTemplatesList]
}

type AwsBackupListBackupPlanTemplatesOutputBackupPlanTemplatesList {
  BackupPlanTemplateId: String
  BackupPlanTemplateName: String
}

input AwsBackupListBackupPlanVersionsInput {
  BackupPlanId: String!
  NextToken: String
  MaxResults: Int
}

type AwsBackupListBackupPlanVersionsOutput {
  NextToken: String
  BackupPlanVersionsList: [AwsBackupS2q]
}

input AwsBackupListBackupSelectionsInput {
  BackupPlanId: String!
  NextToken: String
  MaxResults: Int
}

type AwsBackupListBackupSelectionsOutput {
  NextToken: String
  BackupSelectionsList: [AwsBackupListBackupSelectionsOutputBackupSelectionsList]
}

type AwsBackupListBackupSelectionsOutputBackupSelectionsList {
  SelectionId: String
  SelectionName: String
  BackupPlanId: String
  CreationDate: Date
  CreatorRequestId: String
  IamRoleArn: String
}

input AwsBackupListBackupVaultsInput {
  NextToken: String
  MaxResults: Int
}

type AwsBackupListBackupVaultsOutput {
  BackupVaultList: [AwsBackupListBackupVaultsOutputBackupVaultList]
  NextToken: String
}

type AwsBackupListBackupVaultsOutputBackupVaultList {
  BackupVaultName: String
  BackupVaultArn: String
  CreationDate: Date
  EncryptionKeyArn: String
  CreatorRequestId: String
  NumberOfRecoveryPoints: JSON
}

input AwsBackupListProtectedResourcesInput {
  NextToken: String
  MaxResults: Int
}

type AwsBackupListProtectedResourcesOutput {
  Results: [AwsBackupListProtectedResourcesOutputResults]
  NextToken: String
}

type AwsBackupListProtectedResourcesOutputResults {
  ResourceArn: String
  ResourceType: String
  LastBackupTime: Date
}

input AwsBackupListRecoveryPointsByBackupVaultInput {
  BackupVaultName: String!
  NextToken: String
  MaxResults: Int
  ByResourceArn: String
  ByResourceType: String
  ByBackupPlanId: String
  ByCreatedBefore: Date
  ByCreatedAfter: Date
}

type AwsBackupListRecoveryPointsByBackupVaultOutput {
  NextToken: String
  RecoveryPoints: [AwsBackupListRecoveryPointsByBackupVaultOutputRecoveryPoints]
}

type AwsBackupListRecoveryPointsByBackupVaultOutputRecoveryPoints {
  RecoveryPointArn: String
  BackupVaultName: String
  BackupVaultArn: String
  ResourceArn: String
  ResourceType: String
  CreatedBy: AwsBackupS16
  IamRoleArn: String
  Status: String
  CreationDate: Date
  CompletionDate: Date
  BackupSizeInBytes: JSON
  CalculatedLifecycle: AwsBackupS1g
  Lifecycle: AwsBackupSa
  EncryptionKeyArn: String
  IsEncrypted: Boolean
  LastRestoreTime: Date
}

input AwsBackupListRecoveryPointsByResourceInput {
  ResourceArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsBackupListRecoveryPointsByResourceOutput {
  NextToken: String
  RecoveryPoints: [AwsBackupListRecoveryPointsByResourceOutputRecoveryPoints]
}

type AwsBackupListRecoveryPointsByResourceOutputRecoveryPoints {
  RecoveryPointArn: String
  CreationDate: Date
  Status: String
  EncryptionKeyArn: String
  BackupSizeBytes: JSON
  BackupVaultName: String
}

input AwsBackupListRestoreJobsInput {
  NextToken: String
  MaxResults: Int
}

type AwsBackupListRestoreJobsOutput {
  RestoreJobs: [AwsBackupListRestoreJobsOutputRestoreJobs]
  NextToken: String
}

type AwsBackupListRestoreJobsOutputRestoreJobs {
  RestoreJobId: String
  RecoveryPointArn: String
  CreationDate: Date
  CompletionDate: Date
  Status: String
  StatusMessage: String
  PercentDone: String
  BackupSizeInBytes: JSON
  IamRoleArn: String
  ExpectedCompletionTimeMinutes: JSON
  CreatedResourceArn: String
}

input AwsBackupListTagsInput {
  ResourceArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsBackupListTagsOutput {
  NextToken: String
  Tags: JSON
}

input AwsBackupPutBackupVaultAccessPolicyInput {
  BackupVaultName: String!
  Policy: String
}

input AwsBackupPutBackupVaultNotificationsInput {
  BackupVaultName: String!
  SNSTopicArn: String!
  BackupVaultEvents: [String]!
}

type AwsBackupS16 {
  BackupPlanId: String
  BackupPlanArn: String
  BackupPlanVersion: String
  BackupRuleId: String
}

type AwsBackupS1g {
  MoveToColdStorageAt: Date
  DeleteAt: Date
}

type AwsBackupS1r {
  BackupPlanName: String!
  Rules: [AwsBackupS1rRules]!
}

type AwsBackupS1rRules {
  RuleName: String!
  TargetBackupVaultName: String!
  ScheduleExpression: String
  StartWindowMinutes: JSON
  CompletionWindowMinutes: JSON
  Lifecycle: AwsBackupSa
  RecoveryPointTags: JSON
  RuleId: String
}

input AwsBackupS2Input {
  BackupPlanName: String!
  Rules: [AwsBackupS2RulesInput]!
}

type AwsBackupS2q {
  BackupPlanArn: String
  BackupPlanId: String
  CreationDate: Date
  DeletionDate: Date
  VersionId: String
  BackupPlanName: String
  CreatorRequestId: String
  LastExecutionDate: Date
}

input AwsBackupS2RulesInput {
  RuleName: String!
  TargetBackupVaultName: String!
  ScheduleExpression: String
  StartWindowMinutes: JSON
  CompletionWindowMinutes: JSON
  Lifecycle: AwsBackupSaInput
  RecoveryPointTags: JSON
}

type AwsBackupSa {
  MoveToColdStorageAfterDays: JSON
  DeleteAfterDays: JSON
}

input AwsBackupSaInput {
  MoveToColdStorageAfterDays: JSON
  DeleteAfterDays: JSON
}

type AwsBackupSk {
  SelectionName: String!
  IamRoleArn: String!
  Resources: [String]
  ListOfTags: [AwsBackupSkListOfTags]
}

input AwsBackupSkInput {
  SelectionName: String!
  IamRoleArn: String!
  Resources: [String]
  ListOfTags: [AwsBackupSkListOfTagsInput]
}

type AwsBackupSkListOfTags {
  ConditionType: String!
  ConditionKey: String!
  ConditionValue: String!
}

input AwsBackupSkListOfTagsInput {
  ConditionType: String!
  ConditionKey: String!
  ConditionValue: String!
}

input AwsBackupStartBackupJobInput {
  BackupVaultName: String!
  ResourceArn: String!
  IamRoleArn: String!
  IdempotencyToken: String
  StartWindowMinutes: JSON
  CompleteWindowMinutes: JSON
  Lifecycle: AwsBackupSaInput
  RecoveryPointTags: JSON
}

type AwsBackupStartBackupJobOutput {
  BackupJobId: String
  RecoveryPointArn: String
  CreationDate: Date
}

input AwsBackupStartRestoreJobInput {
  RecoveryPointArn: String!
  Metadata: JSON!
  IamRoleArn: String!
  IdempotencyToken: String
  ResourceType: String
}

type AwsBackupStartRestoreJobOutput {
  RestoreJobId: String
}

input AwsBackupStopBackupJobInput {
  BackupJobId: String!
}

input AwsBackupTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsBackupUntagResourceInput {
  ResourceArn: String!
  TagKeyList: [String]!
}

input AwsBackupUpdateBackupPlanInput {
  BackupPlanId: String!
  BackupPlan: AwsBackupS2Input!
}

type AwsBackupUpdateBackupPlanOutput {
  BackupPlanId: String
  BackupPlanArn: String
  CreationDate: Date
  VersionId: String
}

input AwsBackupUpdateRecoveryPointLifecycleInput {
  BackupVaultName: String!
  RecoveryPointArn: String!
  Lifecycle: AwsBackupSaInput
}

type AwsBackupUpdateRecoveryPointLifecycleOutput {
  BackupVaultArn: String
  RecoveryPointArn: String
  Lifecycle: AwsBackupSa
  CalculatedLifecycle: AwsBackupS1g
}

"""AWS Batch (2016-08-10)"""
type AwsBatch {
  cancelJob(input: AwsBatchCancelJobInput!, config: AwsConfig): JSON
  createComputeEnvironment(input: AwsBatchCreateComputeEnvironmentInput!, config: AwsConfig): AwsBatchCreateComputeEnvironmentOutput
  createJobQueue(input: AwsBatchCreateJobQueueInput!, config: AwsConfig): AwsBatchCreateJobQueueOutput
  deleteComputeEnvironment(input: AwsBatchDeleteComputeEnvironmentInput!, config: AwsConfig): JSON
  deleteJobQueue(input: AwsBatchDeleteJobQueueInput!, config: AwsConfig): JSON
  deregisterJobDefinition(input: AwsBatchDeregisterJobDefinitionInput!, config: AwsConfig): JSON
  describeComputeEnvironments(input: AwsBatchDescribeComputeEnvironmentsInput, config: AwsConfig): AwsBatchDescribeComputeEnvironmentsOutput
  describeJobDefinitions(input: AwsBatchDescribeJobDefinitionsInput, config: AwsConfig): AwsBatchDescribeJobDefinitionsOutput
  describeJobQueues(input: AwsBatchDescribeJobQueuesInput, config: AwsConfig): AwsBatchDescribeJobQueuesOutput
  describeJobs(input: AwsBatchDescribeJobsInput!, config: AwsConfig): AwsBatchDescribeJobsOutput
  listJobs(input: AwsBatchListJobsInput, config: AwsConfig): AwsBatchListJobsOutput
  registerJobDefinition(input: AwsBatchRegisterJobDefinitionInput!, config: AwsConfig): AwsBatchRegisterJobDefinitionOutput
  submitJob(input: AwsBatchSubmitJobInput!, config: AwsConfig): AwsBatchSubmitJobOutput
  terminateJob(input: AwsBatchTerminateJobInput!, config: AwsConfig): JSON
  updateComputeEnvironment(input: AwsBatchUpdateComputeEnvironmentInput!, config: AwsConfig): AwsBatchUpdateComputeEnvironmentOutput
  updateJobQueue(input: AwsBatchUpdateJobQueueInput!, config: AwsConfig): AwsBatchUpdateJobQueueOutput
}

input AwsBatchCancelJobInput {
  jobId: String!
  reason: String!
}

input AwsBatchCreateComputeEnvironmentInput {
  computeEnvironmentName: String!
  type: String!
  state: String
  computeResources: AwsBatchS7Input
  serviceRole: String!
}

type AwsBatchCreateComputeEnvironmentOutput {
  computeEnvironmentName: String
  computeEnvironmentArn: String
}

input AwsBatchCreateJobQueueInput {
  jobQueueName: String!
  state: String
  priority: Int!
  computeEnvironmentOrder: [AwsBatchSgInput]!
}

type AwsBatchCreateJobQueueOutput {
  jobQueueName: String!
  jobQueueArn: String!
}

input AwsBatchDeleteComputeEnvironmentInput {
  computeEnvironment: String!
}

input AwsBatchDeleteJobQueueInput {
  jobQueue: String!
}

input AwsBatchDeregisterJobDefinitionInput {
  jobDefinition: String!
}

input AwsBatchDescribeComputeEnvironmentsInput {
  computeEnvironments: [String]
  maxResults: Int
  nextToken: String
}

type AwsBatchDescribeComputeEnvironmentsOutput {
  computeEnvironments: [AwsBatchDescribeComputeEnvironmentsOutputComputeEnvironments]
  nextToken: String
}

type AwsBatchDescribeComputeEnvironmentsOutputComputeEnvironments {
  computeEnvironmentName: String!
  computeEnvironmentArn: String!
  ecsClusterArn: String!
  type: String
  state: String
  status: String
  statusReason: String
  computeResources: AwsBatchS7
  serviceRole: String
}

input AwsBatchDescribeJobDefinitionsInput {
  jobDefinitions: [String]
  maxResults: Int
  jobDefinitionName: String
  status: String
  nextToken: String
}

type AwsBatchDescribeJobDefinitionsOutput {
  jobDefinitions: [AwsBatchDescribeJobDefinitionsOutputJobDefinitions]
  nextToken: String
}

type AwsBatchDescribeJobDefinitionsOutputJobDefinitions {
  jobDefinitionName: String!
  jobDefinitionArn: String!
  revision: Int!
  status: String
  type: String!
  parameters: JSON
  retryStrategy: AwsBatchSz
  containerProperties: AwsBatchS10
  timeout: AwsBatchS1e
  nodeProperties: AwsBatchS1f
}

input AwsBatchDescribeJobQueuesInput {
  jobQueues: [String]
  maxResults: Int
  nextToken: String
}

type AwsBatchDescribeJobQueuesOutput {
  jobQueues: [AwsBatchDescribeJobQueuesOutputJobQueues]
  nextToken: String
}

type AwsBatchDescribeJobQueuesOutputJobQueues {
  jobQueueName: String!
  jobQueueArn: String!
  state: String!
  status: String
  statusReason: String
  priority: Int!
  computeEnvironmentOrder: [AwsBatchSg]!
}

input AwsBatchDescribeJobsInput {
  jobs: [String]!
}

type AwsBatchDescribeJobsOutput {
  jobs: [AwsBatchDescribeJobsOutputJobs]
}

type AwsBatchDescribeJobsOutputJobs {
  jobName: String!
  jobId: String!
  jobQueue: String!
  status: String!
  attempts: [AwsBatchDescribeJobsOutputJobsAttempts]
  statusReason: String
  createdAt: JSON
  retryStrategy: AwsBatchSz
  startedAt: JSON!
  stoppedAt: JSON
  dependsOn: [AwsBatchS1y]
  jobDefinition: String!
  parameters: JSON
  container: AwsBatchDescribeJobsOutputJobsContainer
  nodeDetails: AwsBatchDescribeJobsOutputJobsNodeDetails
  nodeProperties: AwsBatchS1f
  arrayProperties: AwsBatchDescribeJobsOutputJobsArrayProperties
  timeout: AwsBatchS1e
}

type AwsBatchDescribeJobsOutputJobsArrayProperties {
  statusSummary: JSON
  size: Int
  index: Int
}

type AwsBatchDescribeJobsOutputJobsAttempts {
  container: AwsBatchDescribeJobsOutputJobsAttemptsContainer
  startedAt: JSON
  stoppedAt: JSON
  statusReason: String
}

type AwsBatchDescribeJobsOutputJobsAttemptsContainer {
  containerInstanceArn: String
  taskArn: String
  exitCode: Int
  reason: String
  logStreamName: String
  networkInterfaces: [AwsBatchS1v]
}

type AwsBatchDescribeJobsOutputJobsContainer {
  image: String
  vcpus: Int
  memory: Int
  command: [String]
  jobRoleArn: String
  volumes: [AwsBatchS11]
  environment: [AwsBatchS14]
  mountPoints: [AwsBatchS16]
  readonlyRootFilesystem: Boolean
  ulimits: [AwsBatchS19]
  privileged: Boolean
  user: String
  exitCode: Int
  reason: String
  containerInstanceArn: String
  taskArn: String
  logStreamName: String
  instanceType: String
  networkInterfaces: [AwsBatchS1v]
  resourceRequirements: [AwsBatchS1b]
}

type AwsBatchDescribeJobsOutputJobsNodeDetails {
  nodeIndex: Int
  isMainNode: Boolean
}

input AwsBatchListJobsInput {
  jobQueue: String
  arrayJobId: String
  multiNodeJobId: String
  jobStatus: String
  maxResults: Int
  nextToken: String
}

type AwsBatchListJobsOutput {
  jobSummaryList: [AwsBatchListJobsOutputJobSummaryList]!
  nextToken: String
}

type AwsBatchListJobsOutputJobSummaryList {
  jobId: String!
  jobName: String!
  createdAt: JSON
  status: String
  statusReason: String
  startedAt: JSON
  stoppedAt: JSON
  container: AwsBatchListJobsOutputJobSummaryListContainer
  arrayProperties: AwsBatchListJobsOutputJobSummaryListArrayProperties
  nodeProperties: AwsBatchListJobsOutputJobSummaryListNodeProperties
}

type AwsBatchListJobsOutputJobSummaryListArrayProperties {
  size: Int
  index: Int
}

type AwsBatchListJobsOutputJobSummaryListContainer {
  exitCode: Int
  reason: String
}

type AwsBatchListJobsOutputJobSummaryListNodeProperties {
  isMainNode: Boolean
  numNodes: Int
  nodeIndex: Int
}

input AwsBatchRegisterJobDefinitionInput {
  jobDefinitionName: String!
  type: String!
  parameters: JSON
  containerProperties: AwsBatchS10Input
  nodeProperties: AwsBatchS1fInput
  retryStrategy: AwsBatchSzInput
  timeout: AwsBatchS1eInput
}

type AwsBatchRegisterJobDefinitionOutput {
  jobDefinitionName: String!
  jobDefinitionArn: String!
  revision: Int!
}

type AwsBatchS10 {
  image: String
  vcpus: Int
  memory: Int
  command: [String]
  jobRoleArn: String
  volumes: [AwsBatchS11]
  environment: [AwsBatchS14]
  mountPoints: [AwsBatchS16]
  readonlyRootFilesystem: Boolean
  privileged: Boolean
  ulimits: [AwsBatchS19]
  user: String
  instanceType: String
  resourceRequirements: [AwsBatchS1b]
}

input AwsBatchS10Input {
  image: String
  vcpus: Int
  memory: Int
  command: [String]
  jobRoleArn: String
  volumes: [AwsBatchS11Input]
  environment: [AwsBatchS14Input]
  mountPoints: [AwsBatchS16Input]
  readonlyRootFilesystem: Boolean
  privileged: Boolean
  ulimits: [AwsBatchS19Input]
  user: String
  instanceType: String
  resourceRequirements: [AwsBatchS1bInput]
}

type AwsBatchS11 {
  host: AwsBatchS11Host
  name: String
}

type AwsBatchS11Host {
  sourcePath: String
}

input AwsBatchS11HostInput {
  sourcePath: String
}

input AwsBatchS11Input {
  host: AwsBatchS11HostInput
  name: String
}

type AwsBatchS14 {
  name: String
  value: String
}

input AwsBatchS14Input {
  name: String
  value: String
}

type AwsBatchS16 {
  containerPath: String
  readOnly: Boolean
  sourceVolume: String
}

input AwsBatchS16Input {
  containerPath: String
  readOnly: Boolean
  sourceVolume: String
}

type AwsBatchS19 {
  hardLimit: Int!
  name: String!
  softLimit: Int!
}

input AwsBatchS19Input {
  hardLimit: Int!
  name: String!
  softLimit: Int!
}

type AwsBatchS1b {
  value: String!
  type: String!
}

input AwsBatchS1bInput {
  value: String!
  type: String!
}

type AwsBatchS1e {
  attemptDurationSeconds: Int
}

input AwsBatchS1eInput {
  attemptDurationSeconds: Int
}

type AwsBatchS1f {
  numNodes: Int!
  mainNode: Int!
  nodeRangeProperties: [AwsBatchS1fNodeRangeProperties]!
}

input AwsBatchS1fInput {
  numNodes: Int!
  mainNode: Int!
  nodeRangeProperties: [AwsBatchS1fNodeRangePropertiesInput]!
}

type AwsBatchS1fNodeRangeProperties {
  targetNodes: String!
  container: AwsBatchS10
}

input AwsBatchS1fNodeRangePropertiesInput {
  targetNodes: String!
  container: AwsBatchS10Input
}

type AwsBatchS1v {
  attachmentId: String
  ipv6Address: String
  privateIpv4Address: String
}

type AwsBatchS1y {
  jobId: String
  type: String
}

input AwsBatchS1yInput {
  jobId: String
  type: String
}

input AwsBatchS2hInput {
  vcpus: Int
  memory: Int
  command: [String]
  instanceType: String
  environment: [AwsBatchS14Input]
  resourceRequirements: [AwsBatchS1bInput]
}

type AwsBatchS7 {
  type: String!
  minvCpus: Int!
  maxvCpus: Int!
  desiredvCpus: Int
  instanceTypes: [String]!
  imageId: String
  subnets: [String]!
  securityGroupIds: [String]
  ec2KeyPair: String
  instanceRole: String!
  tags: JSON
  placementGroup: String
  bidPercentage: Int
  spotIamFleetRole: String
  launchTemplate: AwsBatchS7LaunchTemplate
}

input AwsBatchS7Input {
  type: String!
  minvCpus: Int!
  maxvCpus: Int!
  desiredvCpus: Int
  instanceTypes: [String]!
  imageId: String
  subnets: [String]!
  securityGroupIds: [String]
  ec2KeyPair: String
  instanceRole: String!
  tags: JSON
  placementGroup: String
  bidPercentage: Int
  spotIamFleetRole: String
  launchTemplate: AwsBatchS7LaunchTemplateInput
}

type AwsBatchS7LaunchTemplate {
  launchTemplateId: String
  launchTemplateName: String
  version: String
}

input AwsBatchS7LaunchTemplateInput {
  launchTemplateId: String
  launchTemplateName: String
  version: String
}

type AwsBatchSg {
  order: Int!
  computeEnvironment: String!
}

input AwsBatchSgInput {
  order: Int!
  computeEnvironment: String!
}

input AwsBatchSubmitJobArrayPropertiesInput {
  size: Int
}

input AwsBatchSubmitJobInput {
  jobName: String!
  jobQueue: String!
  arrayProperties: AwsBatchSubmitJobArrayPropertiesInput
  dependsOn: [AwsBatchS1yInput]
  jobDefinition: String!
  parameters: JSON
  containerOverrides: AwsBatchS2hInput
  nodeOverrides: AwsBatchSubmitJobNodeOverridesInput
  retryStrategy: AwsBatchSzInput
  timeout: AwsBatchS1eInput
}

input AwsBatchSubmitJobNodeOverridesInput {
  numNodes: Int
  nodePropertyOverrides: [AwsBatchSubmitJobNodeOverridesNodePropertyOverridesInput]
}

input AwsBatchSubmitJobNodeOverridesNodePropertyOverridesInput {
  targetNodes: String!
  containerOverrides: AwsBatchS2hInput
}

type AwsBatchSubmitJobOutput {
  jobName: String!
  jobId: String!
}

type AwsBatchSz {
  attempts: Int
}

input AwsBatchSzInput {
  attempts: Int
}

input AwsBatchTerminateJobInput {
  jobId: String!
  reason: String!
}

input AwsBatchUpdateComputeEnvironmentComputeResourcesInput {
  minvCpus: Int
  maxvCpus: Int
  desiredvCpus: Int
}

input AwsBatchUpdateComputeEnvironmentInput {
  computeEnvironment: String!
  state: String
  computeResources: AwsBatchUpdateComputeEnvironmentComputeResourcesInput
  serviceRole: String
}

type AwsBatchUpdateComputeEnvironmentOutput {
  computeEnvironmentName: String
  computeEnvironmentArn: String
}

input AwsBatchUpdateJobQueueInput {
  jobQueue: String!
  state: String
  priority: Int
  computeEnvironmentOrder: [AwsBatchSgInput]
}

type AwsBatchUpdateJobQueueOutput {
  jobQueueName: String
  jobQueueArn: String
}

"""AWS Budgets (2016-10-20)"""
type AwsBudgets {
  createBudget(input: AwsBudgetsCreateBudgetInput!, config: AwsConfig): JSON
  createNotification(input: AwsBudgetsCreateNotificationInput!, config: AwsConfig): JSON
  createSubscriber(input: AwsBudgetsCreateSubscriberInput!, config: AwsConfig): JSON
  deleteBudget(input: AwsBudgetsDeleteBudgetInput!, config: AwsConfig): JSON
  deleteNotification(input: AwsBudgetsDeleteNotificationInput!, config: AwsConfig): JSON
  deleteSubscriber(input: AwsBudgetsDeleteSubscriberInput!, config: AwsConfig): JSON
  describeBudget(input: AwsBudgetsDescribeBudgetInput!, config: AwsConfig): AwsBudgetsDescribeBudgetOutput
  describeBudgetPerformanceHistory(input: AwsBudgetsDescribeBudgetPerformanceHistoryInput!, config: AwsConfig): AwsBudgetsDescribeBudgetPerformanceHistoryOutput
  describeBudgets(input: AwsBudgetsDescribeBudgetsInput!, config: AwsConfig): AwsBudgetsDescribeBudgetsOutput
  describeNotificationsForBudget(input: AwsBudgetsDescribeNotificationsForBudgetInput!, config: AwsConfig): AwsBudgetsDescribeNotificationsForBudgetOutput
  describeSubscribersForNotification(input: AwsBudgetsDescribeSubscribersForNotificationInput!, config: AwsConfig): AwsBudgetsDescribeSubscribersForNotificationOutput
  updateBudget(input: AwsBudgetsUpdateBudgetInput!, config: AwsConfig): JSON
  updateNotification(input: AwsBudgetsUpdateNotificationInput!, config: AwsConfig): JSON
  updateSubscriber(input: AwsBudgetsUpdateSubscriberInput!, config: AwsConfig): JSON
}

input AwsBudgetsCreateBudgetInput {
  AccountId: String!
  Budget: AwsBudgetsS3Input!
  NotificationsWithSubscribers: [AwsBudgetsCreateBudgetNotificationsWithSubscribersInput]
}

input AwsBudgetsCreateBudgetNotificationsWithSubscribersInput {
  Notification: AwsBudgetsSlInput!
  Subscribers: [AwsBudgetsSsInput]!
}

input AwsBudgetsCreateNotificationInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSlInput!
  Subscribers: [AwsBudgetsSsInput]!
}

input AwsBudgetsCreateSubscriberInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSlInput!
  Subscriber: AwsBudgetsSsInput!
}

input AwsBudgetsDeleteBudgetInput {
  AccountId: String!
  BudgetName: String!
}

input AwsBudgetsDeleteNotificationInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSlInput!
}

input AwsBudgetsDeleteSubscriberInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSlInput!
  Subscriber: AwsBudgetsSsInput!
}

input AwsBudgetsDescribeBudgetInput {
  AccountId: String!
  BudgetName: String!
}

type AwsBudgetsDescribeBudgetOutput {
  Budget: AwsBudgetsS3
}

input AwsBudgetsDescribeBudgetPerformanceHistoryInput {
  AccountId: String!
  BudgetName: String!
  TimePeriod: AwsBudgetsSfInput
  MaxResults: Int
  NextToken: String
}

type AwsBudgetsDescribeBudgetPerformanceHistoryOutput {
  BudgetPerformanceHistory: AwsBudgetsDescribeBudgetPerformanceHistoryOutputBudgetPerformanceHistory
  NextToken: String
}

type AwsBudgetsDescribeBudgetPerformanceHistoryOutputBudgetPerformanceHistory {
  BudgetName: String
  BudgetType: String
  CostFilters: JSON
  CostTypes: AwsBudgetsSc
  TimeUnit: String
  BudgetedAndActualAmountsList: [AwsBudgetsDescribeBudgetPerformanceHistoryOutputBudgetPerformanceHistoryBudgetedAndActualAmountsList]
}

type AwsBudgetsDescribeBudgetPerformanceHistoryOutputBudgetPerformanceHistoryBudgetedAndActualAmountsList {
  BudgetedAmount: AwsBudgetsS5
  ActualAmount: AwsBudgetsS5
  TimePeriod: AwsBudgetsSf
}

input AwsBudgetsDescribeBudgetsInput {
  AccountId: String!
  MaxResults: Int
  NextToken: String
}

type AwsBudgetsDescribeBudgetsOutput {
  Budgets: [AwsBudgetsS3]
  NextToken: String
}

input AwsBudgetsDescribeNotificationsForBudgetInput {
  AccountId: String!
  BudgetName: String!
  MaxResults: Int
  NextToken: String
}

type AwsBudgetsDescribeNotificationsForBudgetOutput {
  Notifications: [AwsBudgetsSl]
  NextToken: String
}

input AwsBudgetsDescribeSubscribersForNotificationInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSlInput!
  MaxResults: Int
  NextToken: String
}

type AwsBudgetsDescribeSubscribersForNotificationOutput {
  Subscribers: [AwsBudgetsSs]
  NextToken: String
}

type AwsBudgetsS3 {
  BudgetName: String!
  BudgetLimit: AwsBudgetsS5
  PlannedBudgetLimits: JSON
  CostFilters: JSON
  CostTypes: AwsBudgetsSc
  TimeUnit: String!
  TimePeriod: AwsBudgetsSf
  CalculatedSpend: AwsBudgetsS3CalculatedSpend
  BudgetType: String!
  LastUpdatedTime: Date
}

type AwsBudgetsS3CalculatedSpend {
  ActualSpend: AwsBudgetsS5!
  ForecastedSpend: AwsBudgetsS5
}

input AwsBudgetsS3CalculatedSpendInput {
  ActualSpend: AwsBudgetsS5Input!
  ForecastedSpend: AwsBudgetsS5Input
}

input AwsBudgetsS3Input {
  BudgetName: String!
  BudgetLimit: AwsBudgetsS5Input
  PlannedBudgetLimits: JSON
  CostFilters: JSON
  CostTypes: AwsBudgetsScInput
  TimeUnit: String!
  TimePeriod: AwsBudgetsSfInput
  CalculatedSpend: AwsBudgetsS3CalculatedSpendInput
  BudgetType: String!
  LastUpdatedTime: Date
}

type AwsBudgetsS5 {
  Amount: String!
  Unit: String!
}

input AwsBudgetsS5Input {
  Amount: String!
  Unit: String!
}

type AwsBudgetsSc {
  IncludeTax: Boolean
  IncludeSubscription: Boolean
  UseBlended: Boolean
  IncludeRefund: Boolean
  IncludeCredit: Boolean
  IncludeUpfront: Boolean
  IncludeRecurring: Boolean
  IncludeOtherSubscription: Boolean
  IncludeSupport: Boolean
  IncludeDiscount: Boolean
  UseAmortized: Boolean
}

input AwsBudgetsScInput {
  IncludeTax: Boolean
  IncludeSubscription: Boolean
  UseBlended: Boolean
  IncludeRefund: Boolean
  IncludeCredit: Boolean
  IncludeUpfront: Boolean
  IncludeRecurring: Boolean
  IncludeOtherSubscription: Boolean
  IncludeSupport: Boolean
  IncludeDiscount: Boolean
  UseAmortized: Boolean
}

type AwsBudgetsSf {
  Start: Date
  End: Date
}

input AwsBudgetsSfInput {
  Start: Date
  End: Date
}

type AwsBudgetsSl {
  NotificationType: String!
  ComparisonOperator: String!
  Threshold: JSON!
  ThresholdType: String
  NotificationState: String
}

input AwsBudgetsSlInput {
  NotificationType: String!
  ComparisonOperator: String!
  Threshold: JSON!
  ThresholdType: String
  NotificationState: String
}

type AwsBudgetsSs {
  SubscriptionType: String!
  Address: String!
}

input AwsBudgetsSsInput {
  SubscriptionType: String!
  Address: String!
}

input AwsBudgetsUpdateBudgetInput {
  AccountId: String!
  NewBudget: AwsBudgetsS3Input!
}

input AwsBudgetsUpdateNotificationInput {
  AccountId: String!
  BudgetName: String!
  OldNotification: AwsBudgetsSlInput!
  NewNotification: AwsBudgetsSlInput!
}

input AwsBudgetsUpdateSubscriberInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSlInput!
  OldSubscriber: AwsBudgetsSsInput!
  NewSubscriber: AwsBudgetsSsInput!
}

"""Amazon Chime (2018-05-01)"""
type AwsChime {
  associatePhoneNumberWithUser(input: AwsChimeAssociatePhoneNumberWithUserInput!, config: AwsConfig): JSON
  associatePhoneNumbersWithVoiceConnector(input: AwsChimeAssociatePhoneNumbersWithVoiceConnectorInput!, config: AwsConfig): AwsChimeAssociatePhoneNumbersWithVoiceConnectorOutput
  batchDeletePhoneNumber(input: AwsChimeBatchDeletePhoneNumberInput!, config: AwsConfig): AwsChimeBatchDeletePhoneNumberOutput
  batchSuspendUser(input: AwsChimeBatchSuspendUserInput!, config: AwsConfig): AwsChimeBatchSuspendUserOutput
  batchUnsuspendUser(input: AwsChimeBatchUnsuspendUserInput!, config: AwsConfig): AwsChimeBatchUnsuspendUserOutput
  batchUpdatePhoneNumber(input: AwsChimeBatchUpdatePhoneNumberInput!, config: AwsConfig): AwsChimeBatchUpdatePhoneNumberOutput
  batchUpdateUser(input: AwsChimeBatchUpdateUserInput!, config: AwsConfig): AwsChimeBatchUpdateUserOutput
  createAccount(input: AwsChimeCreateAccountInput!, config: AwsConfig): AwsChimeCreateAccountOutput
  createBot(input: AwsChimeCreateBotInput!, config: AwsConfig): AwsChimeCreateBotOutput
  createPhoneNumberOrder(input: AwsChimeCreatePhoneNumberOrderInput!, config: AwsConfig): AwsChimeCreatePhoneNumberOrderOutput
  createVoiceConnector(input: AwsChimeCreateVoiceConnectorInput!, config: AwsConfig): AwsChimeCreateVoiceConnectorOutput
  deleteAccount(input: AwsChimeDeleteAccountInput!, config: AwsConfig): JSON
  deleteEventsConfiguration(input: AwsChimeDeleteEventsConfigurationInput!, config: AwsConfig): JSON
  deletePhoneNumber(input: AwsChimeDeletePhoneNumberInput!, config: AwsConfig): JSON
  deleteVoiceConnector(input: AwsChimeDeleteVoiceConnectorInput!, config: AwsConfig): JSON
  deleteVoiceConnectorOrigination(input: AwsChimeDeleteVoiceConnectorOriginationInput!, config: AwsConfig): JSON
  deleteVoiceConnectorTermination(input: AwsChimeDeleteVoiceConnectorTerminationInput!, config: AwsConfig): JSON
  deleteVoiceConnectorTerminationCredentials(input: AwsChimeDeleteVoiceConnectorTerminationCredentialsInput!, config: AwsConfig): JSON
  disassociatePhoneNumberFromUser(input: AwsChimeDisassociatePhoneNumberFromUserInput!, config: AwsConfig): JSON
  disassociatePhoneNumbersFromVoiceConnector(input: AwsChimeDisassociatePhoneNumbersFromVoiceConnectorInput!, config: AwsConfig): AwsChimeDisassociatePhoneNumbersFromVoiceConnectorOutput
  getAccount(input: AwsChimeGetAccountInput!, config: AwsConfig): AwsChimeGetAccountOutput
  getAccountSettings(input: AwsChimeGetAccountSettingsInput!, config: AwsConfig): AwsChimeGetAccountSettingsOutput
  getBot(input: AwsChimeGetBotInput!, config: AwsConfig): AwsChimeGetBotOutput
  getEventsConfiguration(input: AwsChimeGetEventsConfigurationInput!, config: AwsConfig): AwsChimeGetEventsConfigurationOutput
  getGlobalSettings(config: AwsConfig): AwsChimeGetGlobalSettingsOutput
  getPhoneNumber(input: AwsChimeGetPhoneNumberInput!, config: AwsConfig): AwsChimeGetPhoneNumberOutput
  getPhoneNumberOrder(input: AwsChimeGetPhoneNumberOrderInput!, config: AwsConfig): AwsChimeGetPhoneNumberOrderOutput
  getUser(input: AwsChimeGetUserInput!, config: AwsConfig): AwsChimeGetUserOutput
  getUserSettings(input: AwsChimeGetUserSettingsInput!, config: AwsConfig): AwsChimeGetUserSettingsOutput
  getVoiceConnector(input: AwsChimeGetVoiceConnectorInput!, config: AwsConfig): AwsChimeGetVoiceConnectorOutput
  getVoiceConnectorOrigination(input: AwsChimeGetVoiceConnectorOriginationInput!, config: AwsConfig): AwsChimeGetVoiceConnectorOriginationOutput
  getVoiceConnectorTermination(input: AwsChimeGetVoiceConnectorTerminationInput!, config: AwsConfig): AwsChimeGetVoiceConnectorTerminationOutput
  getVoiceConnectorTerminationHealth(input: AwsChimeGetVoiceConnectorTerminationHealthInput!, config: AwsConfig): AwsChimeGetVoiceConnectorTerminationHealthOutput
  inviteUsers(input: AwsChimeInviteUsersInput!, config: AwsConfig): AwsChimeInviteUsersOutput
  listAccounts(input: AwsChimeListAccountsInput, config: AwsConfig): AwsChimeListAccountsOutput
  listBots(input: AwsChimeListBotsInput!, config: AwsConfig): AwsChimeListBotsOutput
  listPhoneNumberOrders(input: AwsChimeListPhoneNumberOrdersInput, config: AwsConfig): AwsChimeListPhoneNumberOrdersOutput
  listPhoneNumbers(input: AwsChimeListPhoneNumbersInput, config: AwsConfig): AwsChimeListPhoneNumbersOutput
  listUsers(input: AwsChimeListUsersInput!, config: AwsConfig): AwsChimeListUsersOutput
  listVoiceConnectorTerminationCredentials(input: AwsChimeListVoiceConnectorTerminationCredentialsInput!, config: AwsConfig): AwsChimeListVoiceConnectorTerminationCredentialsOutput
  listVoiceConnectors(input: AwsChimeListVoiceConnectorsInput, config: AwsConfig): AwsChimeListVoiceConnectorsOutput
  logoutUser(input: AwsChimeLogoutUserInput!, config: AwsConfig): JSON
  putEventsConfiguration(input: AwsChimePutEventsConfigurationInput!, config: AwsConfig): AwsChimePutEventsConfigurationOutput
  putVoiceConnectorOrigination(input: AwsChimePutVoiceConnectorOriginationInput!, config: AwsConfig): AwsChimePutVoiceConnectorOriginationOutput
  putVoiceConnectorTermination(input: AwsChimePutVoiceConnectorTerminationInput!, config: AwsConfig): AwsChimePutVoiceConnectorTerminationOutput
  putVoiceConnectorTerminationCredentials(input: AwsChimePutVoiceConnectorTerminationCredentialsInput!, config: AwsConfig): JSON
  regenerateSecurityToken(input: AwsChimeRegenerateSecurityTokenInput!, config: AwsConfig): AwsChimeRegenerateSecurityTokenOutput
  resetPersonalPIN(input: AwsChimeResetPersonalPINInput!, config: AwsConfig): AwsChimeResetPersonalPINOutput
  restorePhoneNumber(input: AwsChimeRestorePhoneNumberInput!, config: AwsConfig): AwsChimeRestorePhoneNumberOutput
  searchAvailablePhoneNumbers(input: AwsChimeSearchAvailablePhoneNumbersInput, config: AwsConfig): AwsChimeSearchAvailablePhoneNumbersOutput
  updateAccount(input: AwsChimeUpdateAccountInput!, config: AwsConfig): AwsChimeUpdateAccountOutput
  updateAccountSettings(input: AwsChimeUpdateAccountSettingsInput!, config: AwsConfig): JSON
  updateBot(input: AwsChimeUpdateBotInput!, config: AwsConfig): AwsChimeUpdateBotOutput
  updateGlobalSettings(input: AwsChimeUpdateGlobalSettingsInput!, config: AwsConfig): JSON
  updatePhoneNumber(input: AwsChimeUpdatePhoneNumberInput!, config: AwsConfig): AwsChimeUpdatePhoneNumberOutput
  updateUser(input: AwsChimeUpdateUserInput!, config: AwsConfig): AwsChimeUpdateUserOutput
  updateUserSettings(input: AwsChimeUpdateUserSettingsInput!, config: AwsConfig): JSON
  updateVoiceConnector(input: AwsChimeUpdateVoiceConnectorInput!, config: AwsConfig): AwsChimeUpdateVoiceConnectorOutput
}

input AwsChimeAssociatePhoneNumbersWithVoiceConnectorInput {
  VoiceConnectorId: String!
  E164PhoneNumbers: [String]
}

type AwsChimeAssociatePhoneNumbersWithVoiceConnectorOutput {
  PhoneNumberErrors: [AwsChimeS9]
}

input AwsChimeAssociatePhoneNumberWithUserInput {
  AccountId: String!
  UserId: String!
  E164PhoneNumber: String!
}

input AwsChimeBatchDeletePhoneNumberInput {
  PhoneNumberIds: [String]!
}

type AwsChimeBatchDeletePhoneNumberOutput {
  PhoneNumberErrors: [AwsChimeS9]
}

input AwsChimeBatchSuspendUserInput {
  AccountId: String!
  UserIdList: [String]!
}

type AwsChimeBatchSuspendUserOutput {
  UserErrors: [AwsChimeSi]
}

input AwsChimeBatchUnsuspendUserInput {
  AccountId: String!
  UserIdList: [String]!
}

type AwsChimeBatchUnsuspendUserOutput {
  UserErrors: [AwsChimeSi]
}

input AwsChimeBatchUpdatePhoneNumberInput {
  UpdatePhoneNumberRequestItems: [AwsChimeBatchUpdatePhoneNumberUpdatePhoneNumberRequestItemsInput]!
}

type AwsChimeBatchUpdatePhoneNumberOutput {
  PhoneNumberErrors: [AwsChimeS9]
}

input AwsChimeBatchUpdatePhoneNumberUpdatePhoneNumberRequestItemsInput {
  PhoneNumberId: String!
  ProductType: String
}

input AwsChimeBatchUpdateUserInput {
  AccountId: String!
  UpdateUserRequestItems: [AwsChimeBatchUpdateUserUpdateUserRequestItemsInput]!
}

type AwsChimeBatchUpdateUserOutput {
  UserErrors: [AwsChimeSi]
}

input AwsChimeBatchUpdateUserUpdateUserRequestItemsInput {
  UserId: String!
  LicenseType: String
}

input AwsChimeCreateAccountInput {
  Name: String!
}

type AwsChimeCreateAccountOutput {
  Account: AwsChimeSz
}

input AwsChimeCreateBotInput {
  AccountId: String!
  DisplayName: String!
  Domain: String
}

type AwsChimeCreateBotOutput {
  Bot: AwsChimeS16
}

input AwsChimeCreatePhoneNumberOrderInput {
  ProductType: String!
  E164PhoneNumbers: [String]!
}

type AwsChimeCreatePhoneNumberOrderOutput {
  PhoneNumberOrder: AwsChimeS1b
}

input AwsChimeCreateVoiceConnectorInput {
  Name: String!
  RequireEncryption: Boolean!
}

type AwsChimeCreateVoiceConnectorOutput {
  VoiceConnector: AwsChimeS1l
}

input AwsChimeDeleteAccountInput {
  AccountId: String!
}

input AwsChimeDeleteEventsConfigurationInput {
  AccountId: String!
  BotId: String!
}

input AwsChimeDeletePhoneNumberInput {
  PhoneNumberId: String!
}

input AwsChimeDeleteVoiceConnectorInput {
  VoiceConnectorId: String!
}

input AwsChimeDeleteVoiceConnectorOriginationInput {
  VoiceConnectorId: String!
}

input AwsChimeDeleteVoiceConnectorTerminationCredentialsInput {
  VoiceConnectorId: String!
  Usernames: [String]
}

input AwsChimeDeleteVoiceConnectorTerminationInput {
  VoiceConnectorId: String!
}

input AwsChimeDisassociatePhoneNumberFromUserInput {
  AccountId: String!
  UserId: String!
}

input AwsChimeDisassociatePhoneNumbersFromVoiceConnectorInput {
  VoiceConnectorId: String!
  E164PhoneNumbers: [String]
}

type AwsChimeDisassociatePhoneNumbersFromVoiceConnectorOutput {
  PhoneNumberErrors: [AwsChimeS9]
}

input AwsChimeGetAccountInput {
  AccountId: String!
}

type AwsChimeGetAccountOutput {
  Account: AwsChimeSz
}

input AwsChimeGetAccountSettingsInput {
  AccountId: String!
}

type AwsChimeGetAccountSettingsOutput {
  AccountSettings: AwsChimeS23
}

input AwsChimeGetBotInput {
  AccountId: String!
  BotId: String!
}

type AwsChimeGetBotOutput {
  Bot: AwsChimeS16
}

input AwsChimeGetEventsConfigurationInput {
  AccountId: String!
  BotId: String!
}

type AwsChimeGetEventsConfigurationOutput {
  EventsConfiguration: AwsChimeS28
}

type AwsChimeGetGlobalSettingsOutput {
  BusinessCalling: AwsChimeS2a
  VoiceConnector: AwsChimeS2b
}

input AwsChimeGetPhoneNumberInput {
  PhoneNumberId: String!
}

input AwsChimeGetPhoneNumberOrderInput {
  PhoneNumberOrderId: String!
}

type AwsChimeGetPhoneNumberOrderOutput {
  PhoneNumberOrder: AwsChimeS1b
}

type AwsChimeGetPhoneNumberOutput {
  PhoneNumber: AwsChimeS2e
}

input AwsChimeGetUserInput {
  AccountId: String!
  UserId: String!
}

type AwsChimeGetUserOutput {
  User: AwsChimeS2p
}

input AwsChimeGetUserSettingsInput {
  AccountId: String!
  UserId: String!
}

type AwsChimeGetUserSettingsOutput {
  UserSettings: AwsChimeS2v
}

input AwsChimeGetVoiceConnectorInput {
  VoiceConnectorId: String!
}

input AwsChimeGetVoiceConnectorOriginationInput {
  VoiceConnectorId: String!
}

type AwsChimeGetVoiceConnectorOriginationOutput {
  Origination: AwsChimeS31
}

type AwsChimeGetVoiceConnectorOutput {
  VoiceConnector: AwsChimeS1l
}

input AwsChimeGetVoiceConnectorTerminationHealthInput {
  VoiceConnectorId: String!
}

type AwsChimeGetVoiceConnectorTerminationHealthOutput {
  TerminationHealth: AwsChimeGetVoiceConnectorTerminationHealthOutputTerminationHealth
}

type AwsChimeGetVoiceConnectorTerminationHealthOutputTerminationHealth {
  Timestamp: Date
  Source: String
}

input AwsChimeGetVoiceConnectorTerminationInput {
  VoiceConnectorId: String!
}

type AwsChimeGetVoiceConnectorTerminationOutput {
  Termination: AwsChimeS3a
}

input AwsChimeInviteUsersInput {
  AccountId: String!
  UserEmailList: [String]!
}

type AwsChimeInviteUsersOutput {
  Invites: [AwsChimeInviteUsersOutputInvites]
}

type AwsChimeInviteUsersOutputInvites {
  InviteId: String
  Status: String
  EmailAddress: String
  EmailStatus: String
}

input AwsChimeListAccountsInput {
  Name: String
  UserEmail: String
  NextToken: String
  MaxResults: Int
}

type AwsChimeListAccountsOutput {
  Accounts: [AwsChimeSz]
  NextToken: String
}

input AwsChimeListBotsInput {
  AccountId: String!
  MaxResults: Int
  NextToken: String
}

type AwsChimeListBotsOutput {
  Bots: [AwsChimeS16]
  NextToken: String
}

input AwsChimeListPhoneNumberOrdersInput {
  NextToken: String
  MaxResults: Int
}

type AwsChimeListPhoneNumberOrdersOutput {
  PhoneNumberOrders: [AwsChimeS1b]
  NextToken: String
}

input AwsChimeListPhoneNumbersInput {
  Status: String
  ProductType: String
  FilterName: String
  FilterValue: String
  MaxResults: Int
  NextToken: String
}

type AwsChimeListPhoneNumbersOutput {
  PhoneNumbers: [AwsChimeS2e]
  NextToken: String
}

input AwsChimeListUsersInput {
  AccountId: String!
  UserEmail: String
  MaxResults: Int
  NextToken: String
}

type AwsChimeListUsersOutput {
  Users: [AwsChimeS2p]
  NextToken: String
}

input AwsChimeListVoiceConnectorsInput {
  NextToken: String
  MaxResults: Int
}

type AwsChimeListVoiceConnectorsOutput {
  VoiceConnectors: [AwsChimeS1l]
  NextToken: String
}

input AwsChimeListVoiceConnectorTerminationCredentialsInput {
  VoiceConnectorId: String!
}

type AwsChimeListVoiceConnectorTerminationCredentialsOutput {
  Usernames: [String]
}

input AwsChimeLogoutUserInput {
  AccountId: String!
  UserId: String!
}

input AwsChimePutEventsConfigurationInput {
  AccountId: String!
  BotId: String!
  OutboundEventsHTTPSEndpoint: String
  LambdaFunctionArn: String
}

type AwsChimePutEventsConfigurationOutput {
  EventsConfiguration: AwsChimeS28
}

input AwsChimePutVoiceConnectorOriginationInput {
  VoiceConnectorId: String!
  Origination: AwsChimeS31Input!
}

type AwsChimePutVoiceConnectorOriginationOutput {
  Origination: AwsChimeS31
}

input AwsChimePutVoiceConnectorTerminationCredentialsCredentialsInput {
  Username: String
  Password: String
}

input AwsChimePutVoiceConnectorTerminationCredentialsInput {
  VoiceConnectorId: String!
  Credentials: [AwsChimePutVoiceConnectorTerminationCredentialsCredentialsInput]
}

input AwsChimePutVoiceConnectorTerminationInput {
  VoiceConnectorId: String!
  Termination: AwsChimeS3aInput!
}

type AwsChimePutVoiceConnectorTerminationOutput {
  Termination: AwsChimeS3a
}

input AwsChimeRegenerateSecurityTokenInput {
  AccountId: String!
  BotId: String!
}

type AwsChimeRegenerateSecurityTokenOutput {
  Bot: AwsChimeS16
}

input AwsChimeResetPersonalPINInput {
  AccountId: String!
  UserId: String!
}

type AwsChimeResetPersonalPINOutput {
  User: AwsChimeS2p
}

input AwsChimeRestorePhoneNumberInput {
  PhoneNumberId: String!
}

type AwsChimeRestorePhoneNumberOutput {
  PhoneNumber: AwsChimeS2e
}

type AwsChimeS16 {
  BotId: String
  UserId: String
  DisplayName: String
  BotType: String
  Disabled: Boolean
  CreatedTimestamp: Date
  UpdatedTimestamp: Date
  BotEmail: String
  SecurityToken: String
}

type AwsChimeS1b {
  PhoneNumberOrderId: String
  ProductType: String
  Status: String
  OrderedPhoneNumbers: [AwsChimeS1bOrderedPhoneNumbers]
  CreatedTimestamp: Date
  UpdatedTimestamp: Date
}

type AwsChimeS1bOrderedPhoneNumbers {
  E164PhoneNumber: String
  Status: String
}

type AwsChimeS1l {
  VoiceConnectorId: String
  Name: String
  OutboundHostName: String
  RequireEncryption: Boolean
  CreatedTimestamp: Date
  UpdatedTimestamp: Date
}

type AwsChimeS23 {
  DisableRemoteControl: Boolean
  EnableDialOut: Boolean
}

input AwsChimeS23Input {
  DisableRemoteControl: Boolean
  EnableDialOut: Boolean
}

type AwsChimeS28 {
  BotId: String
  OutboundEventsHTTPSEndpoint: String
  LambdaFunctionArn: String
}

type AwsChimeS2a {
  CdrBucket: String
}

input AwsChimeS2aInput {
  CdrBucket: String
}

type AwsChimeS2b {
  CdrBucket: String
}

input AwsChimeS2bInput {
  CdrBucket: String
}

type AwsChimeS2e {
  PhoneNumberId: String
  E164PhoneNumber: String
  Type: String
  ProductType: String
  Status: String
  Capabilities: AwsChimeS2eCapabilities
  Associations: [AwsChimeS2eAssociations]
  CreatedTimestamp: Date
  UpdatedTimestamp: Date
  DeletionTimestamp: Date
}

type AwsChimeS2eAssociations {
  Value: String
  Name: String
  AssociatedTimestamp: Date
}

type AwsChimeS2eCapabilities {
  InboundCall: Boolean
  OutboundCall: Boolean
  InboundSMS: Boolean
  OutboundSMS: Boolean
  InboundMMS: Boolean
  OutboundMMS: Boolean
}

type AwsChimeS2p {
  UserId: String!
  AccountId: String
  PrimaryEmail: String
  PrimaryProvisionedNumber: String
  DisplayName: String
  LicenseType: String
  UserRegistrationStatus: String
  UserInvitationStatus: String
  RegisteredOn: Date
  InvitedOn: Date
  PersonalPIN: String
}

type AwsChimeS2v {
  Telephony: AwsChimeS2vTelephony!
}

input AwsChimeS2vInput {
  Telephony: AwsChimeS2vTelephonyInput!
}

type AwsChimeS2vTelephony {
  InboundCalling: Boolean!
  OutboundCalling: Boolean!
  SMS: Boolean!
}

input AwsChimeS2vTelephonyInput {
  InboundCalling: Boolean!
  OutboundCalling: Boolean!
  SMS: Boolean!
}

type AwsChimeS31 {
  Routes: [AwsChimeS31Routes]
  Disabled: Boolean
}

input AwsChimeS31Input {
  Routes: [AwsChimeS31RoutesInput]
  Disabled: Boolean
}

type AwsChimeS31Routes {
  Host: String
  Port: Int
  Protocol: String
  Priority: Int
  Weight: Int
}

input AwsChimeS31RoutesInput {
  Host: String
  Port: Int
  Protocol: String
  Priority: Int
  Weight: Int
}

type AwsChimeS3a {
  CpsLimit: Int
  DefaultPhoneNumber: String
  CallingRegions: [String]
  CidrAllowedList: [String]
  Disabled: Boolean
}

input AwsChimeS3aInput {
  CpsLimit: Int
  DefaultPhoneNumber: String
  CallingRegions: [String]
  CidrAllowedList: [String]
  Disabled: Boolean
}

type AwsChimeS9 {
  PhoneNumberId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsChimeSearchAvailablePhoneNumbersInput {
  AreaCode: String
  City: String
  Country: String
  State: String
  TollFreePrefix: String
  MaxResults: Int
  NextToken: String
}

type AwsChimeSearchAvailablePhoneNumbersOutput {
  E164PhoneNumbers: [String]
}

type AwsChimeSi {
  UserId: String
  ErrorCode: String
  ErrorMessage: String
}

type AwsChimeSz {
  AwsAccountId: String!
  AccountId: String!
  Name: String!
  AccountType: String
  CreatedTimestamp: Date
  DefaultLicense: String
  SupportedLicenses: [String]
}

input AwsChimeUpdateAccountInput {
  AccountId: String!
  Name: String
}

type AwsChimeUpdateAccountOutput {
  Account: AwsChimeSz
}

input AwsChimeUpdateAccountSettingsInput {
  AccountId: String!
  AccountSettings: AwsChimeS23Input!
}

input AwsChimeUpdateBotInput {
  AccountId: String!
  BotId: String!
  Disabled: Boolean
}

type AwsChimeUpdateBotOutput {
  Bot: AwsChimeS16
}

input AwsChimeUpdateGlobalSettingsInput {
  BusinessCalling: AwsChimeS2aInput!
  VoiceConnector: AwsChimeS2bInput!
}

input AwsChimeUpdatePhoneNumberInput {
  PhoneNumberId: String!
  ProductType: String
}

type AwsChimeUpdatePhoneNumberOutput {
  PhoneNumber: AwsChimeS2e
}

input AwsChimeUpdateUserInput {
  AccountId: String!
  UserId: String!
  LicenseType: String
}

type AwsChimeUpdateUserOutput {
  User: AwsChimeS2p
}

input AwsChimeUpdateUserSettingsInput {
  AccountId: String!
  UserId: String!
  UserSettings: AwsChimeS2vInput!
}

input AwsChimeUpdateVoiceConnectorInput {
  VoiceConnectorId: String!
  Name: String!
  RequireEncryption: Boolean!
}

type AwsChimeUpdateVoiceConnectorOutput {
  VoiceConnector: AwsChimeS1l
}

"""AWS Cloud9 (2017-09-23)"""
type AwsCloud9 {
  createEnvironmentEC2(input: AwsCloud9CreateEnvironmentEC2Input!, config: AwsConfig): AwsCloud9CreateEnvironmentEC2Output
  createEnvironmentMembership(input: AwsCloud9CreateEnvironmentMembershipInput!, config: AwsConfig): AwsCloud9CreateEnvironmentMembershipOutput
  deleteEnvironment(input: AwsCloud9DeleteEnvironmentInput!, config: AwsConfig): JSON
  deleteEnvironmentMembership(input: AwsCloud9DeleteEnvironmentMembershipInput!, config: AwsConfig): JSON
  describeEnvironmentMemberships(input: AwsCloud9DescribeEnvironmentMembershipsInput, config: AwsConfig): AwsCloud9DescribeEnvironmentMembershipsOutput
  describeEnvironmentStatus(input: AwsCloud9DescribeEnvironmentStatusInput!, config: AwsConfig): AwsCloud9DescribeEnvironmentStatusOutput
  describeEnvironments(input: AwsCloud9DescribeEnvironmentsInput!, config: AwsConfig): AwsCloud9DescribeEnvironmentsOutput
  listEnvironments(input: AwsCloud9ListEnvironmentsInput, config: AwsConfig): AwsCloud9ListEnvironmentsOutput
  updateEnvironment(input: AwsCloud9UpdateEnvironmentInput!, config: AwsConfig): JSON
  updateEnvironmentMembership(input: AwsCloud9UpdateEnvironmentMembershipInput!, config: AwsConfig): AwsCloud9UpdateEnvironmentMembershipOutput
}

input AwsCloud9CreateEnvironmentEC2Input {
  name: String!
  description: String
  clientRequestToken: String
  instanceType: String!
  subnetId: String
  automaticStopTimeMinutes: Int
  ownerArn: String
}

type AwsCloud9CreateEnvironmentEC2Output {
  environmentId: String
}

input AwsCloud9CreateEnvironmentMembershipInput {
  environmentId: String!
  userArn: String!
  permissions: String!
}

type AwsCloud9CreateEnvironmentMembershipOutput {
  membership: AwsCloud9Se
}

input AwsCloud9DeleteEnvironmentInput {
  environmentId: String!
}

input AwsCloud9DeleteEnvironmentMembershipInput {
  environmentId: String!
  userArn: String!
}

input AwsCloud9DescribeEnvironmentMembershipsInput {
  userArn: String
  environmentId: String
  permissions: [String]
  nextToken: String
  maxResults: Int
}

type AwsCloud9DescribeEnvironmentMembershipsOutput {
  memberships: [AwsCloud9Se]
  nextToken: String
}

input AwsCloud9DescribeEnvironmentsInput {
  environmentIds: [String]!
}

type AwsCloud9DescribeEnvironmentsOutput {
  environments: [AwsCloud9DescribeEnvironmentsOutputEnvironments]
}

type AwsCloud9DescribeEnvironmentsOutputEnvironments {
  id: String
  name: String
  description: String
  type: String
  arn: String
  ownerArn: String
  lifecycle: AwsCloud9DescribeEnvironmentsOutputEnvironmentsLifecycle
}

type AwsCloud9DescribeEnvironmentsOutputEnvironmentsLifecycle {
  status: String
  reason: String
  failureResource: String
}

input AwsCloud9DescribeEnvironmentStatusInput {
  environmentId: String!
}

type AwsCloud9DescribeEnvironmentStatusOutput {
  status: String
  message: String
}

input AwsCloud9ListEnvironmentsInput {
  nextToken: String
  maxResults: Int
}

type AwsCloud9ListEnvironmentsOutput {
  nextToken: String
  environmentIds: [String]
}

type AwsCloud9Se {
  permissions: String
  userId: String
  userArn: String
  environmentId: String
  lastAccess: Date
}

input AwsCloud9UpdateEnvironmentInput {
  environmentId: String!
  name: String
  description: String
}

input AwsCloud9UpdateEnvironmentMembershipInput {
  environmentId: String!
  userArn: String!
  permissions: String!
}

type AwsCloud9UpdateEnvironmentMembershipOutput {
  membership: AwsCloud9Se
}

"""Amazon CloudDirectory (2017-01-11)"""
type AwsCloudDirectory {
  addFacetToObject(input: AwsCloudDirectoryAddFacetToObjectInput!, config: AwsConfig): JSON
  applySchema(input: AwsCloudDirectoryApplySchemaInput!, config: AwsConfig): AwsCloudDirectoryApplySchemaOutput
  attachObject(input: AwsCloudDirectoryAttachObjectInput!, config: AwsConfig): AwsCloudDirectoryAttachObjectOutput
  attachPolicy(input: AwsCloudDirectoryAttachPolicyInput!, config: AwsConfig): JSON
  attachToIndex(input: AwsCloudDirectoryAttachToIndexInput!, config: AwsConfig): AwsCloudDirectoryAttachToIndexOutput
  attachTypedLink(input: AwsCloudDirectoryAttachTypedLinkInput!, config: AwsConfig): AwsCloudDirectoryAttachTypedLinkOutput
  batchRead(input: AwsCloudDirectoryBatchReadInput!, config: AwsConfig): AwsCloudDirectoryBatchReadOutput
  batchWrite(input: AwsCloudDirectoryBatchWriteInput!, config: AwsConfig): AwsCloudDirectoryBatchWriteOutput
  createDirectory(input: AwsCloudDirectoryCreateDirectoryInput!, config: AwsConfig): AwsCloudDirectoryCreateDirectoryOutput
  createFacet(input: AwsCloudDirectoryCreateFacetInput!, config: AwsConfig): JSON
  createIndex(input: AwsCloudDirectoryCreateIndexInput!, config: AwsConfig): AwsCloudDirectoryCreateIndexOutput
  createObject(input: AwsCloudDirectoryCreateObjectInput!, config: AwsConfig): AwsCloudDirectoryCreateObjectOutput
  createSchema(input: AwsCloudDirectoryCreateSchemaInput!, config: AwsConfig): AwsCloudDirectoryCreateSchemaOutput
  createTypedLinkFacet(input: AwsCloudDirectoryCreateTypedLinkFacetInput!, config: AwsConfig): JSON
  deleteDirectory(input: AwsCloudDirectoryDeleteDirectoryInput!, config: AwsConfig): AwsCloudDirectoryDeleteDirectoryOutput
  deleteFacet(input: AwsCloudDirectoryDeleteFacetInput!, config: AwsConfig): JSON
  deleteObject(input: AwsCloudDirectoryDeleteObjectInput!, config: AwsConfig): JSON
  deleteSchema(input: AwsCloudDirectoryDeleteSchemaInput!, config: AwsConfig): AwsCloudDirectoryDeleteSchemaOutput
  deleteTypedLinkFacet(input: AwsCloudDirectoryDeleteTypedLinkFacetInput!, config: AwsConfig): JSON
  detachFromIndex(input: AwsCloudDirectoryDetachFromIndexInput!, config: AwsConfig): AwsCloudDirectoryDetachFromIndexOutput
  detachObject(input: AwsCloudDirectoryDetachObjectInput!, config: AwsConfig): AwsCloudDirectoryDetachObjectOutput
  detachPolicy(input: AwsCloudDirectoryDetachPolicyInput!, config: AwsConfig): JSON
  detachTypedLink(input: AwsCloudDirectoryDetachTypedLinkInput!, config: AwsConfig): JSON
  disableDirectory(input: AwsCloudDirectoryDisableDirectoryInput!, config: AwsConfig): AwsCloudDirectoryDisableDirectoryOutput
  enableDirectory(input: AwsCloudDirectoryEnableDirectoryInput!, config: AwsConfig): AwsCloudDirectoryEnableDirectoryOutput
  getAppliedSchemaVersion(input: AwsCloudDirectoryGetAppliedSchemaVersionInput!, config: AwsConfig): AwsCloudDirectoryGetAppliedSchemaVersionOutput
  getDirectory(input: AwsCloudDirectoryGetDirectoryInput!, config: AwsConfig): AwsCloudDirectoryGetDirectoryOutput
  getFacet(input: AwsCloudDirectoryGetFacetInput!, config: AwsConfig): AwsCloudDirectoryGetFacetOutput
  getLinkAttributes(input: AwsCloudDirectoryGetLinkAttributesInput!, config: AwsConfig): AwsCloudDirectoryGetLinkAttributesOutput
  getObjectAttributes(input: AwsCloudDirectoryGetObjectAttributesInput!, config: AwsConfig): AwsCloudDirectoryGetObjectAttributesOutput
  getObjectInformation(input: AwsCloudDirectoryGetObjectInformationInput!, config: AwsConfig): AwsCloudDirectoryGetObjectInformationOutput
  getSchemaAsJson(input: AwsCloudDirectoryGetSchemaAsJsonInput!, config: AwsConfig): AwsCloudDirectoryGetSchemaAsJsonOutput
  getTypedLinkFacetInformation(input: AwsCloudDirectoryGetTypedLinkFacetInformationInput!, config: AwsConfig): AwsCloudDirectoryGetTypedLinkFacetInformationOutput
  listAppliedSchemaArns(input: AwsCloudDirectoryListAppliedSchemaArnsInput!, config: AwsConfig): AwsCloudDirectoryListAppliedSchemaArnsOutput
  listAttachedIndices(input: AwsCloudDirectoryListAttachedIndicesInput!, config: AwsConfig): AwsCloudDirectoryListAttachedIndicesOutput
  listDevelopmentSchemaArns(input: AwsCloudDirectoryListDevelopmentSchemaArnsInput, config: AwsConfig): AwsCloudDirectoryListDevelopmentSchemaArnsOutput
  listDirectories(input: AwsCloudDirectoryListDirectoriesInput, config: AwsConfig): AwsCloudDirectoryListDirectoriesOutput
  listFacetAttributes(input: AwsCloudDirectoryListFacetAttributesInput!, config: AwsConfig): AwsCloudDirectoryListFacetAttributesOutput
  listFacetNames(input: AwsCloudDirectoryListFacetNamesInput!, config: AwsConfig): AwsCloudDirectoryListFacetNamesOutput
  listIncomingTypedLinks(input: AwsCloudDirectoryListIncomingTypedLinksInput!, config: AwsConfig): AwsCloudDirectoryListIncomingTypedLinksOutput
  listIndex(input: AwsCloudDirectoryListIndexInput!, config: AwsConfig): AwsCloudDirectoryListIndexOutput
  listManagedSchemaArns(input: AwsCloudDirectoryListManagedSchemaArnsInput, config: AwsConfig): AwsCloudDirectoryListManagedSchemaArnsOutput
  listObjectAttributes(input: AwsCloudDirectoryListObjectAttributesInput!, config: AwsConfig): AwsCloudDirectoryListObjectAttributesOutput
  listObjectChildren(input: AwsCloudDirectoryListObjectChildrenInput!, config: AwsConfig): AwsCloudDirectoryListObjectChildrenOutput
  listObjectParentPaths(input: AwsCloudDirectoryListObjectParentPathsInput!, config: AwsConfig): AwsCloudDirectoryListObjectParentPathsOutput
  listObjectParents(input: AwsCloudDirectoryListObjectParentsInput!, config: AwsConfig): AwsCloudDirectoryListObjectParentsOutput
  listObjectPolicies(input: AwsCloudDirectoryListObjectPoliciesInput!, config: AwsConfig): AwsCloudDirectoryListObjectPoliciesOutput
  listOutgoingTypedLinks(input: AwsCloudDirectoryListOutgoingTypedLinksInput!, config: AwsConfig): AwsCloudDirectoryListOutgoingTypedLinksOutput
  listPolicyAttachments(input: AwsCloudDirectoryListPolicyAttachmentsInput!, config: AwsConfig): AwsCloudDirectoryListPolicyAttachmentsOutput
  listPublishedSchemaArns(input: AwsCloudDirectoryListPublishedSchemaArnsInput, config: AwsConfig): AwsCloudDirectoryListPublishedSchemaArnsOutput
  listTagsForResource(input: AwsCloudDirectoryListTagsForResourceInput!, config: AwsConfig): AwsCloudDirectoryListTagsForResourceOutput
  listTypedLinkFacetAttributes(input: AwsCloudDirectoryListTypedLinkFacetAttributesInput!, config: AwsConfig): AwsCloudDirectoryListTypedLinkFacetAttributesOutput
  listTypedLinkFacetNames(input: AwsCloudDirectoryListTypedLinkFacetNamesInput!, config: AwsConfig): AwsCloudDirectoryListTypedLinkFacetNamesOutput
  lookupPolicy(input: AwsCloudDirectoryLookupPolicyInput!, config: AwsConfig): AwsCloudDirectoryLookupPolicyOutput
  publishSchema(input: AwsCloudDirectoryPublishSchemaInput!, config: AwsConfig): AwsCloudDirectoryPublishSchemaOutput
  putSchemaFromJson(input: AwsCloudDirectoryPutSchemaFromJsonInput!, config: AwsConfig): AwsCloudDirectoryPutSchemaFromJsonOutput
  removeFacetFromObject(input: AwsCloudDirectoryRemoveFacetFromObjectInput!, config: AwsConfig): JSON
  tagResource(input: AwsCloudDirectoryTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsCloudDirectoryUntagResourceInput!, config: AwsConfig): JSON
  updateFacet(input: AwsCloudDirectoryUpdateFacetInput!, config: AwsConfig): JSON
  updateLinkAttributes(input: AwsCloudDirectoryUpdateLinkAttributesInput!, config: AwsConfig): JSON
  updateObjectAttributes(input: AwsCloudDirectoryUpdateObjectAttributesInput!, config: AwsConfig): AwsCloudDirectoryUpdateObjectAttributesOutput
  updateSchema(input: AwsCloudDirectoryUpdateSchemaInput!, config: AwsConfig): AwsCloudDirectoryUpdateSchemaOutput
  updateTypedLinkFacet(input: AwsCloudDirectoryUpdateTypedLinkFacetInput!, config: AwsConfig): JSON
  upgradeAppliedSchema(input: AwsCloudDirectoryUpgradeAppliedSchemaInput!, config: AwsConfig): AwsCloudDirectoryUpgradeAppliedSchemaOutput
  upgradePublishedSchema(input: AwsCloudDirectoryUpgradePublishedSchemaInput!, config: AwsConfig): AwsCloudDirectoryUpgradePublishedSchemaOutput
}

input AwsCloudDirectoryAddFacetToObjectInput {
  DirectoryArn: String!
  SchemaFacet: AwsCloudDirectoryS3Input!
  ObjectAttributeList: [AwsCloudDirectoryS5Input]
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryApplySchemaInput {
  PublishedSchemaArn: String!
  DirectoryArn: String!
}

type AwsCloudDirectoryApplySchemaOutput {
  AppliedSchemaArn: String
  DirectoryArn: String
}

input AwsCloudDirectoryAttachObjectInput {
  DirectoryArn: String!
  ParentReference: AwsCloudDirectorySfInput!
  ChildReference: AwsCloudDirectorySfInput!
  LinkName: String!
}

type AwsCloudDirectoryAttachObjectOutput {
  AttachedObjectIdentifier: String
}

input AwsCloudDirectoryAttachPolicyInput {
  DirectoryArn: String!
  PolicyReference: AwsCloudDirectorySfInput!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryAttachToIndexInput {
  DirectoryArn: String!
  IndexReference: AwsCloudDirectorySfInput!
  TargetReference: AwsCloudDirectorySfInput!
}

type AwsCloudDirectoryAttachToIndexOutput {
  AttachedObjectIdentifier: String
}

input AwsCloudDirectoryAttachTypedLinkInput {
  DirectoryArn: String!
  SourceObjectReference: AwsCloudDirectorySfInput!
  TargetObjectReference: AwsCloudDirectorySfInput!
  TypedLinkFacet: AwsCloudDirectoryStInput!
  Attributes: [AwsCloudDirectorySvInput]!
}

type AwsCloudDirectoryAttachTypedLinkOutput {
  TypedLinkSpecifier: AwsCloudDirectorySy
}

input AwsCloudDirectoryBatchReadInput {
  DirectoryArn: String!
  Operations: [AwsCloudDirectoryBatchReadOperationsInput]!
  ConsistencyLevel: String
}

input AwsCloudDirectoryBatchReadOperationsGetLinkAttributesInput {
  TypedLinkSpecifier: AwsCloudDirectorySyInput!
  AttributeNames: [String]!
}

input AwsCloudDirectoryBatchReadOperationsGetObjectAttributesInput {
  ObjectReference: AwsCloudDirectorySfInput!
  SchemaFacet: AwsCloudDirectoryS3Input!
  AttributeNames: [String]!
}

input AwsCloudDirectoryBatchReadOperationsGetObjectInformationInput {
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchReadOperationsInput {
  ListObjectAttributes: AwsCloudDirectoryBatchReadOperationsListObjectAttributesInput
  ListObjectChildren: AwsCloudDirectoryBatchReadOperationsListObjectChildrenInput
  ListAttachedIndices: AwsCloudDirectoryBatchReadOperationsListAttachedIndicesInput
  ListObjectParentPaths: AwsCloudDirectoryBatchReadOperationsListObjectParentPathsInput
  GetObjectInformation: AwsCloudDirectoryBatchReadOperationsGetObjectInformationInput
  GetObjectAttributes: AwsCloudDirectoryBatchReadOperationsGetObjectAttributesInput
  ListObjectParents: AwsCloudDirectoryBatchReadOperationsListObjectParentsInput
  ListObjectPolicies: AwsCloudDirectoryBatchReadOperationsListObjectPoliciesInput
  ListPolicyAttachments: AwsCloudDirectoryBatchReadOperationsListPolicyAttachmentsInput
  LookupPolicy: AwsCloudDirectoryBatchReadOperationsLookupPolicyInput
  ListIndex: AwsCloudDirectoryBatchReadOperationsListIndexInput
  ListOutgoingTypedLinks: AwsCloudDirectoryBatchReadOperationsListOutgoingTypedLinksInput
  ListIncomingTypedLinks: AwsCloudDirectoryBatchReadOperationsListIncomingTypedLinksInput
  GetLinkAttributes: AwsCloudDirectoryBatchReadOperationsGetLinkAttributesInput
}

input AwsCloudDirectoryBatchReadOperationsListAttachedIndicesInput {
  TargetReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListIncomingTypedLinksInput {
  ObjectReference: AwsCloudDirectorySfInput!
  FilterAttributeRanges: [AwsCloudDirectoryS1lInput]
  FilterTypedLink: AwsCloudDirectoryStInput
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListIndexInput {
  RangesOnIndexedValues: [AwsCloudDirectoryS1gInput]
  IndexReference: AwsCloudDirectorySfInput!
  MaxResults: Int
  NextToken: String
}

input AwsCloudDirectoryBatchReadOperationsListObjectAttributesInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  FacetFilter: AwsCloudDirectoryS3Input
}

input AwsCloudDirectoryBatchReadOperationsListObjectChildrenInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListObjectParentPathsInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListObjectParentsInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListObjectPoliciesInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListOutgoingTypedLinksInput {
  ObjectReference: AwsCloudDirectorySfInput!
  FilterAttributeRanges: [AwsCloudDirectoryS1lInput]
  FilterTypedLink: AwsCloudDirectoryStInput
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListPolicyAttachmentsInput {
  PolicyReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsLookupPolicyInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryBatchReadOutput {
  Responses: [AwsCloudDirectoryBatchReadOutputResponses]
}

type AwsCloudDirectoryBatchReadOutputResponses {
  SuccessfulResponse: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponse
  ExceptionResponse: AwsCloudDirectoryBatchReadOutputResponsesExceptionResponse
}

type AwsCloudDirectoryBatchReadOutputResponsesExceptionResponse {
  Type: String
  Message: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponse {
  ListObjectAttributes: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectAttributes
  ListObjectChildren: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectChildren
  GetObjectInformation: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseGetObjectInformation
  GetObjectAttributes: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseGetObjectAttributes
  ListAttachedIndices: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListAttachedIndices
  ListObjectParentPaths: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectParentPaths
  ListObjectPolicies: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectPolicies
  ListPolicyAttachments: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListPolicyAttachments
  LookupPolicy: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseLookupPolicy
  ListIndex: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListIndex
  ListOutgoingTypedLinks: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListOutgoingTypedLinks
  ListIncomingTypedLinks: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListIncomingTypedLinks
  GetLinkAttributes: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseGetLinkAttributes
  ListObjectParents: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectParents
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseGetLinkAttributes {
  Attributes: [AwsCloudDirectoryS5]
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseGetObjectAttributes {
  Attributes: [AwsCloudDirectoryS5]
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseGetObjectInformation {
  SchemaFacets: [AwsCloudDirectoryS3]
  ObjectIdentifier: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListAttachedIndices {
  IndexAttachments: [AwsCloudDirectoryS21]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListIncomingTypedLinks {
  LinkSpecifiers: [AwsCloudDirectorySy]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListIndex {
  IndexAttachments: [AwsCloudDirectoryS21]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectAttributes {
  Attributes: [AwsCloudDirectoryS5]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectChildren {
  Children: JSON
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectParentPaths {
  PathToObjectIdentifiersList: [AwsCloudDirectoryS24]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectParents {
  ParentLinks: [AwsCloudDirectoryS2m]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectPolicies {
  AttachedPolicyIds: [String]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListOutgoingTypedLinks {
  TypedLinkSpecifiers: [AwsCloudDirectorySy]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListPolicyAttachments {
  ObjectIdentifiers: [String]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseLookupPolicy {
  PolicyToPathList: [AwsCloudDirectoryS2b]
  NextToken: String
}

input AwsCloudDirectoryBatchWriteInput {
  DirectoryArn: String!
  Operations: [AwsCloudDirectoryBatchWriteOperationsInput]!
}

input AwsCloudDirectoryBatchWriteOperationsAddFacetToObjectInput {
  SchemaFacet: AwsCloudDirectoryS3Input!
  ObjectAttributeList: [AwsCloudDirectoryS5Input]!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsAttachObjectInput {
  ParentReference: AwsCloudDirectorySfInput!
  ChildReference: AwsCloudDirectorySfInput!
  LinkName: String!
}

input AwsCloudDirectoryBatchWriteOperationsAttachPolicyInput {
  PolicyReference: AwsCloudDirectorySfInput!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsAttachToIndexInput {
  IndexReference: AwsCloudDirectorySfInput!
  TargetReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsAttachTypedLinkInput {
  SourceObjectReference: AwsCloudDirectorySfInput!
  TargetObjectReference: AwsCloudDirectorySfInput!
  TypedLinkFacet: AwsCloudDirectoryStInput!
  Attributes: [AwsCloudDirectorySvInput]!
}

input AwsCloudDirectoryBatchWriteOperationsCreateIndexInput {
  OrderedIndexedAttributeList: [AwsCloudDirectoryS7Input]!
  IsUnique: Boolean!
  ParentReference: AwsCloudDirectorySfInput
  LinkName: String
  BatchReferenceName: String
}

input AwsCloudDirectoryBatchWriteOperationsCreateObjectInput {
  SchemaFacet: [AwsCloudDirectoryS3Input]!
  ObjectAttributeList: [AwsCloudDirectoryS5Input]!
  ParentReference: AwsCloudDirectorySfInput
  LinkName: String
  BatchReferenceName: String
}

input AwsCloudDirectoryBatchWriteOperationsDeleteObjectInput {
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsDetachFromIndexInput {
  IndexReference: AwsCloudDirectorySfInput!
  TargetReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsDetachObjectInput {
  ParentReference: AwsCloudDirectorySfInput!
  LinkName: String!
  BatchReferenceName: String
}

input AwsCloudDirectoryBatchWriteOperationsDetachPolicyInput {
  PolicyReference: AwsCloudDirectorySfInput!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsDetachTypedLinkInput {
  TypedLinkSpecifier: AwsCloudDirectorySyInput!
}

input AwsCloudDirectoryBatchWriteOperationsInput {
  CreateObject: AwsCloudDirectoryBatchWriteOperationsCreateObjectInput
  AttachObject: AwsCloudDirectoryBatchWriteOperationsAttachObjectInput
  DetachObject: AwsCloudDirectoryBatchWriteOperationsDetachObjectInput
  UpdateObjectAttributes: AwsCloudDirectoryBatchWriteOperationsUpdateObjectAttributesInput
  DeleteObject: AwsCloudDirectoryBatchWriteOperationsDeleteObjectInput
  AddFacetToObject: AwsCloudDirectoryBatchWriteOperationsAddFacetToObjectInput
  RemoveFacetFromObject: AwsCloudDirectoryBatchWriteOperationsRemoveFacetFromObjectInput
  AttachPolicy: AwsCloudDirectoryBatchWriteOperationsAttachPolicyInput
  DetachPolicy: AwsCloudDirectoryBatchWriteOperationsDetachPolicyInput
  CreateIndex: AwsCloudDirectoryBatchWriteOperationsCreateIndexInput
  AttachToIndex: AwsCloudDirectoryBatchWriteOperationsAttachToIndexInput
  DetachFromIndex: AwsCloudDirectoryBatchWriteOperationsDetachFromIndexInput
  AttachTypedLink: AwsCloudDirectoryBatchWriteOperationsAttachTypedLinkInput
  DetachTypedLink: AwsCloudDirectoryBatchWriteOperationsDetachTypedLinkInput
  UpdateLinkAttributes: AwsCloudDirectoryBatchWriteOperationsUpdateLinkAttributesInput
}

input AwsCloudDirectoryBatchWriteOperationsRemoveFacetFromObjectInput {
  SchemaFacet: AwsCloudDirectoryS3Input!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsUpdateLinkAttributesInput {
  TypedLinkSpecifier: AwsCloudDirectorySyInput!
  AttributeUpdates: [AwsCloudDirectoryS3gInput]!
}

input AwsCloudDirectoryBatchWriteOperationsUpdateObjectAttributesInput {
  ObjectReference: AwsCloudDirectorySfInput!
  AttributeUpdates: [AwsCloudDirectoryS2zInput]!
}

type AwsCloudDirectoryBatchWriteOutput {
  Responses: [AwsCloudDirectoryBatchWriteOutputResponses]
}

type AwsCloudDirectoryBatchWriteOutputResponses {
  CreateObject: AwsCloudDirectoryBatchWriteOutputResponsesCreateObject
  AttachObject: AwsCloudDirectoryBatchWriteOutputResponsesAttachObject
  DetachObject: AwsCloudDirectoryBatchWriteOutputResponsesDetachObject
  UpdateObjectAttributes: AwsCloudDirectoryBatchWriteOutputResponsesUpdateObjectAttributes
  DeleteObject: JSON
  AddFacetToObject: JSON
  RemoveFacetFromObject: JSON
  AttachPolicy: JSON
  DetachPolicy: JSON
  CreateIndex: AwsCloudDirectoryBatchWriteOutputResponsesCreateIndex
  AttachToIndex: AwsCloudDirectoryBatchWriteOutputResponsesAttachToIndex
  DetachFromIndex: AwsCloudDirectoryBatchWriteOutputResponsesDetachFromIndex
  AttachTypedLink: AwsCloudDirectoryBatchWriteOutputResponsesAttachTypedLink
  DetachTypedLink: JSON
  UpdateLinkAttributes: JSON
}

type AwsCloudDirectoryBatchWriteOutputResponsesAttachObject {
  attachedObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesAttachToIndex {
  AttachedObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesAttachTypedLink {
  TypedLinkSpecifier: AwsCloudDirectorySy
}

type AwsCloudDirectoryBatchWriteOutputResponsesCreateIndex {
  ObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesCreateObject {
  ObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesDetachFromIndex {
  DetachedObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesDetachObject {
  detachedObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesUpdateObjectAttributes {
  ObjectIdentifier: String
}

input AwsCloudDirectoryCreateDirectoryInput {
  Name: String!
  SchemaArn: String!
}

type AwsCloudDirectoryCreateDirectoryOutput {
  DirectoryArn: String!
  Name: String!
  ObjectIdentifier: String!
  AppliedSchemaArn: String!
}

input AwsCloudDirectoryCreateFacetInput {
  SchemaArn: String!
  Name: String!
  Attributes: [AwsCloudDirectoryS47Input]
  ObjectType: String
  FacetStyle: String
}

input AwsCloudDirectoryCreateIndexInput {
  DirectoryArn: String!
  OrderedIndexedAttributeList: [AwsCloudDirectoryS7Input]!
  IsUnique: Boolean!
  ParentReference: AwsCloudDirectorySfInput
  LinkName: String
}

type AwsCloudDirectoryCreateIndexOutput {
  ObjectIdentifier: String
}

input AwsCloudDirectoryCreateObjectInput {
  DirectoryArn: String!
  SchemaFacets: [AwsCloudDirectoryS3Input]!
  ObjectAttributeList: [AwsCloudDirectoryS5Input]
  ParentReference: AwsCloudDirectorySfInput
  LinkName: String
}

type AwsCloudDirectoryCreateObjectOutput {
  ObjectIdentifier: String
}

input AwsCloudDirectoryCreateSchemaInput {
  Name: String!
}

type AwsCloudDirectoryCreateSchemaOutput {
  SchemaArn: String
}

input AwsCloudDirectoryCreateTypedLinkFacetFacetInput {
  Name: String!
  Attributes: [AwsCloudDirectoryS4wInput]!
  IdentityAttributeOrder: [String]!
}

input AwsCloudDirectoryCreateTypedLinkFacetInput {
  SchemaArn: String!
  Facet: AwsCloudDirectoryCreateTypedLinkFacetFacetInput!
}

input AwsCloudDirectoryDeleteDirectoryInput {
  DirectoryArn: String!
}

type AwsCloudDirectoryDeleteDirectoryOutput {
  DirectoryArn: String!
}

input AwsCloudDirectoryDeleteFacetInput {
  SchemaArn: String!
  Name: String!
}

input AwsCloudDirectoryDeleteObjectInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryDeleteSchemaInput {
  SchemaArn: String!
}

type AwsCloudDirectoryDeleteSchemaOutput {
  SchemaArn: String
}

input AwsCloudDirectoryDeleteTypedLinkFacetInput {
  SchemaArn: String!
  Name: String!
}

input AwsCloudDirectoryDetachFromIndexInput {
  DirectoryArn: String!
  IndexReference: AwsCloudDirectorySfInput!
  TargetReference: AwsCloudDirectorySfInput!
}

type AwsCloudDirectoryDetachFromIndexOutput {
  DetachedObjectIdentifier: String
}

input AwsCloudDirectoryDetachObjectInput {
  DirectoryArn: String!
  ParentReference: AwsCloudDirectorySfInput!
  LinkName: String!
}

type AwsCloudDirectoryDetachObjectOutput {
  DetachedObjectIdentifier: String
}

input AwsCloudDirectoryDetachPolicyInput {
  DirectoryArn: String!
  PolicyReference: AwsCloudDirectorySfInput!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryDetachTypedLinkInput {
  DirectoryArn: String!
  TypedLinkSpecifier: AwsCloudDirectorySyInput!
}

input AwsCloudDirectoryDisableDirectoryInput {
  DirectoryArn: String!
}

type AwsCloudDirectoryDisableDirectoryOutput {
  DirectoryArn: String!
}

input AwsCloudDirectoryEnableDirectoryInput {
  DirectoryArn: String!
}

type AwsCloudDirectoryEnableDirectoryOutput {
  DirectoryArn: String!
}

input AwsCloudDirectoryGetAppliedSchemaVersionInput {
  SchemaArn: String!
}

type AwsCloudDirectoryGetAppliedSchemaVersionOutput {
  AppliedSchemaArn: String
}

input AwsCloudDirectoryGetDirectoryInput {
  DirectoryArn: String!
}

type AwsCloudDirectoryGetDirectoryOutput {
  Directory: AwsCloudDirectoryS5n!
}

input AwsCloudDirectoryGetFacetInput {
  SchemaArn: String!
  Name: String!
}

type AwsCloudDirectoryGetFacetOutput {
  Facet: AwsCloudDirectoryGetFacetOutputFacet
}

type AwsCloudDirectoryGetFacetOutputFacet {
  Name: String
  ObjectType: String
  FacetStyle: String
}

input AwsCloudDirectoryGetLinkAttributesInput {
  DirectoryArn: String!
  TypedLinkSpecifier: AwsCloudDirectorySyInput!
  AttributeNames: [String]!
  ConsistencyLevel: String
}

type AwsCloudDirectoryGetLinkAttributesOutput {
  Attributes: [AwsCloudDirectoryS5]
}

input AwsCloudDirectoryGetObjectAttributesInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  ConsistencyLevel: String
  SchemaFacet: AwsCloudDirectoryS3Input!
  AttributeNames: [String]!
}

type AwsCloudDirectoryGetObjectAttributesOutput {
  Attributes: [AwsCloudDirectoryS5]
}

input AwsCloudDirectoryGetObjectInformationInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  ConsistencyLevel: String
}

type AwsCloudDirectoryGetObjectInformationOutput {
  SchemaFacets: [AwsCloudDirectoryS3]
  ObjectIdentifier: String
}

input AwsCloudDirectoryGetSchemaAsJsonInput {
  SchemaArn: String!
}

type AwsCloudDirectoryGetSchemaAsJsonOutput {
  Name: String
  Document: String
}

input AwsCloudDirectoryGetTypedLinkFacetInformationInput {
  SchemaArn: String!
  Name: String!
}

type AwsCloudDirectoryGetTypedLinkFacetInformationOutput {
  IdentityAttributeOrder: [String]
}

input AwsCloudDirectoryListAppliedSchemaArnsInput {
  DirectoryArn: String!
  SchemaArn: String
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListAppliedSchemaArnsOutput {
  SchemaArns: [String]
  NextToken: String
}

input AwsCloudDirectoryListAttachedIndicesInput {
  DirectoryArn: String!
  TargetReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListAttachedIndicesOutput {
  IndexAttachments: [AwsCloudDirectoryS21]
  NextToken: String
}

input AwsCloudDirectoryListDevelopmentSchemaArnsInput {
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListDevelopmentSchemaArnsOutput {
  SchemaArns: [String]
  NextToken: String
}

input AwsCloudDirectoryListDirectoriesInput {
  NextToken: String
  MaxResults: Int
  state: String
}

type AwsCloudDirectoryListDirectoriesOutput {
  Directories: [AwsCloudDirectoryS5n]!
  NextToken: String
}

input AwsCloudDirectoryListFacetAttributesInput {
  SchemaArn: String!
  Name: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListFacetAttributesOutput {
  Attributes: [AwsCloudDirectoryS47]
  NextToken: String
}

input AwsCloudDirectoryListFacetNamesInput {
  SchemaArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListFacetNamesOutput {
  FacetNames: [String]
  NextToken: String
}

input AwsCloudDirectoryListIncomingTypedLinksInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  FilterAttributeRanges: [AwsCloudDirectoryS1lInput]
  FilterTypedLink: AwsCloudDirectoryStInput
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListIncomingTypedLinksOutput {
  LinkSpecifiers: [AwsCloudDirectorySy]
  NextToken: String
}

input AwsCloudDirectoryListIndexInput {
  DirectoryArn: String!
  RangesOnIndexedValues: [AwsCloudDirectoryS1gInput]
  IndexReference: AwsCloudDirectorySfInput!
  MaxResults: Int
  NextToken: String
  ConsistencyLevel: String
}

type AwsCloudDirectoryListIndexOutput {
  IndexAttachments: [AwsCloudDirectoryS21]
  NextToken: String
}

input AwsCloudDirectoryListManagedSchemaArnsInput {
  SchemaArn: String
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListManagedSchemaArnsOutput {
  SchemaArns: [String]
  NextToken: String
}

input AwsCloudDirectoryListObjectAttributesInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
  FacetFilter: AwsCloudDirectoryS3Input
}

type AwsCloudDirectoryListObjectAttributesOutput {
  Attributes: [AwsCloudDirectoryS5]
  NextToken: String
}

input AwsCloudDirectoryListObjectChildrenInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListObjectChildrenOutput {
  Children: JSON
  NextToken: String
}

input AwsCloudDirectoryListObjectParentPathsInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListObjectParentPathsOutput {
  PathToObjectIdentifiersList: [AwsCloudDirectoryS24]
  NextToken: String
}

input AwsCloudDirectoryListObjectParentsInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
  IncludeAllLinksToEachParent: Boolean
}

type AwsCloudDirectoryListObjectParentsOutput {
  Parents: JSON
  NextToken: String
  ParentLinks: [AwsCloudDirectoryS2m]
}

input AwsCloudDirectoryListObjectPoliciesInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListObjectPoliciesOutput {
  AttachedPolicyIds: [String]
  NextToken: String
}

input AwsCloudDirectoryListOutgoingTypedLinksInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  FilterAttributeRanges: [AwsCloudDirectoryS1lInput]
  FilterTypedLink: AwsCloudDirectoryStInput
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListOutgoingTypedLinksOutput {
  TypedLinkSpecifiers: [AwsCloudDirectorySy]
  NextToken: String
}

input AwsCloudDirectoryListPolicyAttachmentsInput {
  DirectoryArn: String!
  PolicyReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListPolicyAttachmentsOutput {
  ObjectIdentifiers: [String]
  NextToken: String
}

input AwsCloudDirectoryListPublishedSchemaArnsInput {
  SchemaArn: String
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListPublishedSchemaArnsOutput {
  SchemaArns: [String]
  NextToken: String
}

input AwsCloudDirectoryListTagsForResourceInput {
  ResourceArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListTagsForResourceOutput {
  Tags: [AwsCloudDirectoryS79]
  NextToken: String
}

input AwsCloudDirectoryListTypedLinkFacetAttributesInput {
  SchemaArn: String!
  Name: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListTypedLinkFacetAttributesOutput {
  Attributes: [AwsCloudDirectoryS4w]
  NextToken: String
}

input AwsCloudDirectoryListTypedLinkFacetNamesInput {
  SchemaArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListTypedLinkFacetNamesOutput {
  FacetNames: [String]
  NextToken: String
}

input AwsCloudDirectoryLookupPolicyInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryLookupPolicyOutput {
  PolicyToPathList: [AwsCloudDirectoryS2b]
  NextToken: String
}

input AwsCloudDirectoryPublishSchemaInput {
  DevelopmentSchemaArn: String!
  Version: String!
  MinorVersion: String
  Name: String
}

type AwsCloudDirectoryPublishSchemaOutput {
  PublishedSchemaArn: String
}

input AwsCloudDirectoryPutSchemaFromJsonInput {
  SchemaArn: String!
  Document: String!
}

type AwsCloudDirectoryPutSchemaFromJsonOutput {
  Arn: String
}

input AwsCloudDirectoryRemoveFacetFromObjectInput {
  DirectoryArn: String!
  SchemaFacet: AwsCloudDirectoryS3Input!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryS1gInput {
  AttributeKey: AwsCloudDirectoryS7Input
  Range: AwsCloudDirectoryS1iInput
}

input AwsCloudDirectoryS1iInput {
  StartMode: String!
  StartValue: AwsCloudDirectoryS9Input
  EndMode: String!
  EndValue: AwsCloudDirectoryS9Input
}

input AwsCloudDirectoryS1lInput {
  AttributeName: String
  Range: AwsCloudDirectoryS1iInput!
}

type AwsCloudDirectoryS21 {
  IndexedAttributes: [AwsCloudDirectoryS5]
  ObjectIdentifier: String
}

type AwsCloudDirectoryS24 {
  Path: String
  ObjectIdentifiers: [String]
}

type AwsCloudDirectoryS2b {
  Path: String
  Policies: [AwsCloudDirectoryS2bPolicies]
}

type AwsCloudDirectoryS2bPolicies {
  PolicyId: String
  ObjectIdentifier: String
  PolicyType: String
}

type AwsCloudDirectoryS2m {
  ObjectIdentifier: String
  LinkName: String
}

input AwsCloudDirectoryS2zInput {
  ObjectAttributeKey: AwsCloudDirectoryS7Input
  ObjectAttributeAction: AwsCloudDirectoryS2zObjectAttributeActionInput
}

input AwsCloudDirectoryS2zObjectAttributeActionInput {
  ObjectAttributeActionType: String
  ObjectAttributeUpdateValue: AwsCloudDirectoryS9Input
}

type AwsCloudDirectoryS3 {
  SchemaArn: String
  FacetName: String
}

input AwsCloudDirectoryS3gAttributeActionInput {
  AttributeActionType: String
  AttributeUpdateValue: AwsCloudDirectoryS9Input
}

input AwsCloudDirectoryS3gInput {
  AttributeKey: AwsCloudDirectoryS7Input
  AttributeAction: AwsCloudDirectoryS3gAttributeActionInput
}

input AwsCloudDirectoryS3Input {
  SchemaArn: String
  FacetName: String
}

type AwsCloudDirectoryS47 {
  Name: String!
  AttributeDefinition: AwsCloudDirectoryS47AttributeDefinition
  AttributeReference: AwsCloudDirectoryS47AttributeReference
  RequiredBehavior: String
}

type AwsCloudDirectoryS47AttributeDefinition {
  Type: String!
  DefaultValue: AwsCloudDirectoryS9
  IsImmutable: Boolean
  Rules: JSON
}

input AwsCloudDirectoryS47AttributeDefinitionInput {
  Type: String!
  DefaultValue: AwsCloudDirectoryS9Input
  IsImmutable: Boolean
  Rules: JSON
}

type AwsCloudDirectoryS47AttributeReference {
  TargetFacetName: String!
  TargetAttributeName: String!
}

input AwsCloudDirectoryS47AttributeReferenceInput {
  TargetFacetName: String!
  TargetAttributeName: String!
}

input AwsCloudDirectoryS47Input {
  Name: String!
  AttributeDefinition: AwsCloudDirectoryS47AttributeDefinitionInput
  AttributeReference: AwsCloudDirectoryS47AttributeReferenceInput
  RequiredBehavior: String
}

type AwsCloudDirectoryS4w {
  Name: String!
  Type: String!
  DefaultValue: AwsCloudDirectoryS9
  IsImmutable: Boolean
  Rules: JSON
  RequiredBehavior: String!
}

input AwsCloudDirectoryS4wInput {
  Name: String!
  Type: String!
  DefaultValue: AwsCloudDirectoryS9Input
  IsImmutable: Boolean
  Rules: JSON
  RequiredBehavior: String!
}

type AwsCloudDirectoryS5 {
  Key: AwsCloudDirectoryS7!
  Value: AwsCloudDirectoryS9!
}

input AwsCloudDirectoryS5Input {
  Key: AwsCloudDirectoryS7Input!
  Value: AwsCloudDirectoryS9Input!
}

type AwsCloudDirectoryS5n {
  Name: String
  DirectoryArn: String
  State: String
  CreationDateTime: Date
}

type AwsCloudDirectoryS7 {
  SchemaArn: String!
  FacetName: String!
  Name: String!
}

type AwsCloudDirectoryS79 {
  Key: String
  Value: String
}

input AwsCloudDirectoryS79Input {
  Key: String
  Value: String
}

input AwsCloudDirectoryS7Input {
  SchemaArn: String!
  FacetName: String!
  Name: String!
}

type AwsCloudDirectoryS9 {
  StringValue: String
  BinaryValue: JSON
  BooleanValue: Boolean
  NumberValue: String
  DatetimeValue: Date
}

input AwsCloudDirectoryS9Input {
  StringValue: String
  BinaryValue: JSON
  BooleanValue: Boolean
  NumberValue: String
  DatetimeValue: Date
}

type AwsCloudDirectorySf {
  Selector: String
}

input AwsCloudDirectorySfInput {
  Selector: String
}

type AwsCloudDirectorySt {
  SchemaArn: String!
  TypedLinkName: String!
}

input AwsCloudDirectoryStInput {
  SchemaArn: String!
  TypedLinkName: String!
}

type AwsCloudDirectorySv {
  AttributeName: String!
  Value: AwsCloudDirectoryS9!
}

input AwsCloudDirectorySvInput {
  AttributeName: String!
  Value: AwsCloudDirectoryS9Input!
}

type AwsCloudDirectorySy {
  TypedLinkFacet: AwsCloudDirectorySt!
  SourceObjectReference: AwsCloudDirectorySf!
  TargetObjectReference: AwsCloudDirectorySf!
  IdentityAttributeValues: [AwsCloudDirectorySv]!
}

input AwsCloudDirectorySyInput {
  TypedLinkFacet: AwsCloudDirectoryStInput!
  SourceObjectReference: AwsCloudDirectorySfInput!
  TargetObjectReference: AwsCloudDirectorySfInput!
  IdentityAttributeValues: [AwsCloudDirectorySvInput]!
}

input AwsCloudDirectoryTagResourceInput {
  ResourceArn: String!
  Tags: [AwsCloudDirectoryS79Input]!
}

input AwsCloudDirectoryUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsCloudDirectoryUpdateFacetAttributeUpdatesInput {
  Attribute: AwsCloudDirectoryS47Input
  Action: String
}

input AwsCloudDirectoryUpdateFacetInput {
  SchemaArn: String!
  Name: String!
  AttributeUpdates: [AwsCloudDirectoryUpdateFacetAttributeUpdatesInput]
  ObjectType: String
}

input AwsCloudDirectoryUpdateLinkAttributesInput {
  DirectoryArn: String!
  TypedLinkSpecifier: AwsCloudDirectorySyInput!
  AttributeUpdates: [AwsCloudDirectoryS3gInput]!
}

input AwsCloudDirectoryUpdateObjectAttributesInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  AttributeUpdates: [AwsCloudDirectoryS2zInput]!
}

type AwsCloudDirectoryUpdateObjectAttributesOutput {
  ObjectIdentifier: String
}

input AwsCloudDirectoryUpdateSchemaInput {
  SchemaArn: String!
  Name: String!
}

type AwsCloudDirectoryUpdateSchemaOutput {
  SchemaArn: String
}

input AwsCloudDirectoryUpdateTypedLinkFacetAttributeUpdatesInput {
  Attribute: AwsCloudDirectoryS4wInput!
  Action: String!
}

input AwsCloudDirectoryUpdateTypedLinkFacetInput {
  SchemaArn: String!
  Name: String!
  AttributeUpdates: [AwsCloudDirectoryUpdateTypedLinkFacetAttributeUpdatesInput]!
  IdentityAttributeOrder: [String]!
}

input AwsCloudDirectoryUpgradeAppliedSchemaInput {
  PublishedSchemaArn: String!
  DirectoryArn: String!
  DryRun: Boolean
}

type AwsCloudDirectoryUpgradeAppliedSchemaOutput {
  UpgradedSchemaArn: String
  DirectoryArn: String
}

input AwsCloudDirectoryUpgradePublishedSchemaInput {
  DevelopmentSchemaArn: String!
  PublishedSchemaArn: String!
  MinorVersion: String!
  DryRun: Boolean
}

type AwsCloudDirectoryUpgradePublishedSchemaOutput {
  UpgradedSchemaArn: String
}

"""AWS CloudFormation (2010-05-15)"""
type AwsCloudFormation {
  cancelUpdateStack(input: AwsCloudFormationCancelUpdateStackInput!, config: AwsConfig): JSON
  continueUpdateRollback(input: AwsCloudFormationContinueUpdateRollbackInput!, config: AwsConfig): JSON
  createChangeSet(input: AwsCloudFormationCreateChangeSetInput!, config: AwsConfig): AwsCloudFormationCreateChangeSetOutput
  createStack(input: AwsCloudFormationCreateStackInput!, config: AwsConfig): AwsCloudFormationCreateStackOutput
  createStackInstances(input: AwsCloudFormationCreateStackInstancesInput!, config: AwsConfig): AwsCloudFormationCreateStackInstancesOutput
  createStackSet(input: AwsCloudFormationCreateStackSetInput!, config: AwsConfig): AwsCloudFormationCreateStackSetOutput
  deleteChangeSet(input: AwsCloudFormationDeleteChangeSetInput!, config: AwsConfig): JSON
  deleteStack(input: AwsCloudFormationDeleteStackInput!, config: AwsConfig): JSON
  deleteStackInstances(input: AwsCloudFormationDeleteStackInstancesInput!, config: AwsConfig): AwsCloudFormationDeleteStackInstancesOutput
  deleteStackSet(input: AwsCloudFormationDeleteStackSetInput!, config: AwsConfig): JSON
  describeAccountLimits(input: AwsCloudFormationDescribeAccountLimitsInput, config: AwsConfig): AwsCloudFormationDescribeAccountLimitsOutput
  describeChangeSet(input: AwsCloudFormationDescribeChangeSetInput!, config: AwsConfig): AwsCloudFormationDescribeChangeSetOutput
  describeStackDriftDetectionStatus(input: AwsCloudFormationDescribeStackDriftDetectionStatusInput!, config: AwsConfig): AwsCloudFormationDescribeStackDriftDetectionStatusOutput
  describeStackEvents(input: AwsCloudFormationDescribeStackEventsInput, config: AwsConfig): AwsCloudFormationDescribeStackEventsOutput
  describeStackInstance(input: AwsCloudFormationDescribeStackInstanceInput!, config: AwsConfig): AwsCloudFormationDescribeStackInstanceOutput
  describeStackResource(input: AwsCloudFormationDescribeStackResourceInput!, config: AwsConfig): AwsCloudFormationDescribeStackResourceOutput
  describeStackResourceDrifts(input: AwsCloudFormationDescribeStackResourceDriftsInput!, config: AwsConfig): AwsCloudFormationDescribeStackResourceDriftsOutput
  describeStackResources(input: AwsCloudFormationDescribeStackResourcesInput, config: AwsConfig): AwsCloudFormationDescribeStackResourcesOutput
  describeStackSet(input: AwsCloudFormationDescribeStackSetInput!, config: AwsConfig): AwsCloudFormationDescribeStackSetOutput
  describeStackSetOperation(input: AwsCloudFormationDescribeStackSetOperationInput!, config: AwsConfig): AwsCloudFormationDescribeStackSetOperationOutput
  describeStacks(input: AwsCloudFormationDescribeStacksInput, config: AwsConfig): AwsCloudFormationDescribeStacksOutput
  detectStackDrift(input: AwsCloudFormationDetectStackDriftInput!, config: AwsConfig): AwsCloudFormationDetectStackDriftOutput
  detectStackResourceDrift(input: AwsCloudFormationDetectStackResourceDriftInput!, config: AwsConfig): AwsCloudFormationDetectStackResourceDriftOutput
  estimateTemplateCost(input: AwsCloudFormationEstimateTemplateCostInput, config: AwsConfig): AwsCloudFormationEstimateTemplateCostOutput
  executeChangeSet(input: AwsCloudFormationExecuteChangeSetInput!, config: AwsConfig): JSON
  getStackPolicy(input: AwsCloudFormationGetStackPolicyInput!, config: AwsConfig): AwsCloudFormationGetStackPolicyOutput
  getTemplate(input: AwsCloudFormationGetTemplateInput, config: AwsConfig): AwsCloudFormationGetTemplateOutput
  getTemplateSummary(input: AwsCloudFormationGetTemplateSummaryInput, config: AwsConfig): AwsCloudFormationGetTemplateSummaryOutput
  listChangeSets(input: AwsCloudFormationListChangeSetsInput!, config: AwsConfig): AwsCloudFormationListChangeSetsOutput
  listExports(input: AwsCloudFormationListExportsInput, config: AwsConfig): AwsCloudFormationListExportsOutput
  listImports(input: AwsCloudFormationListImportsInput!, config: AwsConfig): AwsCloudFormationListImportsOutput
  listStackInstances(input: AwsCloudFormationListStackInstancesInput!, config: AwsConfig): AwsCloudFormationListStackInstancesOutput
  listStackResources(input: AwsCloudFormationListStackResourcesInput!, config: AwsConfig): AwsCloudFormationListStackResourcesOutput
  listStackSetOperationResults(input: AwsCloudFormationListStackSetOperationResultsInput!, config: AwsConfig): AwsCloudFormationListStackSetOperationResultsOutput
  listStackSetOperations(input: AwsCloudFormationListStackSetOperationsInput!, config: AwsConfig): AwsCloudFormationListStackSetOperationsOutput
  listStackSets(input: AwsCloudFormationListStackSetsInput, config: AwsConfig): AwsCloudFormationListStackSetsOutput
  listStacks(input: AwsCloudFormationListStacksInput, config: AwsConfig): AwsCloudFormationListStacksOutput
  setStackPolicy(input: AwsCloudFormationSetStackPolicyInput!, config: AwsConfig): JSON
  signalResource(input: AwsCloudFormationSignalResourceInput!, config: AwsConfig): JSON
  stopStackSetOperation(input: AwsCloudFormationStopStackSetOperationInput!, config: AwsConfig): JSON
  updateStack(input: AwsCloudFormationUpdateStackInput!, config: AwsConfig): AwsCloudFormationUpdateStackOutput
  updateStackInstances(input: AwsCloudFormationUpdateStackInstancesInput!, config: AwsConfig): AwsCloudFormationUpdateStackInstancesOutput
  updateStackSet(input: AwsCloudFormationUpdateStackSetInput!, config: AwsConfig): AwsCloudFormationUpdateStackSetOutput
  updateTerminationProtection(input: AwsCloudFormationUpdateTerminationProtectionInput!, config: AwsConfig): AwsCloudFormationUpdateTerminationProtectionOutput
  validateTemplate(input: AwsCloudFormationValidateTemplateInput, config: AwsConfig): AwsCloudFormationValidateTemplateOutput
}

input AwsCloudFormationCancelUpdateStackInput {
  StackName: String!
  ClientRequestToken: String
}

input AwsCloudFormationContinueUpdateRollbackInput {
  StackName: String!
  RoleARN: String
  ResourcesToSkip: [String]
  ClientRequestToken: String
}

input AwsCloudFormationCreateChangeSetInput {
  StackName: String!
  TemplateBody: String
  TemplateURL: String
  UsePreviousTemplate: Boolean
  Parameters: [AwsCloudFormationSeInput]
  Capabilities: [String]
  ResourceTypes: [String]
  RoleARN: String
  RollbackConfiguration: AwsCloudFormationSnInput
  NotificationARNs: [String]
  Tags: [AwsCloudFormationSvInput]
  ChangeSetName: String!
  ClientToken: String
  Description: String
  ChangeSetType: String
}

type AwsCloudFormationCreateChangeSetOutput {
  Id: String
  StackId: String
}

input AwsCloudFormationCreateStackInput {
  StackName: String!
  TemplateBody: String
  TemplateURL: String
  Parameters: [AwsCloudFormationSeInput]
  DisableRollback: Boolean
  RollbackConfiguration: AwsCloudFormationSnInput
  TimeoutInMinutes: Int
  NotificationARNs: [String]
  Capabilities: [String]
  ResourceTypes: [String]
  RoleARN: String
  OnFailure: String
  StackPolicyBody: String
  StackPolicyURL: String
  Tags: [AwsCloudFormationSvInput]
  ClientRequestToken: String
  EnableTerminationProtection: Boolean
}

input AwsCloudFormationCreateStackInstancesInput {
  StackSetName: String!
  Accounts: [String]!
  Regions: [String]!
  ParameterOverrides: [AwsCloudFormationSeInput]
  OperationPreferences: AwsCloudFormationS1kInput
  OperationId: String
}

type AwsCloudFormationCreateStackInstancesOutput {
  OperationId: String
}

type AwsCloudFormationCreateStackOutput {
  StackId: String
}

input AwsCloudFormationCreateStackSetInput {
  StackSetName: String!
  Description: String
  TemplateBody: String
  TemplateURL: String
  Parameters: [AwsCloudFormationSeInput]
  Capabilities: [String]
  Tags: [AwsCloudFormationSvInput]
  AdministrationRoleARN: String
  ExecutionRoleName: String
  ClientRequestToken: String
}

type AwsCloudFormationCreateStackSetOutput {
  StackSetId: String
}

input AwsCloudFormationDeleteChangeSetInput {
  ChangeSetName: String!
  StackName: String
}

input AwsCloudFormationDeleteStackInput {
  StackName: String!
  RetainResources: [String]
  RoleARN: String
  ClientRequestToken: String
}

input AwsCloudFormationDeleteStackInstancesInput {
  StackSetName: String!
  Accounts: [String]!
  Regions: [String]!
  OperationPreferences: AwsCloudFormationS1kInput
  RetainStacks: Boolean!
  OperationId: String
}

type AwsCloudFormationDeleteStackInstancesOutput {
  OperationId: String
}

input AwsCloudFormationDeleteStackSetInput {
  StackSetName: String!
}

input AwsCloudFormationDescribeAccountLimitsInput {
  NextToken: String
}

type AwsCloudFormationDescribeAccountLimitsOutput {
  AccountLimits: [AwsCloudFormationDescribeAccountLimitsOutputAccountLimits]
  NextToken: String
}

type AwsCloudFormationDescribeAccountLimitsOutputAccountLimits {
  Name: String
  Value: Int
}

input AwsCloudFormationDescribeChangeSetInput {
  ChangeSetName: String!
  StackName: String
  NextToken: String
}

type AwsCloudFormationDescribeChangeSetOutput {
  ChangeSetName: String
  ChangeSetId: String
  StackId: String
  StackName: String
  Description: String
  Parameters: [AwsCloudFormationSe]
  CreationTime: Date
  ExecutionStatus: String
  Status: String
  StatusReason: String
  NotificationARNs: [String]
  RollbackConfiguration: AwsCloudFormationSn
  Capabilities: [String]
  Tags: [AwsCloudFormationSv]
  Changes: [AwsCloudFormationDescribeChangeSetOutputChanges]
  NextToken: String
}

type AwsCloudFormationDescribeChangeSetOutputChanges {
  Type: String
  ResourceChange: AwsCloudFormationDescribeChangeSetOutputChangesResourceChange
}

type AwsCloudFormationDescribeChangeSetOutputChangesResourceChange {
  Action: String
  LogicalResourceId: String
  PhysicalResourceId: String
  ResourceType: String
  Replacement: String
  Scope: [String]
  Details: [AwsCloudFormationDescribeChangeSetOutputChangesResourceChangeDetails]
}

type AwsCloudFormationDescribeChangeSetOutputChangesResourceChangeDetails {
  Target: AwsCloudFormationDescribeChangeSetOutputChangesResourceChangeDetailsTarget
  Evaluation: String
  ChangeSource: String
  CausingEntity: String
}

type AwsCloudFormationDescribeChangeSetOutputChangesResourceChangeDetailsTarget {
  Attribute: String
  Name: String
  RequiresRecreation: String
}

input AwsCloudFormationDescribeStackDriftDetectionStatusInput {
  StackDriftDetectionId: String!
}

type AwsCloudFormationDescribeStackDriftDetectionStatusOutput {
  StackId: String!
  StackDriftDetectionId: String!
  StackDriftStatus: String
  DetectionStatus: String!
  DetectionStatusReason: String
  DriftedStackResourceCount: Int
  Timestamp: Date!
}

input AwsCloudFormationDescribeStackEventsInput {
  StackName: String
  NextToken: String
}

type AwsCloudFormationDescribeStackEventsOutput {
  StackEvents: [AwsCloudFormationDescribeStackEventsOutputStackEvents]
  NextToken: String
}

type AwsCloudFormationDescribeStackEventsOutputStackEvents {
  StackId: String!
  EventId: String!
  StackName: String!
  LogicalResourceId: String
  PhysicalResourceId: String
  ResourceType: String
  Timestamp: Date!
  ResourceStatus: String
  ResourceStatusReason: String
  ResourceProperties: String
  ClientRequestToken: String
}

input AwsCloudFormationDescribeStackInstanceInput {
  StackSetName: String!
  StackInstanceAccount: String!
  StackInstanceRegion: String!
}

type AwsCloudFormationDescribeStackInstanceOutput {
  StackInstance: AwsCloudFormationDescribeStackInstanceOutputStackInstance
}

type AwsCloudFormationDescribeStackInstanceOutputStackInstance {
  StackSetId: String
  Region: String
  Account: String
  StackId: String
  ParameterOverrides: [AwsCloudFormationSe]
  Status: String
  StatusReason: String
}

input AwsCloudFormationDescribeStackResourceDriftsInput {
  StackName: String!
  StackResourceDriftStatusFilters: [String]
  NextToken: String
  MaxResults: Int
}

type AwsCloudFormationDescribeStackResourceDriftsOutput {
  StackResourceDrifts: [AwsCloudFormationS3v]!
  NextToken: String
}

input AwsCloudFormationDescribeStackResourceInput {
  StackName: String!
  LogicalResourceId: String!
}

type AwsCloudFormationDescribeStackResourceOutput {
  StackResourceDetail: AwsCloudFormationDescribeStackResourceOutputStackResourceDetail
}

type AwsCloudFormationDescribeStackResourceOutputStackResourceDetail {
  StackName: String
  StackId: String
  LogicalResourceId: String!
  PhysicalResourceId: String
  ResourceType: String!
  LastUpdatedTimestamp: Date!
  ResourceStatus: String!
  ResourceStatusReason: String
  Description: String
  Metadata: String
  DriftInformation: AwsCloudFormationS3o
}

input AwsCloudFormationDescribeStackResourcesInput {
  StackName: String
  LogicalResourceId: String
  PhysicalResourceId: String
}

type AwsCloudFormationDescribeStackResourcesOutput {
  StackResources: [AwsCloudFormationDescribeStackResourcesOutputStackResources]
}

type AwsCloudFormationDescribeStackResourcesOutputStackResources {
  StackName: String
  StackId: String
  LogicalResourceId: String!
  PhysicalResourceId: String
  ResourceType: String!
  Timestamp: Date!
  ResourceStatus: String!
  ResourceStatusReason: String
  Description: String
  DriftInformation: AwsCloudFormationS3o
}

input AwsCloudFormationDescribeStackSetInput {
  StackSetName: String!
}

input AwsCloudFormationDescribeStackSetOperationInput {
  StackSetName: String!
  OperationId: String!
}

type AwsCloudFormationDescribeStackSetOperationOutput {
  StackSetOperation: AwsCloudFormationDescribeStackSetOperationOutputStackSetOperation
}

type AwsCloudFormationDescribeStackSetOperationOutputStackSetOperation {
  OperationId: String
  StackSetId: String
  Action: String
  Status: String
  OperationPreferences: AwsCloudFormationS1k
  RetainStacks: Boolean
  AdministrationRoleARN: String
  ExecutionRoleName: String
  CreationTimestamp: Date
  EndTimestamp: Date
}

type AwsCloudFormationDescribeStackSetOutput {
  StackSet: AwsCloudFormationDescribeStackSetOutputStackSet
}

type AwsCloudFormationDescribeStackSetOutputStackSet {
  StackSetName: String
  StackSetId: String
  Description: String
  Status: String
  TemplateBody: String
  Parameters: [AwsCloudFormationSe]
  Capabilities: [String]
  Tags: [AwsCloudFormationSv]
  StackSetARN: String
  AdministrationRoleARN: String
  ExecutionRoleName: String
}

input AwsCloudFormationDescribeStacksInput {
  StackName: String
  NextToken: String
}

type AwsCloudFormationDescribeStacksOutput {
  Stacks: [AwsCloudFormationDescribeStacksOutputStacks]
  NextToken: String
}

type AwsCloudFormationDescribeStacksOutputStacks {
  StackId: String
  StackName: String!
  ChangeSetId: String
  Description: String
  Parameters: [AwsCloudFormationSe]
  CreationTime: Date!
  DeletionTime: Date
  LastUpdatedTime: Date
  RollbackConfiguration: AwsCloudFormationSn
  StackStatus: String!
  StackStatusReason: String
  DisableRollback: Boolean
  NotificationARNs: [String]
  TimeoutInMinutes: Int
  Capabilities: [String]
  Outputs: [AwsCloudFormationDescribeStacksOutputStacksOutputs]
  RoleARN: String
  Tags: [AwsCloudFormationSv]
  EnableTerminationProtection: Boolean
  ParentId: String
  RootId: String
  DriftInformation: AwsCloudFormationDescribeStacksOutputStacksDriftInformation
}

type AwsCloudFormationDescribeStacksOutputStacksDriftInformation {
  StackDriftStatus: String!
  LastCheckTimestamp: Date
}

type AwsCloudFormationDescribeStacksOutputStacksOutputs {
  OutputKey: String
  OutputValue: String
  Description: String
  ExportName: String
}

input AwsCloudFormationDetectStackDriftInput {
  StackName: String!
  LogicalResourceIds: [String]
}

type AwsCloudFormationDetectStackDriftOutput {
  StackDriftDetectionId: String!
}

input AwsCloudFormationDetectStackResourceDriftInput {
  StackName: String!
  LogicalResourceId: String!
}

type AwsCloudFormationDetectStackResourceDriftOutput {
  StackResourceDrift: AwsCloudFormationS3v!
}

input AwsCloudFormationEstimateTemplateCostInput {
  TemplateBody: String
  TemplateURL: String
  Parameters: [AwsCloudFormationSeInput]
}

type AwsCloudFormationEstimateTemplateCostOutput {
  Url: String
}

input AwsCloudFormationExecuteChangeSetInput {
  ChangeSetName: String!
  StackName: String
  ClientRequestToken: String
}

input AwsCloudFormationGetStackPolicyInput {
  StackName: String!
}

type AwsCloudFormationGetStackPolicyOutput {
  StackPolicyBody: String
}

input AwsCloudFormationGetTemplateInput {
  StackName: String
  ChangeSetName: String
  TemplateStage: String
}

type AwsCloudFormationGetTemplateOutput {
  TemplateBody: String
  StagesAvailable: [String]
}

input AwsCloudFormationGetTemplateSummaryInput {
  TemplateBody: String
  TemplateURL: String
  StackName: String
  StackSetName: String
}

type AwsCloudFormationGetTemplateSummaryOutput {
  Parameters: [AwsCloudFormationGetTemplateSummaryOutputParameters]
  Description: String
  Capabilities: [String]
  CapabilitiesReason: String
  ResourceTypes: [String]
  Version: String
  Metadata: String
  DeclaredTransforms: [String]
}

type AwsCloudFormationGetTemplateSummaryOutputParameters {
  ParameterKey: String
  DefaultValue: String
  ParameterType: String
  NoEcho: Boolean
  Description: String
  ParameterConstraints: AwsCloudFormationGetTemplateSummaryOutputParametersParameterConstraints
}

type AwsCloudFormationGetTemplateSummaryOutputParametersParameterConstraints {
  AllowedValues: [String]
}

input AwsCloudFormationListChangeSetsInput {
  StackName: String!
  NextToken: String
}

type AwsCloudFormationListChangeSetsOutput {
  Summaries: [AwsCloudFormationListChangeSetsOutputSummaries]
  NextToken: String
}

type AwsCloudFormationListChangeSetsOutputSummaries {
  StackId: String
  StackName: String
  ChangeSetId: String
  ChangeSetName: String
  ExecutionStatus: String
  Status: String
  StatusReason: String
  CreationTime: Date
  Description: String
}

input AwsCloudFormationListExportsInput {
  NextToken: String
}

type AwsCloudFormationListExportsOutput {
  Exports: [AwsCloudFormationListExportsOutputExports]
  NextToken: String
}

type AwsCloudFormationListExportsOutputExports {
  ExportingStackId: String
  Name: String
  Value: String
}

input AwsCloudFormationListImportsInput {
  ExportName: String!
  NextToken: String
}

type AwsCloudFormationListImportsOutput {
  Imports: [String]
  NextToken: String
}

input AwsCloudFormationListStackInstancesInput {
  StackSetName: String!
  NextToken: String
  MaxResults: Int
  StackInstanceAccount: String
  StackInstanceRegion: String
}

type AwsCloudFormationListStackInstancesOutput {
  Summaries: [AwsCloudFormationListStackInstancesOutputSummaries]
  NextToken: String
}

type AwsCloudFormationListStackInstancesOutputSummaries {
  StackSetId: String
  Region: String
  Account: String
  StackId: String
  Status: String
  StatusReason: String
}

input AwsCloudFormationListStackResourcesInput {
  StackName: String!
  NextToken: String
}

type AwsCloudFormationListStackResourcesOutput {
  StackResourceSummaries: [AwsCloudFormationListStackResourcesOutputStackResourceSummaries]
  NextToken: String
}

type AwsCloudFormationListStackResourcesOutputStackResourceSummaries {
  LogicalResourceId: String!
  PhysicalResourceId: String
  ResourceType: String!
  LastUpdatedTimestamp: Date!
  ResourceStatus: String!
  ResourceStatusReason: String
  DriftInformation: AwsCloudFormationListStackResourcesOutputStackResourceSummariesDriftInformation
}

type AwsCloudFormationListStackResourcesOutputStackResourceSummariesDriftInformation {
  StackResourceDriftStatus: String!
  LastCheckTimestamp: Date
}

input AwsCloudFormationListStackSetOperationResultsInput {
  StackSetName: String!
  OperationId: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudFormationListStackSetOperationResultsOutput {
  Summaries: [AwsCloudFormationListStackSetOperationResultsOutputSummaries]
  NextToken: String
}

type AwsCloudFormationListStackSetOperationResultsOutputSummaries {
  Account: String
  Region: String
  Status: String
  StatusReason: String
  AccountGateResult: AwsCloudFormationListStackSetOperationResultsOutputSummariesAccountGateResult
}

type AwsCloudFormationListStackSetOperationResultsOutputSummariesAccountGateResult {
  Status: String
  StatusReason: String
}

input AwsCloudFormationListStackSetOperationsInput {
  StackSetName: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudFormationListStackSetOperationsOutput {
  Summaries: [AwsCloudFormationListStackSetOperationsOutputSummaries]
  NextToken: String
}

type AwsCloudFormationListStackSetOperationsOutputSummaries {
  OperationId: String
  Action: String
  Status: String
  CreationTimestamp: Date
  EndTimestamp: Date
}

input AwsCloudFormationListStackSetsInput {
  NextToken: String
  MaxResults: Int
  Status: String
}

type AwsCloudFormationListStackSetsOutput {
  Summaries: [AwsCloudFormationListStackSetsOutputSummaries]
  NextToken: String
}

type AwsCloudFormationListStackSetsOutputSummaries {
  StackSetName: String
  StackSetId: String
  Description: String
  Status: String
}

input AwsCloudFormationListStacksInput {
  NextToken: String
  StackStatusFilter: [String]
}

type AwsCloudFormationListStacksOutput {
  StackSummaries: [AwsCloudFormationListStacksOutputStackSummaries]
  NextToken: String
}

type AwsCloudFormationListStacksOutputStackSummaries {
  StackId: String
  StackName: String!
  TemplateDescription: String
  CreationTime: Date!
  LastUpdatedTime: Date
  DeletionTime: Date
  StackStatus: String!
  StackStatusReason: String
  ParentId: String
  RootId: String
  DriftInformation: AwsCloudFormationListStacksOutputStackSummariesDriftInformation
}

type AwsCloudFormationListStacksOutputStackSummariesDriftInformation {
  StackDriftStatus: String!
  LastCheckTimestamp: Date
}

type AwsCloudFormationS1k {
  RegionOrder: [String]
  FailureToleranceCount: Int
  FailureTolerancePercentage: Int
  MaxConcurrentCount: Int
  MaxConcurrentPercentage: Int
}

input AwsCloudFormationS1kInput {
  RegionOrder: [String]
  FailureToleranceCount: Int
  FailureTolerancePercentage: Int
  MaxConcurrentCount: Int
  MaxConcurrentPercentage: Int
}

type AwsCloudFormationS3o {
  StackResourceDriftStatus: String!
  LastCheckTimestamp: Date
}

type AwsCloudFormationS3v {
  StackId: String!
  LogicalResourceId: String!
  PhysicalResourceId: String
  PhysicalResourceIdContext: [AwsCloudFormationS3vPhysicalResourceIdContext]
  ResourceType: String!
  ExpectedProperties: String
  ActualProperties: String
  PropertyDifferences: [AwsCloudFormationS3vPropertyDifferences]
  StackResourceDriftStatus: String!
  Timestamp: Date!
}

type AwsCloudFormationS3vPhysicalResourceIdContext {
  Key: String!
  Value: String!
}

type AwsCloudFormationS3vPropertyDifferences {
  PropertyPath: String!
  ExpectedValue: String!
  ActualValue: String!
  DifferenceType: String!
}

type AwsCloudFormationSe {
  ParameterKey: String
  ParameterValue: String
  UsePreviousValue: Boolean
  ResolvedValue: String
}

input AwsCloudFormationSeInput {
  ParameterKey: String
  ParameterValue: String
  UsePreviousValue: Boolean
  ResolvedValue: String
}

input AwsCloudFormationSetStackPolicyInput {
  StackName: String!
  StackPolicyBody: String
  StackPolicyURL: String
}

input AwsCloudFormationSignalResourceInput {
  StackName: String!
  LogicalResourceId: String!
  UniqueId: String!
  Status: String!
}

type AwsCloudFormationSn {
  RollbackTriggers: [AwsCloudFormationSnRollbackTriggers]
  MonitoringTimeInMinutes: Int
}

input AwsCloudFormationSnInput {
  RollbackTriggers: [AwsCloudFormationSnRollbackTriggersInput]
  MonitoringTimeInMinutes: Int
}

type AwsCloudFormationSnRollbackTriggers {
  Arn: String!
  Type: String!
}

input AwsCloudFormationSnRollbackTriggersInput {
  Arn: String!
  Type: String!
}

input AwsCloudFormationStopStackSetOperationInput {
  StackSetName: String!
  OperationId: String!
}

type AwsCloudFormationSv {
  Key: String!
  Value: String!
}

input AwsCloudFormationSvInput {
  Key: String!
  Value: String!
}

input AwsCloudFormationUpdateStackInput {
  StackName: String!
  TemplateBody: String
  TemplateURL: String
  UsePreviousTemplate: Boolean
  StackPolicyDuringUpdateBody: String
  StackPolicyDuringUpdateURL: String
  Parameters: [AwsCloudFormationSeInput]
  Capabilities: [String]
  ResourceTypes: [String]
  RoleARN: String
  RollbackConfiguration: AwsCloudFormationSnInput
  StackPolicyBody: String
  StackPolicyURL: String
  NotificationARNs: [String]
  Tags: [AwsCloudFormationSvInput]
  ClientRequestToken: String
}

input AwsCloudFormationUpdateStackInstancesInput {
  StackSetName: String!
  Accounts: [String]!
  Regions: [String]!
  ParameterOverrides: [AwsCloudFormationSeInput]
  OperationPreferences: AwsCloudFormationS1kInput
  OperationId: String
}

type AwsCloudFormationUpdateStackInstancesOutput {
  OperationId: String
}

type AwsCloudFormationUpdateStackOutput {
  StackId: String
}

input AwsCloudFormationUpdateStackSetInput {
  StackSetName: String!
  Description: String
  TemplateBody: String
  TemplateURL: String
  UsePreviousTemplate: Boolean
  Parameters: [AwsCloudFormationSeInput]
  Capabilities: [String]
  Tags: [AwsCloudFormationSvInput]
  OperationPreferences: AwsCloudFormationS1kInput
  AdministrationRoleARN: String
  ExecutionRoleName: String
  OperationId: String
  Accounts: [String]
  Regions: [String]
}

type AwsCloudFormationUpdateStackSetOutput {
  OperationId: String
}

input AwsCloudFormationUpdateTerminationProtectionInput {
  EnableTerminationProtection: Boolean!
  StackName: String!
}

type AwsCloudFormationUpdateTerminationProtectionOutput {
  StackId: String
}

input AwsCloudFormationValidateTemplateInput {
  TemplateBody: String
  TemplateURL: String
}

type AwsCloudFormationValidateTemplateOutput {
  Parameters: [AwsCloudFormationValidateTemplateOutputParameters]
  Description: String
  Capabilities: [String]
  CapabilitiesReason: String
  DeclaredTransforms: [String]
}

type AwsCloudFormationValidateTemplateOutputParameters {
  ParameterKey: String
  DefaultValue: String
  NoEcho: Boolean
  Description: String
}

"""Amazon CloudFront (2019-03-26)"""
type AwsCloudFront {
  createCloudFrontOriginAccessIdentity(input: AwsCloudFrontCreateCloudFrontOriginAccessIdentityInput!, config: AwsConfig): AwsCloudFrontCreateCloudFrontOriginAccessIdentityOutput
  createDistribution(input: AwsCloudFrontCreateDistributionInput!, config: AwsConfig): AwsCloudFrontCreateDistributionOutput
  createDistributionWithTags(input: AwsCloudFrontCreateDistributionWithTagsInput!, config: AwsConfig): AwsCloudFrontCreateDistributionWithTagsOutput
  createFieldLevelEncryptionConfig(input: AwsCloudFrontCreateFieldLevelEncryptionConfigInput!, config: AwsConfig): AwsCloudFrontCreateFieldLevelEncryptionConfigOutput
  createFieldLevelEncryptionProfile(input: AwsCloudFrontCreateFieldLevelEncryptionProfileInput!, config: AwsConfig): AwsCloudFrontCreateFieldLevelEncryptionProfileOutput
  createInvalidation(input: AwsCloudFrontCreateInvalidationInput!, config: AwsConfig): AwsCloudFrontCreateInvalidationOutput
  createPublicKey(input: AwsCloudFrontCreatePublicKeyInput!, config: AwsConfig): AwsCloudFrontCreatePublicKeyOutput
  createStreamingDistribution(input: AwsCloudFrontCreateStreamingDistributionInput!, config: AwsConfig): AwsCloudFrontCreateStreamingDistributionOutput
  createStreamingDistributionWithTags(input: AwsCloudFrontCreateStreamingDistributionWithTagsInput!, config: AwsConfig): AwsCloudFrontCreateStreamingDistributionWithTagsOutput
  deleteCloudFrontOriginAccessIdentity(input: AwsCloudFrontDeleteCloudFrontOriginAccessIdentityInput!, config: AwsConfig): JSON
  deleteDistribution(input: AwsCloudFrontDeleteDistributionInput!, config: AwsConfig): JSON
  deleteFieldLevelEncryptionConfig(input: AwsCloudFrontDeleteFieldLevelEncryptionConfigInput!, config: AwsConfig): JSON
  deleteFieldLevelEncryptionProfile(input: AwsCloudFrontDeleteFieldLevelEncryptionProfileInput!, config: AwsConfig): JSON
  deletePublicKey(input: AwsCloudFrontDeletePublicKeyInput!, config: AwsConfig): JSON
  deleteStreamingDistribution(input: AwsCloudFrontDeleteStreamingDistributionInput!, config: AwsConfig): JSON
  getCloudFrontOriginAccessIdentity(input: AwsCloudFrontGetCloudFrontOriginAccessIdentityInput!, config: AwsConfig): AwsCloudFrontGetCloudFrontOriginAccessIdentityOutput
  getCloudFrontOriginAccessIdentityConfig(input: AwsCloudFrontGetCloudFrontOriginAccessIdentityConfigInput!, config: AwsConfig): AwsCloudFrontGetCloudFrontOriginAccessIdentityConfigOutput
  getDistribution(input: AwsCloudFrontGetDistributionInput!, config: AwsConfig): AwsCloudFrontGetDistributionOutput
  getDistributionConfig(input: AwsCloudFrontGetDistributionConfigInput!, config: AwsConfig): AwsCloudFrontGetDistributionConfigOutput
  getFieldLevelEncryption(input: AwsCloudFrontGetFieldLevelEncryptionInput!, config: AwsConfig): AwsCloudFrontGetFieldLevelEncryptionOutput
  getFieldLevelEncryptionConfig(input: AwsCloudFrontGetFieldLevelEncryptionConfigInput!, config: AwsConfig): AwsCloudFrontGetFieldLevelEncryptionConfigOutput
  getFieldLevelEncryptionProfile(input: AwsCloudFrontGetFieldLevelEncryptionProfileInput!, config: AwsConfig): AwsCloudFrontGetFieldLevelEncryptionProfileOutput
  getFieldLevelEncryptionProfileConfig(input: AwsCloudFrontGetFieldLevelEncryptionProfileConfigInput!, config: AwsConfig): AwsCloudFrontGetFieldLevelEncryptionProfileConfigOutput
  getInvalidation(input: AwsCloudFrontGetInvalidationInput!, config: AwsConfig): AwsCloudFrontGetInvalidationOutput
  getPublicKey(input: AwsCloudFrontGetPublicKeyInput!, config: AwsConfig): AwsCloudFrontGetPublicKeyOutput
  getPublicKeyConfig(input: AwsCloudFrontGetPublicKeyConfigInput!, config: AwsConfig): AwsCloudFrontGetPublicKeyConfigOutput
  getStreamingDistribution(input: AwsCloudFrontGetStreamingDistributionInput!, config: AwsConfig): AwsCloudFrontGetStreamingDistributionOutput
  getStreamingDistributionConfig(input: AwsCloudFrontGetStreamingDistributionConfigInput!, config: AwsConfig): AwsCloudFrontGetStreamingDistributionConfigOutput
  listCloudFrontOriginAccessIdentities(input: AwsCloudFrontListCloudFrontOriginAccessIdentitiesInput, config: AwsConfig): AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutput
  listDistributions(input: AwsCloudFrontListDistributionsInput, config: AwsConfig): AwsCloudFrontListDistributionsOutput
  listDistributionsByWebACLId(input: AwsCloudFrontListDistributionsByWebACLIdInput!, config: AwsConfig): AwsCloudFrontListDistributionsByWebACLIdOutput
  listFieldLevelEncryptionConfigs(input: AwsCloudFrontListFieldLevelEncryptionConfigsInput, config: AwsConfig): AwsCloudFrontListFieldLevelEncryptionConfigsOutput
  listFieldLevelEncryptionProfiles(input: AwsCloudFrontListFieldLevelEncryptionProfilesInput, config: AwsConfig): AwsCloudFrontListFieldLevelEncryptionProfilesOutput
  listInvalidations(input: AwsCloudFrontListInvalidationsInput!, config: AwsConfig): AwsCloudFrontListInvalidationsOutput
  listPublicKeys(input: AwsCloudFrontListPublicKeysInput, config: AwsConfig): AwsCloudFrontListPublicKeysOutput
  listStreamingDistributions(input: AwsCloudFrontListStreamingDistributionsInput, config: AwsConfig): AwsCloudFrontListStreamingDistributionsOutput
  listTagsForResource(input: AwsCloudFrontListTagsForResourceInput!, config: AwsConfig): AwsCloudFrontListTagsForResourceOutput
  tagResource(input: AwsCloudFrontTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsCloudFrontUntagResourceInput!, config: AwsConfig): JSON
  updateCloudFrontOriginAccessIdentity(input: AwsCloudFrontUpdateCloudFrontOriginAccessIdentityInput!, config: AwsConfig): AwsCloudFrontUpdateCloudFrontOriginAccessIdentityOutput
  updateDistribution(input: AwsCloudFrontUpdateDistributionInput!, config: AwsConfig): AwsCloudFrontUpdateDistributionOutput
  updateFieldLevelEncryptionConfig(input: AwsCloudFrontUpdateFieldLevelEncryptionConfigInput!, config: AwsConfig): AwsCloudFrontUpdateFieldLevelEncryptionConfigOutput
  updateFieldLevelEncryptionProfile(input: AwsCloudFrontUpdateFieldLevelEncryptionProfileInput!, config: AwsConfig): AwsCloudFrontUpdateFieldLevelEncryptionProfileOutput
  updatePublicKey(input: AwsCloudFrontUpdatePublicKeyInput!, config: AwsConfig): AwsCloudFrontUpdatePublicKeyOutput
  updateStreamingDistribution(input: AwsCloudFrontUpdateStreamingDistributionInput!, config: AwsConfig): AwsCloudFrontUpdateStreamingDistributionOutput
}

input AwsCloudFrontCreateCloudFrontOriginAccessIdentityInput {
  CloudFrontOriginAccessIdentityConfig: AwsCloudFrontS2Input!
}

type AwsCloudFrontCreateCloudFrontOriginAccessIdentityOutput {
  CloudFrontOriginAccessIdentity: AwsCloudFrontS5
  Location: String
  ETag: String
}

input AwsCloudFrontCreateDistributionInput {
  DistributionConfig: AwsCloudFrontS7Input!
}

type AwsCloudFrontCreateDistributionOutput {
  Distribution: AwsCloudFrontS23
  Location: String
  ETag: String
}

input AwsCloudFrontCreateDistributionWithTagsDistributionConfigWithTagsInput {
  DistributionConfig: AwsCloudFrontS7Input!
  Tags: AwsCloudFrontS2fInput!
}

input AwsCloudFrontCreateDistributionWithTagsInput {
  DistributionConfigWithTags: AwsCloudFrontCreateDistributionWithTagsDistributionConfigWithTagsInput!
}

type AwsCloudFrontCreateDistributionWithTagsOutput {
  Distribution: AwsCloudFrontS23
  Location: String
  ETag: String
}

input AwsCloudFrontCreateFieldLevelEncryptionConfigInput {
  FieldLevelEncryptionConfig: AwsCloudFrontS2mInput!
}

type AwsCloudFrontCreateFieldLevelEncryptionConfigOutput {
  FieldLevelEncryption: AwsCloudFrontS2x
  Location: String
  ETag: String
}

input AwsCloudFrontCreateFieldLevelEncryptionProfileInput {
  FieldLevelEncryptionProfileConfig: AwsCloudFrontS2zInput!
}

type AwsCloudFrontCreateFieldLevelEncryptionProfileOutput {
  FieldLevelEncryptionProfile: AwsCloudFrontS36
  Location: String
  ETag: String
}

input AwsCloudFrontCreateInvalidationInput {
  DistributionId: String!
  InvalidationBatch: AwsCloudFrontS38Input!
}

type AwsCloudFrontCreateInvalidationOutput {
  Location: String
  Invalidation: AwsCloudFrontS3c
}

input AwsCloudFrontCreatePublicKeyInput {
  PublicKeyConfig: AwsCloudFrontS3eInput!
}

type AwsCloudFrontCreatePublicKeyOutput {
  PublicKey: AwsCloudFrontS3g
  Location: String
  ETag: String
}

input AwsCloudFrontCreateStreamingDistributionInput {
  StreamingDistributionConfig: AwsCloudFrontS3iInput!
}

type AwsCloudFrontCreateStreamingDistributionOutput {
  StreamingDistribution: AwsCloudFrontS3m
  Location: String
  ETag: String
}

input AwsCloudFrontCreateStreamingDistributionWithTagsInput {
  StreamingDistributionConfigWithTags: AwsCloudFrontCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsInput!
}

type AwsCloudFrontCreateStreamingDistributionWithTagsOutput {
  StreamingDistribution: AwsCloudFrontS3m
  Location: String
  ETag: String
}

input AwsCloudFrontCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsInput {
  StreamingDistributionConfig: AwsCloudFrontS3iInput!
  Tags: AwsCloudFrontS2fInput!
}

input AwsCloudFrontDeleteCloudFrontOriginAccessIdentityInput {
  Id: String!
  IfMatch: String
}

input AwsCloudFrontDeleteDistributionInput {
  Id: String!
  IfMatch: String
}

input AwsCloudFrontDeleteFieldLevelEncryptionConfigInput {
  Id: String!
  IfMatch: String
}

input AwsCloudFrontDeleteFieldLevelEncryptionProfileInput {
  Id: String!
  IfMatch: String
}

input AwsCloudFrontDeletePublicKeyInput {
  Id: String!
  IfMatch: String
}

input AwsCloudFrontDeleteStreamingDistributionInput {
  Id: String!
  IfMatch: String
}

input AwsCloudFrontGetCloudFrontOriginAccessIdentityConfigInput {
  Id: String!
}

type AwsCloudFrontGetCloudFrontOriginAccessIdentityConfigOutput {
  CloudFrontOriginAccessIdentityConfig: AwsCloudFrontS2
  ETag: String
}

input AwsCloudFrontGetCloudFrontOriginAccessIdentityInput {
  Id: String!
}

type AwsCloudFrontGetCloudFrontOriginAccessIdentityOutput {
  CloudFrontOriginAccessIdentity: AwsCloudFrontS5
  ETag: String
}

input AwsCloudFrontGetDistributionConfigInput {
  Id: String!
}

type AwsCloudFrontGetDistributionConfigOutput {
  DistributionConfig: AwsCloudFrontS7
  ETag: String
}

input AwsCloudFrontGetDistributionInput {
  Id: String!
}

type AwsCloudFrontGetDistributionOutput {
  Distribution: AwsCloudFrontS23
  ETag: String
}

input AwsCloudFrontGetFieldLevelEncryptionConfigInput {
  Id: String!
}

type AwsCloudFrontGetFieldLevelEncryptionConfigOutput {
  FieldLevelEncryptionConfig: AwsCloudFrontS2m
  ETag: String
}

input AwsCloudFrontGetFieldLevelEncryptionInput {
  Id: String!
}

type AwsCloudFrontGetFieldLevelEncryptionOutput {
  FieldLevelEncryption: AwsCloudFrontS2x
  ETag: String
}

input AwsCloudFrontGetFieldLevelEncryptionProfileConfigInput {
  Id: String!
}

type AwsCloudFrontGetFieldLevelEncryptionProfileConfigOutput {
  FieldLevelEncryptionProfileConfig: AwsCloudFrontS2z
  ETag: String
}

input AwsCloudFrontGetFieldLevelEncryptionProfileInput {
  Id: String!
}

type AwsCloudFrontGetFieldLevelEncryptionProfileOutput {
  FieldLevelEncryptionProfile: AwsCloudFrontS36
  ETag: String
}

input AwsCloudFrontGetInvalidationInput {
  DistributionId: String!
  Id: String!
}

type AwsCloudFrontGetInvalidationOutput {
  Invalidation: AwsCloudFrontS3c
}

input AwsCloudFrontGetPublicKeyConfigInput {
  Id: String!
}

type AwsCloudFrontGetPublicKeyConfigOutput {
  PublicKeyConfig: AwsCloudFrontS3e
  ETag: String
}

input AwsCloudFrontGetPublicKeyInput {
  Id: String!
}

type AwsCloudFrontGetPublicKeyOutput {
  PublicKey: AwsCloudFrontS3g
  ETag: String
}

input AwsCloudFrontGetStreamingDistributionConfigInput {
  Id: String!
}

type AwsCloudFrontGetStreamingDistributionConfigOutput {
  StreamingDistributionConfig: AwsCloudFrontS3i
  ETag: String
}

input AwsCloudFrontGetStreamingDistributionInput {
  Id: String!
}

type AwsCloudFrontGetStreamingDistributionOutput {
  StreamingDistribution: AwsCloudFrontS3m
  ETag: String
}

input AwsCloudFrontListCloudFrontOriginAccessIdentitiesInput {
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutput {
  CloudFrontOriginAccessIdentityList: AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityList
}

type AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityList {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityListItems]
}

type AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityListItems {
  Id: String!
  S3CanonicalUserId: String!
  Comment: String!
}

input AwsCloudFrontListDistributionsByWebACLIdInput {
  Marker: String
  MaxItems: String
  WebACLId: String!
}

type AwsCloudFrontListDistributionsByWebACLIdOutput {
  DistributionList: AwsCloudFrontS4t
}

input AwsCloudFrontListDistributionsInput {
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListDistributionsOutput {
  DistributionList: AwsCloudFrontS4t
}

input AwsCloudFrontListFieldLevelEncryptionConfigsInput {
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListFieldLevelEncryptionConfigsOutput {
  FieldLevelEncryptionList: AwsCloudFrontListFieldLevelEncryptionConfigsOutputFieldLevelEncryptionList
}

type AwsCloudFrontListFieldLevelEncryptionConfigsOutputFieldLevelEncryptionList {
  NextMarker: String
  MaxItems: Int!
  Quantity: Int!
  Items: [AwsCloudFrontListFieldLevelEncryptionConfigsOutputFieldLevelEncryptionListItems]
}

type AwsCloudFrontListFieldLevelEncryptionConfigsOutputFieldLevelEncryptionListItems {
  Id: String!
  LastModifiedTime: Date!
  Comment: String
  QueryArgProfileConfig: AwsCloudFrontS2n
  ContentTypeProfileConfig: AwsCloudFrontS2r
}

input AwsCloudFrontListFieldLevelEncryptionProfilesInput {
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListFieldLevelEncryptionProfilesOutput {
  FieldLevelEncryptionProfileList: AwsCloudFrontListFieldLevelEncryptionProfilesOutputFieldLevelEncryptionProfileList
}

type AwsCloudFrontListFieldLevelEncryptionProfilesOutputFieldLevelEncryptionProfileList {
  NextMarker: String
  MaxItems: Int!
  Quantity: Int!
  Items: [AwsCloudFrontListFieldLevelEncryptionProfilesOutputFieldLevelEncryptionProfileListItems]
}

type AwsCloudFrontListFieldLevelEncryptionProfilesOutputFieldLevelEncryptionProfileListItems {
  Id: String!
  LastModifiedTime: Date!
  Name: String!
  EncryptionEntities: AwsCloudFrontS30!
  Comment: String
}

input AwsCloudFrontListInvalidationsInput {
  DistributionId: String!
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListInvalidationsOutput {
  InvalidationList: AwsCloudFrontListInvalidationsOutputInvalidationList
}

type AwsCloudFrontListInvalidationsOutputInvalidationList {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudFrontListInvalidationsOutputInvalidationListItems]
}

type AwsCloudFrontListInvalidationsOutputInvalidationListItems {
  Id: String!
  CreateTime: Date!
  Status: String!
}

input AwsCloudFrontListPublicKeysInput {
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListPublicKeysOutput {
  PublicKeyList: AwsCloudFrontListPublicKeysOutputPublicKeyList
}

type AwsCloudFrontListPublicKeysOutputPublicKeyList {
  NextMarker: String
  MaxItems: Int!
  Quantity: Int!
  Items: [AwsCloudFrontListPublicKeysOutputPublicKeyListItems]
}

type AwsCloudFrontListPublicKeysOutputPublicKeyListItems {
  Id: String!
  Name: String!
  CreatedTime: Date!
  EncodedKey: String!
  Comment: String
}

input AwsCloudFrontListStreamingDistributionsInput {
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListStreamingDistributionsOutput {
  StreamingDistributionList: AwsCloudFrontListStreamingDistributionsOutputStreamingDistributionList
}

type AwsCloudFrontListStreamingDistributionsOutputStreamingDistributionList {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudFrontListStreamingDistributionsOutputStreamingDistributionListItems]
}

type AwsCloudFrontListStreamingDistributionsOutputStreamingDistributionListItems {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date!
  DomainName: String!
  S3Origin: AwsCloudFrontS3j!
  Aliases: AwsCloudFrontS8!
  TrustedSigners: AwsCloudFrontS17!
  Comment: String!
  PriceClass: String!
  Enabled: Boolean!
}

input AwsCloudFrontListTagsForResourceInput {
  Resource: String!
}

type AwsCloudFrontListTagsForResourceOutput {
  Tags: AwsCloudFrontS2f!
}

type AwsCloudFrontS17 {
  Enabled: Boolean!
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS17Input {
  Enabled: Boolean!
  Quantity: Int!
  Items: [String]
}

type AwsCloudFrontS1b {
  Quantity: Int!
  Items: [String]!
  CachedMethods: AwsCloudFrontS1bCachedMethods
}

type AwsCloudFrontS1bCachedMethods {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudFrontS1bCachedMethodsInput {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudFrontS1bInput {
  Quantity: Int!
  Items: [String]!
  CachedMethods: AwsCloudFrontS1bCachedMethodsInput
}

type AwsCloudFrontS1f {
  Quantity: Int!
  Items: [AwsCloudFrontS1fItems]
}

input AwsCloudFrontS1fInput {
  Quantity: Int!
  Items: [AwsCloudFrontS1fItemsInput]
}

type AwsCloudFrontS1fItems {
  LambdaFunctionARN: String!
  EventType: String!
  IncludeBody: Boolean
}

input AwsCloudFrontS1fItemsInput {
  LambdaFunctionARN: String!
  EventType: String!
  IncludeBody: Boolean
}

type AwsCloudFrontS1k {
  Quantity: Int!
  Items: [AwsCloudFrontS1kItems]
}

input AwsCloudFrontS1kInput {
  Quantity: Int!
  Items: [AwsCloudFrontS1kItemsInput]
}

type AwsCloudFrontS1kItems {
  PathPattern: String!
  TargetOriginId: String!
  ForwardedValues: AwsCloudFrontSx!
  TrustedSigners: AwsCloudFrontS17!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudFrontS1b
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudFrontS1f
  FieldLevelEncryptionId: String
}

input AwsCloudFrontS1kItemsInput {
  PathPattern: String!
  TargetOriginId: String!
  ForwardedValues: AwsCloudFrontSxInput!
  TrustedSigners: AwsCloudFrontS17Input!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudFrontS1bInput
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudFrontS1fInput
  FieldLevelEncryptionId: String
}

type AwsCloudFrontS1n {
  Quantity: Int!
  Items: [AwsCloudFrontS1nItems]
}

input AwsCloudFrontS1nInput {
  Quantity: Int!
  Items: [AwsCloudFrontS1nItemsInput]
}

type AwsCloudFrontS1nItems {
  ErrorCode: Int!
  ResponsePagePath: String
  ResponseCode: String
  ErrorCachingMinTTL: JSON
}

input AwsCloudFrontS1nItemsInput {
  ErrorCode: Int!
  ResponsePagePath: String
  ResponseCode: String
  ErrorCachingMinTTL: JSON
}

type AwsCloudFrontS1t {
  CloudFrontDefaultCertificate: Boolean
  IAMCertificateId: String
  ACMCertificateArn: String
  SSLSupportMethod: String
  MinimumProtocolVersion: String
  Certificate: String
  CertificateSource: String
}

input AwsCloudFrontS1tInput {
  CloudFrontDefaultCertificate: Boolean
  IAMCertificateId: String
  ACMCertificateArn: String
  SSLSupportMethod: String
  MinimumProtocolVersion: String
  Certificate: String
  CertificateSource: String
}

type AwsCloudFrontS1x {
  GeoRestriction: AwsCloudFrontS1xGeoRestriction!
}

type AwsCloudFrontS1xGeoRestriction {
  RestrictionType: String!
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS1xGeoRestrictionInput {
  RestrictionType: String!
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS1xInput {
  GeoRestriction: AwsCloudFrontS1xGeoRestrictionInput!
}

type AwsCloudFrontS2 {
  CallerReference: String!
  Comment: String!
}

type AwsCloudFrontS23 {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date!
  InProgressInvalidationBatches: Int!
  DomainName: String!
  ActiveTrustedSigners: AwsCloudFrontS25!
  DistributionConfig: AwsCloudFrontS7!
  AliasICPRecordals: [AwsCloudFrontS2a]
}

type AwsCloudFrontS25 {
  Enabled: Boolean!
  Quantity: Int!
  Items: [AwsCloudFrontS25Items]
}

type AwsCloudFrontS25Items {
  AwsAccountNumber: String
  KeyPairIds: AwsCloudFrontS25ItemsKeyPairIds
}

type AwsCloudFrontS25ItemsKeyPairIds {
  Quantity: Int!
  Items: [String]
}

type AwsCloudFrontS2a {
  CNAME: String
  ICPRecordalStatus: String
}

type AwsCloudFrontS2f {
  Items: [AwsCloudFrontS2fItems]
}

input AwsCloudFrontS2fInput {
  Items: [AwsCloudFrontS2fItemsInput]
}

type AwsCloudFrontS2fItems {
  Key: String!
  Value: String
}

input AwsCloudFrontS2fItemsInput {
  Key: String!
  Value: String
}

input AwsCloudFrontS2Input {
  CallerReference: String!
  Comment: String!
}

type AwsCloudFrontS2m {
  CallerReference: String!
  Comment: String
  QueryArgProfileConfig: AwsCloudFrontS2n
  ContentTypeProfileConfig: AwsCloudFrontS2r
}

input AwsCloudFrontS2mInput {
  CallerReference: String!
  Comment: String
  QueryArgProfileConfig: AwsCloudFrontS2nInput
  ContentTypeProfileConfig: AwsCloudFrontS2rInput
}

type AwsCloudFrontS2n {
  ForwardWhenQueryArgProfileIsUnknown: Boolean!
  QueryArgProfiles: AwsCloudFrontS2nQueryArgProfiles
}

input AwsCloudFrontS2nInput {
  ForwardWhenQueryArgProfileIsUnknown: Boolean!
  QueryArgProfiles: AwsCloudFrontS2nQueryArgProfilesInput
}

type AwsCloudFrontS2nQueryArgProfiles {
  Quantity: Int!
  Items: [AwsCloudFrontS2nQueryArgProfilesItems]
}

input AwsCloudFrontS2nQueryArgProfilesInput {
  Quantity: Int!
  Items: [AwsCloudFrontS2nQueryArgProfilesItemsInput]
}

type AwsCloudFrontS2nQueryArgProfilesItems {
  QueryArg: String!
  ProfileId: String!
}

input AwsCloudFrontS2nQueryArgProfilesItemsInput {
  QueryArg: String!
  ProfileId: String!
}

type AwsCloudFrontS2r {
  ForwardWhenContentTypeIsUnknown: Boolean!
  ContentTypeProfiles: AwsCloudFrontS2rContentTypeProfiles
}

type AwsCloudFrontS2rContentTypeProfiles {
  Quantity: Int!
  Items: [AwsCloudFrontS2rContentTypeProfilesItems]
}

input AwsCloudFrontS2rContentTypeProfilesInput {
  Quantity: Int!
  Items: [AwsCloudFrontS2rContentTypeProfilesItemsInput]
}

type AwsCloudFrontS2rContentTypeProfilesItems {
  Format: String!
  ProfileId: String
  ContentType: String!
}

input AwsCloudFrontS2rContentTypeProfilesItemsInput {
  Format: String!
  ProfileId: String
  ContentType: String!
}

input AwsCloudFrontS2rInput {
  ForwardWhenContentTypeIsUnknown: Boolean!
  ContentTypeProfiles: AwsCloudFrontS2rContentTypeProfilesInput
}

type AwsCloudFrontS2x {
  Id: String!
  LastModifiedTime: Date!
  FieldLevelEncryptionConfig: AwsCloudFrontS2m!
}

type AwsCloudFrontS2z {
  Name: String!
  CallerReference: String!
  Comment: String
  EncryptionEntities: AwsCloudFrontS30!
}

input AwsCloudFrontS2zInput {
  Name: String!
  CallerReference: String!
  Comment: String
  EncryptionEntities: AwsCloudFrontS30Input!
}

type AwsCloudFrontS30 {
  Quantity: Int!
  Items: [AwsCloudFrontS30Items]
}

input AwsCloudFrontS30Input {
  Quantity: Int!
  Items: [AwsCloudFrontS30ItemsInput]
}

type AwsCloudFrontS30Items {
  PublicKeyId: String!
  ProviderId: String!
  FieldPatterns: AwsCloudFrontS30ItemsFieldPatterns!
}

type AwsCloudFrontS30ItemsFieldPatterns {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS30ItemsFieldPatternsInput {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS30ItemsInput {
  PublicKeyId: String!
  ProviderId: String!
  FieldPatterns: AwsCloudFrontS30ItemsFieldPatternsInput!
}

type AwsCloudFrontS36 {
  Id: String!
  LastModifiedTime: Date!
  FieldLevelEncryptionProfileConfig: AwsCloudFrontS2z!
}

type AwsCloudFrontS38 {
  Paths: AwsCloudFrontS38Paths!
  CallerReference: String!
}

input AwsCloudFrontS38Input {
  Paths: AwsCloudFrontS38PathsInput!
  CallerReference: String!
}

type AwsCloudFrontS38Paths {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS38PathsInput {
  Quantity: Int!
  Items: [String]
}

type AwsCloudFrontS3c {
  Id: String!
  Status: String!
  CreateTime: Date!
  InvalidationBatch: AwsCloudFrontS38!
}

type AwsCloudFrontS3e {
  CallerReference: String!
  Name: String!
  EncodedKey: String!
  Comment: String
}

input AwsCloudFrontS3eInput {
  CallerReference: String!
  Name: String!
  EncodedKey: String!
  Comment: String
}

type AwsCloudFrontS3g {
  Id: String!
  CreatedTime: Date!
  PublicKeyConfig: AwsCloudFrontS3e!
}

type AwsCloudFrontS3i {
  CallerReference: String!
  S3Origin: AwsCloudFrontS3j!
  Aliases: AwsCloudFrontS8
  Comment: String!
  Logging: AwsCloudFrontS3iLogging
  TrustedSigners: AwsCloudFrontS17!
  PriceClass: String
  Enabled: Boolean!
}

input AwsCloudFrontS3iInput {
  CallerReference: String!
  S3Origin: AwsCloudFrontS3jInput!
  Aliases: AwsCloudFrontS8Input
  Comment: String!
  Logging: AwsCloudFrontS3iLoggingInput
  TrustedSigners: AwsCloudFrontS17Input!
  PriceClass: String
  Enabled: Boolean!
}

type AwsCloudFrontS3iLogging {
  Enabled: Boolean!
  Bucket: String!
  Prefix: String!
}

input AwsCloudFrontS3iLoggingInput {
  Enabled: Boolean!
  Bucket: String!
  Prefix: String!
}

type AwsCloudFrontS3j {
  DomainName: String!
  OriginAccessIdentity: String!
}

input AwsCloudFrontS3jInput {
  DomainName: String!
  OriginAccessIdentity: String!
}

type AwsCloudFrontS3m {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date
  DomainName: String!
  ActiveTrustedSigners: AwsCloudFrontS25!
  StreamingDistributionConfig: AwsCloudFrontS3i!
}

type AwsCloudFrontS4t {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudFrontS4tItems]
}

type AwsCloudFrontS4tItems {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date!
  DomainName: String!
  Aliases: AwsCloudFrontS8!
  Origins: AwsCloudFrontSb!
  OriginGroups: AwsCloudFrontSn
  DefaultCacheBehavior: AwsCloudFrontSw!
  CacheBehaviors: AwsCloudFrontS1k!
  CustomErrorResponses: AwsCloudFrontS1n!
  Comment: String!
  PriceClass: String!
  Enabled: Boolean!
  ViewerCertificate: AwsCloudFrontS1t!
  Restrictions: AwsCloudFrontS1x!
  WebACLId: String!
  HttpVersion: String!
  IsIPV6Enabled: Boolean!
  AliasICPRecordals: [AwsCloudFrontS2a]
}

type AwsCloudFrontS5 {
  Id: String!
  S3CanonicalUserId: String!
  CloudFrontOriginAccessIdentityConfig: AwsCloudFrontS2
}

type AwsCloudFrontS7 {
  CallerReference: String!
  Aliases: AwsCloudFrontS8
  DefaultRootObject: String
  Origins: AwsCloudFrontSb!
  OriginGroups: AwsCloudFrontSn
  DefaultCacheBehavior: AwsCloudFrontSw!
  CacheBehaviors: AwsCloudFrontS1k
  CustomErrorResponses: AwsCloudFrontS1n
  Comment: String!
  Logging: AwsCloudFrontS7Logging
  PriceClass: String
  Enabled: Boolean!
  ViewerCertificate: AwsCloudFrontS1t
  Restrictions: AwsCloudFrontS1x
  WebACLId: String
  HttpVersion: String
  IsIPV6Enabled: Boolean
}

input AwsCloudFrontS7Input {
  CallerReference: String!
  Aliases: AwsCloudFrontS8Input
  DefaultRootObject: String
  Origins: AwsCloudFrontSbInput!
  OriginGroups: AwsCloudFrontSnInput
  DefaultCacheBehavior: AwsCloudFrontSwInput!
  CacheBehaviors: AwsCloudFrontS1kInput
  CustomErrorResponses: AwsCloudFrontS1nInput
  Comment: String!
  Logging: AwsCloudFrontS7LoggingInput
  PriceClass: String
  Enabled: Boolean!
  ViewerCertificate: AwsCloudFrontS1tInput
  Restrictions: AwsCloudFrontS1xInput
  WebACLId: String
  HttpVersion: String
  IsIPV6Enabled: Boolean
}

type AwsCloudFrontS7Logging {
  Enabled: Boolean!
  IncludeCookies: Boolean!
  Bucket: String!
  Prefix: String!
}

input AwsCloudFrontS7LoggingInput {
  Enabled: Boolean!
  IncludeCookies: Boolean!
  Bucket: String!
  Prefix: String!
}

type AwsCloudFrontS8 {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS8Input {
  Quantity: Int!
  Items: [String]
}

type AwsCloudFrontSb {
  Quantity: Int!
  Items: [AwsCloudFrontSbItems]!
}

input AwsCloudFrontSbInput {
  Quantity: Int!
  Items: [AwsCloudFrontSbItemsInput]!
}

type AwsCloudFrontSbItems {
  Id: String!
  DomainName: String!
  OriginPath: String
  CustomHeaders: AwsCloudFrontSbItemsCustomHeaders
  S3OriginConfig: AwsCloudFrontSbItemsS3OriginConfig
  CustomOriginConfig: AwsCloudFrontSbItemsCustomOriginConfig
}

type AwsCloudFrontSbItemsCustomHeaders {
  Quantity: Int!
  Items: [AwsCloudFrontSbItemsCustomHeadersItems]
}

input AwsCloudFrontSbItemsCustomHeadersInput {
  Quantity: Int!
  Items: [AwsCloudFrontSbItemsCustomHeadersItemsInput]
}

type AwsCloudFrontSbItemsCustomHeadersItems {
  HeaderName: String!
  HeaderValue: String!
}

input AwsCloudFrontSbItemsCustomHeadersItemsInput {
  HeaderName: String!
  HeaderValue: String!
}

type AwsCloudFrontSbItemsCustomOriginConfig {
  HTTPPort: Int!
  HTTPSPort: Int!
  OriginProtocolPolicy: String!
  OriginSslProtocols: AwsCloudFrontSbItemsCustomOriginConfigOriginSslProtocols
  OriginReadTimeout: Int
  OriginKeepaliveTimeout: Int
}

input AwsCloudFrontSbItemsCustomOriginConfigInput {
  HTTPPort: Int!
  HTTPSPort: Int!
  OriginProtocolPolicy: String!
  OriginSslProtocols: AwsCloudFrontSbItemsCustomOriginConfigOriginSslProtocolsInput
  OriginReadTimeout: Int
  OriginKeepaliveTimeout: Int
}

type AwsCloudFrontSbItemsCustomOriginConfigOriginSslProtocols {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudFrontSbItemsCustomOriginConfigOriginSslProtocolsInput {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudFrontSbItemsInput {
  Id: String!
  DomainName: String!
  OriginPath: String
  CustomHeaders: AwsCloudFrontSbItemsCustomHeadersInput
  S3OriginConfig: AwsCloudFrontSbItemsS3OriginConfigInput
  CustomOriginConfig: AwsCloudFrontSbItemsCustomOriginConfigInput
}

type AwsCloudFrontSbItemsS3OriginConfig {
  OriginAccessIdentity: String!
}

input AwsCloudFrontSbItemsS3OriginConfigInput {
  OriginAccessIdentity: String!
}

type AwsCloudFrontSn {
  Quantity: Int!
  Items: [AwsCloudFrontSnItems]
}

input AwsCloudFrontSnInput {
  Quantity: Int!
  Items: [AwsCloudFrontSnItemsInput]
}

type AwsCloudFrontSnItems {
  Id: String!
  FailoverCriteria: AwsCloudFrontSnItemsFailoverCriteria!
  Members: AwsCloudFrontSnItemsMembers!
}

type AwsCloudFrontSnItemsFailoverCriteria {
  StatusCodes: AwsCloudFrontSnItemsFailoverCriteriaStatusCodes!
}

input AwsCloudFrontSnItemsFailoverCriteriaInput {
  StatusCodes: AwsCloudFrontSnItemsFailoverCriteriaStatusCodesInput!
}

type AwsCloudFrontSnItemsFailoverCriteriaStatusCodes {
  Quantity: Int!
  Items: [Int]!
}

input AwsCloudFrontSnItemsFailoverCriteriaStatusCodesInput {
  Quantity: Int!
  Items: [Int]!
}

input AwsCloudFrontSnItemsInput {
  Id: String!
  FailoverCriteria: AwsCloudFrontSnItemsFailoverCriteriaInput!
  Members: AwsCloudFrontSnItemsMembersInput!
}

type AwsCloudFrontSnItemsMembers {
  Quantity: Int!
  Items: [AwsCloudFrontSnItemsMembersItems]!
}

input AwsCloudFrontSnItemsMembersInput {
  Quantity: Int!
  Items: [AwsCloudFrontSnItemsMembersItemsInput]!
}

type AwsCloudFrontSnItemsMembersItems {
  OriginId: String!
}

input AwsCloudFrontSnItemsMembersItemsInput {
  OriginId: String!
}

type AwsCloudFrontSw {
  TargetOriginId: String!
  ForwardedValues: AwsCloudFrontSx!
  TrustedSigners: AwsCloudFrontS17!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudFrontS1b
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudFrontS1f
  FieldLevelEncryptionId: String
}

input AwsCloudFrontSwInput {
  TargetOriginId: String!
  ForwardedValues: AwsCloudFrontSxInput!
  TrustedSigners: AwsCloudFrontS17Input!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudFrontS1bInput
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudFrontS1fInput
  FieldLevelEncryptionId: String
}

type AwsCloudFrontSx {
  QueryString: Boolean!
  Cookies: AwsCloudFrontSxCookies!
  Headers: AwsCloudFrontSxHeaders
  QueryStringCacheKeys: AwsCloudFrontSxQueryStringCacheKeys
}

type AwsCloudFrontSxCookies {
  Forward: String!
  WhitelistedNames: AwsCloudFrontSxCookiesWhitelistedNames
}

input AwsCloudFrontSxCookiesInput {
  Forward: String!
  WhitelistedNames: AwsCloudFrontSxCookiesWhitelistedNamesInput
}

type AwsCloudFrontSxCookiesWhitelistedNames {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontSxCookiesWhitelistedNamesInput {
  Quantity: Int!
  Items: [String]
}

type AwsCloudFrontSxHeaders {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontSxHeadersInput {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontSxInput {
  QueryString: Boolean!
  Cookies: AwsCloudFrontSxCookiesInput!
  Headers: AwsCloudFrontSxHeadersInput
  QueryStringCacheKeys: AwsCloudFrontSxQueryStringCacheKeysInput
}

type AwsCloudFrontSxQueryStringCacheKeys {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontSxQueryStringCacheKeysInput {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontTagResourceInput {
  Resource: String!
  Tags: AwsCloudFrontS2fInput!
}

input AwsCloudFrontUntagResourceInput {
  Resource: String!
  TagKeys: AwsCloudFrontUntagResourceTagKeysInput!
}

input AwsCloudFrontUntagResourceTagKeysInput {
  Items: [String]
}

input AwsCloudFrontUpdateCloudFrontOriginAccessIdentityInput {
  CloudFrontOriginAccessIdentityConfig: AwsCloudFrontS2Input!
  Id: String!
  IfMatch: String
}

type AwsCloudFrontUpdateCloudFrontOriginAccessIdentityOutput {
  CloudFrontOriginAccessIdentity: AwsCloudFrontS5
  ETag: String
}

input AwsCloudFrontUpdateDistributionInput {
  DistributionConfig: AwsCloudFrontS7Input!
  Id: String!
  IfMatch: String
}

type AwsCloudFrontUpdateDistributionOutput {
  Distribution: AwsCloudFrontS23
  ETag: String
}

input AwsCloudFrontUpdateFieldLevelEncryptionConfigInput {
  FieldLevelEncryptionConfig: AwsCloudFrontS2mInput!
  Id: String!
  IfMatch: String
}

type AwsCloudFrontUpdateFieldLevelEncryptionConfigOutput {
  FieldLevelEncryption: AwsCloudFrontS2x
  ETag: String
}

input AwsCloudFrontUpdateFieldLevelEncryptionProfileInput {
  FieldLevelEncryptionProfileConfig: AwsCloudFrontS2zInput!
  Id: String!
  IfMatch: String
}

type AwsCloudFrontUpdateFieldLevelEncryptionProfileOutput {
  FieldLevelEncryptionProfile: AwsCloudFrontS36
  ETag: String
}

input AwsCloudFrontUpdatePublicKeyInput {
  PublicKeyConfig: AwsCloudFrontS3eInput!
  Id: String!
  IfMatch: String
}

type AwsCloudFrontUpdatePublicKeyOutput {
  PublicKey: AwsCloudFrontS3g
  ETag: String
}

input AwsCloudFrontUpdateStreamingDistributionInput {
  StreamingDistributionConfig: AwsCloudFrontS3iInput!
  Id: String!
  IfMatch: String
}

type AwsCloudFrontUpdateStreamingDistributionOutput {
  StreamingDistribution: AwsCloudFrontS3m
  ETag: String
}

"""Amazon CloudHSM (2014-05-30)"""
type AwsCloudHSM {
  addTagsToResource(input: AwsCloudHSMAddTagsToResourceInput!, config: AwsConfig): AwsCloudHSMAddTagsToResourceOutput
  createHapg(input: AwsCloudHSMCreateHapgInput!, config: AwsConfig): AwsCloudHSMCreateHapgOutput
  createHsm(input: AwsCloudHSMCreateHsmInput!, config: AwsConfig): AwsCloudHSMCreateHsmOutput
  createLunaClient(input: AwsCloudHSMCreateLunaClientInput!, config: AwsConfig): AwsCloudHSMCreateLunaClientOutput
  deleteHapg(input: AwsCloudHSMDeleteHapgInput!, config: AwsConfig): AwsCloudHSMDeleteHapgOutput
  deleteHsm(input: AwsCloudHSMDeleteHsmInput!, config: AwsConfig): AwsCloudHSMDeleteHsmOutput
  deleteLunaClient(input: AwsCloudHSMDeleteLunaClientInput!, config: AwsConfig): AwsCloudHSMDeleteLunaClientOutput
  describeHapg(input: AwsCloudHSMDescribeHapgInput!, config: AwsConfig): AwsCloudHSMDescribeHapgOutput
  describeHsm(input: AwsCloudHSMDescribeHsmInput, config: AwsConfig): AwsCloudHSMDescribeHsmOutput
  describeLunaClient(input: AwsCloudHSMDescribeLunaClientInput, config: AwsConfig): AwsCloudHSMDescribeLunaClientOutput
  getConfig(input: AwsCloudHSMGetConfigInput!, config: AwsConfig): AwsCloudHSMGetConfigOutput
  listAvailableZones(input: JSON, config: AwsConfig): AwsCloudHSMListAvailableZonesOutput
  listHapgs(input: AwsCloudHSMListHapgsInput, config: AwsConfig): AwsCloudHSMListHapgsOutput
  listHsms(input: AwsCloudHSMListHsmsInput, config: AwsConfig): AwsCloudHSMListHsmsOutput
  listLunaClients(input: AwsCloudHSMListLunaClientsInput, config: AwsConfig): AwsCloudHSMListLunaClientsOutput
  listTagsForResource(input: AwsCloudHSMListTagsForResourceInput!, config: AwsConfig): AwsCloudHSMListTagsForResourceOutput
  modifyHapg(input: AwsCloudHSMModifyHapgInput!, config: AwsConfig): AwsCloudHSMModifyHapgOutput
  modifyHsm(input: AwsCloudHSMModifyHsmInput!, config: AwsConfig): AwsCloudHSMModifyHsmOutput
  modifyLunaClient(input: AwsCloudHSMModifyLunaClientInput!, config: AwsConfig): AwsCloudHSMModifyLunaClientOutput
  removeTagsFromResource(input: AwsCloudHSMRemoveTagsFromResourceInput!, config: AwsConfig): AwsCloudHSMRemoveTagsFromResourceOutput
}

input AwsCloudHSMAddTagsToResourceInput {
  ResourceArn: String!
  TagList: [AwsCloudHSMS3Input]!
}

type AwsCloudHSMAddTagsToResourceOutput {
  Status: String!
}

input AwsCloudHSMCreateHapgInput {
  Label: String!
}

type AwsCloudHSMCreateHapgOutput {
  HapgArn: String
}

input AwsCloudHSMCreateHsmInput {
  SubnetId: String!
  SshKey: String!
  EniIp: String
  IamRoleArn: String!
  ExternalId: String
  SubscriptionType: String!
  ClientToken: String
  SyslogIp: String
}

type AwsCloudHSMCreateHsmOutput {
  HsmArn: String
}

input AwsCloudHSMCreateLunaClientInput {
  Label: String
  Certificate: String!
}

type AwsCloudHSMCreateLunaClientOutput {
  ClientArn: String
}

input AwsCloudHSMDeleteHapgInput {
  HapgArn: String!
}

type AwsCloudHSMDeleteHapgOutput {
  Status: String!
}

input AwsCloudHSMDeleteHsmInput {
  HsmArn: String!
}

type AwsCloudHSMDeleteHsmOutput {
  Status: String!
}

input AwsCloudHSMDeleteLunaClientInput {
  ClientArn: String!
}

type AwsCloudHSMDeleteLunaClientOutput {
  Status: String!
}

input AwsCloudHSMDescribeHapgInput {
  HapgArn: String!
}

type AwsCloudHSMDescribeHapgOutput {
  HapgArn: String
  HapgSerial: String
  HsmsLastActionFailed: [String]
  HsmsPendingDeletion: [String]
  HsmsPendingRegistration: [String]
  Label: String
  LastModifiedTimestamp: String
  PartitionSerialList: [String]
  State: String
}

input AwsCloudHSMDescribeHsmInput {
  HsmArn: String
  HsmSerialNumber: String
}

type AwsCloudHSMDescribeHsmOutput {
  HsmArn: String
  Status: String
  StatusDetails: String
  AvailabilityZone: String
  EniId: String
  EniIp: String
  SubscriptionType: String
  SubscriptionStartDate: String
  SubscriptionEndDate: String
  VpcId: String
  SubnetId: String
  IamRoleArn: String
  SerialNumber: String
  VendorName: String
  HsmType: String
  SoftwareVersion: String
  SshPublicKey: String
  SshKeyLastUpdated: String
  ServerCertUri: String
  ServerCertLastUpdated: String
  Partitions: [String]
}

input AwsCloudHSMDescribeLunaClientInput {
  ClientArn: String
  CertificateFingerprint: String
}

type AwsCloudHSMDescribeLunaClientOutput {
  ClientArn: String
  Certificate: String
  CertificateFingerprint: String
  LastModifiedTimestamp: String
  Label: String
}

input AwsCloudHSMGetConfigInput {
  ClientArn: String!
  ClientVersion: String!
  HapgList: [String]!
}

type AwsCloudHSMGetConfigOutput {
  ConfigType: String
  ConfigFile: String
  ConfigCred: String
}

type AwsCloudHSMListAvailableZonesOutput {
  AZList: [String]
}

input AwsCloudHSMListHapgsInput {
  NextToken: String
}

type AwsCloudHSMListHapgsOutput {
  HapgList: [String]!
  NextToken: String
}

input AwsCloudHSMListHsmsInput {
  NextToken: String
}

type AwsCloudHSMListHsmsOutput {
  HsmList: [String]
  NextToken: String
}

input AwsCloudHSMListLunaClientsInput {
  NextToken: String
}

type AwsCloudHSMListLunaClientsOutput {
  ClientList: [String]!
  NextToken: String
}

input AwsCloudHSMListTagsForResourceInput {
  ResourceArn: String!
}

type AwsCloudHSMListTagsForResourceOutput {
  TagList: [AwsCloudHSMS3]!
}

input AwsCloudHSMModifyHapgInput {
  HapgArn: String!
  Label: String
  PartitionSerialList: [String]
}

type AwsCloudHSMModifyHapgOutput {
  HapgArn: String
}

input AwsCloudHSMModifyHsmInput {
  HsmArn: String!
  SubnetId: String
  EniIp: String
  IamRoleArn: String
  ExternalId: String
  SyslogIp: String
}

type AwsCloudHSMModifyHsmOutput {
  HsmArn: String
}

input AwsCloudHSMModifyLunaClientInput {
  ClientArn: String!
  Certificate: String!
}

type AwsCloudHSMModifyLunaClientOutput {
  ClientArn: String
}

input AwsCloudHSMRemoveTagsFromResourceInput {
  ResourceArn: String!
  TagKeyList: [String]!
}

type AwsCloudHSMRemoveTagsFromResourceOutput {
  Status: String!
}

type AwsCloudHSMS3 {
  Key: String!
  Value: String!
}

input AwsCloudHSMS3Input {
  Key: String!
  Value: String!
}

"""AWS CloudHSM V2 (2017-04-28)"""
type AwsCloudHSMV2 {
  copyBackupToRegion(input: AwsCloudHSMV2CopyBackupToRegionInput!, config: AwsConfig): AwsCloudHSMV2CopyBackupToRegionOutput
  createCluster(input: AwsCloudHSMV2CreateClusterInput!, config: AwsConfig): AwsCloudHSMV2CreateClusterOutput
  createHsm(input: AwsCloudHSMV2CreateHsmInput!, config: AwsConfig): AwsCloudHSMV2CreateHsmOutput
  deleteBackup(input: AwsCloudHSMV2DeleteBackupInput!, config: AwsConfig): AwsCloudHSMV2DeleteBackupOutput
  deleteCluster(input: AwsCloudHSMV2DeleteClusterInput!, config: AwsConfig): AwsCloudHSMV2DeleteClusterOutput
  deleteHsm(input: AwsCloudHSMV2DeleteHsmInput!, config: AwsConfig): AwsCloudHSMV2DeleteHsmOutput
  describeBackups(input: AwsCloudHSMV2DescribeBackupsInput, config: AwsConfig): AwsCloudHSMV2DescribeBackupsOutput
  describeClusters(input: AwsCloudHSMV2DescribeClustersInput, config: AwsConfig): AwsCloudHSMV2DescribeClustersOutput
  initializeCluster(input: AwsCloudHSMV2InitializeClusterInput!, config: AwsConfig): AwsCloudHSMV2InitializeClusterOutput
  listTags(input: AwsCloudHSMV2ListTagsInput!, config: AwsConfig): AwsCloudHSMV2ListTagsOutput
  restoreBackup(input: AwsCloudHSMV2RestoreBackupInput!, config: AwsConfig): AwsCloudHSMV2RestoreBackupOutput
  tagResource(input: AwsCloudHSMV2TagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsCloudHSMV2UntagResourceInput!, config: AwsConfig): JSON
}

input AwsCloudHSMV2CopyBackupToRegionInput {
  DestinationRegion: String!
  BackupId: String!
}

type AwsCloudHSMV2CopyBackupToRegionOutput {
  DestinationBackup: AwsCloudHSMV2CopyBackupToRegionOutputDestinationBackup
}

type AwsCloudHSMV2CopyBackupToRegionOutputDestinationBackup {
  CreateTimestamp: Date
  SourceRegion: String
  SourceBackup: String
  SourceCluster: String
}

input AwsCloudHSMV2CreateClusterInput {
  SubnetIds: [String]!
  HsmType: String!
  SourceBackupId: String
}

type AwsCloudHSMV2CreateClusterOutput {
  Cluster: AwsCloudHSMV2Sd
}

input AwsCloudHSMV2CreateHsmInput {
  ClusterId: String!
  AvailabilityZone: String!
  IpAddress: String
}

type AwsCloudHSMV2CreateHsmOutput {
  Hsm: AwsCloudHSMV2Sg
}

input AwsCloudHSMV2DeleteBackupInput {
  BackupId: String!
}

type AwsCloudHSMV2DeleteBackupOutput {
  Backup: AwsCloudHSMV2Sz
}

input AwsCloudHSMV2DeleteClusterInput {
  ClusterId: String!
}

type AwsCloudHSMV2DeleteClusterOutput {
  Cluster: AwsCloudHSMV2Sd
}

input AwsCloudHSMV2DeleteHsmInput {
  ClusterId: String!
  HsmId: String
  EniId: String
  EniIp: String
}

type AwsCloudHSMV2DeleteHsmOutput {
  HsmId: String
}

input AwsCloudHSMV2DescribeBackupsInput {
  NextToken: String
  MaxResults: Int
  Filters: JSON
  SortAscending: Boolean
}

type AwsCloudHSMV2DescribeBackupsOutput {
  Backups: [AwsCloudHSMV2Sz]
  NextToken: String
}

input AwsCloudHSMV2DescribeClustersInput {
  Filters: JSON
  NextToken: String
  MaxResults: Int
}

type AwsCloudHSMV2DescribeClustersOutput {
  Clusters: [AwsCloudHSMV2Sd]
  NextToken: String
}

input AwsCloudHSMV2InitializeClusterInput {
  ClusterId: String!
  SignedCert: String!
  TrustAnchor: String!
}

type AwsCloudHSMV2InitializeClusterOutput {
  State: String
  StateMessage: String
}

input AwsCloudHSMV2ListTagsInput {
  ResourceId: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudHSMV2ListTagsOutput {
  TagList: [AwsCloudHSMV2S1l]!
  NextToken: String
}

input AwsCloudHSMV2RestoreBackupInput {
  BackupId: String!
}

type AwsCloudHSMV2RestoreBackupOutput {
  Backup: AwsCloudHSMV2Sz
}

type AwsCloudHSMV2S1l {
  Key: String!
  Value: String!
}

input AwsCloudHSMV2S1lInput {
  Key: String!
  Value: String!
}

type AwsCloudHSMV2Sd {
  BackupPolicy: String
  ClusterId: String
  CreateTimestamp: Date
  Hsms: [AwsCloudHSMV2Sg]
  HsmType: String
  PreCoPassword: String
  SecurityGroup: String
  SourceBackupId: String
  State: String
  StateMessage: String
  SubnetMapping: JSON
  VpcId: String
  Certificates: AwsCloudHSMV2SdCertificates
}

type AwsCloudHSMV2SdCertificates {
  ClusterCsr: String
  HsmCertificate: String
  AwsHardwareCertificate: String
  ManufacturerHardwareCertificate: String
  ClusterCertificate: String
}

type AwsCloudHSMV2Sg {
  AvailabilityZone: String
  ClusterId: String
  SubnetId: String
  EniId: String
  EniIp: String
  HsmId: String!
  State: String
  StateMessage: String
}

type AwsCloudHSMV2Sz {
  BackupId: String!
  BackupState: String
  ClusterId: String
  CreateTimestamp: Date
  CopyTimestamp: Date
  SourceRegion: String
  SourceBackup: String
  SourceCluster: String
  DeleteTimestamp: Date
}

input AwsCloudHSMV2TagResourceInput {
  ResourceId: String!
  TagList: [AwsCloudHSMV2S1lInput]!
}

input AwsCloudHSMV2UntagResourceInput {
  ResourceId: String!
  TagKeyList: [String]!
}

"""Amazon CloudSearch (2013-01-01)"""
type AwsCloudSearch {
  buildSuggesters(input: AwsCloudSearchBuildSuggestersInput!, config: AwsConfig): AwsCloudSearchBuildSuggestersOutput
  createDomain(input: AwsCloudSearchCreateDomainInput!, config: AwsConfig): AwsCloudSearchCreateDomainOutput
  defineAnalysisScheme(input: AwsCloudSearchDefineAnalysisSchemeInput!, config: AwsConfig): AwsCloudSearchDefineAnalysisSchemeOutput
  defineExpression(input: AwsCloudSearchDefineExpressionInput!, config: AwsConfig): AwsCloudSearchDefineExpressionOutput
  defineIndexField(input: AwsCloudSearchDefineIndexFieldInput!, config: AwsConfig): AwsCloudSearchDefineIndexFieldOutput
  defineSuggester(input: AwsCloudSearchDefineSuggesterInput!, config: AwsConfig): AwsCloudSearchDefineSuggesterOutput
  deleteAnalysisScheme(input: AwsCloudSearchDeleteAnalysisSchemeInput!, config: AwsConfig): AwsCloudSearchDeleteAnalysisSchemeOutput
  deleteDomain(input: AwsCloudSearchDeleteDomainInput!, config: AwsConfig): AwsCloudSearchDeleteDomainOutput
  deleteExpression(input: AwsCloudSearchDeleteExpressionInput!, config: AwsConfig): AwsCloudSearchDeleteExpressionOutput
  deleteIndexField(input: AwsCloudSearchDeleteIndexFieldInput!, config: AwsConfig): AwsCloudSearchDeleteIndexFieldOutput
  deleteSuggester(input: AwsCloudSearchDeleteSuggesterInput!, config: AwsConfig): AwsCloudSearchDeleteSuggesterOutput
  describeAnalysisSchemes(input: AwsCloudSearchDescribeAnalysisSchemesInput!, config: AwsConfig): AwsCloudSearchDescribeAnalysisSchemesOutput
  describeAvailabilityOptions(input: AwsCloudSearchDescribeAvailabilityOptionsInput!, config: AwsConfig): AwsCloudSearchDescribeAvailabilityOptionsOutput
  describeDomains(input: AwsCloudSearchDescribeDomainsInput, config: AwsConfig): AwsCloudSearchDescribeDomainsOutput
  describeExpressions(input: AwsCloudSearchDescribeExpressionsInput!, config: AwsConfig): AwsCloudSearchDescribeExpressionsOutput
  describeIndexFields(input: AwsCloudSearchDescribeIndexFieldsInput!, config: AwsConfig): AwsCloudSearchDescribeIndexFieldsOutput
  describeScalingParameters(input: AwsCloudSearchDescribeScalingParametersInput!, config: AwsConfig): AwsCloudSearchDescribeScalingParametersOutput
  describeServiceAccessPolicies(input: AwsCloudSearchDescribeServiceAccessPoliciesInput!, config: AwsConfig): AwsCloudSearchDescribeServiceAccessPoliciesOutput
  describeSuggesters(input: AwsCloudSearchDescribeSuggestersInput!, config: AwsConfig): AwsCloudSearchDescribeSuggestersOutput
  indexDocuments(input: AwsCloudSearchIndexDocumentsInput!, config: AwsConfig): AwsCloudSearchIndexDocumentsOutput
  listDomainNames(config: AwsConfig): AwsCloudSearchListDomainNamesOutput
  updateAvailabilityOptions(input: AwsCloudSearchUpdateAvailabilityOptionsInput!, config: AwsConfig): AwsCloudSearchUpdateAvailabilityOptionsOutput
  updateScalingParameters(input: AwsCloudSearchUpdateScalingParametersInput!, config: AwsConfig): AwsCloudSearchUpdateScalingParametersOutput
  updateServiceAccessPolicies(input: AwsCloudSearchUpdateServiceAccessPoliciesInput!, config: AwsConfig): AwsCloudSearchUpdateServiceAccessPoliciesOutput
}

input AwsCloudSearchBuildSuggestersInput {
  DomainName: String!
}

type AwsCloudSearchBuildSuggestersOutput {
  FieldNames: [String]
}

input AwsCloudSearchCreateDomainInput {
  DomainName: String!
}

type AwsCloudSearchCreateDomainOutput {
  DomainStatus: AwsCloudSearchS8
}

input AwsCloudSearchDefineAnalysisSchemeInput {
  DomainName: String!
  AnalysisScheme: AwsCloudSearchSlInput!
}

type AwsCloudSearchDefineAnalysisSchemeOutput {
  AnalysisScheme: AwsCloudSearchSs!
}

input AwsCloudSearchDefineExpressionInput {
  DomainName: String!
  Expression: AwsCloudSearchSyInput!
}

type AwsCloudSearchDefineExpressionOutput {
  Expression: AwsCloudSearchS11!
}

input AwsCloudSearchDefineIndexFieldInput {
  DomainName: String!
  IndexField: AwsCloudSearchS13Input!
}

type AwsCloudSearchDefineIndexFieldOutput {
  IndexField: AwsCloudSearchS1n!
}

input AwsCloudSearchDefineSuggesterInput {
  DomainName: String!
  Suggester: AwsCloudSearchS1pInput!
}

type AwsCloudSearchDefineSuggesterOutput {
  Suggester: AwsCloudSearchS1t!
}

input AwsCloudSearchDeleteAnalysisSchemeInput {
  DomainName: String!
  AnalysisSchemeName: String!
}

type AwsCloudSearchDeleteAnalysisSchemeOutput {
  AnalysisScheme: AwsCloudSearchSs!
}

input AwsCloudSearchDeleteDomainInput {
  DomainName: String!
}

type AwsCloudSearchDeleteDomainOutput {
  DomainStatus: AwsCloudSearchS8
}

input AwsCloudSearchDeleteExpressionInput {
  DomainName: String!
  ExpressionName: String!
}

type AwsCloudSearchDeleteExpressionOutput {
  Expression: AwsCloudSearchS11!
}

input AwsCloudSearchDeleteIndexFieldInput {
  DomainName: String!
  IndexFieldName: String!
}

type AwsCloudSearchDeleteIndexFieldOutput {
  IndexField: AwsCloudSearchS1n!
}

input AwsCloudSearchDeleteSuggesterInput {
  DomainName: String!
  SuggesterName: String!
}

type AwsCloudSearchDeleteSuggesterOutput {
  Suggester: AwsCloudSearchS1t!
}

input AwsCloudSearchDescribeAnalysisSchemesInput {
  DomainName: String!
  AnalysisSchemeNames: [String]
  Deployed: Boolean
}

type AwsCloudSearchDescribeAnalysisSchemesOutput {
  AnalysisSchemes: [AwsCloudSearchSs]!
}

input AwsCloudSearchDescribeAvailabilityOptionsInput {
  DomainName: String!
  Deployed: Boolean
}

type AwsCloudSearchDescribeAvailabilityOptionsOutput {
  AvailabilityOptions: AwsCloudSearchS2a
}

input AwsCloudSearchDescribeDomainsInput {
  DomainNames: [String]
}

type AwsCloudSearchDescribeDomainsOutput {
  DomainStatusList: [AwsCloudSearchS8]!
}

input AwsCloudSearchDescribeExpressionsInput {
  DomainName: String!
  ExpressionNames: [String]
  Deployed: Boolean
}

type AwsCloudSearchDescribeExpressionsOutput {
  Expressions: [AwsCloudSearchS11]!
}

input AwsCloudSearchDescribeIndexFieldsInput {
  DomainName: String!
  FieldNames: [String]
  Deployed: Boolean
}

type AwsCloudSearchDescribeIndexFieldsOutput {
  IndexFields: [AwsCloudSearchS1n]!
}

input AwsCloudSearchDescribeScalingParametersInput {
  DomainName: String!
}

type AwsCloudSearchDescribeScalingParametersOutput {
  ScalingParameters: AwsCloudSearchS2p!
}

input AwsCloudSearchDescribeServiceAccessPoliciesInput {
  DomainName: String!
  Deployed: Boolean
}

type AwsCloudSearchDescribeServiceAccessPoliciesOutput {
  AccessPolicies: AwsCloudSearchS2u!
}

input AwsCloudSearchDescribeSuggestersInput {
  DomainName: String!
  SuggesterNames: [String]
  Deployed: Boolean
}

type AwsCloudSearchDescribeSuggestersOutput {
  Suggesters: [AwsCloudSearchS1t]!
}

"""Amazon CloudSearch Domain (2013-01-01)"""
type AwsCloudSearchDomain {
  search(input: AwsCloudSearchDomainSearchInput!, config: AwsConfig): AwsCloudSearchDomainSearchOutput
  suggest(input: AwsCloudSearchDomainSuggestInput!, config: AwsConfig): AwsCloudSearchDomainSuggestOutput
  uploadDocuments(input: AwsCloudSearchDomainUploadDocumentsInput!, config: AwsConfig): AwsCloudSearchDomainUploadDocumentsOutput
}

input AwsCloudSearchDomainSearchInput {
  cursor: String
  expr: String
  facet: String
  filterQuery: String
  highlight: String
  partial: Boolean
  query: String!
  queryOptions: String
  queryParser: String
  return: String
  size: JSON
  sort: String
  start: JSON
  stats: String
}

type AwsCloudSearchDomainSearchOutput {
  status: AwsCloudSearchDomainSearchOutputStatus
  hits: AwsCloudSearchDomainSearchOutputHits
  facets: JSON
  stats: JSON
}

type AwsCloudSearchDomainSearchOutputHits {
  found: JSON
  start: JSON
  cursor: String
  hit: [AwsCloudSearchDomainSearchOutputHitsHit]
}

type AwsCloudSearchDomainSearchOutputHitsHit {
  id: String
  fields: JSON
  exprs: JSON
  highlights: JSON
}

type AwsCloudSearchDomainSearchOutputStatus {
  timems: JSON
  rid: String
}

input AwsCloudSearchDomainSuggestInput {
  query: String!
  suggester: String!
  size: JSON
}

type AwsCloudSearchDomainSuggestOutput {
  status: AwsCloudSearchDomainSuggestOutputStatus
  suggest: AwsCloudSearchDomainSuggestOutputSuggest
}

type AwsCloudSearchDomainSuggestOutputStatus {
  timems: JSON
  rid: String
}

type AwsCloudSearchDomainSuggestOutputSuggest {
  query: String
  found: JSON
  suggestions: [AwsCloudSearchDomainSuggestOutputSuggestSuggestions]
}

type AwsCloudSearchDomainSuggestOutputSuggestSuggestions {
  suggestion: String
  score: JSON
  id: String
}

input AwsCloudSearchDomainUploadDocumentsInput {
  documents: JSON!
  contentType: String!
}

type AwsCloudSearchDomainUploadDocumentsOutput {
  status: String
  adds: JSON
  deletes: JSON
  warnings: [AwsCloudSearchDomainUploadDocumentsOutputWarnings]
}

type AwsCloudSearchDomainUploadDocumentsOutputWarnings {
  message: String
}

input AwsCloudSearchIndexDocumentsInput {
  DomainName: String!
}

type AwsCloudSearchIndexDocumentsOutput {
  FieldNames: [String]
}

type AwsCloudSearchListDomainNamesOutput {
  DomainNames: JSON
}

type AwsCloudSearchS11 {
  Options: AwsCloudSearchSy!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS13 {
  IndexFieldName: String!
  IndexFieldType: String!
  IntOptions: AwsCloudSearchS13IntOptions
  DoubleOptions: AwsCloudSearchS13DoubleOptions
  LiteralOptions: AwsCloudSearchS13LiteralOptions
  TextOptions: AwsCloudSearchS13TextOptions
  DateOptions: AwsCloudSearchS13DateOptions
  LatLonOptions: AwsCloudSearchS13LatLonOptions
  IntArrayOptions: AwsCloudSearchS13IntArrayOptions
  DoubleArrayOptions: AwsCloudSearchS13DoubleArrayOptions
  LiteralArrayOptions: AwsCloudSearchS13LiteralArrayOptions
  TextArrayOptions: AwsCloudSearchS13TextArrayOptions
  DateArrayOptions: AwsCloudSearchS13DateArrayOptions
}

type AwsCloudSearchS13DateArrayOptions {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudSearchS13DateArrayOptionsInput {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudSearchS13DateOptions {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13DateOptionsInput {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudSearchS13DoubleArrayOptions {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudSearchS13DoubleArrayOptionsInput {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudSearchS13DoubleOptions {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13DoubleOptionsInput {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13Input {
  IndexFieldName: String!
  IndexFieldType: String!
  IntOptions: AwsCloudSearchS13IntOptionsInput
  DoubleOptions: AwsCloudSearchS13DoubleOptionsInput
  LiteralOptions: AwsCloudSearchS13LiteralOptionsInput
  TextOptions: AwsCloudSearchS13TextOptionsInput
  DateOptions: AwsCloudSearchS13DateOptionsInput
  LatLonOptions: AwsCloudSearchS13LatLonOptionsInput
  IntArrayOptions: AwsCloudSearchS13IntArrayOptionsInput
  DoubleArrayOptions: AwsCloudSearchS13DoubleArrayOptionsInput
  LiteralArrayOptions: AwsCloudSearchS13LiteralArrayOptionsInput
  TextArrayOptions: AwsCloudSearchS13TextArrayOptionsInput
  DateArrayOptions: AwsCloudSearchS13DateArrayOptionsInput
}

type AwsCloudSearchS13IntArrayOptions {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudSearchS13IntArrayOptionsInput {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudSearchS13IntOptions {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13IntOptionsInput {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudSearchS13LatLonOptions {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13LatLonOptionsInput {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudSearchS13LiteralArrayOptions {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudSearchS13LiteralArrayOptionsInput {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudSearchS13LiteralOptions {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13LiteralOptionsInput {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudSearchS13TextArrayOptions {
  DefaultValue: String
  SourceFields: String
  ReturnEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

input AwsCloudSearchS13TextArrayOptionsInput {
  DefaultValue: String
  SourceFields: String
  ReturnEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

type AwsCloudSearchS13TextOptions {
  DefaultValue: String
  SourceField: String
  ReturnEnabled: Boolean
  SortEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

input AwsCloudSearchS13TextOptionsInput {
  DefaultValue: String
  SourceField: String
  ReturnEnabled: Boolean
  SortEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

type AwsCloudSearchS1n {
  Options: AwsCloudSearchS13!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS1p {
  SuggesterName: String!
  DocumentSuggesterOptions: AwsCloudSearchS1pDocumentSuggesterOptions!
}

type AwsCloudSearchS1pDocumentSuggesterOptions {
  SourceField: String!
  FuzzyMatching: String
  SortExpression: String
}

input AwsCloudSearchS1pDocumentSuggesterOptionsInput {
  SourceField: String!
  FuzzyMatching: String
  SortExpression: String
}

input AwsCloudSearchS1pInput {
  SuggesterName: String!
  DocumentSuggesterOptions: AwsCloudSearchS1pDocumentSuggesterOptionsInput!
}

type AwsCloudSearchS1t {
  Options: AwsCloudSearchS1p!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS2a {
  Options: Boolean!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS2p {
  Options: AwsCloudSearchS2q!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS2q {
  DesiredInstanceType: String
  DesiredReplicationCount: Int
  DesiredPartitionCount: Int
}

input AwsCloudSearchS2qInput {
  DesiredInstanceType: String
  DesiredReplicationCount: Int
  DesiredPartitionCount: Int
}

type AwsCloudSearchS2u {
  Options: String!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS8 {
  DomainId: String!
  DomainName: String!
  ARN: String
  Created: Boolean
  Deleted: Boolean
  DocService: AwsCloudSearchSc
  SearchService: AwsCloudSearchSc
  RequiresIndexDocuments: Boolean!
  Processing: Boolean
  SearchInstanceType: String
  SearchPartitionCount: Int
  SearchInstanceCount: Int
  Limits: AwsCloudSearchS8Limits
}

type AwsCloudSearchS8Limits {
  MaximumReplicationCount: Int!
  MaximumPartitionCount: Int!
}

type AwsCloudSearchSc {
  Endpoint: String
}

type AwsCloudSearchSl {
  AnalysisSchemeName: String!
  AnalysisSchemeLanguage: String!
  AnalysisOptions: AwsCloudSearchSlAnalysisOptions
}

type AwsCloudSearchSlAnalysisOptions {
  Synonyms: String
  Stopwords: String
  StemmingDictionary: String
  JapaneseTokenizationDictionary: String
  AlgorithmicStemming: String
}

input AwsCloudSearchSlAnalysisOptionsInput {
  Synonyms: String
  Stopwords: String
  StemmingDictionary: String
  JapaneseTokenizationDictionary: String
  AlgorithmicStemming: String
}

input AwsCloudSearchSlInput {
  AnalysisSchemeName: String!
  AnalysisSchemeLanguage: String!
  AnalysisOptions: AwsCloudSearchSlAnalysisOptionsInput
}

type AwsCloudSearchSs {
  Options: AwsCloudSearchSl!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchSt {
  CreationDate: Date!
  UpdateDate: Date!
  UpdateVersion: Int
  State: String!
  PendingDeletion: Boolean
}

type AwsCloudSearchSy {
  ExpressionName: String!
  ExpressionValue: String!
}

input AwsCloudSearchSyInput {
  ExpressionName: String!
  ExpressionValue: String!
}

input AwsCloudSearchUpdateAvailabilityOptionsInput {
  DomainName: String!
  MultiAZ: Boolean!
}

type AwsCloudSearchUpdateAvailabilityOptionsOutput {
  AvailabilityOptions: AwsCloudSearchS2a
}

input AwsCloudSearchUpdateScalingParametersInput {
  DomainName: String!
  ScalingParameters: AwsCloudSearchS2qInput!
}

type AwsCloudSearchUpdateScalingParametersOutput {
  ScalingParameters: AwsCloudSearchS2p!
}

input AwsCloudSearchUpdateServiceAccessPoliciesInput {
  DomainName: String!
  AccessPolicies: String!
}

type AwsCloudSearchUpdateServiceAccessPoliciesOutput {
  AccessPolicies: AwsCloudSearchS2u!
}

"""AWS CloudTrail (2013-11-01)"""
type AwsCloudTrail {
  addTags(input: AwsCloudTrailAddTagsInput!, config: AwsConfig): JSON
  createTrail(input: AwsCloudTrailCreateTrailInput!, config: AwsConfig): AwsCloudTrailCreateTrailOutput
  deleteTrail(input: AwsCloudTrailDeleteTrailInput!, config: AwsConfig): JSON
  describeTrails(input: AwsCloudTrailDescribeTrailsInput, config: AwsConfig): AwsCloudTrailDescribeTrailsOutput
  getEventSelectors(input: AwsCloudTrailGetEventSelectorsInput!, config: AwsConfig): AwsCloudTrailGetEventSelectorsOutput
  getTrailStatus(input: AwsCloudTrailGetTrailStatusInput!, config: AwsConfig): AwsCloudTrailGetTrailStatusOutput
  listPublicKeys(input: AwsCloudTrailListPublicKeysInput, config: AwsConfig): AwsCloudTrailListPublicKeysOutput
  listTags(input: AwsCloudTrailListTagsInput!, config: AwsConfig): AwsCloudTrailListTagsOutput
  lookupEvents(input: AwsCloudTrailLookupEventsInput, config: AwsConfig): AwsCloudTrailLookupEventsOutput
  putEventSelectors(input: AwsCloudTrailPutEventSelectorsInput!, config: AwsConfig): AwsCloudTrailPutEventSelectorsOutput
  removeTags(input: AwsCloudTrailRemoveTagsInput!, config: AwsConfig): JSON
  startLogging(input: AwsCloudTrailStartLoggingInput!, config: AwsConfig): JSON
  stopLogging(input: AwsCloudTrailStopLoggingInput!, config: AwsConfig): JSON
  updateTrail(input: AwsCloudTrailUpdateTrailInput!, config: AwsConfig): AwsCloudTrailUpdateTrailOutput
}

input AwsCloudTrailAddTagsInput {
  ResourceId: String!
  TagsList: [AwsCloudTrailS3Input]
}

input AwsCloudTrailCreateTrailInput {
  Name: String!
  S3BucketName: String!
  S3KeyPrefix: String
  SnsTopicName: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  EnableLogFileValidation: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
  IsOrganizationTrail: Boolean
}

type AwsCloudTrailCreateTrailOutput {
  Name: String
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  SnsTopicARN: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  TrailARN: String
  LogFileValidationEnabled: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
  IsOrganizationTrail: Boolean
}

input AwsCloudTrailDeleteTrailInput {
  Name: String!
}

input AwsCloudTrailDescribeTrailsInput {
  trailNameList: [String]
  includeShadowTrails: Boolean
}

type AwsCloudTrailDescribeTrailsOutput {
  trailList: [AwsCloudTrailDescribeTrailsOutputTrailList]
}

type AwsCloudTrailDescribeTrailsOutputTrailList {
  Name: String
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  SnsTopicARN: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  HomeRegion: String
  TrailARN: String
  LogFileValidationEnabled: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
  HasCustomEventSelectors: Boolean
  IsOrganizationTrail: Boolean
}

input AwsCloudTrailGetEventSelectorsInput {
  TrailName: String!
}

type AwsCloudTrailGetEventSelectorsOutput {
  TrailARN: String
  EventSelectors: [AwsCloudTrailSi]
}

input AwsCloudTrailGetTrailStatusInput {
  Name: String!
}

type AwsCloudTrailGetTrailStatusOutput {
  IsLogging: Boolean
  LatestDeliveryError: String
  LatestNotificationError: String
  LatestDeliveryTime: Date
  LatestNotificationTime: Date
  StartLoggingTime: Date
  StopLoggingTime: Date
  LatestCloudWatchLogsDeliveryError: String
  LatestCloudWatchLogsDeliveryTime: Date
  LatestDigestDeliveryTime: Date
  LatestDigestDeliveryError: String
  LatestDeliveryAttemptTime: String
  LatestNotificationAttemptTime: String
  LatestNotificationAttemptSucceeded: String
  LatestDeliveryAttemptSucceeded: String
  TimeLoggingStarted: String
  TimeLoggingStopped: String
}

input AwsCloudTrailListPublicKeysInput {
  StartTime: Date
  EndTime: Date
  NextToken: String
}

type AwsCloudTrailListPublicKeysOutput {
  PublicKeyList: [AwsCloudTrailListPublicKeysOutputPublicKeyList]
  NextToken: String
}

type AwsCloudTrailListPublicKeysOutputPublicKeyList {
  Value: JSON
  ValidityStartTime: Date
  ValidityEndTime: Date
  Fingerprint: String
}

input AwsCloudTrailListTagsInput {
  ResourceIdList: [String]!
  NextToken: String
}

type AwsCloudTrailListTagsOutput {
  ResourceTagList: [AwsCloudTrailListTagsOutputResourceTagList]
  NextToken: String
}

type AwsCloudTrailListTagsOutputResourceTagList {
  ResourceId: String
  TagsList: [AwsCloudTrailS3]
}

input AwsCloudTrailLookupEventsInput {
  LookupAttributes: [AwsCloudTrailLookupEventsLookupAttributesInput]
  StartTime: Date
  EndTime: Date
  MaxResults: Int
  NextToken: String
}

input AwsCloudTrailLookupEventsLookupAttributesInput {
  AttributeKey: String!
  AttributeValue: String!
}

type AwsCloudTrailLookupEventsOutput {
  Events: [AwsCloudTrailLookupEventsOutputEvents]
  NextToken: String
}

type AwsCloudTrailLookupEventsOutputEvents {
  EventId: String
  EventName: String
  ReadOnly: String
  AccessKeyId: String
  EventTime: Date
  EventSource: String
  Username: String
  Resources: [AwsCloudTrailLookupEventsOutputEventsResources]
  CloudTrailEvent: String
}

type AwsCloudTrailLookupEventsOutputEventsResources {
  ResourceType: String
  ResourceName: String
}

input AwsCloudTrailPutEventSelectorsInput {
  TrailName: String!
  EventSelectors: [AwsCloudTrailSiInput]!
}

type AwsCloudTrailPutEventSelectorsOutput {
  TrailARN: String
  EventSelectors: [AwsCloudTrailSi]
}

input AwsCloudTrailRemoveTagsInput {
  ResourceId: String!
  TagsList: [AwsCloudTrailS3Input]
}

type AwsCloudTrailS3 {
  Key: String!
  Value: String
}

input AwsCloudTrailS3Input {
  Key: String!
  Value: String
}

type AwsCloudTrailSi {
  ReadWriteType: String
  IncludeManagementEvents: Boolean
  DataResources: [AwsCloudTrailSiDataResources]
}

type AwsCloudTrailSiDataResources {
  Type: String
  Values: [String]
}

input AwsCloudTrailSiDataResourcesInput {
  Type: String
  Values: [String]
}

input AwsCloudTrailSiInput {
  ReadWriteType: String
  IncludeManagementEvents: Boolean
  DataResources: [AwsCloudTrailSiDataResourcesInput]
}

input AwsCloudTrailStartLoggingInput {
  Name: String!
}

input AwsCloudTrailStopLoggingInput {
  Name: String!
}

input AwsCloudTrailUpdateTrailInput {
  Name: String!
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  EnableLogFileValidation: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
  IsOrganizationTrail: Boolean
}

type AwsCloudTrailUpdateTrailOutput {
  Name: String
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  SnsTopicARN: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  TrailARN: String
  LogFileValidationEnabled: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
  IsOrganizationTrail: Boolean
}

"""Amazon CloudWatch (2010-08-01)"""
type AwsCloudWatch {
  deleteAlarms(input: AwsCloudWatchDeleteAlarmsInput!, config: AwsConfig): JSON
  deleteAnomalyDetector(input: AwsCloudWatchDeleteAnomalyDetectorInput!, config: AwsConfig): JSON
  deleteDashboards(input: AwsCloudWatchDeleteDashboardsInput!, config: AwsConfig): JSON
  describeAlarmHistory(input: AwsCloudWatchDescribeAlarmHistoryInput, config: AwsConfig): AwsCloudWatchDescribeAlarmHistoryOutput
  describeAlarms(input: AwsCloudWatchDescribeAlarmsInput, config: AwsConfig): AwsCloudWatchDescribeAlarmsOutput
  describeAlarmsForMetric(input: AwsCloudWatchDescribeAlarmsForMetricInput!, config: AwsConfig): AwsCloudWatchDescribeAlarmsForMetricOutput
  describeAnomalyDetectors(input: AwsCloudWatchDescribeAnomalyDetectorsInput, config: AwsConfig): AwsCloudWatchDescribeAnomalyDetectorsOutput
  disableAlarmActions(input: AwsCloudWatchDisableAlarmActionsInput!, config: AwsConfig): JSON
  enableAlarmActions(input: AwsCloudWatchEnableAlarmActionsInput!, config: AwsConfig): JSON
  getDashboard(input: AwsCloudWatchGetDashboardInput!, config: AwsConfig): AwsCloudWatchGetDashboardOutput
  getMetricData(input: AwsCloudWatchGetMetricDataInput!, config: AwsConfig): AwsCloudWatchGetMetricDataOutput
  getMetricStatistics(input: AwsCloudWatchGetMetricStatisticsInput!, config: AwsConfig): AwsCloudWatchGetMetricStatisticsOutput
  getMetricWidgetImage(input: AwsCloudWatchGetMetricWidgetImageInput!, config: AwsConfig): AwsCloudWatchGetMetricWidgetImageOutput
  listDashboards(input: AwsCloudWatchListDashboardsInput, config: AwsConfig): AwsCloudWatchListDashboardsOutput
  listMetrics(input: AwsCloudWatchListMetricsInput, config: AwsConfig): AwsCloudWatchListMetricsOutput
  listTagsForResource(input: AwsCloudWatchListTagsForResourceInput!, config: AwsConfig): AwsCloudWatchListTagsForResourceOutput
  putAnomalyDetector(input: AwsCloudWatchPutAnomalyDetectorInput!, config: AwsConfig): JSON
  putDashboard(input: AwsCloudWatchPutDashboardInput!, config: AwsConfig): AwsCloudWatchPutDashboardOutput
  putMetricAlarm(input: AwsCloudWatchPutMetricAlarmInput!, config: AwsConfig): JSON
  putMetricData(input: AwsCloudWatchPutMetricDataInput!, config: AwsConfig): JSON
  setAlarmState(input: AwsCloudWatchSetAlarmStateInput!, config: AwsConfig): JSON
  tagResource(input: AwsCloudWatchTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsCloudWatchUntagResourceInput!, config: AwsConfig): JSON
}

input AwsCloudWatchDeleteAlarmsInput {
  AlarmNames: [String]!
}

input AwsCloudWatchDeleteAnomalyDetectorInput {
  Namespace: String!
  MetricName: String!
  Dimensions: [AwsCloudWatchS7Input]
  Stat: String!
}

input AwsCloudWatchDeleteDashboardsInput {
  DashboardNames: [String]!
}

input AwsCloudWatchDescribeAlarmHistoryInput {
  AlarmName: String
  HistoryItemType: String
  StartDate: Date
  EndDate: Date
  MaxRecords: Int
  NextToken: String
}

type AwsCloudWatchDescribeAlarmHistoryOutput {
  AlarmHistoryItems: [AwsCloudWatchDescribeAlarmHistoryOutputAlarmHistoryItems]
  NextToken: String
}

type AwsCloudWatchDescribeAlarmHistoryOutputAlarmHistoryItems {
  AlarmName: String
  Timestamp: Date
  HistoryItemType: String
  HistorySummary: String
  HistoryData: String
}

input AwsCloudWatchDescribeAlarmsForMetricInput {
  MetricName: String!
  Namespace: String!
  Statistic: String
  ExtendedStatistic: String
  Dimensions: [AwsCloudWatchS7Input]
  Period: Int
  Unit: String
}

type AwsCloudWatchDescribeAlarmsForMetricOutput {
  MetricAlarms: [AwsCloudWatchSw]
}

input AwsCloudWatchDescribeAlarmsInput {
  AlarmNames: [String]
  AlarmNamePrefix: String
  StateValue: String
  ActionPrefix: String
  MaxRecords: Int
  NextToken: String
}

type AwsCloudWatchDescribeAlarmsOutput {
  MetricAlarms: [AwsCloudWatchSw]
  NextToken: String
}

input AwsCloudWatchDescribeAnomalyDetectorsInput {
  NextToken: String
  MaxResults: Int
  Namespace: String
  MetricName: String
  Dimensions: [AwsCloudWatchS7Input]
}

type AwsCloudWatchDescribeAnomalyDetectorsOutput {
  AnomalyDetectors: [AwsCloudWatchDescribeAnomalyDetectorsOutputAnomalyDetectors]
  NextToken: String
}

type AwsCloudWatchDescribeAnomalyDetectorsOutputAnomalyDetectors {
  Namespace: String
  MetricName: String
  Dimensions: [AwsCloudWatchS7]
  Stat: String
  Configuration: AwsCloudWatchS1u
}

input AwsCloudWatchDisableAlarmActionsInput {
  AlarmNames: [String]!
}

input AwsCloudWatchEnableAlarmActionsInput {
  AlarmNames: [String]!
}

"""Amazon CloudWatch Events (2015-10-07)"""
type AwsCloudWatchEvents {
  deleteRule(input: AwsCloudWatchEventsDeleteRuleInput!, config: AwsConfig): JSON
  describeEventBus(input: JSON, config: AwsConfig): AwsCloudWatchEventsDescribeEventBusOutput
  describeRule(input: AwsCloudWatchEventsDescribeRuleInput!, config: AwsConfig): AwsCloudWatchEventsDescribeRuleOutput
  disableRule(input: AwsCloudWatchEventsDisableRuleInput!, config: AwsConfig): JSON
  enableRule(input: AwsCloudWatchEventsEnableRuleInput!, config: AwsConfig): JSON
  listRuleNamesByTarget(input: AwsCloudWatchEventsListRuleNamesByTargetInput!, config: AwsConfig): AwsCloudWatchEventsListRuleNamesByTargetOutput
  listRules(input: AwsCloudWatchEventsListRulesInput, config: AwsConfig): AwsCloudWatchEventsListRulesOutput
  listTagsForResource(input: AwsCloudWatchEventsListTagsForResourceInput!, config: AwsConfig): AwsCloudWatchEventsListTagsForResourceOutput
  listTargetsByRule(input: AwsCloudWatchEventsListTargetsByRuleInput!, config: AwsConfig): AwsCloudWatchEventsListTargetsByRuleOutput
  putEvents(input: AwsCloudWatchEventsPutEventsInput!, config: AwsConfig): AwsCloudWatchEventsPutEventsOutput
  putPermission(input: AwsCloudWatchEventsPutPermissionInput!, config: AwsConfig): JSON
  putRule(input: AwsCloudWatchEventsPutRuleInput!, config: AwsConfig): AwsCloudWatchEventsPutRuleOutput
  putTargets(input: AwsCloudWatchEventsPutTargetsInput!, config: AwsConfig): AwsCloudWatchEventsPutTargetsOutput
  removePermission(input: AwsCloudWatchEventsRemovePermissionInput!, config: AwsConfig): JSON
  removeTargets(input: AwsCloudWatchEventsRemoveTargetsInput!, config: AwsConfig): AwsCloudWatchEventsRemoveTargetsOutput
  tagResource(input: AwsCloudWatchEventsTagResourceInput!, config: AwsConfig): JSON
  testEventPattern(input: AwsCloudWatchEventsTestEventPatternInput!, config: AwsConfig): AwsCloudWatchEventsTestEventPatternOutput
  untagResource(input: AwsCloudWatchEventsUntagResourceInput!, config: AwsConfig): JSON
}

input AwsCloudWatchEventsDeleteRuleInput {
  Name: String!
  Force: Boolean
}

type AwsCloudWatchEventsDescribeEventBusOutput {
  Name: String
  Arn: String
  Policy: String
}

input AwsCloudWatchEventsDescribeRuleInput {
  Name: String!
}

type AwsCloudWatchEventsDescribeRuleOutput {
  Name: String
  Arn: String
  EventPattern: String
  ScheduleExpression: String
  State: String
  Description: String
  RoleArn: String
  ManagedBy: String
}

input AwsCloudWatchEventsDisableRuleInput {
  Name: String!
}

input AwsCloudWatchEventsEnableRuleInput {
  Name: String!
}

input AwsCloudWatchEventsListRuleNamesByTargetInput {
  TargetArn: String!
  NextToken: String
  Limit: Int
}

type AwsCloudWatchEventsListRuleNamesByTargetOutput {
  RuleNames: [String]
  NextToken: String
}

input AwsCloudWatchEventsListRulesInput {
  NamePrefix: String
  NextToken: String
  Limit: Int
}

type AwsCloudWatchEventsListRulesOutput {
  Rules: [AwsCloudWatchEventsListRulesOutputRules]
  NextToken: String
}

type AwsCloudWatchEventsListRulesOutputRules {
  Name: String
  Arn: String
  EventPattern: String
  State: String
  Description: String
  ScheduleExpression: String
  RoleArn: String
  ManagedBy: String
}

input AwsCloudWatchEventsListTagsForResourceInput {
  ResourceARN: String!
}

type AwsCloudWatchEventsListTagsForResourceOutput {
  Tags: [AwsCloudWatchEventsSv]
}

input AwsCloudWatchEventsListTargetsByRuleInput {
  Rule: String!
  NextToken: String
  Limit: Int
}

type AwsCloudWatchEventsListTargetsByRuleOutput {
  Targets: [AwsCloudWatchEventsS11]
  NextToken: String
}

input AwsCloudWatchEventsPutEventsEntriesInput {
  Time: Date
  Source: String
  Resources: [String]
  DetailType: String
  Detail: String
}

input AwsCloudWatchEventsPutEventsInput {
  Entries: [AwsCloudWatchEventsPutEventsEntriesInput]!
}

type AwsCloudWatchEventsPutEventsOutput {
  FailedEntryCount: Int
  Entries: [AwsCloudWatchEventsPutEventsOutputEntries]
}

type AwsCloudWatchEventsPutEventsOutputEntries {
  EventId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsCloudWatchEventsPutPermissionConditionInput {
  Type: String!
  Key: String!
  Value: String!
}

input AwsCloudWatchEventsPutPermissionInput {
  Action: String!
  Principal: String!
  StatementId: String!
  Condition: AwsCloudWatchEventsPutPermissionConditionInput
}

input AwsCloudWatchEventsPutRuleInput {
  Name: String!
  ScheduleExpression: String
  EventPattern: String
  State: String
  Description: String
  RoleArn: String
  Tags: [AwsCloudWatchEventsSvInput]
}

type AwsCloudWatchEventsPutRuleOutput {
  RuleArn: String
}

input AwsCloudWatchEventsPutTargetsInput {
  Rule: String!
  Targets: [AwsCloudWatchEventsS11Input]!
}

type AwsCloudWatchEventsPutTargetsOutput {
  FailedEntryCount: Int
  FailedEntries: [AwsCloudWatchEventsPutTargetsOutputFailedEntries]
}

type AwsCloudWatchEventsPutTargetsOutputFailedEntries {
  TargetId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsCloudWatchEventsRemovePermissionInput {
  StatementId: String!
}

input AwsCloudWatchEventsRemoveTargetsInput {
  Rule: String!
  Ids: [String]!
  Force: Boolean
}

type AwsCloudWatchEventsRemoveTargetsOutput {
  FailedEntryCount: Int
  FailedEntries: [AwsCloudWatchEventsRemoveTargetsOutputFailedEntries]
}

type AwsCloudWatchEventsRemoveTargetsOutputFailedEntries {
  TargetId: String
  ErrorCode: String
  ErrorMessage: String
}

type AwsCloudWatchEventsS11 {
  Id: String!
  Arn: String!
  RoleArn: String
  Input: String
  InputPath: String
  InputTransformer: AwsCloudWatchEventsS11InputTransformer
  KinesisParameters: AwsCloudWatchEventsS11KinesisParameters
  RunCommandParameters: AwsCloudWatchEventsS11RunCommandParameters
  EcsParameters: AwsCloudWatchEventsS11EcsParameters
  BatchParameters: AwsCloudWatchEventsS11BatchParameters
  SqsParameters: AwsCloudWatchEventsS11SqsParameters
}

type AwsCloudWatchEventsS11BatchParameters {
  JobDefinition: String!
  JobName: String!
  ArrayProperties: AwsCloudWatchEventsS11BatchParametersArrayProperties
  RetryStrategy: AwsCloudWatchEventsS11BatchParametersRetryStrategy
}

type AwsCloudWatchEventsS11BatchParametersArrayProperties {
  Size: Int
}

input AwsCloudWatchEventsS11BatchParametersArrayPropertiesInput {
  Size: Int
}

input AwsCloudWatchEventsS11BatchParametersInput {
  JobDefinition: String!
  JobName: String!
  ArrayProperties: AwsCloudWatchEventsS11BatchParametersArrayPropertiesInput
  RetryStrategy: AwsCloudWatchEventsS11BatchParametersRetryStrategyInput
}

type AwsCloudWatchEventsS11BatchParametersRetryStrategy {
  Attempts: Int
}

input AwsCloudWatchEventsS11BatchParametersRetryStrategyInput {
  Attempts: Int
}

type AwsCloudWatchEventsS11EcsParameters {
  TaskDefinitionArn: String!
  TaskCount: Int
  LaunchType: String
  NetworkConfiguration: AwsCloudWatchEventsS11EcsParametersNetworkConfiguration
  PlatformVersion: String
  Group: String
}

input AwsCloudWatchEventsS11EcsParametersInput {
  TaskDefinitionArn: String!
  TaskCount: Int
  LaunchType: String
  NetworkConfiguration: AwsCloudWatchEventsS11EcsParametersNetworkConfigurationInput
  PlatformVersion: String
  Group: String
}

type AwsCloudWatchEventsS11EcsParametersNetworkConfiguration {
  awsvpcConfiguration: AwsCloudWatchEventsS11EcsParametersNetworkConfigurationAwsvpcConfiguration
}

type AwsCloudWatchEventsS11EcsParametersNetworkConfigurationAwsvpcConfiguration {
  Subnets: [String]!
  SecurityGroups: [String]
  AssignPublicIp: String
}

input AwsCloudWatchEventsS11EcsParametersNetworkConfigurationAwsvpcConfigurationInput {
  Subnets: [String]!
  SecurityGroups: [String]
  AssignPublicIp: String
}

input AwsCloudWatchEventsS11EcsParametersNetworkConfigurationInput {
  awsvpcConfiguration: AwsCloudWatchEventsS11EcsParametersNetworkConfigurationAwsvpcConfigurationInput
}

input AwsCloudWatchEventsS11Input {
  Id: String!
  Arn: String!
  RoleArn: String
  Input: String
  InputPath: String
  InputTransformer: AwsCloudWatchEventsS11InputTransformerInput
  KinesisParameters: AwsCloudWatchEventsS11KinesisParametersInput
  RunCommandParameters: AwsCloudWatchEventsS11RunCommandParametersInput
  EcsParameters: AwsCloudWatchEventsS11EcsParametersInput
  BatchParameters: AwsCloudWatchEventsS11BatchParametersInput
  SqsParameters: AwsCloudWatchEventsS11SqsParametersInput
}

type AwsCloudWatchEventsS11InputTransformer {
  InputPathsMap: JSON
  InputTemplate: String!
}

input AwsCloudWatchEventsS11InputTransformerInput {
  InputPathsMap: JSON
  InputTemplate: String!
}

type AwsCloudWatchEventsS11KinesisParameters {
  PartitionKeyPath: String!
}

input AwsCloudWatchEventsS11KinesisParametersInput {
  PartitionKeyPath: String!
}

type AwsCloudWatchEventsS11RunCommandParameters {
  RunCommandTargets: [AwsCloudWatchEventsS11RunCommandParametersRunCommandTargets]!
}

input AwsCloudWatchEventsS11RunCommandParametersInput {
  RunCommandTargets: [AwsCloudWatchEventsS11RunCommandParametersRunCommandTargetsInput]!
}

type AwsCloudWatchEventsS11RunCommandParametersRunCommandTargets {
  Key: String!
  Values: [String]!
}

input AwsCloudWatchEventsS11RunCommandParametersRunCommandTargetsInput {
  Key: String!
  Values: [String]!
}

type AwsCloudWatchEventsS11SqsParameters {
  MessageGroupId: String
}

input AwsCloudWatchEventsS11SqsParametersInput {
  MessageGroupId: String
}

type AwsCloudWatchEventsSv {
  Key: String!
  Value: String!
}

input AwsCloudWatchEventsSvInput {
  Key: String!
  Value: String!
}

input AwsCloudWatchEventsTagResourceInput {
  ResourceARN: String!
  Tags: [AwsCloudWatchEventsSvInput]!
}

input AwsCloudWatchEventsTestEventPatternInput {
  EventPattern: String!
  Event: String!
}

type AwsCloudWatchEventsTestEventPatternOutput {
  Result: Boolean
}

input AwsCloudWatchEventsUntagResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

input AwsCloudWatchGetDashboardInput {
  DashboardName: String!
}

type AwsCloudWatchGetDashboardOutput {
  DashboardArn: String
  DashboardBody: String
  DashboardName: String
}

input AwsCloudWatchGetMetricDataInput {
  MetricDataQueries: [AwsCloudWatchS1fInput]!
  StartTime: Date!
  EndTime: Date!
  NextToken: String
  ScanBy: String
  MaxDatapoints: Int
}

type AwsCloudWatchGetMetricDataOutput {
  MetricDataResults: [AwsCloudWatchGetMetricDataOutputMetricDataResults]
  NextToken: String
  Messages: [AwsCloudWatchS2e]
}

type AwsCloudWatchGetMetricDataOutputMetricDataResults {
  Id: String
  Label: String
  Timestamps: [Date]
  Values: [JSON]
  StatusCode: String
  Messages: [AwsCloudWatchS2e]
}

input AwsCloudWatchGetMetricStatisticsInput {
  Namespace: String!
  MetricName: String!
  Dimensions: [AwsCloudWatchS7Input]
  StartTime: Date!
  EndTime: Date!
  Period: Int!
  Statistics: [String]
  ExtendedStatistics: [String]
  Unit: String
}

type AwsCloudWatchGetMetricStatisticsOutput {
  Label: String
  Datapoints: [AwsCloudWatchGetMetricStatisticsOutputDatapoints]
}

type AwsCloudWatchGetMetricStatisticsOutputDatapoints {
  Timestamp: Date
  SampleCount: JSON
  Average: JSON
  Sum: JSON
  Minimum: JSON
  Maximum: JSON
  Unit: String
  ExtendedStatistics: JSON
}

input AwsCloudWatchGetMetricWidgetImageInput {
  MetricWidget: String!
  OutputFormat: String
}

type AwsCloudWatchGetMetricWidgetImageOutput {
  MetricWidgetImage: JSON
}

input AwsCloudWatchListDashboardsInput {
  DashboardNamePrefix: String
  NextToken: String
}

type AwsCloudWatchListDashboardsOutput {
  DashboardEntries: [AwsCloudWatchListDashboardsOutputDashboardEntries]
  NextToken: String
}

type AwsCloudWatchListDashboardsOutputDashboardEntries {
  DashboardName: String
  DashboardArn: String
  LastModified: Date
  Size: JSON
}

input AwsCloudWatchListMetricsDimensionsInput {
  Name: String!
  Value: String
}

input AwsCloudWatchListMetricsInput {
  Namespace: String
  MetricName: String
  Dimensions: [AwsCloudWatchListMetricsDimensionsInput]
  NextToken: String
}

type AwsCloudWatchListMetricsOutput {
  Metrics: [AwsCloudWatchS1j]
  NextToken: String
}

input AwsCloudWatchListTagsForResourceInput {
  ResourceARN: String!
}

type AwsCloudWatchListTagsForResourceOutput {
  Tags: [AwsCloudWatchS39]
}

"""Amazon CloudWatch Logs (2014-03-28)"""
type AwsCloudWatchLogs {
  associateKmsKey(input: AwsCloudWatchLogsAssociateKmsKeyInput!, config: AwsConfig): JSON
  cancelExportTask(input: AwsCloudWatchLogsCancelExportTaskInput!, config: AwsConfig): JSON
  createExportTask(input: AwsCloudWatchLogsCreateExportTaskInput!, config: AwsConfig): AwsCloudWatchLogsCreateExportTaskOutput
  createLogGroup(input: AwsCloudWatchLogsCreateLogGroupInput!, config: AwsConfig): JSON
  createLogStream(input: AwsCloudWatchLogsCreateLogStreamInput!, config: AwsConfig): JSON
  deleteDestination(input: AwsCloudWatchLogsDeleteDestinationInput!, config: AwsConfig): JSON
  deleteLogGroup(input: AwsCloudWatchLogsDeleteLogGroupInput!, config: AwsConfig): JSON
  deleteLogStream(input: AwsCloudWatchLogsDeleteLogStreamInput!, config: AwsConfig): JSON
  deleteMetricFilter(input: AwsCloudWatchLogsDeleteMetricFilterInput!, config: AwsConfig): JSON
  deleteResourcePolicy(input: AwsCloudWatchLogsDeleteResourcePolicyInput, config: AwsConfig): JSON
  deleteRetentionPolicy(input: AwsCloudWatchLogsDeleteRetentionPolicyInput!, config: AwsConfig): JSON
  deleteSubscriptionFilter(input: AwsCloudWatchLogsDeleteSubscriptionFilterInput!, config: AwsConfig): JSON
  describeDestinations(input: AwsCloudWatchLogsDescribeDestinationsInput, config: AwsConfig): AwsCloudWatchLogsDescribeDestinationsOutput
  describeExportTasks(input: AwsCloudWatchLogsDescribeExportTasksInput, config: AwsConfig): AwsCloudWatchLogsDescribeExportTasksOutput
  describeLogGroups(input: AwsCloudWatchLogsDescribeLogGroupsInput, config: AwsConfig): AwsCloudWatchLogsDescribeLogGroupsOutput
  describeLogStreams(input: AwsCloudWatchLogsDescribeLogStreamsInput!, config: AwsConfig): AwsCloudWatchLogsDescribeLogStreamsOutput
  describeMetricFilters(input: AwsCloudWatchLogsDescribeMetricFiltersInput, config: AwsConfig): AwsCloudWatchLogsDescribeMetricFiltersOutput
  describeQueries(input: AwsCloudWatchLogsDescribeQueriesInput, config: AwsConfig): AwsCloudWatchLogsDescribeQueriesOutput
  describeResourcePolicies(input: AwsCloudWatchLogsDescribeResourcePoliciesInput, config: AwsConfig): AwsCloudWatchLogsDescribeResourcePoliciesOutput
  describeSubscriptionFilters(input: AwsCloudWatchLogsDescribeSubscriptionFiltersInput!, config: AwsConfig): AwsCloudWatchLogsDescribeSubscriptionFiltersOutput
  disassociateKmsKey(input: AwsCloudWatchLogsDisassociateKmsKeyInput!, config: AwsConfig): JSON
  filterLogEvents(input: AwsCloudWatchLogsFilterLogEventsInput!, config: AwsConfig): AwsCloudWatchLogsFilterLogEventsOutput
  getLogEvents(input: AwsCloudWatchLogsGetLogEventsInput!, config: AwsConfig): AwsCloudWatchLogsGetLogEventsOutput
  getLogGroupFields(input: AwsCloudWatchLogsGetLogGroupFieldsInput!, config: AwsConfig): AwsCloudWatchLogsGetLogGroupFieldsOutput
  getLogRecord(input: AwsCloudWatchLogsGetLogRecordInput!, config: AwsConfig): AwsCloudWatchLogsGetLogRecordOutput
  getQueryResults(input: AwsCloudWatchLogsGetQueryResultsInput!, config: AwsConfig): AwsCloudWatchLogsGetQueryResultsOutput
  listTagsLogGroup(input: AwsCloudWatchLogsListTagsLogGroupInput!, config: AwsConfig): AwsCloudWatchLogsListTagsLogGroupOutput
  putDestination(input: AwsCloudWatchLogsPutDestinationInput!, config: AwsConfig): AwsCloudWatchLogsPutDestinationOutput
  putDestinationPolicy(input: AwsCloudWatchLogsPutDestinationPolicyInput!, config: AwsConfig): JSON
  putLogEvents(input: AwsCloudWatchLogsPutLogEventsInput!, config: AwsConfig): AwsCloudWatchLogsPutLogEventsOutput
  putMetricFilter(input: AwsCloudWatchLogsPutMetricFilterInput!, config: AwsConfig): JSON
  putResourcePolicy(input: AwsCloudWatchLogsPutResourcePolicyInput, config: AwsConfig): AwsCloudWatchLogsPutResourcePolicyOutput
  putRetentionPolicy(input: AwsCloudWatchLogsPutRetentionPolicyInput!, config: AwsConfig): JSON
  putSubscriptionFilter(input: AwsCloudWatchLogsPutSubscriptionFilterInput!, config: AwsConfig): JSON
  startQuery(input: AwsCloudWatchLogsStartQueryInput!, config: AwsConfig): AwsCloudWatchLogsStartQueryOutput
  stopQuery(input: AwsCloudWatchLogsStopQueryInput!, config: AwsConfig): AwsCloudWatchLogsStopQueryOutput
  tagLogGroup(input: AwsCloudWatchLogsTagLogGroupInput!, config: AwsConfig): JSON
  testMetricFilter(input: AwsCloudWatchLogsTestMetricFilterInput!, config: AwsConfig): AwsCloudWatchLogsTestMetricFilterOutput
  untagLogGroup(input: AwsCloudWatchLogsUntagLogGroupInput!, config: AwsConfig): JSON
}

input AwsCloudWatchLogsAssociateKmsKeyInput {
  logGroupName: String!
  kmsKeyId: String!
}

input AwsCloudWatchLogsCancelExportTaskInput {
  taskId: String!
}

input AwsCloudWatchLogsCreateExportTaskInput {
  taskName: String
  logGroupName: String!
  logStreamNamePrefix: String
  from: JSON!
  to: JSON!
  destination: String!
  destinationPrefix: String
}

type AwsCloudWatchLogsCreateExportTaskOutput {
  taskId: String
}

input AwsCloudWatchLogsCreateLogGroupInput {
  logGroupName: String!
  kmsKeyId: String
  tags: JSON
}

input AwsCloudWatchLogsCreateLogStreamInput {
  logGroupName: String!
  logStreamName: String!
}

input AwsCloudWatchLogsDeleteDestinationInput {
  destinationName: String!
}

input AwsCloudWatchLogsDeleteLogGroupInput {
  logGroupName: String!
}

input AwsCloudWatchLogsDeleteLogStreamInput {
  logGroupName: String!
  logStreamName: String!
}

input AwsCloudWatchLogsDeleteMetricFilterInput {
  logGroupName: String!
  filterName: String!
}

input AwsCloudWatchLogsDeleteResourcePolicyInput {
  policyName: String
}

input AwsCloudWatchLogsDeleteRetentionPolicyInput {
  logGroupName: String!
}

input AwsCloudWatchLogsDeleteSubscriptionFilterInput {
  logGroupName: String!
  filterName: String!
}

input AwsCloudWatchLogsDescribeDestinationsInput {
  DestinationNamePrefix: String
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeDestinationsOutput {
  destinations: [AwsCloudWatchLogsSx]
  nextToken: String
}

input AwsCloudWatchLogsDescribeExportTasksInput {
  taskId: String
  statusCode: String
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeExportTasksOutput {
  exportTasks: [AwsCloudWatchLogsDescribeExportTasksOutputExportTasks]
  nextToken: String
}

type AwsCloudWatchLogsDescribeExportTasksOutputExportTasks {
  taskId: String
  taskName: String
  logGroupName: String
  from: JSON
  to: JSON
  destination: String
  destinationPrefix: String
  status: AwsCloudWatchLogsDescribeExportTasksOutputExportTasksStatus
  executionInfo: AwsCloudWatchLogsDescribeExportTasksOutputExportTasksExecutionInfo
}

type AwsCloudWatchLogsDescribeExportTasksOutputExportTasksExecutionInfo {
  creationTime: JSON
  completionTime: JSON
}

type AwsCloudWatchLogsDescribeExportTasksOutputExportTasksStatus {
  code: String
  message: String
}

input AwsCloudWatchLogsDescribeLogGroupsInput {
  logGroupNamePrefix: String
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeLogGroupsOutput {
  logGroups: [AwsCloudWatchLogsDescribeLogGroupsOutputLogGroups]
  nextToken: String
}

type AwsCloudWatchLogsDescribeLogGroupsOutputLogGroups {
  logGroupName: String
  creationTime: JSON
  retentionInDays: Int
  metricFilterCount: Int
  arn: String
  storedBytes: JSON
  kmsKeyId: String
}

input AwsCloudWatchLogsDescribeLogStreamsInput {
  logGroupName: String!
  logStreamNamePrefix: String
  orderBy: String
  descending: Boolean
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeLogStreamsOutput {
  logStreams: [AwsCloudWatchLogsDescribeLogStreamsOutputLogStreams]
  nextToken: String
}

type AwsCloudWatchLogsDescribeLogStreamsOutputLogStreams {
  logStreamName: String
  creationTime: JSON
  firstEventTimestamp: JSON
  lastEventTimestamp: JSON
  lastIngestionTime: JSON
  uploadSequenceToken: String
  arn: String
  storedBytes: JSON
}

input AwsCloudWatchLogsDescribeMetricFiltersInput {
  logGroupName: String
  filterNamePrefix: String
  nextToken: String
  limit: Int
  metricName: String
  metricNamespace: String
}

type AwsCloudWatchLogsDescribeMetricFiltersOutput {
  metricFilters: [AwsCloudWatchLogsDescribeMetricFiltersOutputMetricFilters]
  nextToken: String
}

type AwsCloudWatchLogsDescribeMetricFiltersOutputMetricFilters {
  filterName: String
  filterPattern: String
  metricTransformations: [AwsCloudWatchLogsS1v]
  creationTime: JSON
  logGroupName: String
}

input AwsCloudWatchLogsDescribeQueriesInput {
  logGroupName: String
  status: String
  maxResults: Int
  nextToken: String
}

type AwsCloudWatchLogsDescribeQueriesOutput {
  queries: [AwsCloudWatchLogsDescribeQueriesOutputQueries]
  nextToken: String
}

type AwsCloudWatchLogsDescribeQueriesOutputQueries {
  queryId: String
  queryString: String
  status: String
  createTime: JSON
  logGroupName: String
}

input AwsCloudWatchLogsDescribeResourcePoliciesInput {
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeResourcePoliciesOutput {
  resourcePolicies: [AwsCloudWatchLogsS2a]
  nextToken: String
}

input AwsCloudWatchLogsDescribeSubscriptionFiltersInput {
  logGroupName: String!
  filterNamePrefix: String
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeSubscriptionFiltersOutput {
  subscriptionFilters: [AwsCloudWatchLogsDescribeSubscriptionFiltersOutputSubscriptionFilters]
  nextToken: String
}

type AwsCloudWatchLogsDescribeSubscriptionFiltersOutputSubscriptionFilters {
  filterName: String
  logGroupName: String
  filterPattern: String
  destinationArn: String
  roleArn: String
  distribution: String
  creationTime: JSON
}

input AwsCloudWatchLogsDisassociateKmsKeyInput {
  logGroupName: String!
}

input AwsCloudWatchLogsFilterLogEventsInput {
  logGroupName: String!
  logStreamNames: [String]
  logStreamNamePrefix: String
  startTime: JSON
  endTime: JSON
  filterPattern: String
  nextToken: String
  limit: Int
  interleaved: Boolean
}

type AwsCloudWatchLogsFilterLogEventsOutput {
  events: [AwsCloudWatchLogsFilterLogEventsOutputEvents]
  searchedLogStreams: [AwsCloudWatchLogsFilterLogEventsOutputSearchedLogStreams]
  nextToken: String
}

type AwsCloudWatchLogsFilterLogEventsOutputEvents {
  logStreamName: String
  timestamp: JSON
  message: String
  ingestionTime: JSON
  eventId: String
}

type AwsCloudWatchLogsFilterLogEventsOutputSearchedLogStreams {
  logStreamName: String
  searchedCompletely: Boolean
}

input AwsCloudWatchLogsGetLogEventsInput {
  logGroupName: String!
  logStreamName: String!
  startTime: JSON
  endTime: JSON
  nextToken: String
  limit: Int
  startFromHead: Boolean
}

type AwsCloudWatchLogsGetLogEventsOutput {
  events: [AwsCloudWatchLogsGetLogEventsOutputEvents]
  nextForwardToken: String
  nextBackwardToken: String
}

type AwsCloudWatchLogsGetLogEventsOutputEvents {
  timestamp: JSON
  message: String
  ingestionTime: JSON
}

input AwsCloudWatchLogsGetLogGroupFieldsInput {
  logGroupName: String!
  time: JSON
}

type AwsCloudWatchLogsGetLogGroupFieldsOutput {
  logGroupFields: [AwsCloudWatchLogsGetLogGroupFieldsOutputLogGroupFields]
}

type AwsCloudWatchLogsGetLogGroupFieldsOutputLogGroupFields {
  name: String
  percent: Int
}

input AwsCloudWatchLogsGetLogRecordInput {
  logRecordPointer: String!
}

type AwsCloudWatchLogsGetLogRecordOutput {
  logRecord: JSON
}

input AwsCloudWatchLogsGetQueryResultsInput {
  queryId: String!
}

type AwsCloudWatchLogsGetQueryResultsOutput {
  results: [[AwsCloudWatchLogsGetQueryResultsOutputResults]]
  statistics: AwsCloudWatchLogsGetQueryResultsOutputStatistics
  status: String
}

type AwsCloudWatchLogsGetQueryResultsOutputResults {
  field: String
  value: String
}

type AwsCloudWatchLogsGetQueryResultsOutputStatistics {
  recordsMatched: JSON
  recordsScanned: JSON
  bytesScanned: JSON
}

input AwsCloudWatchLogsListTagsLogGroupInput {
  logGroupName: String!
}

type AwsCloudWatchLogsListTagsLogGroupOutput {
  tags: JSON
}

input AwsCloudWatchLogsPutDestinationInput {
  destinationName: String!
  targetArn: String!
  roleArn: String!
}

type AwsCloudWatchLogsPutDestinationOutput {
  destination: AwsCloudWatchLogsSx
}

input AwsCloudWatchLogsPutDestinationPolicyInput {
  destinationName: String!
  accessPolicy: String!
}

input AwsCloudWatchLogsPutLogEventsInput {
  logGroupName: String!
  logStreamName: String!
  logEvents: [AwsCloudWatchLogsPutLogEventsLogEventsInput]!
  sequenceToken: String
}

input AwsCloudWatchLogsPutLogEventsLogEventsInput {
  timestamp: JSON!
  message: String!
}

type AwsCloudWatchLogsPutLogEventsOutput {
  nextSequenceToken: String
  rejectedLogEventsInfo: AwsCloudWatchLogsPutLogEventsOutputRejectedLogEventsInfo
}

type AwsCloudWatchLogsPutLogEventsOutputRejectedLogEventsInfo {
  tooNewLogEventStartIndex: Int
  tooOldLogEventEndIndex: Int
  expiredLogEventEndIndex: Int
}

input AwsCloudWatchLogsPutMetricFilterInput {
  logGroupName: String!
  filterName: String!
  filterPattern: String!
  metricTransformations: [AwsCloudWatchLogsS1vInput]!
}

input AwsCloudWatchLogsPutResourcePolicyInput {
  policyName: String
  policyDocument: String
}

type AwsCloudWatchLogsPutResourcePolicyOutput {
  resourcePolicy: AwsCloudWatchLogsS2a
}

input AwsCloudWatchLogsPutRetentionPolicyInput {
  logGroupName: String!
  retentionInDays: Int!
}

input AwsCloudWatchLogsPutSubscriptionFilterInput {
  logGroupName: String!
  filterName: String!
  filterPattern: String!
  destinationArn: String!
  roleArn: String
  distribution: String
}

type AwsCloudWatchLogsS1v {
  metricName: String!
  metricNamespace: String!
  metricValue: String!
  defaultValue: JSON
}

input AwsCloudWatchLogsS1vInput {
  metricName: String!
  metricNamespace: String!
  metricValue: String!
  defaultValue: JSON
}

type AwsCloudWatchLogsS2a {
  policyName: String
  policyDocument: String
  lastUpdatedTime: JSON
}

input AwsCloudWatchLogsStartQueryInput {
  logGroupName: String!
  startTime: JSON!
  endTime: JSON!
  queryString: String!
  limit: Int
}

type AwsCloudWatchLogsStartQueryOutput {
  queryId: String
}

input AwsCloudWatchLogsStopQueryInput {
  queryId: String!
}

type AwsCloudWatchLogsStopQueryOutput {
  success: Boolean
}

type AwsCloudWatchLogsSx {
  destinationName: String
  targetArn: String
  roleArn: String
  accessPolicy: String
  arn: String
  creationTime: JSON
}

input AwsCloudWatchLogsTagLogGroupInput {
  logGroupName: String!
  tags: JSON!
}

input AwsCloudWatchLogsTestMetricFilterInput {
  filterPattern: String!
  logEventMessages: [String]!
}

type AwsCloudWatchLogsTestMetricFilterOutput {
  matches: [AwsCloudWatchLogsTestMetricFilterOutputMatches]
}

type AwsCloudWatchLogsTestMetricFilterOutputMatches {
  eventNumber: JSON
  eventMessage: String
  extractedValues: JSON
}

input AwsCloudWatchLogsUntagLogGroupInput {
  logGroupName: String!
  tags: [String]!
}

input AwsCloudWatchPutAnomalyDetectorInput {
  Namespace: String!
  MetricName: String!
  Dimensions: [AwsCloudWatchS7Input]
  Stat: String!
  Configuration: AwsCloudWatchS1uInput
}

input AwsCloudWatchPutDashboardInput {
  DashboardName: String!
  DashboardBody: String!
}

type AwsCloudWatchPutDashboardOutput {
  DashboardValidationMessages: [AwsCloudWatchPutDashboardOutputDashboardValidationMessages]
}

type AwsCloudWatchPutDashboardOutputDashboardValidationMessages {
  DataPath: String
  Message: String
}

input AwsCloudWatchPutMetricAlarmInput {
  AlarmName: String!
  AlarmDescription: String
  ActionsEnabled: Boolean
  OKActions: [String]
  AlarmActions: [String]
  InsufficientDataActions: [String]
  MetricName: String
  Namespace: String
  Statistic: String
  ExtendedStatistic: String
  Dimensions: [AwsCloudWatchS7Input]
  Period: Int
  Unit: String
  EvaluationPeriods: Int!
  DatapointsToAlarm: Int
  Threshold: JSON
  ComparisonOperator: String!
  TreatMissingData: String
  EvaluateLowSampleCountPercentile: String
  Metrics: [AwsCloudWatchS1fInput]
  Tags: [AwsCloudWatchS39Input]
  ThresholdMetricId: String
}

input AwsCloudWatchPutMetricDataInput {
  Namespace: String!
  MetricData: [AwsCloudWatchPutMetricDataMetricDataInput]!
}

input AwsCloudWatchPutMetricDataMetricDataInput {
  MetricName: String!
  Dimensions: [AwsCloudWatchS7Input]
  Timestamp: Date
  Value: JSON
  StatisticValues: AwsCloudWatchPutMetricDataMetricDataStatisticValuesInput
  Values: [JSON]
  Counts: [JSON]
  Unit: String
  StorageResolution: Int
}

input AwsCloudWatchPutMetricDataMetricDataStatisticValuesInput {
  SampleCount: JSON!
  Sum: JSON!
  Minimum: JSON!
  Maximum: JSON!
}

type AwsCloudWatchS1f {
  Id: String!
  MetricStat: AwsCloudWatchS1fMetricStat
  Expression: String
  Label: String
  ReturnData: Boolean
}

input AwsCloudWatchS1fInput {
  Id: String!
  MetricStat: AwsCloudWatchS1fMetricStatInput
  Expression: String
  Label: String
  ReturnData: Boolean
}

type AwsCloudWatchS1fMetricStat {
  Metric: AwsCloudWatchS1j!
  Period: Int!
  Stat: String!
  Unit: String
}

input AwsCloudWatchS1fMetricStatInput {
  Metric: AwsCloudWatchS1jInput!
  Period: Int!
  Stat: String!
  Unit: String
}

type AwsCloudWatchS1j {
  Namespace: String
  MetricName: String
  Dimensions: [AwsCloudWatchS7]
}

input AwsCloudWatchS1jInput {
  Namespace: String
  MetricName: String
  Dimensions: [AwsCloudWatchS7Input]
}

type AwsCloudWatchS1u {
  ExcludedTimeRanges: [AwsCloudWatchS1uExcludedTimeRanges]
  MetricTimezone: String
}

type AwsCloudWatchS1uExcludedTimeRanges {
  StartTime: Date!
  EndTime: Date!
}

input AwsCloudWatchS1uExcludedTimeRangesInput {
  StartTime: Date!
  EndTime: Date!
}

input AwsCloudWatchS1uInput {
  ExcludedTimeRanges: [AwsCloudWatchS1uExcludedTimeRangesInput]
  MetricTimezone: String
}

type AwsCloudWatchS2e {
  Code: String
  Value: String
}

type AwsCloudWatchS39 {
  Key: String!
  Value: String!
}

input AwsCloudWatchS39Input {
  Key: String!
  Value: String!
}

type AwsCloudWatchS7 {
  Name: String!
  Value: String!
}

input AwsCloudWatchS7Input {
  Name: String!
  Value: String!
}

input AwsCloudWatchSetAlarmStateInput {
  AlarmName: String!
  StateValue: String!
  StateReason: String!
  StateReasonData: String
}

type AwsCloudWatchSw {
  AlarmName: String
  AlarmArn: String
  AlarmDescription: String
  AlarmConfigurationUpdatedTimestamp: Date
  ActionsEnabled: Boolean
  OKActions: [String]
  AlarmActions: [String]
  InsufficientDataActions: [String]
  StateValue: String
  StateReason: String
  StateReasonData: String
  StateUpdatedTimestamp: Date
  MetricName: String
  Namespace: String
  Statistic: String
  ExtendedStatistic: String
  Dimensions: [AwsCloudWatchS7]
  Period: Int
  Unit: String
  EvaluationPeriods: Int
  DatapointsToAlarm: Int
  Threshold: JSON
  ComparisonOperator: String
  TreatMissingData: String
  EvaluateLowSampleCountPercentile: String
  Metrics: [AwsCloudWatchS1f]
  ThresholdMetricId: String
}

input AwsCloudWatchTagResourceInput {
  ResourceARN: String!
  Tags: [AwsCloudWatchS39Input]!
}

input AwsCloudWatchUntagResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

"""AWS CodeBuild (2016-10-06)"""
type AwsCodeBuild {
  batchDeleteBuilds(input: AwsCodeBuildBatchDeleteBuildsInput!, config: AwsConfig): AwsCodeBuildBatchDeleteBuildsOutput
  batchGetBuilds(input: AwsCodeBuildBatchGetBuildsInput!, config: AwsConfig): AwsCodeBuildBatchGetBuildsOutput
  batchGetProjects(input: AwsCodeBuildBatchGetProjectsInput!, config: AwsConfig): AwsCodeBuildBatchGetProjectsOutput
  createProject(input: AwsCodeBuildCreateProjectInput!, config: AwsConfig): AwsCodeBuildCreateProjectOutput
  createWebhook(input: AwsCodeBuildCreateWebhookInput!, config: AwsConfig): AwsCodeBuildCreateWebhookOutput
  deleteProject(input: AwsCodeBuildDeleteProjectInput!, config: AwsConfig): JSON
  deleteSourceCredentials(input: AwsCodeBuildDeleteSourceCredentialsInput!, config: AwsConfig): AwsCodeBuildDeleteSourceCredentialsOutput
  deleteWebhook(input: AwsCodeBuildDeleteWebhookInput!, config: AwsConfig): JSON
  importSourceCredentials(input: AwsCodeBuildImportSourceCredentialsInput!, config: AwsConfig): AwsCodeBuildImportSourceCredentialsOutput
  invalidateProjectCache(input: AwsCodeBuildInvalidateProjectCacheInput!, config: AwsConfig): JSON
  listBuilds(input: AwsCodeBuildListBuildsInput, config: AwsConfig): AwsCodeBuildListBuildsOutput
  listBuildsForProject(input: AwsCodeBuildListBuildsForProjectInput!, config: AwsConfig): AwsCodeBuildListBuildsForProjectOutput
  listCuratedEnvironmentImages(input: JSON, config: AwsConfig): AwsCodeBuildListCuratedEnvironmentImagesOutput
  listProjects(input: AwsCodeBuildListProjectsInput, config: AwsConfig): AwsCodeBuildListProjectsOutput
  listSourceCredentials(input: JSON, config: AwsConfig): AwsCodeBuildListSourceCredentialsOutput
  startBuild(input: AwsCodeBuildStartBuildInput!, config: AwsConfig): AwsCodeBuildStartBuildOutput
  stopBuild(input: AwsCodeBuildStopBuildInput!, config: AwsConfig): AwsCodeBuildStopBuildOutput
  updateProject(input: AwsCodeBuildUpdateProjectInput!, config: AwsConfig): AwsCodeBuildUpdateProjectOutput
  updateWebhook(input: AwsCodeBuildUpdateWebhookInput!, config: AwsConfig): AwsCodeBuildUpdateWebhookOutput
}

input AwsCodeBuildBatchDeleteBuildsInput {
  ids: [String]!
}

type AwsCodeBuildBatchDeleteBuildsOutput {
  buildsDeleted: [String]
  buildsNotDeleted: [AwsCodeBuildBatchDeleteBuildsOutputBuildsNotDeleted]
}

type AwsCodeBuildBatchDeleteBuildsOutputBuildsNotDeleted {
  id: String
  statusCode: String
}

input AwsCodeBuildBatchGetBuildsInput {
  ids: [String]!
}

type AwsCodeBuildBatchGetBuildsOutput {
  builds: [AwsCodeBuildSb]
  buildsNotFound: [String]
}

input AwsCodeBuildBatchGetProjectsInput {
  names: [String]!
}

type AwsCodeBuildBatchGetProjectsOutput {
  projects: [AwsCodeBuildS1n]
  projectsNotFound: [String]
}

input AwsCodeBuildCreateProjectInput {
  name: String!
  description: String
  source: AwsCodeBuildSkInput!
  secondarySources: [AwsCodeBuildSkInput]
  sourceVersion: String
  secondarySourceVersions: [AwsCodeBuildSsInput]
  artifacts: AwsCodeBuildS1qInput!
  secondaryArtifacts: [AwsCodeBuildS1qInput]
  cache: AwsCodeBuildSwInput
  environment: AwsCodeBuildS10Input!
  serviceRole: String!
  timeoutInMinutes: Int
  queuedTimeoutInMinutes: Int
  encryptionKey: String
  tags: [AwsCodeBuildS1wInput]
  vpcConfig: AwsCodeBuildS1fInput
  badgeEnabled: Boolean
  logsConfig: AwsCodeBuildS26Input
}

type AwsCodeBuildCreateProjectOutput {
  project: AwsCodeBuildS1n
}

input AwsCodeBuildCreateWebhookInput {
  projectName: String!
  branchFilter: String
  filterGroups: [[AwsCodeBuildS21Input]]
}

type AwsCodeBuildCreateWebhookOutput {
  webhook: AwsCodeBuildS20
}

input AwsCodeBuildDeleteProjectInput {
  name: String!
}

input AwsCodeBuildDeleteSourceCredentialsInput {
  arn: String!
}

type AwsCodeBuildDeleteSourceCredentialsOutput {
  arn: String
}

input AwsCodeBuildDeleteWebhookInput {
  projectName: String!
}

input AwsCodeBuildImportSourceCredentialsInput {
  username: String
  token: String!
  serverType: String!
  authType: String!
}

type AwsCodeBuildImportSourceCredentialsOutput {
  arn: String
}

input AwsCodeBuildInvalidateProjectCacheInput {
  projectName: String!
}

input AwsCodeBuildListBuildsForProjectInput {
  projectName: String!
  sortOrder: String
  nextToken: String
}

type AwsCodeBuildListBuildsForProjectOutput {
  ids: [String]
  nextToken: String
}

input AwsCodeBuildListBuildsInput {
  sortOrder: String
  nextToken: String
}

type AwsCodeBuildListBuildsOutput {
  ids: [String]
  nextToken: String
}

type AwsCodeBuildListCuratedEnvironmentImagesOutput {
  platforms: [AwsCodeBuildListCuratedEnvironmentImagesOutputPlatforms]
}

type AwsCodeBuildListCuratedEnvironmentImagesOutputPlatforms {
  platform: String
  languages: [AwsCodeBuildListCuratedEnvironmentImagesOutputPlatformsLanguages]
}

type AwsCodeBuildListCuratedEnvironmentImagesOutputPlatformsLanguages {
  language: String
  images: [AwsCodeBuildListCuratedEnvironmentImagesOutputPlatformsLanguagesImages]
}

type AwsCodeBuildListCuratedEnvironmentImagesOutputPlatformsLanguagesImages {
  name: String
  description: String
  versions: [String]
}

input AwsCodeBuildListProjectsInput {
  sortBy: String
  sortOrder: String
  nextToken: String
}

type AwsCodeBuildListProjectsOutput {
  nextToken: String
  projects: [String]
}

type AwsCodeBuildListSourceCredentialsOutput {
  sourceCredentialsInfos: [AwsCodeBuildListSourceCredentialsOutputSourceCredentialsInfos]
}

type AwsCodeBuildListSourceCredentialsOutputSourceCredentialsInfos {
  arn: String
  serverType: String
  authType: String
}

type AwsCodeBuildS10 {
  type: String!
  image: String!
  computeType: String!
  environmentVariables: [AwsCodeBuildS13]
  privilegedMode: Boolean
  certificate: String
  registryCredential: AwsCodeBuildS16
  imagePullCredentialsType: String
}

input AwsCodeBuildS10Input {
  type: String!
  image: String!
  computeType: String!
  environmentVariables: [AwsCodeBuildS13Input]
  privilegedMode: Boolean
  certificate: String
  registryCredential: AwsCodeBuildS16Input
  imagePullCredentialsType: String
}

type AwsCodeBuildS13 {
  name: String!
  value: String!
  type: String
}

input AwsCodeBuildS13Input {
  name: String!
  value: String!
  type: String
}

type AwsCodeBuildS16 {
  credential: String!
  credentialProvider: String!
}

input AwsCodeBuildS16Input {
  credential: String!
  credentialProvider: String!
}

type AwsCodeBuildS1a {
  status: String!
  groupName: String
  streamName: String
}

input AwsCodeBuildS1aInput {
  status: String!
  groupName: String
  streamName: String
}

type AwsCodeBuildS1c {
  status: String!
  location: String
  encryptionDisabled: Boolean
}

input AwsCodeBuildS1cInput {
  status: String!
  location: String
  encryptionDisabled: Boolean
}

type AwsCodeBuildS1f {
  vpcId: String
  subnets: [String]
  securityGroupIds: [String]
}

input AwsCodeBuildS1fInput {
  vpcId: String
  subnets: [String]
  securityGroupIds: [String]
}

type AwsCodeBuildS1n {
  name: String
  arn: String
  description: String
  source: AwsCodeBuildSk
  secondarySources: [AwsCodeBuildSk]
  sourceVersion: String
  secondarySourceVersions: [AwsCodeBuildSs]
  artifacts: AwsCodeBuildS1q
  secondaryArtifacts: [AwsCodeBuildS1q]
  cache: AwsCodeBuildSw
  environment: AwsCodeBuildS10
  serviceRole: String
  timeoutInMinutes: Int
  queuedTimeoutInMinutes: Int
  encryptionKey: String
  tags: [AwsCodeBuildS1w]
  created: Date
  lastModified: Date
  webhook: AwsCodeBuildS20
  vpcConfig: AwsCodeBuildS1f
  badge: AwsCodeBuildS1nBadge
  logsConfig: AwsCodeBuildS26
}

type AwsCodeBuildS1nBadge {
  badgeEnabled: Boolean
  badgeRequestUrl: String
}

type AwsCodeBuildS1q {
  type: String!
  location: String
  path: String
  namespaceType: String
  name: String
  packaging: String
  overrideArtifactName: Boolean
  encryptionDisabled: Boolean
  artifactIdentifier: String
}

input AwsCodeBuildS1qInput {
  type: String!
  location: String
  path: String
  namespaceType: String
  name: String
  packaging: String
  overrideArtifactName: Boolean
  encryptionDisabled: Boolean
  artifactIdentifier: String
}

type AwsCodeBuildS1w {
  key: String
  value: String
}

input AwsCodeBuildS1wInput {
  key: String
  value: String
}

type AwsCodeBuildS20 {
  url: String
  payloadUrl: String
  secret: String
  branchFilter: String
  filterGroups: [[AwsCodeBuildS21]]
  lastModifiedSecret: Date
}

type AwsCodeBuildS21 {
  type: String!
  pattern: String!
  excludeMatchedPattern: Boolean
}

input AwsCodeBuildS21Input {
  type: String!
  pattern: String!
  excludeMatchedPattern: Boolean
}

type AwsCodeBuildS26 {
  cloudWatchLogs: AwsCodeBuildS1a
  s3Logs: AwsCodeBuildS1c
}

input AwsCodeBuildS26Input {
  cloudWatchLogs: AwsCodeBuildS1aInput
  s3Logs: AwsCodeBuildS1cInput
}

type AwsCodeBuildSb {
  id: String
  arn: String
  startTime: Date
  endTime: Date
  currentPhase: String
  buildStatus: String
  sourceVersion: String
  resolvedSourceVersion: String
  projectName: String
  phases: [AwsCodeBuildSbPhases]
  source: AwsCodeBuildSk
  secondarySources: [AwsCodeBuildSk]
  secondarySourceVersions: [AwsCodeBuildSs]
  artifacts: AwsCodeBuildSu
  secondaryArtifacts: [AwsCodeBuildSu]
  cache: AwsCodeBuildSw
  environment: AwsCodeBuildS10
  serviceRole: String
  logs: AwsCodeBuildSbLogs
  timeoutInMinutes: Int
  queuedTimeoutInMinutes: Int
  buildComplete: Boolean
  initiator: String
  vpcConfig: AwsCodeBuildS1f
  networkInterface: AwsCodeBuildSbNetworkInterface
  encryptionKey: String
}

type AwsCodeBuildSbLogs {
  groupName: String
  streamName: String
  deepLink: String
  s3DeepLink: String
  cloudWatchLogs: AwsCodeBuildS1a
  s3Logs: AwsCodeBuildS1c
}

type AwsCodeBuildSbNetworkInterface {
  subnetId: String
  networkInterfaceId: String
}

type AwsCodeBuildSbPhases {
  phaseType: String
  phaseStatus: String
  startTime: Date
  endTime: Date
  durationInSeconds: JSON
  contexts: [AwsCodeBuildSbPhasesContexts]
}

type AwsCodeBuildSbPhasesContexts {
  statusCode: String
  message: String
}

type AwsCodeBuildSk {
  type: String!
  location: String
  gitCloneDepth: Int
  gitSubmodulesConfig: AwsCodeBuildSn
  buildspec: String
  auth: AwsCodeBuildSp
  reportBuildStatus: Boolean
  insecureSsl: Boolean
  sourceIdentifier: String
}

input AwsCodeBuildSkInput {
  type: String!
  location: String
  gitCloneDepth: Int
  gitSubmodulesConfig: AwsCodeBuildSnInput
  buildspec: String
  auth: AwsCodeBuildSpInput
  reportBuildStatus: Boolean
  insecureSsl: Boolean
  sourceIdentifier: String
}

type AwsCodeBuildSn {
  fetchSubmodules: Boolean!
}

input AwsCodeBuildSnInput {
  fetchSubmodules: Boolean!
}

type AwsCodeBuildSp {
  type: String!
  resource: String
}

input AwsCodeBuildSpInput {
  type: String!
  resource: String
}

type AwsCodeBuildSs {
  sourceIdentifier: String!
  sourceVersion: String!
}

input AwsCodeBuildSsInput {
  sourceIdentifier: String!
  sourceVersion: String!
}

input AwsCodeBuildStartBuildInput {
  projectName: String!
  secondarySourcesOverride: [AwsCodeBuildSkInput]
  secondarySourcesVersionOverride: [AwsCodeBuildSsInput]
  sourceVersion: String
  artifactsOverride: AwsCodeBuildS1qInput
  secondaryArtifactsOverride: [AwsCodeBuildS1qInput]
  environmentVariablesOverride: [AwsCodeBuildS13Input]
  sourceTypeOverride: String
  sourceLocationOverride: String
  sourceAuthOverride: AwsCodeBuildSpInput
  gitCloneDepthOverride: Int
  gitSubmodulesConfigOverride: AwsCodeBuildSnInput
  buildspecOverride: String
  insecureSslOverride: Boolean
  reportBuildStatusOverride: Boolean
  environmentTypeOverride: String
  imageOverride: String
  computeTypeOverride: String
  certificateOverride: String
  cacheOverride: AwsCodeBuildSwInput
  serviceRoleOverride: String
  privilegedModeOverride: Boolean
  timeoutInMinutesOverride: Int
  queuedTimeoutInMinutesOverride: Int
  idempotencyToken: String
  logsConfigOverride: AwsCodeBuildS26Input
  registryCredentialOverride: AwsCodeBuildS16Input
  imagePullCredentialsTypeOverride: String
}

type AwsCodeBuildStartBuildOutput {
  build: AwsCodeBuildSb
}

input AwsCodeBuildStopBuildInput {
  id: String!
}

type AwsCodeBuildStopBuildOutput {
  build: AwsCodeBuildSb
}

type AwsCodeBuildSu {
  location: String
  sha256sum: String
  md5sum: String
  overrideArtifactName: Boolean
  encryptionDisabled: Boolean
  artifactIdentifier: String
}

type AwsCodeBuildSw {
  type: String!
  location: String
  modes: [String]
}

input AwsCodeBuildSwInput {
  type: String!
  location: String
  modes: [String]
}

input AwsCodeBuildUpdateProjectInput {
  name: String!
  description: String
  source: AwsCodeBuildSkInput
  secondarySources: [AwsCodeBuildSkInput]
  sourceVersion: String
  secondarySourceVersions: [AwsCodeBuildSsInput]
  artifacts: AwsCodeBuildS1qInput
  secondaryArtifacts: [AwsCodeBuildS1qInput]
  cache: AwsCodeBuildSwInput
  environment: AwsCodeBuildS10Input
  serviceRole: String
  timeoutInMinutes: Int
  queuedTimeoutInMinutes: Int
  encryptionKey: String
  tags: [AwsCodeBuildS1wInput]
  vpcConfig: AwsCodeBuildS1fInput
  badgeEnabled: Boolean
  logsConfig: AwsCodeBuildS26Input
}

type AwsCodeBuildUpdateProjectOutput {
  project: AwsCodeBuildS1n
}

input AwsCodeBuildUpdateWebhookInput {
  projectName: String!
  branchFilter: String
  rotateSecret: Boolean
  filterGroups: [[AwsCodeBuildS21Input]]
}

type AwsCodeBuildUpdateWebhookOutput {
  webhook: AwsCodeBuildS20
}

"""AWS CodeCommit (2015-04-13)"""
type AwsCodeCommit {
  batchDescribeMergeConflicts(input: AwsCodeCommitBatchDescribeMergeConflictsInput!, config: AwsConfig): AwsCodeCommitBatchDescribeMergeConflictsOutput
  batchGetRepositories(input: AwsCodeCommitBatchGetRepositoriesInput!, config: AwsConfig): AwsCodeCommitBatchGetRepositoriesOutput
  createBranch(input: AwsCodeCommitCreateBranchInput!, config: AwsConfig): JSON
  createCommit(input: AwsCodeCommitCreateCommitInput!, config: AwsConfig): AwsCodeCommitCreateCommitOutput
  createPullRequest(input: AwsCodeCommitCreatePullRequestInput!, config: AwsConfig): AwsCodeCommitCreatePullRequestOutput
  createRepository(input: AwsCodeCommitCreateRepositoryInput!, config: AwsConfig): AwsCodeCommitCreateRepositoryOutput
  createUnreferencedMergeCommit(input: AwsCodeCommitCreateUnreferencedMergeCommitInput!, config: AwsConfig): AwsCodeCommitCreateUnreferencedMergeCommitOutput
  deleteBranch(input: AwsCodeCommitDeleteBranchInput!, config: AwsConfig): AwsCodeCommitDeleteBranchOutput
  deleteCommentContent(input: AwsCodeCommitDeleteCommentContentInput!, config: AwsConfig): AwsCodeCommitDeleteCommentContentOutput
  deleteFile(input: AwsCodeCommitDeleteFileInput!, config: AwsConfig): AwsCodeCommitDeleteFileOutput
  deleteRepository(input: AwsCodeCommitDeleteRepositoryInput!, config: AwsConfig): AwsCodeCommitDeleteRepositoryOutput
  describeMergeConflicts(input: AwsCodeCommitDescribeMergeConflictsInput!, config: AwsConfig): AwsCodeCommitDescribeMergeConflictsOutput
  describePullRequestEvents(input: AwsCodeCommitDescribePullRequestEventsInput!, config: AwsConfig): AwsCodeCommitDescribePullRequestEventsOutput
  getBlob(input: AwsCodeCommitGetBlobInput!, config: AwsConfig): AwsCodeCommitGetBlobOutput
  getBranch(input: AwsCodeCommitGetBranchInput, config: AwsConfig): AwsCodeCommitGetBranchOutput
  getComment(input: AwsCodeCommitGetCommentInput!, config: AwsConfig): AwsCodeCommitGetCommentOutput
  getCommentsForComparedCommit(input: AwsCodeCommitGetCommentsForComparedCommitInput!, config: AwsConfig): AwsCodeCommitGetCommentsForComparedCommitOutput
  getCommentsForPullRequest(input: AwsCodeCommitGetCommentsForPullRequestInput!, config: AwsConfig): AwsCodeCommitGetCommentsForPullRequestOutput
  getCommit(input: AwsCodeCommitGetCommitInput!, config: AwsConfig): AwsCodeCommitGetCommitOutput
  getDifferences(input: AwsCodeCommitGetDifferencesInput!, config: AwsConfig): AwsCodeCommitGetDifferencesOutput
  getFile(input: AwsCodeCommitGetFileInput!, config: AwsConfig): AwsCodeCommitGetFileOutput
  getFolder(input: AwsCodeCommitGetFolderInput!, config: AwsConfig): AwsCodeCommitGetFolderOutput
  getMergeCommit(input: AwsCodeCommitGetMergeCommitInput!, config: AwsConfig): AwsCodeCommitGetMergeCommitOutput
  getMergeConflicts(input: AwsCodeCommitGetMergeConflictsInput!, config: AwsConfig): AwsCodeCommitGetMergeConflictsOutput
  getMergeOptions(input: AwsCodeCommitGetMergeOptionsInput!, config: AwsConfig): AwsCodeCommitGetMergeOptionsOutput
  getPullRequest(input: AwsCodeCommitGetPullRequestInput!, config: AwsConfig): AwsCodeCommitGetPullRequestOutput
  getRepository(input: AwsCodeCommitGetRepositoryInput!, config: AwsConfig): AwsCodeCommitGetRepositoryOutput
  getRepositoryTriggers(input: AwsCodeCommitGetRepositoryTriggersInput!, config: AwsConfig): AwsCodeCommitGetRepositoryTriggersOutput
  listBranches(input: AwsCodeCommitListBranchesInput!, config: AwsConfig): AwsCodeCommitListBranchesOutput
  listPullRequests(input: AwsCodeCommitListPullRequestsInput!, config: AwsConfig): AwsCodeCommitListPullRequestsOutput
  listRepositories(input: AwsCodeCommitListRepositoriesInput, config: AwsConfig): AwsCodeCommitListRepositoriesOutput
  listTagsForResource(input: AwsCodeCommitListTagsForResourceInput!, config: AwsConfig): AwsCodeCommitListTagsForResourceOutput
  mergeBranchesByFastForward(input: AwsCodeCommitMergeBranchesByFastForwardInput!, config: AwsConfig): AwsCodeCommitMergeBranchesByFastForwardOutput
  mergeBranchesBySquash(input: AwsCodeCommitMergeBranchesBySquashInput!, config: AwsConfig): AwsCodeCommitMergeBranchesBySquashOutput
  mergeBranchesByThreeWay(input: AwsCodeCommitMergeBranchesByThreeWayInput!, config: AwsConfig): AwsCodeCommitMergeBranchesByThreeWayOutput
  mergePullRequestByFastForward(input: AwsCodeCommitMergePullRequestByFastForwardInput!, config: AwsConfig): AwsCodeCommitMergePullRequestByFastForwardOutput
  mergePullRequestBySquash(input: AwsCodeCommitMergePullRequestBySquashInput!, config: AwsConfig): AwsCodeCommitMergePullRequestBySquashOutput
  mergePullRequestByThreeWay(input: AwsCodeCommitMergePullRequestByThreeWayInput!, config: AwsConfig): AwsCodeCommitMergePullRequestByThreeWayOutput
  postCommentForComparedCommit(input: AwsCodeCommitPostCommentForComparedCommitInput!, config: AwsConfig): AwsCodeCommitPostCommentForComparedCommitOutput
  postCommentForPullRequest(input: AwsCodeCommitPostCommentForPullRequestInput!, config: AwsConfig): AwsCodeCommitPostCommentForPullRequestOutput
  postCommentReply(input: AwsCodeCommitPostCommentReplyInput!, config: AwsConfig): AwsCodeCommitPostCommentReplyOutput
  putFile(input: AwsCodeCommitPutFileInput!, config: AwsConfig): AwsCodeCommitPutFileOutput
  putRepositoryTriggers(input: AwsCodeCommitPutRepositoryTriggersInput!, config: AwsConfig): AwsCodeCommitPutRepositoryTriggersOutput
  tagResource(input: AwsCodeCommitTagResourceInput!, config: AwsConfig): JSON
  testRepositoryTriggers(input: AwsCodeCommitTestRepositoryTriggersInput!, config: AwsConfig): AwsCodeCommitTestRepositoryTriggersOutput
  untagResource(input: AwsCodeCommitUntagResourceInput!, config: AwsConfig): JSON
  updateComment(input: AwsCodeCommitUpdateCommentInput!, config: AwsConfig): AwsCodeCommitUpdateCommentOutput
  updateDefaultBranch(input: AwsCodeCommitUpdateDefaultBranchInput!, config: AwsConfig): JSON
  updatePullRequestDescription(input: AwsCodeCommitUpdatePullRequestDescriptionInput!, config: AwsConfig): AwsCodeCommitUpdatePullRequestDescriptionOutput
  updatePullRequestStatus(input: AwsCodeCommitUpdatePullRequestStatusInput!, config: AwsConfig): AwsCodeCommitUpdatePullRequestStatusOutput
  updatePullRequestTitle(input: AwsCodeCommitUpdatePullRequestTitleInput!, config: AwsConfig): AwsCodeCommitUpdatePullRequestTitleOutput
  updateRepositoryDescription(input: AwsCodeCommitUpdateRepositoryDescriptionInput!, config: AwsConfig): JSON
  updateRepositoryName(input: AwsCodeCommitUpdateRepositoryNameInput!, config: AwsConfig): JSON
}

input AwsCodeCommitBatchDescribeMergeConflictsInput {
  repositoryName: String!
  destinationCommitSpecifier: String!
  sourceCommitSpecifier: String!
  mergeOption: String!
  maxMergeHunks: Int
  maxConflictFiles: Int
  filePaths: [String]
  conflictDetailLevel: String
  conflictResolutionStrategy: String
  nextToken: String
}

type AwsCodeCommitBatchDescribeMergeConflictsOutput {
  conflicts: [AwsCodeCommitBatchDescribeMergeConflictsOutputConflicts]!
  nextToken: String
  errors: [AwsCodeCommitBatchDescribeMergeConflictsOutputErrors]
  destinationCommitId: String!
  sourceCommitId: String!
  baseCommitId: String
}

type AwsCodeCommitBatchDescribeMergeConflictsOutputConflicts {
  conflictMetadata: AwsCodeCommitSe
  mergeHunks: [AwsCodeCommitSt]
}

type AwsCodeCommitBatchDescribeMergeConflictsOutputErrors {
  filePath: String!
  exceptionName: String!
  message: String!
}

input AwsCodeCommitBatchGetRepositoriesInput {
  repositoryNames: [String]!
}

type AwsCodeCommitBatchGetRepositoriesOutput {
  repositories: [AwsCodeCommitS18]
  repositoriesNotFound: [String]
}

input AwsCodeCommitCreateBranchInput {
  repositoryName: String!
  branchName: String!
  commitId: String!
}

input AwsCodeCommitCreateCommitInput {
  repositoryName: String!
  branchName: String!
  parentCommitId: String
  authorName: String
  email: String
  commitMessage: String
  keepEmptyFolders: Boolean
  putFiles: [AwsCodeCommitCreateCommitPutFilesInput]
  deleteFiles: [AwsCodeCommitS1uInput]
  setFileModes: [AwsCodeCommitS1wInput]
}

type AwsCodeCommitCreateCommitOutput {
  commitId: String
  treeId: String
  filesAdded: [AwsCodeCommitS1z]
  filesUpdated: [AwsCodeCommitS1z]
  filesDeleted: [AwsCodeCommitS1z]
}

input AwsCodeCommitCreateCommitPutFilesInput {
  filePath: String!
  fileMode: String
  fileContent: JSON
  sourceFile: AwsCodeCommitCreateCommitPutFilesSourceFileInput
}

input AwsCodeCommitCreateCommitPutFilesSourceFileInput {
  filePath: String!
  isMove: Boolean
}

input AwsCodeCommitCreatePullRequestInput {
  title: String!
  description: String
  targets: [AwsCodeCommitCreatePullRequestTargetsInput]!
  clientRequestToken: String
}

type AwsCodeCommitCreatePullRequestOutput {
  pullRequest: AwsCodeCommitS29!
}

input AwsCodeCommitCreatePullRequestTargetsInput {
  repositoryName: String!
  sourceReference: String!
  destinationReference: String
}

input AwsCodeCommitCreateRepositoryInput {
  repositoryName: String!
  repositoryDescription: String
  tags: JSON
}

type AwsCodeCommitCreateRepositoryOutput {
  repositoryMetadata: AwsCodeCommitS18
}

input AwsCodeCommitCreateUnreferencedMergeCommitInput {
  repositoryName: String!
  sourceCommitSpecifier: String!
  destinationCommitSpecifier: String!
  mergeOption: String!
  conflictDetailLevel: String
  conflictResolutionStrategy: String
  authorName: String
  email: String
  commitMessage: String
  keepEmptyFolders: Boolean
  conflictResolution: AwsCodeCommitS2mInput
}

type AwsCodeCommitCreateUnreferencedMergeCommitOutput {
  commitId: String
  treeId: String
}

input AwsCodeCommitDeleteBranchInput {
  repositoryName: String!
  branchName: String!
}

type AwsCodeCommitDeleteBranchOutput {
  deletedBranch: AwsCodeCommitS2t
}

input AwsCodeCommitDeleteCommentContentInput {
  commentId: String!
}

type AwsCodeCommitDeleteCommentContentOutput {
  comment: AwsCodeCommitS2x
}

input AwsCodeCommitDeleteFileInput {
  repositoryName: String!
  branchName: String!
  filePath: String!
  parentCommitId: String!
  keepEmptyFolders: Boolean
  commitMessage: String
  name: String
  email: String
}

type AwsCodeCommitDeleteFileOutput {
  commitId: String!
  blobId: String!
  treeId: String!
  filePath: String!
}

input AwsCodeCommitDeleteRepositoryInput {
  repositoryName: String!
}

type AwsCodeCommitDeleteRepositoryOutput {
  repositoryId: String
}

input AwsCodeCommitDescribeMergeConflictsInput {
  repositoryName: String!
  destinationCommitSpecifier: String!
  sourceCommitSpecifier: String!
  mergeOption: String!
  maxMergeHunks: Int
  filePath: String!
  conflictDetailLevel: String
  conflictResolutionStrategy: String
  nextToken: String
}

type AwsCodeCommitDescribeMergeConflictsOutput {
  conflictMetadata: AwsCodeCommitSe!
  mergeHunks: [AwsCodeCommitSt]!
  nextToken: String
  destinationCommitId: String!
  sourceCommitId: String!
  baseCommitId: String
}

input AwsCodeCommitDescribePullRequestEventsInput {
  pullRequestId: String!
  pullRequestEventType: String
  actorArn: String
  nextToken: String
  maxResults: Int
}

type AwsCodeCommitDescribePullRequestEventsOutput {
  pullRequestEvents: [AwsCodeCommitDescribePullRequestEventsOutputPullRequestEvents]!
  nextToken: String
}

type AwsCodeCommitDescribePullRequestEventsOutputPullRequestEvents {
  pullRequestId: String
  eventDate: Date
  pullRequestEventType: String
  actorArn: String
  pullRequestCreatedEventMetadata: AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestCreatedEventMetadata
  pullRequestStatusChangedEventMetadata: AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestStatusChangedEventMetadata
  pullRequestSourceReferenceUpdatedEventMetadata: AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestSourceReferenceUpdatedEventMetadata
  pullRequestMergedStateChangedEventMetadata: AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestMergedStateChangedEventMetadata
}

type AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestCreatedEventMetadata {
  repositoryName: String
  sourceCommitId: String
  destinationCommitId: String
  mergeBase: String
}

type AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestMergedStateChangedEventMetadata {
  repositoryName: String
  destinationReference: String
  mergeMetadata: AwsCodeCommitS2e
}

type AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestSourceReferenceUpdatedEventMetadata {
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  mergeBase: String
}

type AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestStatusChangedEventMetadata {
  pullRequestStatus: String
}

input AwsCodeCommitGetBlobInput {
  repositoryName: String!
  blobId: String!
}

type AwsCodeCommitGetBlobOutput {
  content: JSON!
}

input AwsCodeCommitGetBranchInput {
  repositoryName: String
  branchName: String
}

type AwsCodeCommitGetBranchOutput {
  branch: AwsCodeCommitS2t
}

input AwsCodeCommitGetCommentInput {
  commentId: String!
}

type AwsCodeCommitGetCommentOutput {
  comment: AwsCodeCommitS2x
}

input AwsCodeCommitGetCommentsForComparedCommitInput {
  repositoryName: String!
  beforeCommitId: String
  afterCommitId: String!
  nextToken: String
  maxResults: Int
}

type AwsCodeCommitGetCommentsForComparedCommitOutput {
  commentsForComparedCommitData: [AwsCodeCommitGetCommentsForComparedCommitOutputCommentsForComparedCommitData]
  nextToken: String
}

type AwsCodeCommitGetCommentsForComparedCommitOutputCommentsForComparedCommitData {
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodeCommitS3r
  comments: [AwsCodeCommitS2x]
}

input AwsCodeCommitGetCommentsForPullRequestInput {
  pullRequestId: String!
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  nextToken: String
  maxResults: Int
}

type AwsCodeCommitGetCommentsForPullRequestOutput {
  commentsForPullRequestData: [AwsCodeCommitGetCommentsForPullRequestOutputCommentsForPullRequestData]
  nextToken: String
}

type AwsCodeCommitGetCommentsForPullRequestOutputCommentsForPullRequestData {
  pullRequestId: String
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodeCommitS3r
  comments: [AwsCodeCommitS2x]
}

input AwsCodeCommitGetCommitInput {
  repositoryName: String!
  commitId: String!
}

type AwsCodeCommitGetCommitOutput {
  commit: AwsCodeCommitGetCommitOutputCommit!
}

type AwsCodeCommitGetCommitOutputCommit {
  commitId: String
  treeId: String
  parents: [String]
  message: String
  author: AwsCodeCommitS43
  committer: AwsCodeCommitS43
  additionalData: String
}

input AwsCodeCommitGetDifferencesInput {
  repositoryName: String!
  beforeCommitSpecifier: String
  afterCommitSpecifier: String!
  beforePath: String
  afterPath: String
  MaxResults: Int
  NextToken: String
}

type AwsCodeCommitGetDifferencesOutput {
  differences: [AwsCodeCommitGetDifferencesOutputDifferences]
  NextToken: String
}

type AwsCodeCommitGetDifferencesOutputDifferences {
  beforeBlob: AwsCodeCommitS4b
  afterBlob: AwsCodeCommitS4b
  changeType: String
}

input AwsCodeCommitGetFileInput {
  repositoryName: String!
  commitSpecifier: String
  filePath: String!
}

type AwsCodeCommitGetFileOutput {
  commitId: String!
  blobId: String!
  filePath: String!
  fileMode: String!
  fileSize: JSON!
  fileContent: JSON!
}

input AwsCodeCommitGetFolderInput {
  repositoryName: String!
  commitSpecifier: String
  folderPath: String!
}

type AwsCodeCommitGetFolderOutput {
  commitId: String!
  folderPath: String!
  treeId: String
  subFolders: [AwsCodeCommitGetFolderOutputSubFolders]
  files: [AwsCodeCommitGetFolderOutputFiles]
  symbolicLinks: [AwsCodeCommitGetFolderOutputSymbolicLinks]
  subModules: [AwsCodeCommitGetFolderOutputSubModules]
}

type AwsCodeCommitGetFolderOutputFiles {
  blobId: String
  absolutePath: String
  relativePath: String
  fileMode: String
}

type AwsCodeCommitGetFolderOutputSubFolders {
  treeId: String
  absolutePath: String
  relativePath: String
}

type AwsCodeCommitGetFolderOutputSubModules {
  commitId: String
  absolutePath: String
  relativePath: String
}

type AwsCodeCommitGetFolderOutputSymbolicLinks {
  blobId: String
  absolutePath: String
  relativePath: String
  fileMode: String
}

input AwsCodeCommitGetMergeCommitInput {
  repositoryName: String!
  sourceCommitSpecifier: String!
  destinationCommitSpecifier: String!
  conflictDetailLevel: String
  conflictResolutionStrategy: String
}

type AwsCodeCommitGetMergeCommitOutput {
  sourceCommitId: String
  destinationCommitId: String
  baseCommitId: String
  mergedCommitId: String
}

input AwsCodeCommitGetMergeConflictsInput {
  repositoryName: String!
  destinationCommitSpecifier: String!
  sourceCommitSpecifier: String!
  mergeOption: String!
  conflictDetailLevel: String
  maxConflictFiles: Int
  conflictResolutionStrategy: String
  nextToken: String
}

type AwsCodeCommitGetMergeConflictsOutput {
  mergeable: Boolean!
  destinationCommitId: String!
  sourceCommitId: String!
  baseCommitId: String
  conflictMetadataList: [AwsCodeCommitSe]!
  nextToken: String
}

input AwsCodeCommitGetMergeOptionsInput {
  repositoryName: String!
  sourceCommitSpecifier: String!
  destinationCommitSpecifier: String!
  conflictDetailLevel: String
  conflictResolutionStrategy: String
}

type AwsCodeCommitGetMergeOptionsOutput {
  mergeOptions: [String]!
  sourceCommitId: String!
  destinationCommitId: String!
  baseCommitId: String!
}

input AwsCodeCommitGetPullRequestInput {
  pullRequestId: String!
}

type AwsCodeCommitGetPullRequestOutput {
  pullRequest: AwsCodeCommitS29!
}

input AwsCodeCommitGetRepositoryInput {
  repositoryName: String!
}

type AwsCodeCommitGetRepositoryOutput {
  repositoryMetadata: AwsCodeCommitS18
}

input AwsCodeCommitGetRepositoryTriggersInput {
  repositoryName: String!
}

type AwsCodeCommitGetRepositoryTriggersOutput {
  configurationId: String
  triggers: [AwsCodeCommitS56]
}

input AwsCodeCommitListBranchesInput {
  repositoryName: String!
  nextToken: String
}

type AwsCodeCommitListBranchesOutput {
  branches: [String]
  nextToken: String
}

input AwsCodeCommitListPullRequestsInput {
  repositoryName: String!
  authorArn: String
  pullRequestStatus: String
  nextToken: String
  maxResults: Int
}

type AwsCodeCommitListPullRequestsOutput {
  pullRequestIds: [String]!
  nextToken: String
}

input AwsCodeCommitListRepositoriesInput {
  nextToken: String
  sortBy: String
  order: String
}

type AwsCodeCommitListRepositoriesOutput {
  repositories: [AwsCodeCommitListRepositoriesOutputRepositories]
  nextToken: String
}

type AwsCodeCommitListRepositoriesOutputRepositories {
  repositoryName: String
  repositoryId: String
}

input AwsCodeCommitListTagsForResourceInput {
  resourceArn: String!
  nextToken: String
}

type AwsCodeCommitListTagsForResourceOutput {
  tags: JSON
  nextToken: String
}

input AwsCodeCommitMergeBranchesByFastForwardInput {
  repositoryName: String!
  sourceCommitSpecifier: String!
  destinationCommitSpecifier: String!
  targetBranch: String
}

type AwsCodeCommitMergeBranchesByFastForwardOutput {
  commitId: String
  treeId: String
}

input AwsCodeCommitMergeBranchesBySquashInput {
  repositoryName: String!
  sourceCommitSpecifier: String!
  destinationCommitSpecifier: String!
  targetBranch: String
  conflictDetailLevel: String
  conflictResolutionStrategy: String
  authorName: String
  email: String
  commitMessage: String
  keepEmptyFolders: Boolean
  conflictResolution: AwsCodeCommitS2mInput
}

type AwsCodeCommitMergeBranchesBySquashOutput {
  commitId: String
  treeId: String
}

input AwsCodeCommitMergeBranchesByThreeWayInput {
  repositoryName: String!
  sourceCommitSpecifier: String!
  destinationCommitSpecifier: String!
  targetBranch: String
  conflictDetailLevel: String
  conflictResolutionStrategy: String
  authorName: String
  email: String
  commitMessage: String
  keepEmptyFolders: Boolean
  conflictResolution: AwsCodeCommitS2mInput
}

type AwsCodeCommitMergeBranchesByThreeWayOutput {
  commitId: String
  treeId: String
}

input AwsCodeCommitMergePullRequestByFastForwardInput {
  pullRequestId: String!
  repositoryName: String!
  sourceCommitId: String
}

type AwsCodeCommitMergePullRequestByFastForwardOutput {
  pullRequest: AwsCodeCommitS29
}

input AwsCodeCommitMergePullRequestBySquashInput {
  pullRequestId: String!
  repositoryName: String!
  sourceCommitId: String
  conflictDetailLevel: String
  conflictResolutionStrategy: String
  commitMessage: String
  authorName: String
  email: String
  keepEmptyFolders: Boolean
  conflictResolution: AwsCodeCommitS2mInput
}

type AwsCodeCommitMergePullRequestBySquashOutput {
  pullRequest: AwsCodeCommitS29
}

input AwsCodeCommitMergePullRequestByThreeWayInput {
  pullRequestId: String!
  repositoryName: String!
  sourceCommitId: String
  conflictDetailLevel: String
  conflictResolutionStrategy: String
  commitMessage: String
  authorName: String
  email: String
  keepEmptyFolders: Boolean
  conflictResolution: AwsCodeCommitS2mInput
}

type AwsCodeCommitMergePullRequestByThreeWayOutput {
  pullRequest: AwsCodeCommitS29
}

input AwsCodeCommitPostCommentForComparedCommitInput {
  repositoryName: String!
  beforeCommitId: String
  afterCommitId: String!
  location: AwsCodeCommitS3rInput
  content: String!
  clientRequestToken: String
}

type AwsCodeCommitPostCommentForComparedCommitOutput {
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodeCommitS3r
  comment: AwsCodeCommitS2x
}

input AwsCodeCommitPostCommentForPullRequestInput {
  pullRequestId: String!
  repositoryName: String!
  beforeCommitId: String!
  afterCommitId: String!
  location: AwsCodeCommitS3rInput
  content: String!
  clientRequestToken: String
}

type AwsCodeCommitPostCommentForPullRequestOutput {
  repositoryName: String
  pullRequestId: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodeCommitS3r
  comment: AwsCodeCommitS2x
}

input AwsCodeCommitPostCommentReplyInput {
  inReplyTo: String!
  clientRequestToken: String
  content: String!
}

type AwsCodeCommitPostCommentReplyOutput {
  comment: AwsCodeCommitS2x
}

input AwsCodeCommitPutFileInput {
  repositoryName: String!
  branchName: String!
  fileContent: JSON!
  filePath: String!
  fileMode: String
  parentCommitId: String
  commitMessage: String
  name: String
  email: String
}

type AwsCodeCommitPutFileOutput {
  commitId: String!
  blobId: String!
  treeId: String!
}

input AwsCodeCommitPutRepositoryTriggersInput {
  repositoryName: String!
  triggers: [AwsCodeCommitS56Input]!
}

type AwsCodeCommitPutRepositoryTriggersOutput {
  configurationId: String
}

type AwsCodeCommitS18 {
  accountId: String
  repositoryId: String
  repositoryName: String
  repositoryDescription: String
  defaultBranch: String
  lastModifiedDate: Date
  creationDate: Date
  cloneUrlHttp: String
  cloneUrlSsh: String
  Arn: String
}

input AwsCodeCommitS1uInput {
  filePath: String!
}

input AwsCodeCommitS1wInput {
  filePath: String!
  fileMode: String!
}

type AwsCodeCommitS1z {
  absolutePath: String
  blobId: String
  fileMode: String
}

type AwsCodeCommitS29 {
  pullRequestId: String
  title: String
  description: String
  lastActivityDate: Date
  creationDate: Date
  pullRequestStatus: String
  authorArn: String
  pullRequestTargets: [AwsCodeCommitS29PullRequestTargets]
  clientRequestToken: String
}

type AwsCodeCommitS29PullRequestTargets {
  repositoryName: String
  sourceReference: String
  destinationReference: String
  destinationCommit: String
  sourceCommit: String
  mergeBase: String
  mergeMetadata: AwsCodeCommitS2e
}

type AwsCodeCommitS2e {
  isMerged: Boolean
  mergedBy: String
  mergeCommitId: String
  mergeOption: String
}

input AwsCodeCommitS2mInput {
  replaceContents: [AwsCodeCommitS2mReplaceContentsInput]
  deleteFiles: [AwsCodeCommitS1uInput]
  setFileModes: [AwsCodeCommitS1wInput]
}

input AwsCodeCommitS2mReplaceContentsInput {
  filePath: String!
  replacementType: String!
  content: JSON
  fileMode: String
}

type AwsCodeCommitS2t {
  branchName: String
  commitId: String
}

type AwsCodeCommitS2x {
  commentId: String
  content: String
  inReplyTo: String
  creationDate: Date
  lastModifiedDate: Date
  authorArn: String
  deleted: Boolean
  clientRequestToken: String
}

type AwsCodeCommitS3r {
  filePath: String
  filePosition: JSON
  relativeFileVersion: String
}

input AwsCodeCommitS3rInput {
  filePath: String
  filePosition: JSON
  relativeFileVersion: String
}

type AwsCodeCommitS43 {
  name: String
  email: String
  date: String
}

type AwsCodeCommitS4b {
  blobId: String
  path: String
  mode: String
}

type AwsCodeCommitS56 {
  name: String!
  destinationArn: String!
  customData: String
  branches: [String]
  events: [String]!
}

input AwsCodeCommitS56Input {
  name: String!
  destinationArn: String!
  customData: String
  branches: [String]
  events: [String]!
}

type AwsCodeCommitSe {
  filePath: String
  fileSizes: AwsCodeCommitSeFileSizes
  fileModes: AwsCodeCommitSeFileModes
  objectTypes: AwsCodeCommitSeObjectTypes
  numberOfConflicts: Int
  isBinaryFile: AwsCodeCommitSeIsBinaryFile
  contentConflict: Boolean
  fileModeConflict: Boolean
  objectTypeConflict: Boolean
  mergeOperations: AwsCodeCommitSeMergeOperations
}

type AwsCodeCommitSeFileModes {
  source: String
  destination: String
  base: String
}

type AwsCodeCommitSeFileSizes {
  source: JSON
  destination: JSON
  base: JSON
}

type AwsCodeCommitSeIsBinaryFile {
  source: Boolean
  destination: Boolean
  base: Boolean
}

type AwsCodeCommitSeMergeOperations {
  source: String
  destination: String
}

type AwsCodeCommitSeObjectTypes {
  source: String
  destination: String
  base: String
}

type AwsCodeCommitSt {
  isConflict: Boolean
  source: AwsCodeCommitSw
  destination: AwsCodeCommitSw
  base: AwsCodeCommitSw
}

type AwsCodeCommitSw {
  startLine: Int
  endLine: Int
  hunkContent: String
}

input AwsCodeCommitTagResourceInput {
  resourceArn: String!
  tags: JSON!
}

input AwsCodeCommitTestRepositoryTriggersInput {
  repositoryName: String!
  triggers: [AwsCodeCommitS56Input]!
}

type AwsCodeCommitTestRepositoryTriggersOutput {
  successfulExecutions: [String]
  failedExecutions: [AwsCodeCommitTestRepositoryTriggersOutputFailedExecutions]
}

type AwsCodeCommitTestRepositoryTriggersOutputFailedExecutions {
  trigger: String
  failureMessage: String
}

input AwsCodeCommitUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsCodeCommitUpdateCommentInput {
  commentId: String!
  content: String!
}

type AwsCodeCommitUpdateCommentOutput {
  comment: AwsCodeCommitS2x
}

input AwsCodeCommitUpdateDefaultBranchInput {
  repositoryName: String!
  defaultBranchName: String!
}

input AwsCodeCommitUpdatePullRequestDescriptionInput {
  pullRequestId: String!
  description: String!
}

type AwsCodeCommitUpdatePullRequestDescriptionOutput {
  pullRequest: AwsCodeCommitS29!
}

input AwsCodeCommitUpdatePullRequestStatusInput {
  pullRequestId: String!
  pullRequestStatus: String!
}

type AwsCodeCommitUpdatePullRequestStatusOutput {
  pullRequest: AwsCodeCommitS29!
}

input AwsCodeCommitUpdatePullRequestTitleInput {
  pullRequestId: String!
  title: String!
}

type AwsCodeCommitUpdatePullRequestTitleOutput {
  pullRequest: AwsCodeCommitS29!
}

input AwsCodeCommitUpdateRepositoryDescriptionInput {
  repositoryName: String!
  repositoryDescription: String
}

input AwsCodeCommitUpdateRepositoryNameInput {
  oldName: String!
  newName: String!
}

"""AWS CodeDeploy (2014-10-06)"""
type AwsCodeDeploy {
  addTagsToOnPremisesInstances(input: AwsCodeDeployAddTagsToOnPremisesInstancesInput!, config: AwsConfig): JSON
  batchGetApplicationRevisions(input: AwsCodeDeployBatchGetApplicationRevisionsInput!, config: AwsConfig): AwsCodeDeployBatchGetApplicationRevisionsOutput
  batchGetApplications(input: AwsCodeDeployBatchGetApplicationsInput!, config: AwsConfig): AwsCodeDeployBatchGetApplicationsOutput
  batchGetDeploymentGroups(input: AwsCodeDeployBatchGetDeploymentGroupsInput!, config: AwsConfig): AwsCodeDeployBatchGetDeploymentGroupsOutput
  batchGetDeploymentInstances(input: AwsCodeDeployBatchGetDeploymentInstancesInput!, config: AwsConfig): AwsCodeDeployBatchGetDeploymentInstancesOutput
  batchGetDeploymentTargets(input: AwsCodeDeployBatchGetDeploymentTargetsInput, config: AwsConfig): AwsCodeDeployBatchGetDeploymentTargetsOutput
  batchGetDeployments(input: AwsCodeDeployBatchGetDeploymentsInput!, config: AwsConfig): AwsCodeDeployBatchGetDeploymentsOutput
  batchGetOnPremisesInstances(input: AwsCodeDeployBatchGetOnPremisesInstancesInput!, config: AwsConfig): AwsCodeDeployBatchGetOnPremisesInstancesOutput
  continueDeployment(input: AwsCodeDeployContinueDeploymentInput, config: AwsConfig): JSON
  createApplication(input: AwsCodeDeployCreateApplicationInput!, config: AwsConfig): AwsCodeDeployCreateApplicationOutput
  createDeployment(input: AwsCodeDeployCreateDeploymentInput!, config: AwsConfig): AwsCodeDeployCreateDeploymentOutput
  createDeploymentConfig(input: AwsCodeDeployCreateDeploymentConfigInput!, config: AwsConfig): AwsCodeDeployCreateDeploymentConfigOutput
  createDeploymentGroup(input: AwsCodeDeployCreateDeploymentGroupInput!, config: AwsConfig): AwsCodeDeployCreateDeploymentGroupOutput
  deleteApplication(input: AwsCodeDeployDeleteApplicationInput!, config: AwsConfig): JSON
  deleteDeploymentConfig(input: AwsCodeDeployDeleteDeploymentConfigInput!, config: AwsConfig): JSON
  deleteDeploymentGroup(input: AwsCodeDeployDeleteDeploymentGroupInput!, config: AwsConfig): AwsCodeDeployDeleteDeploymentGroupOutput
  deleteGitHubAccountToken(input: AwsCodeDeployDeleteGitHubAccountTokenInput, config: AwsConfig): AwsCodeDeployDeleteGitHubAccountTokenOutput
  deregisterOnPremisesInstance(input: AwsCodeDeployDeregisterOnPremisesInstanceInput!, config: AwsConfig): JSON
  getApplication(input: AwsCodeDeployGetApplicationInput!, config: AwsConfig): AwsCodeDeployGetApplicationOutput
  getApplicationRevision(input: AwsCodeDeployGetApplicationRevisionInput!, config: AwsConfig): AwsCodeDeployGetApplicationRevisionOutput
  getDeployment(input: AwsCodeDeployGetDeploymentInput!, config: AwsConfig): AwsCodeDeployGetDeploymentOutput
  getDeploymentConfig(input: AwsCodeDeployGetDeploymentConfigInput!, config: AwsConfig): AwsCodeDeployGetDeploymentConfigOutput
  getDeploymentGroup(input: AwsCodeDeployGetDeploymentGroupInput!, config: AwsConfig): AwsCodeDeployGetDeploymentGroupOutput
  getDeploymentInstance(input: AwsCodeDeployGetDeploymentInstanceInput!, config: AwsConfig): AwsCodeDeployGetDeploymentInstanceOutput
  getDeploymentTarget(input: AwsCodeDeployGetDeploymentTargetInput, config: AwsConfig): AwsCodeDeployGetDeploymentTargetOutput
  getOnPremisesInstance(input: AwsCodeDeployGetOnPremisesInstanceInput!, config: AwsConfig): AwsCodeDeployGetOnPremisesInstanceOutput
  listApplicationRevisions(input: AwsCodeDeployListApplicationRevisionsInput!, config: AwsConfig): AwsCodeDeployListApplicationRevisionsOutput
  listApplications(input: AwsCodeDeployListApplicationsInput, config: AwsConfig): AwsCodeDeployListApplicationsOutput
  listDeploymentConfigs(input: AwsCodeDeployListDeploymentConfigsInput, config: AwsConfig): AwsCodeDeployListDeploymentConfigsOutput
  listDeploymentGroups(input: AwsCodeDeployListDeploymentGroupsInput!, config: AwsConfig): AwsCodeDeployListDeploymentGroupsOutput
  listDeploymentInstances(input: AwsCodeDeployListDeploymentInstancesInput!, config: AwsConfig): AwsCodeDeployListDeploymentInstancesOutput
  listDeploymentTargets(input: AwsCodeDeployListDeploymentTargetsInput, config: AwsConfig): AwsCodeDeployListDeploymentTargetsOutput
  listDeployments(input: AwsCodeDeployListDeploymentsInput, config: AwsConfig): AwsCodeDeployListDeploymentsOutput
  listGitHubAccountTokenNames(input: AwsCodeDeployListGitHubAccountTokenNamesInput, config: AwsConfig): AwsCodeDeployListGitHubAccountTokenNamesOutput
  listOnPremisesInstances(input: AwsCodeDeployListOnPremisesInstancesInput, config: AwsConfig): AwsCodeDeployListOnPremisesInstancesOutput
  listTagsForResource(input: AwsCodeDeployListTagsForResourceInput!, config: AwsConfig): AwsCodeDeployListTagsForResourceOutput
  putLifecycleEventHookExecutionStatus(input: AwsCodeDeployPutLifecycleEventHookExecutionStatusInput, config: AwsConfig): AwsCodeDeployPutLifecycleEventHookExecutionStatusOutput
  registerApplicationRevision(input: AwsCodeDeployRegisterApplicationRevisionInput!, config: AwsConfig): JSON
  registerOnPremisesInstance(input: AwsCodeDeployRegisterOnPremisesInstanceInput!, config: AwsConfig): JSON
  removeTagsFromOnPremisesInstances(input: AwsCodeDeployRemoveTagsFromOnPremisesInstancesInput!, config: AwsConfig): JSON
  skipWaitTimeForInstanceTermination(input: AwsCodeDeploySkipWaitTimeForInstanceTerminationInput, config: AwsConfig): JSON
  stopDeployment(input: AwsCodeDeployStopDeploymentInput!, config: AwsConfig): AwsCodeDeployStopDeploymentOutput
  tagResource(input: AwsCodeDeployTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsCodeDeployUntagResourceInput!, config: AwsConfig): JSON
  updateApplication(input: AwsCodeDeployUpdateApplicationInput, config: AwsConfig): JSON
  updateDeploymentGroup(input: AwsCodeDeployUpdateDeploymentGroupInput!, config: AwsConfig): AwsCodeDeployUpdateDeploymentGroupOutput
}

input AwsCodeDeployAddTagsToOnPremisesInstancesInput {
  tags: [AwsCodeDeployS2Input]!
  instanceNames: [String]!
}

input AwsCodeDeployBatchGetApplicationRevisionsInput {
  applicationName: String!
  revisions: [AwsCodeDeploySbInput]!
}

type AwsCodeDeployBatchGetApplicationRevisionsOutput {
  applicationName: String
  errorMessage: String
  revisions: [AwsCodeDeployBatchGetApplicationRevisionsOutputRevisions]
}

type AwsCodeDeployBatchGetApplicationRevisionsOutputRevisions {
  revisionLocation: AwsCodeDeploySb
  genericRevisionInfo: AwsCodeDeploySu
}

input AwsCodeDeployBatchGetApplicationsInput {
  applicationNames: [String]!
}

type AwsCodeDeployBatchGetApplicationsOutput {
  applicationsInfo: [AwsCodeDeployS13]
}

input AwsCodeDeployBatchGetDeploymentGroupsInput {
  applicationName: String!
  deploymentGroupNames: [String]!
}

type AwsCodeDeployBatchGetDeploymentGroupsOutput {
  deploymentGroupsInfo: [AwsCodeDeployS1b]
  errorMessage: String
}

input AwsCodeDeployBatchGetDeploymentInstancesInput {
  deploymentId: String!
  instanceIds: [String]!
}

type AwsCodeDeployBatchGetDeploymentInstancesOutput {
  instancesSummary: [AwsCodeDeployS35]
  errorMessage: String
}

input AwsCodeDeployBatchGetDeploymentsInput {
  deploymentIds: [String]!
}

type AwsCodeDeployBatchGetDeploymentsOutput {
  deploymentsInfo: [AwsCodeDeployS49]
}

input AwsCodeDeployBatchGetDeploymentTargetsInput {
  deploymentId: String
  targetIds: [String]
}

type AwsCodeDeployBatchGetDeploymentTargetsOutput {
  deploymentTargets: [AwsCodeDeployS3m]
}

input AwsCodeDeployBatchGetOnPremisesInstancesInput {
  instanceNames: [String]!
}

type AwsCodeDeployBatchGetOnPremisesInstancesOutput {
  instanceInfos: [AwsCodeDeployS4o]
}

input AwsCodeDeployContinueDeploymentInput {
  deploymentId: String
  deploymentWaitType: String
}

input AwsCodeDeployCreateApplicationInput {
  applicationName: String!
  computePlatform: String
  tags: [AwsCodeDeployS2Input]
}

type AwsCodeDeployCreateApplicationOutput {
  applicationId: String
}

input AwsCodeDeployCreateDeploymentConfigInput {
  deploymentConfigName: String!
  minimumHealthyHosts: AwsCodeDeployS4zInput
  trafficRoutingConfig: AwsCodeDeployS52Input
  computePlatform: String
}

type AwsCodeDeployCreateDeploymentConfigOutput {
  deploymentConfigId: String
}

input AwsCodeDeployCreateDeploymentGroupInput {
  applicationName: String!
  deploymentGroupName: String!
  deploymentConfigName: String
  ec2TagFilters: [AwsCodeDeployS1eInput]
  onPremisesInstanceTagFilters: [AwsCodeDeployS1hInput]
  autoScalingGroups: [String]
  serviceRoleArn: String!
  triggerConfigurations: [AwsCodeDeployS1pInput]
  alarmConfiguration: AwsCodeDeployS1vInput
  autoRollbackConfiguration: AwsCodeDeployS1zInput
  deploymentStyle: AwsCodeDeployS22Input
  blueGreenDeploymentConfiguration: AwsCodeDeployS25Input
  loadBalancerInfo: AwsCodeDeployS2dInput
  ec2TagSet: AwsCodeDeployS2sInput
  ecsServices: [AwsCodeDeployS2wInput]
  onPremisesTagSet: AwsCodeDeployS2uInput
  tags: [AwsCodeDeployS2Input]
}

type AwsCodeDeployCreateDeploymentGroupOutput {
  deploymentGroupId: String
}

input AwsCodeDeployCreateDeploymentInput {
  applicationName: String!
  deploymentGroupName: String
  revision: AwsCodeDeploySbInput
  deploymentConfigName: String
  description: String
  ignoreApplicationStopFailures: Boolean
  targetInstances: AwsCodeDeployS4gInput
  autoRollbackConfiguration: AwsCodeDeployS1zInput
  updateOutdatedInstancesOnly: Boolean
  fileExistsBehavior: String
}

type AwsCodeDeployCreateDeploymentOutput {
  deploymentId: String
}

input AwsCodeDeployDeleteApplicationInput {
  applicationName: String!
}

input AwsCodeDeployDeleteDeploymentConfigInput {
  deploymentConfigName: String!
}

input AwsCodeDeployDeleteDeploymentGroupInput {
  applicationName: String!
  deploymentGroupName: String!
}

type AwsCodeDeployDeleteDeploymentGroupOutput {
  hooksNotCleanedUp: [AwsCodeDeployS1k]
}

input AwsCodeDeployDeleteGitHubAccountTokenInput {
  tokenName: String
}

type AwsCodeDeployDeleteGitHubAccountTokenOutput {
  tokenName: String
}

input AwsCodeDeployDeregisterOnPremisesInstanceInput {
  instanceName: String!
}

input AwsCodeDeployGetApplicationInput {
  applicationName: String!
}

type AwsCodeDeployGetApplicationOutput {
  application: AwsCodeDeployS13
}

input AwsCodeDeployGetApplicationRevisionInput {
  applicationName: String!
  revision: AwsCodeDeploySbInput!
}

type AwsCodeDeployGetApplicationRevisionOutput {
  applicationName: String
  revision: AwsCodeDeploySb
  revisionInfo: AwsCodeDeploySu
}

input AwsCodeDeployGetDeploymentConfigInput {
  deploymentConfigName: String!
}

type AwsCodeDeployGetDeploymentConfigOutput {
  deploymentConfigInfo: AwsCodeDeployGetDeploymentConfigOutputDeploymentConfigInfo
}

type AwsCodeDeployGetDeploymentConfigOutputDeploymentConfigInfo {
  deploymentConfigId: String
  deploymentConfigName: String
  minimumHealthyHosts: AwsCodeDeployS4z
  createTime: Date
  computePlatform: String
  trafficRoutingConfig: AwsCodeDeployS52
}

input AwsCodeDeployGetDeploymentGroupInput {
  applicationName: String!
  deploymentGroupName: String!
}

type AwsCodeDeployGetDeploymentGroupOutput {
  deploymentGroupInfo: AwsCodeDeployS1b
}

input AwsCodeDeployGetDeploymentInput {
  deploymentId: String!
}

input AwsCodeDeployGetDeploymentInstanceInput {
  deploymentId: String!
  instanceId: String!
}

type AwsCodeDeployGetDeploymentInstanceOutput {
  instanceSummary: AwsCodeDeployS35
}

type AwsCodeDeployGetDeploymentOutput {
  deploymentInfo: AwsCodeDeployS49
}

input AwsCodeDeployGetDeploymentTargetInput {
  deploymentId: String
  targetId: String
}

type AwsCodeDeployGetDeploymentTargetOutput {
  deploymentTarget: AwsCodeDeployS3m
}

input AwsCodeDeployGetOnPremisesInstanceInput {
  instanceName: String!
}

type AwsCodeDeployGetOnPremisesInstanceOutput {
  instanceInfo: AwsCodeDeployS4o
}

input AwsCodeDeployListApplicationRevisionsInput {
  applicationName: String!
  sortBy: String
  sortOrder: String
  s3Bucket: String
  s3KeyPrefix: String
  deployed: String
  nextToken: String
}

type AwsCodeDeployListApplicationRevisionsOutput {
  revisions: [AwsCodeDeploySb]
  nextToken: String
}

input AwsCodeDeployListApplicationsInput {
  nextToken: String
}

type AwsCodeDeployListApplicationsOutput {
  applications: [String]
  nextToken: String
}

input AwsCodeDeployListDeploymentConfigsInput {
  nextToken: String
}

type AwsCodeDeployListDeploymentConfigsOutput {
  deploymentConfigsList: [String]
  nextToken: String
}

input AwsCodeDeployListDeploymentGroupsInput {
  applicationName: String!
  nextToken: String
}

type AwsCodeDeployListDeploymentGroupsOutput {
  applicationName: String
  deploymentGroups: [String]
  nextToken: String
}

input AwsCodeDeployListDeploymentInstancesInput {
  deploymentId: String!
  nextToken: String
  instanceStatusFilter: [String]
  instanceTypeFilter: [String]
}

type AwsCodeDeployListDeploymentInstancesOutput {
  instancesList: [String]
  nextToken: String
}

input AwsCodeDeployListDeploymentsCreateTimeRangeInput {
  start: Date
  end: Date
}

input AwsCodeDeployListDeploymentsInput {
  applicationName: String
  deploymentGroupName: String
  includeOnlyStatuses: [String]
  createTimeRange: AwsCodeDeployListDeploymentsCreateTimeRangeInput
  nextToken: String
}

type AwsCodeDeployListDeploymentsOutput {
  deployments: [String]
  nextToken: String
}

input AwsCodeDeployListDeploymentTargetsInput {
  deploymentId: String
  nextToken: String
  targetFilters: JSON
}

type AwsCodeDeployListDeploymentTargetsOutput {
  targetIds: [String]
  nextToken: String
}

input AwsCodeDeployListGitHubAccountTokenNamesInput {
  nextToken: String
}

type AwsCodeDeployListGitHubAccountTokenNamesOutput {
  tokenNameList: [String]
  nextToken: String
}

input AwsCodeDeployListOnPremisesInstancesInput {
  registrationStatus: String
  tagFilters: [AwsCodeDeployS1hInput]
  nextToken: String
}

type AwsCodeDeployListOnPremisesInstancesOutput {
  instanceNames: [String]
  nextToken: String
}

input AwsCodeDeployListTagsForResourceInput {
  ResourceArn: String!
  NextToken: String
}

type AwsCodeDeployListTagsForResourceOutput {
  Tags: [AwsCodeDeployS2]
  NextToken: String
}

input AwsCodeDeployPutLifecycleEventHookExecutionStatusInput {
  deploymentId: String
  lifecycleEventHookExecutionId: String
  status: String
}

type AwsCodeDeployPutLifecycleEventHookExecutionStatusOutput {
  lifecycleEventHookExecutionId: String
}

input AwsCodeDeployRegisterApplicationRevisionInput {
  applicationName: String!
  description: String
  revision: AwsCodeDeploySbInput!
}

input AwsCodeDeployRegisterOnPremisesInstanceInput {
  instanceName: String!
  iamSessionArn: String
  iamUserArn: String
}

input AwsCodeDeployRemoveTagsFromOnPremisesInstancesInput {
  tags: [AwsCodeDeployS2Input]!
  instanceNames: [String]!
}

type AwsCodeDeployS13 {
  applicationId: String
  applicationName: String
  createTime: Date
  linkedToGitHub: Boolean
  gitHubAccountName: String
  computePlatform: String
}

type AwsCodeDeployS1b {
  applicationName: String
  deploymentGroupId: String
  deploymentGroupName: String
  deploymentConfigName: String
  ec2TagFilters: [AwsCodeDeployS1e]
  onPremisesInstanceTagFilters: [AwsCodeDeployS1h]
  autoScalingGroups: [AwsCodeDeployS1k]
  serviceRoleArn: String
  targetRevision: AwsCodeDeploySb
  triggerConfigurations: [AwsCodeDeployS1p]
  alarmConfiguration: AwsCodeDeployS1v
  autoRollbackConfiguration: AwsCodeDeployS1z
  deploymentStyle: AwsCodeDeployS22
  blueGreenDeploymentConfiguration: AwsCodeDeployS25
  loadBalancerInfo: AwsCodeDeployS2d
  lastSuccessfulDeployment: AwsCodeDeployS2p
  lastAttemptedDeployment: AwsCodeDeployS2p
  ec2TagSet: AwsCodeDeployS2s
  onPremisesTagSet: AwsCodeDeployS2u
  computePlatform: String
  ecsServices: [AwsCodeDeployS2w]
}

type AwsCodeDeployS1e {
  Key: String
  Value: String
  Type: String
}

input AwsCodeDeployS1eInput {
  Key: String
  Value: String
  Type: String
}

type AwsCodeDeployS1h {
  Key: String
  Value: String
  Type: String
}

input AwsCodeDeployS1hInput {
  Key: String
  Value: String
  Type: String
}

type AwsCodeDeployS1k {
  name: String
  hook: String
}

type AwsCodeDeployS1p {
  triggerName: String
  triggerTargetArn: String
  triggerEvents: [String]
}

input AwsCodeDeployS1pInput {
  triggerName: String
  triggerTargetArn: String
  triggerEvents: [String]
}

type AwsCodeDeployS1v {
  enabled: Boolean
  ignorePollAlarmFailure: Boolean
  alarms: [AwsCodeDeployS1vAlarms]
}

type AwsCodeDeployS1vAlarms {
  name: String
}

input AwsCodeDeployS1vAlarmsInput {
  name: String
}

input AwsCodeDeployS1vInput {
  enabled: Boolean
  ignorePollAlarmFailure: Boolean
  alarms: [AwsCodeDeployS1vAlarmsInput]
}

type AwsCodeDeployS1z {
  enabled: Boolean
  events: [String]
}

input AwsCodeDeployS1zInput {
  enabled: Boolean
  events: [String]
}

type AwsCodeDeployS2 {
  Key: String
  Value: String
}

type AwsCodeDeployS22 {
  deploymentType: String
  deploymentOption: String
}

input AwsCodeDeployS22Input {
  deploymentType: String
  deploymentOption: String
}

type AwsCodeDeployS25 {
  terminateBlueInstancesOnDeploymentSuccess: AwsCodeDeployS25TerminateBlueInstancesOnDeploymentSuccess
  deploymentReadyOption: AwsCodeDeployS25DeploymentReadyOption
  greenFleetProvisioningOption: AwsCodeDeployS25GreenFleetProvisioningOption
}

type AwsCodeDeployS25DeploymentReadyOption {
  actionOnTimeout: String
  waitTimeInMinutes: Int
}

input AwsCodeDeployS25DeploymentReadyOptionInput {
  actionOnTimeout: String
  waitTimeInMinutes: Int
}

type AwsCodeDeployS25GreenFleetProvisioningOption {
  action: String
}

input AwsCodeDeployS25GreenFleetProvisioningOptionInput {
  action: String
}

input AwsCodeDeployS25Input {
  terminateBlueInstancesOnDeploymentSuccess: AwsCodeDeployS25TerminateBlueInstancesOnDeploymentSuccessInput
  deploymentReadyOption: AwsCodeDeployS25DeploymentReadyOptionInput
  greenFleetProvisioningOption: AwsCodeDeployS25GreenFleetProvisioningOptionInput
}

type AwsCodeDeployS25TerminateBlueInstancesOnDeploymentSuccess {
  action: String
  terminationWaitTimeInMinutes: Int
}

input AwsCodeDeployS25TerminateBlueInstancesOnDeploymentSuccessInput {
  action: String
  terminationWaitTimeInMinutes: Int
}

type AwsCodeDeployS2d {
  elbInfoList: [AwsCodeDeployS2dElbInfoList]
  targetGroupInfoList: [AwsCodeDeployS2i]
  targetGroupPairInfoList: [AwsCodeDeployS2dTargetGroupPairInfoList]
}

type AwsCodeDeployS2dElbInfoList {
  name: String
}

input AwsCodeDeployS2dElbInfoListInput {
  name: String
}

input AwsCodeDeployS2dInput {
  elbInfoList: [AwsCodeDeployS2dElbInfoListInput]
  targetGroupInfoList: [AwsCodeDeployS2iInput]
  targetGroupPairInfoList: [AwsCodeDeployS2dTargetGroupPairInfoListInput]
}

type AwsCodeDeployS2dTargetGroupPairInfoList {
  targetGroups: [AwsCodeDeployS2i]
  prodTrafficRoute: AwsCodeDeployS2m
  testTrafficRoute: AwsCodeDeployS2m
}

input AwsCodeDeployS2dTargetGroupPairInfoListInput {
  targetGroups: [AwsCodeDeployS2iInput]
  prodTrafficRoute: AwsCodeDeployS2mInput
  testTrafficRoute: AwsCodeDeployS2mInput
}

type AwsCodeDeployS2i {
  name: String
}

input AwsCodeDeployS2iInput {
  name: String
}

input AwsCodeDeployS2Input {
  Key: String
  Value: String
}

type AwsCodeDeployS2m {
  listenerArns: [String]
}

input AwsCodeDeployS2mInput {
  listenerArns: [String]
}

type AwsCodeDeployS2p {
  deploymentId: String
  status: String
  endTime: Date
  createTime: Date
}

type AwsCodeDeployS2s {
  ec2TagSetList: [[AwsCodeDeployS1e]]
}

input AwsCodeDeployS2sInput {
  ec2TagSetList: [[AwsCodeDeployS1eInput]]
}

type AwsCodeDeployS2u {
  onPremisesTagSetList: [[AwsCodeDeployS1h]]
}

input AwsCodeDeployS2uInput {
  onPremisesTagSetList: [[AwsCodeDeployS1hInput]]
}

type AwsCodeDeployS2w {
  serviceName: String
  clusterName: String
}

input AwsCodeDeployS2wInput {
  serviceName: String
  clusterName: String
}

type AwsCodeDeployS35 {
  deploymentId: String
  instanceId: String
  status: String
  lastUpdatedAt: Date
  lifecycleEvents: [AwsCodeDeployS37]
  instanceType: String
}

type AwsCodeDeployS37 {
  lifecycleEventName: String
  diagnostics: AwsCodeDeployS37Diagnostics
  startTime: Date
  endTime: Date
  status: String
}

type AwsCodeDeployS37Diagnostics {
  errorCode: String
  scriptName: String
  message: String
  logTail: String
}

type AwsCodeDeployS3m {
  deploymentTargetType: String
  instanceTarget: AwsCodeDeployS3mInstanceTarget
  lambdaTarget: AwsCodeDeployS3mLambdaTarget
  ecsTarget: AwsCodeDeployS3mEcsTarget
}

type AwsCodeDeployS3mEcsTarget {
  deploymentId: String
  targetId: String
  targetArn: String
  lastUpdatedAt: Date
  lifecycleEvents: [AwsCodeDeployS37]
  status: String
  taskSetsInfo: [AwsCodeDeployS3mEcsTargetTaskSetsInfo]
}

type AwsCodeDeployS3mEcsTargetTaskSetsInfo {
  identifer: String
  desiredCount: JSON
  pendingCount: JSON
  runningCount: JSON
  status: String
  trafficWeight: JSON
  targetGroup: AwsCodeDeployS2i
  taskSetLabel: String
}

type AwsCodeDeployS3mInstanceTarget {
  deploymentId: String
  targetId: String
  targetArn: String
  status: String
  lastUpdatedAt: Date
  lifecycleEvents: [AwsCodeDeployS37]
  instanceLabel: String
}

type AwsCodeDeployS3mLambdaTarget {
  deploymentId: String
  targetId: String
  targetArn: String
  status: String
  lastUpdatedAt: Date
  lifecycleEvents: [AwsCodeDeployS37]
  lambdaFunctionInfo: AwsCodeDeployS3mLambdaTargetLambdaFunctionInfo
}

type AwsCodeDeployS3mLambdaTargetLambdaFunctionInfo {
  functionName: String
  functionAlias: String
  currentVersion: String
  targetVersion: String
  targetVersionWeight: JSON
}

type AwsCodeDeployS49 {
  applicationName: String
  deploymentGroupName: String
  deploymentConfigName: String
  deploymentId: String
  previousRevision: AwsCodeDeploySb
  revision: AwsCodeDeploySb
  status: String
  errorInformation: AwsCodeDeployS49ErrorInformation
  createTime: Date
  startTime: Date
  completeTime: Date
  deploymentOverview: AwsCodeDeployS49DeploymentOverview
  description: String
  creator: String
  ignoreApplicationStopFailures: Boolean
  autoRollbackConfiguration: AwsCodeDeployS1z
  updateOutdatedInstancesOnly: Boolean
  rollbackInfo: AwsCodeDeployS49RollbackInfo
  deploymentStyle: AwsCodeDeployS22
  targetInstances: AwsCodeDeployS4g
  instanceTerminationWaitTimeStarted: Boolean
  blueGreenDeploymentConfiguration: AwsCodeDeployS25
  loadBalancerInfo: AwsCodeDeployS2d
  additionalDeploymentStatusInfo: String
  fileExistsBehavior: String
  deploymentStatusMessages: [String]
  computePlatform: String
}

type AwsCodeDeployS49DeploymentOverview {
  Pending: JSON
  InProgress: JSON
  Succeeded: JSON
  Failed: JSON
  Skipped: JSON
  Ready: JSON
}

type AwsCodeDeployS49ErrorInformation {
  code: String
  message: String
}

type AwsCodeDeployS49RollbackInfo {
  rollbackDeploymentId: String
  rollbackTriggeringDeploymentId: String
  rollbackMessage: String
}

type AwsCodeDeployS4g {
  tagFilters: [AwsCodeDeployS1e]
  autoScalingGroups: [String]
  ec2TagSet: AwsCodeDeployS2s
}

input AwsCodeDeployS4gInput {
  tagFilters: [AwsCodeDeployS1eInput]
  autoScalingGroups: [String]
  ec2TagSet: AwsCodeDeployS2sInput
}

type AwsCodeDeployS4o {
  instanceName: String
  iamSessionArn: String
  iamUserArn: String
  instanceArn: String
  registerTime: Date
  deregisterTime: Date
  tags: [AwsCodeDeployS2]
}

type AwsCodeDeployS4z {
  value: Int
  type: String
}

input AwsCodeDeployS4zInput {
  value: Int
  type: String
}

type AwsCodeDeployS52 {
  type: String
  timeBasedCanary: AwsCodeDeployS52TimeBasedCanary
  timeBasedLinear: AwsCodeDeployS52TimeBasedLinear
}

input AwsCodeDeployS52Input {
  type: String
  timeBasedCanary: AwsCodeDeployS52TimeBasedCanaryInput
  timeBasedLinear: AwsCodeDeployS52TimeBasedLinearInput
}

type AwsCodeDeployS52TimeBasedCanary {
  canaryPercentage: Int
  canaryInterval: Int
}

input AwsCodeDeployS52TimeBasedCanaryInput {
  canaryPercentage: Int
  canaryInterval: Int
}

type AwsCodeDeployS52TimeBasedLinear {
  linearPercentage: Int
  linearInterval: Int
}

input AwsCodeDeployS52TimeBasedLinearInput {
  linearPercentage: Int
  linearInterval: Int
}

type AwsCodeDeploySb {
  revisionType: String
  s3Location: AwsCodeDeploySbS3Location
  gitHubLocation: AwsCodeDeploySbGitHubLocation
  string: AwsCodeDeploySbString
  appSpecContent: AwsCodeDeploySbAppSpecContent
}

type AwsCodeDeploySbAppSpecContent {
  content: String
  sha256: String
}

input AwsCodeDeploySbAppSpecContentInput {
  content: String
  sha256: String
}

type AwsCodeDeploySbGitHubLocation {
  repository: String
  commitId: String
}

input AwsCodeDeploySbGitHubLocationInput {
  repository: String
  commitId: String
}

input AwsCodeDeploySbInput {
  revisionType: String
  s3Location: AwsCodeDeploySbS3LocationInput
  gitHubLocation: AwsCodeDeploySbGitHubLocationInput
  string: AwsCodeDeploySbStringInput
  appSpecContent: AwsCodeDeploySbAppSpecContentInput
}

type AwsCodeDeploySbS3Location {
  bucket: String
  key: String
  bundleType: String
  version: String
  eTag: String
}

input AwsCodeDeploySbS3LocationInput {
  bucket: String
  key: String
  bundleType: String
  version: String
  eTag: String
}

type AwsCodeDeploySbString {
  content: String
  sha256: String
}

input AwsCodeDeploySbStringInput {
  content: String
  sha256: String
}

input AwsCodeDeploySkipWaitTimeForInstanceTerminationInput {
  deploymentId: String
}

input AwsCodeDeployStopDeploymentInput {
  deploymentId: String!
  autoRollbackEnabled: Boolean
}

type AwsCodeDeployStopDeploymentOutput {
  status: String
  statusMessage: String
}

type AwsCodeDeploySu {
  description: String
  deploymentGroups: [String]
  firstUsedTime: Date
  lastUsedTime: Date
  registerTime: Date
}

input AwsCodeDeployTagResourceInput {
  ResourceArn: String!
  Tags: [AwsCodeDeployS2Input]!
}

input AwsCodeDeployUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsCodeDeployUpdateApplicationInput {
  applicationName: String
  newApplicationName: String
}

input AwsCodeDeployUpdateDeploymentGroupInput {
  applicationName: String!
  currentDeploymentGroupName: String!
  newDeploymentGroupName: String
  deploymentConfigName: String
  ec2TagFilters: [AwsCodeDeployS1eInput]
  onPremisesInstanceTagFilters: [AwsCodeDeployS1hInput]
  autoScalingGroups: [String]
  serviceRoleArn: String
  triggerConfigurations: [AwsCodeDeployS1pInput]
  alarmConfiguration: AwsCodeDeployS1vInput
  autoRollbackConfiguration: AwsCodeDeployS1zInput
  deploymentStyle: AwsCodeDeployS22Input
  blueGreenDeploymentConfiguration: AwsCodeDeployS25Input
  loadBalancerInfo: AwsCodeDeployS2dInput
  ec2TagSet: AwsCodeDeployS2sInput
  ecsServices: [AwsCodeDeployS2wInput]
  onPremisesTagSet: AwsCodeDeployS2uInput
}

type AwsCodeDeployUpdateDeploymentGroupOutput {
  hooksNotCleanedUp: [AwsCodeDeployS1k]
}

"""AWS CodePipeline (2015-07-09)"""
type AwsCodePipeline {
  acknowledgeJob(input: AwsCodePipelineAcknowledgeJobInput!, config: AwsConfig): AwsCodePipelineAcknowledgeJobOutput
  acknowledgeThirdPartyJob(input: AwsCodePipelineAcknowledgeThirdPartyJobInput!, config: AwsConfig): AwsCodePipelineAcknowledgeThirdPartyJobOutput
  createCustomActionType(input: AwsCodePipelineCreateCustomActionTypeInput!, config: AwsConfig): AwsCodePipelineCreateCustomActionTypeOutput
  createPipeline(input: AwsCodePipelineCreatePipelineInput!, config: AwsConfig): AwsCodePipelineCreatePipelineOutput
  deleteCustomActionType(input: AwsCodePipelineDeleteCustomActionTypeInput!, config: AwsConfig): JSON
  deletePipeline(input: AwsCodePipelineDeletePipelineInput!, config: AwsConfig): JSON
  deleteWebhook(input: AwsCodePipelineDeleteWebhookInput!, config: AwsConfig): JSON
  deregisterWebhookWithThirdParty(input: AwsCodePipelineDeregisterWebhookWithThirdPartyInput, config: AwsConfig): JSON
  disableStageTransition(input: AwsCodePipelineDisableStageTransitionInput!, config: AwsConfig): JSON
  enableStageTransition(input: AwsCodePipelineEnableStageTransitionInput!, config: AwsConfig): JSON
  getJobDetails(input: AwsCodePipelineGetJobDetailsInput!, config: AwsConfig): AwsCodePipelineGetJobDetailsOutput
  getPipeline(input: AwsCodePipelineGetPipelineInput!, config: AwsConfig): AwsCodePipelineGetPipelineOutput
  getPipelineExecution(input: AwsCodePipelineGetPipelineExecutionInput!, config: AwsConfig): AwsCodePipelineGetPipelineExecutionOutput
  getPipelineState(input: AwsCodePipelineGetPipelineStateInput!, config: AwsConfig): AwsCodePipelineGetPipelineStateOutput
  getThirdPartyJobDetails(input: AwsCodePipelineGetThirdPartyJobDetailsInput!, config: AwsConfig): AwsCodePipelineGetThirdPartyJobDetailsOutput
  listActionExecutions(input: AwsCodePipelineListActionExecutionsInput!, config: AwsConfig): AwsCodePipelineListActionExecutionsOutput
  listActionTypes(input: AwsCodePipelineListActionTypesInput, config: AwsConfig): AwsCodePipelineListActionTypesOutput
  listPipelineExecutions(input: AwsCodePipelineListPipelineExecutionsInput!, config: AwsConfig): AwsCodePipelineListPipelineExecutionsOutput
  listPipelines(input: AwsCodePipelineListPipelinesInput, config: AwsConfig): AwsCodePipelineListPipelinesOutput
  listTagsForResource(input: AwsCodePipelineListTagsForResourceInput!, config: AwsConfig): AwsCodePipelineListTagsForResourceOutput
  listWebhooks(input: AwsCodePipelineListWebhooksInput, config: AwsConfig): AwsCodePipelineListWebhooksOutput
  pollForJobs(input: AwsCodePipelinePollForJobsInput!, config: AwsConfig): AwsCodePipelinePollForJobsOutput
  pollForThirdPartyJobs(input: AwsCodePipelinePollForThirdPartyJobsInput!, config: AwsConfig): AwsCodePipelinePollForThirdPartyJobsOutput
  putActionRevision(input: AwsCodePipelinePutActionRevisionInput!, config: AwsConfig): AwsCodePipelinePutActionRevisionOutput
  putApprovalResult(input: AwsCodePipelinePutApprovalResultInput!, config: AwsConfig): AwsCodePipelinePutApprovalResultOutput
  putJobFailureResult(input: AwsCodePipelinePutJobFailureResultInput!, config: AwsConfig): JSON
  putJobSuccessResult(input: AwsCodePipelinePutJobSuccessResultInput!, config: AwsConfig): JSON
  putThirdPartyJobFailureResult(input: AwsCodePipelinePutThirdPartyJobFailureResultInput!, config: AwsConfig): JSON
  putThirdPartyJobSuccessResult(input: AwsCodePipelinePutThirdPartyJobSuccessResultInput!, config: AwsConfig): JSON
  putWebhook(input: AwsCodePipelinePutWebhookInput!, config: AwsConfig): AwsCodePipelinePutWebhookOutput
  registerWebhookWithThirdParty(input: AwsCodePipelineRegisterWebhookWithThirdPartyInput, config: AwsConfig): JSON
  retryStageExecution(input: AwsCodePipelineRetryStageExecutionInput!, config: AwsConfig): AwsCodePipelineRetryStageExecutionOutput
  startPipelineExecution(input: AwsCodePipelineStartPipelineExecutionInput!, config: AwsConfig): AwsCodePipelineStartPipelineExecutionOutput
  tagResource(input: AwsCodePipelineTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsCodePipelineUntagResourceInput!, config: AwsConfig): JSON
  updatePipeline(input: AwsCodePipelineUpdatePipelineInput!, config: AwsConfig): AwsCodePipelineUpdatePipelineOutput
}

input AwsCodePipelineAcknowledgeJobInput {
  jobId: String!
  nonce: String!
}

type AwsCodePipelineAcknowledgeJobOutput {
  status: String
}

input AwsCodePipelineAcknowledgeThirdPartyJobInput {
  jobId: String!
  nonce: String!
  clientToken: String!
}

type AwsCodePipelineAcknowledgeThirdPartyJobOutput {
  status: String
}

input AwsCodePipelineCreateCustomActionTypeInput {
  category: String!
  provider: String!
  version: String!
  settings: AwsCodePipelineSeInput
  configurationProperties: [AwsCodePipelineShInput]
  inputArtifactDetails: AwsCodePipelineSnInput!
  outputArtifactDetails: AwsCodePipelineSnInput!
  tags: [AwsCodePipelineSqInput]
}

type AwsCodePipelineCreateCustomActionTypeOutput {
  actionType: AwsCodePipelineSv!
  tags: [AwsCodePipelineSq]
}

input AwsCodePipelineCreatePipelineInput {
  pipeline: AwsCodePipelineSzInput!
  tags: [AwsCodePipelineSqInput]
}

type AwsCodePipelineCreatePipelineOutput {
  pipeline: AwsCodePipelineSz
  tags: [AwsCodePipelineSq]
}

input AwsCodePipelineDeleteCustomActionTypeInput {
  category: String!
  provider: String!
  version: String!
}

input AwsCodePipelineDeletePipelineInput {
  name: String!
}

input AwsCodePipelineDeleteWebhookInput {
  name: String!
}

input AwsCodePipelineDeregisterWebhookWithThirdPartyInput {
  webhookName: String
}

input AwsCodePipelineDisableStageTransitionInput {
  pipelineName: String!
  stageName: String!
  transitionType: String!
  reason: String!
}

input AwsCodePipelineEnableStageTransitionInput {
  pipelineName: String!
  stageName: String!
  transitionType: String!
}

input AwsCodePipelineGetJobDetailsInput {
  jobId: String!
}

type AwsCodePipelineGetJobDetailsOutput {
  jobDetails: AwsCodePipelineGetJobDetailsOutputJobDetails
}

type AwsCodePipelineGetJobDetailsOutputJobDetails {
  id: String
  data: AwsCodePipelineS28
  accountId: String
}

input AwsCodePipelineGetPipelineExecutionInput {
  pipelineName: String!
  pipelineExecutionId: String!
}

type AwsCodePipelineGetPipelineExecutionOutput {
  pipelineExecution: AwsCodePipelineGetPipelineExecutionOutputPipelineExecution
}

type AwsCodePipelineGetPipelineExecutionOutputPipelineExecution {
  pipelineName: String
  pipelineVersion: Int
  pipelineExecutionId: String
  status: String
  artifactRevisions: [AwsCodePipelineGetPipelineExecutionOutputPipelineExecutionArtifactRevisions]
}

type AwsCodePipelineGetPipelineExecutionOutputPipelineExecutionArtifactRevisions {
  name: String
  revisionId: String
  revisionChangeIdentifier: String
  revisionSummary: String
  created: Date
  revisionUrl: String
}

input AwsCodePipelineGetPipelineInput {
  name: String!
  version: Int
}

type AwsCodePipelineGetPipelineOutput {
  pipeline: AwsCodePipelineSz
  metadata: AwsCodePipelineGetPipelineOutputMetadata
}

type AwsCodePipelineGetPipelineOutputMetadata {
  pipelineArn: String
  created: Date
  updated: Date
}

input AwsCodePipelineGetPipelineStateInput {
  name: String!
}

type AwsCodePipelineGetPipelineStateOutput {
  pipelineName: String
  pipelineVersion: Int
  stageStates: [AwsCodePipelineGetPipelineStateOutputStageStates]
  created: Date
  updated: Date
}

type AwsCodePipelineGetPipelineStateOutputStageStates {
  stageName: String
  inboundTransitionState: AwsCodePipelineGetPipelineStateOutputStageStatesInboundTransitionState
  actionStates: [AwsCodePipelineGetPipelineStateOutputStageStatesActionStates]
  latestExecution: AwsCodePipelineGetPipelineStateOutputStageStatesLatestExecution
}

type AwsCodePipelineGetPipelineStateOutputStageStatesActionStates {
  actionName: String
  currentRevision: AwsCodePipelineS3g
  latestExecution: AwsCodePipelineGetPipelineStateOutputStageStatesActionStatesLatestExecution
  entityUrl: String
  revisionUrl: String
}

type AwsCodePipelineGetPipelineStateOutputStageStatesActionStatesLatestExecution {
  status: String
  summary: String
  lastStatusChange: Date
  token: String
  lastUpdatedBy: String
  externalExecutionId: String
  externalExecutionUrl: String
  percentComplete: Int
  errorDetails: AwsCodePipelineGetPipelineStateOutputStageStatesActionStatesLatestExecutionErrorDetails
}

type AwsCodePipelineGetPipelineStateOutputStageStatesActionStatesLatestExecutionErrorDetails {
  code: String
  message: String
}

type AwsCodePipelineGetPipelineStateOutputStageStatesInboundTransitionState {
  enabled: Boolean
  lastChangedBy: String
  lastChangedAt: Date
  disabledReason: String
}

type AwsCodePipelineGetPipelineStateOutputStageStatesLatestExecution {
  pipelineExecutionId: String!
  status: String!
}

input AwsCodePipelineGetThirdPartyJobDetailsInput {
  jobId: String!
  clientToken: String!
}

type AwsCodePipelineGetThirdPartyJobDetailsOutput {
  jobDetails: AwsCodePipelineGetThirdPartyJobDetailsOutputJobDetails
}

type AwsCodePipelineGetThirdPartyJobDetailsOutputJobDetails {
  id: String
  data: AwsCodePipelineGetThirdPartyJobDetailsOutputJobDetailsData
  nonce: String
}

type AwsCodePipelineGetThirdPartyJobDetailsOutputJobDetailsData {
  actionTypeId: AwsCodePipelineSw
  actionConfiguration: AwsCodePipelineS29
  pipelineContext: AwsCodePipelineS2a
  inputArtifacts: [AwsCodePipelineS2g]
  outputArtifacts: [AwsCodePipelineS2g]
  artifactCredentials: AwsCodePipelineS2o
  continuationToken: String
  encryptionKey: AwsCodePipelineS15
}

input AwsCodePipelineListActionExecutionsFilterInput {
  pipelineExecutionId: String
}

input AwsCodePipelineListActionExecutionsInput {
  pipelineName: String!
  filter: AwsCodePipelineListActionExecutionsFilterInput
  maxResults: Int
  nextToken: String
}

type AwsCodePipelineListActionExecutionsOutput {
  actionExecutionDetails: [AwsCodePipelineListActionExecutionsOutputActionExecutionDetails]
  nextToken: String
}

type AwsCodePipelineListActionExecutionsOutputActionExecutionDetails {
  pipelineExecutionId: String
  actionExecutionId: String
  pipelineVersion: Int
  stageName: String
  actionName: String
  startTime: Date
  lastUpdateTime: Date
  status: String
  input: AwsCodePipelineListActionExecutionsOutputActionExecutionDetailsInput
  output: AwsCodePipelineListActionExecutionsOutputActionExecutionDetailsOutput
}

type AwsCodePipelineListActionExecutionsOutputActionExecutionDetailsInput {
  actionTypeId: AwsCodePipelineSw
  configuration: JSON
  roleArn: String
  region: String
  inputArtifacts: [AwsCodePipelineS45]
}

type AwsCodePipelineListActionExecutionsOutputActionExecutionDetailsOutput {
  outputArtifacts: [AwsCodePipelineS45]
  executionResult: AwsCodePipelineListActionExecutionsOutputActionExecutionDetailsOutputExecutionResult
}

type AwsCodePipelineListActionExecutionsOutputActionExecutionDetailsOutputExecutionResult {
  externalExecutionId: String
  externalExecutionSummary: String
  externalExecutionUrl: String
}

input AwsCodePipelineListActionTypesInput {
  actionOwnerFilter: String
  nextToken: String
}

type AwsCodePipelineListActionTypesOutput {
  actionTypes: [AwsCodePipelineSv]!
  nextToken: String
}

input AwsCodePipelineListPipelineExecutionsInput {
  pipelineName: String!
  maxResults: Int
  nextToken: String
}

type AwsCodePipelineListPipelineExecutionsOutput {
  pipelineExecutionSummaries: [AwsCodePipelineListPipelineExecutionsOutputPipelineExecutionSummaries]
  nextToken: String
}

type AwsCodePipelineListPipelineExecutionsOutputPipelineExecutionSummaries {
  pipelineExecutionId: String
  status: String
  startTime: Date
  lastUpdateTime: Date
  sourceRevisions: [AwsCodePipelineListPipelineExecutionsOutputPipelineExecutionSummariesSourceRevisions]
}

type AwsCodePipelineListPipelineExecutionsOutputPipelineExecutionSummariesSourceRevisions {
  actionName: String!
  revisionId: String
  revisionSummary: String
  revisionUrl: String
}

input AwsCodePipelineListPipelinesInput {
  nextToken: String
}

type AwsCodePipelineListPipelinesOutput {
  pipelines: [AwsCodePipelineListPipelinesOutputPipelines]
  nextToken: String
}

type AwsCodePipelineListPipelinesOutputPipelines {
  name: String
  version: Int
  created: Date
  updated: Date
}

input AwsCodePipelineListTagsForResourceInput {
  resourceArn: String!
  nextToken: String
  maxResults: Int
}

type AwsCodePipelineListTagsForResourceOutput {
  tags: [AwsCodePipelineSq]
  nextToken: String
}

input AwsCodePipelineListWebhooksInput {
  NextToken: String
  MaxResults: Int
}

type AwsCodePipelineListWebhooksOutput {
  webhooks: [AwsCodePipelineS4x]
  NextToken: String
}

input AwsCodePipelinePollForJobsInput {
  actionTypeId: AwsCodePipelineSwInput!
  maxBatchSize: Int
  queryParam: JSON
}

type AwsCodePipelinePollForJobsOutput {
  jobs: [AwsCodePipelinePollForJobsOutputJobs]
}

type AwsCodePipelinePollForJobsOutputJobs {
  id: String
  data: AwsCodePipelineS28
  nonce: String
  accountId: String
}

input AwsCodePipelinePollForThirdPartyJobsInput {
  actionTypeId: AwsCodePipelineSwInput!
  maxBatchSize: Int
}

type AwsCodePipelinePollForThirdPartyJobsOutput {
  jobs: [AwsCodePipelinePollForThirdPartyJobsOutputJobs]
}

type AwsCodePipelinePollForThirdPartyJobsOutputJobs {
  clientId: String
  jobId: String
}

input AwsCodePipelinePutActionRevisionInput {
  pipelineName: String!
  stageName: String!
  actionName: String!
  actionRevision: AwsCodePipelineS3gInput!
}

type AwsCodePipelinePutActionRevisionOutput {
  newRevision: Boolean
  pipelineExecutionId: String
}

input AwsCodePipelinePutApprovalResultInput {
  pipelineName: String!
  stageName: String!
  actionName: String!
  result: AwsCodePipelinePutApprovalResultResultInput!
  token: String!
}

type AwsCodePipelinePutApprovalResultOutput {
  approvedAt: Date
}

input AwsCodePipelinePutApprovalResultResultInput {
  summary: String!
  status: String!
}

input AwsCodePipelinePutJobFailureResultInput {
  jobId: String!
  failureDetails: AwsCodePipelineS5xInput!
}

input AwsCodePipelinePutJobSuccessResultInput {
  jobId: String!
  currentRevision: AwsCodePipelineS60Input
  continuationToken: String
  executionDetails: AwsCodePipelineS62Input
}

input AwsCodePipelinePutThirdPartyJobFailureResultInput {
  jobId: String!
  clientToken: String!
  failureDetails: AwsCodePipelineS5xInput!
}

input AwsCodePipelinePutThirdPartyJobSuccessResultInput {
  jobId: String!
  clientToken: String!
  currentRevision: AwsCodePipelineS60Input
  continuationToken: String
  executionDetails: AwsCodePipelineS62Input
}

input AwsCodePipelinePutWebhookInput {
  webhook: AwsCodePipelineS4yInput!
  tags: [AwsCodePipelineSqInput]
}

type AwsCodePipelinePutWebhookOutput {
  webhook: AwsCodePipelineS4x
}

input AwsCodePipelineRegisterWebhookWithThirdPartyInput {
  webhookName: String
}

input AwsCodePipelineRetryStageExecutionInput {
  pipelineName: String!
  stageName: String!
  pipelineExecutionId: String!
  retryMode: String!
}

type AwsCodePipelineRetryStageExecutionOutput {
  pipelineExecutionId: String
}

type AwsCodePipelineS12 {
  type: String!
  location: String!
  encryptionKey: AwsCodePipelineS15
}

input AwsCodePipelineS12Input {
  type: String!
  location: String!
  encryptionKey: AwsCodePipelineS15Input
}

type AwsCodePipelineS15 {
  id: String!
  type: String!
}

input AwsCodePipelineS15Input {
  id: String!
  type: String!
}

type AwsCodePipelineS28 {
  actionTypeId: AwsCodePipelineSw
  actionConfiguration: AwsCodePipelineS29
  pipelineContext: AwsCodePipelineS2a
  inputArtifacts: [AwsCodePipelineS2g]
  outputArtifacts: [AwsCodePipelineS2g]
  artifactCredentials: AwsCodePipelineS2o
  continuationToken: String
  encryptionKey: AwsCodePipelineS15
}

type AwsCodePipelineS29 {
  configuration: JSON
}

type AwsCodePipelineS2a {
  pipelineName: String
  stage: AwsCodePipelineS2aStage
  action: AwsCodePipelineS2aAction
  pipelineArn: String
  pipelineExecutionId: String
}

type AwsCodePipelineS2aAction {
  name: String
  actionExecutionId: String
}

type AwsCodePipelineS2aStage {
  name: String
}

type AwsCodePipelineS2g {
  name: String
  revision: String
  location: AwsCodePipelineS2gLocation
}

type AwsCodePipelineS2gLocation {
  type: String
  s3Location: AwsCodePipelineS2gLocationS3Location
}

type AwsCodePipelineS2gLocationS3Location {
  bucketName: String!
  objectKey: String!
}

type AwsCodePipelineS2o {
  accessKeyId: String!
  secretAccessKey: String!
  sessionToken: String!
}

type AwsCodePipelineS3g {
  revisionId: String!
  revisionChangeId: String!
  created: Date!
}

input AwsCodePipelineS3gInput {
  revisionId: String!
  revisionChangeId: String!
  created: Date!
}

type AwsCodePipelineS45 {
  name: String
  s3location: AwsCodePipelineS45S3location
}

type AwsCodePipelineS45S3location {
  bucket: String
  key: String
}

type AwsCodePipelineS4x {
  definition: AwsCodePipelineS4y!
  url: String!
  errorMessage: String
  errorCode: String
  lastTriggered: Date
  arn: String
  tags: [AwsCodePipelineSq]
}

type AwsCodePipelineS4y {
  name: String!
  targetPipeline: String!
  targetAction: String!
  filters: [AwsCodePipelineS4yFilters]!
  authentication: String!
  authenticationConfiguration: AwsCodePipelineS4yAuthenticationConfiguration!
}

type AwsCodePipelineS4yAuthenticationConfiguration {
  AllowedIPRange: String
  SecretToken: String
}

input AwsCodePipelineS4yAuthenticationConfigurationInput {
  AllowedIPRange: String
  SecretToken: String
}

type AwsCodePipelineS4yFilters {
  jsonPath: String!
  matchEquals: String
}

input AwsCodePipelineS4yFiltersInput {
  jsonPath: String!
  matchEquals: String
}

input AwsCodePipelineS4yInput {
  name: String!
  targetPipeline: String!
  targetAction: String!
  filters: [AwsCodePipelineS4yFiltersInput]!
  authentication: String!
  authenticationConfiguration: AwsCodePipelineS4yAuthenticationConfigurationInput!
}

input AwsCodePipelineS5xInput {
  type: String!
  message: String!
  externalExecutionId: String
}

input AwsCodePipelineS60Input {
  revision: String!
  changeIdentifier: String!
  created: Date
  revisionSummary: String
}

input AwsCodePipelineS62Input {
  summary: String
  externalExecutionId: String
  percentComplete: Int
}

type AwsCodePipelineSe {
  thirdPartyConfigurationUrl: String
  entityUrlTemplate: String
  executionUrlTemplate: String
  revisionUrlTemplate: String
}

input AwsCodePipelineSeInput {
  thirdPartyConfigurationUrl: String
  entityUrlTemplate: String
  executionUrlTemplate: String
  revisionUrlTemplate: String
}

type AwsCodePipelineSh {
  name: String!
  required: Boolean!
  key: Boolean!
  secret: Boolean!
  queryable: Boolean
  description: String
  type: String
}

input AwsCodePipelineShInput {
  name: String!
  required: Boolean!
  key: Boolean!
  secret: Boolean!
  queryable: Boolean
  description: String
  type: String
}

type AwsCodePipelineSn {
  minimumCount: Int!
  maximumCount: Int!
}

input AwsCodePipelineSnInput {
  minimumCount: Int!
  maximumCount: Int!
}

type AwsCodePipelineSq {
  key: String!
  value: String!
}

input AwsCodePipelineSqInput {
  key: String!
  value: String!
}

input AwsCodePipelineStartPipelineExecutionInput {
  name: String!
  clientRequestToken: String
}

type AwsCodePipelineStartPipelineExecutionOutput {
  pipelineExecutionId: String
}

type AwsCodePipelineSv {
  id: AwsCodePipelineSw!
  settings: AwsCodePipelineSe
  actionConfigurationProperties: [AwsCodePipelineSh]
  inputArtifactDetails: AwsCodePipelineSn!
  outputArtifactDetails: AwsCodePipelineSn!
}

type AwsCodePipelineSw {
  category: String!
  owner: String!
  provider: String!
  version: String!
}

input AwsCodePipelineSwInput {
  category: String!
  owner: String!
  provider: String!
  version: String!
}

type AwsCodePipelineSz {
  name: String!
  roleArn: String!
  artifactStore: AwsCodePipelineS12
  artifactStores: JSON
  stages: [AwsCodePipelineSzStages]!
  version: Int
}

input AwsCodePipelineSzInput {
  name: String!
  roleArn: String!
  artifactStore: AwsCodePipelineS12Input
  artifactStores: JSON
  stages: [AwsCodePipelineSzStagesInput]!
  version: Int
}

type AwsCodePipelineSzStages {
  name: String!
  blockers: [AwsCodePipelineSzStagesBlockers]
  actions: [AwsCodePipelineSzStagesActions]!
}

type AwsCodePipelineSzStagesActions {
  name: String!
  actionTypeId: AwsCodePipelineSw!
  runOrder: Int
  configuration: JSON
  outputArtifacts: [AwsCodePipelineSzStagesActionsOutputArtifacts]
  inputArtifacts: [AwsCodePipelineSzStagesActionsInputArtifacts]
  roleArn: String
  region: String
}

input AwsCodePipelineSzStagesActionsInput {
  name: String!
  actionTypeId: AwsCodePipelineSwInput!
  runOrder: Int
  configuration: JSON
  outputArtifacts: [AwsCodePipelineSzStagesActionsOutputArtifactsInput]
  inputArtifacts: [AwsCodePipelineSzStagesActionsInputArtifactsInput]
  roleArn: String
  region: String
}

type AwsCodePipelineSzStagesActionsInputArtifacts {
  name: String!
}

input AwsCodePipelineSzStagesActionsInputArtifactsInput {
  name: String!
}

type AwsCodePipelineSzStagesActionsOutputArtifacts {
  name: String!
}

input AwsCodePipelineSzStagesActionsOutputArtifactsInput {
  name: String!
}

type AwsCodePipelineSzStagesBlockers {
  name: String!
  type: String!
}

input AwsCodePipelineSzStagesBlockersInput {
  name: String!
  type: String!
}

input AwsCodePipelineSzStagesInput {
  name: String!
  blockers: [AwsCodePipelineSzStagesBlockersInput]
  actions: [AwsCodePipelineSzStagesActionsInput]!
}

input AwsCodePipelineTagResourceInput {
  resourceArn: String!
  tags: [AwsCodePipelineSqInput]!
}

input AwsCodePipelineUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsCodePipelineUpdatePipelineInput {
  pipeline: AwsCodePipelineSzInput!
}

type AwsCodePipelineUpdatePipelineOutput {
  pipeline: AwsCodePipelineSz
}

"""AWS CodeStar (2017-04-19)"""
type AwsCodeStar {
  associateTeamMember(input: AwsCodeStarAssociateTeamMemberInput!, config: AwsConfig): AwsCodeStarAssociateTeamMemberOutput
  createProject(input: AwsCodeStarCreateProjectInput!, config: AwsConfig): AwsCodeStarCreateProjectOutput
  createUserProfile(input: AwsCodeStarCreateUserProfileInput!, config: AwsConfig): AwsCodeStarCreateUserProfileOutput
  deleteProject(input: AwsCodeStarDeleteProjectInput!, config: AwsConfig): AwsCodeStarDeleteProjectOutput
  deleteUserProfile(input: AwsCodeStarDeleteUserProfileInput!, config: AwsConfig): AwsCodeStarDeleteUserProfileOutput
  describeProject(input: AwsCodeStarDescribeProjectInput!, config: AwsConfig): AwsCodeStarDescribeProjectOutput
  describeUserProfile(input: AwsCodeStarDescribeUserProfileInput!, config: AwsConfig): AwsCodeStarDescribeUserProfileOutput
  disassociateTeamMember(input: AwsCodeStarDisassociateTeamMemberInput!, config: AwsConfig): JSON
  listProjects(input: AwsCodeStarListProjectsInput, config: AwsConfig): AwsCodeStarListProjectsOutput
  listResources(input: AwsCodeStarListResourcesInput!, config: AwsConfig): AwsCodeStarListResourcesOutput
  listTagsForProject(input: AwsCodeStarListTagsForProjectInput!, config: AwsConfig): AwsCodeStarListTagsForProjectOutput
  listTeamMembers(input: AwsCodeStarListTeamMembersInput!, config: AwsConfig): AwsCodeStarListTeamMembersOutput
  listUserProfiles(input: AwsCodeStarListUserProfilesInput, config: AwsConfig): AwsCodeStarListUserProfilesOutput
  tagProject(input: AwsCodeStarTagProjectInput!, config: AwsConfig): AwsCodeStarTagProjectOutput
  untagProject(input: AwsCodeStarUntagProjectInput!, config: AwsConfig): JSON
  updateProject(input: AwsCodeStarUpdateProjectInput!, config: AwsConfig): JSON
  updateTeamMember(input: AwsCodeStarUpdateTeamMemberInput!, config: AwsConfig): AwsCodeStarUpdateTeamMemberOutput
  updateUserProfile(input: AwsCodeStarUpdateUserProfileInput!, config: AwsConfig): AwsCodeStarUpdateUserProfileOutput
}

input AwsCodeStarAssociateTeamMemberInput {
  projectId: String!
  clientRequestToken: String
  userArn: String!
  projectRole: String!
  remoteAccessAllowed: Boolean
}

type AwsCodeStarAssociateTeamMemberOutput {
  clientRequestToken: String
}

input AwsCodeStarCreateProjectInput {
  name: String!
  id: String!
  description: String
  clientRequestToken: String
  sourceCode: [AwsCodeStarCreateProjectSourceCodeInput]
  toolchain: AwsCodeStarCreateProjectToolchainInput
  tags: JSON
}

type AwsCodeStarCreateProjectOutput {
  id: String!
  arn: String!
  clientRequestToken: String
  projectTemplateId: String
}

input AwsCodeStarCreateProjectSourceCodeDestinationCodeCommitInput {
  name: String!
}

input AwsCodeStarCreateProjectSourceCodeDestinationGitHubInput {
  name: String!
  description: String
  type: String!
  owner: String!
  privateRepository: Boolean!
  issuesEnabled: Boolean!
  token: String!
}

input AwsCodeStarCreateProjectSourceCodeDestinationInput {
  codeCommit: AwsCodeStarCreateProjectSourceCodeDestinationCodeCommitInput
  gitHub: AwsCodeStarCreateProjectSourceCodeDestinationGitHubInput
}

input AwsCodeStarCreateProjectSourceCodeInput {
  source: AwsCodeStarCreateProjectSourceCodeSourceInput!
  destination: AwsCodeStarCreateProjectSourceCodeDestinationInput!
}

input AwsCodeStarCreateProjectSourceCodeSourceInput {
  s3: AwsCodeStarSeInput!
}

input AwsCodeStarCreateProjectToolchainInput {
  source: AwsCodeStarCreateProjectToolchainSourceInput!
  roleArn: String
  stackParameters: JSON
}

input AwsCodeStarCreateProjectToolchainSourceInput {
  s3: AwsCodeStarSeInput!
}

input AwsCodeStarCreateUserProfileInput {
  userArn: String!
  displayName: String!
  emailAddress: String!
  sshPublicKey: String
}

type AwsCodeStarCreateUserProfileOutput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
  createdTimestamp: Date
  lastModifiedTimestamp: Date
}

input AwsCodeStarDeleteProjectInput {
  id: String!
  clientRequestToken: String
  deleteStack: Boolean
}

type AwsCodeStarDeleteProjectOutput {
  stackId: String
  projectArn: String
}

input AwsCodeStarDeleteUserProfileInput {
  userArn: String!
}

type AwsCodeStarDeleteUserProfileOutput {
  userArn: String!
}

input AwsCodeStarDescribeProjectInput {
  id: String!
}

type AwsCodeStarDescribeProjectOutput {
  name: String
  id: String
  arn: String
  description: String
  clientRequestToken: String
  createdTimeStamp: Date
  stackId: String
  projectTemplateId: String
  status: AwsCodeStarDescribeProjectOutputStatus
}

type AwsCodeStarDescribeProjectOutputStatus {
  state: String!
  reason: String
}

input AwsCodeStarDescribeUserProfileInput {
  userArn: String!
}

type AwsCodeStarDescribeUserProfileOutput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
  createdTimestamp: Date!
  lastModifiedTimestamp: Date!
}

input AwsCodeStarDisassociateTeamMemberInput {
  projectId: String!
  userArn: String!
}

input AwsCodeStarListProjectsInput {
  nextToken: String
  maxResults: Int
}

type AwsCodeStarListProjectsOutput {
  projects: [AwsCodeStarListProjectsOutputProjects]!
  nextToken: String
}

type AwsCodeStarListProjectsOutputProjects {
  projectId: String
  projectArn: String
}

input AwsCodeStarListResourcesInput {
  projectId: String!
  nextToken: String
  maxResults: Int
}

type AwsCodeStarListResourcesOutput {
  resources: [AwsCodeStarListResourcesOutputResources]
  nextToken: String
}

type AwsCodeStarListResourcesOutputResources {
  id: String!
}

input AwsCodeStarListTagsForProjectInput {
  id: String!
  nextToken: String
  maxResults: Int
}

type AwsCodeStarListTagsForProjectOutput {
  tags: JSON
  nextToken: String
}

input AwsCodeStarListTeamMembersInput {
  projectId: String!
  nextToken: String
  maxResults: Int
}

type AwsCodeStarListTeamMembersOutput {
  teamMembers: [AwsCodeStarListTeamMembersOutputTeamMembers]!
  nextToken: String
}

type AwsCodeStarListTeamMembersOutputTeamMembers {
  userArn: String!
  projectRole: String!
  remoteAccessAllowed: Boolean
}

input AwsCodeStarListUserProfilesInput {
  nextToken: String
  maxResults: Int
}

type AwsCodeStarListUserProfilesOutput {
  userProfiles: [AwsCodeStarListUserProfilesOutputUserProfiles]!
  nextToken: String
}

type AwsCodeStarListUserProfilesOutputUserProfiles {
  userArn: String
  displayName: String
  emailAddress: String
  sshPublicKey: String
}

input AwsCodeStarSeInput {
  bucketName: String
  bucketKey: String
}

input AwsCodeStarTagProjectInput {
  id: String!
  tags: JSON!
}

type AwsCodeStarTagProjectOutput {
  tags: JSON
}

input AwsCodeStarUntagProjectInput {
  id: String!
  tags: [String]!
}

input AwsCodeStarUpdateProjectInput {
  id: String!
  name: String
  description: String
}

input AwsCodeStarUpdateTeamMemberInput {
  projectId: String!
  userArn: String!
  projectRole: String
  remoteAccessAllowed: Boolean
}

type AwsCodeStarUpdateTeamMemberOutput {
  userArn: String
  projectRole: String
  remoteAccessAllowed: Boolean
}

input AwsCodeStarUpdateUserProfileInput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
}

type AwsCodeStarUpdateUserProfileOutput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
  createdTimestamp: Date
  lastModifiedTimestamp: Date
}

"""Amazon Cognito Identity (2014-06-30)"""
type AwsCognitoIdentity {
  createIdentityPool(input: AwsCognitoIdentityCreateIdentityPoolInput!, config: AwsConfig): JSON
  deleteIdentities(input: AwsCognitoIdentityDeleteIdentitiesInput!, config: AwsConfig): AwsCognitoIdentityDeleteIdentitiesOutput
  deleteIdentityPool(input: AwsCognitoIdentityDeleteIdentityPoolInput!, config: AwsConfig): JSON
  describeIdentity(input: AwsCognitoIdentityDescribeIdentityInput!, config: AwsConfig): JSON
  describeIdentityPool(input: AwsCognitoIdentityDescribeIdentityPoolInput!, config: AwsConfig): JSON
  getCredentialsForIdentity(input: AwsCognitoIdentityGetCredentialsForIdentityInput!, config: AwsConfig): AwsCognitoIdentityGetCredentialsForIdentityOutput
  getId(input: AwsCognitoIdentityGetIdInput!, config: AwsConfig): AwsCognitoIdentityGetIdOutput
  getIdentityPoolRoles(input: AwsCognitoIdentityGetIdentityPoolRolesInput!, config: AwsConfig): AwsCognitoIdentityGetIdentityPoolRolesOutput
  getOpenIdToken(input: AwsCognitoIdentityGetOpenIdTokenInput!, config: AwsConfig): AwsCognitoIdentityGetOpenIdTokenOutput
  getOpenIdTokenForDeveloperIdentity(input: AwsCognitoIdentityGetOpenIdTokenForDeveloperIdentityInput!, config: AwsConfig): AwsCognitoIdentityGetOpenIdTokenForDeveloperIdentityOutput
  listIdentities(input: AwsCognitoIdentityListIdentitiesInput!, config: AwsConfig): AwsCognitoIdentityListIdentitiesOutput
  listIdentityPools(input: AwsCognitoIdentityListIdentityPoolsInput!, config: AwsConfig): AwsCognitoIdentityListIdentityPoolsOutput
  listTagsForResource(input: AwsCognitoIdentityListTagsForResourceInput!, config: AwsConfig): AwsCognitoIdentityListTagsForResourceOutput
  lookupDeveloperIdentity(input: AwsCognitoIdentityLookupDeveloperIdentityInput!, config: AwsConfig): AwsCognitoIdentityLookupDeveloperIdentityOutput
  mergeDeveloperIdentities(input: AwsCognitoIdentityMergeDeveloperIdentitiesInput!, config: AwsConfig): AwsCognitoIdentityMergeDeveloperIdentitiesOutput
  setIdentityPoolRoles(input: AwsCognitoIdentitySetIdentityPoolRolesInput!, config: AwsConfig): JSON
  tagResource(input: AwsCognitoIdentityTagResourceInput!, config: AwsConfig): JSON
  unlinkDeveloperIdentity(input: AwsCognitoIdentityUnlinkDeveloperIdentityInput!, config: AwsConfig): JSON
  unlinkIdentity(input: AwsCognitoIdentityUnlinkIdentityInput!, config: AwsConfig): JSON
  untagResource(input: AwsCognitoIdentityUntagResourceInput!, config: AwsConfig): JSON
  updateIdentityPool(input: JSON, config: AwsConfig): JSON
}

input AwsCognitoIdentityCreateIdentityPoolInput {
  IdentityPoolName: String!
  AllowUnauthenticatedIdentities: Boolean!
  SupportedLoginProviders: JSON
  DeveloperProviderName: String
  OpenIdConnectProviderARNs: [String]
  CognitoIdentityProviders: [AwsCognitoIdentitySaInput]
  SamlProviderARNs: [String]
  IdentityPoolTags: JSON
}

input AwsCognitoIdentityDeleteIdentitiesInput {
  IdentityIdsToDelete: [String]!
}

type AwsCognitoIdentityDeleteIdentitiesOutput {
  UnprocessedIdentityIds: [AwsCognitoIdentityDeleteIdentitiesOutputUnprocessedIdentityIds]
}

type AwsCognitoIdentityDeleteIdentitiesOutputUnprocessedIdentityIds {
  IdentityId: String
  ErrorCode: String
}

input AwsCognitoIdentityDeleteIdentityPoolInput {
  IdentityPoolId: String!
}

input AwsCognitoIdentityDescribeIdentityInput {
  IdentityId: String!
}

input AwsCognitoIdentityDescribeIdentityPoolInput {
  IdentityPoolId: String!
}

input AwsCognitoIdentityGetCredentialsForIdentityInput {
  IdentityId: String!
  Logins: JSON
  CustomRoleArn: String
}

type AwsCognitoIdentityGetCredentialsForIdentityOutput {
  IdentityId: String
  Credentials: AwsCognitoIdentityGetCredentialsForIdentityOutputCredentials
}

type AwsCognitoIdentityGetCredentialsForIdentityOutputCredentials {
  AccessKeyId: String
  SecretKey: String
  SessionToken: String
  Expiration: Date
}

input AwsCognitoIdentityGetIdentityPoolRolesInput {
  IdentityPoolId: String!
}

type AwsCognitoIdentityGetIdentityPoolRolesOutput {
  IdentityPoolId: String
  Roles: JSON
  RoleMappings: JSON
}

input AwsCognitoIdentityGetIdInput {
  AccountId: String
  IdentityPoolId: String!
  Logins: JSON
}

type AwsCognitoIdentityGetIdOutput {
  IdentityId: String
}

input AwsCognitoIdentityGetOpenIdTokenForDeveloperIdentityInput {
  IdentityPoolId: String!
  IdentityId: String
  Logins: JSON!
  TokenDuration: JSON
}

type AwsCognitoIdentityGetOpenIdTokenForDeveloperIdentityOutput {
  IdentityId: String
  Token: String
}

input AwsCognitoIdentityGetOpenIdTokenInput {
  IdentityId: String!
  Logins: JSON
}

type AwsCognitoIdentityGetOpenIdTokenOutput {
  IdentityId: String
  Token: String
}

input AwsCognitoIdentityListIdentitiesInput {
  IdentityPoolId: String!
  MaxResults: Int!
  NextToken: String
  HideDisabled: Boolean
}

type AwsCognitoIdentityListIdentitiesOutput {
  IdentityPoolId: String
  Identities: [AwsCognitoIdentitySu]
  NextToken: String
}

input AwsCognitoIdentityListIdentityPoolsInput {
  MaxResults: Int!
  NextToken: String
}

type AwsCognitoIdentityListIdentityPoolsOutput {
  IdentityPools: [AwsCognitoIdentityListIdentityPoolsOutputIdentityPools]
  NextToken: String
}

type AwsCognitoIdentityListIdentityPoolsOutputIdentityPools {
  IdentityPoolId: String
  IdentityPoolName: String
}

input AwsCognitoIdentityListTagsForResourceInput {
  ResourceArn: String!
}

type AwsCognitoIdentityListTagsForResourceOutput {
  Tags: JSON
}

input AwsCognitoIdentityLookupDeveloperIdentityInput {
  IdentityPoolId: String!
  IdentityId: String
  DeveloperUserIdentifier: String
  MaxResults: Int
  NextToken: String
}

type AwsCognitoIdentityLookupDeveloperIdentityOutput {
  IdentityId: String
  DeveloperUserIdentifierList: [String]
  NextToken: String
}

input AwsCognitoIdentityMergeDeveloperIdentitiesInput {
  SourceUserIdentifier: String!
  DestinationUserIdentifier: String!
  DeveloperProviderName: String!
  IdentityPoolId: String!
}

type AwsCognitoIdentityMergeDeveloperIdentitiesOutput {
  IdentityId: String
}

input AwsCognitoIdentitySaInput {
  ProviderName: String
  ClientId: String
  ServerSideTokenCheck: Boolean
}

"""Amazon Cognito Identity Provider (2016-04-18)"""
type AwsCognitoIdentityServiceProvider {
  addCustomAttributes(input: AwsCognitoIdentityServiceProviderAddCustomAttributesInput!, config: AwsConfig): JSON
  adminAddUserToGroup(input: AwsCognitoIdentityServiceProviderAdminAddUserToGroupInput!, config: AwsConfig): JSON
  adminConfirmSignUp(input: AwsCognitoIdentityServiceProviderAdminConfirmSignUpInput!, config: AwsConfig): JSON
  adminCreateUser(input: AwsCognitoIdentityServiceProviderAdminCreateUserInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminCreateUserOutput
  adminDeleteUser(input: AwsCognitoIdentityServiceProviderAdminDeleteUserInput!, config: AwsConfig): JSON
  adminDeleteUserAttributes(input: AwsCognitoIdentityServiceProviderAdminDeleteUserAttributesInput!, config: AwsConfig): JSON
  adminDisableProviderForUser(input: AwsCognitoIdentityServiceProviderAdminDisableProviderForUserInput!, config: AwsConfig): JSON
  adminDisableUser(input: AwsCognitoIdentityServiceProviderAdminDisableUserInput!, config: AwsConfig): JSON
  adminEnableUser(input: AwsCognitoIdentityServiceProviderAdminEnableUserInput!, config: AwsConfig): JSON
  adminForgetDevice(input: AwsCognitoIdentityServiceProviderAdminForgetDeviceInput!, config: AwsConfig): JSON
  adminGetDevice(input: AwsCognitoIdentityServiceProviderAdminGetDeviceInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminGetDeviceOutput
  adminGetUser(input: AwsCognitoIdentityServiceProviderAdminGetUserInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminGetUserOutput
  adminInitiateAuth(input: AwsCognitoIdentityServiceProviderAdminInitiateAuthInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminInitiateAuthOutput
  adminLinkProviderForUser(input: AwsCognitoIdentityServiceProviderAdminLinkProviderForUserInput!, config: AwsConfig): JSON
  adminListDevices(input: AwsCognitoIdentityServiceProviderAdminListDevicesInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminListDevicesOutput
  adminListGroupsForUser(input: AwsCognitoIdentityServiceProviderAdminListGroupsForUserInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminListGroupsForUserOutput
  adminListUserAuthEvents(input: AwsCognitoIdentityServiceProviderAdminListUserAuthEventsInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutput
  adminRemoveUserFromGroup(input: AwsCognitoIdentityServiceProviderAdminRemoveUserFromGroupInput!, config: AwsConfig): JSON
  adminResetUserPassword(input: AwsCognitoIdentityServiceProviderAdminResetUserPasswordInput!, config: AwsConfig): JSON
  adminRespondToAuthChallenge(input: AwsCognitoIdentityServiceProviderAdminRespondToAuthChallengeInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminRespondToAuthChallengeOutput
  adminSetUserMFAPreference(input: AwsCognitoIdentityServiceProviderAdminSetUserMFAPreferenceInput!, config: AwsConfig): JSON
  adminSetUserPassword(input: AwsCognitoIdentityServiceProviderAdminSetUserPasswordInput!, config: AwsConfig): JSON
  adminSetUserSettings(input: AwsCognitoIdentityServiceProviderAdminSetUserSettingsInput!, config: AwsConfig): JSON
  adminUpdateAuthEventFeedback(input: AwsCognitoIdentityServiceProviderAdminUpdateAuthEventFeedbackInput!, config: AwsConfig): JSON
  adminUpdateDeviceStatus(input: AwsCognitoIdentityServiceProviderAdminUpdateDeviceStatusInput!, config: AwsConfig): JSON
  adminUpdateUserAttributes(input: AwsCognitoIdentityServiceProviderAdminUpdateUserAttributesInput!, config: AwsConfig): JSON
  adminUserGlobalSignOut(input: AwsCognitoIdentityServiceProviderAdminUserGlobalSignOutInput!, config: AwsConfig): JSON
  associateSoftwareToken(input: AwsCognitoIdentityServiceProviderAssociateSoftwareTokenInput, config: AwsConfig): AwsCognitoIdentityServiceProviderAssociateSoftwareTokenOutput
  changePassword(input: AwsCognitoIdentityServiceProviderChangePasswordInput!, config: AwsConfig): JSON
  confirmDevice(input: AwsCognitoIdentityServiceProviderConfirmDeviceInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderConfirmDeviceOutput
  confirmForgotPassword(input: AwsCognitoIdentityServiceProviderConfirmForgotPasswordInput!, config: AwsConfig): JSON
  confirmSignUp(input: AwsCognitoIdentityServiceProviderConfirmSignUpInput!, config: AwsConfig): JSON
  createGroup(input: AwsCognitoIdentityServiceProviderCreateGroupInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateGroupOutput
  createIdentityProvider(input: AwsCognitoIdentityServiceProviderCreateIdentityProviderInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateIdentityProviderOutput
  createResourceServer(input: AwsCognitoIdentityServiceProviderCreateResourceServerInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateResourceServerOutput
  createUserImportJob(input: AwsCognitoIdentityServiceProviderCreateUserImportJobInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateUserImportJobOutput
  createUserPool(input: AwsCognitoIdentityServiceProviderCreateUserPoolInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateUserPoolOutput
  createUserPoolClient(input: AwsCognitoIdentityServiceProviderCreateUserPoolClientInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateUserPoolClientOutput
  createUserPoolDomain(input: AwsCognitoIdentityServiceProviderCreateUserPoolDomainInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateUserPoolDomainOutput
  deleteGroup(input: AwsCognitoIdentityServiceProviderDeleteGroupInput!, config: AwsConfig): JSON
  deleteIdentityProvider(input: AwsCognitoIdentityServiceProviderDeleteIdentityProviderInput!, config: AwsConfig): JSON
  deleteResourceServer(input: AwsCognitoIdentityServiceProviderDeleteResourceServerInput!, config: AwsConfig): JSON
  deleteUser(input: AwsCognitoIdentityServiceProviderDeleteUserInput!, config: AwsConfig): JSON
  deleteUserAttributes(input: AwsCognitoIdentityServiceProviderDeleteUserAttributesInput!, config: AwsConfig): JSON
  deleteUserPool(input: AwsCognitoIdentityServiceProviderDeleteUserPoolInput!, config: AwsConfig): JSON
  deleteUserPoolClient(input: AwsCognitoIdentityServiceProviderDeleteUserPoolClientInput!, config: AwsConfig): JSON
  deleteUserPoolDomain(input: AwsCognitoIdentityServiceProviderDeleteUserPoolDomainInput!, config: AwsConfig): JSON
  describeIdentityProvider(input: AwsCognitoIdentityServiceProviderDescribeIdentityProviderInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeIdentityProviderOutput
  describeResourceServer(input: AwsCognitoIdentityServiceProviderDescribeResourceServerInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeResourceServerOutput
  describeRiskConfiguration(input: AwsCognitoIdentityServiceProviderDescribeRiskConfigurationInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeRiskConfigurationOutput
  describeUserImportJob(input: AwsCognitoIdentityServiceProviderDescribeUserImportJobInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeUserImportJobOutput
  describeUserPool(input: AwsCognitoIdentityServiceProviderDescribeUserPoolInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeUserPoolOutput
  describeUserPoolClient(input: AwsCognitoIdentityServiceProviderDescribeUserPoolClientInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeUserPoolClientOutput
  describeUserPoolDomain(input: AwsCognitoIdentityServiceProviderDescribeUserPoolDomainInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeUserPoolDomainOutput
  forgetDevice(input: AwsCognitoIdentityServiceProviderForgetDeviceInput!, config: AwsConfig): JSON
  forgotPassword(input: AwsCognitoIdentityServiceProviderForgotPasswordInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderForgotPasswordOutput
  getCSVHeader(input: AwsCognitoIdentityServiceProviderGetCSVHeaderInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetCSVHeaderOutput
  getDevice(input: AwsCognitoIdentityServiceProviderGetDeviceInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetDeviceOutput
  getGroup(input: AwsCognitoIdentityServiceProviderGetGroupInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetGroupOutput
  getIdentityProviderByIdentifier(input: AwsCognitoIdentityServiceProviderGetIdentityProviderByIdentifierInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetIdentityProviderByIdentifierOutput
  getSigningCertificate(input: AwsCognitoIdentityServiceProviderGetSigningCertificateInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetSigningCertificateOutput
  getUICustomization(input: AwsCognitoIdentityServiceProviderGetUICustomizationInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetUICustomizationOutput
  getUser(input: AwsCognitoIdentityServiceProviderGetUserInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetUserOutput
  getUserAttributeVerificationCode(input: AwsCognitoIdentityServiceProviderGetUserAttributeVerificationCodeInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetUserAttributeVerificationCodeOutput
  getUserPoolMfaConfig(input: AwsCognitoIdentityServiceProviderGetUserPoolMfaConfigInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetUserPoolMfaConfigOutput
  globalSignOut(input: AwsCognitoIdentityServiceProviderGlobalSignOutInput!, config: AwsConfig): JSON
  initiateAuth(input: AwsCognitoIdentityServiceProviderInitiateAuthInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderInitiateAuthOutput
  listDevices(input: AwsCognitoIdentityServiceProviderListDevicesInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListDevicesOutput
  listGroups(input: AwsCognitoIdentityServiceProviderListGroupsInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListGroupsOutput
  listIdentityProviders(input: AwsCognitoIdentityServiceProviderListIdentityProvidersInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListIdentityProvidersOutput
  listResourceServers(input: AwsCognitoIdentityServiceProviderListResourceServersInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListResourceServersOutput
  listTagsForResource(input: AwsCognitoIdentityServiceProviderListTagsForResourceInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListTagsForResourceOutput
  listUserImportJobs(input: AwsCognitoIdentityServiceProviderListUserImportJobsInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListUserImportJobsOutput
  listUserPoolClients(input: AwsCognitoIdentityServiceProviderListUserPoolClientsInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListUserPoolClientsOutput
  listUserPools(input: AwsCognitoIdentityServiceProviderListUserPoolsInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListUserPoolsOutput
  listUsers(input: AwsCognitoIdentityServiceProviderListUsersInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListUsersOutput
  listUsersInGroup(input: AwsCognitoIdentityServiceProviderListUsersInGroupInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListUsersInGroupOutput
  resendConfirmationCode(input: AwsCognitoIdentityServiceProviderResendConfirmationCodeInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderResendConfirmationCodeOutput
  respondToAuthChallenge(input: AwsCognitoIdentityServiceProviderRespondToAuthChallengeInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderRespondToAuthChallengeOutput
  setRiskConfiguration(input: AwsCognitoIdentityServiceProviderSetRiskConfigurationInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderSetRiskConfigurationOutput
  setUICustomization(input: AwsCognitoIdentityServiceProviderSetUICustomizationInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderSetUICustomizationOutput
  setUserMFAPreference(input: AwsCognitoIdentityServiceProviderSetUserMFAPreferenceInput!, config: AwsConfig): JSON
  setUserPoolMfaConfig(input: AwsCognitoIdentityServiceProviderSetUserPoolMfaConfigInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderSetUserPoolMfaConfigOutput
  setUserSettings(input: AwsCognitoIdentityServiceProviderSetUserSettingsInput!, config: AwsConfig): JSON
  signUp(input: AwsCognitoIdentityServiceProviderSignUpInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderSignUpOutput
  startUserImportJob(input: AwsCognitoIdentityServiceProviderStartUserImportJobInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderStartUserImportJobOutput
  stopUserImportJob(input: AwsCognitoIdentityServiceProviderStopUserImportJobInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderStopUserImportJobOutput
  tagResource(input: AwsCognitoIdentityServiceProviderTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsCognitoIdentityServiceProviderUntagResourceInput!, config: AwsConfig): JSON
  updateAuthEventFeedback(input: AwsCognitoIdentityServiceProviderUpdateAuthEventFeedbackInput!, config: AwsConfig): JSON
  updateDeviceStatus(input: AwsCognitoIdentityServiceProviderUpdateDeviceStatusInput!, config: AwsConfig): JSON
  updateGroup(input: AwsCognitoIdentityServiceProviderUpdateGroupInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateGroupOutput
  updateIdentityProvider(input: AwsCognitoIdentityServiceProviderUpdateIdentityProviderInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateIdentityProviderOutput
  updateResourceServer(input: AwsCognitoIdentityServiceProviderUpdateResourceServerInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateResourceServerOutput
  updateUserAttributes(input: AwsCognitoIdentityServiceProviderUpdateUserAttributesInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateUserAttributesOutput
  updateUserPool(input: AwsCognitoIdentityServiceProviderUpdateUserPoolInput!, config: AwsConfig): JSON
  updateUserPoolClient(input: AwsCognitoIdentityServiceProviderUpdateUserPoolClientInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateUserPoolClientOutput
  updateUserPoolDomain(input: AwsCognitoIdentityServiceProviderUpdateUserPoolDomainInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateUserPoolDomainOutput
  verifySoftwareToken(input: AwsCognitoIdentityServiceProviderVerifySoftwareTokenInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderVerifySoftwareTokenOutput
  verifyUserAttribute(input: AwsCognitoIdentityServiceProviderVerifyUserAttributeInput!, config: AwsConfig): JSON
}

input AwsCognitoIdentityServiceProviderAddCustomAttributesInput {
  UserPoolId: String!
  CustomAttributes: [AwsCognitoIdentityServiceProviderS4Input]!
}

input AwsCognitoIdentityServiceProviderAdminAddUserToGroupInput {
  UserPoolId: String!
  Username: String!
  GroupName: String!
}

input AwsCognitoIdentityServiceProviderAdminConfirmSignUpInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAdminCreateUserInput {
  UserPoolId: String!
  Username: String!
  UserAttributes: [AwsCognitoIdentityServiceProviderSiInput]
  ValidationData: [AwsCognitoIdentityServiceProviderSiInput]
  TemporaryPassword: String
  ForceAliasCreation: Boolean
  MessageAction: String
  DesiredDeliveryMediums: [String]
}

type AwsCognitoIdentityServiceProviderAdminCreateUserOutput {
  User: AwsCognitoIdentityServiceProviderSs
}

input AwsCognitoIdentityServiceProviderAdminDeleteUserAttributesInput {
  UserPoolId: String!
  Username: String!
  UserAttributeNames: [String]!
}

input AwsCognitoIdentityServiceProviderAdminDeleteUserInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAdminDisableProviderForUserInput {
  UserPoolId: String!
  User: AwsCognitoIdentityServiceProviderS12Input!
}

input AwsCognitoIdentityServiceProviderAdminDisableUserInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAdminEnableUserInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAdminForgetDeviceInput {
  UserPoolId: String!
  Username: String!
  DeviceKey: String!
}

input AwsCognitoIdentityServiceProviderAdminGetDeviceInput {
  DeviceKey: String!
  UserPoolId: String!
  Username: String!
}

type AwsCognitoIdentityServiceProviderAdminGetDeviceOutput {
  Device: AwsCognitoIdentityServiceProviderS1d!
}

input AwsCognitoIdentityServiceProviderAdminGetUserInput {
  UserPoolId: String!
  Username: String!
}

type AwsCognitoIdentityServiceProviderAdminGetUserOutput {
  Username: String!
  UserAttributes: [AwsCognitoIdentityServiceProviderSi]
  UserCreateDate: Date
  UserLastModifiedDate: Date
  Enabled: Boolean
  UserStatus: String
  MFAOptions: [AwsCognitoIdentityServiceProviderSv]
  PreferredMfaSetting: String
  UserMFASettingList: [String]
}

input AwsCognitoIdentityServiceProviderAdminInitiateAuthInput {
  UserPoolId: String!
  ClientId: String!
  AuthFlow: String!
  AuthParameters: JSON
  ClientMetadata: JSON
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  ContextData: AwsCognitoIdentityServiceProviderS1nInput
}

type AwsCognitoIdentityServiceProviderAdminInitiateAuthOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoIdentityServiceProviderS1u
}

input AwsCognitoIdentityServiceProviderAdminLinkProviderForUserInput {
  UserPoolId: String!
  DestinationUser: AwsCognitoIdentityServiceProviderS12Input!
  SourceUser: AwsCognitoIdentityServiceProviderS12Input!
}

input AwsCognitoIdentityServiceProviderAdminListDevicesInput {
  UserPoolId: String!
  Username: String!
  Limit: Int
  PaginationToken: String
}

type AwsCognitoIdentityServiceProviderAdminListDevicesOutput {
  Devices: [AwsCognitoIdentityServiceProviderS1d]
  PaginationToken: String
}

input AwsCognitoIdentityServiceProviderAdminListGroupsForUserInput {
  Username: String!
  UserPoolId: String!
  Limit: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderAdminListGroupsForUserOutput {
  Groups: [AwsCognitoIdentityServiceProviderS29]
  NextToken: String
}

input AwsCognitoIdentityServiceProviderAdminListUserAuthEventsInput {
  UserPoolId: String!
  Username: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutput {
  AuthEvents: [AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEvents]
  NextToken: String
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEvents {
  EventId: String
  EventType: String
  CreationDate: Date
  EventResponse: String
  EventRisk: AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventRisk
  ChallengeResponses: [AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsChallengeResponses]
  EventContextData: AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventContextData
  EventFeedback: AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventFeedback
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsChallengeResponses {
  ChallengeName: String
  ChallengeResponse: String
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventContextData {
  IpAddress: String
  DeviceName: String
  Timezone: String
  City: String
  Country: String
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventFeedback {
  FeedbackValue: String!
  Provider: String!
  FeedbackDate: Date
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventRisk {
  RiskDecision: String
  RiskLevel: String
}

input AwsCognitoIdentityServiceProviderAdminRemoveUserFromGroupInput {
  UserPoolId: String!
  Username: String!
  GroupName: String!
}

input AwsCognitoIdentityServiceProviderAdminResetUserPasswordInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAdminRespondToAuthChallengeInput {
  UserPoolId: String!
  ClientId: String!
  ChallengeName: String!
  ChallengeResponses: JSON
  Session: String
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  ContextData: AwsCognitoIdentityServiceProviderS1nInput
}

type AwsCognitoIdentityServiceProviderAdminRespondToAuthChallengeOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoIdentityServiceProviderS1u
}

input AwsCognitoIdentityServiceProviderAdminSetUserMFAPreferenceInput {
  SMSMfaSettings: AwsCognitoIdentityServiceProviderS30Input
  SoftwareTokenMfaSettings: AwsCognitoIdentityServiceProviderS31Input
  Username: String!
  UserPoolId: String!
}

input AwsCognitoIdentityServiceProviderAdminSetUserPasswordInput {
  UserPoolId: String!
  Username: String!
  Password: String!
  Permanent: Boolean
}

input AwsCognitoIdentityServiceProviderAdminSetUserSettingsInput {
  UserPoolId: String!
  Username: String!
  MFAOptions: [AwsCognitoIdentityServiceProviderSvInput]!
}

input AwsCognitoIdentityServiceProviderAdminUpdateAuthEventFeedbackInput {
  UserPoolId: String!
  Username: String!
  EventId: String!
  FeedbackValue: String!
}

input AwsCognitoIdentityServiceProviderAdminUpdateDeviceStatusInput {
  UserPoolId: String!
  Username: String!
  DeviceKey: String!
  DeviceRememberedStatus: String
}

input AwsCognitoIdentityServiceProviderAdminUpdateUserAttributesInput {
  UserPoolId: String!
  Username: String!
  UserAttributes: [AwsCognitoIdentityServiceProviderSiInput]!
}

input AwsCognitoIdentityServiceProviderAdminUserGlobalSignOutInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAssociateSoftwareTokenInput {
  AccessToken: String
  Session: String
}

type AwsCognitoIdentityServiceProviderAssociateSoftwareTokenOutput {
  SecretCode: String
  Session: String
}

input AwsCognitoIdentityServiceProviderChangePasswordInput {
  PreviousPassword: String!
  ProposedPassword: String!
  AccessToken: String!
}

input AwsCognitoIdentityServiceProviderConfirmDeviceDeviceSecretVerifierConfigInput {
  PasswordVerifier: String
  Salt: String
}

input AwsCognitoIdentityServiceProviderConfirmDeviceInput {
  AccessToken: String!
  DeviceKey: String!
  DeviceSecretVerifierConfig: AwsCognitoIdentityServiceProviderConfirmDeviceDeviceSecretVerifierConfigInput
  DeviceName: String
}

type AwsCognitoIdentityServiceProviderConfirmDeviceOutput {
  UserConfirmationNecessary: Boolean
}

input AwsCognitoIdentityServiceProviderConfirmForgotPasswordInput {
  ClientId: String!
  SecretHash: String
  Username: String!
  ConfirmationCode: String!
  Password: String!
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  UserContextData: AwsCognitoIdentityServiceProviderS3tInput
}

input AwsCognitoIdentityServiceProviderConfirmSignUpInput {
  ClientId: String!
  SecretHash: String
  Username: String!
  ConfirmationCode: String!
  ForceAliasCreation: Boolean
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  UserContextData: AwsCognitoIdentityServiceProviderS3tInput
}

input AwsCognitoIdentityServiceProviderCreateGroupInput {
  GroupName: String!
  UserPoolId: String!
  Description: String
  RoleArn: String
  Precedence: Int
}

type AwsCognitoIdentityServiceProviderCreateGroupOutput {
  Group: AwsCognitoIdentityServiceProviderS29
}

input AwsCognitoIdentityServiceProviderCreateIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
  ProviderType: String!
  ProviderDetails: JSON!
  AttributeMapping: JSON
  IdpIdentifiers: [String]
}

type AwsCognitoIdentityServiceProviderCreateIdentityProviderOutput {
  IdentityProvider: AwsCognitoIdentityServiceProviderS48!
}

input AwsCognitoIdentityServiceProviderCreateResourceServerInput {
  UserPoolId: String!
  Identifier: String!
  Name: String!
  Scopes: [AwsCognitoIdentityServiceProviderS4cInput]
}

type AwsCognitoIdentityServiceProviderCreateResourceServerOutput {
  ResourceServer: AwsCognitoIdentityServiceProviderS4h!
}

input AwsCognitoIdentityServiceProviderCreateUserImportJobInput {
  JobName: String!
  UserPoolId: String!
  CloudWatchLogsRoleArn: String!
}

type AwsCognitoIdentityServiceProviderCreateUserImportJobOutput {
  UserImportJob: AwsCognitoIdentityServiceProviderS4l
}

input AwsCognitoIdentityServiceProviderCreateUserPoolClientInput {
  UserPoolId: String!
  ClientName: String!
  GenerateSecret: Boolean
  RefreshTokenValidity: Int
  ReadAttributes: [String]
  WriteAttributes: [String]
  ExplicitAuthFlows: [String]
  SupportedIdentityProviders: [String]
  CallbackURLs: [String]
  LogoutURLs: [String]
  DefaultRedirectURI: String
  AllowedOAuthFlows: [String]
  AllowedOAuthScopes: [String]
  AllowedOAuthFlowsUserPoolClient: Boolean
  AnalyticsConfiguration: AwsCognitoIdentityServiceProviderS6aInput
}

type AwsCognitoIdentityServiceProviderCreateUserPoolClientOutput {
  UserPoolClient: AwsCognitoIdentityServiceProviderS6d
}

input AwsCognitoIdentityServiceProviderCreateUserPoolDomainInput {
  Domain: String!
  UserPoolId: String!
  CustomDomainConfig: AwsCognitoIdentityServiceProviderS6gInput
}

type AwsCognitoIdentityServiceProviderCreateUserPoolDomainOutput {
  CloudFrontDomain: String
}

input AwsCognitoIdentityServiceProviderCreateUserPoolInput {
  PoolName: String!
  Policies: AwsCognitoIdentityServiceProviderS4tInput
  LambdaConfig: AwsCognitoIdentityServiceProviderS4xInput
  AutoVerifiedAttributes: [String]
  AliasAttributes: [String]
  UsernameAttributes: [String]
  SmsVerificationMessage: String
  EmailVerificationMessage: String
  EmailVerificationSubject: String
  VerificationMessageTemplate: AwsCognitoIdentityServiceProviderS57Input
  SmsAuthenticationMessage: String
  MfaConfiguration: String
  DeviceConfiguration: AwsCognitoIdentityServiceProviderS5cInput
  EmailConfiguration: AwsCognitoIdentityServiceProviderS5dInput
  SmsConfiguration: AwsCognitoIdentityServiceProviderS5gInput
  UserPoolTags: JSON
  AdminCreateUserConfig: AwsCognitoIdentityServiceProviderS5kInput
  Schema: [AwsCognitoIdentityServiceProviderS4Input]
  UserPoolAddOns: AwsCognitoIdentityServiceProviderS5oInput
}

type AwsCognitoIdentityServiceProviderCreateUserPoolOutput {
  UserPool: AwsCognitoIdentityServiceProviderS5r
}

input AwsCognitoIdentityServiceProviderDeleteGroupInput {
  GroupName: String!
  UserPoolId: String!
}

input AwsCognitoIdentityServiceProviderDeleteIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
}

input AwsCognitoIdentityServiceProviderDeleteResourceServerInput {
  UserPoolId: String!
  Identifier: String!
}

input AwsCognitoIdentityServiceProviderDeleteUserAttributesInput {
  UserAttributeNames: [String]!
  AccessToken: String!
}

input AwsCognitoIdentityServiceProviderDeleteUserInput {
  AccessToken: String!
}

input AwsCognitoIdentityServiceProviderDeleteUserPoolClientInput {
  UserPoolId: String!
  ClientId: String!
}

input AwsCognitoIdentityServiceProviderDeleteUserPoolDomainInput {
  Domain: String!
  UserPoolId: String!
}

input AwsCognitoIdentityServiceProviderDeleteUserPoolInput {
  UserPoolId: String!
}

input AwsCognitoIdentityServiceProviderDescribeIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
}

type AwsCognitoIdentityServiceProviderDescribeIdentityProviderOutput {
  IdentityProvider: AwsCognitoIdentityServiceProviderS48!
}

input AwsCognitoIdentityServiceProviderDescribeResourceServerInput {
  UserPoolId: String!
  Identifier: String!
}

type AwsCognitoIdentityServiceProviderDescribeResourceServerOutput {
  ResourceServer: AwsCognitoIdentityServiceProviderS4h!
}

input AwsCognitoIdentityServiceProviderDescribeRiskConfigurationInput {
  UserPoolId: String!
  ClientId: String
}

type AwsCognitoIdentityServiceProviderDescribeRiskConfigurationOutput {
  RiskConfiguration: AwsCognitoIdentityServiceProviderS6y!
}

input AwsCognitoIdentityServiceProviderDescribeUserImportJobInput {
  UserPoolId: String!
  JobId: String!
}

type AwsCognitoIdentityServiceProviderDescribeUserImportJobOutput {
  UserImportJob: AwsCognitoIdentityServiceProviderS4l
}

input AwsCognitoIdentityServiceProviderDescribeUserPoolClientInput {
  UserPoolId: String!
  ClientId: String!
}

type AwsCognitoIdentityServiceProviderDescribeUserPoolClientOutput {
  UserPoolClient: AwsCognitoIdentityServiceProviderS6d
}

input AwsCognitoIdentityServiceProviderDescribeUserPoolDomainInput {
  Domain: String!
}

type AwsCognitoIdentityServiceProviderDescribeUserPoolDomainOutput {
  DomainDescription: AwsCognitoIdentityServiceProviderDescribeUserPoolDomainOutputDomainDescription
}

type AwsCognitoIdentityServiceProviderDescribeUserPoolDomainOutputDomainDescription {
  UserPoolId: String
  AWSAccountId: String
  Domain: String
  S3Bucket: String
  CloudFrontDistribution: String
  Version: String
  Status: String
  CustomDomainConfig: AwsCognitoIdentityServiceProviderS6g
}

input AwsCognitoIdentityServiceProviderDescribeUserPoolInput {
  UserPoolId: String!
}

type AwsCognitoIdentityServiceProviderDescribeUserPoolOutput {
  UserPool: AwsCognitoIdentityServiceProviderS5r
}

input AwsCognitoIdentityServiceProviderForgetDeviceInput {
  AccessToken: String
  DeviceKey: String!
}

input AwsCognitoIdentityServiceProviderForgotPasswordInput {
  ClientId: String!
  SecretHash: String
  UserContextData: AwsCognitoIdentityServiceProviderS3tInput
  Username: String!
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
}

type AwsCognitoIdentityServiceProviderForgotPasswordOutput {
  CodeDeliveryDetails: AwsCognitoIdentityServiceProviderS7w
}

input AwsCognitoIdentityServiceProviderGetCSVHeaderInput {
  UserPoolId: String!
}

type AwsCognitoIdentityServiceProviderGetCSVHeaderOutput {
  UserPoolId: String
  CSVHeader: [String]
}

input AwsCognitoIdentityServiceProviderGetDeviceInput {
  DeviceKey: String!
  AccessToken: String
}

type AwsCognitoIdentityServiceProviderGetDeviceOutput {
  Device: AwsCognitoIdentityServiceProviderS1d!
}

input AwsCognitoIdentityServiceProviderGetGroupInput {
  GroupName: String!
  UserPoolId: String!
}

type AwsCognitoIdentityServiceProviderGetGroupOutput {
  Group: AwsCognitoIdentityServiceProviderS29
}

input AwsCognitoIdentityServiceProviderGetIdentityProviderByIdentifierInput {
  UserPoolId: String!
  IdpIdentifier: String!
}

type AwsCognitoIdentityServiceProviderGetIdentityProviderByIdentifierOutput {
  IdentityProvider: AwsCognitoIdentityServiceProviderS48!
}

input AwsCognitoIdentityServiceProviderGetSigningCertificateInput {
  UserPoolId: String!
}

type AwsCognitoIdentityServiceProviderGetSigningCertificateOutput {
  Certificate: String
}

input AwsCognitoIdentityServiceProviderGetUICustomizationInput {
  UserPoolId: String!
  ClientId: String
}

type AwsCognitoIdentityServiceProviderGetUICustomizationOutput {
  UICustomization: AwsCognitoIdentityServiceProviderS8a!
}

input AwsCognitoIdentityServiceProviderGetUserAttributeVerificationCodeInput {
  AccessToken: String!
  AttributeName: String!
}

type AwsCognitoIdentityServiceProviderGetUserAttributeVerificationCodeOutput {
  CodeDeliveryDetails: AwsCognitoIdentityServiceProviderS7w
}

input AwsCognitoIdentityServiceProviderGetUserInput {
  AccessToken: String!
}

type AwsCognitoIdentityServiceProviderGetUserOutput {
  Username: String!
  UserAttributes: [AwsCognitoIdentityServiceProviderSi]!
  MFAOptions: [AwsCognitoIdentityServiceProviderSv]
  PreferredMfaSetting: String
  UserMFASettingList: [String]
}

input AwsCognitoIdentityServiceProviderGetUserPoolMfaConfigInput {
  UserPoolId: String!
}

type AwsCognitoIdentityServiceProviderGetUserPoolMfaConfigOutput {
  SmsMfaConfiguration: AwsCognitoIdentityServiceProviderS8k
  SoftwareTokenMfaConfiguration: AwsCognitoIdentityServiceProviderS8l
  MfaConfiguration: String
}

input AwsCognitoIdentityServiceProviderGlobalSignOutInput {
  AccessToken: String!
}

input AwsCognitoIdentityServiceProviderInitiateAuthInput {
  AuthFlow: String!
  AuthParameters: JSON
  ClientMetadata: JSON
  ClientId: String!
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  UserContextData: AwsCognitoIdentityServiceProviderS3tInput
}

type AwsCognitoIdentityServiceProviderInitiateAuthOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoIdentityServiceProviderS1u
}

input AwsCognitoIdentityServiceProviderListDevicesInput {
  AccessToken: String!
  Limit: Int
  PaginationToken: String
}

type AwsCognitoIdentityServiceProviderListDevicesOutput {
  Devices: [AwsCognitoIdentityServiceProviderS1d]
  PaginationToken: String
}

input AwsCognitoIdentityServiceProviderListGroupsInput {
  UserPoolId: String!
  Limit: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListGroupsOutput {
  Groups: [AwsCognitoIdentityServiceProviderS29]
  NextToken: String
}

input AwsCognitoIdentityServiceProviderListIdentityProvidersInput {
  UserPoolId: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListIdentityProvidersOutput {
  Providers: [AwsCognitoIdentityServiceProviderListIdentityProvidersOutputProviders]!
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListIdentityProvidersOutputProviders {
  ProviderName: String
  ProviderType: String
  LastModifiedDate: Date
  CreationDate: Date
}

input AwsCognitoIdentityServiceProviderListResourceServersInput {
  UserPoolId: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListResourceServersOutput {
  ResourceServers: [AwsCognitoIdentityServiceProviderS4h]!
  NextToken: String
}

input AwsCognitoIdentityServiceProviderListTagsForResourceInput {
  ResourceArn: String!
}

type AwsCognitoIdentityServiceProviderListTagsForResourceOutput {
  Tags: JSON
}

input AwsCognitoIdentityServiceProviderListUserImportJobsInput {
  UserPoolId: String!
  MaxResults: Int!
  PaginationToken: String
}

type AwsCognitoIdentityServiceProviderListUserImportJobsOutput {
  UserImportJobs: [AwsCognitoIdentityServiceProviderS4l]
  PaginationToken: String
}

input AwsCognitoIdentityServiceProviderListUserPoolClientsInput {
  UserPoolId: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListUserPoolClientsOutput {
  UserPoolClients: [AwsCognitoIdentityServiceProviderListUserPoolClientsOutputUserPoolClients]
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListUserPoolClientsOutputUserPoolClients {
  ClientId: String
  UserPoolId: String
  ClientName: String
}

input AwsCognitoIdentityServiceProviderListUserPoolsInput {
  NextToken: String
  MaxResults: Int!
}

type AwsCognitoIdentityServiceProviderListUserPoolsOutput {
  UserPools: [AwsCognitoIdentityServiceProviderListUserPoolsOutputUserPools]
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListUserPoolsOutputUserPools {
  Id: String
  Name: String
  LambdaConfig: AwsCognitoIdentityServiceProviderS4x
  Status: String
  LastModifiedDate: Date
  CreationDate: Date
}

input AwsCognitoIdentityServiceProviderListUsersInGroupInput {
  UserPoolId: String!
  GroupName: String!
  Limit: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListUsersInGroupOutput {
  Users: [AwsCognitoIdentityServiceProviderSs]
  NextToken: String
}

input AwsCognitoIdentityServiceProviderListUsersInput {
  UserPoolId: String!
  AttributesToGet: [String]
  Limit: Int
  PaginationToken: String
  Filter: String
}

type AwsCognitoIdentityServiceProviderListUsersOutput {
  Users: [AwsCognitoIdentityServiceProviderSs]
  PaginationToken: String
}

input AwsCognitoIdentityServiceProviderResendConfirmationCodeInput {
  ClientId: String!
  SecretHash: String
  UserContextData: AwsCognitoIdentityServiceProviderS3tInput
  Username: String!
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
}

type AwsCognitoIdentityServiceProviderResendConfirmationCodeOutput {
  CodeDeliveryDetails: AwsCognitoIdentityServiceProviderS7w
}

input AwsCognitoIdentityServiceProviderRespondToAuthChallengeInput {
  ClientId: String!
  ChallengeName: String!
  Session: String
  ChallengeResponses: JSON
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  UserContextData: AwsCognitoIdentityServiceProviderS3tInput
}

type AwsCognitoIdentityServiceProviderRespondToAuthChallengeOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoIdentityServiceProviderS1u
}

input AwsCognitoIdentityServiceProviderS12Input {
  ProviderName: String
  ProviderAttributeName: String
  ProviderAttributeValue: String
}

type AwsCognitoIdentityServiceProviderS1d {
  DeviceKey: String
  DeviceAttributes: [AwsCognitoIdentityServiceProviderSi]
  DeviceCreateDate: Date
  DeviceLastModifiedDate: Date
  DeviceLastAuthenticatedDate: Date
}

input AwsCognitoIdentityServiceProviderS1mInput {
  AnalyticsEndpointId: String
}

input AwsCognitoIdentityServiceProviderS1nHttpHeadersInput {
  headerName: String
  headerValue: String
}

input AwsCognitoIdentityServiceProviderS1nInput {
  IpAddress: String!
  ServerName: String!
  ServerPath: String!
  HttpHeaders: [AwsCognitoIdentityServiceProviderS1nHttpHeadersInput]!
  EncodedData: String
}

type AwsCognitoIdentityServiceProviderS1u {
  AccessToken: String
  ExpiresIn: Int
  TokenType: String
  RefreshToken: String
  IdToken: String
  NewDeviceMetadata: AwsCognitoIdentityServiceProviderS1uNewDeviceMetadata
}

type AwsCognitoIdentityServiceProviderS1uNewDeviceMetadata {
  DeviceKey: String
  DeviceGroupKey: String
}

type AwsCognitoIdentityServiceProviderS29 {
  GroupName: String
  UserPoolId: String
  Description: String
  RoleArn: String
  Precedence: Int
  LastModifiedDate: Date
  CreationDate: Date
}

input AwsCognitoIdentityServiceProviderS30Input {
  Enabled: Boolean
  PreferredMfa: Boolean
}

input AwsCognitoIdentityServiceProviderS31Input {
  Enabled: Boolean
  PreferredMfa: Boolean
}

input AwsCognitoIdentityServiceProviderS3tInput {
  EncodedData: String
}

type AwsCognitoIdentityServiceProviderS4 {
  Name: String
  AttributeDataType: String
  DeveloperOnlyAttribute: Boolean
  Mutable: Boolean
  Required: Boolean
  NumberAttributeConstraints: AwsCognitoIdentityServiceProviderS4NumberAttributeConstraints
  StringAttributeConstraints: AwsCognitoIdentityServiceProviderS4StringAttributeConstraints
}

type AwsCognitoIdentityServiceProviderS48 {
  UserPoolId: String
  ProviderName: String
  ProviderType: String
  ProviderDetails: JSON
  AttributeMapping: JSON
  IdpIdentifiers: [String]
  LastModifiedDate: Date
  CreationDate: Date
}

type AwsCognitoIdentityServiceProviderS4c {
  ScopeName: String!
  ScopeDescription: String!
}

input AwsCognitoIdentityServiceProviderS4cInput {
  ScopeName: String!
  ScopeDescription: String!
}

type AwsCognitoIdentityServiceProviderS4h {
  UserPoolId: String
  Identifier: String
  Name: String
  Scopes: [AwsCognitoIdentityServiceProviderS4c]
}

input AwsCognitoIdentityServiceProviderS4Input {
  Name: String
  AttributeDataType: String
  DeveloperOnlyAttribute: Boolean
  Mutable: Boolean
  Required: Boolean
  NumberAttributeConstraints: AwsCognitoIdentityServiceProviderS4NumberAttributeConstraintsInput
  StringAttributeConstraints: AwsCognitoIdentityServiceProviderS4StringAttributeConstraintsInput
}

type AwsCognitoIdentityServiceProviderS4l {
  JobName: String
  JobId: String
  UserPoolId: String
  PreSignedUrl: String
  CreationDate: Date
  StartDate: Date
  CompletionDate: Date
  Status: String
  CloudWatchLogsRoleArn: String
  ImportedUsers: JSON
  SkippedUsers: JSON
  FailedUsers: JSON
  CompletionMessage: String
}

type AwsCognitoIdentityServiceProviderS4NumberAttributeConstraints {
  MinValue: String
  MaxValue: String
}

input AwsCognitoIdentityServiceProviderS4NumberAttributeConstraintsInput {
  MinValue: String
  MaxValue: String
}

type AwsCognitoIdentityServiceProviderS4StringAttributeConstraints {
  MinLength: String
  MaxLength: String
}

input AwsCognitoIdentityServiceProviderS4StringAttributeConstraintsInput {
  MinLength: String
  MaxLength: String
}

type AwsCognitoIdentityServiceProviderS4t {
  PasswordPolicy: AwsCognitoIdentityServiceProviderS4tPasswordPolicy
}

input AwsCognitoIdentityServiceProviderS4tInput {
  PasswordPolicy: AwsCognitoIdentityServiceProviderS4tPasswordPolicyInput
}

type AwsCognitoIdentityServiceProviderS4tPasswordPolicy {
  MinimumLength: Int
  RequireUppercase: Boolean
  RequireLowercase: Boolean
  RequireNumbers: Boolean
  RequireSymbols: Boolean
  TemporaryPasswordValidityDays: Int
}

input AwsCognitoIdentityServiceProviderS4tPasswordPolicyInput {
  MinimumLength: Int
  RequireUppercase: Boolean
  RequireLowercase: Boolean
  RequireNumbers: Boolean
  RequireSymbols: Boolean
  TemporaryPasswordValidityDays: Int
}

type AwsCognitoIdentityServiceProviderS4x {
  PreSignUp: String
  CustomMessage: String
  PostConfirmation: String
  PreAuthentication: String
  PostAuthentication: String
  DefineAuthChallenge: String
  CreateAuthChallenge: String
  VerifyAuthChallengeResponse: String
  PreTokenGeneration: String
  UserMigration: String
}

input AwsCognitoIdentityServiceProviderS4xInput {
  PreSignUp: String
  CustomMessage: String
  PostConfirmation: String
  PreAuthentication: String
  PostAuthentication: String
  DefineAuthChallenge: String
  CreateAuthChallenge: String
  VerifyAuthChallengeResponse: String
  PreTokenGeneration: String
  UserMigration: String
}

type AwsCognitoIdentityServiceProviderS57 {
  SmsMessage: String
  EmailMessage: String
  EmailSubject: String
  EmailMessageByLink: String
  EmailSubjectByLink: String
  DefaultEmailOption: String
}

input AwsCognitoIdentityServiceProviderS57Input {
  SmsMessage: String
  EmailMessage: String
  EmailSubject: String
  EmailMessageByLink: String
  EmailSubjectByLink: String
  DefaultEmailOption: String
}

type AwsCognitoIdentityServiceProviderS5c {
  ChallengeRequiredOnNewDevice: Boolean
  DeviceOnlyRememberedOnUserPrompt: Boolean
}

input AwsCognitoIdentityServiceProviderS5cInput {
  ChallengeRequiredOnNewDevice: Boolean
  DeviceOnlyRememberedOnUserPrompt: Boolean
}

type AwsCognitoIdentityServiceProviderS5d {
  SourceArn: String
  ReplyToEmailAddress: String
  EmailSendingAccount: String
}

input AwsCognitoIdentityServiceProviderS5dInput {
  SourceArn: String
  ReplyToEmailAddress: String
  EmailSendingAccount: String
}

type AwsCognitoIdentityServiceProviderS5g {
  SnsCallerArn: String!
  ExternalId: String
}

input AwsCognitoIdentityServiceProviderS5gInput {
  SnsCallerArn: String!
  ExternalId: String
}

type AwsCognitoIdentityServiceProviderS5k {
  AllowAdminCreateUserOnly: Boolean
  UnusedAccountValidityDays: Int
  InviteMessageTemplate: AwsCognitoIdentityServiceProviderS5kInviteMessageTemplate
}

input AwsCognitoIdentityServiceProviderS5kInput {
  AllowAdminCreateUserOnly: Boolean
  UnusedAccountValidityDays: Int
  InviteMessageTemplate: AwsCognitoIdentityServiceProviderS5kInviteMessageTemplateInput
}

type AwsCognitoIdentityServiceProviderS5kInviteMessageTemplate {
  SMSMessage: String
  EmailMessage: String
  EmailSubject: String
}

input AwsCognitoIdentityServiceProviderS5kInviteMessageTemplateInput {
  SMSMessage: String
  EmailMessage: String
  EmailSubject: String
}

type AwsCognitoIdentityServiceProviderS5o {
  AdvancedSecurityMode: String!
}

input AwsCognitoIdentityServiceProviderS5oInput {
  AdvancedSecurityMode: String!
}

type AwsCognitoIdentityServiceProviderS5r {
  Id: String
  Name: String
  Policies: AwsCognitoIdentityServiceProviderS4t
  LambdaConfig: AwsCognitoIdentityServiceProviderS4x
  Status: String
  LastModifiedDate: Date
  CreationDate: Date
  SchemaAttributes: [AwsCognitoIdentityServiceProviderS4]
  AutoVerifiedAttributes: [String]
  AliasAttributes: [String]
  UsernameAttributes: [String]
  SmsVerificationMessage: String
  EmailVerificationMessage: String
  EmailVerificationSubject: String
  VerificationMessageTemplate: AwsCognitoIdentityServiceProviderS57
  SmsAuthenticationMessage: String
  MfaConfiguration: String
  DeviceConfiguration: AwsCognitoIdentityServiceProviderS5c
  EstimatedNumberOfUsers: Int
  EmailConfiguration: AwsCognitoIdentityServiceProviderS5d
  SmsConfiguration: AwsCognitoIdentityServiceProviderS5g
  UserPoolTags: JSON
  SmsConfigurationFailure: String
  EmailConfigurationFailure: String
  Domain: String
  CustomDomain: String
  AdminCreateUserConfig: AwsCognitoIdentityServiceProviderS5k
  UserPoolAddOns: AwsCognitoIdentityServiceProviderS5o
  Arn: String
}

type AwsCognitoIdentityServiceProviderS6a {
  ApplicationId: String!
  RoleArn: String!
  ExternalId: String!
  UserDataShared: Boolean
}

input AwsCognitoIdentityServiceProviderS6aInput {
  ApplicationId: String!
  RoleArn: String!
  ExternalId: String!
  UserDataShared: Boolean
}

type AwsCognitoIdentityServiceProviderS6d {
  UserPoolId: String
  ClientName: String
  ClientId: String
  ClientSecret: String
  LastModifiedDate: Date
  CreationDate: Date
  RefreshTokenValidity: Int
  ReadAttributes: [String]
  WriteAttributes: [String]
  ExplicitAuthFlows: [String]
  SupportedIdentityProviders: [String]
  CallbackURLs: [String]
  LogoutURLs: [String]
  DefaultRedirectURI: String
  AllowedOAuthFlows: [String]
  AllowedOAuthScopes: [String]
  AllowedOAuthFlowsUserPoolClient: Boolean
  AnalyticsConfiguration: AwsCognitoIdentityServiceProviderS6a
}

type AwsCognitoIdentityServiceProviderS6g {
  CertificateArn: String!
}

input AwsCognitoIdentityServiceProviderS6gInput {
  CertificateArn: String!
}

type AwsCognitoIdentityServiceProviderS6y {
  UserPoolId: String
  ClientId: String
  CompromisedCredentialsRiskConfiguration: AwsCognitoIdentityServiceProviderS6z
  AccountTakeoverRiskConfiguration: AwsCognitoIdentityServiceProviderS74
  RiskExceptionConfiguration: AwsCognitoIdentityServiceProviderS7d
  LastModifiedDate: Date
}

type AwsCognitoIdentityServiceProviderS6z {
  EventFilter: [String]
  Actions: AwsCognitoIdentityServiceProviderS6zActions!
}

type AwsCognitoIdentityServiceProviderS6zActions {
  EventAction: String!
}

input AwsCognitoIdentityServiceProviderS6zActionsInput {
  EventAction: String!
}

input AwsCognitoIdentityServiceProviderS6zInput {
  EventFilter: [String]
  Actions: AwsCognitoIdentityServiceProviderS6zActionsInput!
}

type AwsCognitoIdentityServiceProviderS74 {
  NotifyConfiguration: AwsCognitoIdentityServiceProviderS74NotifyConfiguration
  Actions: AwsCognitoIdentityServiceProviderS74Actions!
}

type AwsCognitoIdentityServiceProviderS74Actions {
  LowAction: AwsCognitoIdentityServiceProviderS7a
  MediumAction: AwsCognitoIdentityServiceProviderS7a
  HighAction: AwsCognitoIdentityServiceProviderS7a
}

input AwsCognitoIdentityServiceProviderS74ActionsInput {
  LowAction: AwsCognitoIdentityServiceProviderS7aInput
  MediumAction: AwsCognitoIdentityServiceProviderS7aInput
  HighAction: AwsCognitoIdentityServiceProviderS7aInput
}

input AwsCognitoIdentityServiceProviderS74Input {
  NotifyConfiguration: AwsCognitoIdentityServiceProviderS74NotifyConfigurationInput
  Actions: AwsCognitoIdentityServiceProviderS74ActionsInput!
}

type AwsCognitoIdentityServiceProviderS74NotifyConfiguration {
  From: String
  ReplyTo: String
  SourceArn: String!
  BlockEmail: AwsCognitoIdentityServiceProviderS76
  NoActionEmail: AwsCognitoIdentityServiceProviderS76
  MfaEmail: AwsCognitoIdentityServiceProviderS76
}

input AwsCognitoIdentityServiceProviderS74NotifyConfigurationInput {
  From: String
  ReplyTo: String
  SourceArn: String!
  BlockEmail: AwsCognitoIdentityServiceProviderS76Input
  NoActionEmail: AwsCognitoIdentityServiceProviderS76Input
  MfaEmail: AwsCognitoIdentityServiceProviderS76Input
}

type AwsCognitoIdentityServiceProviderS76 {
  Subject: String!
  HtmlBody: String
  TextBody: String
}

input AwsCognitoIdentityServiceProviderS76Input {
  Subject: String!
  HtmlBody: String
  TextBody: String
}

type AwsCognitoIdentityServiceProviderS7a {
  Notify: Boolean!
  EventAction: String!
}

input AwsCognitoIdentityServiceProviderS7aInput {
  Notify: Boolean!
  EventAction: String!
}

type AwsCognitoIdentityServiceProviderS7d {
  BlockedIPRangeList: [String]
  SkippedIPRangeList: [String]
}

input AwsCognitoIdentityServiceProviderS7dInput {
  BlockedIPRangeList: [String]
  SkippedIPRangeList: [String]
}

type AwsCognitoIdentityServiceProviderS7w {
  Destination: String
  DeliveryMedium: String
  AttributeName: String
}

type AwsCognitoIdentityServiceProviderS8a {
  UserPoolId: String
  ClientId: String
  ImageUrl: String
  CSS: String
  CSSVersion: String
  LastModifiedDate: Date
  CreationDate: Date
}

type AwsCognitoIdentityServiceProviderS8k {
  SmsAuthenticationMessage: String
  SmsConfiguration: AwsCognitoIdentityServiceProviderS5g
}

input AwsCognitoIdentityServiceProviderS8kInput {
  SmsAuthenticationMessage: String
  SmsConfiguration: AwsCognitoIdentityServiceProviderS5gInput
}

type AwsCognitoIdentityServiceProviderS8l {
  Enabled: Boolean
}

input AwsCognitoIdentityServiceProviderS8lInput {
  Enabled: Boolean
}

input AwsCognitoIdentityServiceProviderSetRiskConfigurationInput {
  UserPoolId: String!
  ClientId: String
  CompromisedCredentialsRiskConfiguration: AwsCognitoIdentityServiceProviderS6zInput
  AccountTakeoverRiskConfiguration: AwsCognitoIdentityServiceProviderS74Input
  RiskExceptionConfiguration: AwsCognitoIdentityServiceProviderS7dInput
}

type AwsCognitoIdentityServiceProviderSetRiskConfigurationOutput {
  RiskConfiguration: AwsCognitoIdentityServiceProviderS6y!
}

input AwsCognitoIdentityServiceProviderSetUICustomizationInput {
  UserPoolId: String!
  ClientId: String
  CSS: String
  ImageFile: JSON
}

type AwsCognitoIdentityServiceProviderSetUICustomizationOutput {
  UICustomization: AwsCognitoIdentityServiceProviderS8a!
}

input AwsCognitoIdentityServiceProviderSetUserMFAPreferenceInput {
  SMSMfaSettings: AwsCognitoIdentityServiceProviderS30Input
  SoftwareTokenMfaSettings: AwsCognitoIdentityServiceProviderS31Input
  AccessToken: String!
}

input AwsCognitoIdentityServiceProviderSetUserPoolMfaConfigInput {
  UserPoolId: String!
  SmsMfaConfiguration: AwsCognitoIdentityServiceProviderS8kInput
  SoftwareTokenMfaConfiguration: AwsCognitoIdentityServiceProviderS8lInput
  MfaConfiguration: String
}

type AwsCognitoIdentityServiceProviderSetUserPoolMfaConfigOutput {
  SmsMfaConfiguration: AwsCognitoIdentityServiceProviderS8k
  SoftwareTokenMfaConfiguration: AwsCognitoIdentityServiceProviderS8l
  MfaConfiguration: String
}

input AwsCognitoIdentityServiceProviderSetUserSettingsInput {
  AccessToken: String!
  MFAOptions: [AwsCognitoIdentityServiceProviderSvInput]!
}

type AwsCognitoIdentityServiceProviderSi {
  Name: String!
  Value: String
}

input AwsCognitoIdentityServiceProviderSignUpInput {
  ClientId: String!
  SecretHash: String
  Username: String!
  Password: String!
  UserAttributes: [AwsCognitoIdentityServiceProviderSiInput]
  ValidationData: [AwsCognitoIdentityServiceProviderSiInput]
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  UserContextData: AwsCognitoIdentityServiceProviderS3tInput
}

type AwsCognitoIdentityServiceProviderSignUpOutput {
  UserConfirmed: Boolean!
  CodeDeliveryDetails: AwsCognitoIdentityServiceProviderS7w
  UserSub: String!
}

input AwsCognitoIdentityServiceProviderSiInput {
  Name: String!
  Value: String
}

type AwsCognitoIdentityServiceProviderSs {
  Username: String
  Attributes: [AwsCognitoIdentityServiceProviderSi]
  UserCreateDate: Date
  UserLastModifiedDate: Date
  Enabled: Boolean
  UserStatus: String
  MFAOptions: [AwsCognitoIdentityServiceProviderSv]
}

input AwsCognitoIdentityServiceProviderStartUserImportJobInput {
  UserPoolId: String!
  JobId: String!
}

type AwsCognitoIdentityServiceProviderStartUserImportJobOutput {
  UserImportJob: AwsCognitoIdentityServiceProviderS4l
}

input AwsCognitoIdentityServiceProviderStopUserImportJobInput {
  UserPoolId: String!
  JobId: String!
}

type AwsCognitoIdentityServiceProviderStopUserImportJobOutput {
  UserImportJob: AwsCognitoIdentityServiceProviderS4l
}

type AwsCognitoIdentityServiceProviderSv {
  DeliveryMedium: String
  AttributeName: String
}

input AwsCognitoIdentityServiceProviderSvInput {
  DeliveryMedium: String
  AttributeName: String
}

input AwsCognitoIdentityServiceProviderTagResourceInput {
  ResourceArn: String!
  Tags: JSON
}

input AwsCognitoIdentityServiceProviderUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]
}

input AwsCognitoIdentityServiceProviderUpdateAuthEventFeedbackInput {
  UserPoolId: String!
  Username: String!
  EventId: String!
  FeedbackToken: String!
  FeedbackValue: String!
}

input AwsCognitoIdentityServiceProviderUpdateDeviceStatusInput {
  AccessToken: String!
  DeviceKey: String!
  DeviceRememberedStatus: String
}

input AwsCognitoIdentityServiceProviderUpdateGroupInput {
  GroupName: String!
  UserPoolId: String!
  Description: String
  RoleArn: String
  Precedence: Int
}

type AwsCognitoIdentityServiceProviderUpdateGroupOutput {
  Group: AwsCognitoIdentityServiceProviderS29
}

input AwsCognitoIdentityServiceProviderUpdateIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
  ProviderDetails: JSON
  AttributeMapping: JSON
  IdpIdentifiers: [String]
}

type AwsCognitoIdentityServiceProviderUpdateIdentityProviderOutput {
  IdentityProvider: AwsCognitoIdentityServiceProviderS48!
}

input AwsCognitoIdentityServiceProviderUpdateResourceServerInput {
  UserPoolId: String!
  Identifier: String!
  Name: String!
  Scopes: [AwsCognitoIdentityServiceProviderS4cInput]
}

type AwsCognitoIdentityServiceProviderUpdateResourceServerOutput {
  ResourceServer: AwsCognitoIdentityServiceProviderS4h!
}

input AwsCognitoIdentityServiceProviderUpdateUserAttributesInput {
  UserAttributes: [AwsCognitoIdentityServiceProviderSiInput]!
  AccessToken: String!
}

type AwsCognitoIdentityServiceProviderUpdateUserAttributesOutput {
  CodeDeliveryDetailsList: [AwsCognitoIdentityServiceProviderS7w]
}

input AwsCognitoIdentityServiceProviderUpdateUserPoolClientInput {
  UserPoolId: String!
  ClientId: String!
  ClientName: String
  RefreshTokenValidity: Int
  ReadAttributes: [String]
  WriteAttributes: [String]
  ExplicitAuthFlows: [String]
  SupportedIdentityProviders: [String]
  CallbackURLs: [String]
  LogoutURLs: [String]
  DefaultRedirectURI: String
  AllowedOAuthFlows: [String]
  AllowedOAuthScopes: [String]
  AllowedOAuthFlowsUserPoolClient: Boolean
  AnalyticsConfiguration: AwsCognitoIdentityServiceProviderS6aInput
}

type AwsCognitoIdentityServiceProviderUpdateUserPoolClientOutput {
  UserPoolClient: AwsCognitoIdentityServiceProviderS6d
}

input AwsCognitoIdentityServiceProviderUpdateUserPoolDomainInput {
  Domain: String!
  UserPoolId: String!
  CustomDomainConfig: AwsCognitoIdentityServiceProviderS6gInput!
}

type AwsCognitoIdentityServiceProviderUpdateUserPoolDomainOutput {
  CloudFrontDomain: String
}

input AwsCognitoIdentityServiceProviderUpdateUserPoolInput {
  UserPoolId: String!
  Policies: AwsCognitoIdentityServiceProviderS4tInput
  LambdaConfig: AwsCognitoIdentityServiceProviderS4xInput
  AutoVerifiedAttributes: [String]
  SmsVerificationMessage: String
  EmailVerificationMessage: String
  EmailVerificationSubject: String
  VerificationMessageTemplate: AwsCognitoIdentityServiceProviderS57Input
  SmsAuthenticationMessage: String
  MfaConfiguration: String
  DeviceConfiguration: AwsCognitoIdentityServiceProviderS5cInput
  EmailConfiguration: AwsCognitoIdentityServiceProviderS5dInput
  SmsConfiguration: AwsCognitoIdentityServiceProviderS5gInput
  UserPoolTags: JSON
  AdminCreateUserConfig: AwsCognitoIdentityServiceProviderS5kInput
  UserPoolAddOns: AwsCognitoIdentityServiceProviderS5oInput
}

input AwsCognitoIdentityServiceProviderVerifySoftwareTokenInput {
  AccessToken: String
  Session: String
  UserCode: String!
  FriendlyDeviceName: String
}

type AwsCognitoIdentityServiceProviderVerifySoftwareTokenOutput {
  Status: String
  Session: String
}

input AwsCognitoIdentityServiceProviderVerifyUserAttributeInput {
  AccessToken: String!
  AttributeName: String!
  Code: String!
}

input AwsCognitoIdentitySetIdentityPoolRolesInput {
  IdentityPoolId: String!
  Roles: JSON!
  RoleMappings: JSON
}

type AwsCognitoIdentitySu {
  IdentityId: String
  Logins: [String]
  CreationDate: Date
  LastModifiedDate: Date
}

input AwsCognitoIdentityTagResourceInput {
  ResourceArn: String!
  Tags: JSON
}

input AwsCognitoIdentityUnlinkDeveloperIdentityInput {
  IdentityId: String!
  IdentityPoolId: String!
  DeveloperProviderName: String!
  DeveloperUserIdentifier: String!
}

input AwsCognitoIdentityUnlinkIdentityInput {
  IdentityId: String!
  Logins: JSON!
  LoginsToRemove: [String]!
}

input AwsCognitoIdentityUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]
}

"""Amazon Cognito Sync (2014-06-30)"""
type AwsCognitoSync {
  bulkPublish(input: AwsCognitoSyncBulkPublishInput!, config: AwsConfig): AwsCognitoSyncBulkPublishOutput
  deleteDataset(input: AwsCognitoSyncDeleteDatasetInput!, config: AwsConfig): AwsCognitoSyncDeleteDatasetOutput
  describeDataset(input: AwsCognitoSyncDescribeDatasetInput!, config: AwsConfig): AwsCognitoSyncDescribeDatasetOutput
  describeIdentityPoolUsage(input: AwsCognitoSyncDescribeIdentityPoolUsageInput!, config: AwsConfig): AwsCognitoSyncDescribeIdentityPoolUsageOutput
  describeIdentityUsage(input: AwsCognitoSyncDescribeIdentityUsageInput!, config: AwsConfig): AwsCognitoSyncDescribeIdentityUsageOutput
  getBulkPublishDetails(input: AwsCognitoSyncGetBulkPublishDetailsInput!, config: AwsConfig): AwsCognitoSyncGetBulkPublishDetailsOutput
  getCognitoEvents(input: AwsCognitoSyncGetCognitoEventsInput!, config: AwsConfig): AwsCognitoSyncGetCognitoEventsOutput
  getIdentityPoolConfiguration(input: AwsCognitoSyncGetIdentityPoolConfigurationInput!, config: AwsConfig): AwsCognitoSyncGetIdentityPoolConfigurationOutput
  listDatasets(input: AwsCognitoSyncListDatasetsInput!, config: AwsConfig): AwsCognitoSyncListDatasetsOutput
  listIdentityPoolUsage(input: AwsCognitoSyncListIdentityPoolUsageInput, config: AwsConfig): AwsCognitoSyncListIdentityPoolUsageOutput
  listRecords(input: AwsCognitoSyncListRecordsInput!, config: AwsConfig): AwsCognitoSyncListRecordsOutput
  registerDevice(input: AwsCognitoSyncRegisterDeviceInput!, config: AwsConfig): AwsCognitoSyncRegisterDeviceOutput
  setCognitoEvents(input: AwsCognitoSyncSetCognitoEventsInput!, config: AwsConfig): JSON
  setIdentityPoolConfiguration(input: AwsCognitoSyncSetIdentityPoolConfigurationInput!, config: AwsConfig): AwsCognitoSyncSetIdentityPoolConfigurationOutput
  subscribeToDataset(input: AwsCognitoSyncSubscribeToDatasetInput!, config: AwsConfig): JSON
  unsubscribeFromDataset(input: AwsCognitoSyncUnsubscribeFromDatasetInput!, config: AwsConfig): JSON
  updateRecords(input: AwsCognitoSyncUpdateRecordsInput!, config: AwsConfig): AwsCognitoSyncUpdateRecordsOutput
}

input AwsCognitoSyncBulkPublishInput {
  IdentityPoolId: String!
}

type AwsCognitoSyncBulkPublishOutput {
  IdentityPoolId: String
}

input AwsCognitoSyncDeleteDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
}

type AwsCognitoSyncDeleteDatasetOutput {
  Dataset: AwsCognitoSyncS8
}

input AwsCognitoSyncDescribeDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
}

type AwsCognitoSyncDescribeDatasetOutput {
  Dataset: AwsCognitoSyncS8
}

input AwsCognitoSyncDescribeIdentityPoolUsageInput {
  IdentityPoolId: String!
}

type AwsCognitoSyncDescribeIdentityPoolUsageOutput {
  IdentityPoolUsage: AwsCognitoSyncSg
}

input AwsCognitoSyncDescribeIdentityUsageInput {
  IdentityPoolId: String!
  IdentityId: String!
}

type AwsCognitoSyncDescribeIdentityUsageOutput {
  IdentityUsage: AwsCognitoSyncDescribeIdentityUsageOutputIdentityUsage
}

type AwsCognitoSyncDescribeIdentityUsageOutputIdentityUsage {
  IdentityId: String
  IdentityPoolId: String
  LastModifiedDate: Date
  DatasetCount: Int
  DataStorage: JSON
}

input AwsCognitoSyncGetBulkPublishDetailsInput {
  IdentityPoolId: String!
}

type AwsCognitoSyncGetBulkPublishDetailsOutput {
  IdentityPoolId: String
  BulkPublishStartTime: Date
  BulkPublishCompleteTime: Date
  BulkPublishStatus: String
  FailureMessage: String
}

input AwsCognitoSyncGetCognitoEventsInput {
  IdentityPoolId: String!
}

type AwsCognitoSyncGetCognitoEventsOutput {
  Events: JSON
}

input AwsCognitoSyncGetIdentityPoolConfigurationInput {
  IdentityPoolId: String!
}

type AwsCognitoSyncGetIdentityPoolConfigurationOutput {
  IdentityPoolId: String
  PushSync: AwsCognitoSyncSv
  CognitoStreams: AwsCognitoSyncSz
}

input AwsCognitoSyncListDatasetsInput {
  IdentityPoolId: String!
  IdentityId: String!
  NextToken: String
  MaxResults: Int
}

type AwsCognitoSyncListDatasetsOutput {
  Datasets: [AwsCognitoSyncS8]
  Count: Int
  NextToken: String
}

input AwsCognitoSyncListIdentityPoolUsageInput {
  NextToken: String
  MaxResults: Int
}

type AwsCognitoSyncListIdentityPoolUsageOutput {
  IdentityPoolUsages: [AwsCognitoSyncSg]
  MaxResults: Int
  Count: Int
  NextToken: String
}

input AwsCognitoSyncListRecordsInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  LastSyncCount: JSON
  NextToken: String
  MaxResults: Int
  SyncSessionToken: String
}

type AwsCognitoSyncListRecordsOutput {
  Records: [AwsCognitoSyncS1c]
  NextToken: String
  Count: Int
  DatasetSyncCount: JSON
  LastModifiedBy: String
  MergedDatasetNames: [String]
  DatasetExists: Boolean
  DatasetDeletedAfterRequestedSyncCount: Boolean
  SyncSessionToken: String
}

input AwsCognitoSyncRegisterDeviceInput {
  IdentityPoolId: String!
  IdentityId: String!
  Platform: String!
  Token: String!
}

type AwsCognitoSyncRegisterDeviceOutput {
  DeviceId: String
}

type AwsCognitoSyncS1c {
  Key: String
  Value: String
  SyncCount: JSON
  LastModifiedDate: Date
  LastModifiedBy: String
  DeviceLastModifiedDate: Date
}

type AwsCognitoSyncS8 {
  IdentityId: String
  DatasetName: String
  CreationDate: Date
  LastModifiedDate: Date
  LastModifiedBy: String
  DataStorage: JSON
  NumRecords: JSON
}

input AwsCognitoSyncSetCognitoEventsInput {
  IdentityPoolId: String!
  Events: JSON!
}

input AwsCognitoSyncSetIdentityPoolConfigurationInput {
  IdentityPoolId: String!
  PushSync: AwsCognitoSyncSvInput
  CognitoStreams: AwsCognitoSyncSzInput
}

type AwsCognitoSyncSetIdentityPoolConfigurationOutput {
  IdentityPoolId: String
  PushSync: AwsCognitoSyncSv
  CognitoStreams: AwsCognitoSyncSz
}

type AwsCognitoSyncSg {
  IdentityPoolId: String
  SyncSessionsCount: JSON
  DataStorage: JSON
  LastModifiedDate: Date
}

input AwsCognitoSyncSubscribeToDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  DeviceId: String!
}

type AwsCognitoSyncSv {
  ApplicationArns: [String]
  RoleArn: String
}

input AwsCognitoSyncSvInput {
  ApplicationArns: [String]
  RoleArn: String
}

type AwsCognitoSyncSz {
  StreamName: String
  RoleArn: String
  StreamingStatus: String
}

input AwsCognitoSyncSzInput {
  StreamName: String
  RoleArn: String
  StreamingStatus: String
}

input AwsCognitoSyncUnsubscribeFromDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  DeviceId: String!
}

input AwsCognitoSyncUpdateRecordsInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  DeviceId: String
  RecordPatches: [AwsCognitoSyncUpdateRecordsRecordPatchesInput]
  SyncSessionToken: String!
  ClientContext: String
}

type AwsCognitoSyncUpdateRecordsOutput {
  Records: [AwsCognitoSyncS1c]
}

input AwsCognitoSyncUpdateRecordsRecordPatchesInput {
  Op: String!
  Key: String!
  Value: String
  SyncCount: JSON!
  DeviceLastModifiedDate: Date
}

"""Amazon Comprehend (2017-11-27)"""
type AwsComprehend {
  batchDetectDominantLanguage(input: AwsComprehendBatchDetectDominantLanguageInput!, config: AwsConfig): AwsComprehendBatchDetectDominantLanguageOutput
  batchDetectEntities(input: AwsComprehendBatchDetectEntitiesInput!, config: AwsConfig): AwsComprehendBatchDetectEntitiesOutput
  batchDetectKeyPhrases(input: AwsComprehendBatchDetectKeyPhrasesInput!, config: AwsConfig): AwsComprehendBatchDetectKeyPhrasesOutput
  batchDetectSentiment(input: AwsComprehendBatchDetectSentimentInput!, config: AwsConfig): AwsComprehendBatchDetectSentimentOutput
  batchDetectSyntax(input: AwsComprehendBatchDetectSyntaxInput!, config: AwsConfig): AwsComprehendBatchDetectSyntaxOutput
  createDocumentClassifier(input: AwsComprehendCreateDocumentClassifierInput!, config: AwsConfig): AwsComprehendCreateDocumentClassifierOutput
  createEntityRecognizer(input: AwsComprehendCreateEntityRecognizerInput!, config: AwsConfig): AwsComprehendCreateEntityRecognizerOutput
  deleteDocumentClassifier(input: AwsComprehendDeleteDocumentClassifierInput!, config: AwsConfig): JSON
  deleteEntityRecognizer(input: AwsComprehendDeleteEntityRecognizerInput!, config: AwsConfig): JSON
  describeDocumentClassificationJob(input: AwsComprehendDescribeDocumentClassificationJobInput!, config: AwsConfig): AwsComprehendDescribeDocumentClassificationJobOutput
  describeDocumentClassifier(input: AwsComprehendDescribeDocumentClassifierInput!, config: AwsConfig): AwsComprehendDescribeDocumentClassifierOutput
  describeDominantLanguageDetectionJob(input: AwsComprehendDescribeDominantLanguageDetectionJobInput!, config: AwsConfig): AwsComprehendDescribeDominantLanguageDetectionJobOutput
  describeEntitiesDetectionJob(input: AwsComprehendDescribeEntitiesDetectionJobInput!, config: AwsConfig): AwsComprehendDescribeEntitiesDetectionJobOutput
  describeEntityRecognizer(input: AwsComprehendDescribeEntityRecognizerInput!, config: AwsConfig): AwsComprehendDescribeEntityRecognizerOutput
  describeKeyPhrasesDetectionJob(input: AwsComprehendDescribeKeyPhrasesDetectionJobInput!, config: AwsConfig): AwsComprehendDescribeKeyPhrasesDetectionJobOutput
  describeSentimentDetectionJob(input: AwsComprehendDescribeSentimentDetectionJobInput!, config: AwsConfig): AwsComprehendDescribeSentimentDetectionJobOutput
  describeTopicsDetectionJob(input: AwsComprehendDescribeTopicsDetectionJobInput!, config: AwsConfig): AwsComprehendDescribeTopicsDetectionJobOutput
  detectDominantLanguage(input: AwsComprehendDetectDominantLanguageInput!, config: AwsConfig): AwsComprehendDetectDominantLanguageOutput
  detectEntities(input: AwsComprehendDetectEntitiesInput!, config: AwsConfig): AwsComprehendDetectEntitiesOutput
  detectKeyPhrases(input: AwsComprehendDetectKeyPhrasesInput!, config: AwsConfig): AwsComprehendDetectKeyPhrasesOutput
  detectSentiment(input: AwsComprehendDetectSentimentInput!, config: AwsConfig): AwsComprehendDetectSentimentOutput
  detectSyntax(input: AwsComprehendDetectSyntaxInput!, config: AwsConfig): AwsComprehendDetectSyntaxOutput
  listDocumentClassificationJobs(input: AwsComprehendListDocumentClassificationJobsInput, config: AwsConfig): AwsComprehendListDocumentClassificationJobsOutput
  listDocumentClassifiers(input: AwsComprehendListDocumentClassifiersInput, config: AwsConfig): AwsComprehendListDocumentClassifiersOutput
  listDominantLanguageDetectionJobs(input: AwsComprehendListDominantLanguageDetectionJobsInput, config: AwsConfig): AwsComprehendListDominantLanguageDetectionJobsOutput
  listEntitiesDetectionJobs(input: AwsComprehendListEntitiesDetectionJobsInput, config: AwsConfig): AwsComprehendListEntitiesDetectionJobsOutput
  listEntityRecognizers(input: AwsComprehendListEntityRecognizersInput, config: AwsConfig): AwsComprehendListEntityRecognizersOutput
  listKeyPhrasesDetectionJobs(input: AwsComprehendListKeyPhrasesDetectionJobsInput, config: AwsConfig): AwsComprehendListKeyPhrasesDetectionJobsOutput
  listSentimentDetectionJobs(input: AwsComprehendListSentimentDetectionJobsInput, config: AwsConfig): AwsComprehendListSentimentDetectionJobsOutput
  listTagsForResource(input: AwsComprehendListTagsForResourceInput!, config: AwsConfig): AwsComprehendListTagsForResourceOutput
  listTopicsDetectionJobs(input: AwsComprehendListTopicsDetectionJobsInput, config: AwsConfig): AwsComprehendListTopicsDetectionJobsOutput
  startDocumentClassificationJob(input: AwsComprehendStartDocumentClassificationJobInput!, config: AwsConfig): AwsComprehendStartDocumentClassificationJobOutput
  startDominantLanguageDetectionJob(input: AwsComprehendStartDominantLanguageDetectionJobInput!, config: AwsConfig): AwsComprehendStartDominantLanguageDetectionJobOutput
  startEntitiesDetectionJob(input: AwsComprehendStartEntitiesDetectionJobInput!, config: AwsConfig): AwsComprehendStartEntitiesDetectionJobOutput
  startKeyPhrasesDetectionJob(input: AwsComprehendStartKeyPhrasesDetectionJobInput!, config: AwsConfig): AwsComprehendStartKeyPhrasesDetectionJobOutput
  startSentimentDetectionJob(input: AwsComprehendStartSentimentDetectionJobInput!, config: AwsConfig): AwsComprehendStartSentimentDetectionJobOutput
  startTopicsDetectionJob(input: AwsComprehendStartTopicsDetectionJobInput!, config: AwsConfig): AwsComprehendStartTopicsDetectionJobOutput
  stopDominantLanguageDetectionJob(input: AwsComprehendStopDominantLanguageDetectionJobInput!, config: AwsConfig): AwsComprehendStopDominantLanguageDetectionJobOutput
  stopEntitiesDetectionJob(input: AwsComprehendStopEntitiesDetectionJobInput!, config: AwsConfig): AwsComprehendStopEntitiesDetectionJobOutput
  stopKeyPhrasesDetectionJob(input: AwsComprehendStopKeyPhrasesDetectionJobInput!, config: AwsConfig): AwsComprehendStopKeyPhrasesDetectionJobOutput
  stopSentimentDetectionJob(input: AwsComprehendStopSentimentDetectionJobInput!, config: AwsConfig): AwsComprehendStopSentimentDetectionJobOutput
  stopTrainingDocumentClassifier(input: AwsComprehendStopTrainingDocumentClassifierInput!, config: AwsConfig): JSON
  stopTrainingEntityRecognizer(input: AwsComprehendStopTrainingEntityRecognizerInput!, config: AwsConfig): JSON
  tagResource(input: AwsComprehendTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsComprehendUntagResourceInput!, config: AwsConfig): JSON
}

input AwsComprehendBatchDetectDominantLanguageInput {
  TextList: [String]!
}

type AwsComprehendBatchDetectDominantLanguageOutput {
  ResultList: [AwsComprehendBatchDetectDominantLanguageOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectDominantLanguageOutputResultList {
  Index: Int
  Languages: [AwsComprehendS8]
}

input AwsComprehendBatchDetectEntitiesInput {
  TextList: [String]!
  LanguageCode: String!
}

type AwsComprehendBatchDetectEntitiesOutput {
  ResultList: [AwsComprehendBatchDetectEntitiesOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectEntitiesOutputResultList {
  Index: Int
  Entities: [AwsComprehendSi]
}

input AwsComprehendBatchDetectKeyPhrasesInput {
  TextList: [String]!
  LanguageCode: String!
}

type AwsComprehendBatchDetectKeyPhrasesOutput {
  ResultList: [AwsComprehendBatchDetectKeyPhrasesOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectKeyPhrasesOutputResultList {
  Index: Int
  KeyPhrases: [AwsComprehendSp]
}

input AwsComprehendBatchDetectSentimentInput {
  TextList: [String]!
  LanguageCode: String!
}

type AwsComprehendBatchDetectSentimentOutput {
  ResultList: [AwsComprehendBatchDetectSentimentOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectSentimentOutputResultList {
  Index: Int
  Sentiment: String
  SentimentScore: AwsComprehendSw
}

input AwsComprehendBatchDetectSyntaxInput {
  TextList: [String]!
  LanguageCode: String!
}

type AwsComprehendBatchDetectSyntaxOutput {
  ResultList: [AwsComprehendBatchDetectSyntaxOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectSyntaxOutputResultList {
  Index: Int
  SyntaxTokens: [AwsComprehendS12]
}

input AwsComprehendCreateDocumentClassifierInput {
  DocumentClassifierName: String!
  DataAccessRoleArn: String!
  Tags: [AwsComprehendS19Input]
  InputDataConfig: AwsComprehendS1dInput!
  OutputDataConfig: AwsComprehendS1fInput
  ClientRequestToken: String
  LanguageCode: String!
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1iInput
}

type AwsComprehendCreateDocumentClassifierOutput {
  DocumentClassifierArn: String
}

input AwsComprehendCreateEntityRecognizerInput {
  RecognizerName: String!
  DataAccessRoleArn: String!
  Tags: [AwsComprehendS19Input]
  InputDataConfig: AwsComprehendS1qInput!
  ClientRequestToken: String
  LanguageCode: String!
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1iInput
}

type AwsComprehendCreateEntityRecognizerOutput {
  EntityRecognizerArn: String
}

input AwsComprehendDeleteDocumentClassifierInput {
  DocumentClassifierArn: String!
}

input AwsComprehendDeleteEntityRecognizerInput {
  EntityRecognizerArn: String!
}

input AwsComprehendDescribeDocumentClassificationJobInput {
  JobId: String!
}

type AwsComprehendDescribeDocumentClassificationJobOutput {
  DocumentClassificationJobProperties: AwsComprehendS26
}

input AwsComprehendDescribeDocumentClassifierInput {
  DocumentClassifierArn: String!
}

type AwsComprehendDescribeDocumentClassifierOutput {
  DocumentClassifierProperties: AwsComprehendS2g
}

input AwsComprehendDescribeDominantLanguageDetectionJobInput {
  JobId: String!
}

type AwsComprehendDescribeDominantLanguageDetectionJobOutput {
  DominantLanguageDetectionJobProperties: AwsComprehendS2n
}

input AwsComprehendDescribeEntitiesDetectionJobInput {
  JobId: String!
}

type AwsComprehendDescribeEntitiesDetectionJobOutput {
  EntitiesDetectionJobProperties: AwsComprehendS2q
}

input AwsComprehendDescribeEntityRecognizerInput {
  EntityRecognizerArn: String!
}

type AwsComprehendDescribeEntityRecognizerOutput {
  EntityRecognizerProperties: AwsComprehendS2t
}

input AwsComprehendDescribeKeyPhrasesDetectionJobInput {
  JobId: String!
}

type AwsComprehendDescribeKeyPhrasesDetectionJobOutput {
  KeyPhrasesDetectionJobProperties: AwsComprehendS30
}

input AwsComprehendDescribeSentimentDetectionJobInput {
  JobId: String!
}

type AwsComprehendDescribeSentimentDetectionJobOutput {
  SentimentDetectionJobProperties: AwsComprehendS33
}

input AwsComprehendDescribeTopicsDetectionJobInput {
  JobId: String!
}

type AwsComprehendDescribeTopicsDetectionJobOutput {
  TopicsDetectionJobProperties: AwsComprehendS36
}

input AwsComprehendDetectDominantLanguageInput {
  Text: String!
}

type AwsComprehendDetectDominantLanguageOutput {
  Languages: [AwsComprehendS8]
}

input AwsComprehendDetectEntitiesInput {
  Text: String!
  LanguageCode: String!
}

type AwsComprehendDetectEntitiesOutput {
  Entities: [AwsComprehendSi]
}

input AwsComprehendDetectKeyPhrasesInput {
  Text: String!
  LanguageCode: String!
}

type AwsComprehendDetectKeyPhrasesOutput {
  KeyPhrases: [AwsComprehendSp]
}

input AwsComprehendDetectSentimentInput {
  Text: String!
  LanguageCode: String!
}

type AwsComprehendDetectSentimentOutput {
  Sentiment: String
  SentimentScore: AwsComprehendSw
}

input AwsComprehendDetectSyntaxInput {
  Text: String!
  LanguageCode: String!
}

type AwsComprehendDetectSyntaxOutput {
  SyntaxTokens: [AwsComprehendS12]
}

input AwsComprehendListDocumentClassificationJobsFilterInput {
  JobName: String
  JobStatus: String
  SubmitTimeBefore: Date
  SubmitTimeAfter: Date
}

input AwsComprehendListDocumentClassificationJobsInput {
  Filter: AwsComprehendListDocumentClassificationJobsFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsComprehendListDocumentClassificationJobsOutput {
  DocumentClassificationJobPropertiesList: [AwsComprehendS26]
  NextToken: String
}

input AwsComprehendListDocumentClassifiersFilterInput {
  Status: String
  SubmitTimeBefore: Date
  SubmitTimeAfter: Date
}

input AwsComprehendListDocumentClassifiersInput {
  Filter: AwsComprehendListDocumentClassifiersFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsComprehendListDocumentClassifiersOutput {
  DocumentClassifierPropertiesList: [AwsComprehendS2g]
  NextToken: String
}

input AwsComprehendListDominantLanguageDetectionJobsFilterInput {
  JobName: String
  JobStatus: String
  SubmitTimeBefore: Date
  SubmitTimeAfter: Date
}

input AwsComprehendListDominantLanguageDetectionJobsInput {
  Filter: AwsComprehendListDominantLanguageDetectionJobsFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsComprehendListDominantLanguageDetectionJobsOutput {
  DominantLanguageDetectionJobPropertiesList: [AwsComprehendS2n]
  NextToken: String
}

input AwsComprehendListEntitiesDetectionJobsFilterInput {
  JobName: String
  JobStatus: String
  SubmitTimeBefore: Date
  SubmitTimeAfter: Date
}

input AwsComprehendListEntitiesDetectionJobsInput {
  Filter: AwsComprehendListEntitiesDetectionJobsFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsComprehendListEntitiesDetectionJobsOutput {
  EntitiesDetectionJobPropertiesList: [AwsComprehendS2q]
  NextToken: String
}

input AwsComprehendListEntityRecognizersFilterInput {
  Status: String
  SubmitTimeBefore: Date
  SubmitTimeAfter: Date
}

input AwsComprehendListEntityRecognizersInput {
  Filter: AwsComprehendListEntityRecognizersFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsComprehendListEntityRecognizersOutput {
  EntityRecognizerPropertiesList: [AwsComprehendS2t]
  NextToken: String
}

input AwsComprehendListKeyPhrasesDetectionJobsFilterInput {
  JobName: String
  JobStatus: String
  SubmitTimeBefore: Date
  SubmitTimeAfter: Date
}

input AwsComprehendListKeyPhrasesDetectionJobsInput {
  Filter: AwsComprehendListKeyPhrasesDetectionJobsFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsComprehendListKeyPhrasesDetectionJobsOutput {
  KeyPhrasesDetectionJobPropertiesList: [AwsComprehendS30]
  NextToken: String
}

input AwsComprehendListSentimentDetectionJobsFilterInput {
  JobName: String
  JobStatus: String
  SubmitTimeBefore: Date
  SubmitTimeAfter: Date
}

input AwsComprehendListSentimentDetectionJobsInput {
  Filter: AwsComprehendListSentimentDetectionJobsFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsComprehendListSentimentDetectionJobsOutput {
  SentimentDetectionJobPropertiesList: [AwsComprehendS33]
  NextToken: String
}

input AwsComprehendListTagsForResourceInput {
  ResourceArn: String!
}

type AwsComprehendListTagsForResourceOutput {
  ResourceArn: String
  Tags: [AwsComprehendS19]
}

input AwsComprehendListTopicsDetectionJobsFilterInput {
  JobName: String
  JobStatus: String
  SubmitTimeBefore: Date
  SubmitTimeAfter: Date
}

input AwsComprehendListTopicsDetectionJobsInput {
  Filter: AwsComprehendListTopicsDetectionJobsFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsComprehendListTopicsDetectionJobsOutput {
  TopicsDetectionJobPropertiesList: [AwsComprehendS36]
  NextToken: String
}

"""AWS Comprehend Medical (2018-10-30)"""
type AwsComprehendMedical {
  detectEntities(input: AwsComprehendMedicalDetectEntitiesInput!, config: AwsConfig): AwsComprehendMedicalDetectEntitiesOutput
  detectPHI(input: AwsComprehendMedicalDetectPHIInput!, config: AwsConfig): AwsComprehendMedicalDetectPHIOutput
}

input AwsComprehendMedicalDetectEntitiesInput {
  Text: String!
}

type AwsComprehendMedicalDetectEntitiesOutput {
  Entities: [AwsComprehendMedicalS4]!
  UnmappedAttributes: [AwsComprehendMedicalDetectEntitiesOutputUnmappedAttributes]
  PaginationToken: String
}

type AwsComprehendMedicalDetectEntitiesOutputUnmappedAttributes {
  Type: String
  Attribute: AwsComprehendMedicalSf
}

input AwsComprehendMedicalDetectPHIInput {
  Text: String!
}

type AwsComprehendMedicalDetectPHIOutput {
  Entities: [AwsComprehendMedicalS4]!
  PaginationToken: String
}

type AwsComprehendMedicalS4 {
  Id: Int
  BeginOffset: Int
  EndOffset: Int
  Score: Float
  Text: String
  Category: String
  Type: String
  Traits: [AwsComprehendMedicalSb]
  Attributes: [AwsComprehendMedicalSf]
}

type AwsComprehendMedicalSb {
  Name: String
  Score: Float
}

type AwsComprehendMedicalSf {
  Type: String
  Score: Float
  RelationshipScore: Float
  Id: Int
  BeginOffset: Int
  EndOffset: Int
  Text: String
  Traits: [AwsComprehendMedicalSb]
}

type AwsComprehendS12 {
  TokenId: Int
  Text: String
  BeginOffset: Int
  EndOffset: Int
  PartOfSpeech: AwsComprehendS12PartOfSpeech
}

type AwsComprehendS12PartOfSpeech {
  Tag: String
  Score: Float
}

type AwsComprehendS19 {
  Key: String!
  Value: String
}

input AwsComprehendS19Input {
  Key: String!
  Value: String
}

type AwsComprehendS1d {
  S3Uri: String!
}

input AwsComprehendS1dInput {
  S3Uri: String!
}

type AwsComprehendS1f {
  S3Uri: String
  KmsKeyId: String
}

input AwsComprehendS1fInput {
  S3Uri: String
  KmsKeyId: String
}

type AwsComprehendS1i {
  SecurityGroupIds: [String]!
  Subnets: [String]!
}

input AwsComprehendS1iInput {
  SecurityGroupIds: [String]!
  Subnets: [String]!
}

type AwsComprehendS1q {
  EntityTypes: [AwsComprehendS1qEntityTypes]!
  Documents: AwsComprehendS1qDocuments!
  Annotations: AwsComprehendS1qAnnotations
  EntityList: AwsComprehendS1qEntityList
}

type AwsComprehendS1qAnnotations {
  S3Uri: String!
}

input AwsComprehendS1qAnnotationsInput {
  S3Uri: String!
}

type AwsComprehendS1qDocuments {
  S3Uri: String!
}

input AwsComprehendS1qDocumentsInput {
  S3Uri: String!
}

type AwsComprehendS1qEntityList {
  S3Uri: String!
}

input AwsComprehendS1qEntityListInput {
  S3Uri: String!
}

type AwsComprehendS1qEntityTypes {
  Type: String!
}

input AwsComprehendS1qEntityTypesInput {
  Type: String!
}

input AwsComprehendS1qInput {
  EntityTypes: [AwsComprehendS1qEntityTypesInput]!
  Documents: AwsComprehendS1qDocumentsInput!
  Annotations: AwsComprehendS1qAnnotationsInput
  EntityList: AwsComprehendS1qEntityListInput
}

type AwsComprehendS26 {
  JobId: String
  JobName: String
  JobStatus: String
  Message: String
  SubmitTime: Date
  EndTime: Date
  DocumentClassifierArn: String
  InputDataConfig: AwsComprehendS2b
  OutputDataConfig: AwsComprehendS2d
  DataAccessRoleArn: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1i
}

type AwsComprehendS2b {
  S3Uri: String!
  InputFormat: String
}

input AwsComprehendS2bInput {
  S3Uri: String!
  InputFormat: String
}

type AwsComprehendS2d {
  S3Uri: String!
  KmsKeyId: String
}

input AwsComprehendS2dInput {
  S3Uri: String!
  KmsKeyId: String
}

type AwsComprehendS2g {
  DocumentClassifierArn: String
  LanguageCode: String
  Status: String
  Message: String
  SubmitTime: Date
  EndTime: Date
  TrainingStartTime: Date
  TrainingEndTime: Date
  InputDataConfig: AwsComprehendS1d
  OutputDataConfig: AwsComprehendS1f
  ClassifierMetadata: AwsComprehendS2gClassifierMetadata
  DataAccessRoleArn: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1i
}

type AwsComprehendS2gClassifierMetadata {
  NumberOfLabels: Int
  NumberOfTrainedDocuments: Int
  NumberOfTestDocuments: Int
  EvaluationMetrics: AwsComprehendS2gClassifierMetadataEvaluationMetrics
}

type AwsComprehendS2gClassifierMetadataEvaluationMetrics {
  Accuracy: JSON
  Precision: JSON
  Recall: JSON
  F1Score: JSON
}

type AwsComprehendS2n {
  JobId: String
  JobName: String
  JobStatus: String
  Message: String
  SubmitTime: Date
  EndTime: Date
  InputDataConfig: AwsComprehendS2b
  OutputDataConfig: AwsComprehendS2d
  DataAccessRoleArn: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1i
}

type AwsComprehendS2q {
  JobId: String
  JobName: String
  JobStatus: String
  Message: String
  SubmitTime: Date
  EndTime: Date
  EntityRecognizerArn: String
  InputDataConfig: AwsComprehendS2b
  OutputDataConfig: AwsComprehendS2d
  LanguageCode: String
  DataAccessRoleArn: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1i
}

type AwsComprehendS2t {
  EntityRecognizerArn: String
  LanguageCode: String
  Status: String
  Message: String
  SubmitTime: Date
  EndTime: Date
  TrainingStartTime: Date
  TrainingEndTime: Date
  InputDataConfig: AwsComprehendS1q
  RecognizerMetadata: AwsComprehendS2tRecognizerMetadata
  DataAccessRoleArn: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1i
}

type AwsComprehendS2tRecognizerMetadata {
  NumberOfTrainedDocuments: Int
  NumberOfTestDocuments: Int
  EvaluationMetrics: AwsComprehendS2tRecognizerMetadataEvaluationMetrics
  EntityTypes: [AwsComprehendS2tRecognizerMetadataEntityTypes]
}

type AwsComprehendS2tRecognizerMetadataEntityTypes {
  Type: String
}

type AwsComprehendS2tRecognizerMetadataEvaluationMetrics {
  Precision: JSON
  Recall: JSON
  F1Score: JSON
}

type AwsComprehendS30 {
  JobId: String
  JobName: String
  JobStatus: String
  Message: String
  SubmitTime: Date
  EndTime: Date
  InputDataConfig: AwsComprehendS2b
  OutputDataConfig: AwsComprehendS2d
  LanguageCode: String
  DataAccessRoleArn: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1i
}

type AwsComprehendS33 {
  JobId: String
  JobName: String
  JobStatus: String
  Message: String
  SubmitTime: Date
  EndTime: Date
  InputDataConfig: AwsComprehendS2b
  OutputDataConfig: AwsComprehendS2d
  LanguageCode: String
  DataAccessRoleArn: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1i
}

type AwsComprehendS36 {
  JobId: String
  JobName: String
  JobStatus: String
  Message: String
  SubmitTime: Date
  EndTime: Date
  InputDataConfig: AwsComprehendS2b
  OutputDataConfig: AwsComprehendS2d
  NumberOfTopics: Int
  DataAccessRoleArn: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1i
}

type AwsComprehendS8 {
  LanguageCode: String
  Score: Float
}

type AwsComprehendSb {
  Index: Int
  ErrorCode: String
  ErrorMessage: String
}

type AwsComprehendSi {
  Score: Float
  Type: String
  Text: String
  BeginOffset: Int
  EndOffset: Int
}

type AwsComprehendSp {
  Score: Float
  Text: String
  BeginOffset: Int
  EndOffset: Int
}

input AwsComprehendStartDocumentClassificationJobInput {
  JobName: String
  DocumentClassifierArn: String!
  InputDataConfig: AwsComprehendS2bInput!
  OutputDataConfig: AwsComprehendS2dInput!
  DataAccessRoleArn: String!
  ClientRequestToken: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1iInput
}

type AwsComprehendStartDocumentClassificationJobOutput {
  JobId: String
  JobStatus: String
}

input AwsComprehendStartDominantLanguageDetectionJobInput {
  InputDataConfig: AwsComprehendS2bInput!
  OutputDataConfig: AwsComprehendS2dInput!
  DataAccessRoleArn: String!
  JobName: String
  ClientRequestToken: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1iInput
}

type AwsComprehendStartDominantLanguageDetectionJobOutput {
  JobId: String
  JobStatus: String
}

input AwsComprehendStartEntitiesDetectionJobInput {
  InputDataConfig: AwsComprehendS2bInput!
  OutputDataConfig: AwsComprehendS2dInput!
  DataAccessRoleArn: String!
  JobName: String
  EntityRecognizerArn: String
  LanguageCode: String!
  ClientRequestToken: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1iInput
}

type AwsComprehendStartEntitiesDetectionJobOutput {
  JobId: String
  JobStatus: String
}

input AwsComprehendStartKeyPhrasesDetectionJobInput {
  InputDataConfig: AwsComprehendS2bInput!
  OutputDataConfig: AwsComprehendS2dInput!
  DataAccessRoleArn: String!
  JobName: String
  LanguageCode: String!
  ClientRequestToken: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1iInput
}

type AwsComprehendStartKeyPhrasesDetectionJobOutput {
  JobId: String
  JobStatus: String
}

input AwsComprehendStartSentimentDetectionJobInput {
  InputDataConfig: AwsComprehendS2bInput!
  OutputDataConfig: AwsComprehendS2dInput!
  DataAccessRoleArn: String!
  JobName: String
  LanguageCode: String!
  ClientRequestToken: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1iInput
}

type AwsComprehendStartSentimentDetectionJobOutput {
  JobId: String
  JobStatus: String
}

input AwsComprehendStartTopicsDetectionJobInput {
  InputDataConfig: AwsComprehendS2bInput!
  OutputDataConfig: AwsComprehendS2dInput!
  DataAccessRoleArn: String!
  JobName: String
  NumberOfTopics: Int
  ClientRequestToken: String
  VolumeKmsKeyId: String
  VpcConfig: AwsComprehendS1iInput
}

type AwsComprehendStartTopicsDetectionJobOutput {
  JobId: String
  JobStatus: String
}

input AwsComprehendStopDominantLanguageDetectionJobInput {
  JobId: String!
}

type AwsComprehendStopDominantLanguageDetectionJobOutput {
  JobId: String
  JobStatus: String
}

input AwsComprehendStopEntitiesDetectionJobInput {
  JobId: String!
}

type AwsComprehendStopEntitiesDetectionJobOutput {
  JobId: String
  JobStatus: String
}

input AwsComprehendStopKeyPhrasesDetectionJobInput {
  JobId: String!
}

type AwsComprehendStopKeyPhrasesDetectionJobOutput {
  JobId: String
  JobStatus: String
}

input AwsComprehendStopSentimentDetectionJobInput {
  JobId: String!
}

type AwsComprehendStopSentimentDetectionJobOutput {
  JobId: String
  JobStatus: String
}

input AwsComprehendStopTrainingDocumentClassifierInput {
  DocumentClassifierArn: String!
}

input AwsComprehendStopTrainingEntityRecognizerInput {
  EntityRecognizerArn: String!
}

type AwsComprehendSw {
  Positive: Float
  Negative: Float
  Neutral: Float
  Mixed: Float
}

input AwsComprehendTagResourceInput {
  ResourceArn: String!
  Tags: [AwsComprehendS19Input]!
}

input AwsComprehendUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsConfig {
  accessKeyId: String
  secretAccessKey: String
  region: String
}

"""AWS Config (2014-11-12)"""
type AwsConfigService {
  batchGetAggregateResourceConfig(input: AwsConfigServiceBatchGetAggregateResourceConfigInput!, config: AwsConfig): AwsConfigServiceBatchGetAggregateResourceConfigOutput
  batchGetResourceConfig(input: AwsConfigServiceBatchGetResourceConfigInput!, config: AwsConfig): AwsConfigServiceBatchGetResourceConfigOutput
  deleteAggregationAuthorization(input: AwsConfigServiceDeleteAggregationAuthorizationInput!, config: AwsConfig): JSON
  deleteConfigRule(input: AwsConfigServiceDeleteConfigRuleInput!, config: AwsConfig): JSON
  deleteConfigurationAggregator(input: AwsConfigServiceDeleteConfigurationAggregatorInput!, config: AwsConfig): JSON
  deleteConfigurationRecorder(input: AwsConfigServiceDeleteConfigurationRecorderInput!, config: AwsConfig): JSON
  deleteDeliveryChannel(input: AwsConfigServiceDeleteDeliveryChannelInput!, config: AwsConfig): JSON
  deleteEvaluationResults(input: AwsConfigServiceDeleteEvaluationResultsInput!, config: AwsConfig): JSON
  deleteOrganizationConfigRule(input: AwsConfigServiceDeleteOrganizationConfigRuleInput!, config: AwsConfig): JSON
  deletePendingAggregationRequest(input: AwsConfigServiceDeletePendingAggregationRequestInput!, config: AwsConfig): JSON
  deleteRemediationConfiguration(input: AwsConfigServiceDeleteRemediationConfigurationInput!, config: AwsConfig): JSON
  deleteRetentionConfiguration(input: AwsConfigServiceDeleteRetentionConfigurationInput!, config: AwsConfig): JSON
  deliverConfigSnapshot(input: AwsConfigServiceDeliverConfigSnapshotInput!, config: AwsConfig): AwsConfigServiceDeliverConfigSnapshotOutput
  describeAggregateComplianceByConfigRules(input: AwsConfigServiceDescribeAggregateComplianceByConfigRulesInput!, config: AwsConfig): AwsConfigServiceDescribeAggregateComplianceByConfigRulesOutput
  describeAggregationAuthorizations(input: AwsConfigServiceDescribeAggregationAuthorizationsInput, config: AwsConfig): AwsConfigServiceDescribeAggregationAuthorizationsOutput
  describeComplianceByConfigRule(input: AwsConfigServiceDescribeComplianceByConfigRuleInput, config: AwsConfig): AwsConfigServiceDescribeComplianceByConfigRuleOutput
  describeComplianceByResource(input: AwsConfigServiceDescribeComplianceByResourceInput, config: AwsConfig): AwsConfigServiceDescribeComplianceByResourceOutput
  describeConfigRuleEvaluationStatus(input: AwsConfigServiceDescribeConfigRuleEvaluationStatusInput, config: AwsConfig): AwsConfigServiceDescribeConfigRuleEvaluationStatusOutput
  describeConfigRules(input: AwsConfigServiceDescribeConfigRulesInput, config: AwsConfig): AwsConfigServiceDescribeConfigRulesOutput
  describeConfigurationAggregatorSourcesStatus(input: AwsConfigServiceDescribeConfigurationAggregatorSourcesStatusInput!, config: AwsConfig): AwsConfigServiceDescribeConfigurationAggregatorSourcesStatusOutput
  describeConfigurationAggregators(input: AwsConfigServiceDescribeConfigurationAggregatorsInput, config: AwsConfig): AwsConfigServiceDescribeConfigurationAggregatorsOutput
  describeConfigurationRecorderStatus(input: AwsConfigServiceDescribeConfigurationRecorderStatusInput, config: AwsConfig): AwsConfigServiceDescribeConfigurationRecorderStatusOutput
  describeConfigurationRecorders(input: AwsConfigServiceDescribeConfigurationRecordersInput, config: AwsConfig): AwsConfigServiceDescribeConfigurationRecordersOutput
  describeDeliveryChannelStatus(input: AwsConfigServiceDescribeDeliveryChannelStatusInput, config: AwsConfig): AwsConfigServiceDescribeDeliveryChannelStatusOutput
  describeDeliveryChannels(input: AwsConfigServiceDescribeDeliveryChannelsInput, config: AwsConfig): AwsConfigServiceDescribeDeliveryChannelsOutput
  describeOrganizationConfigRuleStatuses(input: AwsConfigServiceDescribeOrganizationConfigRuleStatusesInput, config: AwsConfig): AwsConfigServiceDescribeOrganizationConfigRuleStatusesOutput
  describeOrganizationConfigRules(input: AwsConfigServiceDescribeOrganizationConfigRulesInput, config: AwsConfig): AwsConfigServiceDescribeOrganizationConfigRulesOutput
  describePendingAggregationRequests(input: AwsConfigServiceDescribePendingAggregationRequestsInput, config: AwsConfig): AwsConfigServiceDescribePendingAggregationRequestsOutput
  describeRemediationConfigurations(input: AwsConfigServiceDescribeRemediationConfigurationsInput!, config: AwsConfig): AwsConfigServiceDescribeRemediationConfigurationsOutput
  describeRemediationExecutionStatus(input: AwsConfigServiceDescribeRemediationExecutionStatusInput!, config: AwsConfig): AwsConfigServiceDescribeRemediationExecutionStatusOutput
  describeRetentionConfigurations(input: AwsConfigServiceDescribeRetentionConfigurationsInput, config: AwsConfig): AwsConfigServiceDescribeRetentionConfigurationsOutput
  getAggregateComplianceDetailsByConfigRule(input: AwsConfigServiceGetAggregateComplianceDetailsByConfigRuleInput!, config: AwsConfig): AwsConfigServiceGetAggregateComplianceDetailsByConfigRuleOutput
  getAggregateConfigRuleComplianceSummary(input: AwsConfigServiceGetAggregateConfigRuleComplianceSummaryInput!, config: AwsConfig): AwsConfigServiceGetAggregateConfigRuleComplianceSummaryOutput
  getAggregateDiscoveredResourceCounts(input: AwsConfigServiceGetAggregateDiscoveredResourceCountsInput!, config: AwsConfig): AwsConfigServiceGetAggregateDiscoveredResourceCountsOutput
  getAggregateResourceConfig(input: AwsConfigServiceGetAggregateResourceConfigInput!, config: AwsConfig): AwsConfigServiceGetAggregateResourceConfigOutput
  getComplianceDetailsByConfigRule(input: AwsConfigServiceGetComplianceDetailsByConfigRuleInput!, config: AwsConfig): AwsConfigServiceGetComplianceDetailsByConfigRuleOutput
  getComplianceDetailsByResource(input: AwsConfigServiceGetComplianceDetailsByResourceInput!, config: AwsConfig): AwsConfigServiceGetComplianceDetailsByResourceOutput
  getComplianceSummaryByConfigRule(config: AwsConfig): AwsConfigServiceGetComplianceSummaryByConfigRuleOutput
  getComplianceSummaryByResourceType(input: AwsConfigServiceGetComplianceSummaryByResourceTypeInput, config: AwsConfig): AwsConfigServiceGetComplianceSummaryByResourceTypeOutput
  getDiscoveredResourceCounts(input: AwsConfigServiceGetDiscoveredResourceCountsInput, config: AwsConfig): AwsConfigServiceGetDiscoveredResourceCountsOutput
  getOrganizationConfigRuleDetailedStatus(input: AwsConfigServiceGetOrganizationConfigRuleDetailedStatusInput!, config: AwsConfig): AwsConfigServiceGetOrganizationConfigRuleDetailedStatusOutput
  getResourceConfigHistory(input: AwsConfigServiceGetResourceConfigHistoryInput!, config: AwsConfig): AwsConfigServiceGetResourceConfigHistoryOutput
  listAggregateDiscoveredResources(input: AwsConfigServiceListAggregateDiscoveredResourcesInput!, config: AwsConfig): AwsConfigServiceListAggregateDiscoveredResourcesOutput
  listDiscoveredResources(input: AwsConfigServiceListDiscoveredResourcesInput!, config: AwsConfig): AwsConfigServiceListDiscoveredResourcesOutput
  listTagsForResource(input: AwsConfigServiceListTagsForResourceInput!, config: AwsConfig): AwsConfigServiceListTagsForResourceOutput
  putAggregationAuthorization(input: AwsConfigServicePutAggregationAuthorizationInput!, config: AwsConfig): AwsConfigServicePutAggregationAuthorizationOutput
  putConfigRule(input: AwsConfigServicePutConfigRuleInput!, config: AwsConfig): JSON
  putConfigurationAggregator(input: AwsConfigServicePutConfigurationAggregatorInput!, config: AwsConfig): AwsConfigServicePutConfigurationAggregatorOutput
  putConfigurationRecorder(input: AwsConfigServicePutConfigurationRecorderInput!, config: AwsConfig): JSON
  putDeliveryChannel(input: AwsConfigServicePutDeliveryChannelInput!, config: AwsConfig): JSON
  putEvaluations(input: AwsConfigServicePutEvaluationsInput!, config: AwsConfig): AwsConfigServicePutEvaluationsOutput
  putOrganizationConfigRule(input: AwsConfigServicePutOrganizationConfigRuleInput!, config: AwsConfig): AwsConfigServicePutOrganizationConfigRuleOutput
  putRemediationConfigurations(input: AwsConfigServicePutRemediationConfigurationsInput!, config: AwsConfig): AwsConfigServicePutRemediationConfigurationsOutput
  putRetentionConfiguration(input: AwsConfigServicePutRetentionConfigurationInput!, config: AwsConfig): AwsConfigServicePutRetentionConfigurationOutput
  selectResourceConfig(input: AwsConfigServiceSelectResourceConfigInput!, config: AwsConfig): AwsConfigServiceSelectResourceConfigOutput
  startConfigRulesEvaluation(input: AwsConfigServiceStartConfigRulesEvaluationInput, config: AwsConfig): JSON
  startConfigurationRecorder(input: AwsConfigServiceStartConfigurationRecorderInput!, config: AwsConfig): JSON
  startRemediationExecution(input: AwsConfigServiceStartRemediationExecutionInput!, config: AwsConfig): AwsConfigServiceStartRemediationExecutionOutput
  stopConfigurationRecorder(input: AwsConfigServiceStopConfigurationRecorderInput!, config: AwsConfig): JSON
  tagResource(input: AwsConfigServiceTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsConfigServiceUntagResourceInput!, config: AwsConfig): JSON
}

input AwsConfigServiceBatchGetAggregateResourceConfigInput {
  ConfigurationAggregatorName: String!
  ResourceIdentifiers: [AwsConfigServiceS4Input]!
}

type AwsConfigServiceBatchGetAggregateResourceConfigOutput {
  BaseConfigurationItems: [AwsConfigServiceSb]
  UnprocessedResourceIdentifiers: [AwsConfigServiceS4]
}

input AwsConfigServiceBatchGetResourceConfigInput {
  resourceKeys: [AwsConfigServiceSrInput]!
}

type AwsConfigServiceBatchGetResourceConfigOutput {
  baseConfigurationItems: [AwsConfigServiceSb]
  unprocessedResourceKeys: [AwsConfigServiceSr]
}

input AwsConfigServiceDeleteAggregationAuthorizationInput {
  AuthorizedAccountId: String!
  AuthorizedAwsRegion: String!
}

input AwsConfigServiceDeleteConfigRuleInput {
  ConfigRuleName: String!
}

input AwsConfigServiceDeleteConfigurationAggregatorInput {
  ConfigurationAggregatorName: String!
}

input AwsConfigServiceDeleteConfigurationRecorderInput {
  ConfigurationRecorderName: String!
}

input AwsConfigServiceDeleteDeliveryChannelInput {
  DeliveryChannelName: String!
}

input AwsConfigServiceDeleteEvaluationResultsInput {
  ConfigRuleName: String!
}

input AwsConfigServiceDeleteOrganizationConfigRuleInput {
  OrganizationConfigRuleName: String!
}

input AwsConfigServiceDeletePendingAggregationRequestInput {
  RequesterAccountId: String!
  RequesterAwsRegion: String!
}

input AwsConfigServiceDeleteRemediationConfigurationInput {
  ConfigRuleName: String!
  ResourceType: String
}

input AwsConfigServiceDeleteRetentionConfigurationInput {
  RetentionConfigurationName: String!
}

input AwsConfigServiceDeliverConfigSnapshotInput {
  deliveryChannelName: String!
}

type AwsConfigServiceDeliverConfigSnapshotOutput {
  configSnapshotId: String
}

input AwsConfigServiceDescribeAggregateComplianceByConfigRulesFiltersInput {
  ConfigRuleName: String
  ComplianceType: String
  AccountId: String
  AwsRegion: String
}

input AwsConfigServiceDescribeAggregateComplianceByConfigRulesInput {
  ConfigurationAggregatorName: String!
  Filters: AwsConfigServiceDescribeAggregateComplianceByConfigRulesFiltersInput
  Limit: Int
  NextToken: String
}

type AwsConfigServiceDescribeAggregateComplianceByConfigRulesOutput {
  AggregateComplianceByConfigRules: [AwsConfigServiceDescribeAggregateComplianceByConfigRulesOutputAggregateComplianceByConfigRules]
  NextToken: String
}

type AwsConfigServiceDescribeAggregateComplianceByConfigRulesOutputAggregateComplianceByConfigRules {
  ConfigRuleName: String
  Compliance: AwsConfigServiceS1l
  AccountId: String
  AwsRegion: String
}

input AwsConfigServiceDescribeAggregationAuthorizationsInput {
  Limit: Int
  NextToken: String
}

type AwsConfigServiceDescribeAggregationAuthorizationsOutput {
  AggregationAuthorizations: [AwsConfigServiceS1t]
  NextToken: String
}

input AwsConfigServiceDescribeComplianceByConfigRuleInput {
  ConfigRuleNames: [String]
  ComplianceTypes: [String]
  NextToken: String
}

type AwsConfigServiceDescribeComplianceByConfigRuleOutput {
  ComplianceByConfigRules: [AwsConfigServiceDescribeComplianceByConfigRuleOutputComplianceByConfigRules]
  NextToken: String
}

type AwsConfigServiceDescribeComplianceByConfigRuleOutputComplianceByConfigRules {
  ConfigRuleName: String
  Compliance: AwsConfigServiceS1l
}

input AwsConfigServiceDescribeComplianceByResourceInput {
  ResourceType: String
  ResourceId: String
  ComplianceTypes: [String]
  Limit: Int
  NextToken: String
}

type AwsConfigServiceDescribeComplianceByResourceOutput {
  ComplianceByResources: [AwsConfigServiceDescribeComplianceByResourceOutputComplianceByResources]
  NextToken: String
}

type AwsConfigServiceDescribeComplianceByResourceOutputComplianceByResources {
  ResourceType: String
  ResourceId: String
  Compliance: AwsConfigServiceS1l
}

input AwsConfigServiceDescribeConfigRuleEvaluationStatusInput {
  ConfigRuleNames: [String]
  NextToken: String
  Limit: Int
}

type AwsConfigServiceDescribeConfigRuleEvaluationStatusOutput {
  ConfigRulesEvaluationStatus: [AwsConfigServiceDescribeConfigRuleEvaluationStatusOutputConfigRulesEvaluationStatus]
  NextToken: String
}

type AwsConfigServiceDescribeConfigRuleEvaluationStatusOutputConfigRulesEvaluationStatus {
  ConfigRuleName: String
  ConfigRuleArn: String
  ConfigRuleId: String
  LastSuccessfulInvocationTime: Date
  LastFailedInvocationTime: Date
  LastSuccessfulEvaluationTime: Date
  LastFailedEvaluationTime: Date
  FirstActivatedTime: Date
  LastErrorCode: String
  LastErrorMessage: String
  FirstEvaluationStarted: Boolean
}

input AwsConfigServiceDescribeConfigRulesInput {
  ConfigRuleNames: [String]
  NextToken: String
}

type AwsConfigServiceDescribeConfigRulesOutput {
  ConfigRules: [AwsConfigServiceS2f]
  NextToken: String
}

input AwsConfigServiceDescribeConfigurationAggregatorsInput {
  ConfigurationAggregatorNames: [String]
  NextToken: String
  Limit: Int
}

input AwsConfigServiceDescribeConfigurationAggregatorSourcesStatusInput {
  ConfigurationAggregatorName: String!
  UpdateStatus: [String]
  NextToken: String
  Limit: Int
}

type AwsConfigServiceDescribeConfigurationAggregatorSourcesStatusOutput {
  AggregatedSourceStatusList: [AwsConfigServiceDescribeConfigurationAggregatorSourcesStatusOutputAggregatedSourceStatusList]
  NextToken: String
}

type AwsConfigServiceDescribeConfigurationAggregatorSourcesStatusOutputAggregatedSourceStatusList {
  SourceId: String
  SourceType: String
  AwsRegion: String
  LastUpdateStatus: String
  LastUpdateTime: Date
  LastErrorCode: String
  LastErrorMessage: String
}

type AwsConfigServiceDescribeConfigurationAggregatorsOutput {
  ConfigurationAggregators: [AwsConfigServiceS34]
  NextToken: String
}

input AwsConfigServiceDescribeConfigurationRecordersInput {
  ConfigurationRecorderNames: [String]
}

type AwsConfigServiceDescribeConfigurationRecordersOutput {
  ConfigurationRecorders: [AwsConfigServiceS3k]
}

input AwsConfigServiceDescribeConfigurationRecorderStatusInput {
  ConfigurationRecorderNames: [String]
}

type AwsConfigServiceDescribeConfigurationRecorderStatusOutput {
  ConfigurationRecordersStatus: [AwsConfigServiceDescribeConfigurationRecorderStatusOutputConfigurationRecordersStatus]
}

type AwsConfigServiceDescribeConfigurationRecorderStatusOutputConfigurationRecordersStatus {
  name: String
  lastStartTime: Date
  lastStopTime: Date
  recording: Boolean
  lastStatus: String
  lastErrorCode: String
  lastErrorMessage: String
  lastStatusChangeTime: Date
}

input AwsConfigServiceDescribeDeliveryChannelsInput {
  DeliveryChannelNames: [String]
}

type AwsConfigServiceDescribeDeliveryChannelsOutput {
  DeliveryChannels: [AwsConfigServiceS40]
}

input AwsConfigServiceDescribeDeliveryChannelStatusInput {
  DeliveryChannelNames: [String]
}

type AwsConfigServiceDescribeDeliveryChannelStatusOutput {
  DeliveryChannelsStatus: [AwsConfigServiceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatus]
}

type AwsConfigServiceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatus {
  name: String
  configSnapshotDeliveryInfo: AwsConfigServiceS3u
  configHistoryDeliveryInfo: AwsConfigServiceS3u
  configStreamDeliveryInfo: AwsConfigServiceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatusConfigStreamDeliveryInfo
}

type AwsConfigServiceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatusConfigStreamDeliveryInfo {
  lastStatus: String
  lastErrorCode: String
  lastErrorMessage: String
  lastStatusChangeTime: Date
}

input AwsConfigServiceDescribeOrganizationConfigRulesInput {
  OrganizationConfigRuleNames: [String]
  Limit: Int
  NextToken: String
}

type AwsConfigServiceDescribeOrganizationConfigRulesOutput {
  OrganizationConfigRules: [AwsConfigServiceDescribeOrganizationConfigRulesOutputOrganizationConfigRules]
  NextToken: String
}

type AwsConfigServiceDescribeOrganizationConfigRulesOutputOrganizationConfigRules {
  OrganizationConfigRuleName: String!
  OrganizationConfigRuleArn: String!
  OrganizationManagedRuleMetadata: AwsConfigServiceS4d
  OrganizationCustomRuleMetadata: AwsConfigServiceS4i
  ExcludedAccounts: [String]
  LastUpdateTime: Date
}

input AwsConfigServiceDescribeOrganizationConfigRuleStatusesInput {
  OrganizationConfigRuleNames: [String]
  Limit: Int
  NextToken: String
}

type AwsConfigServiceDescribeOrganizationConfigRuleStatusesOutput {
  OrganizationConfigRuleStatuses: [AwsConfigServiceDescribeOrganizationConfigRuleStatusesOutputOrganizationConfigRuleStatuses]
  NextToken: String
}

type AwsConfigServiceDescribeOrganizationConfigRuleStatusesOutputOrganizationConfigRuleStatuses {
  OrganizationConfigRuleName: String!
  OrganizationRuleStatus: String!
  ErrorCode: String
  ErrorMessage: String
  LastUpdateTime: Date
}

input AwsConfigServiceDescribePendingAggregationRequestsInput {
  Limit: Int
  NextToken: String
}

type AwsConfigServiceDescribePendingAggregationRequestsOutput {
  PendingAggregationRequests: [AwsConfigServiceDescribePendingAggregationRequestsOutputPendingAggregationRequests]
  NextToken: String
}

type AwsConfigServiceDescribePendingAggregationRequestsOutputPendingAggregationRequests {
  RequesterAccountId: String
  RequesterAwsRegion: String
}

input AwsConfigServiceDescribeRemediationConfigurationsInput {
  ConfigRuleNames: [String]!
}

type AwsConfigServiceDescribeRemediationConfigurationsOutput {
  RemediationConfigurations: [AwsConfigServiceS4t]
}

input AwsConfigServiceDescribeRemediationExecutionStatusInput {
  ConfigRuleName: String!
  ResourceKeys: [AwsConfigServiceSrInput]
  Limit: Int
  NextToken: String
}

type AwsConfigServiceDescribeRemediationExecutionStatusOutput {
  RemediationExecutionStatuses: [AwsConfigServiceDescribeRemediationExecutionStatusOutputRemediationExecutionStatuses]
  NextToken: String
}

type AwsConfigServiceDescribeRemediationExecutionStatusOutputRemediationExecutionStatuses {
  ResourceKey: AwsConfigServiceSr
  State: String
  StepDetails: [AwsConfigServiceDescribeRemediationExecutionStatusOutputRemediationExecutionStatusesStepDetails]
  InvocationTime: Date
  LastUpdatedTime: Date
}

type AwsConfigServiceDescribeRemediationExecutionStatusOutputRemediationExecutionStatusesStepDetails {
  Name: String
  State: String
  ErrorMessage: String
  StartTime: Date
  StopTime: Date
}

input AwsConfigServiceDescribeRetentionConfigurationsInput {
  RetentionConfigurationNames: [String]
  NextToken: String
}

type AwsConfigServiceDescribeRetentionConfigurationsOutput {
  RetentionConfigurations: [AwsConfigServiceS5e]
  NextToken: String
}

input AwsConfigServiceGetAggregateComplianceDetailsByConfigRuleInput {
  ConfigurationAggregatorName: String!
  ConfigRuleName: String!
  AccountId: String!
  AwsRegion: String!
  ComplianceType: String
  Limit: Int
  NextToken: String
}

type AwsConfigServiceGetAggregateComplianceDetailsByConfigRuleOutput {
  AggregateEvaluationResults: [AwsConfigServiceGetAggregateComplianceDetailsByConfigRuleOutputAggregateEvaluationResults]
  NextToken: String
}

type AwsConfigServiceGetAggregateComplianceDetailsByConfigRuleOutputAggregateEvaluationResults {
  EvaluationResultIdentifier: AwsConfigServiceS5k
  ComplianceType: String
  ResultRecordedTime: Date
  ConfigRuleInvokedTime: Date
  Annotation: String
  AccountId: String
  AwsRegion: String
}

input AwsConfigServiceGetAggregateConfigRuleComplianceSummaryFiltersInput {
  AccountId: String
  AwsRegion: String
}

input AwsConfigServiceGetAggregateConfigRuleComplianceSummaryInput {
  ConfigurationAggregatorName: String!
  Filters: AwsConfigServiceGetAggregateConfigRuleComplianceSummaryFiltersInput
  GroupByKey: String
  Limit: Int
  NextToken: String
}

type AwsConfigServiceGetAggregateConfigRuleComplianceSummaryOutput {
  GroupByKey: String
  AggregateComplianceCounts: [AwsConfigServiceGetAggregateConfigRuleComplianceSummaryOutputAggregateComplianceCounts]
  NextToken: String
}

type AwsConfigServiceGetAggregateConfigRuleComplianceSummaryOutputAggregateComplianceCounts {
  GroupName: String
  ComplianceSummary: AwsConfigServiceS5s
}

input AwsConfigServiceGetAggregateDiscoveredResourceCountsFiltersInput {
  ResourceType: String
  AccountId: String
  Region: String
}

input AwsConfigServiceGetAggregateDiscoveredResourceCountsInput {
  ConfigurationAggregatorName: String!
  Filters: AwsConfigServiceGetAggregateDiscoveredResourceCountsFiltersInput
  GroupByKey: String
  Limit: Int
  NextToken: String
}

type AwsConfigServiceGetAggregateDiscoveredResourceCountsOutput {
  TotalDiscoveredResources: JSON!
  GroupByKey: String
  GroupedResourceCounts: [AwsConfigServiceGetAggregateDiscoveredResourceCountsOutputGroupedResourceCounts]
  NextToken: String
}

type AwsConfigServiceGetAggregateDiscoveredResourceCountsOutputGroupedResourceCounts {
  GroupName: String!
  ResourceCount: JSON!
}

input AwsConfigServiceGetAggregateResourceConfigInput {
  ConfigurationAggregatorName: String!
  ResourceIdentifier: AwsConfigServiceS4Input!
}

type AwsConfigServiceGetAggregateResourceConfigOutput {
  ConfigurationItem: AwsConfigServiceS62
}

input AwsConfigServiceGetComplianceDetailsByConfigRuleInput {
  ConfigRuleName: String!
  ComplianceTypes: [String]
  Limit: Int
  NextToken: String
}

type AwsConfigServiceGetComplianceDetailsByConfigRuleOutput {
  EvaluationResults: [AwsConfigServiceS6e]
  NextToken: String
}

input AwsConfigServiceGetComplianceDetailsByResourceInput {
  ResourceType: String!
  ResourceId: String!
  ComplianceTypes: [String]
  NextToken: String
}

type AwsConfigServiceGetComplianceDetailsByResourceOutput {
  EvaluationResults: [AwsConfigServiceS6e]
  NextToken: String
}

type AwsConfigServiceGetComplianceSummaryByConfigRuleOutput {
  ComplianceSummary: AwsConfigServiceS5s
}

input AwsConfigServiceGetComplianceSummaryByResourceTypeInput {
  ResourceTypes: [String]
}

type AwsConfigServiceGetComplianceSummaryByResourceTypeOutput {
  ComplianceSummariesByResourceType: [AwsConfigServiceGetComplianceSummaryByResourceTypeOutputComplianceSummariesByResourceType]
}

type AwsConfigServiceGetComplianceSummaryByResourceTypeOutputComplianceSummariesByResourceType {
  ResourceType: String
  ComplianceSummary: AwsConfigServiceS5s
}

input AwsConfigServiceGetDiscoveredResourceCountsInput {
  resourceTypes: [String]
  limit: Int
  nextToken: String
}

type AwsConfigServiceGetDiscoveredResourceCountsOutput {
  totalDiscoveredResources: JSON
  resourceCounts: [AwsConfigServiceGetDiscoveredResourceCountsOutputResourceCounts]
  nextToken: String
}

type AwsConfigServiceGetDiscoveredResourceCountsOutputResourceCounts {
  resourceType: String
  count: JSON
}

input AwsConfigServiceGetOrganizationConfigRuleDetailedStatusFiltersInput {
  AccountId: String
  MemberAccountRuleStatus: String
}

input AwsConfigServiceGetOrganizationConfigRuleDetailedStatusInput {
  OrganizationConfigRuleName: String!
  Filters: AwsConfigServiceGetOrganizationConfigRuleDetailedStatusFiltersInput
  Limit: Int
  NextToken: String
}

type AwsConfigServiceGetOrganizationConfigRuleDetailedStatusOutput {
  OrganizationConfigRuleDetailedStatus: [AwsConfigServiceGetOrganizationConfigRuleDetailedStatusOutputOrganizationConfigRuleDetailedStatus]
  NextToken: String
}

type AwsConfigServiceGetOrganizationConfigRuleDetailedStatusOutputOrganizationConfigRuleDetailedStatus {
  AccountId: String!
  ConfigRuleName: String!
  MemberAccountRuleStatus: String!
  ErrorCode: String
  ErrorMessage: String
  LastUpdateTime: Date
}

input AwsConfigServiceGetResourceConfigHistoryInput {
  resourceType: String!
  resourceId: String!
  laterTime: Date
  earlierTime: Date
  chronologicalOrder: String
  limit: Int
  nextToken: String
}

type AwsConfigServiceGetResourceConfigHistoryOutput {
  configurationItems: [AwsConfigServiceS62]
  nextToken: String
}

input AwsConfigServiceListAggregateDiscoveredResourcesFiltersInput {
  AccountId: String
  ResourceId: String
  ResourceName: String
  Region: String
}

input AwsConfigServiceListAggregateDiscoveredResourcesInput {
  ConfigurationAggregatorName: String!
  ResourceType: String!
  Filters: AwsConfigServiceListAggregateDiscoveredResourcesFiltersInput
  Limit: Int
  NextToken: String
}

type AwsConfigServiceListAggregateDiscoveredResourcesOutput {
  ResourceIdentifiers: [AwsConfigServiceS4]
  NextToken: String
}

input AwsConfigServiceListDiscoveredResourcesInput {
  resourceType: String!
  resourceIds: [String]
  resourceName: String
  limit: Int
  includeDeletedResources: Boolean
  nextToken: String
}

type AwsConfigServiceListDiscoveredResourcesOutput {
  resourceIdentifiers: [AwsConfigServiceListDiscoveredResourcesOutputResourceIdentifiers]
  nextToken: String
}

type AwsConfigServiceListDiscoveredResourcesOutputResourceIdentifiers {
  resourceType: String
  resourceId: String
  resourceName: String
  resourceDeletionTime: Date
}

input AwsConfigServiceListTagsForResourceInput {
  ResourceArn: String!
  Limit: Int
  NextToken: String
}

type AwsConfigServiceListTagsForResourceOutput {
  Tags: [AwsConfigServiceS7i]
  NextToken: String
}

input AwsConfigServicePutAggregationAuthorizationInput {
  AuthorizedAccountId: String!
  AuthorizedAwsRegion: String!
  Tags: [AwsConfigServiceS7iInput]
}

type AwsConfigServicePutAggregationAuthorizationOutput {
  AggregationAuthorization: AwsConfigServiceS1t
}

input AwsConfigServicePutConfigRuleInput {
  ConfigRule: AwsConfigServiceS2fInput!
  Tags: [AwsConfigServiceS7iInput]
}

input AwsConfigServicePutConfigurationAggregatorInput {
  ConfigurationAggregatorName: String!
  AccountAggregationSources: [AwsConfigServiceS36Input]
  OrganizationAggregationSource: AwsConfigServiceS3aInput
  Tags: [AwsConfigServiceS7iInput]
}

type AwsConfigServicePutConfigurationAggregatorOutput {
  ConfigurationAggregator: AwsConfigServiceS34
}

input AwsConfigServicePutConfigurationRecorderInput {
  ConfigurationRecorder: AwsConfigServiceS3kInput!
}

input AwsConfigServicePutDeliveryChannelInput {
  DeliveryChannel: AwsConfigServiceS40Input!
}

input AwsConfigServicePutEvaluationsInput {
  Evaluations: [AwsConfigServiceS7uInput]
  ResultToken: String!
  TestMode: Boolean
}

type AwsConfigServicePutEvaluationsOutput {
  FailedEvaluations: [AwsConfigServiceS7u]
}

input AwsConfigServicePutOrganizationConfigRuleInput {
  OrganizationConfigRuleName: String!
  OrganizationManagedRuleMetadata: AwsConfigServiceS4dInput
  OrganizationCustomRuleMetadata: AwsConfigServiceS4iInput
  ExcludedAccounts: [String]
}

type AwsConfigServicePutOrganizationConfigRuleOutput {
  OrganizationConfigRuleArn: String
}

input AwsConfigServicePutRemediationConfigurationsInput {
  RemediationConfigurations: [AwsConfigServiceS4tInput]!
}

type AwsConfigServicePutRemediationConfigurationsOutput {
  FailedBatches: [AwsConfigServicePutRemediationConfigurationsOutputFailedBatches]
}

type AwsConfigServicePutRemediationConfigurationsOutputFailedBatches {
  FailureMessage: String
  FailedItems: [AwsConfigServiceS4t]
}

input AwsConfigServicePutRetentionConfigurationInput {
  RetentionPeriodInDays: Int!
}

type AwsConfigServicePutRetentionConfigurationOutput {
  RetentionConfiguration: AwsConfigServiceS5e
}

type AwsConfigServiceS1l {
  ComplianceType: String
  ComplianceContributorCount: AwsConfigServiceS1m
}

type AwsConfigServiceS1m {
  CappedCount: Int
  CapExceeded: Boolean
}

type AwsConfigServiceS1t {
  AggregationAuthorizationArn: String
  AuthorizedAccountId: String
  AuthorizedAwsRegion: String
  CreationTime: Date
}

type AwsConfigServiceS2f {
  ConfigRuleName: String
  ConfigRuleArn: String
  ConfigRuleId: String
  Description: String
  Scope: AwsConfigServiceS2fScope
  Source: AwsConfigServiceS2fSource!
  InputParameters: String
  MaximumExecutionFrequency: String
  ConfigRuleState: String
  CreatedBy: String
}

input AwsConfigServiceS2fInput {
  ConfigRuleName: String
  ConfigRuleArn: String
  ConfigRuleId: String
  Description: String
  Scope: AwsConfigServiceS2fScopeInput
  Source: AwsConfigServiceS2fSourceInput!
  InputParameters: String
  MaximumExecutionFrequency: String
  ConfigRuleState: String
  CreatedBy: String
}

type AwsConfigServiceS2fScope {
  ComplianceResourceTypes: [String]
  TagKey: String
  TagValue: String
  ComplianceResourceId: String
}

input AwsConfigServiceS2fScopeInput {
  ComplianceResourceTypes: [String]
  TagKey: String
  TagValue: String
  ComplianceResourceId: String
}

type AwsConfigServiceS2fSource {
  Owner: String!
  SourceIdentifier: String!
  SourceDetails: [AwsConfigServiceS2fSourceSourceDetails]
}

input AwsConfigServiceS2fSourceInput {
  Owner: String!
  SourceIdentifier: String!
  SourceDetails: [AwsConfigServiceS2fSourceSourceDetailsInput]
}

type AwsConfigServiceS2fSourceSourceDetails {
  EventSource: String
  MessageType: String
  MaximumExecutionFrequency: String
}

input AwsConfigServiceS2fSourceSourceDetailsInput {
  EventSource: String
  MessageType: String
  MaximumExecutionFrequency: String
}

type AwsConfigServiceS34 {
  ConfigurationAggregatorName: String
  ConfigurationAggregatorArn: String
  AccountAggregationSources: [AwsConfigServiceS36]
  OrganizationAggregationSource: AwsConfigServiceS3a
  CreationTime: Date
  LastUpdatedTime: Date
}

type AwsConfigServiceS36 {
  AccountIds: [String]!
  AllAwsRegions: Boolean
  AwsRegions: [String]
}

input AwsConfigServiceS36Input {
  AccountIds: [String]!
  AllAwsRegions: Boolean
  AwsRegions: [String]
}

type AwsConfigServiceS3a {
  RoleArn: String!
  AwsRegions: [String]
  AllAwsRegions: Boolean
}

input AwsConfigServiceS3aInput {
  RoleArn: String!
  AwsRegions: [String]
  AllAwsRegions: Boolean
}

type AwsConfigServiceS3k {
  name: String
  roleARN: String
  recordingGroup: AwsConfigServiceS3kRecordingGroup
}

input AwsConfigServiceS3kInput {
  name: String
  roleARN: String
  recordingGroup: AwsConfigServiceS3kRecordingGroupInput
}

type AwsConfigServiceS3kRecordingGroup {
  allSupported: Boolean
  includeGlobalResourceTypes: Boolean
  resourceTypes: [String]
}

input AwsConfigServiceS3kRecordingGroupInput {
  allSupported: Boolean
  includeGlobalResourceTypes: Boolean
  resourceTypes: [String]
}

type AwsConfigServiceS3u {
  lastStatus: String
  lastErrorCode: String
  lastErrorMessage: String
  lastAttemptTime: Date
  lastSuccessfulTime: Date
  nextDeliveryTime: Date
}

type AwsConfigServiceS4 {
  SourceAccountId: String!
  SourceRegion: String!
  ResourceId: String!
  ResourceType: String!
  ResourceName: String
}

type AwsConfigServiceS40 {
  name: String
  s3BucketName: String
  s3KeyPrefix: String
  snsTopicARN: String
  configSnapshotDeliveryProperties: AwsConfigServiceS40ConfigSnapshotDeliveryProperties
}

type AwsConfigServiceS40ConfigSnapshotDeliveryProperties {
  deliveryFrequency: String
}

input AwsConfigServiceS40ConfigSnapshotDeliveryPropertiesInput {
  deliveryFrequency: String
}

input AwsConfigServiceS40Input {
  name: String
  s3BucketName: String
  s3KeyPrefix: String
  snsTopicARN: String
  configSnapshotDeliveryProperties: AwsConfigServiceS40ConfigSnapshotDeliveryPropertiesInput
}

type AwsConfigServiceS4d {
  Description: String
  RuleIdentifier: String!
  InputParameters: String
  MaximumExecutionFrequency: String
  ResourceTypesScope: [String]
  ResourceIdScope: String
  TagKeyScope: String
  TagValueScope: String
}

input AwsConfigServiceS4dInput {
  Description: String
  RuleIdentifier: String!
  InputParameters: String
  MaximumExecutionFrequency: String
  ResourceTypesScope: [String]
  ResourceIdScope: String
  TagKeyScope: String
  TagValueScope: String
}

type AwsConfigServiceS4i {
  Description: String
  LambdaFunctionArn: String!
  OrganizationConfigRuleTriggerTypes: [String]!
  InputParameters: String
  MaximumExecutionFrequency: String
  ResourceTypesScope: [String]
  ResourceIdScope: String
  TagKeyScope: String
  TagValueScope: String
}

input AwsConfigServiceS4iInput {
  Description: String
  LambdaFunctionArn: String!
  OrganizationConfigRuleTriggerTypes: [String]!
  InputParameters: String
  MaximumExecutionFrequency: String
  ResourceTypesScope: [String]
  ResourceIdScope: String
  TagKeyScope: String
  TagValueScope: String
}

input AwsConfigServiceS4Input {
  SourceAccountId: String!
  SourceRegion: String!
  ResourceId: String!
  ResourceType: String!
  ResourceName: String
}

type AwsConfigServiceS4t {
  ConfigRuleName: String!
  TargetType: String!
  TargetId: String!
  TargetVersion: String
  Parameters: JSON
  ResourceType: String
}

input AwsConfigServiceS4tInput {
  ConfigRuleName: String!
  TargetType: String!
  TargetId: String!
  TargetVersion: String
  Parameters: JSON
  ResourceType: String
}

type AwsConfigServiceS5e {
  Name: String!
  RetentionPeriodInDays: Int!
}

type AwsConfigServiceS5k {
  EvaluationResultQualifier: AwsConfigServiceS5kEvaluationResultQualifier
  OrderingTimestamp: Date
}

type AwsConfigServiceS5kEvaluationResultQualifier {
  ConfigRuleName: String
  ResourceType: String
  ResourceId: String
}

type AwsConfigServiceS5s {
  CompliantResourceCount: AwsConfigServiceS1m
  NonCompliantResourceCount: AwsConfigServiceS1m
  ComplianceSummaryTimestamp: Date
}

type AwsConfigServiceS62 {
  version: String
  accountId: String
  configurationItemCaptureTime: Date
  configurationItemStatus: String
  configurationStateId: String
  configurationItemMD5Hash: String
  arn: String
  resourceType: String
  resourceId: String
  resourceName: String
  awsRegion: String
  availabilityZone: String
  resourceCreationTime: Date
  tags: JSON
  relatedEvents: [String]
  relationships: [AwsConfigServiceS62Relationships]
  configuration: String
  supplementaryConfiguration: JSON
}

type AwsConfigServiceS62Relationships {
  resourceType: String
  resourceId: String
  resourceName: String
  relationshipName: String
}

type AwsConfigServiceS6e {
  EvaluationResultIdentifier: AwsConfigServiceS5k
  ComplianceType: String
  ResultRecordedTime: Date
  ConfigRuleInvokedTime: Date
  Annotation: String
  ResultToken: String
}

type AwsConfigServiceS7i {
  Key: String
  Value: String
}

input AwsConfigServiceS7iInput {
  Key: String
  Value: String
}

type AwsConfigServiceS7u {
  ComplianceResourceType: String!
  ComplianceResourceId: String!
  ComplianceType: String!
  Annotation: String
  OrderingTimestamp: Date!
}

input AwsConfigServiceS7uInput {
  ComplianceResourceType: String!
  ComplianceResourceId: String!
  ComplianceType: String!
  Annotation: String
  OrderingTimestamp: Date!
}

type AwsConfigServiceSb {
  version: String
  accountId: String
  configurationItemCaptureTime: Date
  configurationItemStatus: String
  configurationStateId: String
  arn: String
  resourceType: String
  resourceId: String
  resourceName: String
  awsRegion: String
  availabilityZone: String
  resourceCreationTime: Date
  configuration: String
  supplementaryConfiguration: JSON
}

input AwsConfigServiceSelectResourceConfigInput {
  Expression: String!
  Limit: Int
  NextToken: String
}

type AwsConfigServiceSelectResourceConfigOutput {
  Results: [String]
  QueryInfo: AwsConfigServiceSelectResourceConfigOutputQueryInfo
  NextToken: String
}

type AwsConfigServiceSelectResourceConfigOutputQueryInfo {
  SelectFields: [AwsConfigServiceSelectResourceConfigOutputQueryInfoSelectFields]
}

type AwsConfigServiceSelectResourceConfigOutputQueryInfoSelectFields {
  Name: String
}

type AwsConfigServiceSr {
  resourceType: String!
  resourceId: String!
}

input AwsConfigServiceSrInput {
  resourceType: String!
  resourceId: String!
}

input AwsConfigServiceStartConfigRulesEvaluationInput {
  ConfigRuleNames: [String]
}

input AwsConfigServiceStartConfigurationRecorderInput {
  ConfigurationRecorderName: String!
}

input AwsConfigServiceStartRemediationExecutionInput {
  ConfigRuleName: String!
  ResourceKeys: [AwsConfigServiceSrInput]!
}

type AwsConfigServiceStartRemediationExecutionOutput {
  FailureMessage: String
  FailedItems: [AwsConfigServiceSr]
}

input AwsConfigServiceStopConfigurationRecorderInput {
  ConfigurationRecorderName: String!
}

input AwsConfigServiceTagResourceInput {
  ResourceArn: String!
  Tags: [AwsConfigServiceS7iInput]!
}

input AwsConfigServiceUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

"""Amazon Connect Service (2017-08-08)"""
type AwsConnect {
  createUser(input: AwsConnectCreateUserInput!, config: AwsConfig): AwsConnectCreateUserOutput
  deleteUser(input: AwsConnectDeleteUserInput!, config: AwsConfig): JSON
  describeUser(input: AwsConnectDescribeUserInput!, config: AwsConfig): AwsConnectDescribeUserOutput
  describeUserHierarchyGroup(input: AwsConnectDescribeUserHierarchyGroupInput!, config: AwsConfig): AwsConnectDescribeUserHierarchyGroupOutput
  describeUserHierarchyStructure(input: AwsConnectDescribeUserHierarchyStructureInput!, config: AwsConfig): AwsConnectDescribeUserHierarchyStructureOutput
  getContactAttributes(input: AwsConnectGetContactAttributesInput!, config: AwsConfig): AwsConnectGetContactAttributesOutput
  getCurrentMetricData(input: AwsConnectGetCurrentMetricDataInput!, config: AwsConfig): AwsConnectGetCurrentMetricDataOutput
  getFederationToken(input: AwsConnectGetFederationTokenInput!, config: AwsConfig): AwsConnectGetFederationTokenOutput
  getMetricData(input: AwsConnectGetMetricDataInput!, config: AwsConfig): AwsConnectGetMetricDataOutput
  listRoutingProfiles(input: AwsConnectListRoutingProfilesInput!, config: AwsConfig): AwsConnectListRoutingProfilesOutput
  listSecurityProfiles(input: AwsConnectListSecurityProfilesInput!, config: AwsConfig): AwsConnectListSecurityProfilesOutput
  listUserHierarchyGroups(input: AwsConnectListUserHierarchyGroupsInput!, config: AwsConfig): AwsConnectListUserHierarchyGroupsOutput
  listUsers(input: AwsConnectListUsersInput!, config: AwsConfig): AwsConnectListUsersOutput
  startOutboundVoiceContact(input: AwsConnectStartOutboundVoiceContactInput!, config: AwsConfig): AwsConnectStartOutboundVoiceContactOutput
  stopContact(input: AwsConnectStopContactInput!, config: AwsConfig): JSON
  updateContactAttributes(input: AwsConnectUpdateContactAttributesInput!, config: AwsConfig): JSON
  updateUserHierarchy(input: AwsConnectUpdateUserHierarchyInput!, config: AwsConfig): JSON
  updateUserIdentityInfo(input: AwsConnectUpdateUserIdentityInfoInput!, config: AwsConfig): JSON
  updateUserPhoneConfig(input: AwsConnectUpdateUserPhoneConfigInput!, config: AwsConfig): JSON
  updateUserRoutingProfile(input: AwsConnectUpdateUserRoutingProfileInput!, config: AwsConfig): JSON
  updateUserSecurityProfiles(input: AwsConnectUpdateUserSecurityProfilesInput!, config: AwsConfig): JSON
}

input AwsConnectCreateUserInput {
  Username: String!
  Password: String
  IdentityInfo: AwsConnectS4Input
  PhoneConfig: AwsConnectS8Input!
  DirectoryUserId: String
  SecurityProfileIds: [String]!
  RoutingProfileId: String!
  HierarchyGroupId: String
  InstanceId: String!
}

type AwsConnectCreateUserOutput {
  UserId: String
  UserArn: String
}

input AwsConnectDeleteUserInput {
  InstanceId: String!
  UserId: String!
}

input AwsConnectDescribeUserHierarchyGroupInput {
  HierarchyGroupId: String!
  InstanceId: String!
}

type AwsConnectDescribeUserHierarchyGroupOutput {
  HierarchyGroup: AwsConnectDescribeUserHierarchyGroupOutputHierarchyGroup
}

type AwsConnectDescribeUserHierarchyGroupOutputHierarchyGroup {
  Id: String
  Arn: String
  Name: String
  LevelId: String
  HierarchyPath: AwsConnectDescribeUserHierarchyGroupOutputHierarchyGroupHierarchyPath
}

type AwsConnectDescribeUserHierarchyGroupOutputHierarchyGroupHierarchyPath {
  LevelOne: AwsConnectSw
  LevelTwo: AwsConnectSw
  LevelThree: AwsConnectSw
  LevelFour: AwsConnectSw
  LevelFive: AwsConnectSw
}

input AwsConnectDescribeUserHierarchyStructureInput {
  InstanceId: String!
}

type AwsConnectDescribeUserHierarchyStructureOutput {
  HierarchyStructure: AwsConnectDescribeUserHierarchyStructureOutputHierarchyStructure
}

type AwsConnectDescribeUserHierarchyStructureOutputHierarchyStructure {
  LevelOne: AwsConnectS10
  LevelTwo: AwsConnectS10
  LevelThree: AwsConnectS10
  LevelFour: AwsConnectS10
  LevelFive: AwsConnectS10
}

input AwsConnectDescribeUserInput {
  UserId: String!
  InstanceId: String!
}

type AwsConnectDescribeUserOutput {
  User: AwsConnectDescribeUserOutputUser
}

type AwsConnectDescribeUserOutputUser {
  Id: String
  Arn: String
  Username: String
  IdentityInfo: AwsConnectS4
  PhoneConfig: AwsConnectS8
  DirectoryUserId: String
  SecurityProfileIds: [String]
  RoutingProfileId: String
  HierarchyGroupId: String
}

input AwsConnectGetContactAttributesInput {
  InstanceId: String!
  InitialContactId: String!
}

type AwsConnectGetContactAttributesOutput {
  Attributes: JSON
}

input AwsConnectGetCurrentMetricDataInput {
  InstanceId: String!
  Filters: AwsConnectS19Input!
  Groupings: [String]
  CurrentMetrics: [AwsConnectS1hInput]!
  NextToken: String
  MaxResults: Int
}

type AwsConnectGetCurrentMetricDataOutput {
  NextToken: String
  MetricResults: [AwsConnectGetCurrentMetricDataOutputMetricResults]
  DataSnapshotTime: Date
}

type AwsConnectGetCurrentMetricDataOutputMetricResults {
  Dimensions: AwsConnectS1p
  Collections: [AwsConnectGetCurrentMetricDataOutputMetricResultsCollections]
}

type AwsConnectGetCurrentMetricDataOutputMetricResultsCollections {
  Metric: AwsConnectS1h
  Value: JSON
}

input AwsConnectGetFederationTokenInput {
  InstanceId: String!
}

type AwsConnectGetFederationTokenOutput {
  Credentials: AwsConnectGetFederationTokenOutputCredentials
}

type AwsConnectGetFederationTokenOutputCredentials {
  AccessToken: String
  AccessTokenExpiration: Date
  RefreshToken: String
  RefreshTokenExpiration: Date
}

input AwsConnectGetMetricDataInput {
  InstanceId: String!
  StartTime: Date!
  EndTime: Date!
  Filters: AwsConnectS19Input!
  Groupings: [String]
  HistoricalMetrics: [AwsConnectS21Input]!
  NextToken: String
  MaxResults: Int
}

type AwsConnectGetMetricDataOutput {
  NextToken: String
  MetricResults: [AwsConnectGetMetricDataOutputMetricResults]
}

type AwsConnectGetMetricDataOutputMetricResults {
  Dimensions: AwsConnectS1p
  Collections: [AwsConnectGetMetricDataOutputMetricResultsCollections]
}

type AwsConnectGetMetricDataOutputMetricResultsCollections {
  Metric: AwsConnectS21
  Value: JSON
}

input AwsConnectListRoutingProfilesInput {
  InstanceId: String!
  NextToken: String
  MaxResults: Int
}

type AwsConnectListRoutingProfilesOutput {
  RoutingProfileSummaryList: [AwsConnectListRoutingProfilesOutputRoutingProfileSummaryList]
  NextToken: String
}

type AwsConnectListRoutingProfilesOutputRoutingProfileSummaryList {
  Id: String
  Arn: String
  Name: String
}

input AwsConnectListSecurityProfilesInput {
  InstanceId: String!
  NextToken: String
  MaxResults: Int
}

type AwsConnectListSecurityProfilesOutput {
  SecurityProfileSummaryList: [AwsConnectListSecurityProfilesOutputSecurityProfileSummaryList]
  NextToken: String
}

type AwsConnectListSecurityProfilesOutputSecurityProfileSummaryList {
  Id: String
  Arn: String
  Name: String
}

input AwsConnectListUserHierarchyGroupsInput {
  InstanceId: String!
  NextToken: String
  MaxResults: Int
}

type AwsConnectListUserHierarchyGroupsOutput {
  UserHierarchyGroupSummaryList: [AwsConnectSw]
  NextToken: String
}

input AwsConnectListUsersInput {
  InstanceId: String!
  NextToken: String
  MaxResults: Int
}

type AwsConnectListUsersOutput {
  UserSummaryList: [AwsConnectListUsersOutputUserSummaryList]
  NextToken: String
}

type AwsConnectListUsersOutputUserSummaryList {
  Id: String
  Arn: String
  Username: String
}

type AwsConnectS10 {
  Id: String
  Arn: String
  Name: String
}

input AwsConnectS19Input {
  Queues: [String]
  Channels: [String]
}

type AwsConnectS1h {
  Name: String
  Unit: String
}

input AwsConnectS1hInput {
  Name: String
  Unit: String
}

type AwsConnectS1p {
  Queue: AwsConnectS1pQueue
  Channel: String
}

type AwsConnectS1pQueue {
  Id: String
  Arn: String
}

type AwsConnectS21 {
  Name: String
  Threshold: AwsConnectS21Threshold
  Statistic: String
  Unit: String
}

input AwsConnectS21Input {
  Name: String
  Threshold: AwsConnectS21ThresholdInput
  Statistic: String
  Unit: String
}

type AwsConnectS21Threshold {
  Comparison: String
  ThresholdValue: JSON
}

input AwsConnectS21ThresholdInput {
  Comparison: String
  ThresholdValue: JSON
}

type AwsConnectS4 {
  FirstName: String
  LastName: String
  Email: String
}

input AwsConnectS4Input {
  FirstName: String
  LastName: String
  Email: String
}

type AwsConnectS8 {
  PhoneType: String!
  AutoAccept: Boolean
  AfterContactWorkTimeLimit: Int
  DeskPhoneNumber: String
}

input AwsConnectS8Input {
  PhoneType: String!
  AutoAccept: Boolean
  AfterContactWorkTimeLimit: Int
  DeskPhoneNumber: String
}

input AwsConnectStartOutboundVoiceContactInput {
  DestinationPhoneNumber: String!
  ContactFlowId: String!
  InstanceId: String!
  ClientToken: String
  SourcePhoneNumber: String
  QueueId: String
  Attributes: JSON
}

type AwsConnectStartOutboundVoiceContactOutput {
  ContactId: String
}

input AwsConnectStopContactInput {
  ContactId: String!
  InstanceId: String!
}

type AwsConnectSw {
  Id: String
  Arn: String
  Name: String
}

input AwsConnectUpdateContactAttributesInput {
  InitialContactId: String!
  InstanceId: String!
  Attributes: JSON!
}

input AwsConnectUpdateUserHierarchyInput {
  HierarchyGroupId: String
  UserId: String!
  InstanceId: String!
}

input AwsConnectUpdateUserIdentityInfoInput {
  IdentityInfo: AwsConnectS4Input!
  UserId: String!
  InstanceId: String!
}

input AwsConnectUpdateUserPhoneConfigInput {
  PhoneConfig: AwsConnectS8Input!
  UserId: String!
  InstanceId: String!
}

input AwsConnectUpdateUserRoutingProfileInput {
  RoutingProfileId: String!
  UserId: String!
  InstanceId: String!
}

input AwsConnectUpdateUserSecurityProfilesInput {
  SecurityProfileIds: [String]!
  UserId: String!
  InstanceId: String!
}

"""AWS Cost Explorer Service (2017-10-25)"""
type AwsCostExplorer {
  getCostAndUsage(input: AwsCostExplorerGetCostAndUsageInput!, config: AwsConfig): AwsCostExplorerGetCostAndUsageOutput
  getCostForecast(input: AwsCostExplorerGetCostForecastInput!, config: AwsConfig): AwsCostExplorerGetCostForecastOutput
  getDimensionValues(input: AwsCostExplorerGetDimensionValuesInput!, config: AwsConfig): AwsCostExplorerGetDimensionValuesOutput
  getReservationCoverage(input: AwsCostExplorerGetReservationCoverageInput!, config: AwsConfig): AwsCostExplorerGetReservationCoverageOutput
  getReservationPurchaseRecommendation(input: AwsCostExplorerGetReservationPurchaseRecommendationInput!, config: AwsConfig): AwsCostExplorerGetReservationPurchaseRecommendationOutput
  getReservationUtilization(input: AwsCostExplorerGetReservationUtilizationInput!, config: AwsConfig): AwsCostExplorerGetReservationUtilizationOutput
  getTags(input: AwsCostExplorerGetTagsInput!, config: AwsConfig): AwsCostExplorerGetTagsOutput
  getUsageForecast(input: AwsCostExplorerGetUsageForecastInput!, config: AwsConfig): AwsCostExplorerGetUsageForecastOutput
}

input AwsCostExplorerGetCostAndUsageInput {
  TimePeriod: AwsCostExplorerS2Input!
  Granularity: String
  Filter: AwsCostExplorerS5Input
  Metrics: [String]
  GroupBy: [AwsCostExplorerSfInput]
  NextPageToken: String
}

type AwsCostExplorerGetCostAndUsageOutput {
  NextPageToken: String
  GroupDefinitions: [AwsCostExplorerSf]
  ResultsByTime: [AwsCostExplorerGetCostAndUsageOutputResultsByTime]
}

type AwsCostExplorerGetCostAndUsageOutputResultsByTime {
  TimePeriod: AwsCostExplorerS2
  Total: JSON
  Groups: [AwsCostExplorerGetCostAndUsageOutputResultsByTimeGroups]
  Estimated: Boolean
}

type AwsCostExplorerGetCostAndUsageOutputResultsByTimeGroups {
  Keys: [String]
  Metrics: JSON
}

input AwsCostExplorerGetCostForecastInput {
  TimePeriod: AwsCostExplorerS2Input!
  Metric: String!
  Granularity: String!
  Filter: AwsCostExplorerS5Input
  PredictionIntervalLevel: Int
}

type AwsCostExplorerGetCostForecastOutput {
  Total: AwsCostExplorerSo
  ForecastResultsByTime: [AwsCostExplorerS10]
}

input AwsCostExplorerGetDimensionValuesInput {
  SearchString: String
  TimePeriod: AwsCostExplorerS2Input!
  Dimension: String!
  Context: String
  NextPageToken: String
}

type AwsCostExplorerGetDimensionValuesOutput {
  DimensionValues: [AwsCostExplorerGetDimensionValuesOutputDimensionValues]!
  ReturnSize: Int!
  TotalSize: Int!
  NextPageToken: String
}

type AwsCostExplorerGetDimensionValuesOutputDimensionValues {
  Value: String
  Attributes: JSON
}

input AwsCostExplorerGetReservationCoverageInput {
  TimePeriod: AwsCostExplorerS2Input!
  GroupBy: [AwsCostExplorerSfInput]
  Granularity: String
  Filter: AwsCostExplorerS5Input
  Metrics: [String]
  NextPageToken: String
}

type AwsCostExplorerGetReservationCoverageOutput {
  CoveragesByTime: [AwsCostExplorerGetReservationCoverageOutputCoveragesByTime]!
  Total: AwsCostExplorerS1j
  NextPageToken: String
}

type AwsCostExplorerGetReservationCoverageOutputCoveragesByTime {
  TimePeriod: AwsCostExplorerS2
  Groups: [AwsCostExplorerGetReservationCoverageOutputCoveragesByTimeGroups]
  Total: AwsCostExplorerS1j
}

type AwsCostExplorerGetReservationCoverageOutputCoveragesByTimeGroups {
  Attributes: JSON
  Coverage: AwsCostExplorerS1j
}

input AwsCostExplorerGetReservationPurchaseRecommendationInput {
  AccountId: String
  Service: String!
  AccountScope: String
  LookbackPeriodInDays: String
  TermInYears: String
  PaymentOption: String
  ServiceSpecification: AwsCostExplorerS21Input
  PageSize: Int
  NextPageToken: String
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutput {
  Metadata: AwsCostExplorerGetReservationPurchaseRecommendationOutputMetadata
  Recommendations: [AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendations]
  NextPageToken: String
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutputMetadata {
  RecommendationId: String
  GenerationTimestamp: String
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendations {
  AccountScope: String
  LookbackPeriodInDays: String
  TermInYears: String
  PaymentOption: String
  ServiceSpecification: AwsCostExplorerS21
  RecommendationDetails: [AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetails]
  RecommendationSummary: AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationSummary
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetails {
  AccountId: String
  InstanceDetails: AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetails
  RecommendedNumberOfInstancesToPurchase: String
  RecommendedNormalizedUnitsToPurchase: String
  MinimumNumberOfInstancesUsedPerHour: String
  MinimumNormalizedUnitsUsedPerHour: String
  MaximumNumberOfInstancesUsedPerHour: String
  MaximumNormalizedUnitsUsedPerHour: String
  AverageNumberOfInstancesUsedPerHour: String
  AverageNormalizedUnitsUsedPerHour: String
  AverageUtilization: String
  EstimatedBreakEvenInMonths: String
  CurrencyCode: String
  EstimatedMonthlySavingsAmount: String
  EstimatedMonthlySavingsPercentage: String
  EstimatedMonthlyOnDemandCost: String
  EstimatedReservationCostForLookbackPeriod: String
  UpfrontCost: String
  RecurringStandardMonthlyCost: String
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetails {
  EC2InstanceDetails: AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetailsEC2InstanceDetails
  RDSInstanceDetails: AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetailsRDSInstanceDetails
  RedshiftInstanceDetails: AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetailsRedshiftInstanceDetails
  ElastiCacheInstanceDetails: AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetailsElastiCacheInstanceDetails
  ESInstanceDetails: AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetailsESInstanceDetails
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetailsEC2InstanceDetails {
  Family: String
  InstanceType: String
  Region: String
  AvailabilityZone: String
  Platform: String
  Tenancy: String
  CurrentGeneration: Boolean
  SizeFlexEligible: Boolean
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetailsElastiCacheInstanceDetails {
  Family: String
  NodeType: String
  Region: String
  ProductDescription: String
  CurrentGeneration: Boolean
  SizeFlexEligible: Boolean
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetailsESInstanceDetails {
  InstanceClass: String
  InstanceSize: String
  Region: String
  CurrentGeneration: Boolean
  SizeFlexEligible: Boolean
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetailsRDSInstanceDetails {
  Family: String
  InstanceType: String
  Region: String
  DatabaseEngine: String
  DatabaseEdition: String
  DeploymentOption: String
  LicenseModel: String
  CurrentGeneration: Boolean
  SizeFlexEligible: Boolean
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationDetailsInstanceDetailsRedshiftInstanceDetails {
  Family: String
  NodeType: String
  Region: String
  CurrentGeneration: Boolean
  SizeFlexEligible: Boolean
}

type AwsCostExplorerGetReservationPurchaseRecommendationOutputRecommendationsRecommendationSummary {
  TotalEstimatedMonthlySavingsAmount: String
  TotalEstimatedMonthlySavingsPercentage: String
  CurrencyCode: String
}

input AwsCostExplorerGetReservationUtilizationInput {
  TimePeriod: AwsCostExplorerS2Input!
  GroupBy: [AwsCostExplorerSfInput]
  Granularity: String
  Filter: AwsCostExplorerS5Input
  NextPageToken: String
}

type AwsCostExplorerGetReservationUtilizationOutput {
  UtilizationsByTime: [AwsCostExplorerGetReservationUtilizationOutputUtilizationsByTime]!
  Total: AwsCostExplorerS2r
  NextPageToken: String
}

type AwsCostExplorerGetReservationUtilizationOutputUtilizationsByTime {
  TimePeriod: AwsCostExplorerS2
  Groups: [AwsCostExplorerGetReservationUtilizationOutputUtilizationsByTimeGroups]
  Total: AwsCostExplorerS2r
}

type AwsCostExplorerGetReservationUtilizationOutputUtilizationsByTimeGroups {
  Key: String
  Value: String
  Attributes: JSON
  Utilization: AwsCostExplorerS2r
}

input AwsCostExplorerGetTagsInput {
  SearchString: String
  TimePeriod: AwsCostExplorerS2Input!
  TagKey: String
  NextPageToken: String
}

type AwsCostExplorerGetTagsOutput {
  NextPageToken: String
  Tags: [String]!
  ReturnSize: Int!
  TotalSize: Int!
}

input AwsCostExplorerGetUsageForecastInput {
  TimePeriod: AwsCostExplorerS2Input!
  Metric: String!
  Granularity: String!
  Filter: AwsCostExplorerS5Input
  PredictionIntervalLevel: Int
}

type AwsCostExplorerGetUsageForecastOutput {
  Total: AwsCostExplorerSo
  ForecastResultsByTime: [AwsCostExplorerS10]
}

type AwsCostExplorerS10 {
  TimePeriod: AwsCostExplorerS2
  MeanValue: String
  PredictionIntervalLowerBound: String
  PredictionIntervalUpperBound: String
}

type AwsCostExplorerS1j {
  CoverageHours: AwsCostExplorerS1jCoverageHours
  CoverageNormalizedUnits: AwsCostExplorerS1jCoverageNormalizedUnits
  CoverageCost: AwsCostExplorerS1jCoverageCost
}

type AwsCostExplorerS1jCoverageCost {
  OnDemandCost: String
}

type AwsCostExplorerS1jCoverageHours {
  OnDemandHours: String
  ReservedHours: String
  TotalRunningHours: String
  CoverageHoursPercentage: String
}

type AwsCostExplorerS1jCoverageNormalizedUnits {
  OnDemandNormalizedUnits: String
  ReservedNormalizedUnits: String
  TotalRunningNormalizedUnits: String
  CoverageNormalizedUnitsPercentage: String
}

type AwsCostExplorerS2 {
  Start: String!
  End: String!
}

type AwsCostExplorerS21 {
  EC2Specification: AwsCostExplorerS21EC2Specification
}

type AwsCostExplorerS21EC2Specification {
  OfferingClass: String
}

input AwsCostExplorerS21EC2SpecificationInput {
  OfferingClass: String
}

input AwsCostExplorerS21Input {
  EC2Specification: AwsCostExplorerS21EC2SpecificationInput
}

input AwsCostExplorerS2Input {
  Start: String!
  End: String!
}

type AwsCostExplorerS2r {
  UtilizationPercentage: String
  UtilizationPercentageInUnits: String
  PurchasedHours: String
  PurchasedUnits: String
  TotalActualHours: String
  TotalActualUnits: String
  UnusedHours: String
  UnusedUnits: String
  OnDemandCostOfRIHoursUsed: String
  NetRISavings: String
  TotalPotentialRISavings: String
  AmortizedUpfrontFee: String
  AmortizedRecurringFee: String
  TotalAmortizedFee: String
}

input AwsCostExplorerS5DimensionsInput {
  Key: String
  Values: [String]
}

input AwsCostExplorerS5Input {
  Or: [JSON]
  And: [JSON]
  Not: JSON
  Dimensions: AwsCostExplorerS5DimensionsInput
  Tags: AwsCostExplorerS5TagsInput
}

input AwsCostExplorerS5TagsInput {
  Key: String
  Values: [String]
}

type AwsCostExplorerSf {
  Type: String
  Key: String
}

input AwsCostExplorerSfInput {
  Type: String
  Key: String
}

type AwsCostExplorerSo {
  Amount: String
  Unit: String
}

"""AWS Cost and Usage Report Service (2017-01-06)"""
type AwsCUR {
  deleteReportDefinition(input: AwsCURDeleteReportDefinitionInput, config: AwsConfig): AwsCURDeleteReportDefinitionOutput
  describeReportDefinitions(input: AwsCURDescribeReportDefinitionsInput, config: AwsConfig): AwsCURDescribeReportDefinitionsOutput
  putReportDefinition(input: AwsCURPutReportDefinitionInput!, config: AwsConfig): JSON
}

input AwsCURDeleteReportDefinitionInput {
  ReportName: String
}

type AwsCURDeleteReportDefinitionOutput {
  ResponseMessage: String
}

input AwsCURDescribeReportDefinitionsInput {
  MaxResults: Int
  NextToken: String
}

type AwsCURDescribeReportDefinitionsOutput {
  ReportDefinitions: [AwsCURSa]
  NextToken: String
}

input AwsCURPutReportDefinitionInput {
  ReportDefinition: AwsCURSaInput!
}

type AwsCURSa {
  ReportName: String!
  TimeUnit: String!
  Format: String!
  Compression: String!
  AdditionalSchemaElements: [String]!
  S3Bucket: String!
  S3Prefix: String!
  S3Region: String!
  AdditionalArtifacts: [String]
  RefreshClosedReports: Boolean
  ReportVersioning: String
}

input AwsCURSaInput {
  ReportName: String!
  TimeUnit: String!
  Format: String!
  Compression: String!
  AdditionalSchemaElements: [String]!
  S3Bucket: String!
  S3Prefix: String!
  S3Region: String!
  AdditionalArtifacts: [String]
  RefreshClosedReports: Boolean
  ReportVersioning: String
}

"""AWS Data Pipeline (2012-10-29)"""
type AwsDataPipeline {
  activatePipeline(input: AwsDataPipelineActivatePipelineInput!, config: AwsConfig): JSON
  addTags(input: AwsDataPipelineAddTagsInput!, config: AwsConfig): JSON
  createPipeline(input: AwsDataPipelineCreatePipelineInput!, config: AwsConfig): AwsDataPipelineCreatePipelineOutput
  deactivatePipeline(input: AwsDataPipelineDeactivatePipelineInput!, config: AwsConfig): JSON
  deletePipeline(input: AwsDataPipelineDeletePipelineInput!, config: AwsConfig): JSON
  describeObjects(input: AwsDataPipelineDescribeObjectsInput!, config: AwsConfig): AwsDataPipelineDescribeObjectsOutput
  describePipelines(input: AwsDataPipelineDescribePipelinesInput!, config: AwsConfig): AwsDataPipelineDescribePipelinesOutput
  evaluateExpression(input: AwsDataPipelineEvaluateExpressionInput!, config: AwsConfig): AwsDataPipelineEvaluateExpressionOutput
  getPipelineDefinition(input: AwsDataPipelineGetPipelineDefinitionInput!, config: AwsConfig): AwsDataPipelineGetPipelineDefinitionOutput
  listPipelines(input: AwsDataPipelineListPipelinesInput, config: AwsConfig): AwsDataPipelineListPipelinesOutput
  pollForTask(input: AwsDataPipelinePollForTaskInput!, config: AwsConfig): AwsDataPipelinePollForTaskOutput
  putPipelineDefinition(input: AwsDataPipelinePutPipelineDefinitionInput!, config: AwsConfig): AwsDataPipelinePutPipelineDefinitionOutput
  queryObjects(input: AwsDataPipelineQueryObjectsInput!, config: AwsConfig): AwsDataPipelineQueryObjectsOutput
  removeTags(input: AwsDataPipelineRemoveTagsInput!, config: AwsConfig): JSON
  reportTaskProgress(input: AwsDataPipelineReportTaskProgressInput!, config: AwsConfig): AwsDataPipelineReportTaskProgressOutput
  reportTaskRunnerHeartbeat(input: AwsDataPipelineReportTaskRunnerHeartbeatInput!, config: AwsConfig): AwsDataPipelineReportTaskRunnerHeartbeatOutput
  setStatus(input: AwsDataPipelineSetStatusInput!, config: AwsConfig): JSON
  setTaskStatus(input: AwsDataPipelineSetTaskStatusInput!, config: AwsConfig): JSON
  validatePipelineDefinition(input: AwsDataPipelineValidatePipelineDefinitionInput!, config: AwsConfig): AwsDataPipelineValidatePipelineDefinitionOutput
}

input AwsDataPipelineActivatePipelineInput {
  pipelineId: String!
  parameterValues: [AwsDataPipelineS3Input]
  startTimestamp: Date
}

input AwsDataPipelineAddTagsInput {
  pipelineId: String!
  tags: [AwsDataPipelineSaInput]!
}

input AwsDataPipelineCreatePipelineInput {
  name: String!
  uniqueId: String!
  description: String
  tags: [AwsDataPipelineSaInput]
}

type AwsDataPipelineCreatePipelineOutput {
  pipelineId: String!
}

input AwsDataPipelineDeactivatePipelineInput {
  pipelineId: String!
  cancelActive: Boolean
}

input AwsDataPipelineDeletePipelineInput {
  pipelineId: String!
}

input AwsDataPipelineDescribeObjectsInput {
  pipelineId: String!
  objectIds: [String]!
  evaluateExpressions: Boolean
  marker: String
}

type AwsDataPipelineDescribeObjectsOutput {
  pipelineObjects: [AwsDataPipelineSr]!
  marker: String
  hasMoreResults: Boolean
}

input AwsDataPipelineDescribePipelinesInput {
  pipelineIds: [String]!
}

type AwsDataPipelineDescribePipelinesOutput {
  pipelineDescriptionList: [AwsDataPipelineDescribePipelinesOutputPipelineDescriptionList]!
}

type AwsDataPipelineDescribePipelinesOutputPipelineDescriptionList {
  pipelineId: String!
  name: String!
  fields: [AwsDataPipelineSs]!
  description: String
  tags: [AwsDataPipelineSa]
}

input AwsDataPipelineEvaluateExpressionInput {
  pipelineId: String!
  objectId: String!
  expression: String!
}

type AwsDataPipelineEvaluateExpressionOutput {
  evaluatedExpression: String!
}

input AwsDataPipelineGetPipelineDefinitionInput {
  pipelineId: String!
  version: String
}

type AwsDataPipelineGetPipelineDefinitionOutput {
  pipelineObjects: [AwsDataPipelineSr]
  parameterObjects: [AwsDataPipelineS13]
  parameterValues: [AwsDataPipelineS3]
}

input AwsDataPipelineListPipelinesInput {
  marker: String
}

type AwsDataPipelineListPipelinesOutput {
  pipelineIdList: [AwsDataPipelineListPipelinesOutputPipelineIdList]!
  marker: String
  hasMoreResults: Boolean
}

type AwsDataPipelineListPipelinesOutputPipelineIdList {
  id: String
  name: String
}

input AwsDataPipelinePollForTaskInput {
  workerGroup: String!
  hostname: String
  instanceIdentity: AwsDataPipelinePollForTaskInstanceIdentityInput
}

input AwsDataPipelinePollForTaskInstanceIdentityInput {
  document: String
  signature: String
}

type AwsDataPipelinePollForTaskOutput {
  taskObject: AwsDataPipelinePollForTaskOutputTaskObject
}

type AwsDataPipelinePollForTaskOutputTaskObject {
  taskId: String
  pipelineId: String
  attemptId: String
  objects: JSON
}

input AwsDataPipelinePutPipelineDefinitionInput {
  pipelineId: String!
  pipelineObjects: [AwsDataPipelineSrInput]!
  parameterObjects: [AwsDataPipelineS13Input]
  parameterValues: [AwsDataPipelineS3Input]
}

type AwsDataPipelinePutPipelineDefinitionOutput {
  validationErrors: [AwsDataPipelineS1l]
  validationWarnings: [AwsDataPipelineS1p]
  errored: Boolean!
}

input AwsDataPipelineQueryObjectsInput {
  pipelineId: String!
  query: AwsDataPipelineQueryObjectsQueryInput
  sphere: String!
  marker: String
  limit: Int
}

type AwsDataPipelineQueryObjectsOutput {
  ids: [String]
  marker: String
  hasMoreResults: Boolean
}

input AwsDataPipelineQueryObjectsQueryInput {
  selectors: [AwsDataPipelineQueryObjectsQuerySelectorsInput]
}

input AwsDataPipelineQueryObjectsQuerySelectorsInput {
  fieldName: String
  operator: AwsDataPipelineQueryObjectsQuerySelectorsOperatorInput
}

input AwsDataPipelineQueryObjectsQuerySelectorsOperatorInput {
  type: String
  values: [String]
}

input AwsDataPipelineRemoveTagsInput {
  pipelineId: String!
  tagKeys: [String]!
}

input AwsDataPipelineReportTaskProgressInput {
  taskId: String!
  fields: [AwsDataPipelineSsInput]
}

type AwsDataPipelineReportTaskProgressOutput {
  canceled: Boolean!
}

input AwsDataPipelineReportTaskRunnerHeartbeatInput {
  taskrunnerId: String!
  workerGroup: String
  hostname: String
}

type AwsDataPipelineReportTaskRunnerHeartbeatOutput {
  terminate: Boolean!
}

type AwsDataPipelineS13 {
  id: String!
  attributes: [AwsDataPipelineS13Attributes]!
}

type AwsDataPipelineS13Attributes {
  key: String!
  stringValue: String!
}

input AwsDataPipelineS13AttributesInput {
  key: String!
  stringValue: String!
}

input AwsDataPipelineS13Input {
  id: String!
  attributes: [AwsDataPipelineS13AttributesInput]!
}

type AwsDataPipelineS1l {
  id: String
  errors: [String]
}

type AwsDataPipelineS1p {
  id: String
  warnings: [String]
}

type AwsDataPipelineS3 {
  id: String!
  stringValue: String!
}

input AwsDataPipelineS3Input {
  id: String!
  stringValue: String!
}

type AwsDataPipelineSa {
  key: String!
  value: String!
}

input AwsDataPipelineSaInput {
  key: String!
  value: String!
}

input AwsDataPipelineSetStatusInput {
  pipelineId: String!
  objectIds: [String]!
  status: String!
}

input AwsDataPipelineSetTaskStatusInput {
  taskId: String!
  taskStatus: String!
  errorId: String
  errorMessage: String
  errorStackTrace: String
}

type AwsDataPipelineSr {
  id: String!
  name: String!
  fields: [AwsDataPipelineSs]!
}

input AwsDataPipelineSrInput {
  id: String!
  name: String!
  fields: [AwsDataPipelineSsInput]!
}

type AwsDataPipelineSs {
  key: String!
  stringValue: String
  refValue: String
}

input AwsDataPipelineSsInput {
  key: String!
  stringValue: String
  refValue: String
}

input AwsDataPipelineValidatePipelineDefinitionInput {
  pipelineId: String!
  pipelineObjects: [AwsDataPipelineSrInput]!
  parameterObjects: [AwsDataPipelineS13Input]
  parameterValues: [AwsDataPipelineS3Input]
}

type AwsDataPipelineValidatePipelineDefinitionOutput {
  validationErrors: [AwsDataPipelineS1l]
  validationWarnings: [AwsDataPipelineS1p]
  errored: Boolean!
}

"""AWS DataSync (2018-11-09)"""
type AwsDataSync {
  cancelTaskExecution(input: AwsDataSyncCancelTaskExecutionInput!, config: AwsConfig): JSON
  createAgent(input: AwsDataSyncCreateAgentInput!, config: AwsConfig): AwsDataSyncCreateAgentOutput
  createLocationEfs(input: AwsDataSyncCreateLocationEfsInput!, config: AwsConfig): AwsDataSyncCreateLocationEfsOutput
  createLocationNfs(input: AwsDataSyncCreateLocationNfsInput!, config: AwsConfig): AwsDataSyncCreateLocationNfsOutput
  createLocationS3(input: AwsDataSyncCreateLocationS3Input!, config: AwsConfig): AwsDataSyncCreateLocationS3Output
  createTask(input: AwsDataSyncCreateTaskInput!, config: AwsConfig): AwsDataSyncCreateTaskOutput
  deleteAgent(input: AwsDataSyncDeleteAgentInput!, config: AwsConfig): JSON
  deleteLocation(input: AwsDataSyncDeleteLocationInput!, config: AwsConfig): JSON
  deleteTask(input: AwsDataSyncDeleteTaskInput!, config: AwsConfig): JSON
  describeAgent(input: AwsDataSyncDescribeAgentInput!, config: AwsConfig): AwsDataSyncDescribeAgentOutput
  describeLocationEfs(input: AwsDataSyncDescribeLocationEfsInput!, config: AwsConfig): AwsDataSyncDescribeLocationEfsOutput
  describeLocationNfs(input: AwsDataSyncDescribeLocationNfsInput!, config: AwsConfig): AwsDataSyncDescribeLocationNfsOutput
  describeLocationS3(input: AwsDataSyncDescribeLocationS3Input!, config: AwsConfig): AwsDataSyncDescribeLocationS3Output
  describeTask(input: AwsDataSyncDescribeTaskInput!, config: AwsConfig): AwsDataSyncDescribeTaskOutput
  describeTaskExecution(input: AwsDataSyncDescribeTaskExecutionInput!, config: AwsConfig): AwsDataSyncDescribeTaskExecutionOutput
  listAgents(input: AwsDataSyncListAgentsInput, config: AwsConfig): AwsDataSyncListAgentsOutput
  listLocations(input: AwsDataSyncListLocationsInput, config: AwsConfig): AwsDataSyncListLocationsOutput
  listTagsForResource(input: AwsDataSyncListTagsForResourceInput!, config: AwsConfig): AwsDataSyncListTagsForResourceOutput
  listTaskExecutions(input: AwsDataSyncListTaskExecutionsInput, config: AwsConfig): AwsDataSyncListTaskExecutionsOutput
  listTasks(input: AwsDataSyncListTasksInput, config: AwsConfig): AwsDataSyncListTasksOutput
  startTaskExecution(input: AwsDataSyncStartTaskExecutionInput!, config: AwsConfig): AwsDataSyncStartTaskExecutionOutput
  tagResource(input: AwsDataSyncTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsDataSyncUntagResourceInput!, config: AwsConfig): JSON
  updateAgent(input: AwsDataSyncUpdateAgentInput!, config: AwsConfig): JSON
  updateTask(input: AwsDataSyncUpdateTaskInput!, config: AwsConfig): JSON
}

input AwsDataSyncCancelTaskExecutionInput {
  TaskExecutionArn: String!
}

input AwsDataSyncCreateAgentInput {
  ActivationKey: String!
  AgentName: String
  Tags: [AwsDataSyncS7Input]
}

type AwsDataSyncCreateAgentOutput {
  AgentArn: String
}

input AwsDataSyncCreateLocationEfsInput {
  Subdirectory: String
  EfsFilesystemArn: String!
  Ec2Config: AwsDataSyncSfInput!
  Tags: [AwsDataSyncS7Input]
}

type AwsDataSyncCreateLocationEfsOutput {
  LocationArn: String
}

input AwsDataSyncCreateLocationNfsInput {
  Subdirectory: String!
  ServerHostname: String!
  OnPremConfig: AwsDataSyncSoInput!
  MountOptions: AwsDataSyncSqInput
  Tags: [AwsDataSyncS7Input]
}

type AwsDataSyncCreateLocationNfsOutput {
  LocationArn: String
}

input AwsDataSyncCreateLocationS3Input {
  Subdirectory: String
  S3BucketArn: String!
  S3Config: AwsDataSyncSvInput!
  Tags: [AwsDataSyncS7Input]
}

type AwsDataSyncCreateLocationS3Output {
  LocationArn: String
}

input AwsDataSyncCreateTaskInput {
  SourceLocationArn: String!
  DestinationLocationArn: String!
  CloudWatchLogGroupArn: String
  Name: String
  Options: AwsDataSyncS10Input
  Excludes: [AwsDataSyncS1aInput]
  Tags: [AwsDataSyncS7Input]
}

type AwsDataSyncCreateTaskOutput {
  TaskArn: String
}

input AwsDataSyncDeleteAgentInput {
  AgentArn: String!
}

input AwsDataSyncDeleteLocationInput {
  LocationArn: String!
}

input AwsDataSyncDeleteTaskInput {
  TaskArn: String!
}

input AwsDataSyncDescribeAgentInput {
  AgentArn: String!
}

type AwsDataSyncDescribeAgentOutput {
  AgentArn: String
  Name: String
  Status: String
  LastConnectionTime: Date
  CreationTime: Date
  EndpointOptions: AwsDataSyncDescribeAgentOutputEndpointOptions
  PrivateLinkConfig: AwsDataSyncDescribeAgentOutputPrivateLinkConfig
}

type AwsDataSyncDescribeAgentOutputEndpointOptions {
  Fips: Boolean
  PrivateLink: Boolean
}

type AwsDataSyncDescribeAgentOutputPrivateLinkConfig {
  PrivateLinkEndpoint: String
  SubnetArns: [String]
  SecurityGroupArns: [String]
}

input AwsDataSyncDescribeLocationEfsInput {
  LocationArn: String!
}

type AwsDataSyncDescribeLocationEfsOutput {
  LocationArn: String
  LocationUri: String
  Ec2Config: AwsDataSyncSf
  CreationTime: Date
}

input AwsDataSyncDescribeLocationNfsInput {
  LocationArn: String!
}

type AwsDataSyncDescribeLocationNfsOutput {
  LocationArn: String
  LocationUri: String
  OnPremConfig: AwsDataSyncSo
  MountOptions: AwsDataSyncSq
  CreationTime: Date
}

input AwsDataSyncDescribeLocationS3Input {
  LocationArn: String!
}

type AwsDataSyncDescribeLocationS3Output {
  LocationArn: String
  LocationUri: String
  S3Config: AwsDataSyncSv
  CreationTime: Date
}

input AwsDataSyncDescribeTaskExecutionInput {
  TaskExecutionArn: String!
}

type AwsDataSyncDescribeTaskExecutionOutput {
  TaskExecutionArn: String
  Status: String
  Options: AwsDataSyncS10
  Excludes: [AwsDataSyncS1a]
  Includes: [AwsDataSyncS1a]
  StartTime: Date
  EstimatedFilesToTransfer: JSON
  EstimatedBytesToTransfer: JSON
  FilesTransferred: JSON
  BytesWritten: JSON
  BytesTransferred: JSON
  Result: AwsDataSyncDescribeTaskExecutionOutputResult
}

type AwsDataSyncDescribeTaskExecutionOutputResult {
  PrepareDuration: JSON
  PrepareStatus: String
  TransferDuration: JSON
  TransferStatus: String
  VerifyDuration: JSON
  VerifyStatus: String
  ErrorCode: String
  ErrorDetail: String
}

input AwsDataSyncDescribeTaskInput {
  TaskArn: String!
}

type AwsDataSyncDescribeTaskOutput {
  TaskArn: String
  Status: String
  Name: String
  CurrentTaskExecutionArn: String
  SourceLocationArn: String
  DestinationLocationArn: String
  CloudWatchLogGroupArn: String
  Options: AwsDataSyncS10
  Excludes: [AwsDataSyncS1a]
  ErrorCode: String
  ErrorDetail: String
  CreationTime: Date
}

input AwsDataSyncListAgentsInput {
  MaxResults: Int
  NextToken: String
}

type AwsDataSyncListAgentsOutput {
  Agents: [AwsDataSyncListAgentsOutputAgents]
  NextToken: String
}

type AwsDataSyncListAgentsOutputAgents {
  AgentArn: String
  Name: String
  Status: String
}

input AwsDataSyncListLocationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsDataSyncListLocationsOutput {
  Locations: [AwsDataSyncListLocationsOutputLocations]
  NextToken: String
}

type AwsDataSyncListLocationsOutputLocations {
  LocationArn: String
  LocationUri: String
}

input AwsDataSyncListTagsForResourceInput {
  ResourceArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsDataSyncListTagsForResourceOutput {
  Tags: [AwsDataSyncS7]
  NextToken: String
}

input AwsDataSyncListTaskExecutionsInput {
  TaskArn: String
  MaxResults: Int
  NextToken: String
}

type AwsDataSyncListTaskExecutionsOutput {
  TaskExecutions: [AwsDataSyncListTaskExecutionsOutputTaskExecutions]
  NextToken: String
}

type AwsDataSyncListTaskExecutionsOutputTaskExecutions {
  TaskExecutionArn: String
  Status: String
}

input AwsDataSyncListTasksInput {
  MaxResults: Int
  NextToken: String
}

type AwsDataSyncListTasksOutput {
  Tasks: [AwsDataSyncListTasksOutputTasks]
  NextToken: String
}

type AwsDataSyncListTasksOutputTasks {
  TaskArn: String
  Status: String
  Name: String
}

type AwsDataSyncS10 {
  VerifyMode: String
  Atime: String
  Mtime: String
  Uid: String
  Gid: String
  PreserveDeletedFiles: String
  PreserveDevices: String
  PosixPermissions: String
  BytesPerSecond: JSON
}

input AwsDataSyncS10Input {
  VerifyMode: String
  Atime: String
  Mtime: String
  Uid: String
  Gid: String
  PreserveDeletedFiles: String
  PreserveDevices: String
  PosixPermissions: String
  BytesPerSecond: JSON
}

type AwsDataSyncS1a {
  FilterType: String
  Value: String
}

input AwsDataSyncS1aInput {
  FilterType: String
  Value: String
}

type AwsDataSyncS7 {
  Key: String!
  Value: String
}

input AwsDataSyncS7Input {
  Key: String!
  Value: String
}

type AwsDataSyncSf {
  SubnetArn: String!
  SecurityGroupArns: [String]!
}

input AwsDataSyncSfInput {
  SubnetArn: String!
  SecurityGroupArns: [String]!
}

type AwsDataSyncSo {
  AgentArns: [String]!
}

input AwsDataSyncSoInput {
  AgentArns: [String]!
}

type AwsDataSyncSq {
  Version: String
}

input AwsDataSyncSqInput {
  Version: String
}

input AwsDataSyncStartTaskExecutionInput {
  TaskArn: String!
  OverrideOptions: AwsDataSyncS10Input
  Includes: [AwsDataSyncS1aInput]
}

type AwsDataSyncStartTaskExecutionOutput {
  TaskExecutionArn: String
}

type AwsDataSyncSv {
  BucketAccessRoleArn: String!
}

input AwsDataSyncSvInput {
  BucketAccessRoleArn: String!
}

input AwsDataSyncTagResourceInput {
  ResourceArn: String!
  Tags: [AwsDataSyncS7Input]!
}

input AwsDataSyncUntagResourceInput {
  ResourceArn: String!
  Keys: [String]!
}

input AwsDataSyncUpdateAgentInput {
  AgentArn: String!
  Name: String
}

input AwsDataSyncUpdateTaskInput {
  TaskArn: String!
  Options: AwsDataSyncS10Input
  Excludes: [AwsDataSyncS1aInput]
  Name: String
  CloudWatchLogGroupArn: String
}

"""Amazon DynamoDB Accelerator (DAX) (2017-04-19)"""
type AwsDAX {
  createCluster(input: AwsDAXCreateClusterInput!, config: AwsConfig): AwsDAXCreateClusterOutput
  createParameterGroup(input: AwsDAXCreateParameterGroupInput!, config: AwsConfig): AwsDAXCreateParameterGroupOutput
  createSubnetGroup(input: AwsDAXCreateSubnetGroupInput!, config: AwsConfig): AwsDAXCreateSubnetGroupOutput
  decreaseReplicationFactor(input: AwsDAXDecreaseReplicationFactorInput!, config: AwsConfig): AwsDAXDecreaseReplicationFactorOutput
  deleteCluster(input: AwsDAXDeleteClusterInput!, config: AwsConfig): AwsDAXDeleteClusterOutput
  deleteParameterGroup(input: AwsDAXDeleteParameterGroupInput!, config: AwsConfig): AwsDAXDeleteParameterGroupOutput
  deleteSubnetGroup(input: AwsDAXDeleteSubnetGroupInput!, config: AwsConfig): AwsDAXDeleteSubnetGroupOutput
  describeClusters(input: AwsDAXDescribeClustersInput, config: AwsConfig): AwsDAXDescribeClustersOutput
  describeDefaultParameters(input: AwsDAXDescribeDefaultParametersInput, config: AwsConfig): AwsDAXDescribeDefaultParametersOutput
  describeEvents(input: AwsDAXDescribeEventsInput, config: AwsConfig): AwsDAXDescribeEventsOutput
  describeParameterGroups(input: AwsDAXDescribeParameterGroupsInput, config: AwsConfig): AwsDAXDescribeParameterGroupsOutput
  describeParameters(input: AwsDAXDescribeParametersInput!, config: AwsConfig): AwsDAXDescribeParametersOutput
  describeSubnetGroups(input: AwsDAXDescribeSubnetGroupsInput, config: AwsConfig): AwsDAXDescribeSubnetGroupsOutput
  increaseReplicationFactor(input: AwsDAXIncreaseReplicationFactorInput!, config: AwsConfig): AwsDAXIncreaseReplicationFactorOutput
  listTags(input: AwsDAXListTagsInput!, config: AwsConfig): AwsDAXListTagsOutput
  rebootNode(input: AwsDAXRebootNodeInput!, config: AwsConfig): AwsDAXRebootNodeOutput
  tagResource(input: AwsDAXTagResourceInput!, config: AwsConfig): AwsDAXTagResourceOutput
  untagResource(input: AwsDAXUntagResourceInput!, config: AwsConfig): AwsDAXUntagResourceOutput
  updateCluster(input: AwsDAXUpdateClusterInput!, config: AwsConfig): AwsDAXUpdateClusterOutput
  updateParameterGroup(input: AwsDAXUpdateParameterGroupInput!, config: AwsConfig): AwsDAXUpdateParameterGroupOutput
  updateSubnetGroup(input: AwsDAXUpdateSubnetGroupInput!, config: AwsConfig): AwsDAXUpdateSubnetGroupOutput
}

input AwsDAXCreateClusterInput {
  ClusterName: String!
  NodeType: String!
  Description: String
  ReplicationFactor: Int!
  AvailabilityZones: [String]
  SubnetGroupName: String
  SecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  IamRoleArn: String!
  ParameterGroupName: String
  Tags: [AwsDAXS6Input]
  SSESpecification: AwsDAXCreateClusterSSESpecificationInput
}

type AwsDAXCreateClusterOutput {
  Cluster: AwsDAXSb
}

input AwsDAXCreateClusterSSESpecificationInput {
  Enabled: Boolean!
}

input AwsDAXCreateParameterGroupInput {
  ParameterGroupName: String!
  Description: String
}

type AwsDAXCreateParameterGroupOutput {
  ParameterGroup: AwsDAXSq
}

input AwsDAXCreateSubnetGroupInput {
  SubnetGroupName: String!
  Description: String
  SubnetIds: [String]!
}

type AwsDAXCreateSubnetGroupOutput {
  SubnetGroup: AwsDAXSu
}

input AwsDAXDecreaseReplicationFactorInput {
  ClusterName: String!
  NewReplicationFactor: Int!
  AvailabilityZones: [String]
  NodeIdsToRemove: [String]
}

type AwsDAXDecreaseReplicationFactorOutput {
  Cluster: AwsDAXSb
}

input AwsDAXDeleteClusterInput {
  ClusterName: String!
}

type AwsDAXDeleteClusterOutput {
  Cluster: AwsDAXSb
}

input AwsDAXDeleteParameterGroupInput {
  ParameterGroupName: String!
}

type AwsDAXDeleteParameterGroupOutput {
  DeletionMessage: String
}

input AwsDAXDeleteSubnetGroupInput {
  SubnetGroupName: String!
}

type AwsDAXDeleteSubnetGroupOutput {
  DeletionMessage: String
}

input AwsDAXDescribeClustersInput {
  ClusterNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeClustersOutput {
  NextToken: String
  Clusters: [AwsDAXSb]
}

input AwsDAXDescribeDefaultParametersInput {
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeDefaultParametersOutput {
  NextToken: String
  Parameters: [AwsDAXS1b]
}

input AwsDAXDescribeEventsInput {
  SourceName: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeEventsOutput {
  NextToken: String
  Events: [AwsDAXDescribeEventsOutputEvents]
}

type AwsDAXDescribeEventsOutputEvents {
  SourceName: String
  SourceType: String
  Message: String
  Date: Date
}

input AwsDAXDescribeParameterGroupsInput {
  ParameterGroupNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeParameterGroupsOutput {
  NextToken: String
  ParameterGroups: [AwsDAXSq]
}

input AwsDAXDescribeParametersInput {
  ParameterGroupName: String!
  Source: String
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeParametersOutput {
  NextToken: String
  Parameters: [AwsDAXS1b]
}

input AwsDAXDescribeSubnetGroupsInput {
  SubnetGroupNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeSubnetGroupsOutput {
  NextToken: String
  SubnetGroups: [AwsDAXSu]
}

input AwsDAXIncreaseReplicationFactorInput {
  ClusterName: String!
  NewReplicationFactor: Int!
  AvailabilityZones: [String]
}

type AwsDAXIncreaseReplicationFactorOutput {
  Cluster: AwsDAXSb
}

input AwsDAXListTagsInput {
  ResourceName: String!
  NextToken: String
}

type AwsDAXListTagsOutput {
  Tags: [AwsDAXS6]
  NextToken: String
}

input AwsDAXRebootNodeInput {
  ClusterName: String!
  NodeId: String!
}

type AwsDAXRebootNodeOutput {
  Cluster: AwsDAXSb
}

type AwsDAXS1b {
  ParameterName: String
  ParameterType: String
  ParameterValue: String
  NodeTypeSpecificValues: [AwsDAXS1bNodeTypeSpecificValues]
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  IsModifiable: String
  ChangeType: String
}

type AwsDAXS1bNodeTypeSpecificValues {
  NodeType: String
  Value: String
}

type AwsDAXS6 {
  Key: String
  Value: String
}

input AwsDAXS6Input {
  Key: String
  Value: String
}

type AwsDAXSb {
  ClusterName: String
  Description: String
  ClusterArn: String
  TotalNodes: Int
  ActiveNodes: Int
  NodeType: String
  Status: String
  ClusterDiscoveryEndpoint: AwsDAXSd
  NodeIdsToRemove: [String]
  Nodes: [AwsDAXSbNodes]
  PreferredMaintenanceWindow: String
  NotificationConfiguration: AwsDAXSbNotificationConfiguration
  SubnetGroup: String
  SecurityGroups: [AwsDAXSbSecurityGroups]
  IamRoleArn: String
  ParameterGroup: AwsDAXSbParameterGroup
  SSEDescription: AwsDAXSbSSEDescription
}

type AwsDAXSbNodes {
  NodeId: String
  Endpoint: AwsDAXSd
  NodeCreateTime: Date
  AvailabilityZone: String
  NodeStatus: String
  ParameterGroupStatus: String
}

type AwsDAXSbNotificationConfiguration {
  TopicArn: String
  TopicStatus: String
}

type AwsDAXSbParameterGroup {
  ParameterGroupName: String
  ParameterApplyStatus: String
  NodeIdsToReboot: [String]
}

type AwsDAXSbSecurityGroups {
  SecurityGroupIdentifier: String
  Status: String
}

type AwsDAXSbSSEDescription {
  Status: String
}

type AwsDAXSd {
  Address: String
  Port: Int
}

type AwsDAXSq {
  ParameterGroupName: String
  Description: String
}

type AwsDAXSu {
  SubnetGroupName: String
  Description: String
  VpcId: String
  Subnets: [AwsDAXSuSubnets]
}

type AwsDAXSuSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: String
}

input AwsDAXTagResourceInput {
  ResourceName: String!
  Tags: [AwsDAXS6Input]!
}

type AwsDAXTagResourceOutput {
  Tags: [AwsDAXS6]
}

input AwsDAXUntagResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

type AwsDAXUntagResourceOutput {
  Tags: [AwsDAXS6]
}

input AwsDAXUpdateClusterInput {
  ClusterName: String!
  Description: String
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  NotificationTopicStatus: String
  ParameterGroupName: String
  SecurityGroupIds: [String]
}

type AwsDAXUpdateClusterOutput {
  Cluster: AwsDAXSb
}

input AwsDAXUpdateParameterGroupInput {
  ParameterGroupName: String!
  ParameterNameValues: [AwsDAXUpdateParameterGroupParameterNameValuesInput]!
}

type AwsDAXUpdateParameterGroupOutput {
  ParameterGroup: AwsDAXSq
}

input AwsDAXUpdateParameterGroupParameterNameValuesInput {
  ParameterName: String
  ParameterValue: String
}

input AwsDAXUpdateSubnetGroupInput {
  SubnetGroupName: String!
  Description: String
  SubnetIds: [String]
}

type AwsDAXUpdateSubnetGroupOutput {
  SubnetGroup: AwsDAXSu
}

"""AWS Device Farm (2015-06-23)"""
type AwsDeviceFarm {
  createDevicePool(input: AwsDeviceFarmCreateDevicePoolInput!, config: AwsConfig): AwsDeviceFarmCreateDevicePoolOutput
  createInstanceProfile(input: AwsDeviceFarmCreateInstanceProfileInput!, config: AwsConfig): AwsDeviceFarmCreateInstanceProfileOutput
  createNetworkProfile(input: AwsDeviceFarmCreateNetworkProfileInput!, config: AwsConfig): AwsDeviceFarmCreateNetworkProfileOutput
  createProject(input: AwsDeviceFarmCreateProjectInput!, config: AwsConfig): AwsDeviceFarmCreateProjectOutput
  createRemoteAccessSession(input: AwsDeviceFarmCreateRemoteAccessSessionInput!, config: AwsConfig): AwsDeviceFarmCreateRemoteAccessSessionOutput
  createUpload(input: AwsDeviceFarmCreateUploadInput!, config: AwsConfig): AwsDeviceFarmCreateUploadOutput
  createVPCEConfiguration(input: AwsDeviceFarmCreateVPCEConfigurationInput!, config: AwsConfig): AwsDeviceFarmCreateVPCEConfigurationOutput
  deleteDevicePool(input: AwsDeviceFarmDeleteDevicePoolInput!, config: AwsConfig): JSON
  deleteInstanceProfile(input: AwsDeviceFarmDeleteInstanceProfileInput!, config: AwsConfig): JSON
  deleteNetworkProfile(input: AwsDeviceFarmDeleteNetworkProfileInput!, config: AwsConfig): JSON
  deleteProject(input: AwsDeviceFarmDeleteProjectInput!, config: AwsConfig): JSON
  deleteRemoteAccessSession(input: AwsDeviceFarmDeleteRemoteAccessSessionInput!, config: AwsConfig): JSON
  deleteRun(input: AwsDeviceFarmDeleteRunInput!, config: AwsConfig): JSON
  deleteUpload(input: AwsDeviceFarmDeleteUploadInput!, config: AwsConfig): JSON
  deleteVPCEConfiguration(input: AwsDeviceFarmDeleteVPCEConfigurationInput!, config: AwsConfig): JSON
  getAccountSettings(input: JSON, config: AwsConfig): AwsDeviceFarmGetAccountSettingsOutput
  getDevice(input: AwsDeviceFarmGetDeviceInput!, config: AwsConfig): AwsDeviceFarmGetDeviceOutput
  getDeviceInstance(input: AwsDeviceFarmGetDeviceInstanceInput!, config: AwsConfig): AwsDeviceFarmGetDeviceInstanceOutput
  getDevicePool(input: AwsDeviceFarmGetDevicePoolInput!, config: AwsConfig): AwsDeviceFarmGetDevicePoolOutput
  getDevicePoolCompatibility(input: AwsDeviceFarmGetDevicePoolCompatibilityInput!, config: AwsConfig): AwsDeviceFarmGetDevicePoolCompatibilityOutput
  getInstanceProfile(input: AwsDeviceFarmGetInstanceProfileInput!, config: AwsConfig): AwsDeviceFarmGetInstanceProfileOutput
  getJob(input: AwsDeviceFarmGetJobInput!, config: AwsConfig): AwsDeviceFarmGetJobOutput
  getNetworkProfile(input: AwsDeviceFarmGetNetworkProfileInput!, config: AwsConfig): AwsDeviceFarmGetNetworkProfileOutput
  getOfferingStatus(input: AwsDeviceFarmGetOfferingStatusInput, config: AwsConfig): AwsDeviceFarmGetOfferingStatusOutput
  getProject(input: AwsDeviceFarmGetProjectInput!, config: AwsConfig): AwsDeviceFarmGetProjectOutput
  getRemoteAccessSession(input: AwsDeviceFarmGetRemoteAccessSessionInput!, config: AwsConfig): AwsDeviceFarmGetRemoteAccessSessionOutput
  getRun(input: AwsDeviceFarmGetRunInput!, config: AwsConfig): AwsDeviceFarmGetRunOutput
  getSuite(input: AwsDeviceFarmGetSuiteInput!, config: AwsConfig): AwsDeviceFarmGetSuiteOutput
  getTest(input: AwsDeviceFarmGetTestInput!, config: AwsConfig): AwsDeviceFarmGetTestOutput
  getUpload(input: AwsDeviceFarmGetUploadInput!, config: AwsConfig): AwsDeviceFarmGetUploadOutput
  getVPCEConfiguration(input: AwsDeviceFarmGetVPCEConfigurationInput!, config: AwsConfig): AwsDeviceFarmGetVPCEConfigurationOutput
  installToRemoteAccessSession(input: AwsDeviceFarmInstallToRemoteAccessSessionInput!, config: AwsConfig): AwsDeviceFarmInstallToRemoteAccessSessionOutput
  listArtifacts(input: AwsDeviceFarmListArtifactsInput!, config: AwsConfig): AwsDeviceFarmListArtifactsOutput
  listDeviceInstances(input: AwsDeviceFarmListDeviceInstancesInput, config: AwsConfig): AwsDeviceFarmListDeviceInstancesOutput
  listDevicePools(input: AwsDeviceFarmListDevicePoolsInput!, config: AwsConfig): AwsDeviceFarmListDevicePoolsOutput
  listDevices(input: AwsDeviceFarmListDevicesInput, config: AwsConfig): AwsDeviceFarmListDevicesOutput
  listInstanceProfiles(input: AwsDeviceFarmListInstanceProfilesInput, config: AwsConfig): AwsDeviceFarmListInstanceProfilesOutput
  listJobs(input: AwsDeviceFarmListJobsInput!, config: AwsConfig): AwsDeviceFarmListJobsOutput
  listNetworkProfiles(input: AwsDeviceFarmListNetworkProfilesInput!, config: AwsConfig): AwsDeviceFarmListNetworkProfilesOutput
  listOfferingPromotions(input: AwsDeviceFarmListOfferingPromotionsInput, config: AwsConfig): AwsDeviceFarmListOfferingPromotionsOutput
  listOfferingTransactions(input: AwsDeviceFarmListOfferingTransactionsInput, config: AwsConfig): AwsDeviceFarmListOfferingTransactionsOutput
  listOfferings(input: AwsDeviceFarmListOfferingsInput, config: AwsConfig): AwsDeviceFarmListOfferingsOutput
  listProjects(input: AwsDeviceFarmListProjectsInput, config: AwsConfig): AwsDeviceFarmListProjectsOutput
  listRemoteAccessSessions(input: AwsDeviceFarmListRemoteAccessSessionsInput!, config: AwsConfig): AwsDeviceFarmListRemoteAccessSessionsOutput
  listRuns(input: AwsDeviceFarmListRunsInput!, config: AwsConfig): AwsDeviceFarmListRunsOutput
  listSamples(input: AwsDeviceFarmListSamplesInput!, config: AwsConfig): AwsDeviceFarmListSamplesOutput
  listSuites(input: AwsDeviceFarmListSuitesInput!, config: AwsConfig): AwsDeviceFarmListSuitesOutput
  listTagsForResource(input: AwsDeviceFarmListTagsForResourceInput!, config: AwsConfig): AwsDeviceFarmListTagsForResourceOutput
  listTests(input: AwsDeviceFarmListTestsInput!, config: AwsConfig): AwsDeviceFarmListTestsOutput
  listUniqueProblems(input: AwsDeviceFarmListUniqueProblemsInput!, config: AwsConfig): AwsDeviceFarmListUniqueProblemsOutput
  listUploads(input: AwsDeviceFarmListUploadsInput!, config: AwsConfig): AwsDeviceFarmListUploadsOutput
  listVPCEConfigurations(input: AwsDeviceFarmListVPCEConfigurationsInput, config: AwsConfig): AwsDeviceFarmListVPCEConfigurationsOutput
  purchaseOffering(input: AwsDeviceFarmPurchaseOfferingInput, config: AwsConfig): AwsDeviceFarmPurchaseOfferingOutput
  renewOffering(input: AwsDeviceFarmRenewOfferingInput, config: AwsConfig): AwsDeviceFarmRenewOfferingOutput
  scheduleRun(input: AwsDeviceFarmScheduleRunInput!, config: AwsConfig): AwsDeviceFarmScheduleRunOutput
  stopJob(input: AwsDeviceFarmStopJobInput!, config: AwsConfig): AwsDeviceFarmStopJobOutput
  stopRemoteAccessSession(input: AwsDeviceFarmStopRemoteAccessSessionInput!, config: AwsConfig): AwsDeviceFarmStopRemoteAccessSessionOutput
  stopRun(input: AwsDeviceFarmStopRunInput!, config: AwsConfig): AwsDeviceFarmStopRunOutput
  tagResource(input: AwsDeviceFarmTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsDeviceFarmUntagResourceInput!, config: AwsConfig): JSON
  updateDeviceInstance(input: AwsDeviceFarmUpdateDeviceInstanceInput!, config: AwsConfig): AwsDeviceFarmUpdateDeviceInstanceOutput
  updateDevicePool(input: AwsDeviceFarmUpdateDevicePoolInput!, config: AwsConfig): AwsDeviceFarmUpdateDevicePoolOutput
  updateInstanceProfile(input: AwsDeviceFarmUpdateInstanceProfileInput!, config: AwsConfig): AwsDeviceFarmUpdateInstanceProfileOutput
  updateNetworkProfile(input: AwsDeviceFarmUpdateNetworkProfileInput!, config: AwsConfig): AwsDeviceFarmUpdateNetworkProfileOutput
  updateProject(input: AwsDeviceFarmUpdateProjectInput!, config: AwsConfig): AwsDeviceFarmUpdateProjectOutput
  updateUpload(input: AwsDeviceFarmUpdateUploadInput!, config: AwsConfig): AwsDeviceFarmUpdateUploadOutput
  updateVPCEConfiguration(input: AwsDeviceFarmUpdateVPCEConfigurationInput!, config: AwsConfig): AwsDeviceFarmUpdateVPCEConfigurationOutput
}

input AwsDeviceFarmCreateDevicePoolInput {
  projectArn: String!
  name: String!
  description: String
  rules: [AwsDeviceFarmS5Input]!
  maxDevices: Int
}

type AwsDeviceFarmCreateDevicePoolOutput {
  devicePool: AwsDeviceFarmSc
}

input AwsDeviceFarmCreateInstanceProfileInput {
  name: String!
  description: String
  packageCleanup: Boolean
  excludeAppPackagesFromCleanup: [String]
  rebootAfterUse: Boolean
}

type AwsDeviceFarmCreateInstanceProfileOutput {
  instanceProfile: AwsDeviceFarmSi
}

input AwsDeviceFarmCreateNetworkProfileInput {
  projectArn: String!
  name: String!
  description: String
  type: String
  uplinkBandwidthBits: JSON
  downlinkBandwidthBits: JSON
  uplinkDelayMs: JSON
  downlinkDelayMs: JSON
  uplinkJitterMs: JSON
  downlinkJitterMs: JSON
  uplinkLossPercent: Int
  downlinkLossPercent: Int
}

type AwsDeviceFarmCreateNetworkProfileOutput {
  networkProfile: AwsDeviceFarmSo
}

input AwsDeviceFarmCreateProjectInput {
  name: String!
  defaultJobTimeoutMinutes: Int
}

type AwsDeviceFarmCreateProjectOutput {
  project: AwsDeviceFarmSs
}

input AwsDeviceFarmCreateRemoteAccessSessionConfigurationInput {
  billingMethod: String
  vpceConfigurationArns: [String]
}

input AwsDeviceFarmCreateRemoteAccessSessionInput {
  projectArn: String!
  deviceArn: String!
  instanceArn: String
  sshPublicKey: String
  remoteDebugEnabled: Boolean
  remoteRecordEnabled: Boolean
  remoteRecordAppArn: String
  name: String
  clientId: String
  configuration: AwsDeviceFarmCreateRemoteAccessSessionConfigurationInput
  interactionMode: String
  skipAppResign: Boolean
}

type AwsDeviceFarmCreateRemoteAccessSessionOutput {
  remoteAccessSession: AwsDeviceFarmS12
}

input AwsDeviceFarmCreateUploadInput {
  projectArn: String!
  name: String!
  type: String!
  contentType: String
}

type AwsDeviceFarmCreateUploadOutput {
  upload: AwsDeviceFarmS1n
}

input AwsDeviceFarmCreateVPCEConfigurationInput {
  vpceConfigurationName: String!
  vpceServiceName: String!
  serviceDnsName: String!
  vpceConfigurationDescription: String
}

type AwsDeviceFarmCreateVPCEConfigurationOutput {
  vpceConfiguration: AwsDeviceFarmS1y
}

input AwsDeviceFarmDeleteDevicePoolInput {
  arn: String!
}

input AwsDeviceFarmDeleteInstanceProfileInput {
  arn: String!
}

input AwsDeviceFarmDeleteNetworkProfileInput {
  arn: String!
}

input AwsDeviceFarmDeleteProjectInput {
  arn: String!
}

input AwsDeviceFarmDeleteRemoteAccessSessionInput {
  arn: String!
}

input AwsDeviceFarmDeleteRunInput {
  arn: String!
}

input AwsDeviceFarmDeleteUploadInput {
  arn: String!
}

input AwsDeviceFarmDeleteVPCEConfigurationInput {
  arn: String!
}

type AwsDeviceFarmGetAccountSettingsOutput {
  accountSettings: AwsDeviceFarmGetAccountSettingsOutputAccountSettings
}

type AwsDeviceFarmGetAccountSettingsOutputAccountSettings {
  awsAccountNumber: String
  unmeteredDevices: JSON
  unmeteredRemoteAccessDevices: JSON
  maxJobTimeoutMinutes: Int
  trialMinutes: AwsDeviceFarmGetAccountSettingsOutputAccountSettingsTrialMinutes
  maxSlots: JSON
  defaultJobTimeoutMinutes: Int
  skipAppResign: Boolean
}

type AwsDeviceFarmGetAccountSettingsOutputAccountSettingsTrialMinutes {
  total: JSON
  remaining: JSON
}

input AwsDeviceFarmGetDeviceInput {
  arn: String!
}

input AwsDeviceFarmGetDeviceInstanceInput {
  arn: String!
}

type AwsDeviceFarmGetDeviceInstanceOutput {
  deviceInstance: AwsDeviceFarmS1c
}

type AwsDeviceFarmGetDeviceOutput {
  device: AwsDeviceFarmS15
}

input AwsDeviceFarmGetDevicePoolCompatibilityInput {
  devicePoolArn: String!
  appArn: String
  testType: String
  test: AwsDeviceFarmS2uInput
  configuration: AwsDeviceFarmS2xInput
}

type AwsDeviceFarmGetDevicePoolCompatibilityOutput {
  compatibleDevices: [AwsDeviceFarmS35]
  incompatibleDevices: [AwsDeviceFarmS35]
}

input AwsDeviceFarmGetDevicePoolInput {
  arn: String!
}

type AwsDeviceFarmGetDevicePoolOutput {
  devicePool: AwsDeviceFarmSc
}

input AwsDeviceFarmGetInstanceProfileInput {
  arn: String!
}

type AwsDeviceFarmGetInstanceProfileOutput {
  instanceProfile: AwsDeviceFarmSi
}

input AwsDeviceFarmGetJobInput {
  arn: String!
}

type AwsDeviceFarmGetJobOutput {
  job: AwsDeviceFarmS3d
}

input AwsDeviceFarmGetNetworkProfileInput {
  arn: String!
}

type AwsDeviceFarmGetNetworkProfileOutput {
  networkProfile: AwsDeviceFarmSo
}

input AwsDeviceFarmGetOfferingStatusInput {
  nextToken: String
}

type AwsDeviceFarmGetOfferingStatusOutput {
  current: JSON
  nextPeriod: JSON
  nextToken: String
}

input AwsDeviceFarmGetProjectInput {
  arn: String!
}

type AwsDeviceFarmGetProjectOutput {
  project: AwsDeviceFarmSs
}

input AwsDeviceFarmGetRemoteAccessSessionInput {
  arn: String!
}

type AwsDeviceFarmGetRemoteAccessSessionOutput {
  remoteAccessSession: AwsDeviceFarmS12
}

input AwsDeviceFarmGetRunInput {
  arn: String!
}

type AwsDeviceFarmGetRunOutput {
  run: AwsDeviceFarmS42
}

input AwsDeviceFarmGetSuiteInput {
  arn: String!
}

type AwsDeviceFarmGetSuiteOutput {
  suite: AwsDeviceFarmS4b
}

input AwsDeviceFarmGetTestInput {
  arn: String!
}

type AwsDeviceFarmGetTestOutput {
  test: AwsDeviceFarmS4e
}

input AwsDeviceFarmGetUploadInput {
  arn: String!
}

type AwsDeviceFarmGetUploadOutput {
  upload: AwsDeviceFarmS1n
}

input AwsDeviceFarmGetVPCEConfigurationInput {
  arn: String!
}

type AwsDeviceFarmGetVPCEConfigurationOutput {
  vpceConfiguration: AwsDeviceFarmS1y
}

input AwsDeviceFarmInstallToRemoteAccessSessionInput {
  remoteAccessSessionArn: String!
  appArn: String!
}

type AwsDeviceFarmInstallToRemoteAccessSessionOutput {
  appUpload: AwsDeviceFarmS1n
}

input AwsDeviceFarmListArtifactsInput {
  arn: String!
  type: String!
  nextToken: String
}

type AwsDeviceFarmListArtifactsOutput {
  artifacts: [AwsDeviceFarmListArtifactsOutputArtifacts]
  nextToken: String
}

type AwsDeviceFarmListArtifactsOutputArtifacts {
  arn: String
  name: String
  type: String
  extension: String
  url: String
}

input AwsDeviceFarmListDeviceInstancesInput {
  maxResults: Int
  nextToken: String
}

type AwsDeviceFarmListDeviceInstancesOutput {
  deviceInstances: [AwsDeviceFarmS1c]
  nextToken: String
}

input AwsDeviceFarmListDevicePoolsInput {
  arn: String!
  type: String
  nextToken: String
}

type AwsDeviceFarmListDevicePoolsOutput {
  devicePools: [AwsDeviceFarmSc]
  nextToken: String
}

input AwsDeviceFarmListDevicesInput {
  arn: String
  nextToken: String
  filters: [AwsDeviceFarmS45Input]
}

type AwsDeviceFarmListDevicesOutput {
  devices: [AwsDeviceFarmS15]
  nextToken: String
}

input AwsDeviceFarmListInstanceProfilesInput {
  maxResults: Int
  nextToken: String
}

type AwsDeviceFarmListInstanceProfilesOutput {
  instanceProfiles: [AwsDeviceFarmSi]
  nextToken: String
}

input AwsDeviceFarmListJobsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListJobsOutput {
  jobs: [AwsDeviceFarmS3d]
  nextToken: String
}

input AwsDeviceFarmListNetworkProfilesInput {
  arn: String!
  type: String
  nextToken: String
}

type AwsDeviceFarmListNetworkProfilesOutput {
  networkProfiles: [AwsDeviceFarmSo]
  nextToken: String
}

input AwsDeviceFarmListOfferingPromotionsInput {
  nextToken: String
}

type AwsDeviceFarmListOfferingPromotionsOutput {
  offeringPromotions: [AwsDeviceFarmListOfferingPromotionsOutputOfferingPromotions]
  nextToken: String
}

type AwsDeviceFarmListOfferingPromotionsOutputOfferingPromotions {
  id: String
  description: String
}

input AwsDeviceFarmListOfferingsInput {
  nextToken: String
}

type AwsDeviceFarmListOfferingsOutput {
  offerings: [AwsDeviceFarmS3p]
  nextToken: String
}

input AwsDeviceFarmListOfferingTransactionsInput {
  nextToken: String
}

type AwsDeviceFarmListOfferingTransactionsOutput {
  offeringTransactions: [AwsDeviceFarmS5g]
  nextToken: String
}

input AwsDeviceFarmListProjectsInput {
  arn: String
  nextToken: String
}

type AwsDeviceFarmListProjectsOutput {
  projects: [AwsDeviceFarmSs]
  nextToken: String
}

input AwsDeviceFarmListRemoteAccessSessionsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListRemoteAccessSessionsOutput {
  remoteAccessSessions: [AwsDeviceFarmS12]
  nextToken: String
}

input AwsDeviceFarmListRunsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListRunsOutput {
  runs: [AwsDeviceFarmS42]
  nextToken: String
}

input AwsDeviceFarmListSamplesInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListSamplesOutput {
  samples: [AwsDeviceFarmListSamplesOutputSamples]
  nextToken: String
}

type AwsDeviceFarmListSamplesOutputSamples {
  arn: String
  type: String
  url: String
}

input AwsDeviceFarmListSuitesInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListSuitesOutput {
  suites: [AwsDeviceFarmS4b]
  nextToken: String
}

input AwsDeviceFarmListTagsForResourceInput {
  ResourceARN: String!
}

type AwsDeviceFarmListTagsForResourceOutput {
  Tags: [AwsDeviceFarmS64]
}

input AwsDeviceFarmListTestsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListTestsOutput {
  tests: [AwsDeviceFarmS4e]
  nextToken: String
}

input AwsDeviceFarmListUniqueProblemsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListUniqueProblemsOutput {
  uniqueProblems: JSON
  nextToken: String
}

input AwsDeviceFarmListUploadsInput {
  arn: String!
  type: String
  nextToken: String
}

type AwsDeviceFarmListUploadsOutput {
  uploads: [AwsDeviceFarmS1n]
  nextToken: String
}

input AwsDeviceFarmListVPCEConfigurationsInput {
  maxResults: Int
  nextToken: String
}

type AwsDeviceFarmListVPCEConfigurationsOutput {
  vpceConfigurations: [AwsDeviceFarmS1y]
  nextToken: String
}

input AwsDeviceFarmPurchaseOfferingInput {
  offeringId: String
  quantity: Int
  offeringPromotionId: String
}

type AwsDeviceFarmPurchaseOfferingOutput {
  offeringTransaction: AwsDeviceFarmS5g
}

input AwsDeviceFarmRenewOfferingInput {
  offeringId: String
  quantity: Int
}

type AwsDeviceFarmRenewOfferingOutput {
  offeringTransaction: AwsDeviceFarmS5g
}

type AwsDeviceFarmS12 {
  arn: String
  name: String
  created: Date
  status: String
  result: String
  message: String
  started: Date
  stopped: Date
  device: AwsDeviceFarmS15
  instanceArn: String
  remoteDebugEnabled: Boolean
  remoteRecordEnabled: Boolean
  remoteRecordAppArn: String
  hostAddress: String
  clientId: String
  billingMethod: String
  deviceMinutes: AwsDeviceFarmS1h
  endpoint: String
  deviceUdid: String
  interactionMode: String
  skipAppResign: Boolean
}

type AwsDeviceFarmS15 {
  arn: String
  name: String
  manufacturer: String
  model: String
  modelId: String
  formFactor: String
  platform: String
  os: String
  cpu: AwsDeviceFarmS15Cpu
  resolution: AwsDeviceFarmS15Resolution
  heapSize: JSON
  memory: JSON
  image: String
  carrier: String
  radio: String
  remoteAccessEnabled: Boolean
  remoteDebugEnabled: Boolean
  fleetType: String
  fleetName: String
  instances: [AwsDeviceFarmS1c]
  availability: String
}

type AwsDeviceFarmS15Cpu {
  frequency: String
  architecture: String
  clock: JSON
}

type AwsDeviceFarmS15Resolution {
  width: Int
  height: Int
}

type AwsDeviceFarmS1c {
  arn: String
  deviceArn: String
  labels: [String]
  status: String
  udid: String
  instanceProfile: AwsDeviceFarmSi
}

type AwsDeviceFarmS1h {
  total: JSON
  metered: JSON
  unmetered: JSON
}

type AwsDeviceFarmS1n {
  arn: String
  name: String
  created: Date
  type: String
  status: String
  url: String
  metadata: String
  contentType: String
  message: String
  category: String
}

type AwsDeviceFarmS1y {
  arn: String
  vpceConfigurationName: String
  vpceServiceName: String
  serviceDnsName: String
  vpceConfigurationDescription: String
}

input AwsDeviceFarmS2uInput {
  type: String!
  testPackageArn: String
  testSpecArn: String
  filter: String
  parameters: JSON
}

input AwsDeviceFarmS2xInput {
  extraDataPackageArn: String
  networkProfileArn: String
  locale: String
  location: AwsDeviceFarmS2yInput
  vpceConfigurationArns: [String]
  customerArtifactPaths: AwsDeviceFarmS2zInput
  radios: AwsDeviceFarmS33Input
  auxiliaryApps: [String]
  billingMethod: String
}

type AwsDeviceFarmS2y {
  latitude: JSON!
  longitude: JSON!
}

input AwsDeviceFarmS2yInput {
  latitude: JSON!
  longitude: JSON!
}

type AwsDeviceFarmS2z {
  iosPaths: [String]
  androidPaths: [String]
  deviceHostPaths: [String]
}

input AwsDeviceFarmS2zInput {
  iosPaths: [String]
  androidPaths: [String]
  deviceHostPaths: [String]
}

type AwsDeviceFarmS33 {
  wifi: Boolean
  bluetooth: Boolean
  nfc: Boolean
  gps: Boolean
}

input AwsDeviceFarmS33Input {
  wifi: Boolean
  bluetooth: Boolean
  nfc: Boolean
  gps: Boolean
}

type AwsDeviceFarmS35 {
  device: AwsDeviceFarmS15
  compatible: Boolean
  incompatibilityMessages: [AwsDeviceFarmS35IncompatibilityMessages]
}

type AwsDeviceFarmS35IncompatibilityMessages {
  message: String
  type: String
}

type AwsDeviceFarmS3d {
  arn: String
  name: String
  type: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDeviceFarmS3e
  message: String
  device: AwsDeviceFarmS15
  instanceArn: String
  deviceMinutes: AwsDeviceFarmS1h
  videoEndpoint: String
  videoCapture: Boolean
}

type AwsDeviceFarmS3e {
  total: Int
  passed: Int
  failed: Int
  warned: Int
  errored: Int
  stopped: Int
  skipped: Int
}

type AwsDeviceFarmS3n {
  type: String
  offering: AwsDeviceFarmS3p
  quantity: Int
  effectiveOn: Date
}

type AwsDeviceFarmS3p {
  id: String
  description: String
  type: String
  platform: String
  recurringCharges: [AwsDeviceFarmS3pRecurringCharges]
}

type AwsDeviceFarmS3pRecurringCharges {
  cost: AwsDeviceFarmS3t
  frequency: String
}

type AwsDeviceFarmS3t {
  amount: JSON
  currencyCode: String
}

type AwsDeviceFarmS42 {
  arn: String
  name: String
  type: String
  platform: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDeviceFarmS3e
  message: String
  totalJobs: Int
  completedJobs: Int
  billingMethod: String
  deviceMinutes: AwsDeviceFarmS1h
  networkProfile: AwsDeviceFarmSo
  parsingResultUrl: String
  resultCode: String
  seed: Int
  appUpload: String
  eventCount: Int
  jobTimeoutMinutes: Int
  devicePoolArn: String
  locale: String
  radios: AwsDeviceFarmS33
  location: AwsDeviceFarmS2y
  customerArtifactPaths: AwsDeviceFarmS2z
  webUrl: String
  skipAppResign: Boolean
  testSpecArn: String
  deviceSelectionResult: AwsDeviceFarmS42DeviceSelectionResult
}

type AwsDeviceFarmS42DeviceSelectionResult {
  filters: [AwsDeviceFarmS45]
  matchedDevicesCount: Int
  maxDevices: Int
}

type AwsDeviceFarmS45 {
  attribute: String
  operator: String
  values: [String]
}

input AwsDeviceFarmS45Input {
  attribute: String
  operator: String
  values: [String]
}

type AwsDeviceFarmS4b {
  arn: String
  name: String
  type: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDeviceFarmS3e
  message: String
  deviceMinutes: AwsDeviceFarmS1h
}

type AwsDeviceFarmS4e {
  arn: String
  name: String
  type: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDeviceFarmS3e
  message: String
  deviceMinutes: AwsDeviceFarmS1h
}

type AwsDeviceFarmS5 {
  attribute: String
  operator: String
  value: String
}

type AwsDeviceFarmS5g {
  offeringStatus: AwsDeviceFarmS3n
  transactionId: String
  offeringPromotionId: String
  createdOn: Date
  cost: AwsDeviceFarmS3t
}

input AwsDeviceFarmS5Input {
  attribute: String
  operator: String
  value: String
}

type AwsDeviceFarmS64 {
  Key: String!
  Value: String!
}

input AwsDeviceFarmS64Input {
  Key: String!
  Value: String!
}

type AwsDeviceFarmSc {
  arn: String
  name: String
  description: String
  type: String
  rules: [AwsDeviceFarmS5]
  maxDevices: Int
}

input AwsDeviceFarmScheduleRunDeviceSelectionConfigurationInput {
  filters: [AwsDeviceFarmS45Input]!
  maxDevices: Int!
}

input AwsDeviceFarmScheduleRunExecutionConfigurationInput {
  jobTimeoutMinutes: Int
  accountsCleanup: Boolean
  appPackagesCleanup: Boolean
  videoCapture: Boolean
  skipAppResign: Boolean
}

input AwsDeviceFarmScheduleRunInput {
  projectArn: String!
  appArn: String
  devicePoolArn: String
  deviceSelectionConfiguration: AwsDeviceFarmScheduleRunDeviceSelectionConfigurationInput
  name: String
  test: AwsDeviceFarmS2uInput!
  configuration: AwsDeviceFarmS2xInput
  executionConfiguration: AwsDeviceFarmScheduleRunExecutionConfigurationInput
}

type AwsDeviceFarmScheduleRunOutput {
  run: AwsDeviceFarmS42
}

type AwsDeviceFarmSi {
  arn: String
  packageCleanup: Boolean
  excludeAppPackagesFromCleanup: [String]
  rebootAfterUse: Boolean
  name: String
  description: String
}

type AwsDeviceFarmSo {
  arn: String
  name: String
  description: String
  type: String
  uplinkBandwidthBits: JSON
  downlinkBandwidthBits: JSON
  uplinkDelayMs: JSON
  downlinkDelayMs: JSON
  uplinkJitterMs: JSON
  downlinkJitterMs: JSON
  uplinkLossPercent: Int
  downlinkLossPercent: Int
}

type AwsDeviceFarmSs {
  arn: String
  name: String
  defaultJobTimeoutMinutes: Int
  created: Date
}

input AwsDeviceFarmStopJobInput {
  arn: String!
}

type AwsDeviceFarmStopJobOutput {
  job: AwsDeviceFarmS3d
}

input AwsDeviceFarmStopRemoteAccessSessionInput {
  arn: String!
}

type AwsDeviceFarmStopRemoteAccessSessionOutput {
  remoteAccessSession: AwsDeviceFarmS12
}

input AwsDeviceFarmStopRunInput {
  arn: String!
}

type AwsDeviceFarmStopRunOutput {
  run: AwsDeviceFarmS42
}

input AwsDeviceFarmTagResourceInput {
  ResourceARN: String!
  Tags: [AwsDeviceFarmS64Input]!
}

input AwsDeviceFarmUntagResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

input AwsDeviceFarmUpdateDeviceInstanceInput {
  arn: String!
  profileArn: String
  labels: [String]
}

type AwsDeviceFarmUpdateDeviceInstanceOutput {
  deviceInstance: AwsDeviceFarmS1c
}

input AwsDeviceFarmUpdateDevicePoolInput {
  arn: String!
  name: String
  description: String
  rules: [AwsDeviceFarmS5Input]
  maxDevices: Int
  clearMaxDevices: Boolean
}

type AwsDeviceFarmUpdateDevicePoolOutput {
  devicePool: AwsDeviceFarmSc
}

input AwsDeviceFarmUpdateInstanceProfileInput {
  arn: String!
  name: String
  description: String
  packageCleanup: Boolean
  excludeAppPackagesFromCleanup: [String]
  rebootAfterUse: Boolean
}

type AwsDeviceFarmUpdateInstanceProfileOutput {
  instanceProfile: AwsDeviceFarmSi
}

input AwsDeviceFarmUpdateNetworkProfileInput {
  arn: String!
  name: String
  description: String
  type: String
  uplinkBandwidthBits: JSON
  downlinkBandwidthBits: JSON
  uplinkDelayMs: JSON
  downlinkDelayMs: JSON
  uplinkJitterMs: JSON
  downlinkJitterMs: JSON
  uplinkLossPercent: Int
  downlinkLossPercent: Int
}

type AwsDeviceFarmUpdateNetworkProfileOutput {
  networkProfile: AwsDeviceFarmSo
}

input AwsDeviceFarmUpdateProjectInput {
  arn: String!
  name: String
  defaultJobTimeoutMinutes: Int
}

type AwsDeviceFarmUpdateProjectOutput {
  project: AwsDeviceFarmSs
}

input AwsDeviceFarmUpdateUploadInput {
  arn: String!
  name: String
  contentType: String
  editContent: Boolean
}

type AwsDeviceFarmUpdateUploadOutput {
  upload: AwsDeviceFarmS1n
}

input AwsDeviceFarmUpdateVPCEConfigurationInput {
  arn: String!
  vpceConfigurationName: String
  vpceServiceName: String
  serviceDnsName: String
  vpceConfigurationDescription: String
}

type AwsDeviceFarmUpdateVPCEConfigurationOutput {
  vpceConfiguration: AwsDeviceFarmS1y
}

"""AWS Direct Connect (2012-10-25)"""
type AwsDirectConnect {
  acceptDirectConnectGatewayAssociationProposal(input: AwsDirectConnectAcceptDirectConnectGatewayAssociationProposalInput!, config: AwsConfig): AwsDirectConnectAcceptDirectConnectGatewayAssociationProposalOutput
  allocateConnectionOnInterconnect(input: AwsDirectConnectAllocateConnectionOnInterconnectInput!, config: AwsConfig): JSON
  allocateHostedConnection(input: AwsDirectConnectAllocateHostedConnectionInput!, config: AwsConfig): JSON
  allocatePrivateVirtualInterface(input: AwsDirectConnectAllocatePrivateVirtualInterfaceInput!, config: AwsConfig): JSON
  allocatePublicVirtualInterface(input: AwsDirectConnectAllocatePublicVirtualInterfaceInput!, config: AwsConfig): JSON
  allocateTransitVirtualInterface(input: AwsDirectConnectAllocateTransitVirtualInterfaceInput!, config: AwsConfig): AwsDirectConnectAllocateTransitVirtualInterfaceOutput
  associateConnectionWithLag(input: AwsDirectConnectAssociateConnectionWithLagInput!, config: AwsConfig): JSON
  associateHostedConnection(input: AwsDirectConnectAssociateHostedConnectionInput!, config: AwsConfig): JSON
  associateVirtualInterface(input: AwsDirectConnectAssociateVirtualInterfaceInput!, config: AwsConfig): JSON
  confirmConnection(input: AwsDirectConnectConfirmConnectionInput!, config: AwsConfig): AwsDirectConnectConfirmConnectionOutput
  confirmPrivateVirtualInterface(input: AwsDirectConnectConfirmPrivateVirtualInterfaceInput!, config: AwsConfig): AwsDirectConnectConfirmPrivateVirtualInterfaceOutput
  confirmPublicVirtualInterface(input: AwsDirectConnectConfirmPublicVirtualInterfaceInput!, config: AwsConfig): AwsDirectConnectConfirmPublicVirtualInterfaceOutput
  confirmTransitVirtualInterface(input: AwsDirectConnectConfirmTransitVirtualInterfaceInput!, config: AwsConfig): AwsDirectConnectConfirmTransitVirtualInterfaceOutput
  createBGPPeer(input: AwsDirectConnectCreateBGPPeerInput, config: AwsConfig): AwsDirectConnectCreateBGPPeerOutput
  createConnection(input: AwsDirectConnectCreateConnectionInput!, config: AwsConfig): JSON
  createDirectConnectGateway(input: AwsDirectConnectCreateDirectConnectGatewayInput!, config: AwsConfig): AwsDirectConnectCreateDirectConnectGatewayOutput
  createDirectConnectGatewayAssociation(input: AwsDirectConnectCreateDirectConnectGatewayAssociationInput!, config: AwsConfig): AwsDirectConnectCreateDirectConnectGatewayAssociationOutput
  createDirectConnectGatewayAssociationProposal(input: AwsDirectConnectCreateDirectConnectGatewayAssociationProposalInput!, config: AwsConfig): AwsDirectConnectCreateDirectConnectGatewayAssociationProposalOutput
  createInterconnect(input: AwsDirectConnectCreateInterconnectInput!, config: AwsConfig): JSON
  createLag(input: AwsDirectConnectCreateLagInput!, config: AwsConfig): JSON
  createPrivateVirtualInterface(input: AwsDirectConnectCreatePrivateVirtualInterfaceInput!, config: AwsConfig): JSON
  createPublicVirtualInterface(input: AwsDirectConnectCreatePublicVirtualInterfaceInput!, config: AwsConfig): JSON
  createTransitVirtualInterface(input: AwsDirectConnectCreateTransitVirtualInterfaceInput!, config: AwsConfig): AwsDirectConnectCreateTransitVirtualInterfaceOutput
  deleteBGPPeer(input: AwsDirectConnectDeleteBGPPeerInput, config: AwsConfig): AwsDirectConnectDeleteBGPPeerOutput
  deleteConnection(input: AwsDirectConnectDeleteConnectionInput!, config: AwsConfig): JSON
  deleteDirectConnectGateway(input: AwsDirectConnectDeleteDirectConnectGatewayInput!, config: AwsConfig): AwsDirectConnectDeleteDirectConnectGatewayOutput
  deleteDirectConnectGatewayAssociation(input: AwsDirectConnectDeleteDirectConnectGatewayAssociationInput, config: AwsConfig): AwsDirectConnectDeleteDirectConnectGatewayAssociationOutput
  deleteDirectConnectGatewayAssociationProposal(input: AwsDirectConnectDeleteDirectConnectGatewayAssociationProposalInput!, config: AwsConfig): AwsDirectConnectDeleteDirectConnectGatewayAssociationProposalOutput
  deleteInterconnect(input: AwsDirectConnectDeleteInterconnectInput!, config: AwsConfig): AwsDirectConnectDeleteInterconnectOutput
  deleteLag(input: AwsDirectConnectDeleteLagInput!, config: AwsConfig): JSON
  deleteVirtualInterface(input: AwsDirectConnectDeleteVirtualInterfaceInput!, config: AwsConfig): AwsDirectConnectDeleteVirtualInterfaceOutput
  describeConnectionLoa(input: AwsDirectConnectDescribeConnectionLoaInput!, config: AwsConfig): AwsDirectConnectDescribeConnectionLoaOutput
  describeConnections(input: AwsDirectConnectDescribeConnectionsInput, config: AwsConfig): JSON
  describeConnectionsOnInterconnect(input: AwsDirectConnectDescribeConnectionsOnInterconnectInput!, config: AwsConfig): JSON
  describeDirectConnectGatewayAssociationProposals(input: AwsDirectConnectDescribeDirectConnectGatewayAssociationProposalsInput, config: AwsConfig): AwsDirectConnectDescribeDirectConnectGatewayAssociationProposalsOutput
  describeDirectConnectGatewayAssociations(input: AwsDirectConnectDescribeDirectConnectGatewayAssociationsInput, config: AwsConfig): AwsDirectConnectDescribeDirectConnectGatewayAssociationsOutput
  describeDirectConnectGatewayAttachments(input: AwsDirectConnectDescribeDirectConnectGatewayAttachmentsInput, config: AwsConfig): AwsDirectConnectDescribeDirectConnectGatewayAttachmentsOutput
  describeDirectConnectGateways(input: AwsDirectConnectDescribeDirectConnectGatewaysInput, config: AwsConfig): AwsDirectConnectDescribeDirectConnectGatewaysOutput
  describeHostedConnections(input: AwsDirectConnectDescribeHostedConnectionsInput!, config: AwsConfig): JSON
  describeInterconnectLoa(input: AwsDirectConnectDescribeInterconnectLoaInput!, config: AwsConfig): AwsDirectConnectDescribeInterconnectLoaOutput
  describeInterconnects(input: AwsDirectConnectDescribeInterconnectsInput, config: AwsConfig): AwsDirectConnectDescribeInterconnectsOutput
  describeLags(input: AwsDirectConnectDescribeLagsInput, config: AwsConfig): AwsDirectConnectDescribeLagsOutput
  describeLoa(input: AwsDirectConnectDescribeLoaInput!, config: AwsConfig): JSON
  describeLocations(config: AwsConfig): AwsDirectConnectDescribeLocationsOutput
  describeTags(input: AwsDirectConnectDescribeTagsInput!, config: AwsConfig): AwsDirectConnectDescribeTagsOutput
  describeVirtualGateways(config: AwsConfig): AwsDirectConnectDescribeVirtualGatewaysOutput
  describeVirtualInterfaces(input: AwsDirectConnectDescribeVirtualInterfacesInput, config: AwsConfig): AwsDirectConnectDescribeVirtualInterfacesOutput
  disassociateConnectionFromLag(input: AwsDirectConnectDisassociateConnectionFromLagInput!, config: AwsConfig): JSON
  tagResource(input: AwsDirectConnectTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsDirectConnectUntagResourceInput!, config: AwsConfig): JSON
  updateDirectConnectGatewayAssociation(input: AwsDirectConnectUpdateDirectConnectGatewayAssociationInput, config: AwsConfig): AwsDirectConnectUpdateDirectConnectGatewayAssociationOutput
  updateLag(input: AwsDirectConnectUpdateLagInput!, config: AwsConfig): JSON
  updateVirtualInterfaceAttributes(input: AwsDirectConnectUpdateVirtualInterfaceAttributesInput!, config: AwsConfig): JSON
}

input AwsDirectConnectAcceptDirectConnectGatewayAssociationProposalInput {
  directConnectGatewayId: String!
  proposalId: String!
  associatedGatewayOwnerAccount: String!
  overrideAllowedPrefixesToDirectConnectGateway: [AwsDirectConnectS5Input]
}

type AwsDirectConnectAcceptDirectConnectGatewayAssociationProposalOutput {
  directConnectGatewayAssociation: AwsDirectConnectS9
}

input AwsDirectConnectAllocateConnectionOnInterconnectInput {
  bandwidth: String!
  connectionName: String!
  ownerAccount: String!
  interconnectId: String!
  vlan: Int!
}

input AwsDirectConnectAllocateHostedConnectionInput {
  connectionId: String!
  ownerAccount: String!
  bandwidth: String!
  connectionName: String!
  vlan: Int!
  tags: [AwsDirectConnectSzInput]
}

input AwsDirectConnectAllocatePrivateVirtualInterfaceInput {
  connectionId: String!
  ownerAccount: String!
  newPrivateVirtualInterfaceAllocation: AwsDirectConnectAllocatePrivateVirtualInterfaceNewPrivateVirtualInterfaceAllocationInput!
}

input AwsDirectConnectAllocatePrivateVirtualInterfaceNewPrivateVirtualInterfaceAllocationInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  mtu: Int
  authKey: String
  amazonAddress: String
  addressFamily: String
  customerAddress: String
  tags: [AwsDirectConnectSzInput]
}

input AwsDirectConnectAllocatePublicVirtualInterfaceInput {
  connectionId: String!
  ownerAccount: String!
  newPublicVirtualInterfaceAllocation: AwsDirectConnectAllocatePublicVirtualInterfaceNewPublicVirtualInterfaceAllocationInput!
}

input AwsDirectConnectAllocatePublicVirtualInterfaceNewPublicVirtualInterfaceAllocationInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  routeFilterPrefixes: [AwsDirectConnectS5Input]
  tags: [AwsDirectConnectSzInput]
}

input AwsDirectConnectAllocateTransitVirtualInterfaceInput {
  connectionId: String!
  ownerAccount: String!
  newTransitVirtualInterfaceAllocation: AwsDirectConnectAllocateTransitVirtualInterfaceNewTransitVirtualInterfaceAllocationInput!
}

input AwsDirectConnectAllocateTransitVirtualInterfaceNewTransitVirtualInterfaceAllocationInput {
  virtualInterfaceName: String
  vlan: Int
  asn: Int
  mtu: Int
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  tags: [AwsDirectConnectSzInput]
}

type AwsDirectConnectAllocateTransitVirtualInterfaceOutput {
  virtualInterface: AwsDirectConnectS1d
}

input AwsDirectConnectAssociateConnectionWithLagInput {
  connectionId: String!
  lagId: String!
}

input AwsDirectConnectAssociateHostedConnectionInput {
  connectionId: String!
  parentConnectionId: String!
}

input AwsDirectConnectAssociateVirtualInterfaceInput {
  virtualInterfaceId: String!
  connectionId: String!
}

input AwsDirectConnectConfirmConnectionInput {
  connectionId: String!
}

type AwsDirectConnectConfirmConnectionOutput {
  connectionState: String
}

input AwsDirectConnectConfirmPrivateVirtualInterfaceInput {
  virtualInterfaceId: String!
  virtualGatewayId: String
  directConnectGatewayId: String
}

type AwsDirectConnectConfirmPrivateVirtualInterfaceOutput {
  virtualInterfaceState: String
}

input AwsDirectConnectConfirmPublicVirtualInterfaceInput {
  virtualInterfaceId: String!
}

type AwsDirectConnectConfirmPublicVirtualInterfaceOutput {
  virtualInterfaceState: String
}

input AwsDirectConnectConfirmTransitVirtualInterfaceInput {
  virtualInterfaceId: String!
  directConnectGatewayId: String!
}

type AwsDirectConnectConfirmTransitVirtualInterfaceOutput {
  virtualInterfaceState: String
}

input AwsDirectConnectCreateBGPPeerInput {
  virtualInterfaceId: String
  newBGPPeer: AwsDirectConnectCreateBGPPeerNewBGPPeerInput
}

input AwsDirectConnectCreateBGPPeerNewBGPPeerInput {
  asn: Int
  authKey: String
  addressFamily: String
  amazonAddress: String
  customerAddress: String
}

type AwsDirectConnectCreateBGPPeerOutput {
  virtualInterface: AwsDirectConnectS1d
}

input AwsDirectConnectCreateConnectionInput {
  location: String!
  bandwidth: String!
  connectionName: String!
  lagId: String
  tags: [AwsDirectConnectSzInput]
}

input AwsDirectConnectCreateDirectConnectGatewayAssociationInput {
  directConnectGatewayId: String!
  gatewayId: String
  addAllowedPrefixesToDirectConnectGateway: [AwsDirectConnectS5Input]
  virtualGatewayId: String
}

type AwsDirectConnectCreateDirectConnectGatewayAssociationOutput {
  directConnectGatewayAssociation: AwsDirectConnectS9
}

input AwsDirectConnectCreateDirectConnectGatewayAssociationProposalInput {
  directConnectGatewayId: String!
  directConnectGatewayOwnerAccount: String!
  gatewayId: String!
  addAllowedPrefixesToDirectConnectGateway: [AwsDirectConnectS5Input]
  removeAllowedPrefixesToDirectConnectGateway: [AwsDirectConnectS5Input]
}

type AwsDirectConnectCreateDirectConnectGatewayAssociationProposalOutput {
  directConnectGatewayAssociationProposal: AwsDirectConnectS2i
}

input AwsDirectConnectCreateDirectConnectGatewayInput {
  directConnectGatewayName: String!
  amazonSideAsn: JSON
}

type AwsDirectConnectCreateDirectConnectGatewayOutput {
  directConnectGateway: AwsDirectConnectS2b
}

input AwsDirectConnectCreateInterconnectInput {
  interconnectName: String!
  bandwidth: String!
  location: String!
  lagId: String
  tags: [AwsDirectConnectSzInput]
}

input AwsDirectConnectCreateLagInput {
  numberOfConnections: Int!
  location: String!
  connectionsBandwidth: String!
  lagName: String!
  connectionId: String
  tags: [AwsDirectConnectSzInput]
  childConnectionTags: [AwsDirectConnectSzInput]
}

input AwsDirectConnectCreatePrivateVirtualInterfaceInput {
  connectionId: String!
  newPrivateVirtualInterface: AwsDirectConnectCreatePrivateVirtualInterfaceNewPrivateVirtualInterfaceInput!
}

input AwsDirectConnectCreatePrivateVirtualInterfaceNewPrivateVirtualInterfaceInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  mtu: Int
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  virtualGatewayId: String
  directConnectGatewayId: String
  tags: [AwsDirectConnectSzInput]
}

input AwsDirectConnectCreatePublicVirtualInterfaceInput {
  connectionId: String!
  newPublicVirtualInterface: AwsDirectConnectCreatePublicVirtualInterfaceNewPublicVirtualInterfaceInput!
}

input AwsDirectConnectCreatePublicVirtualInterfaceNewPublicVirtualInterfaceInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  routeFilterPrefixes: [AwsDirectConnectS5Input]
  tags: [AwsDirectConnectSzInput]
}

input AwsDirectConnectCreateTransitVirtualInterfaceInput {
  connectionId: String!
  newTransitVirtualInterface: AwsDirectConnectCreateTransitVirtualInterfaceNewTransitVirtualInterfaceInput!
}

input AwsDirectConnectCreateTransitVirtualInterfaceNewTransitVirtualInterfaceInput {
  virtualInterfaceName: String
  vlan: Int
  asn: Int
  mtu: Int
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  directConnectGatewayId: String
  tags: [AwsDirectConnectSzInput]
}

type AwsDirectConnectCreateTransitVirtualInterfaceOutput {
  virtualInterface: AwsDirectConnectS1d
}

input AwsDirectConnectDeleteBGPPeerInput {
  virtualInterfaceId: String
  asn: Int
  customerAddress: String
  bgpPeerId: String
}

type AwsDirectConnectDeleteBGPPeerOutput {
  virtualInterface: AwsDirectConnectS1d
}

input AwsDirectConnectDeleteConnectionInput {
  connectionId: String!
}

input AwsDirectConnectDeleteDirectConnectGatewayAssociationInput {
  associationId: String
  directConnectGatewayId: String
  virtualGatewayId: String
}

type AwsDirectConnectDeleteDirectConnectGatewayAssociationOutput {
  directConnectGatewayAssociation: AwsDirectConnectS9
}

input AwsDirectConnectDeleteDirectConnectGatewayAssociationProposalInput {
  proposalId: String!
}

type AwsDirectConnectDeleteDirectConnectGatewayAssociationProposalOutput {
  directConnectGatewayAssociationProposal: AwsDirectConnectS2i
}

input AwsDirectConnectDeleteDirectConnectGatewayInput {
  directConnectGatewayId: String!
}

type AwsDirectConnectDeleteDirectConnectGatewayOutput {
  directConnectGateway: AwsDirectConnectS2b
}

input AwsDirectConnectDeleteInterconnectInput {
  interconnectId: String!
}

type AwsDirectConnectDeleteInterconnectOutput {
  interconnectState: String
}

input AwsDirectConnectDeleteLagInput {
  lagId: String!
}

input AwsDirectConnectDeleteVirtualInterfaceInput {
  virtualInterfaceId: String!
}

type AwsDirectConnectDeleteVirtualInterfaceOutput {
  virtualInterfaceState: String
}

input AwsDirectConnectDescribeConnectionLoaInput {
  connectionId: String!
  providerName: String
  loaContentType: String
}

type AwsDirectConnectDescribeConnectionLoaOutput {
  loa: AwsDirectConnectS3k
}

input AwsDirectConnectDescribeConnectionsInput {
  connectionId: String
}

input AwsDirectConnectDescribeConnectionsOnInterconnectInput {
  interconnectId: String!
}

input AwsDirectConnectDescribeDirectConnectGatewayAssociationProposalsInput {
  directConnectGatewayId: String
  proposalId: String
  associatedGatewayId: String
  maxResults: Int
  nextToken: String
}

type AwsDirectConnectDescribeDirectConnectGatewayAssociationProposalsOutput {
  directConnectGatewayAssociationProposals: [AwsDirectConnectS2i]
  nextToken: String
}

input AwsDirectConnectDescribeDirectConnectGatewayAssociationsInput {
  associationId: String
  associatedGatewayId: String
  directConnectGatewayId: String
  maxResults: Int
  nextToken: String
  virtualGatewayId: String
}

type AwsDirectConnectDescribeDirectConnectGatewayAssociationsOutput {
  directConnectGatewayAssociations: [AwsDirectConnectS9]
  nextToken: String
}

input AwsDirectConnectDescribeDirectConnectGatewayAttachmentsInput {
  directConnectGatewayId: String
  virtualInterfaceId: String
  maxResults: Int
  nextToken: String
}

type AwsDirectConnectDescribeDirectConnectGatewayAttachmentsOutput {
  directConnectGatewayAttachments: [AwsDirectConnectDescribeDirectConnectGatewayAttachmentsOutputDirectConnectGatewayAttachments]
  nextToken: String
}

type AwsDirectConnectDescribeDirectConnectGatewayAttachmentsOutputDirectConnectGatewayAttachments {
  directConnectGatewayId: String
  virtualInterfaceId: String
  virtualInterfaceRegion: String
  virtualInterfaceOwnerAccount: String
  attachmentState: String
  attachmentType: String
  stateChangeError: String
}

input AwsDirectConnectDescribeDirectConnectGatewaysInput {
  directConnectGatewayId: String
  maxResults: Int
  nextToken: String
}

type AwsDirectConnectDescribeDirectConnectGatewaysOutput {
  directConnectGateways: [AwsDirectConnectS2b]
  nextToken: String
}

input AwsDirectConnectDescribeHostedConnectionsInput {
  connectionId: String!
}

input AwsDirectConnectDescribeInterconnectLoaInput {
  interconnectId: String!
  providerName: String
  loaContentType: String
}

type AwsDirectConnectDescribeInterconnectLoaOutput {
  loa: AwsDirectConnectS3k
}

input AwsDirectConnectDescribeInterconnectsInput {
  interconnectId: String
}

type AwsDirectConnectDescribeInterconnectsOutput {
  interconnects: [AwsDirectConnectS2m]
}

input AwsDirectConnectDescribeLagsInput {
  lagId: String
}

type AwsDirectConnectDescribeLagsOutput {
  lags: [AwsDirectConnectS2r]
}

input AwsDirectConnectDescribeLoaInput {
  connectionId: String!
  providerName: String
  loaContentType: String
}

type AwsDirectConnectDescribeLocationsOutput {
  locations: [AwsDirectConnectDescribeLocationsOutputLocations]
}

type AwsDirectConnectDescribeLocationsOutputLocations {
  locationCode: String
  locationName: String
  region: String
  availablePortSpeeds: [String]
}

input AwsDirectConnectDescribeTagsInput {
  resourceArns: [String]!
}

type AwsDirectConnectDescribeTagsOutput {
  resourceTags: [AwsDirectConnectDescribeTagsOutputResourceTags]
}

type AwsDirectConnectDescribeTagsOutputResourceTags {
  resourceArn: String
  tags: [AwsDirectConnectSz]
}

type AwsDirectConnectDescribeVirtualGatewaysOutput {
  virtualGateways: [AwsDirectConnectDescribeVirtualGatewaysOutputVirtualGateways]
}

type AwsDirectConnectDescribeVirtualGatewaysOutputVirtualGateways {
  virtualGatewayId: String
  virtualGatewayState: String
}

input AwsDirectConnectDescribeVirtualInterfacesInput {
  connectionId: String
  virtualInterfaceId: String
}

type AwsDirectConnectDescribeVirtualInterfacesOutput {
  virtualInterfaces: [AwsDirectConnectS1d]
}

input AwsDirectConnectDisassociateConnectionFromLagInput {
  connectionId: String!
  lagId: String!
}

type AwsDirectConnectS1d {
  ownerAccount: String
  virtualInterfaceId: String
  location: String
  connectionId: String
  virtualInterfaceType: String
  virtualInterfaceName: String
  vlan: Int
  asn: Int
  amazonSideAsn: JSON
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  virtualInterfaceState: String
  customerRouterConfig: String
  mtu: Int
  jumboFrameCapable: Boolean
  virtualGatewayId: String
  directConnectGatewayId: String
  routeFilterPrefixes: [AwsDirectConnectS5]
  bgpPeers: [AwsDirectConnectS1dBgpPeers]
  region: String
  awsDeviceV2: String
  tags: [AwsDirectConnectSz]
}

type AwsDirectConnectS1dBgpPeers {
  bgpPeerId: String
  asn: Int
  authKey: String
  addressFamily: String
  amazonAddress: String
  customerAddress: String
  bgpPeerState: String
  bgpStatus: String
  awsDeviceV2: String
}

type AwsDirectConnectS2b {
  directConnectGatewayId: String
  directConnectGatewayName: String
  amazonSideAsn: JSON
  ownerAccount: String
  directConnectGatewayState: String
  stateChangeError: String
}

type AwsDirectConnectS2i {
  proposalId: String
  directConnectGatewayId: String
  directConnectGatewayOwnerAccount: String
  proposalState: String
  associatedGateway: AwsDirectConnectSc
  existingAllowedPrefixesToDirectConnectGateway: [AwsDirectConnectS5]
  requestedAllowedPrefixesToDirectConnectGateway: [AwsDirectConnectS5]
}

type AwsDirectConnectS2m {
  interconnectId: String
  interconnectName: String
  interconnectState: String
  region: String
  location: String
  bandwidth: String
  loaIssueTime: Date
  lagId: String
  awsDevice: String
  jumboFrameCapable: Boolean
  awsDeviceV2: String
  hasLogicalRedundancy: String
  tags: [AwsDirectConnectSz]
}

type AwsDirectConnectS2r {
  connectionsBandwidth: String
  numberOfConnections: Int
  lagId: String
  ownerAccount: String
  lagName: String
  lagState: String
  location: String
  region: String
  minimumLinks: Int
  awsDevice: String
  awsDeviceV2: String
  connections: [AwsDirectConnectSo]
  allowsHostedConnections: Boolean
  jumboFrameCapable: Boolean
  hasLogicalRedundancy: String
  tags: [AwsDirectConnectSz]
}

type AwsDirectConnectS3k {
  loaContent: JSON
  loaContentType: String
}

type AwsDirectConnectS5 {
  cidr: String
}

input AwsDirectConnectS5Input {
  cidr: String
}

type AwsDirectConnectS9 {
  directConnectGatewayId: String
  directConnectGatewayOwnerAccount: String
  associationState: String
  stateChangeError: String
  associatedGateway: AwsDirectConnectSc
  associationId: String
  allowedPrefixesToDirectConnectGateway: [AwsDirectConnectS5]
  virtualGatewayId: String
  virtualGatewayRegion: String
  virtualGatewayOwnerAccount: String
}

type AwsDirectConnectSc {
  id: String
  type: String
  ownerAccount: String
  region: String
}

type AwsDirectConnectSo {
  ownerAccount: String
  connectionId: String
  connectionName: String
  connectionState: String
  region: String
  location: String
  bandwidth: String
  vlan: Int
  partnerName: String
  loaIssueTime: Date
  lagId: String
  awsDevice: String
  jumboFrameCapable: Boolean
  awsDeviceV2: String
  hasLogicalRedundancy: String
  tags: [AwsDirectConnectSz]
}

type AwsDirectConnectSz {
  key: String!
  value: String
}

input AwsDirectConnectSzInput {
  key: String!
  value: String
}

input AwsDirectConnectTagResourceInput {
  resourceArn: String!
  tags: [AwsDirectConnectSzInput]!
}

input AwsDirectConnectUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsDirectConnectUpdateDirectConnectGatewayAssociationInput {
  associationId: String
  addAllowedPrefixesToDirectConnectGateway: [AwsDirectConnectS5Input]
  removeAllowedPrefixesToDirectConnectGateway: [AwsDirectConnectS5Input]
}

type AwsDirectConnectUpdateDirectConnectGatewayAssociationOutput {
  directConnectGatewayAssociation: AwsDirectConnectS9
}

input AwsDirectConnectUpdateLagInput {
  lagId: String!
  lagName: String
  minimumLinks: Int
}

input AwsDirectConnectUpdateVirtualInterfaceAttributesInput {
  virtualInterfaceId: String!
  mtu: Int
}

"""AWS Directory Service (2015-04-16)"""
type AwsDirectoryService {
  acceptSharedDirectory(input: AwsDirectoryServiceAcceptSharedDirectoryInput!, config: AwsConfig): AwsDirectoryServiceAcceptSharedDirectoryOutput
  addIpRoutes(input: AwsDirectoryServiceAddIpRoutesInput!, config: AwsConfig): JSON
  addTagsToResource(input: AwsDirectoryServiceAddTagsToResourceInput!, config: AwsConfig): JSON
  cancelSchemaExtension(input: AwsDirectoryServiceCancelSchemaExtensionInput!, config: AwsConfig): JSON
  connectDirectory(input: AwsDirectoryServiceConnectDirectoryInput!, config: AwsConfig): AwsDirectoryServiceConnectDirectoryOutput
  createAlias(input: AwsDirectoryServiceCreateAliasInput!, config: AwsConfig): AwsDirectoryServiceCreateAliasOutput
  createComputer(input: AwsDirectoryServiceCreateComputerInput!, config: AwsConfig): AwsDirectoryServiceCreateComputerOutput
  createConditionalForwarder(input: AwsDirectoryServiceCreateConditionalForwarderInput!, config: AwsConfig): JSON
  createDirectory(input: AwsDirectoryServiceCreateDirectoryInput!, config: AwsConfig): AwsDirectoryServiceCreateDirectoryOutput
  createLogSubscription(input: AwsDirectoryServiceCreateLogSubscriptionInput!, config: AwsConfig): JSON
  createMicrosoftAD(input: AwsDirectoryServiceCreateMicrosoftADInput!, config: AwsConfig): AwsDirectoryServiceCreateMicrosoftADOutput
  createSnapshot(input: AwsDirectoryServiceCreateSnapshotInput!, config: AwsConfig): AwsDirectoryServiceCreateSnapshotOutput
  createTrust(input: AwsDirectoryServiceCreateTrustInput!, config: AwsConfig): AwsDirectoryServiceCreateTrustOutput
  deleteConditionalForwarder(input: AwsDirectoryServiceDeleteConditionalForwarderInput!, config: AwsConfig): JSON
  deleteDirectory(input: AwsDirectoryServiceDeleteDirectoryInput!, config: AwsConfig): AwsDirectoryServiceDeleteDirectoryOutput
  deleteLogSubscription(input: AwsDirectoryServiceDeleteLogSubscriptionInput!, config: AwsConfig): JSON
  deleteSnapshot(input: AwsDirectoryServiceDeleteSnapshotInput!, config: AwsConfig): AwsDirectoryServiceDeleteSnapshotOutput
  deleteTrust(input: AwsDirectoryServiceDeleteTrustInput!, config: AwsConfig): AwsDirectoryServiceDeleteTrustOutput
  deregisterEventTopic(input: AwsDirectoryServiceDeregisterEventTopicInput!, config: AwsConfig): JSON
  describeConditionalForwarders(input: AwsDirectoryServiceDescribeConditionalForwardersInput!, config: AwsConfig): AwsDirectoryServiceDescribeConditionalForwardersOutput
  describeDirectories(input: AwsDirectoryServiceDescribeDirectoriesInput, config: AwsConfig): AwsDirectoryServiceDescribeDirectoriesOutput
  describeDomainControllers(input: AwsDirectoryServiceDescribeDomainControllersInput!, config: AwsConfig): AwsDirectoryServiceDescribeDomainControllersOutput
  describeEventTopics(input: AwsDirectoryServiceDescribeEventTopicsInput, config: AwsConfig): AwsDirectoryServiceDescribeEventTopicsOutput
  describeSharedDirectories(input: AwsDirectoryServiceDescribeSharedDirectoriesInput!, config: AwsConfig): AwsDirectoryServiceDescribeSharedDirectoriesOutput
  describeSnapshots(input: AwsDirectoryServiceDescribeSnapshotsInput, config: AwsConfig): AwsDirectoryServiceDescribeSnapshotsOutput
  describeTrusts(input: AwsDirectoryServiceDescribeTrustsInput, config: AwsConfig): AwsDirectoryServiceDescribeTrustsOutput
  disableRadius(input: AwsDirectoryServiceDisableRadiusInput!, config: AwsConfig): JSON
  disableSso(input: AwsDirectoryServiceDisableSsoInput!, config: AwsConfig): JSON
  enableRadius(input: AwsDirectoryServiceEnableRadiusInput!, config: AwsConfig): JSON
  enableSso(input: AwsDirectoryServiceEnableSsoInput!, config: AwsConfig): JSON
  getDirectoryLimits(input: JSON, config: AwsConfig): AwsDirectoryServiceGetDirectoryLimitsOutput
  getSnapshotLimits(input: AwsDirectoryServiceGetSnapshotLimitsInput!, config: AwsConfig): AwsDirectoryServiceGetSnapshotLimitsOutput
  listIpRoutes(input: AwsDirectoryServiceListIpRoutesInput!, config: AwsConfig): AwsDirectoryServiceListIpRoutesOutput
  listLogSubscriptions(input: AwsDirectoryServiceListLogSubscriptionsInput, config: AwsConfig): AwsDirectoryServiceListLogSubscriptionsOutput
  listSchemaExtensions(input: AwsDirectoryServiceListSchemaExtensionsInput!, config: AwsConfig): AwsDirectoryServiceListSchemaExtensionsOutput
  listTagsForResource(input: AwsDirectoryServiceListTagsForResourceInput!, config: AwsConfig): AwsDirectoryServiceListTagsForResourceOutput
  registerEventTopic(input: AwsDirectoryServiceRegisterEventTopicInput!, config: AwsConfig): JSON
  rejectSharedDirectory(input: AwsDirectoryServiceRejectSharedDirectoryInput!, config: AwsConfig): AwsDirectoryServiceRejectSharedDirectoryOutput
  removeIpRoutes(input: AwsDirectoryServiceRemoveIpRoutesInput!, config: AwsConfig): JSON
  removeTagsFromResource(input: AwsDirectoryServiceRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  resetUserPassword(input: AwsDirectoryServiceResetUserPasswordInput!, config: AwsConfig): JSON
  restoreFromSnapshot(input: AwsDirectoryServiceRestoreFromSnapshotInput!, config: AwsConfig): JSON
  shareDirectory(input: AwsDirectoryServiceShareDirectoryInput!, config: AwsConfig): AwsDirectoryServiceShareDirectoryOutput
  startSchemaExtension(input: AwsDirectoryServiceStartSchemaExtensionInput!, config: AwsConfig): AwsDirectoryServiceStartSchemaExtensionOutput
  unshareDirectory(input: AwsDirectoryServiceUnshareDirectoryInput!, config: AwsConfig): AwsDirectoryServiceUnshareDirectoryOutput
  updateConditionalForwarder(input: AwsDirectoryServiceUpdateConditionalForwarderInput!, config: AwsConfig): JSON
  updateNumberOfDomainControllers(input: AwsDirectoryServiceUpdateNumberOfDomainControllersInput!, config: AwsConfig): JSON
  updateRadius(input: AwsDirectoryServiceUpdateRadiusInput!, config: AwsConfig): JSON
  updateTrust(input: AwsDirectoryServiceUpdateTrustInput!, config: AwsConfig): AwsDirectoryServiceUpdateTrustOutput
  verifyTrust(input: AwsDirectoryServiceVerifyTrustInput!, config: AwsConfig): AwsDirectoryServiceVerifyTrustOutput
}

input AwsDirectoryServiceAcceptSharedDirectoryInput {
  SharedDirectoryId: String!
}

type AwsDirectoryServiceAcceptSharedDirectoryOutput {
  SharedDirectory: AwsDirectoryServiceS4
}

input AwsDirectoryServiceAddIpRoutesInput {
  DirectoryId: String!
  IpRoutes: [AwsDirectoryServiceAddIpRoutesIpRoutesInput]!
  UpdateSecurityGroupForDirectoryControllers: Boolean
}

input AwsDirectoryServiceAddIpRoutesIpRoutesInput {
  CidrIp: String
  Description: String
}

input AwsDirectoryServiceAddTagsToResourceInput {
  ResourceId: String!
  Tags: [AwsDirectoryServiceSkInput]!
}

input AwsDirectoryServiceCancelSchemaExtensionInput {
  DirectoryId: String!
  SchemaExtensionId: String!
}

input AwsDirectoryServiceConnectDirectoryConnectSettingsInput {
  VpcId: String!
  SubnetIds: [String]!
  CustomerDnsIps: [String]!
  CustomerUserName: String!
}

input AwsDirectoryServiceConnectDirectoryInput {
  Name: String!
  ShortName: String
  Password: String!
  Description: String
  Size: String!
  ConnectSettings: AwsDirectoryServiceConnectDirectoryConnectSettingsInput!
  Tags: [AwsDirectoryServiceSkInput]
}

type AwsDirectoryServiceConnectDirectoryOutput {
  DirectoryId: String
}

input AwsDirectoryServiceCreateAliasInput {
  DirectoryId: String!
  Alias: String!
}

type AwsDirectoryServiceCreateAliasOutput {
  DirectoryId: String
  Alias: String
}

input AwsDirectoryServiceCreateComputerInput {
  DirectoryId: String!
  ComputerName: String!
  Password: String!
  OrganizationalUnitDistinguishedName: String
  ComputerAttributes: [AwsDirectoryServiceS1cInput]
}

type AwsDirectoryServiceCreateComputerOutput {
  Computer: AwsDirectoryServiceCreateComputerOutputComputer
}

type AwsDirectoryServiceCreateComputerOutputComputer {
  ComputerId: String
  ComputerName: String
  ComputerAttributes: [AwsDirectoryServiceS1c]
}

input AwsDirectoryServiceCreateConditionalForwarderInput {
  DirectoryId: String!
  RemoteDomainName: String!
  DnsIpAddrs: [String]!
}

input AwsDirectoryServiceCreateDirectoryInput {
  Name: String!
  ShortName: String
  Password: String!
  Description: String
  Size: String!
  VpcSettings: AwsDirectoryServiceS1oInput
  Tags: [AwsDirectoryServiceSkInput]
}

type AwsDirectoryServiceCreateDirectoryOutput {
  DirectoryId: String
}

input AwsDirectoryServiceCreateLogSubscriptionInput {
  DirectoryId: String!
  LogGroupName: String!
}

input AwsDirectoryServiceCreateMicrosoftADInput {
  Name: String!
  ShortName: String
  Password: String!
  Description: String
  VpcSettings: AwsDirectoryServiceS1oInput!
  Edition: String
  Tags: [AwsDirectoryServiceSkInput]
}

type AwsDirectoryServiceCreateMicrosoftADOutput {
  DirectoryId: String
}

input AwsDirectoryServiceCreateSnapshotInput {
  DirectoryId: String!
  Name: String
}

type AwsDirectoryServiceCreateSnapshotOutput {
  SnapshotId: String
}

input AwsDirectoryServiceCreateTrustInput {
  DirectoryId: String!
  RemoteDomainName: String!
  TrustPassword: String!
  TrustDirection: String!
  TrustType: String
  ConditionalForwarderIpAddrs: [String]
  SelectiveAuth: String
}

type AwsDirectoryServiceCreateTrustOutput {
  TrustId: String
}

input AwsDirectoryServiceDeleteConditionalForwarderInput {
  DirectoryId: String!
  RemoteDomainName: String!
}

input AwsDirectoryServiceDeleteDirectoryInput {
  DirectoryId: String!
}

type AwsDirectoryServiceDeleteDirectoryOutput {
  DirectoryId: String
}

input AwsDirectoryServiceDeleteLogSubscriptionInput {
  DirectoryId: String!
}

input AwsDirectoryServiceDeleteSnapshotInput {
  SnapshotId: String!
}

type AwsDirectoryServiceDeleteSnapshotOutput {
  SnapshotId: String
}

input AwsDirectoryServiceDeleteTrustInput {
  TrustId: String!
  DeleteAssociatedConditionalForwarder: Boolean
}

type AwsDirectoryServiceDeleteTrustOutput {
  TrustId: String
}

input AwsDirectoryServiceDeregisterEventTopicInput {
  DirectoryId: String!
  TopicName: String!
}

input AwsDirectoryServiceDescribeConditionalForwardersInput {
  DirectoryId: String!
  RemoteDomainNames: [String]
}

type AwsDirectoryServiceDescribeConditionalForwardersOutput {
  ConditionalForwarders: [AwsDirectoryServiceDescribeConditionalForwardersOutputConditionalForwarders]
}

type AwsDirectoryServiceDescribeConditionalForwardersOutputConditionalForwarders {
  RemoteDomainName: String
  DnsIpAddrs: [String]
  ReplicationScope: String
}

input AwsDirectoryServiceDescribeDirectoriesInput {
  DirectoryIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceDescribeDirectoriesOutput {
  DirectoryDescriptions: [AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptions]
  NextToken: String
}

type AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptions {
  DirectoryId: String
  Name: String
  ShortName: String
  Size: String
  Edition: String
  Alias: String
  AccessUrl: String
  Description: String
  DnsIpAddrs: [String]
  Stage: String
  ShareStatus: String
  ShareMethod: String
  ShareNotes: String
  LaunchTime: Date
  StageLastUpdatedDateTime: Date
  Type: String
  VpcSettings: AwsDirectoryServiceS32
  ConnectSettings: AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptionsConnectSettings
  RadiusSettings: AwsDirectoryServiceS38
  RadiusStatus: String
  StageReason: String
  SsoEnabled: Boolean
  DesiredNumberOfDomainControllers: Int
  OwnerDirectoryDescription: AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptionsOwnerDirectoryDescription
}

type AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptionsConnectSettings {
  VpcId: String
  SubnetIds: [String]
  CustomerUserName: String
  SecurityGroupId: String
  AvailabilityZones: [String]
  ConnectIps: [String]
}

type AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptionsOwnerDirectoryDescription {
  DirectoryId: String
  AccountId: String
  DnsIpAddrs: [String]
  VpcSettings: AwsDirectoryServiceS32
  RadiusSettings: AwsDirectoryServiceS38
  RadiusStatus: String
}

input AwsDirectoryServiceDescribeDomainControllersInput {
  DirectoryId: String!
  DomainControllerIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceDescribeDomainControllersOutput {
  DomainControllers: [AwsDirectoryServiceDescribeDomainControllersOutputDomainControllers]
  NextToken: String
}

type AwsDirectoryServiceDescribeDomainControllersOutputDomainControllers {
  DirectoryId: String
  DomainControllerId: String
  DnsIpAddr: String
  VpcId: String
  SubnetId: String
  AvailabilityZone: String
  Status: String
  StatusReason: String
  LaunchTime: Date
  StatusLastUpdatedDateTime: Date
}

input AwsDirectoryServiceDescribeEventTopicsInput {
  DirectoryId: String
  TopicNames: [String]
}

type AwsDirectoryServiceDescribeEventTopicsOutput {
  EventTopics: [AwsDirectoryServiceDescribeEventTopicsOutputEventTopics]
}

type AwsDirectoryServiceDescribeEventTopicsOutputEventTopics {
  DirectoryId: String
  TopicName: String
  TopicArn: String
  CreatedDateTime: Date
  Status: String
}

input AwsDirectoryServiceDescribeSharedDirectoriesInput {
  OwnerDirectoryId: String!
  SharedDirectoryIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceDescribeSharedDirectoriesOutput {
  SharedDirectories: [AwsDirectoryServiceS4]
  NextToken: String
}

input AwsDirectoryServiceDescribeSnapshotsInput {
  DirectoryId: String
  SnapshotIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceDescribeSnapshotsOutput {
  Snapshots: [AwsDirectoryServiceDescribeSnapshotsOutputSnapshots]
  NextToken: String
}

type AwsDirectoryServiceDescribeSnapshotsOutputSnapshots {
  DirectoryId: String
  SnapshotId: String
  Type: String
  Name: String
  Status: String
  StartTime: Date
}

input AwsDirectoryServiceDescribeTrustsInput {
  DirectoryId: String
  TrustIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceDescribeTrustsOutput {
  Trusts: [AwsDirectoryServiceDescribeTrustsOutputTrusts]
  NextToken: String
}

type AwsDirectoryServiceDescribeTrustsOutputTrusts {
  DirectoryId: String
  TrustId: String
  RemoteDomainName: String
  TrustType: String
  TrustDirection: String
  TrustState: String
  CreatedDateTime: Date
  LastUpdatedDateTime: Date
  StateLastUpdatedDateTime: Date
  TrustStateReason: String
  SelectiveAuth: String
}

input AwsDirectoryServiceDisableRadiusInput {
  DirectoryId: String!
}

input AwsDirectoryServiceDisableSsoInput {
  DirectoryId: String!
  UserName: String
  Password: String
}

input AwsDirectoryServiceEnableRadiusInput {
  DirectoryId: String!
  RadiusSettings: AwsDirectoryServiceS38Input!
}

input AwsDirectoryServiceEnableSsoInput {
  DirectoryId: String!
  UserName: String
  Password: String
}

type AwsDirectoryServiceGetDirectoryLimitsOutput {
  DirectoryLimits: AwsDirectoryServiceGetDirectoryLimitsOutputDirectoryLimits
}

type AwsDirectoryServiceGetDirectoryLimitsOutputDirectoryLimits {
  CloudOnlyDirectoriesLimit: Int
  CloudOnlyDirectoriesCurrentCount: Int
  CloudOnlyDirectoriesLimitReached: Boolean
  CloudOnlyMicrosoftADLimit: Int
  CloudOnlyMicrosoftADCurrentCount: Int
  CloudOnlyMicrosoftADLimitReached: Boolean
  ConnectedDirectoriesLimit: Int
  ConnectedDirectoriesCurrentCount: Int
  ConnectedDirectoriesLimitReached: Boolean
}

input AwsDirectoryServiceGetSnapshotLimitsInput {
  DirectoryId: String!
}

type AwsDirectoryServiceGetSnapshotLimitsOutput {
  SnapshotLimits: AwsDirectoryServiceGetSnapshotLimitsOutputSnapshotLimits
}

type AwsDirectoryServiceGetSnapshotLimitsOutputSnapshotLimits {
  ManualSnapshotsLimit: Int
  ManualSnapshotsCurrentCount: Int
  ManualSnapshotsLimitReached: Boolean
}

input AwsDirectoryServiceListIpRoutesInput {
  DirectoryId: String!
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceListIpRoutesOutput {
  IpRoutesInfo: [AwsDirectoryServiceListIpRoutesOutputIpRoutesInfo]
  NextToken: String
}

type AwsDirectoryServiceListIpRoutesOutputIpRoutesInfo {
  DirectoryId: String
  CidrIp: String
  IpRouteStatusMsg: String
  AddedDateTime: Date
  IpRouteStatusReason: String
  Description: String
}

input AwsDirectoryServiceListLogSubscriptionsInput {
  DirectoryId: String
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceListLogSubscriptionsOutput {
  LogSubscriptions: [AwsDirectoryServiceListLogSubscriptionsOutputLogSubscriptions]
  NextToken: String
}

type AwsDirectoryServiceListLogSubscriptionsOutputLogSubscriptions {
  DirectoryId: String
  LogGroupName: String
  SubscriptionCreatedDateTime: Date
}

input AwsDirectoryServiceListSchemaExtensionsInput {
  DirectoryId: String!
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceListSchemaExtensionsOutput {
  SchemaExtensionsInfo: [AwsDirectoryServiceListSchemaExtensionsOutputSchemaExtensionsInfo]
  NextToken: String
}

type AwsDirectoryServiceListSchemaExtensionsOutputSchemaExtensionsInfo {
  DirectoryId: String
  SchemaExtensionId: String
  Description: String
  SchemaExtensionStatus: String
  SchemaExtensionStatusReason: String
  StartDateTime: Date
  EndDateTime: Date
}

input AwsDirectoryServiceListTagsForResourceInput {
  ResourceId: String!
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceListTagsForResourceOutput {
  Tags: [AwsDirectoryServiceSk]
  NextToken: String
}

input AwsDirectoryServiceRegisterEventTopicInput {
  DirectoryId: String!
  TopicName: String!
}

input AwsDirectoryServiceRejectSharedDirectoryInput {
  SharedDirectoryId: String!
}

type AwsDirectoryServiceRejectSharedDirectoryOutput {
  SharedDirectoryId: String
}

input AwsDirectoryServiceRemoveIpRoutesInput {
  DirectoryId: String!
  CidrIps: [String]!
}

input AwsDirectoryServiceRemoveTagsFromResourceInput {
  ResourceId: String!
  TagKeys: [String]!
}

input AwsDirectoryServiceResetUserPasswordInput {
  DirectoryId: String!
  UserName: String!
  NewPassword: String!
}

input AwsDirectoryServiceRestoreFromSnapshotInput {
  SnapshotId: String!
}

type AwsDirectoryServiceS1c {
  Name: String
  Value: String
}

input AwsDirectoryServiceS1cInput {
  Name: String
  Value: String
}

input AwsDirectoryServiceS1oInput {
  VpcId: String!
  SubnetIds: [String]!
}

type AwsDirectoryServiceS32 {
  VpcId: String
  SubnetIds: [String]
  SecurityGroupId: String
  AvailabilityZones: [String]
}

type AwsDirectoryServiceS38 {
  RadiusServers: [String]
  RadiusPort: Int
  RadiusTimeout: Int
  RadiusRetries: Int
  SharedSecret: String
  AuthenticationProtocol: String
  DisplayLabel: String
  UseSameUsername: Boolean
}

input AwsDirectoryServiceS38Input {
  RadiusServers: [String]
  RadiusPort: Int
  RadiusTimeout: Int
  RadiusRetries: Int
  SharedSecret: String
  AuthenticationProtocol: String
  DisplayLabel: String
  UseSameUsername: Boolean
}

type AwsDirectoryServiceS4 {
  OwnerAccountId: String
  OwnerDirectoryId: String
  ShareMethod: String
  SharedAccountId: String
  SharedDirectoryId: String
  ShareStatus: String
  ShareNotes: String
  CreatedDateTime: Date
  LastUpdatedDateTime: Date
}

input AwsDirectoryServiceShareDirectoryInput {
  DirectoryId: String!
  ShareNotes: String
  ShareTarget: AwsDirectoryServiceShareDirectoryShareTargetInput!
  ShareMethod: String!
}

type AwsDirectoryServiceShareDirectoryOutput {
  SharedDirectoryId: String
}

input AwsDirectoryServiceShareDirectoryShareTargetInput {
  Id: String!
  Type: String!
}

type AwsDirectoryServiceSk {
  Key: String!
  Value: String!
}

input AwsDirectoryServiceSkInput {
  Key: String!
  Value: String!
}

input AwsDirectoryServiceStartSchemaExtensionInput {
  DirectoryId: String!
  CreateSnapshotBeforeSchemaExtension: Boolean!
  LdifContent: String!
  Description: String!
}

type AwsDirectoryServiceStartSchemaExtensionOutput {
  SchemaExtensionId: String
}

input AwsDirectoryServiceUnshareDirectoryInput {
  DirectoryId: String!
  UnshareTarget: AwsDirectoryServiceUnshareDirectoryUnshareTargetInput!
}

type AwsDirectoryServiceUnshareDirectoryOutput {
  SharedDirectoryId: String
}

input AwsDirectoryServiceUnshareDirectoryUnshareTargetInput {
  Id: String!
  Type: String!
}

input AwsDirectoryServiceUpdateConditionalForwarderInput {
  DirectoryId: String!
  RemoteDomainName: String!
  DnsIpAddrs: [String]!
}

input AwsDirectoryServiceUpdateNumberOfDomainControllersInput {
  DirectoryId: String!
  DesiredNumber: Int!
}

input AwsDirectoryServiceUpdateRadiusInput {
  DirectoryId: String!
  RadiusSettings: AwsDirectoryServiceS38Input!
}

input AwsDirectoryServiceUpdateTrustInput {
  TrustId: String!
  SelectiveAuth: String
}

type AwsDirectoryServiceUpdateTrustOutput {
  RequestId: String
  TrustId: String
}

input AwsDirectoryServiceVerifyTrustInput {
  TrustId: String!
}

type AwsDirectoryServiceVerifyTrustOutput {
  TrustId: String
}

"""AWS Application Discovery Service (2015-11-01)"""
type AwsDiscovery {
  associateConfigurationItemsToApplication(input: AwsDiscoveryAssociateConfigurationItemsToApplicationInput!, config: AwsConfig): JSON
  batchDeleteImportData(input: AwsDiscoveryBatchDeleteImportDataInput!, config: AwsConfig): AwsDiscoveryBatchDeleteImportDataOutput
  createApplication(input: AwsDiscoveryCreateApplicationInput!, config: AwsConfig): AwsDiscoveryCreateApplicationOutput
  createTags(input: AwsDiscoveryCreateTagsInput!, config: AwsConfig): JSON
  deleteApplications(input: AwsDiscoveryDeleteApplicationsInput!, config: AwsConfig): JSON
  deleteTags(input: AwsDiscoveryDeleteTagsInput!, config: AwsConfig): JSON
  describeAgents(input: AwsDiscoveryDescribeAgentsInput, config: AwsConfig): AwsDiscoveryDescribeAgentsOutput
  describeConfigurations(input: AwsDiscoveryDescribeConfigurationsInput!, config: AwsConfig): AwsDiscoveryDescribeConfigurationsOutput
  describeContinuousExports(input: AwsDiscoveryDescribeContinuousExportsInput, config: AwsConfig): AwsDiscoveryDescribeContinuousExportsOutput
  describeExportConfigurations(input: AwsDiscoveryDescribeExportConfigurationsInput, config: AwsConfig): AwsDiscoveryDescribeExportConfigurationsOutput
  describeExportTasks(input: AwsDiscoveryDescribeExportTasksInput, config: AwsConfig): AwsDiscoveryDescribeExportTasksOutput
  describeImportTasks(input: AwsDiscoveryDescribeImportTasksInput, config: AwsConfig): AwsDiscoveryDescribeImportTasksOutput
  describeTags(input: AwsDiscoveryDescribeTagsInput, config: AwsConfig): AwsDiscoveryDescribeTagsOutput
  disassociateConfigurationItemsFromApplication(input: AwsDiscoveryDisassociateConfigurationItemsFromApplicationInput!, config: AwsConfig): JSON
  exportConfigurations(config: AwsConfig): AwsDiscoveryExportConfigurationsOutput
  getDiscoverySummary(input: JSON, config: AwsConfig): AwsDiscoveryGetDiscoverySummaryOutput
  listConfigurations(input: AwsDiscoveryListConfigurationsInput!, config: AwsConfig): AwsDiscoveryListConfigurationsOutput
  listServerNeighbors(input: AwsDiscoveryListServerNeighborsInput!, config: AwsConfig): AwsDiscoveryListServerNeighborsOutput
  startContinuousExport(input: JSON, config: AwsConfig): AwsDiscoveryStartContinuousExportOutput
  startDataCollectionByAgentIds(input: AwsDiscoveryStartDataCollectionByAgentIdsInput!, config: AwsConfig): AwsDiscoveryStartDataCollectionByAgentIdsOutput
  startExportTask(input: AwsDiscoveryStartExportTaskInput, config: AwsConfig): AwsDiscoveryStartExportTaskOutput
  startImportTask(input: AwsDiscoveryStartImportTaskInput!, config: AwsConfig): AwsDiscoveryStartImportTaskOutput
  stopContinuousExport(input: AwsDiscoveryStopContinuousExportInput!, config: AwsConfig): AwsDiscoveryStopContinuousExportOutput
  stopDataCollectionByAgentIds(input: AwsDiscoveryStopDataCollectionByAgentIdsInput!, config: AwsConfig): AwsDiscoveryStopDataCollectionByAgentIdsOutput
  updateApplication(input: AwsDiscoveryUpdateApplicationInput!, config: AwsConfig): JSON
}

input AwsDiscoveryAssociateConfigurationItemsToApplicationInput {
  applicationConfigurationId: String!
  configurationIds: [String]!
}

input AwsDiscoveryBatchDeleteImportDataInput {
  importTaskIds: [String]!
}

type AwsDiscoveryBatchDeleteImportDataOutput {
  errors: [AwsDiscoveryBatchDeleteImportDataOutputErrors]
}

type AwsDiscoveryBatchDeleteImportDataOutputErrors {
  importTaskId: String
  errorCode: String
  errorDescription: String
}

input AwsDiscoveryCreateApplicationInput {
  name: String!
  description: String
}

type AwsDiscoveryCreateApplicationOutput {
  configurationId: String
}

input AwsDiscoveryCreateTagsInput {
  configurationIds: [String]!
  tags: [AwsDiscoverySiInput]!
}

input AwsDiscoveryDeleteApplicationsInput {
  configurationIds: [String]!
}

input AwsDiscoveryDeleteTagsInput {
  configurationIds: [String]!
  tags: [AwsDiscoverySiInput]
}

input AwsDiscoveryDescribeAgentsInput {
  agentIds: [String]
  filters: [AwsDiscoverySvInput]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeAgentsOutput {
  agentsInfo: [AwsDiscoveryDescribeAgentsOutputAgentsInfo]
  nextToken: String
}

type AwsDiscoveryDescribeAgentsOutputAgentsInfo {
  agentId: String
  hostName: String
  agentNetworkInfoList: [AwsDiscoveryDescribeAgentsOutputAgentsInfoAgentNetworkInfoList]
  connectorId: String
  version: String
  health: String
  lastHealthPingTime: String
  collectionStatus: String
  agentType: String
  registeredTime: String
}

type AwsDiscoveryDescribeAgentsOutputAgentsInfoAgentNetworkInfoList {
  ipAddress: String
  macAddress: String
}

input AwsDiscoveryDescribeConfigurationsInput {
  configurationIds: [String]!
}

type AwsDiscoveryDescribeConfigurationsOutput {
  configurations: [JSON]
}

input AwsDiscoveryDescribeContinuousExportsInput {
  exportIds: [String]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeContinuousExportsOutput {
  descriptions: [AwsDiscoveryDescribeContinuousExportsOutputDescriptions]
  nextToken: String
}

type AwsDiscoveryDescribeContinuousExportsOutputDescriptions {
  exportId: String
  status: String
  statusDetail: String
  s3Bucket: String
  startTime: Date
  stopTime: Date
  dataSource: String
  schemaStorageConfig: JSON
}

input AwsDiscoveryDescribeExportConfigurationsInput {
  exportIds: [String]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeExportConfigurationsOutput {
  exportsInfo: [AwsDiscoveryS1t]
  nextToken: String
}

input AwsDiscoveryDescribeExportTasksInput {
  exportIds: [String]
  filters: [AwsDiscoveryS21Input]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeExportTasksOutput {
  exportsInfo: [AwsDiscoveryS1t]
  nextToken: String
}

input AwsDiscoveryDescribeImportTasksFiltersInput {
  name: String
  values: [String]
}

input AwsDiscoveryDescribeImportTasksInput {
  filters: [AwsDiscoveryDescribeImportTasksFiltersInput]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeImportTasksOutput {
  nextToken: String
  tasks: [AwsDiscoveryS2e]
}

input AwsDiscoveryDescribeTagsFiltersInput {
  name: String!
  values: [String]!
}

input AwsDiscoveryDescribeTagsInput {
  filters: [AwsDiscoveryDescribeTagsFiltersInput]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeTagsOutput {
  tags: [AwsDiscoveryDescribeTagsOutputTags]
  nextToken: String
}

type AwsDiscoveryDescribeTagsOutputTags {
  configurationType: String
  configurationId: String
  key: String
  value: String
  timeOfCreation: Date
}

input AwsDiscoveryDisassociateConfigurationItemsFromApplicationInput {
  applicationConfigurationId: String!
  configurationIds: [String]!
}

type AwsDiscoveryExportConfigurationsOutput {
  exportId: String
}

type AwsDiscoveryGetDiscoverySummaryOutput {
  servers: JSON
  applications: JSON
  serversMappedToApplications: JSON
  serversMappedtoTags: JSON
  agentSummary: AwsDiscoveryGetDiscoverySummaryOutputAgentSummary
  connectorSummary: AwsDiscoveryGetDiscoverySummaryOutputConnectorSummary
}

type AwsDiscoveryGetDiscoverySummaryOutputAgentSummary {
  activeAgents: Int!
  healthyAgents: Int!
  blackListedAgents: Int!
  shutdownAgents: Int!
  unhealthyAgents: Int!
  totalAgents: Int!
  unknownAgents: Int!
}

type AwsDiscoveryGetDiscoverySummaryOutputConnectorSummary {
  activeConnectors: Int!
  healthyConnectors: Int!
  blackListedConnectors: Int!
  shutdownConnectors: Int!
  unhealthyConnectors: Int!
  totalConnectors: Int!
  unknownConnectors: Int!
}

input AwsDiscoveryListConfigurationsInput {
  configurationType: String!
  filters: [AwsDiscoverySvInput]
  maxResults: Int
  nextToken: String
  orderBy: [AwsDiscoveryListConfigurationsOrderByInput]
}

input AwsDiscoveryListConfigurationsOrderByInput {
  fieldName: String!
  sortOrder: String
}

type AwsDiscoveryListConfigurationsOutput {
  configurations: [JSON]
  nextToken: String
}

input AwsDiscoveryListServerNeighborsInput {
  configurationId: String!
  portInformationNeeded: Boolean
  neighborConfigurationIds: [String]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryListServerNeighborsOutput {
  neighbors: [AwsDiscoveryListServerNeighborsOutputNeighbors]!
  nextToken: String
  knownDependencyCount: JSON
}

type AwsDiscoveryListServerNeighborsOutputNeighbors {
  sourceServerId: String!
  destinationServerId: String!
  destinationPort: Int
  transportProtocol: String
  connectionsCount: JSON!
}

type AwsDiscoveryS1t {
  exportId: String!
  exportStatus: String!
  statusMessage: String!
  configurationsDownloadUrl: String
  exportRequestTime: Date!
  isTruncated: Boolean
  requestedStartTime: Date
  requestedEndTime: Date
}

input AwsDiscoveryS21Input {
  name: String!
  values: [String]!
  condition: String!
}

type AwsDiscoveryS2e {
  importTaskId: String
  clientRequestToken: String
  name: String
  importUrl: String
  status: String
  importRequestTime: Date
  importCompletionTime: Date
  importDeletedTime: Date
  serverImportSuccess: Int
  serverImportFailure: Int
  applicationImportSuccess: Int
  applicationImportFailure: Int
  errorsAndFailedEntriesZip: String
}

type AwsDiscoveryS3f {
  agentId: String
  operationSucceeded: Boolean
  description: String
}

input AwsDiscoverySiInput {
  key: String!
  value: String!
}

type AwsDiscoveryStartContinuousExportOutput {
  exportId: String
  s3Bucket: String
  startTime: Date
  dataSource: String
  schemaStorageConfig: JSON
}

input AwsDiscoveryStartDataCollectionByAgentIdsInput {
  agentIds: [String]!
}

type AwsDiscoveryStartDataCollectionByAgentIdsOutput {
  agentsConfigurationStatus: [AwsDiscoveryS3f]
}

input AwsDiscoveryStartExportTaskInput {
  exportDataFormat: [String]
  filters: [AwsDiscoveryS21Input]
  startTime: Date
  endTime: Date
}

type AwsDiscoveryStartExportTaskOutput {
  exportId: String
}

input AwsDiscoveryStartImportTaskInput {
  clientRequestToken: String
  name: String!
  importUrl: String!
}

type AwsDiscoveryStartImportTaskOutput {
  task: AwsDiscoveryS2e
}

input AwsDiscoveryStopContinuousExportInput {
  exportId: String!
}

type AwsDiscoveryStopContinuousExportOutput {
  startTime: Date
  stopTime: Date
}

input AwsDiscoveryStopDataCollectionByAgentIdsInput {
  agentIds: [String]!
}

type AwsDiscoveryStopDataCollectionByAgentIdsOutput {
  agentsConfigurationStatus: [AwsDiscoveryS3f]
}

input AwsDiscoverySvInput {
  name: String!
  values: [String]!
  condition: String!
}

input AwsDiscoveryUpdateApplicationInput {
  configurationId: String!
  name: String
  description: String
}

"""Amazon Data Lifecycle Manager (2018-01-12)"""
type AwsDLM {
  createLifecyclePolicy(input: AwsDLMCreateLifecyclePolicyInput!, config: AwsConfig): AwsDLMCreateLifecyclePolicyOutput
  deleteLifecyclePolicy(input: AwsDLMDeleteLifecyclePolicyInput!, config: AwsConfig): JSON
  getLifecyclePolicies(input: AwsDLMGetLifecyclePoliciesInput, config: AwsConfig): AwsDLMGetLifecyclePoliciesOutput
  getLifecyclePolicy(input: AwsDLMGetLifecyclePolicyInput!, config: AwsConfig): AwsDLMGetLifecyclePolicyOutput
  updateLifecyclePolicy(input: AwsDLMUpdateLifecyclePolicyInput!, config: AwsConfig): JSON
}

input AwsDLMCreateLifecyclePolicyInput {
  ExecutionRoleArn: String!
  Description: String!
  State: String!
  PolicyDetails: AwsDLMS5Input!
}

type AwsDLMCreateLifecyclePolicyOutput {
  PolicyId: String
}

input AwsDLMDeleteLifecyclePolicyInput {
  PolicyId: String!
}

input AwsDLMGetLifecyclePoliciesInput {
  PolicyIds: [String]
  State: String
  ResourceTypes: [String]
  TargetTags: [String]
  TagsToAdd: [String]
}

type AwsDLMGetLifecyclePoliciesOutput {
  Policies: [AwsDLMGetLifecyclePoliciesOutputPolicies]
}

type AwsDLMGetLifecyclePoliciesOutputPolicies {
  PolicyId: String
  Description: String
  State: String
}

input AwsDLMGetLifecyclePolicyInput {
  PolicyId: String!
}

type AwsDLMGetLifecyclePolicyOutput {
  Policy: AwsDLMGetLifecyclePolicyOutputPolicy
}

type AwsDLMGetLifecyclePolicyOutputPolicy {
  PolicyId: String
  Description: String
  State: String
  ExecutionRoleArn: String
  DateCreated: Date
  DateModified: Date
  PolicyDetails: AwsDLMS5
}

type AwsDLMS5 {
  PolicyType: String
  ResourceTypes: [String]
  TargetTags: [AwsDLMSa]
  Schedules: [AwsDLMS5Schedules]
  Parameters: AwsDLMS5Parameters
}

input AwsDLMS5Input {
  PolicyType: String
  ResourceTypes: [String]
  TargetTags: [AwsDLMSaInput]
  Schedules: [AwsDLMS5SchedulesInput]
  Parameters: AwsDLMS5ParametersInput
}

type AwsDLMS5Parameters {
  ExcludeBootVolume: Boolean
}

input AwsDLMS5ParametersInput {
  ExcludeBootVolume: Boolean
}

type AwsDLMS5Schedules {
  Name: String
  CopyTags: Boolean
  TagsToAdd: [AwsDLMSa]
  VariableTags: [AwsDLMSa]
  CreateRule: AwsDLMS5SchedulesCreateRule
  RetainRule: AwsDLMS5SchedulesRetainRule
}

type AwsDLMS5SchedulesCreateRule {
  Interval: Int!
  IntervalUnit: String!
  Times: [String]
}

input AwsDLMS5SchedulesCreateRuleInput {
  Interval: Int!
  IntervalUnit: String!
  Times: [String]
}

input AwsDLMS5SchedulesInput {
  Name: String
  CopyTags: Boolean
  TagsToAdd: [AwsDLMSaInput]
  VariableTags: [AwsDLMSaInput]
  CreateRule: AwsDLMS5SchedulesCreateRuleInput
  RetainRule: AwsDLMS5SchedulesRetainRuleInput
}

type AwsDLMS5SchedulesRetainRule {
  Count: Int!
}

input AwsDLMS5SchedulesRetainRuleInput {
  Count: Int!
}

type AwsDLMSa {
  Key: String!
  Value: String!
}

input AwsDLMSaInput {
  Key: String!
  Value: String!
}

input AwsDLMUpdateLifecyclePolicyInput {
  PolicyId: String!
  ExecutionRoleArn: String
  State: String
  Description: String
  PolicyDetails: AwsDLMS5Input
}

"""AWS Database Migration Service (2016-01-01)"""
type AwsDMS {
  addTagsToResource(input: AwsDMSAddTagsToResourceInput!, config: AwsConfig): JSON
  applyPendingMaintenanceAction(input: AwsDMSApplyPendingMaintenanceActionInput!, config: AwsConfig): AwsDMSApplyPendingMaintenanceActionOutput
  createEndpoint(input: AwsDMSCreateEndpointInput!, config: AwsConfig): AwsDMSCreateEndpointOutput
  createEventSubscription(input: AwsDMSCreateEventSubscriptionInput!, config: AwsConfig): AwsDMSCreateEventSubscriptionOutput
  createReplicationInstance(input: AwsDMSCreateReplicationInstanceInput!, config: AwsConfig): AwsDMSCreateReplicationInstanceOutput
  createReplicationSubnetGroup(input: AwsDMSCreateReplicationSubnetGroupInput!, config: AwsConfig): AwsDMSCreateReplicationSubnetGroupOutput
  createReplicationTask(input: AwsDMSCreateReplicationTaskInput!, config: AwsConfig): AwsDMSCreateReplicationTaskOutput
  deleteCertificate(input: AwsDMSDeleteCertificateInput!, config: AwsConfig): AwsDMSDeleteCertificateOutput
  deleteEndpoint(input: AwsDMSDeleteEndpointInput!, config: AwsConfig): AwsDMSDeleteEndpointOutput
  deleteEventSubscription(input: AwsDMSDeleteEventSubscriptionInput!, config: AwsConfig): AwsDMSDeleteEventSubscriptionOutput
  deleteReplicationInstance(input: AwsDMSDeleteReplicationInstanceInput!, config: AwsConfig): AwsDMSDeleteReplicationInstanceOutput
  deleteReplicationSubnetGroup(input: AwsDMSDeleteReplicationSubnetGroupInput!, config: AwsConfig): JSON
  deleteReplicationTask(input: AwsDMSDeleteReplicationTaskInput!, config: AwsConfig): AwsDMSDeleteReplicationTaskOutput
  describeAccountAttributes(input: JSON, config: AwsConfig): AwsDMSDescribeAccountAttributesOutput
  describeCertificates(input: AwsDMSDescribeCertificatesInput, config: AwsConfig): AwsDMSDescribeCertificatesOutput
  describeConnections(input: AwsDMSDescribeConnectionsInput, config: AwsConfig): AwsDMSDescribeConnectionsOutput
  describeEndpointTypes(input: AwsDMSDescribeEndpointTypesInput, config: AwsConfig): AwsDMSDescribeEndpointTypesOutput
  describeEndpoints(input: AwsDMSDescribeEndpointsInput, config: AwsConfig): AwsDMSDescribeEndpointsOutput
  describeEventCategories(input: AwsDMSDescribeEventCategoriesInput, config: AwsConfig): AwsDMSDescribeEventCategoriesOutput
  describeEventSubscriptions(input: AwsDMSDescribeEventSubscriptionsInput, config: AwsConfig): AwsDMSDescribeEventSubscriptionsOutput
  describeEvents(input: AwsDMSDescribeEventsInput, config: AwsConfig): AwsDMSDescribeEventsOutput
  describeOrderableReplicationInstances(input: AwsDMSDescribeOrderableReplicationInstancesInput, config: AwsConfig): AwsDMSDescribeOrderableReplicationInstancesOutput
  describePendingMaintenanceActions(input: AwsDMSDescribePendingMaintenanceActionsInput, config: AwsConfig): AwsDMSDescribePendingMaintenanceActionsOutput
  describeRefreshSchemasStatus(input: AwsDMSDescribeRefreshSchemasStatusInput!, config: AwsConfig): AwsDMSDescribeRefreshSchemasStatusOutput
  describeReplicationInstanceTaskLogs(input: AwsDMSDescribeReplicationInstanceTaskLogsInput!, config: AwsConfig): AwsDMSDescribeReplicationInstanceTaskLogsOutput
  describeReplicationInstances(input: AwsDMSDescribeReplicationInstancesInput, config: AwsConfig): AwsDMSDescribeReplicationInstancesOutput
  describeReplicationSubnetGroups(input: AwsDMSDescribeReplicationSubnetGroupsInput, config: AwsConfig): AwsDMSDescribeReplicationSubnetGroupsOutput
  describeReplicationTaskAssessmentResults(input: AwsDMSDescribeReplicationTaskAssessmentResultsInput, config: AwsConfig): AwsDMSDescribeReplicationTaskAssessmentResultsOutput
  describeReplicationTasks(input: AwsDMSDescribeReplicationTasksInput, config: AwsConfig): AwsDMSDescribeReplicationTasksOutput
  describeSchemas(input: AwsDMSDescribeSchemasInput!, config: AwsConfig): AwsDMSDescribeSchemasOutput
  describeTableStatistics(input: AwsDMSDescribeTableStatisticsInput!, config: AwsConfig): AwsDMSDescribeTableStatisticsOutput
  importCertificate(input: AwsDMSImportCertificateInput!, config: AwsConfig): AwsDMSImportCertificateOutput
  listTagsForResource(input: AwsDMSListTagsForResourceInput!, config: AwsConfig): AwsDMSListTagsForResourceOutput
  modifyEndpoint(input: AwsDMSModifyEndpointInput!, config: AwsConfig): AwsDMSModifyEndpointOutput
  modifyEventSubscription(input: AwsDMSModifyEventSubscriptionInput!, config: AwsConfig): AwsDMSModifyEventSubscriptionOutput
  modifyReplicationInstance(input: AwsDMSModifyReplicationInstanceInput!, config: AwsConfig): AwsDMSModifyReplicationInstanceOutput
  modifyReplicationSubnetGroup(input: AwsDMSModifyReplicationSubnetGroupInput!, config: AwsConfig): AwsDMSModifyReplicationSubnetGroupOutput
  modifyReplicationTask(input: AwsDMSModifyReplicationTaskInput!, config: AwsConfig): AwsDMSModifyReplicationTaskOutput
  rebootReplicationInstance(input: AwsDMSRebootReplicationInstanceInput!, config: AwsConfig): AwsDMSRebootReplicationInstanceOutput
  refreshSchemas(input: AwsDMSRefreshSchemasInput!, config: AwsConfig): AwsDMSRefreshSchemasOutput
  reloadTables(input: AwsDMSReloadTablesInput!, config: AwsConfig): AwsDMSReloadTablesOutput
  removeTagsFromResource(input: AwsDMSRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  startReplicationTask(input: AwsDMSStartReplicationTaskInput!, config: AwsConfig): AwsDMSStartReplicationTaskOutput
  startReplicationTaskAssessment(input: AwsDMSStartReplicationTaskAssessmentInput!, config: AwsConfig): AwsDMSStartReplicationTaskAssessmentOutput
  stopReplicationTask(input: AwsDMSStopReplicationTaskInput!, config: AwsConfig): AwsDMSStopReplicationTaskOutput
  testConnection(input: AwsDMSTestConnectionInput!, config: AwsConfig): AwsDMSTestConnectionOutput
}

input AwsDMSAddTagsToResourceInput {
  ResourceArn: String!
  Tags: [AwsDMSS3Input]!
}

input AwsDMSApplyPendingMaintenanceActionInput {
  ReplicationInstanceArn: String!
  ApplyAction: String!
  OptInType: String!
}

type AwsDMSApplyPendingMaintenanceActionOutput {
  ResourcePendingMaintenanceActions: AwsDMSS8
}

input AwsDMSCreateEndpointInput {
  EndpointIdentifier: String!
  EndpointType: String!
  EngineName: String!
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  ExtraConnectionAttributes: String
  KmsKeyId: String
  Tags: [AwsDMSS3Input]
  CertificateArn: String
  SslMode: String
  ServiceAccessRoleArn: String
  ExternalTableDefinition: String
  DynamoDbSettings: AwsDMSShInput
  S3Settings: AwsDMSSiInput
  DmsTransferSettings: AwsDMSSpInput
  MongoDbSettings: AwsDMSSqInput
  KinesisSettings: AwsDMSSuInput
  ElasticsearchSettings: AwsDMSSwInput
  RedshiftSettings: AwsDMSSxInput
}

type AwsDMSCreateEndpointOutput {
  Endpoint: AwsDMSSz
}

input AwsDMSCreateEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String!
  SourceType: String
  EventCategories: [String]
  SourceIds: [String]
  Enabled: Boolean
  Tags: [AwsDMSS3Input]
}

type AwsDMSCreateEventSubscriptionOutput {
  EventSubscription: AwsDMSS14
}

input AwsDMSCreateReplicationInstanceInput {
  ReplicationInstanceIdentifier: String!
  AllocatedStorage: Int
  ReplicationInstanceClass: String!
  VpcSecurityGroupIds: [String]
  AvailabilityZone: String
  ReplicationSubnetGroupIdentifier: String
  PreferredMaintenanceWindow: String
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  Tags: [AwsDMSS3Input]
  KmsKeyId: String
  PubliclyAccessible: Boolean
  DnsNameServers: String
}

type AwsDMSCreateReplicationInstanceOutput {
  ReplicationInstance: AwsDMSS19
}

input AwsDMSCreateReplicationSubnetGroupInput {
  ReplicationSubnetGroupIdentifier: String!
  ReplicationSubnetGroupDescription: String!
  SubnetIds: [String]!
  Tags: [AwsDMSS3Input]
}

type AwsDMSCreateReplicationSubnetGroupOutput {
  ReplicationSubnetGroup: AwsDMSS1d
}

input AwsDMSCreateReplicationTaskInput {
  ReplicationTaskIdentifier: String!
  SourceEndpointArn: String!
  TargetEndpointArn: String!
  ReplicationInstanceArn: String!
  MigrationType: String!
  TableMappings: String!
  ReplicationTaskSettings: String
  CdcStartTime: Date
  CdcStartPosition: String
  CdcStopPosition: String
  Tags: [AwsDMSS3Input]
}

type AwsDMSCreateReplicationTaskOutput {
  ReplicationTask: AwsDMSS1q
}

input AwsDMSDeleteCertificateInput {
  CertificateArn: String!
}

type AwsDMSDeleteCertificateOutput {
  Certificate: AwsDMSS1v
}

input AwsDMSDeleteEndpointInput {
  EndpointArn: String!
}

type AwsDMSDeleteEndpointOutput {
  Endpoint: AwsDMSSz
}

input AwsDMSDeleteEventSubscriptionInput {
  SubscriptionName: String!
}

type AwsDMSDeleteEventSubscriptionOutput {
  EventSubscription: AwsDMSS14
}

input AwsDMSDeleteReplicationInstanceInput {
  ReplicationInstanceArn: String!
}

type AwsDMSDeleteReplicationInstanceOutput {
  ReplicationInstance: AwsDMSS19
}

input AwsDMSDeleteReplicationSubnetGroupInput {
  ReplicationSubnetGroupIdentifier: String!
}

input AwsDMSDeleteReplicationTaskInput {
  ReplicationTaskArn: String!
}

type AwsDMSDeleteReplicationTaskOutput {
  ReplicationTask: AwsDMSS1q
}

type AwsDMSDescribeAccountAttributesOutput {
  AccountQuotas: [AwsDMSDescribeAccountAttributesOutputAccountQuotas]
}

type AwsDMSDescribeAccountAttributesOutputAccountQuotas {
  AccountQuotaName: String
  Used: JSON
  Max: JSON
}

input AwsDMSDescribeCertificatesInput {
  Filters: [AwsDMSS2cInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeCertificatesOutput {
  Marker: String
  Certificates: [AwsDMSS1v]
}

input AwsDMSDescribeConnectionsInput {
  Filters: [AwsDMSS2cInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeConnectionsOutput {
  Marker: String
  Connections: [AwsDMSS2k]
}

input AwsDMSDescribeEndpointsInput {
  Filters: [AwsDMSS2cInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeEndpointsOutput {
  Marker: String
  Endpoints: [AwsDMSSz]
}

input AwsDMSDescribeEndpointTypesInput {
  Filters: [AwsDMSS2cInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeEndpointTypesOutput {
  Marker: String
  SupportedEndpointTypes: [AwsDMSDescribeEndpointTypesOutputSupportedEndpointTypes]
}

type AwsDMSDescribeEndpointTypesOutputSupportedEndpointTypes {
  EngineName: String
  SupportsCDC: Boolean
  EndpointType: String
  EngineDisplayName: String
}

input AwsDMSDescribeEventCategoriesInput {
  SourceType: String
  Filters: [AwsDMSS2cInput]
}

type AwsDMSDescribeEventCategoriesOutput {
  EventCategoryGroupList: [AwsDMSDescribeEventCategoriesOutputEventCategoryGroupList]
}

type AwsDMSDescribeEventCategoriesOutputEventCategoryGroupList {
  SourceType: String
  EventCategories: [String]
}

input AwsDMSDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  EventCategories: [String]
  Filters: [AwsDMSS2cInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeEventsOutput {
  Marker: String
  Events: [AwsDMSDescribeEventsOutputEvents]
}

type AwsDMSDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Date: Date
}

input AwsDMSDescribeEventSubscriptionsInput {
  SubscriptionName: String
  Filters: [AwsDMSS2cInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeEventSubscriptionsOutput {
  Marker: String
  EventSubscriptionsList: [AwsDMSS14]
}

input AwsDMSDescribeOrderableReplicationInstancesInput {
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeOrderableReplicationInstancesOutput {
  OrderableReplicationInstances: [AwsDMSDescribeOrderableReplicationInstancesOutputOrderableReplicationInstances]
  Marker: String
}

type AwsDMSDescribeOrderableReplicationInstancesOutputOrderableReplicationInstances {
  EngineVersion: String
  ReplicationInstanceClass: String
  StorageType: String
  MinAllocatedStorage: Int
  MaxAllocatedStorage: Int
  DefaultAllocatedStorage: Int
  IncludedAllocatedStorage: Int
  AvailabilityZones: [String]
}

input AwsDMSDescribePendingMaintenanceActionsInput {
  ReplicationInstanceArn: String
  Filters: [AwsDMSS2cInput]
  Marker: String
  MaxRecords: Int
}

type AwsDMSDescribePendingMaintenanceActionsOutput {
  PendingMaintenanceActions: [AwsDMSS8]
  Marker: String
}

input AwsDMSDescribeRefreshSchemasStatusInput {
  EndpointArn: String!
}

type AwsDMSDescribeRefreshSchemasStatusOutput {
  RefreshSchemasStatus: AwsDMSS3e
}

input AwsDMSDescribeReplicationInstancesInput {
  Filters: [AwsDMSS2cInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeReplicationInstancesOutput {
  Marker: String
  ReplicationInstances: [AwsDMSS19]
}

input AwsDMSDescribeReplicationInstanceTaskLogsInput {
  ReplicationInstanceArn: String!
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeReplicationInstanceTaskLogsOutput {
  ReplicationInstanceArn: String
  ReplicationInstanceTaskLogs: [AwsDMSDescribeReplicationInstanceTaskLogsOutputReplicationInstanceTaskLogs]
  Marker: String
}

type AwsDMSDescribeReplicationInstanceTaskLogsOutputReplicationInstanceTaskLogs {
  ReplicationTaskName: String
  ReplicationTaskArn: String
  ReplicationInstanceTaskLogSize: JSON
}

input AwsDMSDescribeReplicationSubnetGroupsInput {
  Filters: [AwsDMSS2cInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeReplicationSubnetGroupsOutput {
  Marker: String
  ReplicationSubnetGroups: [AwsDMSS1d]
}

input AwsDMSDescribeReplicationTaskAssessmentResultsInput {
  ReplicationTaskArn: String
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeReplicationTaskAssessmentResultsOutput {
  Marker: String
  BucketName: String
  ReplicationTaskAssessmentResults: [AwsDMSDescribeReplicationTaskAssessmentResultsOutputReplicationTaskAssessmentResults]
}

type AwsDMSDescribeReplicationTaskAssessmentResultsOutputReplicationTaskAssessmentResults {
  ReplicationTaskIdentifier: String
  ReplicationTaskArn: String
  ReplicationTaskLastAssessmentDate: Date
  AssessmentStatus: String
  AssessmentResultsFile: String
  AssessmentResults: String
  S3ObjectUrl: String
}

input AwsDMSDescribeReplicationTasksInput {
  Filters: [AwsDMSS2cInput]
  MaxRecords: Int
  Marker: String
  WithoutSettings: Boolean
}

type AwsDMSDescribeReplicationTasksOutput {
  Marker: String
  ReplicationTasks: [AwsDMSS1q]
}

input AwsDMSDescribeSchemasInput {
  EndpointArn: String!
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeSchemasOutput {
  Marker: String
  Schemas: [String]
}

input AwsDMSDescribeTableStatisticsInput {
  ReplicationTaskArn: String!
  MaxRecords: Int
  Marker: String
  Filters: [AwsDMSS2cInput]
}

type AwsDMSDescribeTableStatisticsOutput {
  ReplicationTaskArn: String
  TableStatistics: [AwsDMSDescribeTableStatisticsOutputTableStatistics]
  Marker: String
}

type AwsDMSDescribeTableStatisticsOutputTableStatistics {
  SchemaName: String
  TableName: String
  Inserts: JSON
  Deletes: JSON
  Updates: JSON
  Ddls: JSON
  FullLoadRows: JSON
  FullLoadCondtnlChkFailedRows: JSON
  FullLoadErrorRows: JSON
  LastUpdateTime: Date
  TableState: String
  ValidationPendingRecords: JSON
  ValidationFailedRecords: JSON
  ValidationSuspendedRecords: JSON
  ValidationState: String
  ValidationStateDetails: String
}

input AwsDMSImportCertificateInput {
  CertificateIdentifier: String!
  CertificatePem: String
  CertificateWallet: JSON
  Tags: [AwsDMSS3Input]
}

type AwsDMSImportCertificateOutput {
  Certificate: AwsDMSS1v
}

input AwsDMSListTagsForResourceInput {
  ResourceArn: String!
}

type AwsDMSListTagsForResourceOutput {
  TagList: [AwsDMSS3]
}

input AwsDMSModifyEndpointInput {
  EndpointArn: String!
  EndpointIdentifier: String
  EndpointType: String
  EngineName: String
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  ExtraConnectionAttributes: String
  CertificateArn: String
  SslMode: String
  ServiceAccessRoleArn: String
  ExternalTableDefinition: String
  DynamoDbSettings: AwsDMSShInput
  S3Settings: AwsDMSSiInput
  DmsTransferSettings: AwsDMSSpInput
  MongoDbSettings: AwsDMSSqInput
  KinesisSettings: AwsDMSSuInput
  ElasticsearchSettings: AwsDMSSwInput
  RedshiftSettings: AwsDMSSxInput
}

type AwsDMSModifyEndpointOutput {
  Endpoint: AwsDMSSz
}

input AwsDMSModifyEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String
  SourceType: String
  EventCategories: [String]
  Enabled: Boolean
}

type AwsDMSModifyEventSubscriptionOutput {
  EventSubscription: AwsDMSS14
}

input AwsDMSModifyReplicationInstanceInput {
  ReplicationInstanceArn: String!
  AllocatedStorage: Int
  ApplyImmediately: Boolean
  ReplicationInstanceClass: String
  VpcSecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  MultiAZ: Boolean
  EngineVersion: String
  AllowMajorVersionUpgrade: Boolean
  AutoMinorVersionUpgrade: Boolean
  ReplicationInstanceIdentifier: String
}

type AwsDMSModifyReplicationInstanceOutput {
  ReplicationInstance: AwsDMSS19
}

input AwsDMSModifyReplicationSubnetGroupInput {
  ReplicationSubnetGroupIdentifier: String!
  ReplicationSubnetGroupDescription: String
  SubnetIds: [String]!
}

type AwsDMSModifyReplicationSubnetGroupOutput {
  ReplicationSubnetGroup: AwsDMSS1d
}

input AwsDMSModifyReplicationTaskInput {
  ReplicationTaskArn: String!
  ReplicationTaskIdentifier: String
  MigrationType: String
  TableMappings: String
  ReplicationTaskSettings: String
  CdcStartTime: Date
  CdcStartPosition: String
  CdcStopPosition: String
}

type AwsDMSModifyReplicationTaskOutput {
  ReplicationTask: AwsDMSS1q
}

input AwsDMSRebootReplicationInstanceInput {
  ReplicationInstanceArn: String!
  ForceFailover: Boolean
}

type AwsDMSRebootReplicationInstanceOutput {
  ReplicationInstance: AwsDMSS19
}

input AwsDMSRefreshSchemasInput {
  EndpointArn: String!
  ReplicationInstanceArn: String!
}

type AwsDMSRefreshSchemasOutput {
  RefreshSchemasStatus: AwsDMSS3e
}

input AwsDMSReloadTablesInput {
  ReplicationTaskArn: String!
  TablesToReload: [AwsDMSReloadTablesTablesToReloadInput]!
  ReloadOption: String
}

type AwsDMSReloadTablesOutput {
  ReplicationTaskArn: String
}

input AwsDMSReloadTablesTablesToReloadInput {
  SchemaName: String
  TableName: String
}

input AwsDMSRemoveTagsFromResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

type AwsDMSS14 {
  CustomerAwsId: String
  CustSubscriptionId: String
  SnsTopicArn: String
  Status: String
  SubscriptionCreationTime: String
  SourceType: String
  SourceIdsList: [String]
  EventCategoriesList: [String]
  Enabled: Boolean
}

type AwsDMSS19 {
  ReplicationInstanceIdentifier: String
  ReplicationInstanceClass: String
  ReplicationInstanceStatus: String
  AllocatedStorage: Int
  InstanceCreateTime: Date
  VpcSecurityGroups: [AwsDMSS19VpcSecurityGroups]
  AvailabilityZone: String
  ReplicationSubnetGroup: AwsDMSS1d
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsDMSS19PendingModifiedValues
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  KmsKeyId: String
  ReplicationInstanceArn: String
  ReplicationInstancePublicIpAddress: String
  ReplicationInstancePrivateIpAddress: String
  ReplicationInstancePublicIpAddresses: [String]
  ReplicationInstancePrivateIpAddresses: [String]
  PubliclyAccessible: Boolean
  SecondaryAvailabilityZone: String
  FreeUntil: Date
  DnsNameServers: String
}

type AwsDMSS19PendingModifiedValues {
  ReplicationInstanceClass: String
  AllocatedStorage: Int
  MultiAZ: Boolean
  EngineVersion: String
}

type AwsDMSS19VpcSecurityGroups {
  VpcSecurityGroupId: String
  Status: String
}

type AwsDMSS1d {
  ReplicationSubnetGroupIdentifier: String
  ReplicationSubnetGroupDescription: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsDMSS1dSubnets]
}

type AwsDMSS1dSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsDMSS1dSubnetsSubnetAvailabilityZone
  SubnetStatus: String
}

type AwsDMSS1dSubnetsSubnetAvailabilityZone {
  Name: String
}

type AwsDMSS1q {
  ReplicationTaskIdentifier: String
  SourceEndpointArn: String
  TargetEndpointArn: String
  ReplicationInstanceArn: String
  MigrationType: String
  TableMappings: String
  ReplicationTaskSettings: String
  Status: String
  LastFailureMessage: String
  StopReason: String
  ReplicationTaskCreationDate: Date
  ReplicationTaskStartDate: Date
  CdcStartPosition: String
  CdcStopPosition: String
  RecoveryCheckpoint: String
  ReplicationTaskArn: String
  ReplicationTaskStats: AwsDMSS1qReplicationTaskStats
}

type AwsDMSS1qReplicationTaskStats {
  FullLoadProgressPercent: Int
  ElapsedTimeMillis: JSON
  TablesLoaded: Int
  TablesLoading: Int
  TablesQueued: Int
  TablesErrored: Int
}

type AwsDMSS1v {
  CertificateIdentifier: String
  CertificateCreationDate: Date
  CertificatePem: String
  CertificateWallet: JSON
  CertificateArn: String
  CertificateOwner: String
  ValidFromDate: Date
  ValidToDate: Date
  SigningAlgorithm: String
  KeyLength: Int
}

input AwsDMSS2cInput {
  Name: String!
  Values: [String]!
}

type AwsDMSS2k {
  ReplicationInstanceArn: String
  EndpointArn: String
  Status: String
  LastFailureMessage: String
  EndpointIdentifier: String
  ReplicationInstanceIdentifier: String
}

type AwsDMSS3 {
  Key: String
  Value: String
}

type AwsDMSS3e {
  EndpointArn: String
  ReplicationInstanceArn: String
  Status: String
  LastRefreshDate: Date
  LastFailureMessage: String
}

input AwsDMSS3Input {
  Key: String
  Value: String
}

type AwsDMSS8 {
  ResourceIdentifier: String
  PendingMaintenanceActionDetails: [AwsDMSS8PendingMaintenanceActionDetails]
}

type AwsDMSS8PendingMaintenanceActionDetails {
  Action: String
  AutoAppliedAfterDate: Date
  ForcedApplyDate: Date
  OptInStatus: String
  CurrentApplyDate: Date
  Description: String
}

type AwsDMSSh {
  ServiceAccessRoleArn: String!
}

input AwsDMSShInput {
  ServiceAccessRoleArn: String!
}

type AwsDMSSi {
  ServiceAccessRoleArn: String
  ExternalTableDefinition: String
  CsvRowDelimiter: String
  CsvDelimiter: String
  BucketFolder: String
  BucketName: String
  CompressionType: String
  EncryptionMode: String
  ServerSideEncryptionKmsKeyId: String
  DataFormat: String
  EncodingType: String
  DictPageSizeLimit: Int
  RowGroupLength: Int
  DataPageSize: Int
  ParquetVersion: String
  EnableStatistics: Boolean
  CdcInsertsOnly: Boolean
}

input AwsDMSSiInput {
  ServiceAccessRoleArn: String
  ExternalTableDefinition: String
  CsvRowDelimiter: String
  CsvDelimiter: String
  BucketFolder: String
  BucketName: String
  CompressionType: String
  EncryptionMode: String
  ServerSideEncryptionKmsKeyId: String
  DataFormat: String
  EncodingType: String
  DictPageSizeLimit: Int
  RowGroupLength: Int
  DataPageSize: Int
  ParquetVersion: String
  EnableStatistics: Boolean
  CdcInsertsOnly: Boolean
}

type AwsDMSSp {
  ServiceAccessRoleArn: String
  BucketName: String
}

input AwsDMSSpInput {
  ServiceAccessRoleArn: String
  BucketName: String
}

type AwsDMSSq {
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  AuthType: String
  AuthMechanism: String
  NestingLevel: String
  ExtractDocId: String
  DocsToInvestigate: String
  AuthSource: String
  KmsKeyId: String
}

input AwsDMSSqInput {
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  AuthType: String
  AuthMechanism: String
  NestingLevel: String
  ExtractDocId: String
  DocsToInvestigate: String
  AuthSource: String
  KmsKeyId: String
}

input AwsDMSStartReplicationTaskAssessmentInput {
  ReplicationTaskArn: String!
}

type AwsDMSStartReplicationTaskAssessmentOutput {
  ReplicationTask: AwsDMSS1q
}

input AwsDMSStartReplicationTaskInput {
  ReplicationTaskArn: String!
  StartReplicationTaskType: String!
  CdcStartTime: Date
  CdcStartPosition: String
  CdcStopPosition: String
}

type AwsDMSStartReplicationTaskOutput {
  ReplicationTask: AwsDMSS1q
}

input AwsDMSStopReplicationTaskInput {
  ReplicationTaskArn: String!
}

type AwsDMSStopReplicationTaskOutput {
  ReplicationTask: AwsDMSS1q
}

type AwsDMSSu {
  StreamArn: String
  MessageFormat: String
  ServiceAccessRoleArn: String
}

input AwsDMSSuInput {
  StreamArn: String
  MessageFormat: String
  ServiceAccessRoleArn: String
}

type AwsDMSSw {
  ServiceAccessRoleArn: String!
  EndpointUri: String!
  FullLoadErrorPercentage: Int
  ErrorRetryDuration: Int
}

input AwsDMSSwInput {
  ServiceAccessRoleArn: String!
  EndpointUri: String!
  FullLoadErrorPercentage: Int
  ErrorRetryDuration: Int
}

type AwsDMSSx {
  AcceptAnyDate: Boolean
  AfterConnectScript: String
  BucketFolder: String
  BucketName: String
  ConnectionTimeout: Int
  DatabaseName: String
  DateFormat: String
  EmptyAsNull: Boolean
  EncryptionMode: String
  FileTransferUploadStreams: Int
  LoadTimeout: Int
  MaxFileSize: Int
  Password: String
  Port: Int
  RemoveQuotes: Boolean
  ReplaceInvalidChars: String
  ReplaceChars: String
  ServerName: String
  ServiceAccessRoleArn: String
  ServerSideEncryptionKmsKeyId: String
  TimeFormat: String
  TrimBlanks: Boolean
  TruncateColumns: Boolean
  Username: String
  WriteBufferSize: Int
}

input AwsDMSSxInput {
  AcceptAnyDate: Boolean
  AfterConnectScript: String
  BucketFolder: String
  BucketName: String
  ConnectionTimeout: Int
  DatabaseName: String
  DateFormat: String
  EmptyAsNull: Boolean
  EncryptionMode: String
  FileTransferUploadStreams: Int
  LoadTimeout: Int
  MaxFileSize: Int
  Password: String
  Port: Int
  RemoveQuotes: Boolean
  ReplaceInvalidChars: String
  ReplaceChars: String
  ServerName: String
  ServiceAccessRoleArn: String
  ServerSideEncryptionKmsKeyId: String
  TimeFormat: String
  TrimBlanks: Boolean
  TruncateColumns: Boolean
  Username: String
  WriteBufferSize: Int
}

type AwsDMSSz {
  EndpointIdentifier: String
  EndpointType: String
  EngineName: String
  EngineDisplayName: String
  Username: String
  ServerName: String
  Port: Int
  DatabaseName: String
  ExtraConnectionAttributes: String
  Status: String
  KmsKeyId: String
  EndpointArn: String
  CertificateArn: String
  SslMode: String
  ServiceAccessRoleArn: String
  ExternalTableDefinition: String
  ExternalId: String
  DynamoDbSettings: AwsDMSSh
  S3Settings: AwsDMSSi
  DmsTransferSettings: AwsDMSSp
  MongoDbSettings: AwsDMSSq
  KinesisSettings: AwsDMSSu
  ElasticsearchSettings: AwsDMSSw
  RedshiftSettings: AwsDMSSx
}

input AwsDMSTestConnectionInput {
  ReplicationInstanceArn: String!
  EndpointArn: String!
}

type AwsDMSTestConnectionOutput {
  Connection: AwsDMSS2k
}

"""Amazon DocumentDB with MongoDB compatibility (2014-10-31)"""
type AwsDocDB {
  addTagsToResource(input: AwsDocDBAddTagsToResourceInput!, config: AwsConfig): JSON
  applyPendingMaintenanceAction(input: AwsDocDBApplyPendingMaintenanceActionInput!, config: AwsConfig): AwsDocDBApplyPendingMaintenanceActionOutput
  copyDBClusterParameterGroup(input: AwsDocDBCopyDBClusterParameterGroupInput!, config: AwsConfig): AwsDocDBCopyDBClusterParameterGroupOutput
  copyDBClusterSnapshot(input: AwsDocDBCopyDBClusterSnapshotInput!, config: AwsConfig): AwsDocDBCopyDBClusterSnapshotOutput
  createDBCluster(input: AwsDocDBCreateDBClusterInput!, config: AwsConfig): AwsDocDBCreateDBClusterOutput
  createDBClusterParameterGroup(input: AwsDocDBCreateDBClusterParameterGroupInput!, config: AwsConfig): AwsDocDBCreateDBClusterParameterGroupOutput
  createDBClusterSnapshot(input: AwsDocDBCreateDBClusterSnapshotInput!, config: AwsConfig): AwsDocDBCreateDBClusterSnapshotOutput
  createDBInstance(input: AwsDocDBCreateDBInstanceInput!, config: AwsConfig): AwsDocDBCreateDBInstanceOutput
  createDBSubnetGroup(input: AwsDocDBCreateDBSubnetGroupInput!, config: AwsConfig): AwsDocDBCreateDBSubnetGroupOutput
  deleteDBCluster(input: AwsDocDBDeleteDBClusterInput!, config: AwsConfig): AwsDocDBDeleteDBClusterOutput
  deleteDBClusterParameterGroup(input: AwsDocDBDeleteDBClusterParameterGroupInput!, config: AwsConfig): JSON
  deleteDBClusterSnapshot(input: AwsDocDBDeleteDBClusterSnapshotInput!, config: AwsConfig): AwsDocDBDeleteDBClusterSnapshotOutput
  deleteDBInstance(input: AwsDocDBDeleteDBInstanceInput!, config: AwsConfig): AwsDocDBDeleteDBInstanceOutput
  deleteDBSubnetGroup(input: AwsDocDBDeleteDBSubnetGroupInput!, config: AwsConfig): JSON
  describeDBClusterParameterGroups(input: AwsDocDBDescribeDBClusterParameterGroupsInput, config: AwsConfig): AwsDocDBDescribeDBClusterParameterGroupsOutput
  describeDBClusterParameters(input: AwsDocDBDescribeDBClusterParametersInput!, config: AwsConfig): AwsDocDBDescribeDBClusterParametersOutput
  describeDBClusterSnapshotAttributes(input: AwsDocDBDescribeDBClusterSnapshotAttributesInput!, config: AwsConfig): AwsDocDBDescribeDBClusterSnapshotAttributesOutput
  describeDBClusterSnapshots(input: AwsDocDBDescribeDBClusterSnapshotsInput, config: AwsConfig): AwsDocDBDescribeDBClusterSnapshotsOutput
  describeDBClusters(input: AwsDocDBDescribeDBClustersInput, config: AwsConfig): AwsDocDBDescribeDBClustersOutput
  describeDBEngineVersions(input: AwsDocDBDescribeDBEngineVersionsInput, config: AwsConfig): AwsDocDBDescribeDBEngineVersionsOutput
  describeDBInstances(input: AwsDocDBDescribeDBInstancesInput, config: AwsConfig): AwsDocDBDescribeDBInstancesOutput
  describeDBSubnetGroups(input: AwsDocDBDescribeDBSubnetGroupsInput, config: AwsConfig): AwsDocDBDescribeDBSubnetGroupsOutput
  describeEngineDefaultClusterParameters(input: AwsDocDBDescribeEngineDefaultClusterParametersInput!, config: AwsConfig): AwsDocDBDescribeEngineDefaultClusterParametersOutput
  describeEventCategories(input: AwsDocDBDescribeEventCategoriesInput, config: AwsConfig): AwsDocDBDescribeEventCategoriesOutput
  describeEvents(input: AwsDocDBDescribeEventsInput, config: AwsConfig): AwsDocDBDescribeEventsOutput
  describeOrderableDBInstanceOptions(input: AwsDocDBDescribeOrderableDBInstanceOptionsInput!, config: AwsConfig): AwsDocDBDescribeOrderableDBInstanceOptionsOutput
  describePendingMaintenanceActions(input: AwsDocDBDescribePendingMaintenanceActionsInput, config: AwsConfig): AwsDocDBDescribePendingMaintenanceActionsOutput
  failoverDBCluster(input: AwsDocDBFailoverDBClusterInput, config: AwsConfig): AwsDocDBFailoverDBClusterOutput
  listTagsForResource(input: AwsDocDBListTagsForResourceInput!, config: AwsConfig): AwsDocDBListTagsForResourceOutput
  modifyDBCluster(input: AwsDocDBModifyDBClusterInput!, config: AwsConfig): AwsDocDBModifyDBClusterOutput
  modifyDBClusterParameterGroup(input: AwsDocDBModifyDBClusterParameterGroupInput!, config: AwsConfig): JSON
  modifyDBClusterSnapshotAttribute(input: AwsDocDBModifyDBClusterSnapshotAttributeInput!, config: AwsConfig): AwsDocDBModifyDBClusterSnapshotAttributeOutput
  modifyDBInstance(input: AwsDocDBModifyDBInstanceInput!, config: AwsConfig): AwsDocDBModifyDBInstanceOutput
  modifyDBSubnetGroup(input: AwsDocDBModifyDBSubnetGroupInput!, config: AwsConfig): AwsDocDBModifyDBSubnetGroupOutput
  rebootDBInstance(input: AwsDocDBRebootDBInstanceInput!, config: AwsConfig): AwsDocDBRebootDBInstanceOutput
  removeTagsFromResource(input: AwsDocDBRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  resetDBClusterParameterGroup(input: AwsDocDBResetDBClusterParameterGroupInput!, config: AwsConfig): JSON
  restoreDBClusterFromSnapshot(input: AwsDocDBRestoreDBClusterFromSnapshotInput!, config: AwsConfig): AwsDocDBRestoreDBClusterFromSnapshotOutput
  restoreDBClusterToPointInTime(input: AwsDocDBRestoreDBClusterToPointInTimeInput!, config: AwsConfig): AwsDocDBRestoreDBClusterToPointInTimeOutput
  startDBCluster(input: AwsDocDBStartDBClusterInput!, config: AwsConfig): AwsDocDBStartDBClusterOutput
  stopDBCluster(input: AwsDocDBStopDBClusterInput!, config: AwsConfig): AwsDocDBStopDBClusterOutput
}

input AwsDocDBAddTagsToResourceInput {
  ResourceName: String!
  Tags: [AwsDocDBS3Input]!
}

input AwsDocDBApplyPendingMaintenanceActionInput {
  ResourceIdentifier: String!
  ApplyAction: String!
  OptInType: String!
}

type AwsDocDBApplyPendingMaintenanceActionOutput {
  ResourcePendingMaintenanceActions: AwsDocDBS7
}

input AwsDocDBCopyDBClusterParameterGroupInput {
  SourceDBClusterParameterGroupIdentifier: String!
  TargetDBClusterParameterGroupIdentifier: String!
  TargetDBClusterParameterGroupDescription: String!
  Tags: [AwsDocDBS3Input]
}

type AwsDocDBCopyDBClusterParameterGroupOutput {
  DBClusterParameterGroup: AwsDocDBSd
}

input AwsDocDBCopyDBClusterSnapshotInput {
  SourceDBClusterSnapshotIdentifier: String!
  TargetDBClusterSnapshotIdentifier: String!
  KmsKeyId: String
  PreSignedUrl: String
  CopyTags: Boolean
  Tags: [AwsDocDBS3Input]
}

type AwsDocDBCopyDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsDocDBSh
}

input AwsDocDBCreateDBClusterInput {
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  DBClusterIdentifier: String!
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  DBSubnetGroupName: String
  Engine: String!
  EngineVersion: String
  Port: Int
  MasterUsername: String!
  MasterUserPassword: String!
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  Tags: [AwsDocDBS3Input]
  StorageEncrypted: Boolean
  KmsKeyId: String
  EnableCloudwatchLogsExports: [String]
  DeletionProtection: Boolean
}

type AwsDocDBCreateDBClusterOutput {
  DBCluster: AwsDocDBSq
}

input AwsDocDBCreateDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  DBParameterGroupFamily: String!
  Description: String!
  Tags: [AwsDocDBS3Input]
}

type AwsDocDBCreateDBClusterParameterGroupOutput {
  DBClusterParameterGroup: AwsDocDBSd
}

input AwsDocDBCreateDBClusterSnapshotInput {
  DBClusterSnapshotIdentifier: String!
  DBClusterIdentifier: String!
  Tags: [AwsDocDBS3Input]
}

type AwsDocDBCreateDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsDocDBSh
}

input AwsDocDBCreateDBInstanceInput {
  DBInstanceIdentifier: String!
  DBInstanceClass: String!
  Engine: String!
  AvailabilityZone: String
  PreferredMaintenanceWindow: String
  AutoMinorVersionUpgrade: Boolean
  Tags: [AwsDocDBS3Input]
  DBClusterIdentifier: String!
  PromotionTier: Int
}

type AwsDocDBCreateDBInstanceOutput {
  DBInstance: AwsDocDBS13
}

input AwsDocDBCreateDBSubnetGroupInput {
  DBSubnetGroupName: String!
  DBSubnetGroupDescription: String!
  SubnetIds: [String]!
  Tags: [AwsDocDBS3Input]
}

type AwsDocDBCreateDBSubnetGroupOutput {
  DBSubnetGroup: AwsDocDBS15
}

input AwsDocDBDeleteDBClusterInput {
  DBClusterIdentifier: String!
  SkipFinalSnapshot: Boolean
  FinalDBSnapshotIdentifier: String
}

type AwsDocDBDeleteDBClusterOutput {
  DBCluster: AwsDocDBSq
}

input AwsDocDBDeleteDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
}

input AwsDocDBDeleteDBClusterSnapshotInput {
  DBClusterSnapshotIdentifier: String!
}

type AwsDocDBDeleteDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsDocDBSh
}

input AwsDocDBDeleteDBInstanceInput {
  DBInstanceIdentifier: String!
}

type AwsDocDBDeleteDBInstanceOutput {
  DBInstance: AwsDocDBS13
}

input AwsDocDBDeleteDBSubnetGroupInput {
  DBSubnetGroupName: String!
}

input AwsDocDBDescribeDBClusterParameterGroupsInput {
  DBClusterParameterGroupName: String
  Filters: [AwsDocDBS1pInput]
  MaxRecords: Int
  Marker: String
}

type AwsDocDBDescribeDBClusterParameterGroupsOutput {
  Marker: String
  DBClusterParameterGroups: [AwsDocDBSd]
}

input AwsDocDBDescribeDBClusterParametersInput {
  DBClusterParameterGroupName: String!
  Source: String
  Filters: [AwsDocDBS1pInput]
  MaxRecords: Int
  Marker: String
}

type AwsDocDBDescribeDBClusterParametersOutput {
  Parameters: [AwsDocDBS1w]
  Marker: String
}

input AwsDocDBDescribeDBClustersInput {
  DBClusterIdentifier: String
  Filters: [AwsDocDBS1pInput]
  MaxRecords: Int
  Marker: String
}

input AwsDocDBDescribeDBClusterSnapshotAttributesInput {
  DBClusterSnapshotIdentifier: String!
}

type AwsDocDBDescribeDBClusterSnapshotAttributesOutput {
  DBClusterSnapshotAttributesResult: AwsDocDBS21
}

input AwsDocDBDescribeDBClusterSnapshotsInput {
  DBClusterIdentifier: String
  DBClusterSnapshotIdentifier: String
  SnapshotType: String
  Filters: [AwsDocDBS1pInput]
  MaxRecords: Int
  Marker: String
  IncludeShared: Boolean
  IncludePublic: Boolean
}

type AwsDocDBDescribeDBClusterSnapshotsOutput {
  Marker: String
  DBClusterSnapshots: [AwsDocDBSh]
}

type AwsDocDBDescribeDBClustersOutput {
  Marker: String
  DBClusters: [AwsDocDBSq]
}

input AwsDocDBDescribeDBEngineVersionsInput {
  Engine: String
  EngineVersion: String
  DBParameterGroupFamily: String
  Filters: [AwsDocDBS1pInput]
  MaxRecords: Int
  Marker: String
  DefaultOnly: Boolean
  ListSupportedCharacterSets: Boolean
  ListSupportedTimezones: Boolean
}

type AwsDocDBDescribeDBEngineVersionsOutput {
  Marker: String
  DBEngineVersions: [AwsDocDBDescribeDBEngineVersionsOutputDBEngineVersions]
}

type AwsDocDBDescribeDBEngineVersionsOutputDBEngineVersions {
  Engine: String
  EngineVersion: String
  DBParameterGroupFamily: String
  DBEngineDescription: String
  DBEngineVersionDescription: String
  ValidUpgradeTarget: [AwsDocDBDescribeDBEngineVersionsOutputDBEngineVersionsValidUpgradeTarget]
  ExportableLogTypes: [String]
  SupportsLogExportsToCloudwatchLogs: Boolean
}

type AwsDocDBDescribeDBEngineVersionsOutputDBEngineVersionsValidUpgradeTarget {
  Engine: String
  EngineVersion: String
  Description: String
  AutoUpgrade: Boolean
  IsMajorVersionUpgrade: Boolean
}

input AwsDocDBDescribeDBInstancesInput {
  DBInstanceIdentifier: String
  Filters: [AwsDocDBS1pInput]
  MaxRecords: Int
  Marker: String
}

type AwsDocDBDescribeDBInstancesOutput {
  Marker: String
  DBInstances: [AwsDocDBS13]
}

input AwsDocDBDescribeDBSubnetGroupsInput {
  DBSubnetGroupName: String
  Filters: [AwsDocDBS1pInput]
  MaxRecords: Int
  Marker: String
}

type AwsDocDBDescribeDBSubnetGroupsOutput {
  Marker: String
  DBSubnetGroups: [AwsDocDBS15]
}

input AwsDocDBDescribeEngineDefaultClusterParametersInput {
  DBParameterGroupFamily: String!
  Filters: [AwsDocDBS1pInput]
  MaxRecords: Int
  Marker: String
}

type AwsDocDBDescribeEngineDefaultClusterParametersOutput {
  EngineDefaults: AwsDocDBDescribeEngineDefaultClusterParametersOutputEngineDefaults
}

type AwsDocDBDescribeEngineDefaultClusterParametersOutputEngineDefaults {
  DBParameterGroupFamily: String
  Marker: String
  Parameters: [AwsDocDBS1w]
}

input AwsDocDBDescribeEventCategoriesInput {
  SourceType: String
  Filters: [AwsDocDBS1pInput]
}

type AwsDocDBDescribeEventCategoriesOutput {
  EventCategoriesMapList: [AwsDocDBDescribeEventCategoriesOutputEventCategoriesMapList]
}

type AwsDocDBDescribeEventCategoriesOutputEventCategoriesMapList {
  SourceType: String
  EventCategories: [String]
}

input AwsDocDBDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  EventCategories: [String]
  Filters: [AwsDocDBS1pInput]
  MaxRecords: Int
  Marker: String
}

type AwsDocDBDescribeEventsOutput {
  Marker: String
  Events: [AwsDocDBDescribeEventsOutputEvents]
}

type AwsDocDBDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Date: Date
  SourceArn: String
}

input AwsDocDBDescribeOrderableDBInstanceOptionsInput {
  Engine: String!
  EngineVersion: String
  DBInstanceClass: String
  LicenseModel: String
  Vpc: Boolean
  Filters: [AwsDocDBS1pInput]
  MaxRecords: Int
  Marker: String
}

type AwsDocDBDescribeOrderableDBInstanceOptionsOutput {
  OrderableDBInstanceOptions: [AwsDocDBDescribeOrderableDBInstanceOptionsOutputOrderableDBInstanceOptions]
  Marker: String
}

type AwsDocDBDescribeOrderableDBInstanceOptionsOutputOrderableDBInstanceOptions {
  Engine: String
  EngineVersion: String
  DBInstanceClass: String
  LicenseModel: String
  AvailabilityZones: [AwsDocDBS18]
  Vpc: Boolean
}

input AwsDocDBDescribePendingMaintenanceActionsInput {
  ResourceIdentifier: String
  Filters: [AwsDocDBS1pInput]
  Marker: String
  MaxRecords: Int
}

type AwsDocDBDescribePendingMaintenanceActionsOutput {
  PendingMaintenanceActions: [AwsDocDBS7]
  Marker: String
}

input AwsDocDBFailoverDBClusterInput {
  DBClusterIdentifier: String
  TargetDBInstanceIdentifier: String
}

type AwsDocDBFailoverDBClusterOutput {
  DBCluster: AwsDocDBSq
}

input AwsDocDBListTagsForResourceInput {
  ResourceName: String!
  Filters: [AwsDocDBS1pInput]
}

type AwsDocDBListTagsForResourceOutput {
  TagList: [AwsDocDBS3]
}

input AwsDocDBModifyDBClusterCloudwatchLogsExportConfigurationInput {
  EnableLogTypes: [String]
  DisableLogTypes: [String]
}

input AwsDocDBModifyDBClusterInput {
  DBClusterIdentifier: String!
  NewDBClusterIdentifier: String
  ApplyImmediately: Boolean
  BackupRetentionPeriod: Int
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  Port: Int
  MasterUserPassword: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  CloudwatchLogsExportConfiguration: AwsDocDBModifyDBClusterCloudwatchLogsExportConfigurationInput
  EngineVersion: String
  DeletionProtection: Boolean
}

type AwsDocDBModifyDBClusterOutput {
  DBCluster: AwsDocDBSq
}

input AwsDocDBModifyDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  Parameters: [AwsDocDBS1wInput]!
}

input AwsDocDBModifyDBClusterSnapshotAttributeInput {
  DBClusterSnapshotIdentifier: String!
  AttributeName: String!
  ValuesToAdd: [String]
  ValuesToRemove: [String]
}

type AwsDocDBModifyDBClusterSnapshotAttributeOutput {
  DBClusterSnapshotAttributesResult: AwsDocDBS21
}

input AwsDocDBModifyDBInstanceInput {
  DBInstanceIdentifier: String!
  DBInstanceClass: String
  ApplyImmediately: Boolean
  PreferredMaintenanceWindow: String
  AutoMinorVersionUpgrade: Boolean
  NewDBInstanceIdentifier: String
  PromotionTier: Int
}

type AwsDocDBModifyDBInstanceOutput {
  DBInstance: AwsDocDBS13
}

input AwsDocDBModifyDBSubnetGroupInput {
  DBSubnetGroupName: String!
  DBSubnetGroupDescription: String
  SubnetIds: [String]!
}

type AwsDocDBModifyDBSubnetGroupOutput {
  DBSubnetGroup: AwsDocDBS15
}

input AwsDocDBRebootDBInstanceInput {
  DBInstanceIdentifier: String!
  ForceFailover: Boolean
}

type AwsDocDBRebootDBInstanceOutput {
  DBInstance: AwsDocDBS13
}

input AwsDocDBRemoveTagsFromResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsDocDBResetDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsDocDBS1wInput]
}

input AwsDocDBRestoreDBClusterFromSnapshotInput {
  AvailabilityZones: [String]
  DBClusterIdentifier: String!
  SnapshotIdentifier: String!
  Engine: String!
  EngineVersion: String
  Port: Int
  DBSubnetGroupName: String
  VpcSecurityGroupIds: [String]
  Tags: [AwsDocDBS3Input]
  KmsKeyId: String
  EnableCloudwatchLogsExports: [String]
  DeletionProtection: Boolean
}

type AwsDocDBRestoreDBClusterFromSnapshotOutput {
  DBCluster: AwsDocDBSq
}

input AwsDocDBRestoreDBClusterToPointInTimeInput {
  DBClusterIdentifier: String!
  SourceDBClusterIdentifier: String!
  RestoreToTime: Date
  UseLatestRestorableTime: Boolean
  Port: Int
  DBSubnetGroupName: String
  VpcSecurityGroupIds: [String]
  Tags: [AwsDocDBS3Input]
  KmsKeyId: String
  EnableCloudwatchLogsExports: [String]
  DeletionProtection: Boolean
}

type AwsDocDBRestoreDBClusterToPointInTimeOutput {
  DBCluster: AwsDocDBSq
}

type AwsDocDBS13 {
  DBInstanceIdentifier: String
  DBInstanceClass: String
  Engine: String
  DBInstanceStatus: String
  Endpoint: AwsDocDBS13Endpoint
  InstanceCreateTime: Date
  PreferredBackupWindow: String
  BackupRetentionPeriod: Int
  VpcSecurityGroups: [AwsDocDBSt]
  AvailabilityZone: String
  DBSubnetGroup: AwsDocDBS15
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsDocDBS13PendingModifiedValues
  LatestRestorableTime: Date
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  PubliclyAccessible: Boolean
  StatusInfos: [AwsDocDBS13StatusInfos]
  DBClusterIdentifier: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  DbiResourceId: String
  PromotionTier: Int
  DBInstanceArn: String
  EnabledCloudwatchLogsExports: [String]
}

type AwsDocDBS13Endpoint {
  Address: String
  Port: Int
  HostedZoneId: String
}

type AwsDocDBS13PendingModifiedValues {
  DBInstanceClass: String
  AllocatedStorage: Int
  MasterUserPassword: String
  Port: Int
  BackupRetentionPeriod: Int
  MultiAZ: Boolean
  EngineVersion: String
  LicenseModel: String
  Iops: Int
  DBInstanceIdentifier: String
  StorageType: String
  CACertificateIdentifier: String
  DBSubnetGroupName: String
  PendingCloudwatchLogsExports: AwsDocDBS13PendingModifiedValuesPendingCloudwatchLogsExports
}

type AwsDocDBS13PendingModifiedValuesPendingCloudwatchLogsExports {
  LogTypesToEnable: [String]
  LogTypesToDisable: [String]
}

type AwsDocDBS13StatusInfos {
  StatusType: String
  Normal: Boolean
  Status: String
  Message: String
}

type AwsDocDBS15 {
  DBSubnetGroupName: String
  DBSubnetGroupDescription: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsDocDBS15Subnets]
  DBSubnetGroupArn: String
}

type AwsDocDBS15Subnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsDocDBS18
  SubnetStatus: String
}

type AwsDocDBS18 {
  Name: String
}

input AwsDocDBS1pInput {
  Name: String!
  Values: [String]!
}

type AwsDocDBS1w {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ApplyMethod: String
}

input AwsDocDBS1wInput {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ApplyMethod: String
}

type AwsDocDBS21 {
  DBClusterSnapshotIdentifier: String
  DBClusterSnapshotAttributes: [AwsDocDBS21DBClusterSnapshotAttributes]
}

type AwsDocDBS21DBClusterSnapshotAttributes {
  AttributeName: String
  AttributeValues: [String]
}

type AwsDocDBS3 {
  Key: String
  Value: String
}

input AwsDocDBS3Input {
  Key: String
  Value: String
}

type AwsDocDBS7 {
  ResourceIdentifier: String
  PendingMaintenanceActionDetails: [AwsDocDBS7PendingMaintenanceActionDetails]
}

type AwsDocDBS7PendingMaintenanceActionDetails {
  Action: String
  AutoAppliedAfterDate: Date
  ForcedApplyDate: Date
  OptInStatus: String
  CurrentApplyDate: Date
  Description: String
}

type AwsDocDBSd {
  DBClusterParameterGroupName: String
  DBParameterGroupFamily: String
  Description: String
  DBClusterParameterGroupArn: String
}

type AwsDocDBSh {
  AvailabilityZones: [String]
  DBClusterSnapshotIdentifier: String
  DBClusterIdentifier: String
  SnapshotCreateTime: Date
  Engine: String
  Status: String
  Port: Int
  VpcId: String
  ClusterCreateTime: Date
  MasterUsername: String
  EngineVersion: String
  SnapshotType: String
  PercentProgress: Int
  StorageEncrypted: Boolean
  KmsKeyId: String
  DBClusterSnapshotArn: String
  SourceDBClusterSnapshotArn: String
}

type AwsDocDBSq {
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  DBClusterIdentifier: String
  DBClusterParameterGroup: String
  DBSubnetGroup: String
  Status: String
  PercentProgress: String
  EarliestRestorableTime: Date
  Endpoint: String
  ReaderEndpoint: String
  MultiAZ: Boolean
  Engine: String
  EngineVersion: String
  LatestRestorableTime: Date
  Port: Int
  MasterUsername: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  DBClusterMembers: [AwsDocDBSqDBClusterMembers]
  VpcSecurityGroups: [AwsDocDBSt]
  HostedZoneId: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  DbClusterResourceId: String
  DBClusterArn: String
  AssociatedRoles: [AwsDocDBSqAssociatedRoles]
  ClusterCreateTime: Date
  EnabledCloudwatchLogsExports: [String]
  DeletionProtection: Boolean
}

type AwsDocDBSqAssociatedRoles {
  RoleArn: String
  Status: String
}

type AwsDocDBSqDBClusterMembers {
  DBInstanceIdentifier: String
  IsClusterWriter: Boolean
  DBClusterParameterGroupStatus: String
  PromotionTier: Int
}

type AwsDocDBSt {
  VpcSecurityGroupId: String
  Status: String
}

input AwsDocDBStartDBClusterInput {
  DBClusterIdentifier: String!
}

type AwsDocDBStartDBClusterOutput {
  DBCluster: AwsDocDBSq
}

input AwsDocDBStopDBClusterInput {
  DBClusterIdentifier: String!
}

type AwsDocDBStopDBClusterOutput {
  DBCluster: AwsDocDBSq
}

"""Amazon DynamoDB (2012-08-10)"""
type AwsDynamoDB {
  batchGetItem(input: AwsDynamoDBBatchGetItemInput!, config: AwsConfig): AwsDynamoDBBatchGetItemOutput
  batchWriteItem(input: AwsDynamoDBBatchWriteItemInput!, config: AwsConfig): AwsDynamoDBBatchWriteItemOutput
  createBackup(input: AwsDynamoDBCreateBackupInput!, config: AwsConfig): AwsDynamoDBCreateBackupOutput
  createGlobalTable(input: AwsDynamoDBCreateGlobalTableInput!, config: AwsConfig): AwsDynamoDBCreateGlobalTableOutput
  createTable(input: AwsDynamoDBCreateTableInput!, config: AwsConfig): AwsDynamoDBCreateTableOutput
  deleteBackup(input: AwsDynamoDBDeleteBackupInput!, config: AwsConfig): AwsDynamoDBDeleteBackupOutput
  deleteItem(input: AwsDynamoDBDeleteItemInput!, config: AwsConfig): AwsDynamoDBDeleteItemOutput
  deleteTable(input: AwsDynamoDBDeleteTableInput!, config: AwsConfig): AwsDynamoDBDeleteTableOutput
  describeBackup(input: AwsDynamoDBDescribeBackupInput!, config: AwsConfig): AwsDynamoDBDescribeBackupOutput
  describeContinuousBackups(input: AwsDynamoDBDescribeContinuousBackupsInput!, config: AwsConfig): AwsDynamoDBDescribeContinuousBackupsOutput
  describeEndpoints(input: JSON, config: AwsConfig): AwsDynamoDBDescribeEndpointsOutput
  describeGlobalTable(input: AwsDynamoDBDescribeGlobalTableInput!, config: AwsConfig): AwsDynamoDBDescribeGlobalTableOutput
  describeGlobalTableSettings(input: AwsDynamoDBDescribeGlobalTableSettingsInput!, config: AwsConfig): AwsDynamoDBDescribeGlobalTableSettingsOutput
  describeLimits(input: JSON, config: AwsConfig): AwsDynamoDBDescribeLimitsOutput
  describeTable(input: AwsDynamoDBDescribeTableInput!, config: AwsConfig): AwsDynamoDBDescribeTableOutput
  describeTimeToLive(input: AwsDynamoDBDescribeTimeToLiveInput!, config: AwsConfig): AwsDynamoDBDescribeTimeToLiveOutput
  getItem(input: AwsDynamoDBGetItemInput!, config: AwsConfig): AwsDynamoDBGetItemOutput
  listBackups(input: AwsDynamoDBListBackupsInput, config: AwsConfig): AwsDynamoDBListBackupsOutput
  listGlobalTables(input: AwsDynamoDBListGlobalTablesInput, config: AwsConfig): AwsDynamoDBListGlobalTablesOutput
  listTables(input: AwsDynamoDBListTablesInput, config: AwsConfig): AwsDynamoDBListTablesOutput
  listTagsOfResource(input: AwsDynamoDBListTagsOfResourceInput!, config: AwsConfig): AwsDynamoDBListTagsOfResourceOutput
  putItem(input: AwsDynamoDBPutItemInput!, config: AwsConfig): AwsDynamoDBPutItemOutput
  query(input: AwsDynamoDBQueryInput!, config: AwsConfig): AwsDynamoDBQueryOutput
  restoreTableFromBackup(input: AwsDynamoDBRestoreTableFromBackupInput!, config: AwsConfig): AwsDynamoDBRestoreTableFromBackupOutput
  restoreTableToPointInTime(input: AwsDynamoDBRestoreTableToPointInTimeInput!, config: AwsConfig): AwsDynamoDBRestoreTableToPointInTimeOutput
  scan(input: AwsDynamoDBScanInput!, config: AwsConfig): AwsDynamoDBScanOutput
  tagResource(input: AwsDynamoDBTagResourceInput!, config: AwsConfig): JSON
  transactGetItems(input: AwsDynamoDBTransactGetItemsInput!, config: AwsConfig): AwsDynamoDBTransactGetItemsOutput
  transactWriteItems(input: AwsDynamoDBTransactWriteItemsInput!, config: AwsConfig): AwsDynamoDBTransactWriteItemsOutput
  untagResource(input: AwsDynamoDBUntagResourceInput!, config: AwsConfig): JSON
  updateContinuousBackups(input: AwsDynamoDBUpdateContinuousBackupsInput!, config: AwsConfig): AwsDynamoDBUpdateContinuousBackupsOutput
  updateGlobalTable(input: AwsDynamoDBUpdateGlobalTableInput!, config: AwsConfig): AwsDynamoDBUpdateGlobalTableOutput
  updateGlobalTableSettings(input: AwsDynamoDBUpdateGlobalTableSettingsInput!, config: AwsConfig): AwsDynamoDBUpdateGlobalTableSettingsOutput
  updateItem(input: AwsDynamoDBUpdateItemInput!, config: AwsConfig): AwsDynamoDBUpdateItemOutput
  updateTable(input: AwsDynamoDBUpdateTableInput!, config: AwsConfig): AwsDynamoDBUpdateTableOutput
  updateTimeToLive(input: AwsDynamoDBUpdateTimeToLiveInput!, config: AwsConfig): AwsDynamoDBUpdateTimeToLiveOutput
}

input AwsDynamoDBBatchGetItemInput {
  RequestItems: JSON!
  ReturnConsumedCapacity: String
}

type AwsDynamoDBBatchGetItemOutput {
  Responses: JSON
  UnprocessedKeys: JSON
  ConsumedCapacity: [AwsDynamoDBSu]
}

input AwsDynamoDBBatchWriteItemInput {
  RequestItems: JSON!
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
}

type AwsDynamoDBBatchWriteItemOutput {
  UnprocessedItems: JSON
  ItemCollectionMetrics: JSON
  ConsumedCapacity: [AwsDynamoDBSu]
}

input AwsDynamoDBCreateBackupInput {
  TableName: String!
  BackupName: String!
}

type AwsDynamoDBCreateBackupOutput {
  BackupDetails: AwsDynamoDBS1h
}

input AwsDynamoDBCreateGlobalTableInput {
  GlobalTableName: String!
  ReplicationGroup: [AwsDynamoDBS1pInput]!
}

type AwsDynamoDBCreateGlobalTableOutput {
  GlobalTableDescription: AwsDynamoDBS1t
}

input AwsDynamoDBCreateTableGlobalSecondaryIndexesInput {
  IndexName: String!
  KeySchema: [AwsDynamoDBS23Input]!
  Projection: AwsDynamoDBS28Input!
  ProvisionedThroughput: AwsDynamoDBS2eInput
}

input AwsDynamoDBCreateTableInput {
  AttributeDefinitions: [AwsDynamoDBS1zInput]!
  TableName: String!
  KeySchema: [AwsDynamoDBS23Input]!
  LocalSecondaryIndexes: [AwsDynamoDBCreateTableLocalSecondaryIndexesInput]
  GlobalSecondaryIndexes: [AwsDynamoDBCreateTableGlobalSecondaryIndexesInput]
  BillingMode: String
  ProvisionedThroughput: AwsDynamoDBS2eInput
  StreamSpecification: AwsDynamoDBS2hInput
  SSESpecification: AwsDynamoDBS2kInput
  Tags: [AwsDynamoDBS2oInput]
}

input AwsDynamoDBCreateTableLocalSecondaryIndexesInput {
  IndexName: String!
  KeySchema: [AwsDynamoDBS23Input]!
  Projection: AwsDynamoDBS28Input!
}

type AwsDynamoDBCreateTableOutput {
  TableDescription: AwsDynamoDBS2t
}

input AwsDynamoDBDeleteBackupInput {
  BackupArn: String!
}

type AwsDynamoDBDeleteBackupOutput {
  BackupDescription: AwsDynamoDBS3g
}

input AwsDynamoDBDeleteItemInput {
  TableName: String!
  Key: JSON!
  Expected: JSON
  ConditionalOperator: String
  ReturnValues: String
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamoDBDeleteItemOutput {
  Attributes: JSON
  ConsumedCapacity: AwsDynamoDBSu
  ItemCollectionMetrics: AwsDynamoDBS1a
}

input AwsDynamoDBDeleteTableInput {
  TableName: String!
}

type AwsDynamoDBDeleteTableOutput {
  TableDescription: AwsDynamoDBS2t
}

input AwsDynamoDBDescribeBackupInput {
  BackupArn: String!
}

type AwsDynamoDBDescribeBackupOutput {
  BackupDescription: AwsDynamoDBS3g
}

input AwsDynamoDBDescribeContinuousBackupsInput {
  TableName: String!
}

type AwsDynamoDBDescribeContinuousBackupsOutput {
  ContinuousBackupsDescription: AwsDynamoDBS4a
}

type AwsDynamoDBDescribeEndpointsOutput {
  Endpoints: [AwsDynamoDBDescribeEndpointsOutputEndpoints]!
}

type AwsDynamoDBDescribeEndpointsOutputEndpoints {
  Address: String!
  CachePeriodInMinutes: JSON!
}

input AwsDynamoDBDescribeGlobalTableInput {
  GlobalTableName: String!
}

type AwsDynamoDBDescribeGlobalTableOutput {
  GlobalTableDescription: AwsDynamoDBS1t
}

input AwsDynamoDBDescribeGlobalTableSettingsInput {
  GlobalTableName: String!
}

type AwsDynamoDBDescribeGlobalTableSettingsOutput {
  GlobalTableName: String
  ReplicaSettings: [AwsDynamoDBS4m]
}

type AwsDynamoDBDescribeLimitsOutput {
  AccountMaxReadCapacityUnits: JSON
  AccountMaxWriteCapacityUnits: JSON
  TableMaxReadCapacityUnits: JSON
  TableMaxWriteCapacityUnits: JSON
}

input AwsDynamoDBDescribeTableInput {
  TableName: String!
}

type AwsDynamoDBDescribeTableOutput {
  Table: AwsDynamoDBS2t
}

input AwsDynamoDBDescribeTimeToLiveInput {
  TableName: String!
}

type AwsDynamoDBDescribeTimeToLiveOutput {
  TimeToLiveDescription: AwsDynamoDBS3p
}

input AwsDynamoDBGetItemInput {
  TableName: String!
  Key: JSON!
  AttributesToGet: [String]
  ConsistentRead: Boolean
  ReturnConsumedCapacity: String
  ProjectionExpression: String
  ExpressionAttributeNames: JSON
}

type AwsDynamoDBGetItemOutput {
  Item: JSON
  ConsumedCapacity: AwsDynamoDBSu
}

input AwsDynamoDBListBackupsInput {
  TableName: String
  Limit: Int
  TimeRangeLowerBound: Date
  TimeRangeUpperBound: Date
  ExclusiveStartBackupArn: String
  BackupType: String
}

type AwsDynamoDBListBackupsOutput {
  BackupSummaries: [AwsDynamoDBListBackupsOutputBackupSummaries]
  LastEvaluatedBackupArn: String
}

type AwsDynamoDBListBackupsOutputBackupSummaries {
  TableName: String
  TableId: String
  TableArn: String
  BackupArn: String
  BackupName: String
  BackupCreationDateTime: Date
  BackupExpiryDateTime: Date
  BackupStatus: String
  BackupType: String
  BackupSizeBytes: JSON
}

input AwsDynamoDBListGlobalTablesInput {
  ExclusiveStartGlobalTableName: String
  Limit: Int
  RegionName: String
}

type AwsDynamoDBListGlobalTablesOutput {
  GlobalTables: [AwsDynamoDBListGlobalTablesOutputGlobalTables]
  LastEvaluatedGlobalTableName: String
}

type AwsDynamoDBListGlobalTablesOutputGlobalTables {
  GlobalTableName: String
  ReplicationGroup: [AwsDynamoDBS1p]
}

input AwsDynamoDBListTablesInput {
  ExclusiveStartTableName: String
  Limit: Int
}

type AwsDynamoDBListTablesOutput {
  TableNames: [String]
  LastEvaluatedTableName: String
}

input AwsDynamoDBListTagsOfResourceInput {
  ResourceArn: String!
  NextToken: String
}

type AwsDynamoDBListTagsOfResourceOutput {
  Tags: [AwsDynamoDBS2o]
  NextToken: String
}

input AwsDynamoDBPutItemInput {
  TableName: String!
  Item: JSON!
  Expected: JSON
  ReturnValues: String
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
  ConditionalOperator: String
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamoDBPutItemOutput {
  Attributes: JSON
  ConsumedCapacity: AwsDynamoDBSu
  ItemCollectionMetrics: AwsDynamoDBS1a
}

input AwsDynamoDBQueryInput {
  TableName: String!
  IndexName: String
  Select: String
  AttributesToGet: [String]
  Limit: Int
  ConsistentRead: Boolean
  KeyConditions: JSON
  QueryFilter: JSON
  ConditionalOperator: String
  ScanIndexForward: Boolean
  ExclusiveStartKey: JSON
  ReturnConsumedCapacity: String
  ProjectionExpression: String
  FilterExpression: String
  KeyConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamoDBQueryOutput {
  Items: [JSON]
  Count: Int
  ScannedCount: Int
  LastEvaluatedKey: JSON
  ConsumedCapacity: AwsDynamoDBSu
}

input AwsDynamoDBRestoreTableFromBackupInput {
  TargetTableName: String!
  BackupArn: String!
}

type AwsDynamoDBRestoreTableFromBackupOutput {
  TableDescription: AwsDynamoDBS2t
}

input AwsDynamoDBRestoreTableToPointInTimeInput {
  SourceTableName: String!
  TargetTableName: String!
  UseLatestRestorableTime: Boolean
  RestoreDateTime: Date
}

type AwsDynamoDBRestoreTableToPointInTimeOutput {
  TableDescription: AwsDynamoDBS2t
}

type AwsDynamoDBS1a {
  ItemCollectionKey: JSON
  SizeEstimateRangeGB: [JSON]
}

type AwsDynamoDBS1h {
  BackupArn: String!
  BackupName: String!
  BackupSizeBytes: JSON
  BackupStatus: String!
  BackupType: String!
  BackupCreationDateTime: Date!
  BackupExpiryDateTime: Date
}

type AwsDynamoDBS1p {
  RegionName: String
}

input AwsDynamoDBS1pInput {
  RegionName: String
}

type AwsDynamoDBS1t {
  ReplicationGroup: [AwsDynamoDBS1tReplicationGroup]
  GlobalTableArn: String
  CreationDateTime: Date
  GlobalTableStatus: String
  GlobalTableName: String
}

type AwsDynamoDBS1tReplicationGroup {
  RegionName: String
}

type AwsDynamoDBS1z {
  AttributeName: String!
  AttributeType: String!
}

input AwsDynamoDBS1zInput {
  AttributeName: String!
  AttributeType: String!
}

type AwsDynamoDBS23 {
  AttributeName: String!
  KeyType: String!
}

input AwsDynamoDBS23Input {
  AttributeName: String!
  KeyType: String!
}

type AwsDynamoDBS28 {
  ProjectionType: String
  NonKeyAttributes: [String]
}

input AwsDynamoDBS28Input {
  ProjectionType: String
  NonKeyAttributes: [String]
}

type AwsDynamoDBS2e {
  ReadCapacityUnits: JSON!
  WriteCapacityUnits: JSON!
}

input AwsDynamoDBS2eInput {
  ReadCapacityUnits: JSON!
  WriteCapacityUnits: JSON!
}

type AwsDynamoDBS2h {
  StreamEnabled: Boolean
  StreamViewType: String
}

input AwsDynamoDBS2hInput {
  StreamEnabled: Boolean
  StreamViewType: String
}

input AwsDynamoDBS2kInput {
  Enabled: Boolean
  SSEType: String
  KMSMasterKeyId: String
}

type AwsDynamoDBS2o {
  Key: String!
  Value: String!
}

input AwsDynamoDBS2oInput {
  Key: String!
  Value: String!
}

type AwsDynamoDBS2t {
  AttributeDefinitions: [AwsDynamoDBS1z]
  TableName: String
  KeySchema: [AwsDynamoDBS23]
  TableStatus: String
  CreationDateTime: Date
  ProvisionedThroughput: AwsDynamoDBS2v
  TableSizeBytes: JSON
  ItemCount: JSON
  TableArn: String
  TableId: String
  BillingModeSummary: AwsDynamoDBS30
  LocalSecondaryIndexes: [AwsDynamoDBS2tLocalSecondaryIndexes]
  GlobalSecondaryIndexes: [AwsDynamoDBS2tGlobalSecondaryIndexes]
  StreamSpecification: AwsDynamoDBS2h
  LatestStreamLabel: String
  LatestStreamArn: String
  RestoreSummary: AwsDynamoDBS2tRestoreSummary
  SSEDescription: AwsDynamoDBS3b
}

type AwsDynamoDBS2tGlobalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamoDBS23]
  Projection: AwsDynamoDBS28
  IndexStatus: String
  Backfilling: Boolean
  ProvisionedThroughput: AwsDynamoDBS2v
  IndexSizeBytes: JSON
  ItemCount: JSON
  IndexArn: String
}

type AwsDynamoDBS2tLocalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamoDBS23]
  Projection: AwsDynamoDBS28
  IndexSizeBytes: JSON
  ItemCount: JSON
  IndexArn: String
}

type AwsDynamoDBS2tRestoreSummary {
  SourceBackupArn: String
  SourceTableArn: String
  RestoreDateTime: Date!
  RestoreInProgress: Boolean!
}

type AwsDynamoDBS2v {
  LastIncreaseDateTime: Date
  LastDecreaseDateTime: Date
  NumberOfDecreasesToday: JSON
  ReadCapacityUnits: JSON
  WriteCapacityUnits: JSON
}

type AwsDynamoDBS30 {
  BillingMode: String
  LastUpdateToPayPerRequestDateTime: Date
}

type AwsDynamoDBS3b {
  Status: String
  SSEType: String
  KMSMasterKeyArn: String
}

type AwsDynamoDBS3g {
  BackupDetails: AwsDynamoDBS1h
  SourceTableDetails: AwsDynamoDBS3gSourceTableDetails
  SourceTableFeatureDetails: AwsDynamoDBS3gSourceTableFeatureDetails
}

type AwsDynamoDBS3gSourceTableDetails {
  TableName: String!
  TableId: String!
  TableArn: String
  TableSizeBytes: JSON
  KeySchema: [AwsDynamoDBS23]!
  TableCreationDateTime: Date!
  ProvisionedThroughput: AwsDynamoDBS2e!
  ItemCount: JSON
  BillingMode: String
}

type AwsDynamoDBS3gSourceTableFeatureDetails {
  LocalSecondaryIndexes: [AwsDynamoDBS3gSourceTableFeatureDetailsLocalSecondaryIndexes]
  GlobalSecondaryIndexes: [AwsDynamoDBS3gSourceTableFeatureDetailsGlobalSecondaryIndexes]
  StreamDescription: AwsDynamoDBS2h
  TimeToLiveDescription: AwsDynamoDBS3p
  SSEDescription: AwsDynamoDBS3b
}

type AwsDynamoDBS3gSourceTableFeatureDetailsGlobalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamoDBS23]
  Projection: AwsDynamoDBS28
  ProvisionedThroughput: AwsDynamoDBS2e
}

type AwsDynamoDBS3gSourceTableFeatureDetailsLocalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamoDBS23]
  Projection: AwsDynamoDBS28
}

type AwsDynamoDBS3p {
  TimeToLiveStatus: String
  AttributeName: String
}

type AwsDynamoDBS4a {
  ContinuousBackupsStatus: String!
  PointInTimeRecoveryDescription: AwsDynamoDBS4aPointInTimeRecoveryDescription
}

type AwsDynamoDBS4aPointInTimeRecoveryDescription {
  PointInTimeRecoveryStatus: String
  EarliestRestorableDateTime: Date
  LatestRestorableDateTime: Date
}

type AwsDynamoDBS4m {
  RegionName: String!
  ReplicaStatus: String
  ReplicaBillingModeSummary: AwsDynamoDBS30
  ReplicaProvisionedReadCapacityUnits: JSON
  ReplicaProvisionedReadCapacityAutoScalingSettings: AwsDynamoDBS4p
  ReplicaProvisionedWriteCapacityUnits: JSON
  ReplicaProvisionedWriteCapacityAutoScalingSettings: AwsDynamoDBS4p
  ReplicaGlobalSecondaryIndexSettings: [AwsDynamoDBS4mReplicaGlobalSecondaryIndexSettings]
}

type AwsDynamoDBS4mReplicaGlobalSecondaryIndexSettings {
  IndexName: String!
  IndexStatus: String
  ProvisionedReadCapacityUnits: JSON
  ProvisionedReadCapacityAutoScalingSettings: AwsDynamoDBS4p
  ProvisionedWriteCapacityUnits: JSON
  ProvisionedWriteCapacityAutoScalingSettings: AwsDynamoDBS4p
}

type AwsDynamoDBS4p {
  MinimumUnits: JSON
  MaximumUnits: JSON
  AutoScalingDisabled: Boolean
  AutoScalingRoleArn: String
  ScalingPolicies: [AwsDynamoDBS4pScalingPolicies]
}

type AwsDynamoDBS4pScalingPolicies {
  PolicyName: String
  TargetTrackingScalingPolicyConfiguration: AwsDynamoDBS4pScalingPoliciesTargetTrackingScalingPolicyConfiguration
}

type AwsDynamoDBS4pScalingPoliciesTargetTrackingScalingPolicyConfiguration {
  DisableScaleIn: Boolean
  ScaleInCooldown: Int
  ScaleOutCooldown: Int
  TargetValue: JSON!
}

input AwsDynamoDBS74Input {
  MinimumUnits: JSON
  MaximumUnits: JSON
  AutoScalingDisabled: Boolean
  AutoScalingRoleArn: String
  ScalingPolicyUpdate: AwsDynamoDBS74ScalingPolicyUpdateInput
}

input AwsDynamoDBS74ScalingPolicyUpdateInput {
  PolicyName: String
  TargetTrackingScalingPolicyConfiguration: AwsDynamoDBS74ScalingPolicyUpdateTargetTrackingScalingPolicyConfigurationInput!
}

input AwsDynamoDBS74ScalingPolicyUpdateTargetTrackingScalingPolicyConfigurationInput {
  DisableScaleIn: Boolean
  ScaleInCooldown: Int
  ScaleOutCooldown: Int
  TargetValue: JSON!
}

type AwsDynamoDBS7s {
  Enabled: Boolean!
  AttributeName: String!
}

input AwsDynamoDBS7sInput {
  Enabled: Boolean!
  AttributeName: String!
}

input AwsDynamoDBScanInput {
  TableName: String!
  IndexName: String
  AttributesToGet: [String]
  Limit: Int
  Select: String
  ScanFilter: JSON
  ConditionalOperator: String
  ExclusiveStartKey: JSON
  ReturnConsumedCapacity: String
  TotalSegments: Int
  Segment: Int
  ProjectionExpression: String
  FilterExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
  ConsistentRead: Boolean
}

type AwsDynamoDBScanOutput {
  Items: [JSON]
  Count: Int
  ScannedCount: Int
  LastEvaluatedKey: JSON
  ConsumedCapacity: AwsDynamoDBSu
}

"""Amazon DynamoDB Streams (2012-08-10)"""
type AwsDynamoDBStreams {
  describeStream(input: AwsDynamoDBStreamsDescribeStreamInput!, config: AwsConfig): AwsDynamoDBStreamsDescribeStreamOutput
  getRecords(input: AwsDynamoDBStreamsGetRecordsInput!, config: AwsConfig): AwsDynamoDBStreamsGetRecordsOutput
  getShardIterator(input: AwsDynamoDBStreamsGetShardIteratorInput!, config: AwsConfig): AwsDynamoDBStreamsGetShardIteratorOutput
  listStreams(input: AwsDynamoDBStreamsListStreamsInput, config: AwsConfig): AwsDynamoDBStreamsListStreamsOutput
}

input AwsDynamoDBStreamsDescribeStreamInput {
  StreamArn: String!
  Limit: Int
  ExclusiveStartShardId: String
}

type AwsDynamoDBStreamsDescribeStreamOutput {
  StreamDescription: AwsDynamoDBStreamsDescribeStreamOutputStreamDescription
}

type AwsDynamoDBStreamsDescribeStreamOutputStreamDescription {
  StreamArn: String
  StreamLabel: String
  StreamStatus: String
  StreamViewType: String
  CreationRequestDateTime: Date
  TableName: String
  KeySchema: [AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionKeySchema]
  Shards: [AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionShards]
  LastEvaluatedShardId: String
}

type AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionKeySchema {
  AttributeName: String!
  KeyType: String!
}

type AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionShards {
  ShardId: String
  SequenceNumberRange: AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionShardsSequenceNumberRange
  ParentShardId: String
}

type AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionShardsSequenceNumberRange {
  StartingSequenceNumber: String
  EndingSequenceNumber: String
}

input AwsDynamoDBStreamsGetRecordsInput {
  ShardIterator: String!
  Limit: Int
}

type AwsDynamoDBStreamsGetRecordsOutput {
  Records: [AwsDynamoDBStreamsGetRecordsOutputRecords]
  NextShardIterator: String
}

type AwsDynamoDBStreamsGetRecordsOutputRecords {
  eventID: String
  eventName: String
  eventVersion: String
  eventSource: String
  awsRegion: String
  dynamodb: AwsDynamoDBStreamsGetRecordsOutputRecordsDynamodb
  userIdentity: AwsDynamoDBStreamsGetRecordsOutputRecordsUserIdentity
}

type AwsDynamoDBStreamsGetRecordsOutputRecordsDynamodb {
  ApproximateCreationDateTime: Date
  Keys: JSON
  NewImage: JSON
  OldImage: JSON
  SequenceNumber: String
  SizeBytes: JSON
  StreamViewType: String
}

type AwsDynamoDBStreamsGetRecordsOutputRecordsUserIdentity {
  PrincipalId: String
  Type: String
}

input AwsDynamoDBStreamsGetShardIteratorInput {
  StreamArn: String!
  ShardId: String!
  ShardIteratorType: String!
  SequenceNumber: String
}

type AwsDynamoDBStreamsGetShardIteratorOutput {
  ShardIterator: String
}

input AwsDynamoDBStreamsListStreamsInput {
  TableName: String
  Limit: Int
  ExclusiveStartStreamArn: String
}

type AwsDynamoDBStreamsListStreamsOutput {
  Streams: [AwsDynamoDBStreamsListStreamsOutputStreams]
  LastEvaluatedStreamArn: String
}

type AwsDynamoDBStreamsListStreamsOutputStreams {
  StreamArn: String
  TableName: String
  StreamLabel: String
}

type AwsDynamoDBSu {
  TableName: String
  CapacityUnits: JSON
  ReadCapacityUnits: JSON
  WriteCapacityUnits: JSON
  Table: AwsDynamoDBSw
  LocalSecondaryIndexes: JSON
  GlobalSecondaryIndexes: JSON
}

type AwsDynamoDBSw {
  ReadCapacityUnits: JSON
  WriteCapacityUnits: JSON
  CapacityUnits: JSON
}

input AwsDynamoDBTagResourceInput {
  ResourceArn: String!
  Tags: [AwsDynamoDBS2oInput]!
}

input AwsDynamoDBTransactGetItemsInput {
  TransactItems: [AwsDynamoDBTransactGetItemsTransactItemsInput]!
  ReturnConsumedCapacity: String
}

type AwsDynamoDBTransactGetItemsOutput {
  ConsumedCapacity: [AwsDynamoDBSu]
  Responses: [AwsDynamoDBTransactGetItemsOutputResponses]
}

type AwsDynamoDBTransactGetItemsOutputResponses {
  Item: JSON
}

input AwsDynamoDBTransactGetItemsTransactItemsGetInput {
  Key: JSON!
  TableName: String!
  ProjectionExpression: String
  ExpressionAttributeNames: JSON
}

input AwsDynamoDBTransactGetItemsTransactItemsInput {
  Get: AwsDynamoDBTransactGetItemsTransactItemsGetInput!
}

input AwsDynamoDBTransactWriteItemsInput {
  TransactItems: [AwsDynamoDBTransactWriteItemsTransactItemsInput]!
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
  ClientRequestToken: String
}

type AwsDynamoDBTransactWriteItemsOutput {
  ConsumedCapacity: [AwsDynamoDBSu]
  ItemCollectionMetrics: JSON
}

input AwsDynamoDBTransactWriteItemsTransactItemsConditionCheckInput {
  Key: JSON!
  TableName: String!
  ConditionExpression: String!
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
  ReturnValuesOnConditionCheckFailure: String
}

input AwsDynamoDBTransactWriteItemsTransactItemsDeleteInput {
  Key: JSON!
  TableName: String!
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
  ReturnValuesOnConditionCheckFailure: String
}

input AwsDynamoDBTransactWriteItemsTransactItemsInput {
  ConditionCheck: AwsDynamoDBTransactWriteItemsTransactItemsConditionCheckInput
  Put: AwsDynamoDBTransactWriteItemsTransactItemsPutInput
  Delete: AwsDynamoDBTransactWriteItemsTransactItemsDeleteInput
  Update: AwsDynamoDBTransactWriteItemsTransactItemsUpdateInput
}

input AwsDynamoDBTransactWriteItemsTransactItemsPutInput {
  Item: JSON!
  TableName: String!
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
  ReturnValuesOnConditionCheckFailure: String
}

input AwsDynamoDBTransactWriteItemsTransactItemsUpdateInput {
  Key: JSON!
  UpdateExpression: String!
  TableName: String!
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
  ReturnValuesOnConditionCheckFailure: String
}

input AwsDynamoDBUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsDynamoDBUpdateContinuousBackupsInput {
  TableName: String!
  PointInTimeRecoverySpecification: AwsDynamoDBUpdateContinuousBackupsPointInTimeRecoverySpecificationInput!
}

type AwsDynamoDBUpdateContinuousBackupsOutput {
  ContinuousBackupsDescription: AwsDynamoDBS4a
}

input AwsDynamoDBUpdateContinuousBackupsPointInTimeRecoverySpecificationInput {
  PointInTimeRecoveryEnabled: Boolean!
}

input AwsDynamoDBUpdateGlobalTableInput {
  GlobalTableName: String!
  ReplicaUpdates: [AwsDynamoDBUpdateGlobalTableReplicaUpdatesInput]!
}

type AwsDynamoDBUpdateGlobalTableOutput {
  GlobalTableDescription: AwsDynamoDBS1t
}

input AwsDynamoDBUpdateGlobalTableReplicaUpdatesCreateInput {
  RegionName: String!
}

input AwsDynamoDBUpdateGlobalTableReplicaUpdatesDeleteInput {
  RegionName: String!
}

input AwsDynamoDBUpdateGlobalTableReplicaUpdatesInput {
  Create: AwsDynamoDBUpdateGlobalTableReplicaUpdatesCreateInput
  Delete: AwsDynamoDBUpdateGlobalTableReplicaUpdatesDeleteInput
}

input AwsDynamoDBUpdateGlobalTableSettingsGlobalTableGlobalSecondaryIndexSettingsUpdateInput {
  IndexName: String!
  ProvisionedWriteCapacityUnits: JSON
  ProvisionedWriteCapacityAutoScalingSettingsUpdate: AwsDynamoDBS74Input
}

input AwsDynamoDBUpdateGlobalTableSettingsInput {
  GlobalTableName: String!
  GlobalTableBillingMode: String
  GlobalTableProvisionedWriteCapacityUnits: JSON
  GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate: AwsDynamoDBS74Input
  GlobalTableGlobalSecondaryIndexSettingsUpdate: [AwsDynamoDBUpdateGlobalTableSettingsGlobalTableGlobalSecondaryIndexSettingsUpdateInput]
  ReplicaSettingsUpdate: [AwsDynamoDBUpdateGlobalTableSettingsReplicaSettingsUpdateInput]
}

type AwsDynamoDBUpdateGlobalTableSettingsOutput {
  GlobalTableName: String
  ReplicaSettings: [AwsDynamoDBS4m]
}

input AwsDynamoDBUpdateGlobalTableSettingsReplicaSettingsUpdateInput {
  RegionName: String!
  ReplicaProvisionedReadCapacityUnits: JSON
  ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate: AwsDynamoDBS74Input
  ReplicaGlobalSecondaryIndexSettingsUpdate: [AwsDynamoDBUpdateGlobalTableSettingsReplicaSettingsUpdateReplicaGlobalSecondaryIndexSettingsUpdateInput]
}

input AwsDynamoDBUpdateGlobalTableSettingsReplicaSettingsUpdateReplicaGlobalSecondaryIndexSettingsUpdateInput {
  IndexName: String!
  ProvisionedReadCapacityUnits: JSON
  ProvisionedReadCapacityAutoScalingSettingsUpdate: AwsDynamoDBS74Input
}

input AwsDynamoDBUpdateItemInput {
  TableName: String!
  Key: JSON!
  AttributeUpdates: JSON
  Expected: JSON
  ConditionalOperator: String
  ReturnValues: String
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
  UpdateExpression: String
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamoDBUpdateItemOutput {
  Attributes: JSON
  ConsumedCapacity: AwsDynamoDBSu
  ItemCollectionMetrics: AwsDynamoDBS1a
}

input AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesCreateInput {
  IndexName: String!
  KeySchema: [AwsDynamoDBS23Input]!
  Projection: AwsDynamoDBS28Input!
  ProvisionedThroughput: AwsDynamoDBS2eInput
}

input AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesDeleteInput {
  IndexName: String!
}

input AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesInput {
  Update: AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesUpdateInput
  Create: AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesCreateInput
  Delete: AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesDeleteInput
}

input AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesUpdateInput {
  IndexName: String!
  ProvisionedThroughput: AwsDynamoDBS2eInput!
}

input AwsDynamoDBUpdateTableInput {
  AttributeDefinitions: [AwsDynamoDBS1zInput]
  TableName: String!
  BillingMode: String
  ProvisionedThroughput: AwsDynamoDBS2eInput
  GlobalSecondaryIndexUpdates: [AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesInput]
  StreamSpecification: AwsDynamoDBS2hInput
  SSESpecification: AwsDynamoDBS2kInput
}

type AwsDynamoDBUpdateTableOutput {
  TableDescription: AwsDynamoDBS2t
}

input AwsDynamoDBUpdateTimeToLiveInput {
  TableName: String!
  TimeToLiveSpecification: AwsDynamoDBS7sInput!
}

type AwsDynamoDBUpdateTimeToLiveOutput {
  TimeToLiveSpecification: AwsDynamoDBS7s
}

"""Amazon Elastic Compute Cloud (2016-11-15)"""
type AwsEC2 {
  acceptReservedInstancesExchangeQuote(input: AwsEC2AcceptReservedInstancesExchangeQuoteInput!, config: AwsConfig): AwsEC2AcceptReservedInstancesExchangeQuoteOutput
  acceptTransitGatewayVpcAttachment(input: AwsEC2AcceptTransitGatewayVpcAttachmentInput!, config: AwsConfig): AwsEC2AcceptTransitGatewayVpcAttachmentOutput
  acceptVpcEndpointConnections(input: AwsEC2AcceptVpcEndpointConnectionsInput!, config: AwsConfig): AwsEC2AcceptVpcEndpointConnectionsOutput
  acceptVpcPeeringConnection(input: AwsEC2AcceptVpcPeeringConnectionInput, config: AwsConfig): AwsEC2AcceptVpcPeeringConnectionOutput
  advertiseByoipCidr(input: AwsEC2AdvertiseByoipCidrInput!, config: AwsConfig): AwsEC2AdvertiseByoipCidrOutput
  allocateAddress(input: AwsEC2AllocateAddressInput, config: AwsConfig): AwsEC2AllocateAddressOutput
  allocateHosts(input: AwsEC2AllocateHostsInput!, config: AwsConfig): AwsEC2AllocateHostsOutput
  applySecurityGroupsToClientVpnTargetNetwork(input: AwsEC2ApplySecurityGroupsToClientVpnTargetNetworkInput!, config: AwsConfig): AwsEC2ApplySecurityGroupsToClientVpnTargetNetworkOutput
  assignIpv6Addresses(input: AwsEC2AssignIpv6AddressesInput!, config: AwsConfig): AwsEC2AssignIpv6AddressesOutput
  assignPrivateIpAddresses(input: AwsEC2AssignPrivateIpAddressesInput!, config: AwsConfig): AwsEC2AssignPrivateIpAddressesOutput
  associateAddress(input: AwsEC2AssociateAddressInput, config: AwsConfig): AwsEC2AssociateAddressOutput
  associateClientVpnTargetNetwork(input: AwsEC2AssociateClientVpnTargetNetworkInput!, config: AwsConfig): AwsEC2AssociateClientVpnTargetNetworkOutput
  associateDhcpOptions(input: AwsEC2AssociateDhcpOptionsInput!, config: AwsConfig): JSON
  associateIamInstanceProfile(input: AwsEC2AssociateIamInstanceProfileInput!, config: AwsConfig): AwsEC2AssociateIamInstanceProfileOutput
  associateRouteTable(input: AwsEC2AssociateRouteTableInput!, config: AwsConfig): AwsEC2AssociateRouteTableOutput
  associateSubnetCidrBlock(input: AwsEC2AssociateSubnetCidrBlockInput!, config: AwsConfig): AwsEC2AssociateSubnetCidrBlockOutput
  associateTransitGatewayRouteTable(input: AwsEC2AssociateTransitGatewayRouteTableInput!, config: AwsConfig): AwsEC2AssociateTransitGatewayRouteTableOutput
  associateVpcCidrBlock(input: AwsEC2AssociateVpcCidrBlockInput!, config: AwsConfig): AwsEC2AssociateVpcCidrBlockOutput
  attachClassicLinkVpc(input: AwsEC2AttachClassicLinkVpcInput!, config: AwsConfig): AwsEC2AttachClassicLinkVpcOutput
  attachInternetGateway(input: AwsEC2AttachInternetGatewayInput!, config: AwsConfig): JSON
  attachNetworkInterface(input: AwsEC2AttachNetworkInterfaceInput!, config: AwsConfig): AwsEC2AttachNetworkInterfaceOutput
  attachVolume(input: AwsEC2AttachVolumeInput!, config: AwsConfig): JSON
  attachVpnGateway(input: AwsEC2AttachVpnGatewayInput!, config: AwsConfig): AwsEC2AttachVpnGatewayOutput
  authorizeClientVpnIngress(input: AwsEC2AuthorizeClientVpnIngressInput!, config: AwsConfig): AwsEC2AuthorizeClientVpnIngressOutput
  authorizeSecurityGroupEgress(input: AwsEC2AuthorizeSecurityGroupEgressInput!, config: AwsConfig): JSON
  authorizeSecurityGroupIngress(input: AwsEC2AuthorizeSecurityGroupIngressInput, config: AwsConfig): JSON
  bundleInstance(input: AwsEC2BundleInstanceInput!, config: AwsConfig): AwsEC2BundleInstanceOutput
  cancelBundleTask(input: AwsEC2CancelBundleTaskInput!, config: AwsConfig): AwsEC2CancelBundleTaskOutput
  cancelCapacityReservation(input: AwsEC2CancelCapacityReservationInput!, config: AwsConfig): AwsEC2CancelCapacityReservationOutput
  cancelConversionTask(input: AwsEC2CancelConversionTaskInput!, config: AwsConfig): JSON
  cancelExportTask(input: AwsEC2CancelExportTaskInput!, config: AwsConfig): JSON
  cancelImportTask(input: AwsEC2CancelImportTaskInput, config: AwsConfig): AwsEC2CancelImportTaskOutput
  cancelReservedInstancesListing(input: AwsEC2CancelReservedInstancesListingInput!, config: AwsConfig): AwsEC2CancelReservedInstancesListingOutput
  cancelSpotFleetRequests(input: AwsEC2CancelSpotFleetRequestsInput!, config: AwsConfig): AwsEC2CancelSpotFleetRequestsOutput
  cancelSpotInstanceRequests(input: AwsEC2CancelSpotInstanceRequestsInput!, config: AwsConfig): AwsEC2CancelSpotInstanceRequestsOutput
  confirmProductInstance(input: AwsEC2ConfirmProductInstanceInput!, config: AwsConfig): AwsEC2ConfirmProductInstanceOutput
  copyFpgaImage(input: AwsEC2CopyFpgaImageInput!, config: AwsConfig): AwsEC2CopyFpgaImageOutput
  copyImage(input: AwsEC2CopyImageInput!, config: AwsConfig): AwsEC2CopyImageOutput
  copySnapshot(input: AwsEC2CopySnapshotInput!, config: AwsConfig): AwsEC2CopySnapshotOutput
  createCapacityReservation(input: AwsEC2CreateCapacityReservationInput!, config: AwsConfig): AwsEC2CreateCapacityReservationOutput
  createClientVpnEndpoint(input: AwsEC2CreateClientVpnEndpointInput!, config: AwsConfig): AwsEC2CreateClientVpnEndpointOutput
  createClientVpnRoute(input: AwsEC2CreateClientVpnRouteInput!, config: AwsConfig): AwsEC2CreateClientVpnRouteOutput
  createCustomerGateway(input: AwsEC2CreateCustomerGatewayInput!, config: AwsConfig): AwsEC2CreateCustomerGatewayOutput
  createDefaultSubnet(input: AwsEC2CreateDefaultSubnetInput!, config: AwsConfig): AwsEC2CreateDefaultSubnetOutput
  createDefaultVpc(input: AwsEC2CreateDefaultVpcInput, config: AwsConfig): AwsEC2CreateDefaultVpcOutput
  createDhcpOptions(input: AwsEC2CreateDhcpOptionsInput!, config: AwsConfig): AwsEC2CreateDhcpOptionsOutput
  createEgressOnlyInternetGateway(input: AwsEC2CreateEgressOnlyInternetGatewayInput!, config: AwsConfig): AwsEC2CreateEgressOnlyInternetGatewayOutput
  createFleet(input: AwsEC2CreateFleetInput!, config: AwsConfig): AwsEC2CreateFleetOutput
  createFlowLogs(input: AwsEC2CreateFlowLogsInput!, config: AwsConfig): AwsEC2CreateFlowLogsOutput
  createFpgaImage(input: AwsEC2CreateFpgaImageInput!, config: AwsConfig): AwsEC2CreateFpgaImageOutput
  createImage(input: AwsEC2CreateImageInput!, config: AwsConfig): AwsEC2CreateImageOutput
  createInstanceExportTask(input: AwsEC2CreateInstanceExportTaskInput!, config: AwsConfig): AwsEC2CreateInstanceExportTaskOutput
  createInternetGateway(input: AwsEC2CreateInternetGatewayInput, config: AwsConfig): AwsEC2CreateInternetGatewayOutput
  createKeyPair(input: AwsEC2CreateKeyPairInput!, config: AwsConfig): AwsEC2CreateKeyPairOutput
  createLaunchTemplate(input: AwsEC2CreateLaunchTemplateInput!, config: AwsConfig): AwsEC2CreateLaunchTemplateOutput
  createLaunchTemplateVersion(input: AwsEC2CreateLaunchTemplateVersionInput!, config: AwsConfig): AwsEC2CreateLaunchTemplateVersionOutput
  createNatGateway(input: AwsEC2CreateNatGatewayInput!, config: AwsConfig): AwsEC2CreateNatGatewayOutput
  createNetworkAcl(input: AwsEC2CreateNetworkAclInput!, config: AwsConfig): AwsEC2CreateNetworkAclOutput
  createNetworkAclEntry(input: AwsEC2CreateNetworkAclEntryInput!, config: AwsConfig): JSON
  createNetworkInterface(input: AwsEC2CreateNetworkInterfaceInput!, config: AwsConfig): AwsEC2CreateNetworkInterfaceOutput
  createNetworkInterfacePermission(input: AwsEC2CreateNetworkInterfacePermissionInput!, config: AwsConfig): AwsEC2CreateNetworkInterfacePermissionOutput
  createPlacementGroup(input: AwsEC2CreatePlacementGroupInput, config: AwsConfig): JSON
  createReservedInstancesListing(input: AwsEC2CreateReservedInstancesListingInput!, config: AwsConfig): AwsEC2CreateReservedInstancesListingOutput
  createRoute(input: AwsEC2CreateRouteInput!, config: AwsConfig): AwsEC2CreateRouteOutput
  createRouteTable(input: AwsEC2CreateRouteTableInput!, config: AwsConfig): AwsEC2CreateRouteTableOutput
  createSecurityGroup(input: AwsEC2CreateSecurityGroupInput!, config: AwsConfig): AwsEC2CreateSecurityGroupOutput
  createSnapshot(input: AwsEC2CreateSnapshotInput!, config: AwsConfig): JSON
  createSnapshots(input: AwsEC2CreateSnapshotsInput!, config: AwsConfig): AwsEC2CreateSnapshotsOutput
  createSpotDatafeedSubscription(input: AwsEC2CreateSpotDatafeedSubscriptionInput!, config: AwsConfig): AwsEC2CreateSpotDatafeedSubscriptionOutput
  createSubnet(input: AwsEC2CreateSubnetInput!, config: AwsConfig): AwsEC2CreateSubnetOutput
  createTags(input: AwsEC2CreateTagsInput!, config: AwsConfig): JSON
  createTrafficMirrorFilter(input: AwsEC2CreateTrafficMirrorFilterInput, config: AwsConfig): AwsEC2CreateTrafficMirrorFilterOutput
  createTrafficMirrorFilterRule(input: AwsEC2CreateTrafficMirrorFilterRuleInput!, config: AwsConfig): AwsEC2CreateTrafficMirrorFilterRuleOutput
  createTrafficMirrorSession(input: AwsEC2CreateTrafficMirrorSessionInput!, config: AwsConfig): AwsEC2CreateTrafficMirrorSessionOutput
  createTrafficMirrorTarget(input: AwsEC2CreateTrafficMirrorTargetInput, config: AwsConfig): AwsEC2CreateTrafficMirrorTargetOutput
  createTransitGateway(input: AwsEC2CreateTransitGatewayInput, config: AwsConfig): AwsEC2CreateTransitGatewayOutput
  createTransitGatewayRoute(input: AwsEC2CreateTransitGatewayRouteInput!, config: AwsConfig): AwsEC2CreateTransitGatewayRouteOutput
  createTransitGatewayRouteTable(input: AwsEC2CreateTransitGatewayRouteTableInput!, config: AwsConfig): AwsEC2CreateTransitGatewayRouteTableOutput
  createTransitGatewayVpcAttachment(input: AwsEC2CreateTransitGatewayVpcAttachmentInput!, config: AwsConfig): AwsEC2CreateTransitGatewayVpcAttachmentOutput
  createVolume(input: AwsEC2CreateVolumeInput!, config: AwsConfig): JSON
  createVpc(input: AwsEC2CreateVpcInput!, config: AwsConfig): AwsEC2CreateVpcOutput
  createVpcEndpoint(input: AwsEC2CreateVpcEndpointInput!, config: AwsConfig): AwsEC2CreateVpcEndpointOutput
  createVpcEndpointConnectionNotification(input: AwsEC2CreateVpcEndpointConnectionNotificationInput!, config: AwsConfig): AwsEC2CreateVpcEndpointConnectionNotificationOutput
  createVpcEndpointServiceConfiguration(input: AwsEC2CreateVpcEndpointServiceConfigurationInput!, config: AwsConfig): AwsEC2CreateVpcEndpointServiceConfigurationOutput
  createVpcPeeringConnection(input: AwsEC2CreateVpcPeeringConnectionInput, config: AwsConfig): AwsEC2CreateVpcPeeringConnectionOutput
  createVpnConnection(input: AwsEC2CreateVpnConnectionInput!, config: AwsConfig): AwsEC2CreateVpnConnectionOutput
  createVpnConnectionRoute(input: AwsEC2CreateVpnConnectionRouteInput!, config: AwsConfig): JSON
  createVpnGateway(input: AwsEC2CreateVpnGatewayInput!, config: AwsConfig): AwsEC2CreateVpnGatewayOutput
  deleteClientVpnEndpoint(input: AwsEC2DeleteClientVpnEndpointInput!, config: AwsConfig): AwsEC2DeleteClientVpnEndpointOutput
  deleteClientVpnRoute(input: AwsEC2DeleteClientVpnRouteInput!, config: AwsConfig): AwsEC2DeleteClientVpnRouteOutput
  deleteCustomerGateway(input: AwsEC2DeleteCustomerGatewayInput!, config: AwsConfig): JSON
  deleteDhcpOptions(input: AwsEC2DeleteDhcpOptionsInput!, config: AwsConfig): JSON
  deleteEgressOnlyInternetGateway(input: AwsEC2DeleteEgressOnlyInternetGatewayInput!, config: AwsConfig): AwsEC2DeleteEgressOnlyInternetGatewayOutput
  deleteFleets(input: AwsEC2DeleteFleetsInput!, config: AwsConfig): AwsEC2DeleteFleetsOutput
  deleteFlowLogs(input: AwsEC2DeleteFlowLogsInput!, config: AwsConfig): AwsEC2DeleteFlowLogsOutput
  deleteFpgaImage(input: AwsEC2DeleteFpgaImageInput!, config: AwsConfig): AwsEC2DeleteFpgaImageOutput
  deleteInternetGateway(input: AwsEC2DeleteInternetGatewayInput!, config: AwsConfig): JSON
  deleteKeyPair(input: AwsEC2DeleteKeyPairInput!, config: AwsConfig): JSON
  deleteLaunchTemplate(input: AwsEC2DeleteLaunchTemplateInput, config: AwsConfig): AwsEC2DeleteLaunchTemplateOutput
  deleteLaunchTemplateVersions(input: AwsEC2DeleteLaunchTemplateVersionsInput!, config: AwsConfig): AwsEC2DeleteLaunchTemplateVersionsOutput
  deleteNatGateway(input: AwsEC2DeleteNatGatewayInput!, config: AwsConfig): AwsEC2DeleteNatGatewayOutput
  deleteNetworkAcl(input: AwsEC2DeleteNetworkAclInput!, config: AwsConfig): JSON
  deleteNetworkAclEntry(input: AwsEC2DeleteNetworkAclEntryInput!, config: AwsConfig): JSON
  deleteNetworkInterface(input: AwsEC2DeleteNetworkInterfaceInput!, config: AwsConfig): JSON
  deleteNetworkInterfacePermission(input: AwsEC2DeleteNetworkInterfacePermissionInput!, config: AwsConfig): AwsEC2DeleteNetworkInterfacePermissionOutput
  deletePlacementGroup(input: AwsEC2DeletePlacementGroupInput!, config: AwsConfig): JSON
  deleteRoute(input: AwsEC2DeleteRouteInput!, config: AwsConfig): JSON
  deleteRouteTable(input: AwsEC2DeleteRouteTableInput!, config: AwsConfig): JSON
  deleteSecurityGroup(input: AwsEC2DeleteSecurityGroupInput, config: AwsConfig): JSON
  deleteSnapshot(input: AwsEC2DeleteSnapshotInput!, config: AwsConfig): JSON
  deleteSpotDatafeedSubscription(input: AwsEC2DeleteSpotDatafeedSubscriptionInput, config: AwsConfig): JSON
  deleteSubnet(input: AwsEC2DeleteSubnetInput!, config: AwsConfig): JSON
  deleteTags(input: AwsEC2DeleteTagsInput!, config: AwsConfig): JSON
  deleteTrafficMirrorFilter(input: AwsEC2DeleteTrafficMirrorFilterInput!, config: AwsConfig): AwsEC2DeleteTrafficMirrorFilterOutput
  deleteTrafficMirrorFilterRule(input: AwsEC2DeleteTrafficMirrorFilterRuleInput!, config: AwsConfig): AwsEC2DeleteTrafficMirrorFilterRuleOutput
  deleteTrafficMirrorSession(input: AwsEC2DeleteTrafficMirrorSessionInput!, config: AwsConfig): AwsEC2DeleteTrafficMirrorSessionOutput
  deleteTrafficMirrorTarget(input: AwsEC2DeleteTrafficMirrorTargetInput!, config: AwsConfig): AwsEC2DeleteTrafficMirrorTargetOutput
  deleteTransitGateway(input: AwsEC2DeleteTransitGatewayInput!, config: AwsConfig): AwsEC2DeleteTransitGatewayOutput
  deleteTransitGatewayRoute(input: AwsEC2DeleteTransitGatewayRouteInput!, config: AwsConfig): AwsEC2DeleteTransitGatewayRouteOutput
  deleteTransitGatewayRouteTable(input: AwsEC2DeleteTransitGatewayRouteTableInput!, config: AwsConfig): AwsEC2DeleteTransitGatewayRouteTableOutput
  deleteTransitGatewayVpcAttachment(input: AwsEC2DeleteTransitGatewayVpcAttachmentInput!, config: AwsConfig): AwsEC2DeleteTransitGatewayVpcAttachmentOutput
  deleteVolume(input: AwsEC2DeleteVolumeInput!, config: AwsConfig): JSON
  deleteVpc(input: AwsEC2DeleteVpcInput!, config: AwsConfig): JSON
  deleteVpcEndpointConnectionNotifications(input: AwsEC2DeleteVpcEndpointConnectionNotificationsInput!, config: AwsConfig): AwsEC2DeleteVpcEndpointConnectionNotificationsOutput
  deleteVpcEndpointServiceConfigurations(input: AwsEC2DeleteVpcEndpointServiceConfigurationsInput!, config: AwsConfig): AwsEC2DeleteVpcEndpointServiceConfigurationsOutput
  deleteVpcEndpoints(input: AwsEC2DeleteVpcEndpointsInput!, config: AwsConfig): AwsEC2DeleteVpcEndpointsOutput
  deleteVpcPeeringConnection(input: AwsEC2DeleteVpcPeeringConnectionInput!, config: AwsConfig): AwsEC2DeleteVpcPeeringConnectionOutput
  deleteVpnConnection(input: AwsEC2DeleteVpnConnectionInput!, config: AwsConfig): JSON
  deleteVpnConnectionRoute(input: AwsEC2DeleteVpnConnectionRouteInput!, config: AwsConfig): JSON
  deleteVpnGateway(input: AwsEC2DeleteVpnGatewayInput!, config: AwsConfig): JSON
  deprovisionByoipCidr(input: AwsEC2DeprovisionByoipCidrInput!, config: AwsConfig): AwsEC2DeprovisionByoipCidrOutput
  deregisterImage(input: AwsEC2DeregisterImageInput!, config: AwsConfig): JSON
  describeAccountAttributes(input: AwsEC2DescribeAccountAttributesInput, config: AwsConfig): AwsEC2DescribeAccountAttributesOutput
  describeAddresses(input: AwsEC2DescribeAddressesInput, config: AwsConfig): AwsEC2DescribeAddressesOutput
  describeAggregateIdFormat(input: AwsEC2DescribeAggregateIdFormatInput, config: AwsConfig): AwsEC2DescribeAggregateIdFormatOutput
  describeAvailabilityZones(input: AwsEC2DescribeAvailabilityZonesInput, config: AwsConfig): AwsEC2DescribeAvailabilityZonesOutput
  describeBundleTasks(input: AwsEC2DescribeBundleTasksInput, config: AwsConfig): AwsEC2DescribeBundleTasksOutput
  describeByoipCidrs(input: AwsEC2DescribeByoipCidrsInput!, config: AwsConfig): AwsEC2DescribeByoipCidrsOutput
  describeCapacityReservations(input: AwsEC2DescribeCapacityReservationsInput, config: AwsConfig): AwsEC2DescribeCapacityReservationsOutput
  describeClassicLinkInstances(input: AwsEC2DescribeClassicLinkInstancesInput, config: AwsConfig): AwsEC2DescribeClassicLinkInstancesOutput
  describeClientVpnAuthorizationRules(input: AwsEC2DescribeClientVpnAuthorizationRulesInput!, config: AwsConfig): AwsEC2DescribeClientVpnAuthorizationRulesOutput
  describeClientVpnConnections(input: AwsEC2DescribeClientVpnConnectionsInput!, config: AwsConfig): AwsEC2DescribeClientVpnConnectionsOutput
  describeClientVpnEndpoints(input: AwsEC2DescribeClientVpnEndpointsInput, config: AwsConfig): AwsEC2DescribeClientVpnEndpointsOutput
  describeClientVpnRoutes(input: AwsEC2DescribeClientVpnRoutesInput!, config: AwsConfig): AwsEC2DescribeClientVpnRoutesOutput
  describeClientVpnTargetNetworks(input: AwsEC2DescribeClientVpnTargetNetworksInput!, config: AwsConfig): AwsEC2DescribeClientVpnTargetNetworksOutput
  describeConversionTasks(input: AwsEC2DescribeConversionTasksInput, config: AwsConfig): AwsEC2DescribeConversionTasksOutput
  describeCustomerGateways(input: AwsEC2DescribeCustomerGatewaysInput, config: AwsConfig): AwsEC2DescribeCustomerGatewaysOutput
  describeDhcpOptions(input: AwsEC2DescribeDhcpOptionsInput, config: AwsConfig): AwsEC2DescribeDhcpOptionsOutput
  describeEgressOnlyInternetGateways(input: AwsEC2DescribeEgressOnlyInternetGatewaysInput, config: AwsConfig): AwsEC2DescribeEgressOnlyInternetGatewaysOutput
  describeElasticGpus(input: AwsEC2DescribeElasticGpusInput, config: AwsConfig): AwsEC2DescribeElasticGpusOutput
  describeExportTasks(input: AwsEC2DescribeExportTasksInput, config: AwsConfig): AwsEC2DescribeExportTasksOutput
  describeFleetHistory(input: AwsEC2DescribeFleetHistoryInput!, config: AwsConfig): AwsEC2DescribeFleetHistoryOutput
  describeFleetInstances(input: AwsEC2DescribeFleetInstancesInput!, config: AwsConfig): AwsEC2DescribeFleetInstancesOutput
  describeFleets(input: AwsEC2DescribeFleetsInput, config: AwsConfig): AwsEC2DescribeFleetsOutput
  describeFlowLogs(input: AwsEC2DescribeFlowLogsInput, config: AwsConfig): AwsEC2DescribeFlowLogsOutput
  describeFpgaImageAttribute(input: AwsEC2DescribeFpgaImageAttributeInput!, config: AwsConfig): AwsEC2DescribeFpgaImageAttributeOutput
  describeFpgaImages(input: AwsEC2DescribeFpgaImagesInput, config: AwsConfig): AwsEC2DescribeFpgaImagesOutput
  describeHostReservationOfferings(input: AwsEC2DescribeHostReservationOfferingsInput, config: AwsConfig): AwsEC2DescribeHostReservationOfferingsOutput
  describeHostReservations(input: AwsEC2DescribeHostReservationsInput, config: AwsConfig): AwsEC2DescribeHostReservationsOutput
  describeHosts(input: AwsEC2DescribeHostsInput, config: AwsConfig): AwsEC2DescribeHostsOutput
  describeIamInstanceProfileAssociations(input: AwsEC2DescribeIamInstanceProfileAssociationsInput, config: AwsConfig): AwsEC2DescribeIamInstanceProfileAssociationsOutput
  describeIdFormat(input: AwsEC2DescribeIdFormatInput, config: AwsConfig): AwsEC2DescribeIdFormatOutput
  describeIdentityIdFormat(input: AwsEC2DescribeIdentityIdFormatInput!, config: AwsConfig): AwsEC2DescribeIdentityIdFormatOutput
  describeImageAttribute(input: AwsEC2DescribeImageAttributeInput!, config: AwsConfig): AwsEC2DescribeImageAttributeOutput
  describeImages(input: AwsEC2DescribeImagesInput, config: AwsConfig): AwsEC2DescribeImagesOutput
  describeImportImageTasks(input: AwsEC2DescribeImportImageTasksInput, config: AwsConfig): AwsEC2DescribeImportImageTasksOutput
  describeImportSnapshotTasks(input: AwsEC2DescribeImportSnapshotTasksInput, config: AwsConfig): AwsEC2DescribeImportSnapshotTasksOutput
  describeInstanceAttribute(input: AwsEC2DescribeInstanceAttributeInput!, config: AwsConfig): AwsEC2DescribeInstanceAttributeOutput
  describeInstanceCreditSpecifications(input: AwsEC2DescribeInstanceCreditSpecificationsInput, config: AwsConfig): AwsEC2DescribeInstanceCreditSpecificationsOutput
  describeInstanceStatus(input: AwsEC2DescribeInstanceStatusInput, config: AwsConfig): AwsEC2DescribeInstanceStatusOutput
  describeInstances(input: AwsEC2DescribeInstancesInput, config: AwsConfig): AwsEC2DescribeInstancesOutput
  describeInternetGateways(input: AwsEC2DescribeInternetGatewaysInput, config: AwsConfig): AwsEC2DescribeInternetGatewaysOutput
  describeKeyPairs(input: AwsEC2DescribeKeyPairsInput, config: AwsConfig): AwsEC2DescribeKeyPairsOutput
  describeLaunchTemplateVersions(input: AwsEC2DescribeLaunchTemplateVersionsInput, config: AwsConfig): AwsEC2DescribeLaunchTemplateVersionsOutput
  describeLaunchTemplates(input: AwsEC2DescribeLaunchTemplatesInput, config: AwsConfig): AwsEC2DescribeLaunchTemplatesOutput
  describeMovingAddresses(input: AwsEC2DescribeMovingAddressesInput, config: AwsConfig): AwsEC2DescribeMovingAddressesOutput
  describeNatGateways(input: AwsEC2DescribeNatGatewaysInput, config: AwsConfig): AwsEC2DescribeNatGatewaysOutput
  describeNetworkAcls(input: AwsEC2DescribeNetworkAclsInput, config: AwsConfig): AwsEC2DescribeNetworkAclsOutput
  describeNetworkInterfaceAttribute(input: AwsEC2DescribeNetworkInterfaceAttributeInput!, config: AwsConfig): AwsEC2DescribeNetworkInterfaceAttributeOutput
  describeNetworkInterfacePermissions(input: AwsEC2DescribeNetworkInterfacePermissionsInput, config: AwsConfig): AwsEC2DescribeNetworkInterfacePermissionsOutput
  describeNetworkInterfaces(input: AwsEC2DescribeNetworkInterfacesInput, config: AwsConfig): AwsEC2DescribeNetworkInterfacesOutput
  describePlacementGroups(input: AwsEC2DescribePlacementGroupsInput, config: AwsConfig): AwsEC2DescribePlacementGroupsOutput
  describePrefixLists(input: AwsEC2DescribePrefixListsInput, config: AwsConfig): AwsEC2DescribePrefixListsOutput
  describePrincipalIdFormat(input: AwsEC2DescribePrincipalIdFormatInput, config: AwsConfig): AwsEC2DescribePrincipalIdFormatOutput
  describePublicIpv4Pools(input: AwsEC2DescribePublicIpv4PoolsInput, config: AwsConfig): AwsEC2DescribePublicIpv4PoolsOutput
  describeRegions(input: AwsEC2DescribeRegionsInput, config: AwsConfig): AwsEC2DescribeRegionsOutput
  describeReservedInstances(input: AwsEC2DescribeReservedInstancesInput, config: AwsConfig): AwsEC2DescribeReservedInstancesOutput
  describeReservedInstancesListings(input: AwsEC2DescribeReservedInstancesListingsInput, config: AwsConfig): AwsEC2DescribeReservedInstancesListingsOutput
  describeReservedInstancesModifications(input: AwsEC2DescribeReservedInstancesModificationsInput, config: AwsConfig): AwsEC2DescribeReservedInstancesModificationsOutput
  describeReservedInstancesOfferings(input: AwsEC2DescribeReservedInstancesOfferingsInput, config: AwsConfig): AwsEC2DescribeReservedInstancesOfferingsOutput
  describeRouteTables(input: AwsEC2DescribeRouteTablesInput, config: AwsConfig): AwsEC2DescribeRouteTablesOutput
  describeScheduledInstanceAvailability(input: AwsEC2DescribeScheduledInstanceAvailabilityInput!, config: AwsConfig): AwsEC2DescribeScheduledInstanceAvailabilityOutput
  describeScheduledInstances(input: AwsEC2DescribeScheduledInstancesInput, config: AwsConfig): AwsEC2DescribeScheduledInstancesOutput
  describeSecurityGroupReferences(input: AwsEC2DescribeSecurityGroupReferencesInput!, config: AwsConfig): AwsEC2DescribeSecurityGroupReferencesOutput
  describeSecurityGroups(input: AwsEC2DescribeSecurityGroupsInput, config: AwsConfig): AwsEC2DescribeSecurityGroupsOutput
  describeSnapshotAttribute(input: AwsEC2DescribeSnapshotAttributeInput!, config: AwsConfig): AwsEC2DescribeSnapshotAttributeOutput
  describeSnapshots(input: AwsEC2DescribeSnapshotsInput, config: AwsConfig): AwsEC2DescribeSnapshotsOutput
  describeSpotDatafeedSubscription(input: AwsEC2DescribeSpotDatafeedSubscriptionInput, config: AwsConfig): AwsEC2DescribeSpotDatafeedSubscriptionOutput
  describeSpotFleetInstances(input: AwsEC2DescribeSpotFleetInstancesInput!, config: AwsConfig): AwsEC2DescribeSpotFleetInstancesOutput
  describeSpotFleetRequestHistory(input: AwsEC2DescribeSpotFleetRequestHistoryInput!, config: AwsConfig): AwsEC2DescribeSpotFleetRequestHistoryOutput
  describeSpotFleetRequests(input: AwsEC2DescribeSpotFleetRequestsInput, config: AwsConfig): AwsEC2DescribeSpotFleetRequestsOutput
  describeSpotInstanceRequests(input: AwsEC2DescribeSpotInstanceRequestsInput, config: AwsConfig): AwsEC2DescribeSpotInstanceRequestsOutput
  describeSpotPriceHistory(input: AwsEC2DescribeSpotPriceHistoryInput, config: AwsConfig): AwsEC2DescribeSpotPriceHistoryOutput
  describeStaleSecurityGroups(input: AwsEC2DescribeStaleSecurityGroupsInput!, config: AwsConfig): AwsEC2DescribeStaleSecurityGroupsOutput
  describeSubnets(input: AwsEC2DescribeSubnetsInput, config: AwsConfig): AwsEC2DescribeSubnetsOutput
  describeTags(input: AwsEC2DescribeTagsInput, config: AwsConfig): AwsEC2DescribeTagsOutput
  describeTrafficMirrorFilters(input: AwsEC2DescribeTrafficMirrorFiltersInput, config: AwsConfig): AwsEC2DescribeTrafficMirrorFiltersOutput
  describeTrafficMirrorSessions(input: AwsEC2DescribeTrafficMirrorSessionsInput, config: AwsConfig): AwsEC2DescribeTrafficMirrorSessionsOutput
  describeTrafficMirrorTargets(input: AwsEC2DescribeTrafficMirrorTargetsInput, config: AwsConfig): AwsEC2DescribeTrafficMirrorTargetsOutput
  describeTransitGatewayAttachments(input: AwsEC2DescribeTransitGatewayAttachmentsInput, config: AwsConfig): AwsEC2DescribeTransitGatewayAttachmentsOutput
  describeTransitGatewayRouteTables(input: AwsEC2DescribeTransitGatewayRouteTablesInput, config: AwsConfig): AwsEC2DescribeTransitGatewayRouteTablesOutput
  describeTransitGatewayVpcAttachments(input: AwsEC2DescribeTransitGatewayVpcAttachmentsInput, config: AwsConfig): AwsEC2DescribeTransitGatewayVpcAttachmentsOutput
  describeTransitGateways(input: AwsEC2DescribeTransitGatewaysInput, config: AwsConfig): AwsEC2DescribeTransitGatewaysOutput
  describeVolumeAttribute(input: AwsEC2DescribeVolumeAttributeInput!, config: AwsConfig): AwsEC2DescribeVolumeAttributeOutput
  describeVolumeStatus(input: AwsEC2DescribeVolumeStatusInput, config: AwsConfig): AwsEC2DescribeVolumeStatusOutput
  describeVolumes(input: AwsEC2DescribeVolumesInput, config: AwsConfig): AwsEC2DescribeVolumesOutput
  describeVolumesModifications(input: AwsEC2DescribeVolumesModificationsInput, config: AwsConfig): AwsEC2DescribeVolumesModificationsOutput
  describeVpcAttribute(input: AwsEC2DescribeVpcAttributeInput!, config: AwsConfig): AwsEC2DescribeVpcAttributeOutput
  describeVpcClassicLink(input: AwsEC2DescribeVpcClassicLinkInput, config: AwsConfig): AwsEC2DescribeVpcClassicLinkOutput
  describeVpcClassicLinkDnsSupport(input: AwsEC2DescribeVpcClassicLinkDnsSupportInput, config: AwsConfig): AwsEC2DescribeVpcClassicLinkDnsSupportOutput
  describeVpcEndpointConnectionNotifications(input: AwsEC2DescribeVpcEndpointConnectionNotificationsInput, config: AwsConfig): AwsEC2DescribeVpcEndpointConnectionNotificationsOutput
  describeVpcEndpointConnections(input: AwsEC2DescribeVpcEndpointConnectionsInput, config: AwsConfig): AwsEC2DescribeVpcEndpointConnectionsOutput
  describeVpcEndpointServiceConfigurations(input: AwsEC2DescribeVpcEndpointServiceConfigurationsInput, config: AwsConfig): AwsEC2DescribeVpcEndpointServiceConfigurationsOutput
  describeVpcEndpointServicePermissions(input: AwsEC2DescribeVpcEndpointServicePermissionsInput!, config: AwsConfig): AwsEC2DescribeVpcEndpointServicePermissionsOutput
  describeVpcEndpointServices(input: AwsEC2DescribeVpcEndpointServicesInput, config: AwsConfig): AwsEC2DescribeVpcEndpointServicesOutput
  describeVpcEndpoints(input: AwsEC2DescribeVpcEndpointsInput, config: AwsConfig): AwsEC2DescribeVpcEndpointsOutput
  describeVpcPeeringConnections(input: AwsEC2DescribeVpcPeeringConnectionsInput, config: AwsConfig): AwsEC2DescribeVpcPeeringConnectionsOutput
  describeVpcs(input: AwsEC2DescribeVpcsInput, config: AwsConfig): AwsEC2DescribeVpcsOutput
  describeVpnConnections(input: AwsEC2DescribeVpnConnectionsInput, config: AwsConfig): AwsEC2DescribeVpnConnectionsOutput
  describeVpnGateways(input: AwsEC2DescribeVpnGatewaysInput, config: AwsConfig): AwsEC2DescribeVpnGatewaysOutput
  detachClassicLinkVpc(input: AwsEC2DetachClassicLinkVpcInput!, config: AwsConfig): AwsEC2DetachClassicLinkVpcOutput
  detachInternetGateway(input: AwsEC2DetachInternetGatewayInput!, config: AwsConfig): JSON
  detachNetworkInterface(input: AwsEC2DetachNetworkInterfaceInput!, config: AwsConfig): JSON
  detachVolume(input: AwsEC2DetachVolumeInput!, config: AwsConfig): JSON
  detachVpnGateway(input: AwsEC2DetachVpnGatewayInput!, config: AwsConfig): JSON
  disableEbsEncryptionByDefault(input: AwsEC2DisableEbsEncryptionByDefaultInput, config: AwsConfig): AwsEC2DisableEbsEncryptionByDefaultOutput
  disableTransitGatewayRouteTablePropagation(input: AwsEC2DisableTransitGatewayRouteTablePropagationInput!, config: AwsConfig): AwsEC2DisableTransitGatewayRouteTablePropagationOutput
  disableVgwRoutePropagation(input: AwsEC2DisableVgwRoutePropagationInput!, config: AwsConfig): JSON
  disableVpcClassicLink(input: AwsEC2DisableVpcClassicLinkInput!, config: AwsConfig): AwsEC2DisableVpcClassicLinkOutput
  disableVpcClassicLinkDnsSupport(input: AwsEC2DisableVpcClassicLinkDnsSupportInput, config: AwsConfig): AwsEC2DisableVpcClassicLinkDnsSupportOutput
  disassociateAddress(input: AwsEC2DisassociateAddressInput, config: AwsConfig): JSON
  disassociateClientVpnTargetNetwork(input: AwsEC2DisassociateClientVpnTargetNetworkInput!, config: AwsConfig): AwsEC2DisassociateClientVpnTargetNetworkOutput
  disassociateIamInstanceProfile(input: AwsEC2DisassociateIamInstanceProfileInput!, config: AwsConfig): AwsEC2DisassociateIamInstanceProfileOutput
  disassociateRouteTable(input: AwsEC2DisassociateRouteTableInput!, config: AwsConfig): JSON
  disassociateSubnetCidrBlock(input: AwsEC2DisassociateSubnetCidrBlockInput!, config: AwsConfig): AwsEC2DisassociateSubnetCidrBlockOutput
  disassociateTransitGatewayRouteTable(input: AwsEC2DisassociateTransitGatewayRouteTableInput!, config: AwsConfig): AwsEC2DisassociateTransitGatewayRouteTableOutput
  disassociateVpcCidrBlock(input: AwsEC2DisassociateVpcCidrBlockInput!, config: AwsConfig): AwsEC2DisassociateVpcCidrBlockOutput
  enableEbsEncryptionByDefault(input: AwsEC2EnableEbsEncryptionByDefaultInput, config: AwsConfig): AwsEC2EnableEbsEncryptionByDefaultOutput
  enableTransitGatewayRouteTablePropagation(input: AwsEC2EnableTransitGatewayRouteTablePropagationInput!, config: AwsConfig): AwsEC2EnableTransitGatewayRouteTablePropagationOutput
  enableVgwRoutePropagation(input: AwsEC2EnableVgwRoutePropagationInput!, config: AwsConfig): JSON
  enableVolumeIO(input: AwsEC2EnableVolumeIOInput!, config: AwsConfig): JSON
  enableVpcClassicLink(input: AwsEC2EnableVpcClassicLinkInput!, config: AwsConfig): AwsEC2EnableVpcClassicLinkOutput
  enableVpcClassicLinkDnsSupport(input: AwsEC2EnableVpcClassicLinkDnsSupportInput, config: AwsConfig): AwsEC2EnableVpcClassicLinkDnsSupportOutput
  exportClientVpnClientCertificateRevocationList(input: AwsEC2ExportClientVpnClientCertificateRevocationListInput!, config: AwsConfig): AwsEC2ExportClientVpnClientCertificateRevocationListOutput
  exportClientVpnClientConfiguration(input: AwsEC2ExportClientVpnClientConfigurationInput!, config: AwsConfig): AwsEC2ExportClientVpnClientConfigurationOutput
  exportTransitGatewayRoutes(input: AwsEC2ExportTransitGatewayRoutesInput!, config: AwsConfig): AwsEC2ExportTransitGatewayRoutesOutput
  getConsoleOutput(input: AwsEC2GetConsoleOutputInput!, config: AwsConfig): AwsEC2GetConsoleOutputOutput
  getConsoleScreenshot(input: AwsEC2GetConsoleScreenshotInput!, config: AwsConfig): AwsEC2GetConsoleScreenshotOutput
  getEbsDefaultKmsKeyId(input: AwsEC2GetEbsDefaultKmsKeyIdInput, config: AwsConfig): AwsEC2GetEbsDefaultKmsKeyIdOutput
  getEbsEncryptionByDefault(input: AwsEC2GetEbsEncryptionByDefaultInput, config: AwsConfig): AwsEC2GetEbsEncryptionByDefaultOutput
  getHostReservationPurchasePreview(input: AwsEC2GetHostReservationPurchasePreviewInput!, config: AwsConfig): AwsEC2GetHostReservationPurchasePreviewOutput
  getLaunchTemplateData(input: AwsEC2GetLaunchTemplateDataInput!, config: AwsConfig): AwsEC2GetLaunchTemplateDataOutput
  getPasswordData(input: AwsEC2GetPasswordDataInput!, config: AwsConfig): AwsEC2GetPasswordDataOutput
  getReservedInstancesExchangeQuote(input: AwsEC2GetReservedInstancesExchangeQuoteInput!, config: AwsConfig): AwsEC2GetReservedInstancesExchangeQuoteOutput
  getTransitGatewayAttachmentPropagations(input: AwsEC2GetTransitGatewayAttachmentPropagationsInput!, config: AwsConfig): AwsEC2GetTransitGatewayAttachmentPropagationsOutput
  getTransitGatewayRouteTableAssociations(input: AwsEC2GetTransitGatewayRouteTableAssociationsInput!, config: AwsConfig): AwsEC2GetTransitGatewayRouteTableAssociationsOutput
  getTransitGatewayRouteTablePropagations(input: AwsEC2GetTransitGatewayRouteTablePropagationsInput!, config: AwsConfig): AwsEC2GetTransitGatewayRouteTablePropagationsOutput
  importClientVpnClientCertificateRevocationList(input: AwsEC2ImportClientVpnClientCertificateRevocationListInput!, config: AwsConfig): AwsEC2ImportClientVpnClientCertificateRevocationListOutput
  importImage(input: AwsEC2ImportImageInput, config: AwsConfig): AwsEC2ImportImageOutput
  importInstance(input: AwsEC2ImportInstanceInput!, config: AwsConfig): AwsEC2ImportInstanceOutput
  importKeyPair(input: AwsEC2ImportKeyPairInput!, config: AwsConfig): AwsEC2ImportKeyPairOutput
  importSnapshot(input: AwsEC2ImportSnapshotInput, config: AwsConfig): AwsEC2ImportSnapshotOutput
  importVolume(input: AwsEC2ImportVolumeInput!, config: AwsConfig): AwsEC2ImportVolumeOutput
  modifyCapacityReservation(input: AwsEC2ModifyCapacityReservationInput!, config: AwsConfig): AwsEC2ModifyCapacityReservationOutput
  modifyClientVpnEndpoint(input: AwsEC2ModifyClientVpnEndpointInput!, config: AwsConfig): AwsEC2ModifyClientVpnEndpointOutput
  modifyEbsDefaultKmsKeyId(input: AwsEC2ModifyEbsDefaultKmsKeyIdInput!, config: AwsConfig): AwsEC2ModifyEbsDefaultKmsKeyIdOutput
  modifyFleet(input: AwsEC2ModifyFleetInput!, config: AwsConfig): AwsEC2ModifyFleetOutput
  modifyFpgaImageAttribute(input: AwsEC2ModifyFpgaImageAttributeInput!, config: AwsConfig): AwsEC2ModifyFpgaImageAttributeOutput
  modifyHosts(input: AwsEC2ModifyHostsInput!, config: AwsConfig): AwsEC2ModifyHostsOutput
  modifyIdFormat(input: AwsEC2ModifyIdFormatInput!, config: AwsConfig): JSON
  modifyIdentityIdFormat(input: AwsEC2ModifyIdentityIdFormatInput!, config: AwsConfig): JSON
  modifyImageAttribute(input: AwsEC2ModifyImageAttributeInput!, config: AwsConfig): JSON
  modifyInstanceAttribute(input: AwsEC2ModifyInstanceAttributeInput!, config: AwsConfig): JSON
  modifyInstanceCapacityReservationAttributes(input: AwsEC2ModifyInstanceCapacityReservationAttributesInput!, config: AwsConfig): AwsEC2ModifyInstanceCapacityReservationAttributesOutput
  modifyInstanceCreditSpecification(input: AwsEC2ModifyInstanceCreditSpecificationInput!, config: AwsConfig): AwsEC2ModifyInstanceCreditSpecificationOutput
  modifyInstanceEventStartTime(input: AwsEC2ModifyInstanceEventStartTimeInput!, config: AwsConfig): AwsEC2ModifyInstanceEventStartTimeOutput
  modifyInstancePlacement(input: AwsEC2ModifyInstancePlacementInput!, config: AwsConfig): AwsEC2ModifyInstancePlacementOutput
  modifyLaunchTemplate(input: AwsEC2ModifyLaunchTemplateInput, config: AwsConfig): AwsEC2ModifyLaunchTemplateOutput
  modifyNetworkInterfaceAttribute(input: AwsEC2ModifyNetworkInterfaceAttributeInput!, config: AwsConfig): JSON
  modifyReservedInstances(input: AwsEC2ModifyReservedInstancesInput!, config: AwsConfig): AwsEC2ModifyReservedInstancesOutput
  modifySnapshotAttribute(input: AwsEC2ModifySnapshotAttributeInput!, config: AwsConfig): JSON
  modifySpotFleetRequest(input: AwsEC2ModifySpotFleetRequestInput!, config: AwsConfig): AwsEC2ModifySpotFleetRequestOutput
  modifySubnetAttribute(input: AwsEC2ModifySubnetAttributeInput!, config: AwsConfig): JSON
  modifyTrafficMirrorFilterNetworkServices(input: AwsEC2ModifyTrafficMirrorFilterNetworkServicesInput!, config: AwsConfig): AwsEC2ModifyTrafficMirrorFilterNetworkServicesOutput
  modifyTrafficMirrorFilterRule(input: AwsEC2ModifyTrafficMirrorFilterRuleInput!, config: AwsConfig): AwsEC2ModifyTrafficMirrorFilterRuleOutput
  modifyTrafficMirrorSession(input: AwsEC2ModifyTrafficMirrorSessionInput!, config: AwsConfig): AwsEC2ModifyTrafficMirrorSessionOutput
  modifyTransitGatewayVpcAttachment(input: AwsEC2ModifyTransitGatewayVpcAttachmentInput!, config: AwsConfig): AwsEC2ModifyTransitGatewayVpcAttachmentOutput
  modifyVolume(input: AwsEC2ModifyVolumeInput!, config: AwsConfig): AwsEC2ModifyVolumeOutput
  modifyVolumeAttribute(input: AwsEC2ModifyVolumeAttributeInput!, config: AwsConfig): JSON
  modifyVpcAttribute(input: AwsEC2ModifyVpcAttributeInput!, config: AwsConfig): JSON
  modifyVpcEndpoint(input: AwsEC2ModifyVpcEndpointInput!, config: AwsConfig): AwsEC2ModifyVpcEndpointOutput
  modifyVpcEndpointConnectionNotification(input: AwsEC2ModifyVpcEndpointConnectionNotificationInput!, config: AwsConfig): AwsEC2ModifyVpcEndpointConnectionNotificationOutput
  modifyVpcEndpointServiceConfiguration(input: AwsEC2ModifyVpcEndpointServiceConfigurationInput!, config: AwsConfig): AwsEC2ModifyVpcEndpointServiceConfigurationOutput
  modifyVpcEndpointServicePermissions(input: AwsEC2ModifyVpcEndpointServicePermissionsInput!, config: AwsConfig): AwsEC2ModifyVpcEndpointServicePermissionsOutput
  modifyVpcPeeringConnectionOptions(input: AwsEC2ModifyVpcPeeringConnectionOptionsInput!, config: AwsConfig): AwsEC2ModifyVpcPeeringConnectionOptionsOutput
  modifyVpcTenancy(input: AwsEC2ModifyVpcTenancyInput!, config: AwsConfig): AwsEC2ModifyVpcTenancyOutput
  modifyVpnConnection(input: AwsEC2ModifyVpnConnectionInput!, config: AwsConfig): AwsEC2ModifyVpnConnectionOutput
  monitorInstances(input: AwsEC2MonitorInstancesInput!, config: AwsConfig): AwsEC2MonitorInstancesOutput
  moveAddressToVpc(input: AwsEC2MoveAddressToVpcInput!, config: AwsConfig): AwsEC2MoveAddressToVpcOutput
  provisionByoipCidr(input: AwsEC2ProvisionByoipCidrInput!, config: AwsConfig): AwsEC2ProvisionByoipCidrOutput
  purchaseHostReservation(input: AwsEC2PurchaseHostReservationInput!, config: AwsConfig): AwsEC2PurchaseHostReservationOutput
  purchaseReservedInstancesOffering(input: AwsEC2PurchaseReservedInstancesOfferingInput!, config: AwsConfig): AwsEC2PurchaseReservedInstancesOfferingOutput
  purchaseScheduledInstances(input: AwsEC2PurchaseScheduledInstancesInput!, config: AwsConfig): AwsEC2PurchaseScheduledInstancesOutput
  rebootInstances(input: AwsEC2RebootInstancesInput!, config: AwsConfig): JSON
  registerImage(input: AwsEC2RegisterImageInput!, config: AwsConfig): AwsEC2RegisterImageOutput
  rejectTransitGatewayVpcAttachment(input: AwsEC2RejectTransitGatewayVpcAttachmentInput!, config: AwsConfig): AwsEC2RejectTransitGatewayVpcAttachmentOutput
  rejectVpcEndpointConnections(input: AwsEC2RejectVpcEndpointConnectionsInput!, config: AwsConfig): AwsEC2RejectVpcEndpointConnectionsOutput
  rejectVpcPeeringConnection(input: AwsEC2RejectVpcPeeringConnectionInput!, config: AwsConfig): AwsEC2RejectVpcPeeringConnectionOutput
  releaseAddress(input: AwsEC2ReleaseAddressInput, config: AwsConfig): JSON
  releaseHosts(input: AwsEC2ReleaseHostsInput!, config: AwsConfig): AwsEC2ReleaseHostsOutput
  replaceIamInstanceProfileAssociation(input: AwsEC2ReplaceIamInstanceProfileAssociationInput!, config: AwsConfig): AwsEC2ReplaceIamInstanceProfileAssociationOutput
  replaceNetworkAclAssociation(input: AwsEC2ReplaceNetworkAclAssociationInput!, config: AwsConfig): AwsEC2ReplaceNetworkAclAssociationOutput
  replaceNetworkAclEntry(input: AwsEC2ReplaceNetworkAclEntryInput!, config: AwsConfig): JSON
  replaceRoute(input: AwsEC2ReplaceRouteInput!, config: AwsConfig): JSON
  replaceRouteTableAssociation(input: AwsEC2ReplaceRouteTableAssociationInput!, config: AwsConfig): AwsEC2ReplaceRouteTableAssociationOutput
  replaceTransitGatewayRoute(input: AwsEC2ReplaceTransitGatewayRouteInput!, config: AwsConfig): AwsEC2ReplaceTransitGatewayRouteOutput
  reportInstanceStatus(input: AwsEC2ReportInstanceStatusInput!, config: AwsConfig): JSON
  requestSpotFleet(input: AwsEC2RequestSpotFleetInput!, config: AwsConfig): AwsEC2RequestSpotFleetOutput
  requestSpotInstances(input: AwsEC2RequestSpotInstancesInput, config: AwsConfig): AwsEC2RequestSpotInstancesOutput
  resetEbsDefaultKmsKeyId(input: AwsEC2ResetEbsDefaultKmsKeyIdInput, config: AwsConfig): AwsEC2ResetEbsDefaultKmsKeyIdOutput
  resetFpgaImageAttribute(input: AwsEC2ResetFpgaImageAttributeInput!, config: AwsConfig): AwsEC2ResetFpgaImageAttributeOutput
  resetImageAttribute(input: AwsEC2ResetImageAttributeInput!, config: AwsConfig): JSON
  resetInstanceAttribute(input: AwsEC2ResetInstanceAttributeInput!, config: AwsConfig): JSON
  resetNetworkInterfaceAttribute(input: AwsEC2ResetNetworkInterfaceAttributeInput!, config: AwsConfig): JSON
  resetSnapshotAttribute(input: AwsEC2ResetSnapshotAttributeInput!, config: AwsConfig): JSON
  restoreAddressToClassic(input: AwsEC2RestoreAddressToClassicInput!, config: AwsConfig): AwsEC2RestoreAddressToClassicOutput
  revokeClientVpnIngress(input: AwsEC2RevokeClientVpnIngressInput!, config: AwsConfig): AwsEC2RevokeClientVpnIngressOutput
  revokeSecurityGroupEgress(input: AwsEC2RevokeSecurityGroupEgressInput!, config: AwsConfig): JSON
  revokeSecurityGroupIngress(input: AwsEC2RevokeSecurityGroupIngressInput, config: AwsConfig): JSON
  runInstances(input: AwsEC2RunInstancesInput!, config: AwsConfig): JSON
  runScheduledInstances(input: AwsEC2RunScheduledInstancesInput!, config: AwsConfig): AwsEC2RunScheduledInstancesOutput
  searchTransitGatewayRoutes(input: AwsEC2SearchTransitGatewayRoutesInput!, config: AwsConfig): AwsEC2SearchTransitGatewayRoutesOutput
  startInstances(input: AwsEC2StartInstancesInput!, config: AwsConfig): AwsEC2StartInstancesOutput
  stopInstances(input: AwsEC2StopInstancesInput!, config: AwsConfig): AwsEC2StopInstancesOutput
  terminateClientVpnConnections(input: AwsEC2TerminateClientVpnConnectionsInput!, config: AwsConfig): AwsEC2TerminateClientVpnConnectionsOutput
  terminateInstances(input: AwsEC2TerminateInstancesInput!, config: AwsConfig): AwsEC2TerminateInstancesOutput
  unassignIpv6Addresses(input: AwsEC2UnassignIpv6AddressesInput!, config: AwsConfig): AwsEC2UnassignIpv6AddressesOutput
  unassignPrivateIpAddresses(input: AwsEC2UnassignPrivateIpAddressesInput!, config: AwsConfig): JSON
  unmonitorInstances(input: AwsEC2UnmonitorInstancesInput!, config: AwsConfig): AwsEC2UnmonitorInstancesOutput
  updateSecurityGroupRuleDescriptionsEgress(input: AwsEC2UpdateSecurityGroupRuleDescriptionsEgressInput!, config: AwsConfig): AwsEC2UpdateSecurityGroupRuleDescriptionsEgressOutput
  updateSecurityGroupRuleDescriptionsIngress(input: AwsEC2UpdateSecurityGroupRuleDescriptionsIngressInput!, config: AwsConfig): AwsEC2UpdateSecurityGroupRuleDescriptionsIngressOutput
  withdrawByoipCidr(input: AwsEC2WithdrawByoipCidrInput!, config: AwsConfig): AwsEC2WithdrawByoipCidrOutput
}

input AwsEC2AcceptReservedInstancesExchangeQuoteInput {
  DryRun: Boolean
  ReservedInstanceIds: [String]!
  TargetConfigurations: [AwsEC2S5Input]
}

type AwsEC2AcceptReservedInstancesExchangeQuoteOutput {
  ExchangeId: String
}

input AwsEC2AcceptTransitGatewayVpcAttachmentInput {
  TransitGatewayAttachmentId: String!
  DryRun: Boolean
}

type AwsEC2AcceptTransitGatewayVpcAttachmentOutput {
  TransitGatewayVpcAttachment: AwsEC2Sb
}

input AwsEC2AcceptVpcEndpointConnectionsInput {
  DryRun: Boolean
  ServiceId: String!
  VpcEndpointIds: [String]!
}

type AwsEC2AcceptVpcEndpointConnectionsOutput {
  Unsuccessful: [AwsEC2Sn]
}

input AwsEC2AcceptVpcPeeringConnectionInput {
  DryRun: Boolean
  VpcPeeringConnectionId: String
}

type AwsEC2AcceptVpcPeeringConnectionOutput {
  VpcPeeringConnection: AwsEC2Sr
}

input AwsEC2AdvertiseByoipCidrInput {
  Cidr: String!
  DryRun: Boolean
}

type AwsEC2AdvertiseByoipCidrOutput {
  ByoipCidr: AwsEC2S12
}

input AwsEC2AllocateAddressInput {
  Domain: String
  Address: String
  PublicIpv4Pool: String
  DryRun: Boolean
}

type AwsEC2AllocateAddressOutput {
  PublicIp: String
  AllocationId: String
  PublicIpv4Pool: String
  Domain: String
}

input AwsEC2AllocateHostsInput {
  AutoPlacement: String
  AvailabilityZone: String!
  ClientToken: String
  InstanceType: String!
  Quantity: Int!
  TagSpecifications: [AwsEC2S19Input]
  HostRecovery: String
}

type AwsEC2AllocateHostsOutput {
  HostIds: [String]
}

input AwsEC2ApplySecurityGroupsToClientVpnTargetNetworkInput {
  ClientVpnEndpointId: String!
  VpcId: String!
  SecurityGroupIds: [String]!
  DryRun: Boolean
}

type AwsEC2ApplySecurityGroupsToClientVpnTargetNetworkOutput {
  SecurityGroupIds: [String]
}

input AwsEC2AssignIpv6AddressesInput {
  Ipv6AddressCount: Int
  Ipv6Addresses: [String]
  NetworkInterfaceId: String!
}

type AwsEC2AssignIpv6AddressesOutput {
  AssignedIpv6Addresses: [String]
  NetworkInterfaceId: String
}

input AwsEC2AssignPrivateIpAddressesInput {
  AllowReassignment: Boolean
  NetworkInterfaceId: String!
  PrivateIpAddresses: [String]
  SecondaryPrivateIpAddressCount: Int
}

type AwsEC2AssignPrivateIpAddressesOutput {
  NetworkInterfaceId: String
  AssignedPrivateIpAddresses: [AwsEC2AssignPrivateIpAddressesOutputAssignedPrivateIpAddresses]
}

type AwsEC2AssignPrivateIpAddressesOutputAssignedPrivateIpAddresses {
  PrivateIpAddress: String
}

input AwsEC2AssociateAddressInput {
  AllocationId: String
  InstanceId: String
  PublicIp: String
  AllowReassociation: Boolean
  DryRun: Boolean
  NetworkInterfaceId: String
  PrivateIpAddress: String
}

type AwsEC2AssociateAddressOutput {
  AssociationId: String
}

input AwsEC2AssociateClientVpnTargetNetworkInput {
  ClientVpnEndpointId: String!
  SubnetId: String!
  ClientToken: String
  DryRun: Boolean
}

type AwsEC2AssociateClientVpnTargetNetworkOutput {
  AssociationId: String
  Status: AwsEC2S1u
}

input AwsEC2AssociateDhcpOptionsInput {
  DhcpOptionsId: String!
  VpcId: String!
  DryRun: Boolean
}

input AwsEC2AssociateIamInstanceProfileInput {
  IamInstanceProfile: AwsEC2S1yInput!
  InstanceId: String!
}

type AwsEC2AssociateIamInstanceProfileOutput {
  IamInstanceProfileAssociation: AwsEC2S20
}

input AwsEC2AssociateRouteTableInput {
  DryRun: Boolean
  RouteTableId: String!
  SubnetId: String!
}

type AwsEC2AssociateRouteTableOutput {
  AssociationId: String
}

input AwsEC2AssociateSubnetCidrBlockInput {
  Ipv6CidrBlock: String!
  SubnetId: String!
}

type AwsEC2AssociateSubnetCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEC2S27
  SubnetId: String
}

input AwsEC2AssociateTransitGatewayRouteTableInput {
  TransitGatewayRouteTableId: String!
  TransitGatewayAttachmentId: String!
  DryRun: Boolean
}

type AwsEC2AssociateTransitGatewayRouteTableOutput {
  Association: AwsEC2S2c
}

input AwsEC2AssociateVpcCidrBlockInput {
  AmazonProvidedIpv6CidrBlock: Boolean
  CidrBlock: String
  VpcId: String!
}

type AwsEC2AssociateVpcCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEC2S2h
  CidrBlockAssociation: AwsEC2S2k
  VpcId: String
}

input AwsEC2AttachClassicLinkVpcInput {
  DryRun: Boolean
  Groups: [String]!
  InstanceId: String!
  VpcId: String!
}

type AwsEC2AttachClassicLinkVpcOutput {
  Return: Boolean
}

input AwsEC2AttachInternetGatewayInput {
  DryRun: Boolean
  InternetGatewayId: String!
  VpcId: String!
}

input AwsEC2AttachNetworkInterfaceInput {
  DeviceIndex: Int!
  DryRun: Boolean
  InstanceId: String!
  NetworkInterfaceId: String!
}

type AwsEC2AttachNetworkInterfaceOutput {
  AttachmentId: String
}

input AwsEC2AttachVolumeInput {
  Device: String!
  InstanceId: String!
  VolumeId: String!
  DryRun: Boolean
}

input AwsEC2AttachVpnGatewayInput {
  VpcId: String!
  VpnGatewayId: String!
  DryRun: Boolean
}

type AwsEC2AttachVpnGatewayOutput {
  VpcAttachment: AwsEC2S2w
}

input AwsEC2AuthorizeClientVpnIngressInput {
  ClientVpnEndpointId: String!
  TargetNetworkCidr: String!
  AccessGroupId: String
  AuthorizeAllGroups: Boolean
  Description: String
  ClientToken: String
  DryRun: Boolean
}

type AwsEC2AuthorizeClientVpnIngressOutput {
  Status: AwsEC2S30
}

input AwsEC2AuthorizeSecurityGroupEgressInput {
  DryRun: Boolean
  GroupId: String!
  IpPermissions: [AwsEC2S33Input]
  CidrIp: String
  FromPort: Int
  IpProtocol: String
  ToPort: Int
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
}

input AwsEC2AuthorizeSecurityGroupIngressInput {
  CidrIp: String
  FromPort: Int
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEC2S33Input]
  IpProtocol: String
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
  ToPort: Int
  DryRun: Boolean
}

input AwsEC2BundleInstanceInput {
  InstanceId: String!
  Storage: AwsEC2S3fInput!
  DryRun: Boolean
}

type AwsEC2BundleInstanceOutput {
  BundleTask: AwsEC2S3j
}

input AwsEC2CancelBundleTaskInput {
  BundleId: String!
  DryRun: Boolean
}

type AwsEC2CancelBundleTaskOutput {
  BundleTask: AwsEC2S3j
}

input AwsEC2CancelCapacityReservationInput {
  CapacityReservationId: String!
  DryRun: Boolean
}

type AwsEC2CancelCapacityReservationOutput {
  Return: Boolean
}

input AwsEC2CancelConversionTaskInput {
  ConversionTaskId: String!
  DryRun: Boolean
  ReasonMessage: String
}

input AwsEC2CancelExportTaskInput {
  ExportTaskId: String!
}

input AwsEC2CancelImportTaskInput {
  CancelReason: String
  DryRun: Boolean
  ImportTaskId: String
}

type AwsEC2CancelImportTaskOutput {
  ImportTaskId: String
  PreviousState: String
  State: String
}

input AwsEC2CancelReservedInstancesListingInput {
  ReservedInstancesListingId: String!
}

type AwsEC2CancelReservedInstancesListingOutput {
  ReservedInstancesListings: [AwsEC2S3w]
}

input AwsEC2CancelSpotFleetRequestsInput {
  DryRun: Boolean
  SpotFleetRequestIds: [String]!
  TerminateInstances: Boolean!
}

type AwsEC2CancelSpotFleetRequestsOutput {
  SuccessfulFleetRequests: [AwsEC2CancelSpotFleetRequestsOutputSuccessfulFleetRequests]
  UnsuccessfulFleetRequests: [AwsEC2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequests]
}

type AwsEC2CancelSpotFleetRequestsOutputSuccessfulFleetRequests {
  CurrentSpotFleetRequestState: String
  PreviousSpotFleetRequestState: String
  SpotFleetRequestId: String
}

type AwsEC2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequests {
  Error: AwsEC2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequestsError
  SpotFleetRequestId: String
}

type AwsEC2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequestsError {
  Code: String
  Message: String
}

input AwsEC2CancelSpotInstanceRequestsInput {
  DryRun: Boolean
  SpotInstanceRequestIds: [String]!
}

type AwsEC2CancelSpotInstanceRequestsOutput {
  CancelledSpotInstanceRequests: [AwsEC2CancelSpotInstanceRequestsOutputCancelledSpotInstanceRequests]
}

type AwsEC2CancelSpotInstanceRequestsOutputCancelledSpotInstanceRequests {
  SpotInstanceRequestId: String
  State: String
}

input AwsEC2ConfirmProductInstanceInput {
  InstanceId: String!
  ProductCode: String!
  DryRun: Boolean
}

type AwsEC2ConfirmProductInstanceOutput {
  OwnerId: String
  Return: Boolean
}

input AwsEC2CopyFpgaImageInput {
  DryRun: Boolean
  SourceFpgaImageId: String!
  Description: String
  Name: String
  SourceRegion: String!
  ClientToken: String
}

type AwsEC2CopyFpgaImageOutput {
  FpgaImageId: String
}

input AwsEC2CopyImageInput {
  ClientToken: String
  Description: String
  Encrypted: Boolean
  KmsKeyId: String
  Name: String!
  SourceImageId: String!
  SourceRegion: String!
  DryRun: Boolean
}

type AwsEC2CopyImageOutput {
  ImageId: String
}

input AwsEC2CopySnapshotInput {
  Description: String
  DestinationRegion: String
  Encrypted: Boolean
  KmsKeyId: String
  PresignedUrl: String
  SourceRegion: String!
  SourceSnapshotId: String!
  DryRun: Boolean
}

type AwsEC2CopySnapshotOutput {
  SnapshotId: String
}

input AwsEC2CreateCapacityReservationInput {
  ClientToken: String
  InstanceType: String!
  InstancePlatform: String!
  AvailabilityZone: String!
  Tenancy: String
  InstanceCount: Int!
  EbsOptimized: Boolean
  EphemeralStorage: Boolean
  EndDate: Date
  EndDateType: String
  InstanceMatchCriteria: String
  TagSpecifications: [AwsEC2S19Input]
  DryRun: Boolean
}

type AwsEC2CreateCapacityReservationOutput {
  CapacityReservation: AwsEC2S50
}

input AwsEC2CreateClientVpnEndpointAuthenticationOptionsActiveDirectoryInput {
  DirectoryId: String
}

input AwsEC2CreateClientVpnEndpointAuthenticationOptionsInput {
  Type: String
  ActiveDirectory: AwsEC2CreateClientVpnEndpointAuthenticationOptionsActiveDirectoryInput
  MutualAuthentication: AwsEC2CreateClientVpnEndpointAuthenticationOptionsMutualAuthenticationInput
}

input AwsEC2CreateClientVpnEndpointAuthenticationOptionsMutualAuthenticationInput {
  ClientRootCertificateChainArn: String
}

input AwsEC2CreateClientVpnEndpointInput {
  ClientCidrBlock: String!
  ServerCertificateArn: String!
  AuthenticationOptions: [AwsEC2CreateClientVpnEndpointAuthenticationOptionsInput]!
  ConnectionLogOptions: AwsEC2S58Input!
  DnsServers: [String]
  TransportProtocol: String
  Description: String
  DryRun: Boolean
  ClientToken: String
  TagSpecifications: [AwsEC2S19Input]
}

type AwsEC2CreateClientVpnEndpointOutput {
  ClientVpnEndpointId: String
  Status: AwsEC2S5b
  DnsName: String
}

input AwsEC2CreateClientVpnRouteInput {
  ClientVpnEndpointId: String!
  DestinationCidrBlock: String!
  TargetVpcSubnetId: String!
  Description: String
  ClientToken: String
  DryRun: Boolean
}

type AwsEC2CreateClientVpnRouteOutput {
  Status: AwsEC2S5f
}

input AwsEC2CreateCustomerGatewayInput {
  BgpAsn: Int!
  PublicIp: String!
  Type: String!
  DryRun: Boolean
}

type AwsEC2CreateCustomerGatewayOutput {
  CustomerGateway: AwsEC2S5k
}

input AwsEC2CreateDefaultSubnetInput {
  AvailabilityZone: String!
  DryRun: Boolean
}

type AwsEC2CreateDefaultSubnetOutput {
  Subnet: AwsEC2S5n
}

input AwsEC2CreateDefaultVpcInput {
  DryRun: Boolean
}

type AwsEC2CreateDefaultVpcOutput {
  Vpc: AwsEC2S5s
}

input AwsEC2CreateDhcpOptionsDhcpConfigurationsInput {
  Key: String
  Values: [String]
}

input AwsEC2CreateDhcpOptionsInput {
  DhcpConfigurations: [AwsEC2CreateDhcpOptionsDhcpConfigurationsInput]!
  DryRun: Boolean
}

type AwsEC2CreateDhcpOptionsOutput {
  DhcpOptions: AwsEC2S61
}

input AwsEC2CreateEgressOnlyInternetGatewayInput {
  ClientToken: String
  DryRun: Boolean
  VpcId: String!
}

type AwsEC2CreateEgressOnlyInternetGatewayOutput {
  ClientToken: String
  EgressOnlyInternetGateway: AwsEC2S68
}

input AwsEC2CreateFleetInput {
  DryRun: Boolean
  ClientToken: String
  SpotOptions: AwsEC2CreateFleetSpotOptionsInput
  OnDemandOptions: AwsEC2CreateFleetOnDemandOptionsInput
  ExcessCapacityTerminationPolicy: String
  LaunchTemplateConfigs: [AwsEC2CreateFleetLaunchTemplateConfigsInput]!
  TargetCapacitySpecification: AwsEC2S6rInput!
  TerminateInstancesWithExpiration: Boolean
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  ReplaceUnhealthyInstances: Boolean
  TagSpecifications: [AwsEC2S19Input]
}

input AwsEC2CreateFleetLaunchTemplateConfigsInput {
  LaunchTemplateSpecification: AwsEC2CreateFleetLaunchTemplateConfigsLaunchTemplateSpecificationInput
  Overrides: [AwsEC2CreateFleetLaunchTemplateConfigsOverridesInput]
}

input AwsEC2CreateFleetLaunchTemplateConfigsLaunchTemplateSpecificationInput {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsEC2CreateFleetLaunchTemplateConfigsOverridesInput {
  InstanceType: String
  MaxPrice: String
  SubnetId: String
  AvailabilityZone: String
  WeightedCapacity: JSON
  Priority: JSON
  Placement: AwsEC2S6qInput
}

input AwsEC2CreateFleetOnDemandOptionsInput {
  AllocationStrategy: String
  SingleInstanceType: Boolean
  SingleAvailabilityZone: Boolean
  MinTargetCapacity: Int
  MaxTotalPrice: String
}

type AwsEC2CreateFleetOutput {
  FleetId: String
  Errors: [AwsEC2CreateFleetOutputErrors]
  Instances: [AwsEC2CreateFleetOutputInstances]
}

type AwsEC2CreateFleetOutputErrors {
  LaunchTemplateAndOverrides: AwsEC2S6y
  Lifecycle: String
  ErrorCode: String
  ErrorMessage: String
}

type AwsEC2CreateFleetOutputInstances {
  LaunchTemplateAndOverrides: AwsEC2S6y
  Lifecycle: String
  InstanceIds: [String]
  InstanceType: String
  Platform: String
}

input AwsEC2CreateFleetSpotOptionsInput {
  AllocationStrategy: String
  InstanceInterruptionBehavior: String
  InstancePoolsToUseCount: Int
  SingleInstanceType: Boolean
  SingleAvailabilityZone: Boolean
  MinTargetCapacity: Int
  MaxTotalPrice: String
}

input AwsEC2CreateFlowLogsInput {
  DryRun: Boolean
  ClientToken: String
  DeliverLogsPermissionArn: String
  LogGroupName: String
  ResourceIds: [String]!
  ResourceType: String!
  TrafficType: String!
  LogDestinationType: String
  LogDestination: String
}

type AwsEC2CreateFlowLogsOutput {
  ClientToken: String
  FlowLogIds: [String]
  Unsuccessful: [AwsEC2Sn]
}

input AwsEC2CreateFpgaImageInput {
  DryRun: Boolean
  InputStorageLocation: AwsEC2S7eInput!
  LogsStorageLocation: AwsEC2S7eInput
  Description: String
  Name: String
  ClientToken: String
}

type AwsEC2CreateFpgaImageOutput {
  FpgaImageId: String
  FpgaImageGlobalId: String
}

input AwsEC2CreateImageInput {
  BlockDeviceMappings: [AwsEC2S7iInput]
  Description: String
  DryRun: Boolean
  InstanceId: String!
  Name: String!
  NoReboot: Boolean
}

type AwsEC2CreateImageOutput {
  ImageId: String
}

input AwsEC2CreateInstanceExportTaskExportToS3TaskInput {
  ContainerFormat: String
  DiskImageFormat: String
  S3Bucket: String
  S3Prefix: String
}

input AwsEC2CreateInstanceExportTaskInput {
  Description: String
  ExportToS3Task: AwsEC2CreateInstanceExportTaskExportToS3TaskInput
  InstanceId: String!
  TargetEnvironment: String
}

type AwsEC2CreateInstanceExportTaskOutput {
  ExportTask: AwsEC2S7s
}

input AwsEC2CreateInternetGatewayInput {
  DryRun: Boolean
}

type AwsEC2CreateInternetGatewayOutput {
  InternetGateway: AwsEC2S7y
}

input AwsEC2CreateKeyPairInput {
  KeyName: String!
  DryRun: Boolean
}

type AwsEC2CreateKeyPairOutput {
  KeyFingerprint: String
  KeyMaterial: String
  KeyName: String
}

input AwsEC2CreateLaunchTemplateInput {
  DryRun: Boolean
  ClientToken: String
  LaunchTemplateName: String!
  VersionDescription: String
  LaunchTemplateData: AwsEC2S83Input!
}

type AwsEC2CreateLaunchTemplateOutput {
  LaunchTemplate: AwsEC2S93
}

input AwsEC2CreateLaunchTemplateVersionInput {
  DryRun: Boolean
  ClientToken: String
  LaunchTemplateId: String
  LaunchTemplateName: String
  SourceVersion: String
  VersionDescription: String
  LaunchTemplateData: AwsEC2S83Input!
}

type AwsEC2CreateLaunchTemplateVersionOutput {
  LaunchTemplateVersion: AwsEC2S96
}

input AwsEC2CreateNatGatewayInput {
  AllocationId: String!
  ClientToken: String
  SubnetId: String!
}

type AwsEC2CreateNatGatewayOutput {
  ClientToken: String
  NatGateway: AwsEC2S9z
}

input AwsEC2CreateNetworkAclEntryInput {
  CidrBlock: String
  DryRun: Boolean
  Egress: Boolean!
  IcmpTypeCode: AwsEC2SabInput
  Ipv6CidrBlock: String
  NetworkAclId: String!
  PortRange: AwsEC2SacInput
  Protocol: String!
  RuleAction: String!
  RuleNumber: Int!
}

input AwsEC2CreateNetworkAclInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEC2CreateNetworkAclOutput {
  NetworkAcl: AwsEC2Sa6
}

input AwsEC2CreateNetworkInterfaceInput {
  Description: String
  DryRun: Boolean
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S9eInput]
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S8dInput]
  SecondaryPrivateIpAddressCount: Int
  InterfaceType: String
  SubnetId: String!
}

type AwsEC2CreateNetworkInterfaceOutput {
  NetworkInterface: AwsEC2Sai
}

input AwsEC2CreateNetworkInterfacePermissionInput {
  NetworkInterfaceId: String!
  AwsAccountId: String
  AwsService: String
  Permission: String!
  DryRun: Boolean
}

type AwsEC2CreateNetworkInterfacePermissionOutput {
  InterfacePermission: AwsEC2Saw
}

input AwsEC2CreatePlacementGroupInput {
  DryRun: Boolean
  GroupName: String
  Strategy: String
  PartitionCount: Int
}

input AwsEC2CreateReservedInstancesListingInput {
  ClientToken: String!
  InstanceCount: Int!
  PriceSchedules: [AwsEC2CreateReservedInstancesListingPriceSchedulesInput]!
  ReservedInstancesId: String!
}

type AwsEC2CreateReservedInstancesListingOutput {
  ReservedInstancesListings: [AwsEC2S3w]
}

input AwsEC2CreateReservedInstancesListingPriceSchedulesInput {
  CurrencyCode: String
  Price: JSON
  Term: JSON
}

input AwsEC2CreateRouteInput {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DryRun: Boolean
  EgressOnlyInternetGatewayId: String
  GatewayId: String
  InstanceId: String
  NatGatewayId: String
  TransitGatewayId: String
  NetworkInterfaceId: String
  RouteTableId: String!
  VpcPeeringConnectionId: String
}

type AwsEC2CreateRouteOutput {
  Return: Boolean
}

input AwsEC2CreateRouteTableInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEC2CreateRouteTableOutput {
  RouteTable: AwsEC2Sb9
}

input AwsEC2CreateSecurityGroupInput {
  Description: String!
  GroupName: String!
  VpcId: String
  DryRun: Boolean
}

type AwsEC2CreateSecurityGroupOutput {
  GroupId: String
}

input AwsEC2CreateSnapshotInput {
  Description: String
  VolumeId: String!
  TagSpecifications: [AwsEC2S19Input]
  DryRun: Boolean
}

input AwsEC2CreateSnapshotsInput {
  Description: String
  InstanceSpecification: AwsEC2CreateSnapshotsInstanceSpecificationInput!
  TagSpecifications: [AwsEC2S19Input]
  DryRun: Boolean
  CopyTagsFromSource: String
}

input AwsEC2CreateSnapshotsInstanceSpecificationInput {
  InstanceId: String
  ExcludeBootVolume: Boolean
}

type AwsEC2CreateSnapshotsOutput {
  Snapshots: [AwsEC2CreateSnapshotsOutputSnapshots]
}

type AwsEC2CreateSnapshotsOutputSnapshots {
  Description: String
  Tags: [AwsEC2Si]
  Encrypted: Boolean
  VolumeId: String
  State: String
  VolumeSize: Int
  StartTime: Date
  Progress: String
  OwnerId: String
  SnapshotId: String
}

input AwsEC2CreateSpotDatafeedSubscriptionInput {
  Bucket: String!
  DryRun: Boolean
  Prefix: String
}

type AwsEC2CreateSpotDatafeedSubscriptionOutput {
  SpotDatafeedSubscription: AwsEC2Sbw
}

input AwsEC2CreateSubnetInput {
  AvailabilityZone: String
  AvailabilityZoneId: String
  CidrBlock: String!
  Ipv6CidrBlock: String
  VpcId: String!
  DryRun: Boolean
}

type AwsEC2CreateSubnetOutput {
  Subnet: AwsEC2S5n
}

input AwsEC2CreateTagsInput {
  DryRun: Boolean
  Resources: [String]!
  Tags: [AwsEC2SiInput]!
}

input AwsEC2CreateTrafficMirrorFilterInput {
  Description: String
  TagSpecifications: [AwsEC2S19Input]
  DryRun: Boolean
  ClientToken: String
}

type AwsEC2CreateTrafficMirrorFilterOutput {
  TrafficMirrorFilter: AwsEC2Sc5
  ClientToken: String
}

input AwsEC2CreateTrafficMirrorFilterRuleInput {
  TrafficMirrorFilterId: String!
  TrafficDirection: String!
  RuleNumber: Int!
  RuleAction: String!
  DestinationPortRange: AwsEC2SceInput
  SourcePortRange: AwsEC2SceInput
  Protocol: Int
  DestinationCidrBlock: String!
  SourceCidrBlock: String!
  Description: String
  DryRun: Boolean
  ClientToken: String
}

type AwsEC2CreateTrafficMirrorFilterRuleOutput {
  TrafficMirrorFilterRule: AwsEC2Sc7
  ClientToken: String
}

input AwsEC2CreateTrafficMirrorSessionInput {
  NetworkInterfaceId: String!
  TrafficMirrorTargetId: String!
  TrafficMirrorFilterId: String!
  PacketLength: Int
  SessionNumber: Int!
  VirtualNetworkId: Int
  Description: String
  TagSpecifications: [AwsEC2S19Input]
  DryRun: Boolean
  ClientToken: String
}

type AwsEC2CreateTrafficMirrorSessionOutput {
  TrafficMirrorSession: AwsEC2Sci
  ClientToken: String
}

input AwsEC2CreateTrafficMirrorTargetInput {
  NetworkInterfaceId: String
  NetworkLoadBalancerArn: String
  Description: String
  TagSpecifications: [AwsEC2S19Input]
  DryRun: Boolean
  ClientToken: String
}

type AwsEC2CreateTrafficMirrorTargetOutput {
  TrafficMirrorTarget: AwsEC2Scl
  ClientToken: String
}

input AwsEC2CreateTransitGatewayInput {
  Description: String
  Options: AwsEC2CreateTransitGatewayOptionsInput
  TagSpecifications: [AwsEC2S19Input]
  DryRun: Boolean
}

input AwsEC2CreateTransitGatewayOptionsInput {
  AmazonSideAsn: JSON
  AutoAcceptSharedAttachments: String
  DefaultRouteTableAssociation: String
  DefaultRouteTablePropagation: String
  VpnEcmpSupport: String
  DnsSupport: String
}

type AwsEC2CreateTransitGatewayOutput {
  TransitGateway: AwsEC2Scu
}

input AwsEC2CreateTransitGatewayRouteInput {
  DestinationCidrBlock: String!
  TransitGatewayRouteTableId: String!
  TransitGatewayAttachmentId: String
  Blackhole: Boolean
  DryRun: Boolean
}

type AwsEC2CreateTransitGatewayRouteOutput {
  Route: AwsEC2Scz
}

input AwsEC2CreateTransitGatewayRouteTableInput {
  TransitGatewayId: String!
  TagSpecifications: [AwsEC2S19Input]
  DryRun: Boolean
}

type AwsEC2CreateTransitGatewayRouteTableOutput {
  TransitGatewayRouteTable: AwsEC2Sd6
}

input AwsEC2CreateTransitGatewayVpcAttachmentInput {
  TransitGatewayId: String!
  VpcId: String!
  SubnetIds: [String]!
  Options: AwsEC2CreateTransitGatewayVpcAttachmentOptionsInput
  TagSpecifications: [AwsEC2S19Input]
  DryRun: Boolean
}

input AwsEC2CreateTransitGatewayVpcAttachmentOptionsInput {
  DnsSupport: String
  Ipv6Support: String
}

type AwsEC2CreateTransitGatewayVpcAttachmentOutput {
  TransitGatewayVpcAttachment: AwsEC2Sb
}

input AwsEC2CreateVolumeInput {
  AvailabilityZone: String!
  Encrypted: Boolean
  Iops: Int
  KmsKeyId: String
  Size: Int
  SnapshotId: String
  VolumeType: String
  DryRun: Boolean
  TagSpecifications: [AwsEC2S19Input]
}

input AwsEC2CreateVpcEndpointConnectionNotificationInput {
  DryRun: Boolean
  ServiceId: String
  VpcEndpointId: String
  ConnectionNotificationArn: String!
  ConnectionEvents: [String]!
  ClientToken: String
}

type AwsEC2CreateVpcEndpointConnectionNotificationOutput {
  ConnectionNotification: AwsEC2Sds
  ClientToken: String
}

input AwsEC2CreateVpcEndpointInput {
  DryRun: Boolean
  VpcEndpointType: String
  VpcId: String!
  ServiceName: String!
  PolicyDocument: String
  RouteTableIds: [String]
  SubnetIds: [String]
  SecurityGroupIds: [String]
  ClientToken: String
  PrivateDnsEnabled: Boolean
}

type AwsEC2CreateVpcEndpointOutput {
  VpcEndpoint: AwsEC2Sdk
  ClientToken: String
}

input AwsEC2CreateVpcEndpointServiceConfigurationInput {
  DryRun: Boolean
  AcceptanceRequired: Boolean
  NetworkLoadBalancerArns: [String]!
  ClientToken: String
}

type AwsEC2CreateVpcEndpointServiceConfigurationOutput {
  ServiceConfiguration: AwsEC2Sdx
  ClientToken: String
}

input AwsEC2CreateVpcInput {
  CidrBlock: String!
  AmazonProvidedIpv6CidrBlock: Boolean
  DryRun: Boolean
  InstanceTenancy: String
}

type AwsEC2CreateVpcOutput {
  Vpc: AwsEC2S5s
}

input AwsEC2CreateVpcPeeringConnectionInput {
  DryRun: Boolean
  PeerOwnerId: String
  PeerVpcId: String
  VpcId: String
  PeerRegion: String
}

type AwsEC2CreateVpcPeeringConnectionOutput {
  VpcPeeringConnection: AwsEC2Sr
}

input AwsEC2CreateVpnConnectionInput {
  CustomerGatewayId: String!
  Type: String!
  VpnGatewayId: String
  TransitGatewayId: String
  DryRun: Boolean
  Options: AwsEC2CreateVpnConnectionOptionsInput
}

input AwsEC2CreateVpnConnectionOptionsInput {
  StaticRoutesOnly: Boolean
  TunnelOptions: [AwsEC2CreateVpnConnectionOptionsTunnelOptionsInput]
}

input AwsEC2CreateVpnConnectionOptionsTunnelOptionsInput {
  TunnelInsideCidr: String
  PreSharedKey: String
}

type AwsEC2CreateVpnConnectionOutput {
  VpnConnection: AwsEC2Se9
}

input AwsEC2CreateVpnConnectionRouteInput {
  DestinationCidrBlock: String!
  VpnConnectionId: String!
}

input AwsEC2CreateVpnGatewayInput {
  AvailabilityZone: String
  Type: String!
  AmazonSideAsn: JSON
  DryRun: Boolean
}

type AwsEC2CreateVpnGatewayOutput {
  VpnGateway: AwsEC2Sel
}

input AwsEC2DeleteClientVpnEndpointInput {
  ClientVpnEndpointId: String!
  DryRun: Boolean
}

type AwsEC2DeleteClientVpnEndpointOutput {
  Status: AwsEC2S5b
}

input AwsEC2DeleteClientVpnRouteInput {
  ClientVpnEndpointId: String!
  TargetVpcSubnetId: String
  DestinationCidrBlock: String!
  DryRun: Boolean
}

type AwsEC2DeleteClientVpnRouteOutput {
  Status: AwsEC2S5f
}

input AwsEC2DeleteCustomerGatewayInput {
  CustomerGatewayId: String!
  DryRun: Boolean
}

input AwsEC2DeleteDhcpOptionsInput {
  DhcpOptionsId: String!
  DryRun: Boolean
}

input AwsEC2DeleteEgressOnlyInternetGatewayInput {
  DryRun: Boolean
  EgressOnlyInternetGatewayId: String!
}

type AwsEC2DeleteEgressOnlyInternetGatewayOutput {
  ReturnCode: Boolean
}

input AwsEC2DeleteFleetsInput {
  DryRun: Boolean
  FleetIds: [String]!
  TerminateInstances: Boolean!
}

type AwsEC2DeleteFleetsOutput {
  SuccessfulFleetDeletions: [AwsEC2DeleteFleetsOutputSuccessfulFleetDeletions]
  UnsuccessfulFleetDeletions: [AwsEC2DeleteFleetsOutputUnsuccessfulFleetDeletions]
}

type AwsEC2DeleteFleetsOutputSuccessfulFleetDeletions {
  CurrentFleetState: String
  PreviousFleetState: String
  FleetId: String
}

type AwsEC2DeleteFleetsOutputUnsuccessfulFleetDeletions {
  Error: AwsEC2DeleteFleetsOutputUnsuccessfulFleetDeletionsError
  FleetId: String
}

type AwsEC2DeleteFleetsOutputUnsuccessfulFleetDeletionsError {
  Code: String
  Message: String
}

input AwsEC2DeleteFlowLogsInput {
  DryRun: Boolean
  FlowLogIds: [String]!
}

type AwsEC2DeleteFlowLogsOutput {
  Unsuccessful: [AwsEC2Sn]
}

input AwsEC2DeleteFpgaImageInput {
  DryRun: Boolean
  FpgaImageId: String!
}

type AwsEC2DeleteFpgaImageOutput {
  Return: Boolean
}

input AwsEC2DeleteInternetGatewayInput {
  DryRun: Boolean
  InternetGatewayId: String!
}

input AwsEC2DeleteKeyPairInput {
  KeyName: String!
  DryRun: Boolean
}

input AwsEC2DeleteLaunchTemplateInput {
  DryRun: Boolean
  LaunchTemplateId: String
  LaunchTemplateName: String
}

type AwsEC2DeleteLaunchTemplateOutput {
  LaunchTemplate: AwsEC2S93
}

input AwsEC2DeleteLaunchTemplateVersionsInput {
  DryRun: Boolean
  LaunchTemplateId: String
  LaunchTemplateName: String
  Versions: [String]!
}

type AwsEC2DeleteLaunchTemplateVersionsOutput {
  SuccessfullyDeletedLaunchTemplateVersions: [AwsEC2DeleteLaunchTemplateVersionsOutputSuccessfullyDeletedLaunchTemplateVersions]
  UnsuccessfullyDeletedLaunchTemplateVersions: [AwsEC2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersions]
}

type AwsEC2DeleteLaunchTemplateVersionsOutputSuccessfullyDeletedLaunchTemplateVersions {
  LaunchTemplateId: String
  LaunchTemplateName: String
  VersionNumber: JSON
}

type AwsEC2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersions {
  LaunchTemplateId: String
  LaunchTemplateName: String
  VersionNumber: JSON
  ResponseError: AwsEC2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersionsResponseError
}

type AwsEC2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersionsResponseError {
  Code: String
  Message: String
}

input AwsEC2DeleteNatGatewayInput {
  NatGatewayId: String!
}

type AwsEC2DeleteNatGatewayOutput {
  NatGatewayId: String
}

input AwsEC2DeleteNetworkAclEntryInput {
  DryRun: Boolean
  Egress: Boolean!
  NetworkAclId: String!
  RuleNumber: Int!
}

input AwsEC2DeleteNetworkAclInput {
  DryRun: Boolean
  NetworkAclId: String!
}

input AwsEC2DeleteNetworkInterfaceInput {
  DryRun: Boolean
  NetworkInterfaceId: String!
}

input AwsEC2DeleteNetworkInterfacePermissionInput {
  NetworkInterfacePermissionId: String!
  Force: Boolean
  DryRun: Boolean
}

type AwsEC2DeleteNetworkInterfacePermissionOutput {
  Return: Boolean
}

input AwsEC2DeletePlacementGroupInput {
  DryRun: Boolean
  GroupName: String!
}

input AwsEC2DeleteRouteInput {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DryRun: Boolean
  RouteTableId: String!
}

input AwsEC2DeleteRouteTableInput {
  DryRun: Boolean
  RouteTableId: String!
}

input AwsEC2DeleteSecurityGroupInput {
  GroupId: String
  GroupName: String
  DryRun: Boolean
}

input AwsEC2DeleteSnapshotInput {
  SnapshotId: String!
  DryRun: Boolean
}

input AwsEC2DeleteSpotDatafeedSubscriptionInput {
  DryRun: Boolean
}

input AwsEC2DeleteSubnetInput {
  SubnetId: String!
  DryRun: Boolean
}

input AwsEC2DeleteTagsInput {
  DryRun: Boolean
  Resources: [String]!
  Tags: [AwsEC2SiInput]
}

input AwsEC2DeleteTrafficMirrorFilterInput {
  TrafficMirrorFilterId: String!
  DryRun: Boolean
}

type AwsEC2DeleteTrafficMirrorFilterOutput {
  TrafficMirrorFilterId: String
}

input AwsEC2DeleteTrafficMirrorFilterRuleInput {
  TrafficMirrorFilterRuleId: String!
  DryRun: Boolean
}

type AwsEC2DeleteTrafficMirrorFilterRuleOutput {
  TrafficMirrorFilterRuleId: String
}

input AwsEC2DeleteTrafficMirrorSessionInput {
  TrafficMirrorSessionId: String!
  DryRun: Boolean
}

type AwsEC2DeleteTrafficMirrorSessionOutput {
  TrafficMirrorSessionId: String
}

input AwsEC2DeleteTrafficMirrorTargetInput {
  TrafficMirrorTargetId: String!
  DryRun: Boolean
}

type AwsEC2DeleteTrafficMirrorTargetOutput {
  TrafficMirrorTargetId: String
}

input AwsEC2DeleteTransitGatewayInput {
  TransitGatewayId: String!
  DryRun: Boolean
}

type AwsEC2DeleteTransitGatewayOutput {
  TransitGateway: AwsEC2Scu
}

input AwsEC2DeleteTransitGatewayRouteInput {
  TransitGatewayRouteTableId: String!
  DestinationCidrBlock: String!
  DryRun: Boolean
}

type AwsEC2DeleteTransitGatewayRouteOutput {
  Route: AwsEC2Scz
}

input AwsEC2DeleteTransitGatewayRouteTableInput {
  TransitGatewayRouteTableId: String!
  DryRun: Boolean
}

type AwsEC2DeleteTransitGatewayRouteTableOutput {
  TransitGatewayRouteTable: AwsEC2Sd6
}

input AwsEC2DeleteTransitGatewayVpcAttachmentInput {
  TransitGatewayAttachmentId: String!
  DryRun: Boolean
}

type AwsEC2DeleteTransitGatewayVpcAttachmentOutput {
  TransitGatewayVpcAttachment: AwsEC2Sb
}

input AwsEC2DeleteVolumeInput {
  VolumeId: String!
  DryRun: Boolean
}

input AwsEC2DeleteVpcEndpointConnectionNotificationsInput {
  DryRun: Boolean
  ConnectionNotificationIds: [String]!
}

type AwsEC2DeleteVpcEndpointConnectionNotificationsOutput {
  Unsuccessful: [AwsEC2Sn]
}

input AwsEC2DeleteVpcEndpointServiceConfigurationsInput {
  DryRun: Boolean
  ServiceIds: [String]!
}

type AwsEC2DeleteVpcEndpointServiceConfigurationsOutput {
  Unsuccessful: [AwsEC2Sn]
}

input AwsEC2DeleteVpcEndpointsInput {
  DryRun: Boolean
  VpcEndpointIds: [String]!
}

type AwsEC2DeleteVpcEndpointsOutput {
  Unsuccessful: [AwsEC2Sn]
}

input AwsEC2DeleteVpcInput {
  VpcId: String!
  DryRun: Boolean
}

input AwsEC2DeleteVpcPeeringConnectionInput {
  DryRun: Boolean
  VpcPeeringConnectionId: String!
}

type AwsEC2DeleteVpcPeeringConnectionOutput {
  Return: Boolean
}

input AwsEC2DeleteVpnConnectionInput {
  VpnConnectionId: String!
  DryRun: Boolean
}

input AwsEC2DeleteVpnConnectionRouteInput {
  DestinationCidrBlock: String!
  VpnConnectionId: String!
}

input AwsEC2DeleteVpnGatewayInput {
  VpnGatewayId: String!
  DryRun: Boolean
}

input AwsEC2DeprovisionByoipCidrInput {
  Cidr: String!
  DryRun: Boolean
}

type AwsEC2DeprovisionByoipCidrOutput {
  ByoipCidr: AwsEC2S12
}

input AwsEC2DeregisterImageInput {
  ImageId: String!
  DryRun: Boolean
}

input AwsEC2DescribeAccountAttributesInput {
  AttributeNames: [String]
  DryRun: Boolean
}

type AwsEC2DescribeAccountAttributesOutput {
  AccountAttributes: [AwsEC2DescribeAccountAttributesOutputAccountAttributes]
}

type AwsEC2DescribeAccountAttributesOutputAccountAttributes {
  AttributeName: String
  AttributeValues: [AwsEC2DescribeAccountAttributesOutputAccountAttributesAttributeValues]
}

type AwsEC2DescribeAccountAttributesOutputAccountAttributesAttributeValues {
  AttributeValue: String
}

input AwsEC2DescribeAddressesInput {
  Filters: [AwsEC2Sh6Input]
  PublicIps: [String]
  AllocationIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeAddressesOutput {
  Addresses: [AwsEC2DescribeAddressesOutputAddresses]
}

type AwsEC2DescribeAddressesOutputAddresses {
  InstanceId: String
  PublicIp: String
  AllocationId: String
  AssociationId: String
  Domain: String
  NetworkInterfaceId: String
  NetworkInterfaceOwnerId: String
  PrivateIpAddress: String
  Tags: [AwsEC2Si]
  PublicIpv4Pool: String
}

input AwsEC2DescribeAggregateIdFormatInput {
  DryRun: Boolean
}

type AwsEC2DescribeAggregateIdFormatOutput {
  UseLongIdsAggregated: Boolean
  Statuses: [AwsEC2Shf]
}

input AwsEC2DescribeAvailabilityZonesInput {
  Filters: [AwsEC2Sh6Input]
  ZoneNames: [String]
  ZoneIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeAvailabilityZonesOutput {
  AvailabilityZones: [AwsEC2DescribeAvailabilityZonesOutputAvailabilityZones]
}

type AwsEC2DescribeAvailabilityZonesOutputAvailabilityZones {
  State: String
  Messages: [AwsEC2DescribeAvailabilityZonesOutputAvailabilityZonesMessages]
  RegionName: String
  ZoneName: String
  ZoneId: String
}

type AwsEC2DescribeAvailabilityZonesOutputAvailabilityZonesMessages {
  Message: String
}

input AwsEC2DescribeBundleTasksInput {
  BundleIds: [String]
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
}

type AwsEC2DescribeBundleTasksOutput {
  BundleTasks: [AwsEC2S3j]
}

input AwsEC2DescribeByoipCidrsInput {
  DryRun: Boolean
  MaxResults: Int!
  NextToken: String
}

type AwsEC2DescribeByoipCidrsOutput {
  ByoipCidrs: [AwsEC2S12]
  NextToken: String
}

input AwsEC2DescribeCapacityReservationsInput {
  CapacityReservationIds: [String]
  NextToken: String
  MaxResults: Int
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
}

type AwsEC2DescribeCapacityReservationsOutput {
  NextToken: String
  CapacityReservations: [AwsEC2S50]
}

input AwsEC2DescribeClassicLinkInstancesInput {
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  InstanceIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeClassicLinkInstancesOutput {
  Instances: [AwsEC2DescribeClassicLinkInstancesOutputInstances]
  NextToken: String
}

type AwsEC2DescribeClassicLinkInstancesOutputInstances {
  Groups: [AwsEC2Sal]
  InstanceId: String
  Tags: [AwsEC2Si]
  VpcId: String
}

input AwsEC2DescribeClientVpnAuthorizationRulesInput {
  ClientVpnEndpointId: String!
  DryRun: Boolean
  NextToken: String
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
}

type AwsEC2DescribeClientVpnAuthorizationRulesOutput {
  AuthorizationRules: [AwsEC2DescribeClientVpnAuthorizationRulesOutputAuthorizationRules]
  NextToken: String
}

type AwsEC2DescribeClientVpnAuthorizationRulesOutputAuthorizationRules {
  ClientVpnEndpointId: String
  Description: String
  GroupId: String
  AccessAll: Boolean
  DestinationCidr: String
  Status: AwsEC2S30
}

input AwsEC2DescribeClientVpnConnectionsInput {
  ClientVpnEndpointId: String!
  Filters: [AwsEC2Sh6Input]
  NextToken: String
  MaxResults: Int
  DryRun: Boolean
}

type AwsEC2DescribeClientVpnConnectionsOutput {
  Connections: [AwsEC2DescribeClientVpnConnectionsOutputConnections]
  NextToken: String
}

type AwsEC2DescribeClientVpnConnectionsOutputConnections {
  ClientVpnEndpointId: String
  Timestamp: String
  ConnectionId: String
  Username: String
  ConnectionEstablishedTime: String
  IngressBytes: String
  EgressBytes: String
  IngressPackets: String
  EgressPackets: String
  ClientIp: String
  CommonName: String
  Status: AwsEC2Sik
  ConnectionEndTime: String
}

input AwsEC2DescribeClientVpnEndpointsInput {
  ClientVpnEndpointIds: [String]
  MaxResults: Int
  NextToken: String
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
}

type AwsEC2DescribeClientVpnEndpointsOutput {
  ClientVpnEndpoints: [AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpoints]
  NextToken: String
}

type AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpoints {
  ClientVpnEndpointId: String
  Description: String
  Status: AwsEC2S5b
  CreationTime: String
  DeletionTime: String
  DnsName: String
  ClientCidrBlock: String
  DnsServers: [String]
  SplitTunnel: Boolean
  VpnProtocol: String
  TransportProtocol: String
  AssociatedTargetNetworks: [AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpointsAssociatedTargetNetworks]
  ServerCertificateArn: String
  AuthenticationOptions: [AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpointsAuthenticationOptions]
  ConnectionLogOptions: AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpointsConnectionLogOptions
  Tags: [AwsEC2Si]
}

type AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpointsAssociatedTargetNetworks {
  NetworkId: String
  NetworkType: String
}

type AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpointsAuthenticationOptions {
  Type: String
  ActiveDirectory: AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpointsAuthenticationOptionsActiveDirectory
  MutualAuthentication: AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpointsAuthenticationOptionsMutualAuthentication
}

type AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpointsAuthenticationOptionsActiveDirectory {
  DirectoryId: String
}

type AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpointsAuthenticationOptionsMutualAuthentication {
  ClientRootCertificateChain: String
}

type AwsEC2DescribeClientVpnEndpointsOutputClientVpnEndpointsConnectionLogOptions {
  Enabled: Boolean
  CloudwatchLogGroup: String
  CloudwatchLogStream: String
}

input AwsEC2DescribeClientVpnRoutesInput {
  ClientVpnEndpointId: String!
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
}

type AwsEC2DescribeClientVpnRoutesOutput {
  Routes: [AwsEC2DescribeClientVpnRoutesOutputRoutes]
  NextToken: String
}

type AwsEC2DescribeClientVpnRoutesOutputRoutes {
  ClientVpnEndpointId: String
  DestinationCidr: String
  TargetSubnet: String
  Type: String
  Origin: String
  Status: AwsEC2S5f
  Description: String
}

input AwsEC2DescribeClientVpnTargetNetworksInput {
  ClientVpnEndpointId: String!
  AssociationIds: [String]
  MaxResults: Int
  NextToken: String
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
}

type AwsEC2DescribeClientVpnTargetNetworksOutput {
  ClientVpnTargetNetworks: [AwsEC2DescribeClientVpnTargetNetworksOutputClientVpnTargetNetworks]
  NextToken: String
}

type AwsEC2DescribeClientVpnTargetNetworksOutputClientVpnTargetNetworks {
  AssociationId: String
  VpcId: String
  TargetNetworkId: String
  ClientVpnEndpointId: String
  Status: AwsEC2S1u
  SecurityGroups: [String]
}

input AwsEC2DescribeConversionTasksInput {
  ConversionTaskIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeConversionTasksOutput {
  ConversionTasks: [AwsEC2Sje]
}

input AwsEC2DescribeCustomerGatewaysInput {
  CustomerGatewayIds: [String]
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
}

type AwsEC2DescribeCustomerGatewaysOutput {
  CustomerGateways: [AwsEC2S5k]
}

input AwsEC2DescribeDhcpOptionsInput {
  DhcpOptionsIds: [String]
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeDhcpOptionsOutput {
  DhcpOptions: [AwsEC2S61]
  NextToken: String
}

input AwsEC2DescribeEgressOnlyInternetGatewaysInput {
  DryRun: Boolean
  EgressOnlyInternetGatewayIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeEgressOnlyInternetGatewaysOutput {
  EgressOnlyInternetGateways: [AwsEC2S68]
  NextToken: String
}

input AwsEC2DescribeElasticGpusInput {
  ElasticGpuIds: [String]
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeElasticGpusOutput {
  ElasticGpuSet: [AwsEC2DescribeElasticGpusOutputElasticGpuSet]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeElasticGpusOutputElasticGpuSet {
  ElasticGpuId: String
  AvailabilityZone: String
  ElasticGpuType: String
  ElasticGpuHealth: AwsEC2DescribeElasticGpusOutputElasticGpuSetElasticGpuHealth
  ElasticGpuState: String
  InstanceId: String
}

type AwsEC2DescribeElasticGpusOutputElasticGpuSetElasticGpuHealth {
  Status: String
}

input AwsEC2DescribeExportTasksInput {
  ExportTaskIds: [String]
}

type AwsEC2DescribeExportTasksOutput {
  ExportTasks: [AwsEC2S7s]
}

input AwsEC2DescribeFleetHistoryInput {
  DryRun: Boolean
  EventType: String
  MaxResults: Int
  NextToken: String
  FleetId: String!
  StartTime: Date!
}

type AwsEC2DescribeFleetHistoryOutput {
  HistoryRecords: [AwsEC2DescribeFleetHistoryOutputHistoryRecords]
  LastEvaluatedTime: Date
  NextToken: String
  FleetId: String
  StartTime: Date
}

type AwsEC2DescribeFleetHistoryOutputHistoryRecords {
  EventInformation: AwsEC2Ski
  EventType: String
  Timestamp: Date
}

input AwsEC2DescribeFleetInstancesInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  FleetId: String!
  Filters: [AwsEC2Sh6Input]
}

type AwsEC2DescribeFleetInstancesOutput {
  ActiveInstances: [AwsEC2Skl]
  NextToken: String
  FleetId: String
}

input AwsEC2DescribeFleetsInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  FleetIds: [String]
  Filters: [AwsEC2Sh6Input]
}

type AwsEC2DescribeFleetsOutput {
  NextToken: String
  Fleets: [AwsEC2DescribeFleetsOutputFleets]
}

type AwsEC2DescribeFleetsOutputFleets {
  ActivityStatus: String
  CreateTime: Date
  FleetId: String
  FleetState: String
  ClientToken: String
  ExcessCapacityTerminationPolicy: String
  FulfilledCapacity: JSON
  FulfilledOnDemandCapacity: JSON
  LaunchTemplateConfigs: [AwsEC2DescribeFleetsOutputFleetsLaunchTemplateConfigs]
  TargetCapacitySpecification: AwsEC2DescribeFleetsOutputFleetsTargetCapacitySpecification
  TerminateInstancesWithExpiration: Boolean
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  ReplaceUnhealthyInstances: Boolean
  SpotOptions: AwsEC2DescribeFleetsOutputFleetsSpotOptions
  OnDemandOptions: AwsEC2DescribeFleetsOutputFleetsOnDemandOptions
  Tags: [AwsEC2Si]
  Errors: [AwsEC2DescribeFleetsOutputFleetsErrors]
  Instances: [AwsEC2DescribeFleetsOutputFleetsInstances]
}

type AwsEC2DescribeFleetsOutputFleetsErrors {
  LaunchTemplateAndOverrides: AwsEC2S6y
  Lifecycle: String
  ErrorCode: String
  ErrorMessage: String
}

type AwsEC2DescribeFleetsOutputFleetsInstances {
  LaunchTemplateAndOverrides: AwsEC2S6y
  Lifecycle: String
  InstanceIds: [String]
  InstanceType: String
  Platform: String
}

type AwsEC2DescribeFleetsOutputFleetsLaunchTemplateConfigs {
  LaunchTemplateSpecification: AwsEC2S6z
  Overrides: [AwsEC2S70]
}

type AwsEC2DescribeFleetsOutputFleetsOnDemandOptions {
  AllocationStrategy: String
  SingleInstanceType: Boolean
  SingleAvailabilityZone: Boolean
  MinTargetCapacity: Int
  MaxTotalPrice: String
}

type AwsEC2DescribeFleetsOutputFleetsSpotOptions {
  AllocationStrategy: String
  InstanceInterruptionBehavior: String
  InstancePoolsToUseCount: Int
  SingleInstanceType: Boolean
  SingleAvailabilityZone: Boolean
  MinTargetCapacity: Int
  MaxTotalPrice: String
}

type AwsEC2DescribeFleetsOutputFleetsTargetCapacitySpecification {
  TotalTargetCapacity: Int
  OnDemandTargetCapacity: Int
  SpotTargetCapacity: Int
  DefaultTargetCapacityType: String
}

input AwsEC2DescribeFlowLogsInput {
  DryRun: Boolean
  Filter: [AwsEC2Sh6Input]
  FlowLogIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeFlowLogsOutput {
  FlowLogs: [AwsEC2DescribeFlowLogsOutputFlowLogs]
  NextToken: String
}

type AwsEC2DescribeFlowLogsOutputFlowLogs {
  CreationTime: Date
  DeliverLogsErrorMessage: String
  DeliverLogsPermissionArn: String
  DeliverLogsStatus: String
  FlowLogId: String
  FlowLogStatus: String
  LogGroupName: String
  ResourceId: String
  TrafficType: String
  LogDestinationType: String
  LogDestination: String
}

input AwsEC2DescribeFpgaImageAttributeInput {
  DryRun: Boolean
  FpgaImageId: String!
  Attribute: String!
}

type AwsEC2DescribeFpgaImageAttributeOutput {
  FpgaImageAttribute: AwsEC2Sla
}

input AwsEC2DescribeFpgaImagesInput {
  DryRun: Boolean
  FpgaImageIds: [String]
  Owners: [String]
  Filters: [AwsEC2Sh6Input]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeFpgaImagesOutput {
  FpgaImages: [AwsEC2DescribeFpgaImagesOutputFpgaImages]
  NextToken: String
}

type AwsEC2DescribeFpgaImagesOutputFpgaImages {
  FpgaImageId: String
  FpgaImageGlobalId: String
  Name: String
  Description: String
  ShellVersion: String
  PciId: AwsEC2DescribeFpgaImagesOutputFpgaImagesPciId
  State: AwsEC2DescribeFpgaImagesOutputFpgaImagesState
  CreateTime: Date
  UpdateTime: Date
  OwnerId: String
  OwnerAlias: String
  ProductCodes: [AwsEC2Sle]
  Tags: [AwsEC2Si]
  Public: Boolean
  DataRetentionSupport: Boolean
}

type AwsEC2DescribeFpgaImagesOutputFpgaImagesPciId {
  DeviceId: String
  VendorId: String
  SubsystemId: String
  SubsystemVendorId: String
}

type AwsEC2DescribeFpgaImagesOutputFpgaImagesState {
  Code: String
  Message: String
}

input AwsEC2DescribeHostReservationOfferingsInput {
  Filter: [AwsEC2Sh6Input]
  MaxDuration: Int
  MaxResults: Int
  MinDuration: Int
  NextToken: String
  OfferingId: String
}

type AwsEC2DescribeHostReservationOfferingsOutput {
  NextToken: String
  OfferingSet: [AwsEC2DescribeHostReservationOfferingsOutputOfferingSet]
}

type AwsEC2DescribeHostReservationOfferingsOutputOfferingSet {
  CurrencyCode: String
  Duration: Int
  HourlyPrice: String
  InstanceFamily: String
  OfferingId: String
  PaymentOption: String
  UpfrontPrice: String
}

input AwsEC2DescribeHostReservationsInput {
  Filter: [AwsEC2Sh6Input]
  HostReservationIdSet: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeHostReservationsOutput {
  HostReservationSet: [AwsEC2DescribeHostReservationsOutputHostReservationSet]
  NextToken: String
}

type AwsEC2DescribeHostReservationsOutputHostReservationSet {
  Count: Int
  CurrencyCode: String
  Duration: Int
  End: Date
  HostIdSet: [String]
  HostReservationId: String
  HourlyPrice: String
  InstanceFamily: String
  OfferingId: String
  PaymentOption: String
  Start: Date
  State: String
  UpfrontPrice: String
  Tags: [AwsEC2Si]
}

input AwsEC2DescribeHostsInput {
  Filter: [AwsEC2Sh6Input]
  HostIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeHostsOutput {
  Hosts: [AwsEC2DescribeHostsOutputHosts]
  NextToken: String
}

type AwsEC2DescribeHostsOutputHosts {
  AutoPlacement: String
  AvailabilityZone: String
  AvailableCapacity: AwsEC2DescribeHostsOutputHostsAvailableCapacity
  ClientToken: String
  HostId: String
  HostProperties: AwsEC2DescribeHostsOutputHostsHostProperties
  HostReservationId: String
  Instances: [AwsEC2DescribeHostsOutputHostsInstances]
  State: String
  AllocationTime: Date
  ReleaseTime: Date
  Tags: [AwsEC2Si]
  HostRecovery: String
}

type AwsEC2DescribeHostsOutputHostsAvailableCapacity {
  AvailableInstanceCapacity: [AwsEC2DescribeHostsOutputHostsAvailableCapacityAvailableInstanceCapacity]
  AvailableVCpus: Int
}

type AwsEC2DescribeHostsOutputHostsAvailableCapacityAvailableInstanceCapacity {
  AvailableCapacity: Int
  InstanceType: String
  TotalCapacity: Int
}

type AwsEC2DescribeHostsOutputHostsHostProperties {
  Cores: Int
  InstanceType: String
  Sockets: Int
  TotalVCpus: Int
}

type AwsEC2DescribeHostsOutputHostsInstances {
  InstanceId: String
  InstanceType: String
}

input AwsEC2DescribeIamInstanceProfileAssociationsInput {
  AssociationIds: [String]
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeIamInstanceProfileAssociationsOutput {
  IamInstanceProfileAssociations: [AwsEC2S20]
  NextToken: String
}

input AwsEC2DescribeIdentityIdFormatInput {
  PrincipalArn: String!
  Resource: String
}

type AwsEC2DescribeIdentityIdFormatOutput {
  Statuses: [AwsEC2Shf]
}

input AwsEC2DescribeIdFormatInput {
  Resource: String
}

type AwsEC2DescribeIdFormatOutput {
  Statuses: [AwsEC2Shf]
}

input AwsEC2DescribeImageAttributeInput {
  Attribute: String!
  ImageId: String!
  DryRun: Boolean
}

type AwsEC2DescribeImageAttributeOutput {
  BlockDeviceMappings: [AwsEC2S7i]
  ImageId: String
  LaunchPermissions: [AwsEC2Smt]
  ProductCodes: [AwsEC2Sle]
  Description: AwsEC2S65
  KernelId: AwsEC2S65
  RamdiskId: AwsEC2S65
  SriovNetSupport: AwsEC2S65
}

input AwsEC2DescribeImagesInput {
  ExecutableUsers: [String]
  Filters: [AwsEC2Sh6Input]
  ImageIds: [String]
  Owners: [String]
  DryRun: Boolean
}

type AwsEC2DescribeImagesOutput {
  Images: [AwsEC2DescribeImagesOutputImages]
}

type AwsEC2DescribeImagesOutputImages {
  Architecture: String
  CreationDate: String
  ImageId: String
  ImageLocation: String
  ImageType: String
  Public: Boolean
  KernelId: String
  OwnerId: String
  Platform: String
  ProductCodes: [AwsEC2Sle]
  RamdiskId: String
  State: String
  BlockDeviceMappings: [AwsEC2S7i]
  Description: String
  EnaSupport: Boolean
  Hypervisor: String
  ImageOwnerAlias: String
  Name: String
  RootDeviceName: String
  RootDeviceType: String
  SriovNetSupport: String
  StateReason: AwsEC2Sn6
  Tags: [AwsEC2Si]
  VirtualizationType: String
}

input AwsEC2DescribeImportImageTasksInput {
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  ImportTaskIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeImportImageTasksOutput {
  ImportImageTasks: [AwsEC2DescribeImportImageTasksOutputImportImageTasks]
  NextToken: String
}

type AwsEC2DescribeImportImageTasksOutputImportImageTasks {
  Architecture: String
  Description: String
  Encrypted: Boolean
  Hypervisor: String
  ImageId: String
  ImportTaskId: String
  KmsKeyId: String
  LicenseType: String
  Platform: String
  Progress: String
  SnapshotDetails: [AwsEC2Snd]
  Status: String
  StatusMessage: String
}

input AwsEC2DescribeImportSnapshotTasksInput {
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  ImportTaskIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeImportSnapshotTasksOutput {
  ImportSnapshotTasks: [AwsEC2DescribeImportSnapshotTasksOutputImportSnapshotTasks]
  NextToken: String
}

type AwsEC2DescribeImportSnapshotTasksOutputImportSnapshotTasks {
  Description: String
  ImportTaskId: String
  SnapshotTaskDetail: AwsEC2Snk
}

input AwsEC2DescribeInstanceAttributeInput {
  Attribute: String!
  DryRun: Boolean
  InstanceId: String!
}

type AwsEC2DescribeInstanceAttributeOutput {
  Groups: [AwsEC2Sal]
  BlockDeviceMappings: [AwsEC2Sno]
  DisableApiTermination: AwsEC2Snr
  EnaSupport: AwsEC2Snr
  EbsOptimized: AwsEC2Snr
  InstanceId: String
  InstanceInitiatedShutdownBehavior: AwsEC2S65
  InstanceType: AwsEC2S65
  KernelId: AwsEC2S65
  ProductCodes: [AwsEC2Sle]
  RamdiskId: AwsEC2S65
  RootDeviceName: AwsEC2S65
  SourceDestCheck: AwsEC2Snr
  SriovNetSupport: AwsEC2S65
  UserData: AwsEC2S65
}

input AwsEC2DescribeInstanceCreditSpecificationsInput {
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  InstanceIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeInstanceCreditSpecificationsOutput {
  InstanceCreditSpecifications: [AwsEC2DescribeInstanceCreditSpecificationsOutputInstanceCreditSpecifications]
  NextToken: String
}

type AwsEC2DescribeInstanceCreditSpecificationsOutputInstanceCreditSpecifications {
  InstanceId: String
  CpuCredits: String
}

input AwsEC2DescribeInstancesInput {
  Filters: [AwsEC2Sh6Input]
  InstanceIds: [String]
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeInstancesOutput {
  Reservations: [AwsEC2Sog]
  NextToken: String
}

input AwsEC2DescribeInstanceStatusInput {
  Filters: [AwsEC2Sh6Input]
  InstanceIds: [String]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
  IncludeAllInstances: Boolean
}

type AwsEC2DescribeInstanceStatusOutput {
  InstanceStatuses: [AwsEC2DescribeInstanceStatusOutputInstanceStatuses]
  NextToken: String
}

type AwsEC2DescribeInstanceStatusOutputInstanceStatuses {
  AvailabilityZone: String
  Events: [AwsEC2So2]
  InstanceId: String
  InstanceState: AwsEC2So5
  InstanceStatus: AwsEC2So7
  SystemStatus: AwsEC2So7
}

input AwsEC2DescribeInternetGatewaysInput {
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  InternetGatewayIds: [String]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeInternetGatewaysOutput {
  InternetGateways: [AwsEC2S7y]
  NextToken: String
}

input AwsEC2DescribeKeyPairsInput {
  Filters: [AwsEC2Sh6Input]
  KeyNames: [String]
  DryRun: Boolean
}

type AwsEC2DescribeKeyPairsOutput {
  KeyPairs: [AwsEC2DescribeKeyPairsOutputKeyPairs]
}

type AwsEC2DescribeKeyPairsOutputKeyPairs {
  KeyFingerprint: String
  KeyName: String
}

input AwsEC2DescribeLaunchTemplatesInput {
  DryRun: Boolean
  LaunchTemplateIds: [String]
  LaunchTemplateNames: [String]
  Filters: [AwsEC2Sh6Input]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeLaunchTemplatesOutput {
  LaunchTemplates: [AwsEC2S93]
  NextToken: String
}

input AwsEC2DescribeLaunchTemplateVersionsInput {
  DryRun: Boolean
  LaunchTemplateId: String
  LaunchTemplateName: String
  Versions: [String]
  MinVersion: String
  MaxVersion: String
  NextToken: String
  MaxResults: Int
  Filters: [AwsEC2Sh6Input]
}

type AwsEC2DescribeLaunchTemplateVersionsOutput {
  LaunchTemplateVersions: [AwsEC2S96]
  NextToken: String
}

input AwsEC2DescribeMovingAddressesInput {
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  PublicIps: [String]
}

type AwsEC2DescribeMovingAddressesOutput {
  MovingAddressStatuses: [AwsEC2DescribeMovingAddressesOutputMovingAddressStatuses]
  NextToken: String
}

type AwsEC2DescribeMovingAddressesOutputMovingAddressStatuses {
  MoveStatus: String
  PublicIp: String
}

input AwsEC2DescribeNatGatewaysInput {
  Filter: [AwsEC2Sh6Input]
  MaxResults: Int
  NatGatewayIds: [String]
  NextToken: String
}

type AwsEC2DescribeNatGatewaysOutput {
  NatGateways: [AwsEC2S9z]
  NextToken: String
}

input AwsEC2DescribeNetworkAclsInput {
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  NetworkAclIds: [String]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeNetworkAclsOutput {
  NetworkAcls: [AwsEC2Sa6]
  NextToken: String
}

input AwsEC2DescribeNetworkInterfaceAttributeInput {
  Attribute: String
  DryRun: Boolean
  NetworkInterfaceId: String!
}

type AwsEC2DescribeNetworkInterfaceAttributeOutput {
  Attachment: AwsEC2Sak
  Description: AwsEC2S65
  Groups: [AwsEC2Sal]
  NetworkInterfaceId: String
  SourceDestCheck: AwsEC2Snr
}

input AwsEC2DescribeNetworkInterfacePermissionsInput {
  NetworkInterfacePermissionIds: [String]
  Filters: [AwsEC2Sh6Input]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeNetworkInterfacePermissionsOutput {
  NetworkInterfacePermissions: [AwsEC2Saw]
  NextToken: String
}

input AwsEC2DescribeNetworkInterfacesInput {
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  NetworkInterfaceIds: [String]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeNetworkInterfacesOutput {
  NetworkInterfaces: [AwsEC2Sai]
  NextToken: String
}

input AwsEC2DescribePlacementGroupsInput {
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  GroupNames: [String]
}

type AwsEC2DescribePlacementGroupsOutput {
  PlacementGroups: [AwsEC2DescribePlacementGroupsOutputPlacementGroups]
}

type AwsEC2DescribePlacementGroupsOutputPlacementGroups {
  GroupName: String
  State: String
  Strategy: String
  PartitionCount: Int
}

input AwsEC2DescribePrefixListsInput {
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  PrefixListIds: [String]
}

type AwsEC2DescribePrefixListsOutput {
  NextToken: String
  PrefixLists: [AwsEC2DescribePrefixListsOutputPrefixLists]
}

type AwsEC2DescribePrefixListsOutputPrefixLists {
  Cidrs: [String]
  PrefixListId: String
  PrefixListName: String
}

input AwsEC2DescribePrincipalIdFormatInput {
  DryRun: Boolean
  Resources: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribePrincipalIdFormatOutput {
  Principals: [AwsEC2DescribePrincipalIdFormatOutputPrincipals]
  NextToken: String
}

type AwsEC2DescribePrincipalIdFormatOutputPrincipals {
  Arn: String
  Statuses: [AwsEC2Shf]
}

input AwsEC2DescribePublicIpv4PoolsInput {
  PoolIds: [String]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribePublicIpv4PoolsOutput {
  PublicIpv4Pools: [AwsEC2DescribePublicIpv4PoolsOutputPublicIpv4Pools]
  NextToken: String
}

type AwsEC2DescribePublicIpv4PoolsOutputPublicIpv4Pools {
  PoolId: String
  Description: String
  PoolAddressRanges: [AwsEC2DescribePublicIpv4PoolsOutputPublicIpv4PoolsPoolAddressRanges]
  TotalAddressCount: Int
  TotalAvailableAddressCount: Int
}

type AwsEC2DescribePublicIpv4PoolsOutputPublicIpv4PoolsPoolAddressRanges {
  FirstAddress: String
  LastAddress: String
  AddressCount: Int
  AvailableAddressCount: Int
}

input AwsEC2DescribeRegionsInput {
  Filters: [AwsEC2Sh6Input]
  RegionNames: [String]
  DryRun: Boolean
}

type AwsEC2DescribeRegionsOutput {
  Regions: [AwsEC2DescribeRegionsOutputRegions]
}

type AwsEC2DescribeRegionsOutputRegions {
  Endpoint: String
  RegionName: String
}

input AwsEC2DescribeReservedInstancesInput {
  Filters: [AwsEC2Sh6Input]
  OfferingClass: String
  ReservedInstancesIds: [String]
  DryRun: Boolean
  OfferingType: String
}

input AwsEC2DescribeReservedInstancesListingsInput {
  Filters: [AwsEC2Sh6Input]
  ReservedInstancesId: String
  ReservedInstancesListingId: String
}

type AwsEC2DescribeReservedInstancesListingsOutput {
  ReservedInstancesListings: [AwsEC2S3w]
}

input AwsEC2DescribeReservedInstancesModificationsInput {
  Filters: [AwsEC2Sh6Input]
  ReservedInstancesModificationIds: [String]
  NextToken: String
}

type AwsEC2DescribeReservedInstancesModificationsOutput {
  NextToken: String
  ReservedInstancesModifications: [AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModifications]
}

type AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModifications {
  ClientToken: String
  CreateDate: Date
  EffectiveDate: Date
  ModificationResults: [AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsModificationResults]
  ReservedInstancesIds: [AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsReservedInstancesIds]
  ReservedInstancesModificationId: String
  Status: String
  StatusMessage: String
  UpdateDate: Date
}

type AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsModificationResults {
  ReservedInstancesId: String
  TargetConfiguration: AwsEC2Sro
}

type AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsReservedInstancesIds {
  ReservedInstancesId: String
}

input AwsEC2DescribeReservedInstancesOfferingsInput {
  AvailabilityZone: String
  Filters: [AwsEC2Sh6Input]
  IncludeMarketplace: Boolean
  InstanceType: String
  MaxDuration: JSON
  MaxInstanceCount: Int
  MinDuration: JSON
  OfferingClass: String
  ProductDescription: String
  ReservedInstancesOfferingIds: [String]
  DryRun: Boolean
  InstanceTenancy: String
  MaxResults: Int
  NextToken: String
  OfferingType: String
}

type AwsEC2DescribeReservedInstancesOfferingsOutput {
  ReservedInstancesOfferings: [AwsEC2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferings]
  NextToken: String
}

type AwsEC2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferings {
  AvailabilityZone: String
  Duration: JSON
  FixedPrice: Float
  InstanceType: String
  ProductDescription: String
  ReservedInstancesOfferingId: String
  UsagePrice: Float
  CurrencyCode: String
  InstanceTenancy: String
  Marketplace: Boolean
  OfferingClass: String
  OfferingType: String
  PricingDetails: [AwsEC2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferingsPricingDetails]
  RecurringCharges: [AwsEC2Srb]
  Scope: String
}

type AwsEC2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferingsPricingDetails {
  Count: Int
  Price: JSON
}

type AwsEC2DescribeReservedInstancesOutput {
  ReservedInstances: [AwsEC2DescribeReservedInstancesOutputReservedInstances]
}

type AwsEC2DescribeReservedInstancesOutputReservedInstances {
  AvailabilityZone: String
  Duration: JSON
  End: Date
  FixedPrice: Float
  InstanceCount: Int
  InstanceType: String
  ProductDescription: String
  ReservedInstancesId: String
  Start: Date
  State: String
  UsagePrice: Float
  CurrencyCode: String
  InstanceTenancy: String
  OfferingClass: String
  OfferingType: String
  RecurringCharges: [AwsEC2Srb]
  Scope: String
  Tags: [AwsEC2Si]
}

input AwsEC2DescribeRouteTablesInput {
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  RouteTableIds: [String]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeRouteTablesOutput {
  RouteTables: [AwsEC2Sb9]
  NextToken: String
}

input AwsEC2DescribeScheduledInstanceAvailabilityFirstSlotStartTimeRangeInput {
  EarliestTime: Date!
  LatestTime: Date!
}

input AwsEC2DescribeScheduledInstanceAvailabilityInput {
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  FirstSlotStartTimeRange: AwsEC2DescribeScheduledInstanceAvailabilityFirstSlotStartTimeRangeInput!
  MaxResults: Int
  MaxSlotDurationInHours: Int
  MinSlotDurationInHours: Int
  NextToken: String
  Recurrence: AwsEC2DescribeScheduledInstanceAvailabilityRecurrenceInput!
}

type AwsEC2DescribeScheduledInstanceAvailabilityOutput {
  NextToken: String
  ScheduledInstanceAvailabilitySet: [AwsEC2DescribeScheduledInstanceAvailabilityOutputScheduledInstanceAvailabilitySet]
}

type AwsEC2DescribeScheduledInstanceAvailabilityOutputScheduledInstanceAvailabilitySet {
  AvailabilityZone: String
  AvailableInstanceCount: Int
  FirstSlotStartTime: Date
  HourlyPrice: String
  InstanceType: String
  MaxTermDurationInDays: Int
  MinTermDurationInDays: Int
  NetworkPlatform: String
  Platform: String
  PurchaseToken: String
  Recurrence: AwsEC2Ssa
  SlotDurationInHours: Int
  TotalScheduledInstanceHours: Int
}

input AwsEC2DescribeScheduledInstanceAvailabilityRecurrenceInput {
  Frequency: String
  Interval: Int
  OccurrenceDays: [Int]
  OccurrenceRelativeToEnd: Boolean
  OccurrenceUnit: String
}

input AwsEC2DescribeScheduledInstancesInput {
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  ScheduledInstanceIds: [String]
  SlotStartTimeRange: AwsEC2DescribeScheduledInstancesSlotStartTimeRangeInput
}

type AwsEC2DescribeScheduledInstancesOutput {
  NextToken: String
  ScheduledInstanceSet: [AwsEC2Ssh]
}

input AwsEC2DescribeScheduledInstancesSlotStartTimeRangeInput {
  EarliestTime: Date
  LatestTime: Date
}

input AwsEC2DescribeSecurityGroupReferencesInput {
  DryRun: Boolean
  GroupId: [String]!
}

type AwsEC2DescribeSecurityGroupReferencesOutput {
  SecurityGroupReferenceSet: [AwsEC2DescribeSecurityGroupReferencesOutputSecurityGroupReferenceSet]
}

type AwsEC2DescribeSecurityGroupReferencesOutputSecurityGroupReferenceSet {
  GroupId: String
  ReferencingVpcId: String
  VpcPeeringConnectionId: String
}

input AwsEC2DescribeSecurityGroupsInput {
  Filters: [AwsEC2Sh6Input]
  GroupIds: [String]
  GroupNames: [String]
  DryRun: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeSecurityGroupsOutput {
  SecurityGroups: [AwsEC2DescribeSecurityGroupsOutputSecurityGroups]
  NextToken: String
}

type AwsEC2DescribeSecurityGroupsOutputSecurityGroups {
  Description: String
  GroupName: String
  IpPermissions: [AwsEC2S33]
  OwnerId: String
  GroupId: String
  IpPermissionsEgress: [AwsEC2S33]
  Tags: [AwsEC2Si]
  VpcId: String
}

input AwsEC2DescribeSnapshotAttributeInput {
  Attribute: String!
  SnapshotId: String!
  DryRun: Boolean
}

type AwsEC2DescribeSnapshotAttributeOutput {
  CreateVolumePermissions: [AwsEC2Ssw]
  ProductCodes: [AwsEC2Sle]
  SnapshotId: String
}

input AwsEC2DescribeSnapshotsInput {
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  OwnerIds: [String]
  RestorableByUserIds: [String]
  SnapshotIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeSnapshotsOutput {
  Snapshots: [AwsEC2Sbl]
  NextToken: String
}

input AwsEC2DescribeSpotDatafeedSubscriptionInput {
  DryRun: Boolean
}

type AwsEC2DescribeSpotDatafeedSubscriptionOutput {
  SpotDatafeedSubscription: AwsEC2Sbw
}

input AwsEC2DescribeSpotFleetInstancesInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  SpotFleetRequestId: String!
}

type AwsEC2DescribeSpotFleetInstancesOutput {
  ActiveInstances: [AwsEC2Skl]
  NextToken: String
  SpotFleetRequestId: String
}

input AwsEC2DescribeSpotFleetRequestHistoryInput {
  DryRun: Boolean
  EventType: String
  MaxResults: Int
  NextToken: String
  SpotFleetRequestId: String!
  StartTime: Date!
}

type AwsEC2DescribeSpotFleetRequestHistoryOutput {
  HistoryRecords: [AwsEC2DescribeSpotFleetRequestHistoryOutputHistoryRecords]
  LastEvaluatedTime: Date
  NextToken: String
  SpotFleetRequestId: String
  StartTime: Date
}

type AwsEC2DescribeSpotFleetRequestHistoryOutputHistoryRecords {
  EventInformation: AwsEC2Ski
  EventType: String
  Timestamp: Date
}

input AwsEC2DescribeSpotFleetRequestsInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  SpotFleetRequestIds: [String]
}

type AwsEC2DescribeSpotFleetRequestsOutput {
  NextToken: String
  SpotFleetRequestConfigs: [AwsEC2DescribeSpotFleetRequestsOutputSpotFleetRequestConfigs]
}

type AwsEC2DescribeSpotFleetRequestsOutputSpotFleetRequestConfigs {
  ActivityStatus: String
  CreateTime: Date
  SpotFleetRequestConfig: AwsEC2Stj
  SpotFleetRequestId: String
  SpotFleetRequestState: String
}

input AwsEC2DescribeSpotInstanceRequestsInput {
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  SpotInstanceRequestIds: [String]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeSpotInstanceRequestsOutput {
  SpotInstanceRequests: [AwsEC2Su8]
  NextToken: String
}

input AwsEC2DescribeSpotPriceHistoryInput {
  Filters: [AwsEC2Sh6Input]
  AvailabilityZone: String
  DryRun: Boolean
  EndTime: Date
  InstanceTypes: [String]
  MaxResults: Int
  NextToken: String
  ProductDescriptions: [String]
  StartTime: Date
}

type AwsEC2DescribeSpotPriceHistoryOutput {
  NextToken: String
  SpotPriceHistory: [AwsEC2DescribeSpotPriceHistoryOutputSpotPriceHistory]
}

type AwsEC2DescribeSpotPriceHistoryOutputSpotPriceHistory {
  AvailabilityZone: String
  InstanceType: String
  ProductDescription: String
  SpotPrice: String
  Timestamp: Date
}

input AwsEC2DescribeStaleSecurityGroupsInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  VpcId: String!
}

type AwsEC2DescribeStaleSecurityGroupsOutput {
  NextToken: String
  StaleSecurityGroupSet: [AwsEC2DescribeStaleSecurityGroupsOutputStaleSecurityGroupSet]
}

type AwsEC2DescribeStaleSecurityGroupsOutputStaleSecurityGroupSet {
  Description: String
  GroupId: String
  GroupName: String
  StaleIpPermissions: [AwsEC2Suq]
  StaleIpPermissionsEgress: [AwsEC2Suq]
  VpcId: String
}

input AwsEC2DescribeSubnetsInput {
  Filters: [AwsEC2Sh6Input]
  SubnetIds: [String]
  DryRun: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeSubnetsOutput {
  Subnets: [AwsEC2S5n]
  NextToken: String
}

input AwsEC2DescribeTagsInput {
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeTagsOutput {
  NextToken: String
  Tags: [AwsEC2DescribeTagsOutputTags]
}

type AwsEC2DescribeTagsOutputTags {
  Key: String
  ResourceId: String
  ResourceType: String
  Value: String
}

input AwsEC2DescribeTrafficMirrorFiltersInput {
  TrafficMirrorFilterIds: [String]
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeTrafficMirrorFiltersOutput {
  TrafficMirrorFilters: [AwsEC2Sc5]
  NextToken: String
}

input AwsEC2DescribeTrafficMirrorSessionsInput {
  TrafficMirrorSessionIds: [String]
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeTrafficMirrorSessionsOutput {
  TrafficMirrorSessions: [AwsEC2Sci]
  NextToken: String
}

input AwsEC2DescribeTrafficMirrorTargetsInput {
  TrafficMirrorTargetIds: [String]
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeTrafficMirrorTargetsOutput {
  TrafficMirrorTargets: [AwsEC2Scl]
  NextToken: String
}

input AwsEC2DescribeTransitGatewayAttachmentsInput {
  TransitGatewayAttachmentIds: [String]
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
}

type AwsEC2DescribeTransitGatewayAttachmentsOutput {
  TransitGatewayAttachments: [AwsEC2DescribeTransitGatewayAttachmentsOutputTransitGatewayAttachments]
  NextToken: String
}

type AwsEC2DescribeTransitGatewayAttachmentsOutputTransitGatewayAttachments {
  TransitGatewayAttachmentId: String
  TransitGatewayId: String
  TransitGatewayOwnerId: String
  ResourceOwnerId: String
  ResourceType: String
  ResourceId: String
  State: String
  Association: AwsEC2DescribeTransitGatewayAttachmentsOutputTransitGatewayAttachmentsAssociation
  CreationTime: Date
  Tags: [AwsEC2Si]
}

type AwsEC2DescribeTransitGatewayAttachmentsOutputTransitGatewayAttachmentsAssociation {
  TransitGatewayRouteTableId: String
  State: String
}

input AwsEC2DescribeTransitGatewayRouteTablesInput {
  TransitGatewayRouteTableIds: [String]
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
}

type AwsEC2DescribeTransitGatewayRouteTablesOutput {
  TransitGatewayRouteTables: [AwsEC2Sd6]
  NextToken: String
}

input AwsEC2DescribeTransitGatewaysInput {
  TransitGatewayIds: [String]
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
}

type AwsEC2DescribeTransitGatewaysOutput {
  TransitGateways: [AwsEC2Scu]
  NextToken: String
}

input AwsEC2DescribeTransitGatewayVpcAttachmentsInput {
  TransitGatewayAttachmentIds: [String]
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
}

type AwsEC2DescribeTransitGatewayVpcAttachmentsOutput {
  TransitGatewayVpcAttachments: [AwsEC2Sb]
  NextToken: String
}

input AwsEC2DescribeVolumeAttributeInput {
  Attribute: String!
  VolumeId: String!
  DryRun: Boolean
}

type AwsEC2DescribeVolumeAttributeOutput {
  AutoEnableIO: AwsEC2Snr
  ProductCodes: [AwsEC2Sle]
  VolumeId: String
}

input AwsEC2DescribeVolumesInput {
  Filters: [AwsEC2Sh6Input]
  VolumeIds: [String]
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
}

input AwsEC2DescribeVolumesModificationsInput {
  DryRun: Boolean
  VolumeIds: [String]
  Filters: [AwsEC2Sh6Input]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeVolumesModificationsOutput {
  VolumesModifications: [AwsEC2Swj]
  NextToken: String
}

type AwsEC2DescribeVolumesOutput {
  Volumes: [AwsEC2Sdc]
  NextToken: String
}

input AwsEC2DescribeVolumeStatusInput {
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  VolumeIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeVolumeStatusOutput {
  NextToken: String
  VolumeStatuses: [AwsEC2DescribeVolumeStatusOutputVolumeStatuses]
}

type AwsEC2DescribeVolumeStatusOutputVolumeStatuses {
  Actions: [AwsEC2DescribeVolumeStatusOutputVolumeStatusesActions]
  AvailabilityZone: String
  Events: [AwsEC2DescribeVolumeStatusOutputVolumeStatusesEvents]
  VolumeId: String
  VolumeStatus: AwsEC2DescribeVolumeStatusOutputVolumeStatusesVolumeStatus
}

type AwsEC2DescribeVolumeStatusOutputVolumeStatusesActions {
  Code: String
  Description: String
  EventId: String
  EventType: String
}

type AwsEC2DescribeVolumeStatusOutputVolumeStatusesEvents {
  Description: String
  EventId: String
  EventType: String
  NotAfter: Date
  NotBefore: Date
}

type AwsEC2DescribeVolumeStatusOutputVolumeStatusesVolumeStatus {
  Details: [AwsEC2DescribeVolumeStatusOutputVolumeStatusesVolumeStatusDetails]
  Status: String
}

type AwsEC2DescribeVolumeStatusOutputVolumeStatusesVolumeStatusDetails {
  Name: String
  Status: String
}

input AwsEC2DescribeVpcAttributeInput {
  Attribute: String!
  VpcId: String!
  DryRun: Boolean
}

type AwsEC2DescribeVpcAttributeOutput {
  VpcId: String
  EnableDnsHostnames: AwsEC2Snr
  EnableDnsSupport: AwsEC2Snr
}

input AwsEC2DescribeVpcClassicLinkDnsSupportInput {
  MaxResults: Int
  NextToken: String
  VpcIds: [String]
}

type AwsEC2DescribeVpcClassicLinkDnsSupportOutput {
  NextToken: String
  Vpcs: [AwsEC2DescribeVpcClassicLinkDnsSupportOutputVpcs]
}

type AwsEC2DescribeVpcClassicLinkDnsSupportOutputVpcs {
  ClassicLinkDnsSupported: Boolean
  VpcId: String
}

input AwsEC2DescribeVpcClassicLinkInput {
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  VpcIds: [String]
}

type AwsEC2DescribeVpcClassicLinkOutput {
  Vpcs: [AwsEC2DescribeVpcClassicLinkOutputVpcs]
}

type AwsEC2DescribeVpcClassicLinkOutputVpcs {
  ClassicLinkEnabled: Boolean
  Tags: [AwsEC2Si]
  VpcId: String
}

input AwsEC2DescribeVpcEndpointConnectionNotificationsInput {
  DryRun: Boolean
  ConnectionNotificationId: String
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointConnectionNotificationsOutput {
  ConnectionNotificationSet: [AwsEC2Sds]
  NextToken: String
}

input AwsEC2DescribeVpcEndpointConnectionsInput {
  DryRun: Boolean
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointConnectionsOutput {
  VpcEndpointConnections: [AwsEC2DescribeVpcEndpointConnectionsOutputVpcEndpointConnections]
  NextToken: String
}

type AwsEC2DescribeVpcEndpointConnectionsOutputVpcEndpointConnections {
  ServiceId: String
  VpcEndpointId: String
  VpcEndpointOwner: String
  VpcEndpointState: String
  CreationTimestamp: Date
  DnsEntries: [AwsEC2Sdo]
  NetworkLoadBalancerArns: [String]
}

input AwsEC2DescribeVpcEndpointServiceConfigurationsInput {
  DryRun: Boolean
  ServiceIds: [String]
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointServiceConfigurationsOutput {
  ServiceConfigurations: [AwsEC2Sdx]
  NextToken: String
}

input AwsEC2DescribeVpcEndpointServicePermissionsInput {
  DryRun: Boolean
  ServiceId: String!
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointServicePermissionsOutput {
  AllowedPrincipals: [AwsEC2DescribeVpcEndpointServicePermissionsOutputAllowedPrincipals]
  NextToken: String
}

type AwsEC2DescribeVpcEndpointServicePermissionsOutputAllowedPrincipals {
  PrincipalType: String
  Principal: String
}

input AwsEC2DescribeVpcEndpointServicesInput {
  DryRun: Boolean
  ServiceNames: [String]
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointServicesOutput {
  ServiceNames: [String]
  ServiceDetails: [AwsEC2DescribeVpcEndpointServicesOutputServiceDetails]
  NextToken: String
}

type AwsEC2DescribeVpcEndpointServicesOutputServiceDetails {
  ServiceName: String
  ServiceId: String
  ServiceType: [AwsEC2Sdy]
  AvailabilityZones: [String]
  Owner: String
  BaseEndpointDnsNames: [String]
  PrivateDnsName: String
  VpcEndpointPolicySupported: Boolean
  AcceptanceRequired: Boolean
  ManagesVpcEndpoints: Boolean
  Tags: [AwsEC2Si]
}

input AwsEC2DescribeVpcEndpointsInput {
  DryRun: Boolean
  VpcEndpointIds: [String]
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointsOutput {
  VpcEndpoints: [AwsEC2Sdk]
  NextToken: String
}

input AwsEC2DescribeVpcPeeringConnectionsInput {
  Filters: [AwsEC2Sh6Input]
  DryRun: Boolean
  VpcPeeringConnectionIds: [String]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeVpcPeeringConnectionsOutput {
  VpcPeeringConnections: [AwsEC2Sr]
  NextToken: String
}

input AwsEC2DescribeVpcsInput {
  Filters: [AwsEC2Sh6Input]
  VpcIds: [String]
  DryRun: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeVpcsOutput {
  Vpcs: [AwsEC2S5s]
  NextToken: String
}

input AwsEC2DescribeVpnConnectionsInput {
  Filters: [AwsEC2Sh6Input]
  VpnConnectionIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeVpnConnectionsOutput {
  VpnConnections: [AwsEC2Se9]
}

input AwsEC2DescribeVpnGatewaysInput {
  Filters: [AwsEC2Sh6Input]
  VpnGatewayIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeVpnGatewaysOutput {
  VpnGateways: [AwsEC2Sel]
}

input AwsEC2DetachClassicLinkVpcInput {
  DryRun: Boolean
  InstanceId: String!
  VpcId: String!
}

type AwsEC2DetachClassicLinkVpcOutput {
  Return: Boolean
}

input AwsEC2DetachInternetGatewayInput {
  DryRun: Boolean
  InternetGatewayId: String!
  VpcId: String!
}

input AwsEC2DetachNetworkInterfaceInput {
  AttachmentId: String!
  DryRun: Boolean
  Force: Boolean
}

input AwsEC2DetachVolumeInput {
  Device: String
  Force: Boolean
  InstanceId: String
  VolumeId: String!
  DryRun: Boolean
}

input AwsEC2DetachVpnGatewayInput {
  VpcId: String!
  VpnGatewayId: String!
  DryRun: Boolean
}

input AwsEC2DisableEbsEncryptionByDefaultInput {
  DryRun: Boolean
}

type AwsEC2DisableEbsEncryptionByDefaultOutput {
  EbsEncryptionByDefault: Boolean
}

input AwsEC2DisableTransitGatewayRouteTablePropagationInput {
  TransitGatewayRouteTableId: String!
  TransitGatewayAttachmentId: String!
  DryRun: Boolean
}

type AwsEC2DisableTransitGatewayRouteTablePropagationOutput {
  Propagation: AwsEC2Syc
}

input AwsEC2DisableVgwRoutePropagationInput {
  GatewayId: String!
  RouteTableId: String!
}

input AwsEC2DisableVpcClassicLinkDnsSupportInput {
  VpcId: String
}

type AwsEC2DisableVpcClassicLinkDnsSupportOutput {
  Return: Boolean
}

input AwsEC2DisableVpcClassicLinkInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEC2DisableVpcClassicLinkOutput {
  Return: Boolean
}

input AwsEC2DisassociateAddressInput {
  AssociationId: String
  PublicIp: String
  DryRun: Boolean
}

input AwsEC2DisassociateClientVpnTargetNetworkInput {
  ClientVpnEndpointId: String!
  AssociationId: String!
  DryRun: Boolean
}

type AwsEC2DisassociateClientVpnTargetNetworkOutput {
  AssociationId: String
  Status: AwsEC2S1u
}

input AwsEC2DisassociateIamInstanceProfileInput {
  AssociationId: String!
}

type AwsEC2DisassociateIamInstanceProfileOutput {
  IamInstanceProfileAssociation: AwsEC2S20
}

input AwsEC2DisassociateRouteTableInput {
  AssociationId: String!
  DryRun: Boolean
}

input AwsEC2DisassociateSubnetCidrBlockInput {
  AssociationId: String!
}

type AwsEC2DisassociateSubnetCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEC2S27
  SubnetId: String
}

input AwsEC2DisassociateTransitGatewayRouteTableInput {
  TransitGatewayRouteTableId: String!
  TransitGatewayAttachmentId: String!
  DryRun: Boolean
}

type AwsEC2DisassociateTransitGatewayRouteTableOutput {
  Association: AwsEC2S2c
}

input AwsEC2DisassociateVpcCidrBlockInput {
  AssociationId: String!
}

type AwsEC2DisassociateVpcCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEC2S2h
  CidrBlockAssociation: AwsEC2S2k
  VpcId: String
}

input AwsEC2EnableEbsEncryptionByDefaultInput {
  DryRun: Boolean
}

type AwsEC2EnableEbsEncryptionByDefaultOutput {
  EbsEncryptionByDefault: Boolean
}

input AwsEC2EnableTransitGatewayRouteTablePropagationInput {
  TransitGatewayRouteTableId: String!
  TransitGatewayAttachmentId: String!
  DryRun: Boolean
}

type AwsEC2EnableTransitGatewayRouteTablePropagationOutput {
  Propagation: AwsEC2Syc
}

input AwsEC2EnableVgwRoutePropagationInput {
  GatewayId: String!
  RouteTableId: String!
}

input AwsEC2EnableVolumeIOInput {
  DryRun: Boolean
  VolumeId: String!
}

input AwsEC2EnableVpcClassicLinkDnsSupportInput {
  VpcId: String
}

type AwsEC2EnableVpcClassicLinkDnsSupportOutput {
  Return: Boolean
}

input AwsEC2EnableVpcClassicLinkInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEC2EnableVpcClassicLinkOutput {
  Return: Boolean
}

input AwsEC2ExportClientVpnClientCertificateRevocationListInput {
  ClientVpnEndpointId: String!
  DryRun: Boolean
}

type AwsEC2ExportClientVpnClientCertificateRevocationListOutput {
  CertificateRevocationList: String
  Status: AwsEC2ExportClientVpnClientCertificateRevocationListOutputStatus
}

type AwsEC2ExportClientVpnClientCertificateRevocationListOutputStatus {
  Code: String
  Message: String
}

input AwsEC2ExportClientVpnClientConfigurationInput {
  ClientVpnEndpointId: String!
  DryRun: Boolean
}

type AwsEC2ExportClientVpnClientConfigurationOutput {
  ClientConfiguration: String
}

input AwsEC2ExportTransitGatewayRoutesInput {
  TransitGatewayRouteTableId: String!
  Filters: [AwsEC2Sh6Input]
  S3Bucket: String!
  DryRun: Boolean
}

type AwsEC2ExportTransitGatewayRoutesOutput {
  S3Location: String
}

input AwsEC2GetConsoleOutputInput {
  InstanceId: String!
  DryRun: Boolean
  Latest: Boolean
}

type AwsEC2GetConsoleOutputOutput {
  InstanceId: String
  Output: String
  Timestamp: Date
}

input AwsEC2GetConsoleScreenshotInput {
  DryRun: Boolean
  InstanceId: String!
  WakeUp: Boolean
}

type AwsEC2GetConsoleScreenshotOutput {
  ImageData: String
  InstanceId: String
}

input AwsEC2GetEbsDefaultKmsKeyIdInput {
  DryRun: Boolean
}

type AwsEC2GetEbsDefaultKmsKeyIdOutput {
  KmsKeyId: String
}

input AwsEC2GetEbsEncryptionByDefaultInput {
  DryRun: Boolean
}

type AwsEC2GetEbsEncryptionByDefaultOutput {
  EbsEncryptionByDefault: Boolean
}

input AwsEC2GetHostReservationPurchasePreviewInput {
  HostIdSet: [String]!
  OfferingId: String!
}

type AwsEC2GetHostReservationPurchasePreviewOutput {
  CurrencyCode: String
  Purchase: [AwsEC2Szo]
  TotalHourlyPrice: String
  TotalUpfrontPrice: String
}

input AwsEC2GetLaunchTemplateDataInput {
  DryRun: Boolean
  InstanceId: String!
}

type AwsEC2GetLaunchTemplateDataOutput {
  LaunchTemplateData: AwsEC2S97
}

input AwsEC2GetPasswordDataInput {
  InstanceId: String!
  DryRun: Boolean
}

type AwsEC2GetPasswordDataOutput {
  InstanceId: String
  PasswordData: String
  Timestamp: Date
}

input AwsEC2GetReservedInstancesExchangeQuoteInput {
  DryRun: Boolean
  ReservedInstanceIds: [String]!
  TargetConfigurations: [AwsEC2S5Input]
}

type AwsEC2GetReservedInstancesExchangeQuoteOutput {
  CurrencyCode: String
  IsValidExchange: Boolean
  OutputReservedInstancesWillExpireAt: Date
  PaymentDue: String
  ReservedInstanceValueRollup: AwsEC2Szw
  ReservedInstanceValueSet: [AwsEC2GetReservedInstancesExchangeQuoteOutputReservedInstanceValueSet]
  TargetConfigurationValueRollup: AwsEC2Szw
  TargetConfigurationValueSet: [AwsEC2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSet]
  ValidationFailureReason: String
}

type AwsEC2GetReservedInstancesExchangeQuoteOutputReservedInstanceValueSet {
  ReservationValue: AwsEC2Szw
  ReservedInstanceId: String
}

type AwsEC2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSet {
  ReservationValue: AwsEC2Szw
  TargetConfiguration: AwsEC2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSetTargetConfiguration
}

type AwsEC2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSetTargetConfiguration {
  InstanceCount: Int
  OfferingId: String
}

input AwsEC2GetTransitGatewayAttachmentPropagationsInput {
  TransitGatewayAttachmentId: String!
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
}

type AwsEC2GetTransitGatewayAttachmentPropagationsOutput {
  TransitGatewayAttachmentPropagations: [AwsEC2GetTransitGatewayAttachmentPropagationsOutputTransitGatewayAttachmentPropagations]
  NextToken: String
}

type AwsEC2GetTransitGatewayAttachmentPropagationsOutputTransitGatewayAttachmentPropagations {
  TransitGatewayRouteTableId: String
  State: String
}

input AwsEC2GetTransitGatewayRouteTableAssociationsInput {
  TransitGatewayRouteTableId: String!
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
}

type AwsEC2GetTransitGatewayRouteTableAssociationsOutput {
  Associations: [AwsEC2GetTransitGatewayRouteTableAssociationsOutputAssociations]
  NextToken: String
}

type AwsEC2GetTransitGatewayRouteTableAssociationsOutputAssociations {
  TransitGatewayAttachmentId: String
  ResourceId: String
  ResourceType: String
  State: String
}

input AwsEC2GetTransitGatewayRouteTablePropagationsInput {
  TransitGatewayRouteTableId: String!
  Filters: [AwsEC2Sh6Input]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
}

type AwsEC2GetTransitGatewayRouteTablePropagationsOutput {
  TransitGatewayRouteTablePropagations: [AwsEC2GetTransitGatewayRouteTablePropagationsOutputTransitGatewayRouteTablePropagations]
  NextToken: String
}

type AwsEC2GetTransitGatewayRouteTablePropagationsOutputTransitGatewayRouteTablePropagations {
  TransitGatewayAttachmentId: String
  ResourceId: String
  ResourceType: String
  State: String
}

input AwsEC2ImportClientVpnClientCertificateRevocationListInput {
  ClientVpnEndpointId: String!
  CertificateRevocationList: String!
  DryRun: Boolean
}

type AwsEC2ImportClientVpnClientCertificateRevocationListOutput {
  Return: Boolean
}

input AwsEC2ImportImageDiskContainersInput {
  Description: String
  DeviceName: String
  Format: String
  SnapshotId: String
  Url: String
  UserBucket: AwsEC2S10kInput
}

input AwsEC2ImportImageInput {
  Architecture: String
  ClientData: AwsEC2S10hInput
  ClientToken: String
  Description: String
  DiskContainers: [AwsEC2ImportImageDiskContainersInput]
  DryRun: Boolean
  Encrypted: Boolean
  Hypervisor: String
  KmsKeyId: String
  LicenseType: String
  Platform: String
  RoleName: String
}

type AwsEC2ImportImageOutput {
  Architecture: String
  Description: String
  Encrypted: Boolean
  Hypervisor: String
  ImageId: String
  ImportTaskId: String
  KmsKeyId: String
  LicenseType: String
  Platform: String
  Progress: String
  SnapshotDetails: [AwsEC2Snd]
  Status: String
  StatusMessage: String
}

input AwsEC2ImportInstanceDiskImagesInput {
  Description: String
  Image: AwsEC2S10pInput
  Volume: AwsEC2S10qInput
}

input AwsEC2ImportInstanceInput {
  Description: String
  DiskImages: [AwsEC2ImportInstanceDiskImagesInput]
  DryRun: Boolean
  LaunchSpecification: AwsEC2ImportInstanceLaunchSpecificationInput
  Platform: String!
}

input AwsEC2ImportInstanceLaunchSpecificationInput {
  AdditionalInfo: String
  Architecture: String
  GroupIds: [String]
  GroupNames: [String]
  InstanceInitiatedShutdownBehavior: String
  InstanceType: String
  Monitoring: Boolean
  Placement: AwsEC2S6qInput
  PrivateIpAddress: String
  SubnetId: String
  UserData: AwsEC2ImportInstanceLaunchSpecificationUserDataInput
}

input AwsEC2ImportInstanceLaunchSpecificationUserDataInput {
  Data: String
}

type AwsEC2ImportInstanceOutput {
  ConversionTask: AwsEC2Sje
}

input AwsEC2ImportKeyPairInput {
  DryRun: Boolean
  KeyName: String!
  PublicKeyMaterial: JSON!
}

type AwsEC2ImportKeyPairOutput {
  KeyFingerprint: String
  KeyName: String
}

input AwsEC2ImportSnapshotDiskContainerInput {
  Description: String
  Format: String
  Url: String
  UserBucket: AwsEC2S10kInput
}

input AwsEC2ImportSnapshotInput {
  ClientData: AwsEC2S10hInput
  ClientToken: String
  Description: String
  DiskContainer: AwsEC2ImportSnapshotDiskContainerInput
  DryRun: Boolean
  Encrypted: Boolean
  KmsKeyId: String
  RoleName: String
}

type AwsEC2ImportSnapshotOutput {
  Description: String
  ImportTaskId: String
  SnapshotTaskDetail: AwsEC2Snk
}

input AwsEC2ImportVolumeInput {
  AvailabilityZone: String!
  Description: String
  DryRun: Boolean
  Image: AwsEC2S10pInput!
  Volume: AwsEC2S10qInput!
}

type AwsEC2ImportVolumeOutput {
  ConversionTask: AwsEC2Sje
}

"""AWS EC2 Instance Connect (2018-04-02)"""
type AwsEC2InstanceConnect {
  sendSSHPublicKey(input: AwsEC2InstanceConnectSendSSHPublicKeyInput!, config: AwsConfig): AwsEC2InstanceConnectSendSSHPublicKeyOutput
}

input AwsEC2InstanceConnectSendSSHPublicKeyInput {
  InstanceId: String!
  InstanceOSUser: String!
  SSHPublicKey: String!
  AvailabilityZone: String!
}

type AwsEC2InstanceConnectSendSSHPublicKeyOutput {
  RequestId: String
  Success: Boolean
}

input AwsEC2ModifyCapacityReservationInput {
  CapacityReservationId: String!
  InstanceCount: Int
  EndDate: Date
  EndDateType: String
  DryRun: Boolean
}

type AwsEC2ModifyCapacityReservationOutput {
  Return: Boolean
}

input AwsEC2ModifyClientVpnEndpointDnsServersInput {
  CustomDnsServers: [String]
  Enabled: Boolean
}

input AwsEC2ModifyClientVpnEndpointInput {
  ClientVpnEndpointId: String!
  ServerCertificateArn: String
  ConnectionLogOptions: AwsEC2S58Input
  DnsServers: AwsEC2ModifyClientVpnEndpointDnsServersInput
  Description: String
  DryRun: Boolean
}

type AwsEC2ModifyClientVpnEndpointOutput {
  Return: Boolean
}

input AwsEC2ModifyEbsDefaultKmsKeyIdInput {
  KmsKeyId: String!
  DryRun: Boolean
}

type AwsEC2ModifyEbsDefaultKmsKeyIdOutput {
  KmsKeyId: String
}

input AwsEC2ModifyFleetInput {
  DryRun: Boolean
  ExcessCapacityTerminationPolicy: String
  FleetId: String!
  TargetCapacitySpecification: AwsEC2S6rInput!
}

type AwsEC2ModifyFleetOutput {
  Return: Boolean
}

input AwsEC2ModifyFpgaImageAttributeInput {
  DryRun: Boolean
  FpgaImageId: String!
  Attribute: String
  OperationType: String
  UserIds: [String]
  UserGroups: [String]
  ProductCodes: [String]
  LoadPermission: AwsEC2ModifyFpgaImageAttributeLoadPermissionInput
  Description: String
  Name: String
}

input AwsEC2ModifyFpgaImageAttributeLoadPermissionInput {
  Add: [AwsEC2S11gInput]
  Remove: [AwsEC2S11gInput]
}

type AwsEC2ModifyFpgaImageAttributeOutput {
  FpgaImageAttribute: AwsEC2Sla
}

input AwsEC2ModifyHostsInput {
  AutoPlacement: String
  HostIds: [String]!
  HostRecovery: String
}

type AwsEC2ModifyHostsOutput {
  Successful: [String]
  Unsuccessful: [AwsEC2Sn]
}

input AwsEC2ModifyIdentityIdFormatInput {
  PrincipalArn: String!
  Resource: String!
  UseLongIds: Boolean!
}

input AwsEC2ModifyIdFormatInput {
  Resource: String!
  UseLongIds: Boolean!
}

input AwsEC2ModifyImageAttributeInput {
  Attribute: String
  Description: AwsEC2S65Input
  ImageId: String!
  LaunchPermission: AwsEC2ModifyImageAttributeLaunchPermissionInput
  OperationType: String
  ProductCodes: [String]
  UserGroups: [String]
  UserIds: [String]
  Value: String
  DryRun: Boolean
}

input AwsEC2ModifyImageAttributeLaunchPermissionInput {
  Add: [AwsEC2SmtInput]
  Remove: [AwsEC2SmtInput]
}

input AwsEC2ModifyInstanceAttributeBlockDeviceMappingsEbsInput {
  DeleteOnTermination: Boolean
  VolumeId: String
}

input AwsEC2ModifyInstanceAttributeBlockDeviceMappingsInput {
  DeviceName: String
  Ebs: AwsEC2ModifyInstanceAttributeBlockDeviceMappingsEbsInput
  NoDevice: String
  VirtualName: String
}

input AwsEC2ModifyInstanceAttributeInput {
  SourceDestCheck: AwsEC2SnrInput
  Attribute: String
  BlockDeviceMappings: [AwsEC2ModifyInstanceAttributeBlockDeviceMappingsInput]
  DisableApiTermination: AwsEC2SnrInput
  DryRun: Boolean
  EbsOptimized: AwsEC2SnrInput
  EnaSupport: AwsEC2SnrInput
  Groups: [String]
  InstanceId: String!
  InstanceInitiatedShutdownBehavior: AwsEC2S65Input
  InstanceType: AwsEC2S65Input
  Kernel: AwsEC2S65Input
  Ramdisk: AwsEC2S65Input
  SriovNetSupport: AwsEC2S65Input
  UserData: AwsEC2ModifyInstanceAttributeUserDataInput
  Value: String
}

input AwsEC2ModifyInstanceAttributeUserDataInput {
  Value: JSON
}

input AwsEC2ModifyInstanceCapacityReservationAttributesInput {
  InstanceId: String!
  CapacityReservationSpecification: AwsEC2S11wInput!
  DryRun: Boolean
}

type AwsEC2ModifyInstanceCapacityReservationAttributesOutput {
  Return: Boolean
}

input AwsEC2ModifyInstanceCreditSpecificationInput {
  DryRun: Boolean
  ClientToken: String
  InstanceCreditSpecifications: [AwsEC2ModifyInstanceCreditSpecificationInstanceCreditSpecificationsInput]!
}

input AwsEC2ModifyInstanceCreditSpecificationInstanceCreditSpecificationsInput {
  InstanceId: String
  CpuCredits: String
}

type AwsEC2ModifyInstanceCreditSpecificationOutput {
  SuccessfulInstanceCreditSpecifications: [AwsEC2ModifyInstanceCreditSpecificationOutputSuccessfulInstanceCreditSpecifications]
  UnsuccessfulInstanceCreditSpecifications: [AwsEC2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecifications]
}

type AwsEC2ModifyInstanceCreditSpecificationOutputSuccessfulInstanceCreditSpecifications {
  InstanceId: String
}

type AwsEC2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecifications {
  InstanceId: String
  Error: AwsEC2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecificationsError
}

type AwsEC2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecificationsError {
  Code: String
  Message: String
}

input AwsEC2ModifyInstanceEventStartTimeInput {
  DryRun: Boolean
  InstanceId: String!
  InstanceEventId: String!
  NotBefore: Date!
}

type AwsEC2ModifyInstanceEventStartTimeOutput {
  Event: AwsEC2So2
}

input AwsEC2ModifyInstancePlacementInput {
  Affinity: String
  GroupName: String
  HostId: String
  InstanceId: String!
  Tenancy: String
  PartitionNumber: Int
}

type AwsEC2ModifyInstancePlacementOutput {
  Return: Boolean
}

input AwsEC2ModifyLaunchTemplateInput {
  DryRun: Boolean
  ClientToken: String
  LaunchTemplateId: String
  LaunchTemplateName: String
  DefaultVersion: String
}

type AwsEC2ModifyLaunchTemplateOutput {
  LaunchTemplate: AwsEC2S93
}

input AwsEC2ModifyNetworkInterfaceAttributeAttachmentInput {
  AttachmentId: String
  DeleteOnTermination: Boolean
}

input AwsEC2ModifyNetworkInterfaceAttributeInput {
  Attachment: AwsEC2ModifyNetworkInterfaceAttributeAttachmentInput
  Description: AwsEC2S65Input
  DryRun: Boolean
  Groups: [String]
  NetworkInterfaceId: String!
  SourceDestCheck: AwsEC2SnrInput
}

input AwsEC2ModifyReservedInstancesInput {
  ReservedInstancesIds: [String]!
  ClientToken: String
  TargetConfigurations: [AwsEC2SroInput]!
}

type AwsEC2ModifyReservedInstancesOutput {
  ReservedInstancesModificationId: String
}

input AwsEC2ModifySnapshotAttributeCreateVolumePermissionInput {
  Add: [AwsEC2SswInput]
  Remove: [AwsEC2SswInput]
}

input AwsEC2ModifySnapshotAttributeInput {
  Attribute: String
  CreateVolumePermission: AwsEC2ModifySnapshotAttributeCreateVolumePermissionInput
  GroupNames: [String]
  OperationType: String
  SnapshotId: String!
  UserIds: [String]
  DryRun: Boolean
}

input AwsEC2ModifySpotFleetRequestInput {
  ExcessCapacityTerminationPolicy: String
  SpotFleetRequestId: String!
  TargetCapacity: Int
  OnDemandTargetCapacity: Int
}

type AwsEC2ModifySpotFleetRequestOutput {
  Return: Boolean
}

input AwsEC2ModifySubnetAttributeInput {
  AssignIpv6AddressOnCreation: AwsEC2SnrInput
  MapPublicIpOnLaunch: AwsEC2SnrInput
  SubnetId: String!
}

input AwsEC2ModifyTrafficMirrorFilterNetworkServicesInput {
  TrafficMirrorFilterId: String!
  AddNetworkServices: [String]
  RemoveNetworkServices: [String]
  DryRun: Boolean
}

type AwsEC2ModifyTrafficMirrorFilterNetworkServicesOutput {
  TrafficMirrorFilter: AwsEC2Sc5
}

input AwsEC2ModifyTrafficMirrorFilterRuleInput {
  TrafficMirrorFilterRuleId: String!
  TrafficDirection: String
  RuleNumber: Int
  RuleAction: String
  DestinationPortRange: AwsEC2SceInput
  SourcePortRange: AwsEC2SceInput
  Protocol: Int
  DestinationCidrBlock: String
  SourceCidrBlock: String
  Description: String
  RemoveFields: [String]
  DryRun: Boolean
}

type AwsEC2ModifyTrafficMirrorFilterRuleOutput {
  TrafficMirrorFilterRule: AwsEC2Sc7
}

input AwsEC2ModifyTrafficMirrorSessionInput {
  TrafficMirrorSessionId: String!
  TrafficMirrorTargetId: String
  TrafficMirrorFilterId: String
  PacketLength: Int
  SessionNumber: Int
  VirtualNetworkId: Int
  Description: String
  RemoveFields: [String]
  DryRun: Boolean
}

type AwsEC2ModifyTrafficMirrorSessionOutput {
  TrafficMirrorSession: AwsEC2Sci
}

input AwsEC2ModifyTransitGatewayVpcAttachmentInput {
  TransitGatewayAttachmentId: String!
  AddSubnetIds: [String]
  RemoveSubnetIds: [String]
  Options: AwsEC2ModifyTransitGatewayVpcAttachmentOptionsInput
  DryRun: Boolean
}

input AwsEC2ModifyTransitGatewayVpcAttachmentOptionsInput {
  DnsSupport: String
  Ipv6Support: String
}

type AwsEC2ModifyTransitGatewayVpcAttachmentOutput {
  TransitGatewayVpcAttachment: AwsEC2Sb
}

input AwsEC2ModifyVolumeAttributeInput {
  AutoEnableIO: AwsEC2SnrInput
  VolumeId: String!
  DryRun: Boolean
}

input AwsEC2ModifyVolumeInput {
  DryRun: Boolean
  VolumeId: String!
  Size: Int
  VolumeType: String
  Iops: Int
}

type AwsEC2ModifyVolumeOutput {
  VolumeModification: AwsEC2Swj
}

input AwsEC2ModifyVpcAttributeInput {
  EnableDnsHostnames: AwsEC2SnrInput
  EnableDnsSupport: AwsEC2SnrInput
  VpcId: String!
}

input AwsEC2ModifyVpcEndpointConnectionNotificationInput {
  DryRun: Boolean
  ConnectionNotificationId: String!
  ConnectionNotificationArn: String
  ConnectionEvents: [String]
}

type AwsEC2ModifyVpcEndpointConnectionNotificationOutput {
  ReturnValue: Boolean
}

input AwsEC2ModifyVpcEndpointInput {
  DryRun: Boolean
  VpcEndpointId: String!
  ResetPolicy: Boolean
  PolicyDocument: String
  AddRouteTableIds: [String]
  RemoveRouteTableIds: [String]
  AddSubnetIds: [String]
  RemoveSubnetIds: [String]
  AddSecurityGroupIds: [String]
  RemoveSecurityGroupIds: [String]
  PrivateDnsEnabled: Boolean
}

type AwsEC2ModifyVpcEndpointOutput {
  Return: Boolean
}

input AwsEC2ModifyVpcEndpointServiceConfigurationInput {
  DryRun: Boolean
  ServiceId: String!
  AcceptanceRequired: Boolean
  AddNetworkLoadBalancerArns: [String]
  RemoveNetworkLoadBalancerArns: [String]
}

type AwsEC2ModifyVpcEndpointServiceConfigurationOutput {
  Return: Boolean
}

input AwsEC2ModifyVpcEndpointServicePermissionsInput {
  DryRun: Boolean
  ServiceId: String!
  AddAllowedPrincipals: [String]
  RemoveAllowedPrincipals: [String]
}

type AwsEC2ModifyVpcEndpointServicePermissionsOutput {
  ReturnValue: Boolean
}

input AwsEC2ModifyVpcPeeringConnectionOptionsInput {
  AccepterPeeringConnectionOptions: AwsEC2S13gInput
  DryRun: Boolean
  RequesterPeeringConnectionOptions: AwsEC2S13gInput
  VpcPeeringConnectionId: String!
}

type AwsEC2ModifyVpcPeeringConnectionOptionsOutput {
  AccepterPeeringConnectionOptions: AwsEC2S13i
  RequesterPeeringConnectionOptions: AwsEC2S13i
}

input AwsEC2ModifyVpcTenancyInput {
  VpcId: String!
  InstanceTenancy: String!
  DryRun: Boolean
}

type AwsEC2ModifyVpcTenancyOutput {
  ReturnValue: Boolean
}

input AwsEC2ModifyVpnConnectionInput {
  VpnConnectionId: String!
  TransitGatewayId: String
  VpnGatewayId: String
  DryRun: Boolean
}

type AwsEC2ModifyVpnConnectionOutput {
  VpnConnection: AwsEC2Se9
}

input AwsEC2MonitorInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

type AwsEC2MonitorInstancesOutput {
  InstanceMonitorings: [AwsEC2S13q]
}

input AwsEC2MoveAddressToVpcInput {
  DryRun: Boolean
  PublicIp: String!
}

type AwsEC2MoveAddressToVpcOutput {
  AllocationId: String
  Status: String
}

input AwsEC2ProvisionByoipCidrCidrAuthorizationContextInput {
  Message: String!
  Signature: String!
}

input AwsEC2ProvisionByoipCidrInput {
  Cidr: String!
  CidrAuthorizationContext: AwsEC2ProvisionByoipCidrCidrAuthorizationContextInput
  Description: String
  DryRun: Boolean
}

type AwsEC2ProvisionByoipCidrOutput {
  ByoipCidr: AwsEC2S12
}

input AwsEC2PurchaseHostReservationInput {
  ClientToken: String
  CurrencyCode: String
  HostIdSet: [String]!
  LimitPrice: String
  OfferingId: String!
}

type AwsEC2PurchaseHostReservationOutput {
  ClientToken: String
  CurrencyCode: String
  Purchase: [AwsEC2Szo]
  TotalHourlyPrice: String
  TotalUpfrontPrice: String
}

input AwsEC2PurchaseReservedInstancesOfferingInput {
  InstanceCount: Int!
  ReservedInstancesOfferingId: String!
  DryRun: Boolean
  LimitPrice: AwsEC2PurchaseReservedInstancesOfferingLimitPriceInput
}

input AwsEC2PurchaseReservedInstancesOfferingLimitPriceInput {
  Amount: JSON
  CurrencyCode: String
}

type AwsEC2PurchaseReservedInstancesOfferingOutput {
  ReservedInstancesId: String
}

input AwsEC2PurchaseScheduledInstancesInput {
  ClientToken: String
  DryRun: Boolean
  PurchaseRequests: [AwsEC2PurchaseScheduledInstancesPurchaseRequestsInput]!
}

type AwsEC2PurchaseScheduledInstancesOutput {
  ScheduledInstanceSet: [AwsEC2Ssh]
}

input AwsEC2PurchaseScheduledInstancesPurchaseRequestsInput {
  InstanceCount: Int!
  PurchaseToken: String!
}

input AwsEC2RebootInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

input AwsEC2RegisterImageInput {
  ImageLocation: String
  Architecture: String
  BlockDeviceMappings: [AwsEC2S7iInput]
  Description: String
  DryRun: Boolean
  EnaSupport: Boolean
  KernelId: String
  Name: String!
  BillingProducts: [String]
  RamdiskId: String
  RootDeviceName: String
  SriovNetSupport: String
  VirtualizationType: String
}

type AwsEC2RegisterImageOutput {
  ImageId: String
}

input AwsEC2RejectTransitGatewayVpcAttachmentInput {
  TransitGatewayAttachmentId: String!
  DryRun: Boolean
}

type AwsEC2RejectTransitGatewayVpcAttachmentOutput {
  TransitGatewayVpcAttachment: AwsEC2Sb
}

input AwsEC2RejectVpcEndpointConnectionsInput {
  DryRun: Boolean
  ServiceId: String!
  VpcEndpointIds: [String]!
}

type AwsEC2RejectVpcEndpointConnectionsOutput {
  Unsuccessful: [AwsEC2Sn]
}

input AwsEC2RejectVpcPeeringConnectionInput {
  DryRun: Boolean
  VpcPeeringConnectionId: String!
}

type AwsEC2RejectVpcPeeringConnectionOutput {
  Return: Boolean
}

input AwsEC2ReleaseAddressInput {
  AllocationId: String
  PublicIp: String
  DryRun: Boolean
}

input AwsEC2ReleaseHostsInput {
  HostIds: [String]!
}

type AwsEC2ReleaseHostsOutput {
  Successful: [String]
  Unsuccessful: [AwsEC2Sn]
}

input AwsEC2ReplaceIamInstanceProfileAssociationInput {
  IamInstanceProfile: AwsEC2S1yInput!
  AssociationId: String!
}

type AwsEC2ReplaceIamInstanceProfileAssociationOutput {
  IamInstanceProfileAssociation: AwsEC2S20
}

input AwsEC2ReplaceNetworkAclAssociationInput {
  AssociationId: String!
  DryRun: Boolean
  NetworkAclId: String!
}

type AwsEC2ReplaceNetworkAclAssociationOutput {
  NewAssociationId: String
}

input AwsEC2ReplaceNetworkAclEntryInput {
  CidrBlock: String
  DryRun: Boolean
  Egress: Boolean!
  IcmpTypeCode: AwsEC2SabInput
  Ipv6CidrBlock: String
  NetworkAclId: String!
  PortRange: AwsEC2SacInput
  Protocol: String!
  RuleAction: String!
  RuleNumber: Int!
}

input AwsEC2ReplaceRouteInput {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DryRun: Boolean
  EgressOnlyInternetGatewayId: String
  GatewayId: String
  InstanceId: String
  NatGatewayId: String
  TransitGatewayId: String
  NetworkInterfaceId: String
  RouteTableId: String!
  VpcPeeringConnectionId: String
}

input AwsEC2ReplaceRouteTableAssociationInput {
  AssociationId: String!
  DryRun: Boolean
  RouteTableId: String!
}

type AwsEC2ReplaceRouteTableAssociationOutput {
  NewAssociationId: String
}

input AwsEC2ReplaceTransitGatewayRouteInput {
  DestinationCidrBlock: String!
  TransitGatewayRouteTableId: String!
  TransitGatewayAttachmentId: String
  Blackhole: Boolean
  DryRun: Boolean
}

type AwsEC2ReplaceTransitGatewayRouteOutput {
  Route: AwsEC2Scz
}

input AwsEC2ReportInstanceStatusInput {
  Description: String
  DryRun: Boolean
  EndTime: Date
  Instances: [String]!
  ReasonCodes: [String]!
  StartTime: Date
  Status: String!
}

input AwsEC2RequestSpotFleetInput {
  DryRun: Boolean
  SpotFleetRequestConfig: AwsEC2StjInput!
}

type AwsEC2RequestSpotFleetOutput {
  SpotFleetRequestId: String
}

input AwsEC2RequestSpotInstancesInput {
  AvailabilityZoneGroup: String
  BlockDurationMinutes: Int
  ClientToken: String
  DryRun: Boolean
  InstanceCount: Int
  LaunchGroup: String
  LaunchSpecification: AwsEC2RequestSpotInstancesLaunchSpecificationInput
  SpotPrice: String
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

input AwsEC2RequestSpotInstancesLaunchSpecificationInput {
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  AddressingType: String
  BlockDeviceMappings: [AwsEC2S7iInput]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S1yInput
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEC2SubInput
  NetworkInterfaces: [AwsEC2StqInput]
  Placement: AwsEC2StsInput
  RamdiskId: String
  SubnetId: String
  UserData: String
}

type AwsEC2RequestSpotInstancesOutput {
  SpotInstanceRequests: [AwsEC2Su8]
}

input AwsEC2ResetEbsDefaultKmsKeyIdInput {
  DryRun: Boolean
}

type AwsEC2ResetEbsDefaultKmsKeyIdOutput {
  KmsKeyId: String
}

input AwsEC2ResetFpgaImageAttributeInput {
  DryRun: Boolean
  FpgaImageId: String!
  Attribute: String
}

type AwsEC2ResetFpgaImageAttributeOutput {
  Return: Boolean
}

input AwsEC2ResetImageAttributeInput {
  Attribute: String!
  ImageId: String!
  DryRun: Boolean
}

input AwsEC2ResetInstanceAttributeInput {
  Attribute: String!
  DryRun: Boolean
  InstanceId: String!
}

input AwsEC2ResetNetworkInterfaceAttributeInput {
  DryRun: Boolean
  NetworkInterfaceId: String!
  SourceDestCheck: String
}

input AwsEC2ResetSnapshotAttributeInput {
  Attribute: String!
  SnapshotId: String!
  DryRun: Boolean
}

input AwsEC2RestoreAddressToClassicInput {
  DryRun: Boolean
  PublicIp: String!
}

type AwsEC2RestoreAddressToClassicOutput {
  PublicIp: String
  Status: String
}

input AwsEC2RevokeClientVpnIngressInput {
  ClientVpnEndpointId: String!
  TargetNetworkCidr: String!
  AccessGroupId: String
  RevokeAllGroups: Boolean
  DryRun: Boolean
}

type AwsEC2RevokeClientVpnIngressOutput {
  Status: AwsEC2S30
}

input AwsEC2RevokeSecurityGroupEgressInput {
  DryRun: Boolean
  GroupId: String!
  IpPermissions: [AwsEC2S33Input]
  CidrIp: String
  FromPort: Int
  IpProtocol: String
  ToPort: Int
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
}

input AwsEC2RevokeSecurityGroupIngressInput {
  CidrIp: String
  FromPort: Int
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEC2S33Input]
  IpProtocol: String
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
  ToPort: Int
  DryRun: Boolean
}

input AwsEC2RunInstancesCpuOptionsInput {
  CoreCount: Int
  ThreadsPerCore: Int
}

input AwsEC2RunInstancesElasticInferenceAcceleratorsInput {
  Type: String!
}

input AwsEC2RunInstancesHibernationOptionsInput {
  Configured: Boolean
}

input AwsEC2RunInstancesInput {
  BlockDeviceMappings: [AwsEC2S7iInput]
  ImageId: String
  InstanceType: String
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S9eInput]
  KernelId: String
  KeyName: String
  MaxCount: Int!
  MinCount: Int!
  Monitoring: AwsEC2SubInput
  Placement: AwsEC2S6qInput
  RamdiskId: String
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  SubnetId: String
  UserData: String
  AdditionalInfo: String
  ClientToken: String
  DisableApiTermination: Boolean
  DryRun: Boolean
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S1yInput
  InstanceInitiatedShutdownBehavior: String
  NetworkInterfaces: [AwsEC2StqInput]
  PrivateIpAddress: String
  ElasticGpuSpecification: [AwsEC2S8lInput]
  ElasticInferenceAccelerators: [AwsEC2RunInstancesElasticInferenceAcceleratorsInput]
  TagSpecifications: [AwsEC2S19Input]
  LaunchTemplate: AwsEC2RunInstancesLaunchTemplateInput
  InstanceMarketOptions: AwsEC2RunInstancesInstanceMarketOptionsInput
  CreditSpecification: AwsEC2S8uInput
  CpuOptions: AwsEC2RunInstancesCpuOptionsInput
  CapacityReservationSpecification: AwsEC2S11wInput
  HibernationOptions: AwsEC2RunInstancesHibernationOptionsInput
  LicenseSpecifications: [AwsEC2RunInstancesLicenseSpecificationsInput]
}

input AwsEC2RunInstancesInstanceMarketOptionsInput {
  MarketType: String
  SpotOptions: AwsEC2RunInstancesInstanceMarketOptionsSpotOptionsInput
}

input AwsEC2RunInstancesInstanceMarketOptionsSpotOptionsInput {
  MaxPrice: String
  SpotInstanceType: String
  BlockDurationMinutes: Int
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

input AwsEC2RunInstancesLaunchTemplateInput {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsEC2RunInstancesLicenseSpecificationsInput {
  LicenseConfigurationArn: String
}

input AwsEC2RunScheduledInstancesInput {
  ClientToken: String
  DryRun: Boolean
  InstanceCount: Int
  LaunchSpecification: AwsEC2RunScheduledInstancesLaunchSpecificationInput!
  ScheduledInstanceId: String!
}

input AwsEC2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsEbsInput {
  DeleteOnTermination: Boolean
  Encrypted: Boolean
  Iops: Int
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsInput {
  DeviceName: String
  Ebs: AwsEC2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsEbsInput
  NoDevice: String
  VirtualName: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationIamInstanceProfileInput {
  Arn: String
  Name: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationInput {
  BlockDeviceMappings: [AwsEC2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsInput]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2RunScheduledInstancesLaunchSpecificationIamInstanceProfileInput
  ImageId: String!
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEC2RunScheduledInstancesLaunchSpecificationMonitoringInput
  NetworkInterfaces: [AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesInput]
  Placement: AwsEC2RunScheduledInstancesLaunchSpecificationPlacementInput
  RamdiskId: String
  SecurityGroupIds: [String]
  SubnetId: String
  UserData: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationMonitoringInput {
  Enabled: Boolean
}

input AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesInput {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesIpv6AddressesInput]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddressConfigs: [AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesPrivateIpAddressConfigsInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesIpv6AddressesInput {
  Ipv6Address: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesPrivateIpAddressConfigsInput {
  Primary: Boolean
  PrivateIpAddress: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationPlacementInput {
  AvailabilityZone: String
  GroupName: String
}

type AwsEC2RunScheduledInstancesOutput {
  InstanceIdSet: [String]
}

input AwsEC2S10hInput {
  Comment: String
  UploadEnd: Date
  UploadSize: JSON
  UploadStart: Date
}

input AwsEC2S10kInput {
  S3Bucket: String
  S3Key: String
}

input AwsEC2S10pInput {
  Bytes: JSON!
  Format: String!
  ImportManifestUrl: String!
}

input AwsEC2S10qInput {
  Size: JSON!
}

input AwsEC2S11gInput {
  Group: String
  UserId: String
}

input AwsEC2S11wInput {
  CapacityReservationPreference: String
  CapacityReservationTarget: AwsEC2S8yInput
}

type AwsEC2S12 {
  Cidr: String
  Description: String
  StatusMessage: String
  State: String
}

input AwsEC2S13gInput {
  AllowDnsResolutionFromRemoteVpc: Boolean
  AllowEgressFromLocalClassicLinkToRemoteVpc: Boolean
  AllowEgressFromLocalVpcToRemoteClassicLink: Boolean
}

type AwsEC2S13i {
  AllowDnsResolutionFromRemoteVpc: Boolean
  AllowEgressFromLocalClassicLinkToRemoteVpc: Boolean
  AllowEgressFromLocalVpcToRemoteClassicLink: Boolean
}

type AwsEC2S13q {
  InstanceId: String
  Monitoring: AwsEC2Soj
}

type AwsEC2S16i {
  CurrentState: AwsEC2So5
  InstanceId: String
  PreviousState: AwsEC2So5
}

input AwsEC2S19Input {
  ResourceType: String
  Tags: [AwsEC2SiInput]
}

type AwsEC2S1u {
  Code: String
  Message: String
}

type AwsEC2S1y {
  Arn: String
  Name: String
}

input AwsEC2S1yInput {
  Arn: String
  Name: String
}

type AwsEC2S20 {
  AssociationId: String
  InstanceId: String
  IamInstanceProfile: AwsEC2S21
  State: String
  Timestamp: Date
}

type AwsEC2S21 {
  Arn: String
  Id: String
}

type AwsEC2S27 {
  AssociationId: String
  Ipv6CidrBlock: String
  Ipv6CidrBlockState: AwsEC2S27Ipv6CidrBlockState
}

type AwsEC2S27Ipv6CidrBlockState {
  State: String
  StatusMessage: String
}

type AwsEC2S2c {
  TransitGatewayRouteTableId: String
  TransitGatewayAttachmentId: String
  ResourceId: String
  ResourceType: String
  State: String
}

type AwsEC2S2h {
  AssociationId: String
  Ipv6CidrBlock: String
  Ipv6CidrBlockState: AwsEC2S2i
}

type AwsEC2S2i {
  State: String
  StatusMessage: String
}

type AwsEC2S2k {
  AssociationId: String
  CidrBlock: String
  CidrBlockState: AwsEC2S2i
}

type AwsEC2S2s {
  AttachTime: Date
  Device: String
  InstanceId: String
  State: String
  VolumeId: String
  DeleteOnTermination: Boolean
}

type AwsEC2S2w {
  State: String
  VpcId: String
}

type AwsEC2S30 {
  Code: String
  Message: String
}

type AwsEC2S33 {
  FromPort: Int
  IpProtocol: String
  IpRanges: [AwsEC2S33IpRanges]
  Ipv6Ranges: [AwsEC2S33Ipv6Ranges]
  PrefixListIds: [AwsEC2S33PrefixListIds]
  ToPort: Int
  UserIdGroupPairs: [AwsEC2S3c]
}

input AwsEC2S33Input {
  FromPort: Int
  IpProtocol: String
  IpRanges: [AwsEC2S33IpRangesInput]
  Ipv6Ranges: [AwsEC2S33Ipv6RangesInput]
  PrefixListIds: [AwsEC2S33PrefixListIdsInput]
  ToPort: Int
  UserIdGroupPairs: [AwsEC2S3cInput]
}

type AwsEC2S33IpRanges {
  CidrIp: String
  Description: String
}

input AwsEC2S33IpRangesInput {
  CidrIp: String
  Description: String
}

type AwsEC2S33Ipv6Ranges {
  CidrIpv6: String
  Description: String
}

input AwsEC2S33Ipv6RangesInput {
  CidrIpv6: String
  Description: String
}

type AwsEC2S33PrefixListIds {
  Description: String
  PrefixListId: String
}

input AwsEC2S33PrefixListIdsInput {
  Description: String
  PrefixListId: String
}

type AwsEC2S3c {
  Description: String
  GroupId: String
  GroupName: String
  PeeringStatus: String
  UserId: String
  VpcId: String
  VpcPeeringConnectionId: String
}

input AwsEC2S3cInput {
  Description: String
  GroupId: String
  GroupName: String
  PeeringStatus: String
  UserId: String
  VpcId: String
  VpcPeeringConnectionId: String
}

type AwsEC2S3f {
  S3: AwsEC2S3fS3
}

input AwsEC2S3fInput {
  S3: AwsEC2S3fS3Input
}

type AwsEC2S3fS3 {
  AWSAccessKeyId: String
  Bucket: String
  Prefix: String
  UploadPolicy: JSON
  UploadPolicySignature: String
}

input AwsEC2S3fS3Input {
  AWSAccessKeyId: String
  Bucket: String
  Prefix: String
  UploadPolicy: JSON
  UploadPolicySignature: String
}

type AwsEC2S3j {
  BundleId: String
  BundleTaskError: AwsEC2S3jBundleTaskError
  InstanceId: String
  Progress: String
  StartTime: Date
  State: String
  Storage: AwsEC2S3f
  UpdateTime: Date
}

type AwsEC2S3jBundleTaskError {
  Code: String
  Message: String
}

type AwsEC2S3w {
  ClientToken: String
  CreateDate: Date
  InstanceCounts: [AwsEC2S3wInstanceCounts]
  PriceSchedules: [AwsEC2S3wPriceSchedules]
  ReservedInstancesId: String
  ReservedInstancesListingId: String
  Status: String
  StatusMessage: String
  Tags: [AwsEC2Si]
  UpdateDate: Date
}

type AwsEC2S3wInstanceCounts {
  InstanceCount: Int
  State: String
}

type AwsEC2S3wPriceSchedules {
  Active: Boolean
  CurrencyCode: String
  Price: JSON
  Term: JSON
}

type AwsEC2S50 {
  CapacityReservationId: String
  InstanceType: String
  InstancePlatform: String
  AvailabilityZone: String
  Tenancy: String
  TotalInstanceCount: Int
  AvailableInstanceCount: Int
  EbsOptimized: Boolean
  EphemeralStorage: Boolean
  State: String
  EndDate: Date
  EndDateType: String
  InstanceMatchCriteria: String
  CreateDate: Date
  Tags: [AwsEC2Si]
}

input AwsEC2S58Input {
  Enabled: Boolean
  CloudwatchLogGroup: String
  CloudwatchLogStream: String
}

type AwsEC2S5b {
  Code: String
  Message: String
}

type AwsEC2S5f {
  Code: String
  Message: String
}

input AwsEC2S5Input {
  InstanceCount: Int
  OfferingId: String!
}

type AwsEC2S5k {
  BgpAsn: String
  CustomerGatewayId: String
  IpAddress: String
  State: String
  Type: String
  Tags: [AwsEC2Si]
}

type AwsEC2S5n {
  AvailabilityZone: String
  AvailabilityZoneId: String
  AvailableIpAddressCount: Int
  CidrBlock: String
  DefaultForAz: Boolean
  MapPublicIpOnLaunch: Boolean
  State: String
  SubnetId: String
  VpcId: String
  OwnerId: String
  AssignIpv6AddressOnCreation: Boolean
  Ipv6CidrBlockAssociationSet: [AwsEC2S27]
  Tags: [AwsEC2Si]
  SubnetArn: String
}

type AwsEC2S5s {
  CidrBlock: String
  DhcpOptionsId: String
  State: String
  VpcId: String
  OwnerId: String
  InstanceTenancy: String
  Ipv6CidrBlockAssociationSet: [AwsEC2S2h]
  CidrBlockAssociationSet: [AwsEC2S2k]
  IsDefault: Boolean
  Tags: [AwsEC2Si]
}

type AwsEC2S61 {
  DhcpConfigurations: [AwsEC2S61DhcpConfigurations]
  DhcpOptionsId: String
  OwnerId: String
  Tags: [AwsEC2Si]
}

type AwsEC2S61DhcpConfigurations {
  Key: String
  Values: [AwsEC2S65]
}

type AwsEC2S65 {
  Value: String
}

input AwsEC2S65Input {
  Value: String
}

type AwsEC2S68 {
  Attachments: [AwsEC2S69]
  EgressOnlyInternetGatewayId: String
}

type AwsEC2S69 {
  State: String
  VpcId: String
}

type AwsEC2S6q {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  PartitionNumber: Int
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

input AwsEC2S6qInput {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  PartitionNumber: Int
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

input AwsEC2S6rInput {
  TotalTargetCapacity: Int!
  OnDemandTargetCapacity: Int
  SpotTargetCapacity: Int
  DefaultTargetCapacityType: String
}

type AwsEC2S6y {
  LaunchTemplateSpecification: AwsEC2S6z
  Overrides: AwsEC2S70
}

type AwsEC2S6z {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsEC2S6zInput {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

type AwsEC2S70 {
  InstanceType: String
  MaxPrice: String
  SubnetId: String
  AvailabilityZone: String
  WeightedCapacity: JSON
  Priority: JSON
  Placement: AwsEC2S70Placement
}

type AwsEC2S70Placement {
  GroupName: String
}

input AwsEC2S7eInput {
  Bucket: String
  Key: String
}

type AwsEC2S7i {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEC2S7iEbs
  NoDevice: String
}

type AwsEC2S7iEbs {
  DeleteOnTermination: Boolean
  Iops: Int
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
  Encrypted: Boolean
  KmsKeyId: String
}

input AwsEC2S7iEbsInput {
  DeleteOnTermination: Boolean
  Iops: Int
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
  Encrypted: Boolean
  KmsKeyId: String
}

input AwsEC2S7iInput {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEC2S7iEbsInput
  NoDevice: String
}

type AwsEC2S7s {
  Description: String
  ExportTaskId: String
  ExportToS3Task: AwsEC2S7sExportToS3Task
  InstanceExportDetails: AwsEC2S7sInstanceExportDetails
  State: String
  StatusMessage: String
}

type AwsEC2S7sExportToS3Task {
  ContainerFormat: String
  DiskImageFormat: String
  S3Bucket: String
  S3Key: String
}

type AwsEC2S7sInstanceExportDetails {
  InstanceId: String
  TargetEnvironment: String
}

type AwsEC2S7y {
  Attachments: [AwsEC2S69]
  InternetGatewayId: String
  OwnerId: String
  Tags: [AwsEC2Si]
}

input AwsEC2S83BlockDeviceMappingsEbsInput {
  Encrypted: Boolean
  DeleteOnTermination: Boolean
  Iops: Int
  KmsKeyId: String
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

input AwsEC2S83BlockDeviceMappingsInput {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEC2S83BlockDeviceMappingsEbsInput
  NoDevice: String
}

input AwsEC2S83CapacityReservationSpecificationInput {
  CapacityReservationPreference: String
  CapacityReservationTarget: AwsEC2S8yInput
}

input AwsEC2S83CpuOptionsInput {
  CoreCount: Int
  ThreadsPerCore: Int
}

input AwsEC2S83ElasticInferenceAcceleratorsInput {
  Type: String!
}

input AwsEC2S83HibernationOptionsInput {
  Configured: Boolean
}

input AwsEC2S83IamInstanceProfileInput {
  Arn: String
  Name: String
}

input AwsEC2S83Input {
  KernelId: String
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S83IamInstanceProfileInput
  BlockDeviceMappings: [AwsEC2S83BlockDeviceMappingsInput]
  NetworkInterfaces: [AwsEC2S83NetworkInterfacesInput]
  ImageId: String
  InstanceType: String
  KeyName: String
  Monitoring: AwsEC2S83MonitoringInput
  Placement: AwsEC2S83PlacementInput
  RamDiskId: String
  DisableApiTermination: Boolean
  InstanceInitiatedShutdownBehavior: String
  UserData: String
  TagSpecifications: [AwsEC2S83TagSpecificationsInput]
  ElasticGpuSpecifications: [AwsEC2S8lInput]
  ElasticInferenceAccelerators: [AwsEC2S83ElasticInferenceAcceleratorsInput]
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  InstanceMarketOptions: AwsEC2S83InstanceMarketOptionsInput
  CreditSpecification: AwsEC2S8uInput
  CpuOptions: AwsEC2S83CpuOptionsInput
  CapacityReservationSpecification: AwsEC2S83CapacityReservationSpecificationInput
  LicenseSpecifications: [AwsEC2S83LicenseSpecificationsInput]
  HibernationOptions: AwsEC2S83HibernationOptionsInput
}

input AwsEC2S83InstanceMarketOptionsInput {
  MarketType: String
  SpotOptions: AwsEC2S83InstanceMarketOptionsSpotOptionsInput
}

input AwsEC2S83InstanceMarketOptionsSpotOptionsInput {
  MaxPrice: String
  SpotInstanceType: String
  BlockDurationMinutes: Int
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

input AwsEC2S83LicenseSpecificationsInput {
  LicenseConfigurationArn: String
}

input AwsEC2S83MonitoringInput {
  Enabled: Boolean
}

input AwsEC2S83NetworkInterfacesInput {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  InterfaceType: String
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S83NetworkInterfacesIpv6AddressesInput]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S8dInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

input AwsEC2S83NetworkInterfacesIpv6AddressesInput {
  Ipv6Address: String
}

input AwsEC2S83PlacementInput {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

input AwsEC2S83TagSpecificationsInput {
  ResourceType: String
  Tags: [AwsEC2SiInput]
}

type AwsEC2S8d {
  Primary: Boolean
  PrivateIpAddress: String
}

input AwsEC2S8dInput {
  Primary: Boolean
  PrivateIpAddress: String
}

input AwsEC2S8lInput {
  Type: String!
}

input AwsEC2S8uInput {
  CpuCredits: String!
}

input AwsEC2S8yInput {
  CapacityReservationId: String
}

type AwsEC2S93 {
  LaunchTemplateId: String
  LaunchTemplateName: String
  CreateTime: Date
  CreatedBy: String
  DefaultVersionNumber: JSON
  LatestVersionNumber: JSON
  Tags: [AwsEC2Si]
}

type AwsEC2S96 {
  LaunchTemplateId: String
  LaunchTemplateName: String
  VersionNumber: JSON
  VersionDescription: String
  CreateTime: Date
  CreatedBy: String
  DefaultVersion: Boolean
  LaunchTemplateData: AwsEC2S97
}

type AwsEC2S97 {
  KernelId: String
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S97IamInstanceProfile
  BlockDeviceMappings: [AwsEC2S97BlockDeviceMappings]
  NetworkInterfaces: [AwsEC2S97NetworkInterfaces]
  ImageId: String
  InstanceType: String
  KeyName: String
  Monitoring: AwsEC2S97Monitoring
  Placement: AwsEC2S97Placement
  RamDiskId: String
  DisableApiTermination: Boolean
  InstanceInitiatedShutdownBehavior: String
  UserData: String
  TagSpecifications: [AwsEC2S97TagSpecifications]
  ElasticGpuSpecifications: [AwsEC2S97ElasticGpuSpecifications]
  ElasticInferenceAccelerators: [AwsEC2S97ElasticInferenceAccelerators]
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  InstanceMarketOptions: AwsEC2S97InstanceMarketOptions
  CreditSpecification: AwsEC2S97CreditSpecification
  CpuOptions: AwsEC2S97CpuOptions
  CapacityReservationSpecification: AwsEC2S97CapacityReservationSpecification
  LicenseSpecifications: [AwsEC2S97LicenseSpecifications]
  HibernationOptions: AwsEC2S97HibernationOptions
}

type AwsEC2S97BlockDeviceMappings {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEC2S97BlockDeviceMappingsEbs
  NoDevice: String
}

type AwsEC2S97BlockDeviceMappingsEbs {
  Encrypted: Boolean
  DeleteOnTermination: Boolean
  Iops: Int
  KmsKeyId: String
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

type AwsEC2S97CapacityReservationSpecification {
  CapacityReservationPreference: String
  CapacityReservationTarget: AwsEC2S9t
}

type AwsEC2S97CpuOptions {
  CoreCount: Int
  ThreadsPerCore: Int
}

type AwsEC2S97CreditSpecification {
  CpuCredits: String
}

type AwsEC2S97ElasticGpuSpecifications {
  Type: String
}

type AwsEC2S97ElasticInferenceAccelerators {
  Type: String
}

type AwsEC2S97HibernationOptions {
  Configured: Boolean
}

type AwsEC2S97IamInstanceProfile {
  Arn: String
  Name: String
}

type AwsEC2S97InstanceMarketOptions {
  MarketType: String
  SpotOptions: AwsEC2S97InstanceMarketOptionsSpotOptions
}

type AwsEC2S97InstanceMarketOptionsSpotOptions {
  MaxPrice: String
  SpotInstanceType: String
  BlockDurationMinutes: Int
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

type AwsEC2S97LicenseSpecifications {
  LicenseConfigurationArn: String
}

type AwsEC2S97Monitoring {
  Enabled: Boolean
}

type AwsEC2S97NetworkInterfaces {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  InterfaceType: String
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S9e]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S8d]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

type AwsEC2S97Placement {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

type AwsEC2S97TagSpecifications {
  ResourceType: String
  Tags: [AwsEC2Si]
}

type AwsEC2S9e {
  Ipv6Address: String
}

input AwsEC2S9eInput {
  Ipv6Address: String
}

type AwsEC2S9t {
  CapacityReservationId: String
}

type AwsEC2S9z {
  CreateTime: Date
  DeleteTime: Date
  FailureCode: String
  FailureMessage: String
  NatGatewayAddresses: [AwsEC2S9zNatGatewayAddresses]
  NatGatewayId: String
  ProvisionedBandwidth: AwsEC2S9zProvisionedBandwidth
  State: String
  SubnetId: String
  VpcId: String
  Tags: [AwsEC2Si]
}

type AwsEC2S9zNatGatewayAddresses {
  AllocationId: String
  NetworkInterfaceId: String
  PrivateIp: String
  PublicIp: String
}

type AwsEC2S9zProvisionedBandwidth {
  ProvisionTime: Date
  Provisioned: String
  RequestTime: Date
  Requested: String
  Status: String
}

type AwsEC2Sa6 {
  Associations: [AwsEC2Sa6Associations]
  Entries: [AwsEC2Sa6Entries]
  IsDefault: Boolean
  NetworkAclId: String
  Tags: [AwsEC2Si]
  VpcId: String
  OwnerId: String
}

type AwsEC2Sa6Associations {
  NetworkAclAssociationId: String
  NetworkAclId: String
  SubnetId: String
}

type AwsEC2Sa6Entries {
  CidrBlock: String
  Egress: Boolean
  IcmpTypeCode: AwsEC2Sab
  Ipv6CidrBlock: String
  PortRange: AwsEC2Sac
  Protocol: String
  RuleAction: String
  RuleNumber: Int
}

type AwsEC2Sab {
  Code: Int
  Type: Int
}

input AwsEC2SabInput {
  Code: Int
  Type: Int
}

type AwsEC2Sac {
  From: Int
  To: Int
}

input AwsEC2SacInput {
  From: Int
  To: Int
}

type AwsEC2Sai {
  Association: AwsEC2Saj
  Attachment: AwsEC2Sak
  AvailabilityZone: String
  Description: String
  Groups: [AwsEC2Sal]
  InterfaceType: String
  Ipv6Addresses: [AwsEC2SaiIpv6Addresses]
  MacAddress: String
  NetworkInterfaceId: String
  OwnerId: String
  PrivateDnsName: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2SaiPrivateIpAddresses]
  RequesterId: String
  RequesterManaged: Boolean
  SourceDestCheck: Boolean
  Status: String
  SubnetId: String
  TagSet: [AwsEC2Si]
  VpcId: String
}

type AwsEC2SaiIpv6Addresses {
  Ipv6Address: String
}

type AwsEC2SaiPrivateIpAddresses {
  Association: AwsEC2Saj
  Primary: Boolean
  PrivateDnsName: String
  PrivateIpAddress: String
}

type AwsEC2Saj {
  AllocationId: String
  AssociationId: String
  IpOwnerId: String
  PublicDnsName: String
  PublicIp: String
}

type AwsEC2Sak {
  AttachTime: Date
  AttachmentId: String
  DeleteOnTermination: Boolean
  DeviceIndex: Int
  InstanceId: String
  InstanceOwnerId: String
  Status: String
}

type AwsEC2Sal {
  GroupName: String
  GroupId: String
}

input AwsEC2SalInput {
  GroupName: String
  GroupId: String
}

type AwsEC2Saw {
  NetworkInterfacePermissionId: String
  NetworkInterfaceId: String
  AwsAccountId: String
  AwsService: String
  Permission: String
  PermissionState: AwsEC2SawPermissionState
}

type AwsEC2SawPermissionState {
  State: String
  StatusMessage: String
}

type AwsEC2Sb {
  TransitGatewayAttachmentId: String
  TransitGatewayId: String
  VpcId: String
  VpcOwnerId: String
  State: String
  SubnetIds: [String]
  CreationTime: Date
  Options: AwsEC2SbOptions
  Tags: [AwsEC2Si]
}

type AwsEC2Sb9 {
  Associations: [AwsEC2Sb9Associations]
  PropagatingVgws: [AwsEC2Sb9PropagatingVgws]
  RouteTableId: String
  Routes: [AwsEC2Sb9Routes]
  Tags: [AwsEC2Si]
  VpcId: String
  OwnerId: String
}

type AwsEC2Sb9Associations {
  Main: Boolean
  RouteTableAssociationId: String
  RouteTableId: String
  SubnetId: String
}

type AwsEC2Sb9PropagatingVgws {
  GatewayId: String
}

type AwsEC2Sb9Routes {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DestinationPrefixListId: String
  EgressOnlyInternetGatewayId: String
  GatewayId: String
  InstanceId: String
  InstanceOwnerId: String
  NatGatewayId: String
  TransitGatewayId: String
  NetworkInterfaceId: String
  Origin: String
  State: String
  VpcPeeringConnectionId: String
}

type AwsEC2Sbl {
  DataEncryptionKeyId: String
  Description: String
  Encrypted: Boolean
  KmsKeyId: String
  OwnerId: String
  Progress: String
  SnapshotId: String
  StartTime: Date
  State: String
  StateMessage: String
  VolumeId: String
  VolumeSize: Int
  OwnerAlias: String
  Tags: [AwsEC2Si]
}

type AwsEC2SbOptions {
  DnsSupport: String
  Ipv6Support: String
}

type AwsEC2Sbw {
  Bucket: String
  Fault: AwsEC2Sbx
  OwnerId: String
  Prefix: String
  State: String
}

type AwsEC2Sbx {
  Code: String
  Message: String
}

type AwsEC2Sc5 {
  TrafficMirrorFilterId: String
  IngressFilterRules: [AwsEC2Sc7]
  EgressFilterRules: [AwsEC2Sc7]
  NetworkServices: [String]
  Description: String
  Tags: [AwsEC2Si]
}

type AwsEC2Sc7 {
  TrafficMirrorFilterRuleId: String
  TrafficMirrorFilterId: String
  TrafficDirection: String
  RuleNumber: Int
  RuleAction: String
  Protocol: Int
  DestinationPortRange: AwsEC2Sca
  SourcePortRange: AwsEC2Sca
  DestinationCidrBlock: String
  SourceCidrBlock: String
  Description: String
}

type AwsEC2Sca {
  FromPort: Int
  ToPort: Int
}

input AwsEC2SceInput {
  FromPort: Int
  ToPort: Int
}

type AwsEC2Sci {
  TrafficMirrorSessionId: String
  TrafficMirrorTargetId: String
  TrafficMirrorFilterId: String
  NetworkInterfaceId: String
  OwnerId: String
  PacketLength: Int
  SessionNumber: Int
  VirtualNetworkId: Int
  Description: String
  Tags: [AwsEC2Si]
}

type AwsEC2Scl {
  TrafficMirrorTargetId: String
  NetworkInterfaceId: String
  NetworkLoadBalancerArn: String
  Type: String
  Description: String
  OwnerId: String
  Tags: [AwsEC2Si]
}

type AwsEC2Scu {
  TransitGatewayId: String
  TransitGatewayArn: String
  State: String
  OwnerId: String
  Description: String
  CreationTime: Date
  Options: AwsEC2ScuOptions
  Tags: [AwsEC2Si]
}

type AwsEC2ScuOptions {
  AmazonSideAsn: JSON
  AutoAcceptSharedAttachments: String
  DefaultRouteTableAssociation: String
  AssociationDefaultRouteTableId: String
  DefaultRouteTablePropagation: String
  PropagationDefaultRouteTableId: String
  VpnEcmpSupport: String
  DnsSupport: String
}

type AwsEC2Scz {
  DestinationCidrBlock: String
  TransitGatewayAttachments: [AwsEC2SczTransitGatewayAttachments]
  Type: String
  State: String
}

type AwsEC2SczTransitGatewayAttachments {
  ResourceId: String
  TransitGatewayAttachmentId: String
  ResourceType: String
}

type AwsEC2Sd6 {
  TransitGatewayRouteTableId: String
  TransitGatewayId: String
  State: String
  DefaultAssociationRouteTable: Boolean
  DefaultPropagationRouteTable: Boolean
  CreationTime: Date
  Tags: [AwsEC2Si]
}

type AwsEC2Sdc {
  Attachments: [AwsEC2S2s]
  AvailabilityZone: String
  CreateTime: Date
  Encrypted: Boolean
  KmsKeyId: String
  Size: Int
  SnapshotId: String
  State: String
  VolumeId: String
  Iops: Int
  Tags: [AwsEC2Si]
  VolumeType: String
}

type AwsEC2Sdk {
  VpcEndpointId: String
  VpcEndpointType: String
  VpcId: String
  ServiceName: String
  State: String
  PolicyDocument: String
  RouteTableIds: [String]
  SubnetIds: [String]
  Groups: [AwsEC2SdkGroups]
  PrivateDnsEnabled: Boolean
  RequesterManaged: Boolean
  NetworkInterfaceIds: [String]
  DnsEntries: [AwsEC2Sdo]
  CreationTimestamp: Date
  Tags: [AwsEC2Si]
  OwnerId: String
}

type AwsEC2SdkGroups {
  GroupId: String
  GroupName: String
}

type AwsEC2Sdo {
  DnsName: String
  HostedZoneId: String
}

type AwsEC2Sds {
  ConnectionNotificationId: String
  ServiceId: String
  VpcEndpointId: String
  ConnectionNotificationType: String
  ConnectionNotificationArn: String
  ConnectionEvents: [String]
  ConnectionNotificationState: String
}

type AwsEC2Sdx {
  ServiceType: [AwsEC2Sdy]
  ServiceId: String
  ServiceName: String
  ServiceState: String
  AvailabilityZones: [String]
  AcceptanceRequired: Boolean
  ManagesVpcEndpoints: Boolean
  NetworkLoadBalancerArns: [String]
  BaseEndpointDnsNames: [String]
  PrivateDnsName: String
  Tags: [AwsEC2Si]
}

type AwsEC2Sdy {
  ServiceType: String
}

type AwsEC2Se9 {
  CustomerGatewayConfiguration: String
  CustomerGatewayId: String
  Category: String
  State: String
  Type: String
  VpnConnectionId: String
  VpnGatewayId: String
  TransitGatewayId: String
  Options: AwsEC2Se9Options
  Routes: [AwsEC2Se9Routes]
  Tags: [AwsEC2Si]
  VgwTelemetry: [AwsEC2Se9VgwTelemetry]
}

type AwsEC2Se9Options {
  StaticRoutesOnly: Boolean
}

type AwsEC2Se9Routes {
  DestinationCidrBlock: String
  Source: String
  State: String
}

type AwsEC2Se9VgwTelemetry {
  AcceptedRouteCount: Int
  LastStatusChange: Date
  OutsideIpAddress: String
  Status: String
  StatusMessage: String
}

input AwsEC2SearchTransitGatewayRoutesInput {
  TransitGatewayRouteTableId: String!
  Filters: [AwsEC2Sh6Input]!
  MaxResults: Int
  DryRun: Boolean
}

type AwsEC2SearchTransitGatewayRoutesOutput {
  Routes: [AwsEC2Scz]
  AdditionalRoutesAvailable: Boolean
}

type AwsEC2Sel {
  AvailabilityZone: String
  State: String
  Type: String
  VpcAttachments: [AwsEC2S2w]
  VpnGatewayId: String
  AmazonSideAsn: JSON
  Tags: [AwsEC2Si]
}

input AwsEC2Sh6Input {
  Name: String
  Values: [String]
}

type AwsEC2Shf {
  Deadline: Date
  Resource: String
  UseLongIds: Boolean
}

type AwsEC2Si {
  Key: String
  Value: String
}

input AwsEC2SiInput {
  Key: String
  Value: String
}

type AwsEC2Sik {
  Code: String
  Message: String
}

type AwsEC2Sje {
  ConversionTaskId: String
  ExpirationTime: String
  ImportInstance: AwsEC2SjeImportInstance
  ImportVolume: AwsEC2SjeImportVolume
  State: String
  StatusMessage: String
  Tags: [AwsEC2Si]
}

type AwsEC2SjeImportInstance {
  Description: String
  InstanceId: String
  Platform: String
  Volumes: [AwsEC2SjeImportInstanceVolumes]
}

type AwsEC2SjeImportInstanceVolumes {
  AvailabilityZone: String
  BytesConverted: JSON
  Description: String
  Image: AwsEC2Sji
  Status: String
  StatusMessage: String
  Volume: AwsEC2Sjj
}

type AwsEC2SjeImportVolume {
  AvailabilityZone: String
  BytesConverted: JSON
  Description: String
  Image: AwsEC2Sji
  Volume: AwsEC2Sjj
}

type AwsEC2Sji {
  Checksum: String
  Format: String
  ImportManifestUrl: String
  Size: JSON
}

type AwsEC2Sjj {
  Id: String
  Size: JSON
}

type AwsEC2Ski {
  EventDescription: String
  EventSubType: String
  InstanceId: String
}

type AwsEC2Skl {
  InstanceId: String
  InstanceType: String
  SpotInstanceRequestId: String
  InstanceHealth: String
}

type AwsEC2Sla {
  FpgaImageId: String
  Name: String
  Description: String
  LoadPermissions: [AwsEC2SlaLoadPermissions]
  ProductCodes: [AwsEC2Sle]
}

type AwsEC2SlaLoadPermissions {
  UserId: String
  Group: String
}

type AwsEC2Sle {
  ProductCodeId: String
  ProductCodeType: String
}

type AwsEC2Smt {
  Group: String
  UserId: String
}

input AwsEC2SmtInput {
  Group: String
  UserId: String
}

type AwsEC2Sn {
  Error: AwsEC2SnError
  ResourceId: String
}

type AwsEC2Sn6 {
  Code: String
  Message: String
}

type AwsEC2Snd {
  Description: String
  DeviceName: String
  DiskImageSize: JSON
  Format: String
  Progress: String
  SnapshotId: String
  Status: String
  StatusMessage: String
  Url: String
  UserBucket: AwsEC2Snf
}

type AwsEC2SnError {
  Code: String
  Message: String
}

type AwsEC2Snf {
  S3Bucket: String
  S3Key: String
}

type AwsEC2Snk {
  Description: String
  DiskImageSize: JSON
  Encrypted: Boolean
  Format: String
  KmsKeyId: String
  Progress: String
  SnapshotId: String
  Status: String
  StatusMessage: String
  Url: String
  UserBucket: AwsEC2Snf
}

type AwsEC2Sno {
  DeviceName: String
  Ebs: AwsEC2SnoEbs
}

type AwsEC2SnoEbs {
  AttachTime: Date
  DeleteOnTermination: Boolean
  Status: String
  VolumeId: String
}

type AwsEC2Snr {
  Value: Boolean
}

input AwsEC2SnrInput {
  Value: Boolean
}

type AwsEC2So2 {
  InstanceEventId: String
  Code: String
  Description: String
  NotAfter: Date
  NotBefore: Date
  NotBeforeDeadline: Date
}

type AwsEC2So5 {
  Code: Int
  Name: String
}

type AwsEC2So7 {
  Details: [AwsEC2So7Details]
  Status: String
}

type AwsEC2So7Details {
  ImpairedSince: Date
  Name: String
  Status: String
}

type AwsEC2Sog {
  Groups: [AwsEC2Sal]
  Instances: [AwsEC2SogInstances]
  OwnerId: String
  RequesterId: String
  ReservationId: String
}

type AwsEC2SogInstances {
  AmiLaunchIndex: Int
  ImageId: String
  InstanceId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  LaunchTime: Date
  Monitoring: AwsEC2Soj
  Placement: AwsEC2S6q
  Platform: String
  PrivateDnsName: String
  PrivateIpAddress: String
  ProductCodes: [AwsEC2Sle]
  PublicDnsName: String
  PublicIpAddress: String
  RamdiskId: String
  State: AwsEC2So5
  StateTransitionReason: String
  SubnetId: String
  VpcId: String
  Architecture: String
  BlockDeviceMappings: [AwsEC2Sno]
  ClientToken: String
  EbsOptimized: Boolean
  EnaSupport: Boolean
  Hypervisor: String
  IamInstanceProfile: AwsEC2S21
  InstanceLifecycle: String
  ElasticGpuAssociations: [AwsEC2SogInstancesElasticGpuAssociations]
  ElasticInferenceAcceleratorAssociations: [AwsEC2SogInstancesElasticInferenceAcceleratorAssociations]
  NetworkInterfaces: [AwsEC2SogInstancesNetworkInterfaces]
  RootDeviceName: String
  RootDeviceType: String
  SecurityGroups: [AwsEC2Sal]
  SourceDestCheck: Boolean
  SpotInstanceRequestId: String
  SriovNetSupport: String
  StateReason: AwsEC2Sn6
  Tags: [AwsEC2Si]
  VirtualizationType: String
  CpuOptions: AwsEC2SogInstancesCpuOptions
  CapacityReservationId: String
  CapacityReservationSpecification: AwsEC2SogInstancesCapacityReservationSpecification
  HibernationOptions: AwsEC2SogInstancesHibernationOptions
  Licenses: [AwsEC2SogInstancesLicenses]
}

type AwsEC2SogInstancesCapacityReservationSpecification {
  CapacityReservationPreference: String
  CapacityReservationTarget: AwsEC2S9t
}

type AwsEC2SogInstancesCpuOptions {
  CoreCount: Int
  ThreadsPerCore: Int
}

type AwsEC2SogInstancesElasticGpuAssociations {
  ElasticGpuId: String
  ElasticGpuAssociationId: String
  ElasticGpuAssociationState: String
  ElasticGpuAssociationTime: String
}

type AwsEC2SogInstancesElasticInferenceAcceleratorAssociations {
  ElasticInferenceAcceleratorArn: String
  ElasticInferenceAcceleratorAssociationId: String
  ElasticInferenceAcceleratorAssociationState: String
  ElasticInferenceAcceleratorAssociationTime: Date
}

type AwsEC2SogInstancesHibernationOptions {
  Configured: Boolean
}

type AwsEC2SogInstancesLicenses {
  LicenseConfigurationArn: String
}

type AwsEC2SogInstancesNetworkInterfaces {
  Association: AwsEC2Sos
  Attachment: AwsEC2SogInstancesNetworkInterfacesAttachment
  Description: String
  Groups: [AwsEC2Sal]
  Ipv6Addresses: [AwsEC2S9e]
  MacAddress: String
  NetworkInterfaceId: String
  OwnerId: String
  PrivateDnsName: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2SogInstancesNetworkInterfacesPrivateIpAddresses]
  SourceDestCheck: Boolean
  Status: String
  SubnetId: String
  VpcId: String
  InterfaceType: String
}

type AwsEC2SogInstancesNetworkInterfacesAttachment {
  AttachTime: Date
  AttachmentId: String
  DeleteOnTermination: Boolean
  DeviceIndex: Int
  Status: String
}

type AwsEC2SogInstancesNetworkInterfacesPrivateIpAddresses {
  Association: AwsEC2Sos
  Primary: Boolean
  PrivateDnsName: String
  PrivateIpAddress: String
}

type AwsEC2Soj {
  State: String
}

type AwsEC2Sos {
  IpOwnerId: String
  PublicDnsName: String
  PublicIp: String
}

type AwsEC2Sr {
  AccepterVpcInfo: AwsEC2Ss
  ExpirationTime: Date
  RequesterVpcInfo: AwsEC2Ss
  Status: AwsEC2SrStatus
  Tags: [AwsEC2Si]
  VpcPeeringConnectionId: String
}

type AwsEC2Srb {
  Amount: JSON
  Frequency: String
}

type AwsEC2Sro {
  AvailabilityZone: String
  InstanceCount: Int
  InstanceType: String
  Platform: String
  Scope: String
}

input AwsEC2SroInput {
  AvailabilityZone: String
  InstanceCount: Int
  InstanceType: String
  Platform: String
  Scope: String
}

type AwsEC2SrStatus {
  Code: String
  Message: String
}

type AwsEC2Ss {
  CidrBlock: String
  Ipv6CidrBlockSet: [AwsEC2SsIpv6CidrBlockSet]
  CidrBlockSet: [AwsEC2SsCidrBlockSet]
  OwnerId: String
  PeeringOptions: AwsEC2SsPeeringOptions
  VpcId: String
  Region: String
}

type AwsEC2Ssa {
  Frequency: String
  Interval: Int
  OccurrenceDaySet: [Int]
  OccurrenceRelativeToEnd: Boolean
  OccurrenceUnit: String
}

type AwsEC2SsCidrBlockSet {
  CidrBlock: String
}

type AwsEC2Ssh {
  AvailabilityZone: String
  CreateDate: Date
  HourlyPrice: String
  InstanceCount: Int
  InstanceType: String
  NetworkPlatform: String
  NextSlotStartTime: Date
  Platform: String
  PreviousSlotEndTime: Date
  Recurrence: AwsEC2Ssa
  ScheduledInstanceId: String
  SlotDurationInHours: Int
  TermEndDate: Date
  TermStartDate: Date
  TotalScheduledInstanceHours: Int
}

type AwsEC2SsIpv6CidrBlockSet {
  Ipv6CidrBlock: String
}

type AwsEC2SsPeeringOptions {
  AllowDnsResolutionFromRemoteVpc: Boolean
  AllowEgressFromLocalClassicLinkToRemoteVpc: Boolean
  AllowEgressFromLocalVpcToRemoteClassicLink: Boolean
}

type AwsEC2Ssw {
  Group: String
  UserId: String
}

input AwsEC2SswInput {
  Group: String
  UserId: String
}

input AwsEC2StartInstancesInput {
  InstanceIds: [String]!
  AdditionalInfo: String
  DryRun: Boolean
}

type AwsEC2StartInstancesOutput {
  StartingInstances: [AwsEC2S16i]
}

type AwsEC2Stj {
  AllocationStrategy: String
  OnDemandAllocationStrategy: String
  ClientToken: String
  ExcessCapacityTerminationPolicy: String
  FulfilledCapacity: JSON
  OnDemandFulfilledCapacity: JSON
  IamFleetRole: String!
  LaunchSpecifications: [AwsEC2StjLaunchSpecifications]
  LaunchTemplateConfigs: [AwsEC2StjLaunchTemplateConfigs]
  SpotPrice: String
  TargetCapacity: Int!
  OnDemandTargetCapacity: Int
  OnDemandMaxTotalPrice: String
  SpotMaxTotalPrice: String
  TerminateInstancesWithExpiration: Boolean
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  ReplaceUnhealthyInstances: Boolean
  InstanceInterruptionBehavior: String
  LoadBalancersConfig: AwsEC2StjLoadBalancersConfig
  InstancePoolsToUseCount: Int
}

input AwsEC2StjInput {
  AllocationStrategy: String
  OnDemandAllocationStrategy: String
  ClientToken: String
  ExcessCapacityTerminationPolicy: String
  FulfilledCapacity: JSON
  OnDemandFulfilledCapacity: JSON
  IamFleetRole: String!
  LaunchSpecifications: [AwsEC2StjLaunchSpecificationsInput]
  LaunchTemplateConfigs: [AwsEC2StjLaunchTemplateConfigsInput]
  SpotPrice: String
  TargetCapacity: Int!
  OnDemandTargetCapacity: Int
  OnDemandMaxTotalPrice: String
  SpotMaxTotalPrice: String
  TerminateInstancesWithExpiration: Boolean
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  ReplaceUnhealthyInstances: Boolean
  InstanceInterruptionBehavior: String
  LoadBalancersConfig: AwsEC2StjLoadBalancersConfigInput
  InstancePoolsToUseCount: Int
}

type AwsEC2StjLaunchSpecifications {
  SecurityGroups: [AwsEC2Sal]
  AddressingType: String
  BlockDeviceMappings: [AwsEC2S7i]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S1y
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEC2StjLaunchSpecificationsMonitoring
  NetworkInterfaces: [AwsEC2Stq]
  Placement: AwsEC2Sts
  RamdiskId: String
  SpotPrice: String
  SubnetId: String
  UserData: String
  WeightedCapacity: JSON
  TagSpecifications: [AwsEC2StjLaunchSpecificationsTagSpecifications]
}

input AwsEC2StjLaunchSpecificationsInput {
  SecurityGroups: [AwsEC2SalInput]
  AddressingType: String
  BlockDeviceMappings: [AwsEC2S7iInput]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S1yInput
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEC2StjLaunchSpecificationsMonitoringInput
  NetworkInterfaces: [AwsEC2StqInput]
  Placement: AwsEC2StsInput
  RamdiskId: String
  SpotPrice: String
  SubnetId: String
  UserData: String
  WeightedCapacity: JSON
  TagSpecifications: [AwsEC2StjLaunchSpecificationsTagSpecificationsInput]
}

type AwsEC2StjLaunchSpecificationsMonitoring {
  Enabled: Boolean
}

input AwsEC2StjLaunchSpecificationsMonitoringInput {
  Enabled: Boolean
}

type AwsEC2StjLaunchSpecificationsTagSpecifications {
  ResourceType: String
  Tags: [AwsEC2Si]
}

input AwsEC2StjLaunchSpecificationsTagSpecificationsInput {
  ResourceType: String
  Tags: [AwsEC2SiInput]
}

type AwsEC2StjLaunchTemplateConfigs {
  LaunchTemplateSpecification: AwsEC2S6z
  Overrides: [AwsEC2StjLaunchTemplateConfigsOverrides]
}

input AwsEC2StjLaunchTemplateConfigsInput {
  LaunchTemplateSpecification: AwsEC2S6zInput
  Overrides: [AwsEC2StjLaunchTemplateConfigsOverridesInput]
}

type AwsEC2StjLaunchTemplateConfigsOverrides {
  InstanceType: String
  SpotPrice: String
  SubnetId: String
  AvailabilityZone: String
  WeightedCapacity: JSON
  Priority: JSON
}

input AwsEC2StjLaunchTemplateConfigsOverridesInput {
  InstanceType: String
  SpotPrice: String
  SubnetId: String
  AvailabilityZone: String
  WeightedCapacity: JSON
  Priority: JSON
}

type AwsEC2StjLoadBalancersConfig {
  ClassicLoadBalancersConfig: AwsEC2StjLoadBalancersConfigClassicLoadBalancersConfig
  TargetGroupsConfig: AwsEC2StjLoadBalancersConfigTargetGroupsConfig
}

type AwsEC2StjLoadBalancersConfigClassicLoadBalancersConfig {
  ClassicLoadBalancers: [AwsEC2StjLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancers]
}

type AwsEC2StjLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancers {
  Name: String
}

input AwsEC2StjLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancersInput {
  Name: String
}

input AwsEC2StjLoadBalancersConfigClassicLoadBalancersConfigInput {
  ClassicLoadBalancers: [AwsEC2StjLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancersInput]
}

input AwsEC2StjLoadBalancersConfigInput {
  ClassicLoadBalancersConfig: AwsEC2StjLoadBalancersConfigClassicLoadBalancersConfigInput
  TargetGroupsConfig: AwsEC2StjLoadBalancersConfigTargetGroupsConfigInput
}

type AwsEC2StjLoadBalancersConfigTargetGroupsConfig {
  TargetGroups: [AwsEC2StjLoadBalancersConfigTargetGroupsConfigTargetGroups]
}

input AwsEC2StjLoadBalancersConfigTargetGroupsConfigInput {
  TargetGroups: [AwsEC2StjLoadBalancersConfigTargetGroupsConfigTargetGroupsInput]
}

type AwsEC2StjLoadBalancersConfigTargetGroupsConfigTargetGroups {
  Arn: String
}

input AwsEC2StjLoadBalancersConfigTargetGroupsConfigTargetGroupsInput {
  Arn: String
}

input AwsEC2StopInstancesInput {
  InstanceIds: [String]!
  Hibernate: Boolean
  DryRun: Boolean
  Force: Boolean
}

type AwsEC2StopInstancesOutput {
  StoppingInstances: [AwsEC2S16i]
}

type AwsEC2Stq {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S9e]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S8d]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
  InterfaceType: String
}

input AwsEC2StqInput {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S9eInput]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S8dInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
  InterfaceType: String
}

type AwsEC2Sts {
  AvailabilityZone: String
  GroupName: String
  Tenancy: String
}

input AwsEC2StsInput {
  AvailabilityZone: String
  GroupName: String
  Tenancy: String
}

type AwsEC2Su8 {
  ActualBlockHourlyPrice: String
  AvailabilityZoneGroup: String
  BlockDurationMinutes: Int
  CreateTime: Date
  Fault: AwsEC2Sbx
  InstanceId: String
  LaunchGroup: String
  LaunchSpecification: AwsEC2Su8LaunchSpecification
  LaunchedAvailabilityZone: String
  ProductDescription: String
  SpotInstanceRequestId: String
  SpotPrice: String
  State: String
  Status: AwsEC2Su8Status
  Tags: [AwsEC2Si]
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

type AwsEC2Su8LaunchSpecification {
  UserData: String
  SecurityGroups: [AwsEC2Sal]
  AddressingType: String
  BlockDeviceMappings: [AwsEC2S7i]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S1y
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  NetworkInterfaces: [AwsEC2Stq]
  Placement: AwsEC2Sts
  RamdiskId: String
  SubnetId: String
  Monitoring: AwsEC2Sub
}

type AwsEC2Su8Status {
  Code: String
  Message: String
  UpdateTime: Date
}

type AwsEC2Sub {
  Enabled: Boolean!
}

input AwsEC2SubInput {
  Enabled: Boolean!
}

type AwsEC2Suq {
  FromPort: Int
  IpProtocol: String
  IpRanges: [String]
  PrefixListIds: [String]
  ToPort: Int
  UserIdGroupPairs: [AwsEC2S3c]
}

type AwsEC2Swj {
  VolumeId: String
  ModificationState: String
  StatusMessage: String
  TargetSize: Int
  TargetIops: Int
  TargetVolumeType: String
  OriginalSize: Int
  OriginalIops: Int
  OriginalVolumeType: String
  Progress: JSON
  StartTime: Date
  EndTime: Date
}

type AwsEC2Syc {
  TransitGatewayAttachmentId: String
  ResourceId: String
  ResourceType: String
  TransitGatewayRouteTableId: String
  State: String
}

type AwsEC2Szo {
  CurrencyCode: String
  Duration: Int
  HostIdSet: [String]
  HostReservationId: String
  HourlyPrice: String
  InstanceFamily: String
  PaymentOption: String
  UpfrontPrice: String
}

type AwsEC2Szw {
  HourlyPrice: String
  RemainingTotalValue: String
  RemainingUpfrontValue: String
}

input AwsEC2TerminateClientVpnConnectionsInput {
  ClientVpnEndpointId: String!
  ConnectionId: String
  Username: String
  DryRun: Boolean
}

type AwsEC2TerminateClientVpnConnectionsOutput {
  ClientVpnEndpointId: String
  Username: String
  ConnectionStatuses: [AwsEC2TerminateClientVpnConnectionsOutputConnectionStatuses]
}

type AwsEC2TerminateClientVpnConnectionsOutputConnectionStatuses {
  ConnectionId: String
  PreviousStatus: AwsEC2Sik
  CurrentStatus: AwsEC2Sik
}

input AwsEC2TerminateInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

type AwsEC2TerminateInstancesOutput {
  TerminatingInstances: [AwsEC2S16i]
}

input AwsEC2UnassignIpv6AddressesInput {
  Ipv6Addresses: [String]!
  NetworkInterfaceId: String!
}

type AwsEC2UnassignIpv6AddressesOutput {
  NetworkInterfaceId: String
  UnassignedIpv6Addresses: [String]
}

input AwsEC2UnassignPrivateIpAddressesInput {
  NetworkInterfaceId: String!
  PrivateIpAddresses: [String]!
}

input AwsEC2UnmonitorInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

type AwsEC2UnmonitorInstancesOutput {
  InstanceMonitorings: [AwsEC2S13q]
}

input AwsEC2UpdateSecurityGroupRuleDescriptionsEgressInput {
  DryRun: Boolean
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEC2S33Input]!
}

type AwsEC2UpdateSecurityGroupRuleDescriptionsEgressOutput {
  Return: Boolean
}

input AwsEC2UpdateSecurityGroupRuleDescriptionsIngressInput {
  DryRun: Boolean
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEC2S33Input]!
}

type AwsEC2UpdateSecurityGroupRuleDescriptionsIngressOutput {
  Return: Boolean
}

input AwsEC2WithdrawByoipCidrInput {
  Cidr: String!
  DryRun: Boolean
}

type AwsEC2WithdrawByoipCidrOutput {
  ByoipCidr: AwsEC2S12
}

"""Amazon EC2 Container Registry (2015-09-21)"""
type AwsECR {
  batchCheckLayerAvailability(input: AwsECRBatchCheckLayerAvailabilityInput!, config: AwsConfig): AwsECRBatchCheckLayerAvailabilityOutput
  batchDeleteImage(input: AwsECRBatchDeleteImageInput!, config: AwsConfig): AwsECRBatchDeleteImageOutput
  batchGetImage(input: AwsECRBatchGetImageInput!, config: AwsConfig): AwsECRBatchGetImageOutput
  completeLayerUpload(input: AwsECRCompleteLayerUploadInput!, config: AwsConfig): AwsECRCompleteLayerUploadOutput
  createRepository(input: AwsECRCreateRepositoryInput!, config: AwsConfig): AwsECRCreateRepositoryOutput
  deleteLifecyclePolicy(input: AwsECRDeleteLifecyclePolicyInput!, config: AwsConfig): AwsECRDeleteLifecyclePolicyOutput
  deleteRepository(input: AwsECRDeleteRepositoryInput!, config: AwsConfig): AwsECRDeleteRepositoryOutput
  deleteRepositoryPolicy(input: AwsECRDeleteRepositoryPolicyInput!, config: AwsConfig): AwsECRDeleteRepositoryPolicyOutput
  describeImages(input: AwsECRDescribeImagesInput!, config: AwsConfig): AwsECRDescribeImagesOutput
  describeRepositories(input: AwsECRDescribeRepositoriesInput, config: AwsConfig): AwsECRDescribeRepositoriesOutput
  getAuthorizationToken(input: AwsECRGetAuthorizationTokenInput, config: AwsConfig): AwsECRGetAuthorizationTokenOutput
  getDownloadUrlForLayer(input: AwsECRGetDownloadUrlForLayerInput!, config: AwsConfig): AwsECRGetDownloadUrlForLayerOutput
  getLifecyclePolicy(input: AwsECRGetLifecyclePolicyInput!, config: AwsConfig): AwsECRGetLifecyclePolicyOutput
  getLifecyclePolicyPreview(input: AwsECRGetLifecyclePolicyPreviewInput!, config: AwsConfig): AwsECRGetLifecyclePolicyPreviewOutput
  getRepositoryPolicy(input: AwsECRGetRepositoryPolicyInput!, config: AwsConfig): AwsECRGetRepositoryPolicyOutput
  initiateLayerUpload(input: AwsECRInitiateLayerUploadInput!, config: AwsConfig): AwsECRInitiateLayerUploadOutput
  listImages(input: AwsECRListImagesInput!, config: AwsConfig): AwsECRListImagesOutput
  listTagsForResource(input: AwsECRListTagsForResourceInput!, config: AwsConfig): AwsECRListTagsForResourceOutput
  putImage(input: AwsECRPutImageInput!, config: AwsConfig): AwsECRPutImageOutput
  putLifecyclePolicy(input: AwsECRPutLifecyclePolicyInput!, config: AwsConfig): AwsECRPutLifecyclePolicyOutput
  setRepositoryPolicy(input: AwsECRSetRepositoryPolicyInput!, config: AwsConfig): AwsECRSetRepositoryPolicyOutput
  startLifecyclePolicyPreview(input: AwsECRStartLifecyclePolicyPreviewInput!, config: AwsConfig): AwsECRStartLifecyclePolicyPreviewOutput
  tagResource(input: AwsECRTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsECRUntagResourceInput!, config: AwsConfig): JSON
  uploadLayerPart(input: AwsECRUploadLayerPartInput!, config: AwsConfig): AwsECRUploadLayerPartOutput
}

input AwsECRBatchCheckLayerAvailabilityInput {
  registryId: String
  repositoryName: String!
  layerDigests: [String]!
}

type AwsECRBatchCheckLayerAvailabilityOutput {
  layers: [AwsECRBatchCheckLayerAvailabilityOutputLayers]
  failures: [AwsECRBatchCheckLayerAvailabilityOutputFailures]
}

type AwsECRBatchCheckLayerAvailabilityOutputFailures {
  layerDigest: String
  failureCode: String
  failureReason: String
}

type AwsECRBatchCheckLayerAvailabilityOutputLayers {
  layerDigest: String
  layerAvailability: String
  layerSize: JSON
  mediaType: String
}

input AwsECRBatchDeleteImageInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsECRSjInput]!
}

type AwsECRBatchDeleteImageOutput {
  imageIds: [AwsECRSj]
  failures: [AwsECRSn]
}

input AwsECRBatchGetImageInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsECRSjInput]!
  acceptedMediaTypes: [String]
}

type AwsECRBatchGetImageOutput {
  images: [AwsECRSv]
  failures: [AwsECRSn]
}

input AwsECRCompleteLayerUploadInput {
  registryId: String
  repositoryName: String!
  uploadId: String!
  layerDigests: [String]!
}

type AwsECRCompleteLayerUploadOutput {
  registryId: String
  repositoryName: String
  uploadId: String
  layerDigest: String
}

input AwsECRCreateRepositoryInput {
  repositoryName: String!
  tags: [AwsECRS12Input]
}

type AwsECRCreateRepositoryOutput {
  repository: AwsECRS17
}

input AwsECRDeleteLifecyclePolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsECRDeleteLifecyclePolicyOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  lastEvaluatedAt: Date
}

input AwsECRDeleteRepositoryInput {
  registryId: String
  repositoryName: String!
  force: Boolean
}

type AwsECRDeleteRepositoryOutput {
  repository: AwsECRS17
}

input AwsECRDeleteRepositoryPolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsECRDeleteRepositoryPolicyOutput {
  registryId: String
  repositoryName: String
  policyText: String
}

input AwsECRDescribeImagesFilterInput {
  tagStatus: String
}

input AwsECRDescribeImagesInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsECRSjInput]
  nextToken: String
  maxResults: Int
  filter: AwsECRDescribeImagesFilterInput
}

type AwsECRDescribeImagesOutput {
  imageDetails: [AwsECRDescribeImagesOutputImageDetails]
  nextToken: String
}

type AwsECRDescribeImagesOutputImageDetails {
  registryId: String
  repositoryName: String
  imageDigest: String
  imageTags: [String]
  imageSizeInBytes: JSON
  imagePushedAt: Date
}

input AwsECRDescribeRepositoriesInput {
  registryId: String
  repositoryNames: [String]
  nextToken: String
  maxResults: Int
}

type AwsECRDescribeRepositoriesOutput {
  repositories: [AwsECRS17]
  nextToken: String
}

input AwsECRGetAuthorizationTokenInput {
  registryIds: [String]
}

type AwsECRGetAuthorizationTokenOutput {
  authorizationData: [AwsECRGetAuthorizationTokenOutputAuthorizationData]
}

type AwsECRGetAuthorizationTokenOutputAuthorizationData {
  authorizationToken: String
  expiresAt: Date
  proxyEndpoint: String
}

input AwsECRGetDownloadUrlForLayerInput {
  registryId: String
  repositoryName: String!
  layerDigest: String!
}

type AwsECRGetDownloadUrlForLayerOutput {
  downloadUrl: String
  layerDigest: String
}

input AwsECRGetLifecyclePolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsECRGetLifecyclePolicyOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  lastEvaluatedAt: Date
}

input AwsECRGetLifecyclePolicyPreviewFilterInput {
  tagStatus: String
}

input AwsECRGetLifecyclePolicyPreviewInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsECRSjInput]
  nextToken: String
  maxResults: Int
  filter: AwsECRGetLifecyclePolicyPreviewFilterInput
}

type AwsECRGetLifecyclePolicyPreviewOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  status: String
  nextToken: String
  previewResults: [AwsECRGetLifecyclePolicyPreviewOutputPreviewResults]
  summary: AwsECRGetLifecyclePolicyPreviewOutputSummary
}

type AwsECRGetLifecyclePolicyPreviewOutputPreviewResults {
  imageTags: [String]
  imageDigest: String
  imagePushedAt: Date
  action: AwsECRGetLifecyclePolicyPreviewOutputPreviewResultsAction
  appliedRulePriority: Int
}

type AwsECRGetLifecyclePolicyPreviewOutputPreviewResultsAction {
  type: String
}

type AwsECRGetLifecyclePolicyPreviewOutputSummary {
  expiringImageTotalCount: Int
}

input AwsECRGetRepositoryPolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsECRGetRepositoryPolicyOutput {
  registryId: String
  repositoryName: String
  policyText: String
}

input AwsECRInitiateLayerUploadInput {
  registryId: String
  repositoryName: String!
}

type AwsECRInitiateLayerUploadOutput {
  uploadId: String
  partSize: JSON
}

input AwsECRListImagesFilterInput {
  tagStatus: String
}

input AwsECRListImagesInput {
  registryId: String
  repositoryName: String!
  nextToken: String
  maxResults: Int
  filter: AwsECRListImagesFilterInput
}

type AwsECRListImagesOutput {
  imageIds: [AwsECRSj]
  nextToken: String
}

input AwsECRListTagsForResourceInput {
  resourceArn: String!
}

type AwsECRListTagsForResourceOutput {
  tags: [AwsECRS12]
}

input AwsECRPutImageInput {
  registryId: String
  repositoryName: String!
  imageManifest: String!
  imageTag: String
}

type AwsECRPutImageOutput {
  image: AwsECRSv
}

input AwsECRPutLifecyclePolicyInput {
  registryId: String
  repositoryName: String!
  lifecyclePolicyText: String!
}

type AwsECRPutLifecyclePolicyOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
}

type AwsECRS12 {
  Key: String
  Value: String
}

input AwsECRS12Input {
  Key: String
  Value: String
}

type AwsECRS17 {
  repositoryArn: String
  registryId: String
  repositoryName: String
  repositoryUri: String
  createdAt: Date
}

input AwsECRSetRepositoryPolicyInput {
  registryId: String
  repositoryName: String!
  policyText: String!
  force: Boolean
}

type AwsECRSetRepositoryPolicyOutput {
  registryId: String
  repositoryName: String
  policyText: String
}

type AwsECRSj {
  imageDigest: String
  imageTag: String
}

input AwsECRSjInput {
  imageDigest: String
  imageTag: String
}

type AwsECRSn {
  imageId: AwsECRSj
  failureCode: String
  failureReason: String
}

input AwsECRStartLifecyclePolicyPreviewInput {
  registryId: String
  repositoryName: String!
  lifecyclePolicyText: String
}

type AwsECRStartLifecyclePolicyPreviewOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  status: String
}

type AwsECRSv {
  registryId: String
  repositoryName: String
  imageId: AwsECRSj
  imageManifest: String
}

input AwsECRTagResourceInput {
  resourceArn: String!
  tags: [AwsECRS12Input]!
}

input AwsECRUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsECRUploadLayerPartInput {
  registryId: String
  repositoryName: String!
  uploadId: String!
  partFirstByte: JSON!
  partLastByte: JSON!
  layerPartBlob: JSON!
}

type AwsECRUploadLayerPartOutput {
  registryId: String
  repositoryName: String
  uploadId: String
  lastByteReceived: JSON
}

"""Amazon EC2 Container Service (2014-11-13)"""
type AwsECS {
  createCluster(input: AwsECSCreateClusterInput, config: AwsConfig): AwsECSCreateClusterOutput
  createService(input: AwsECSCreateServiceInput!, config: AwsConfig): AwsECSCreateServiceOutput
  createTaskSet(input: AwsECSCreateTaskSetInput!, config: AwsConfig): AwsECSCreateTaskSetOutput
  deleteAccountSetting(input: AwsECSDeleteAccountSettingInput!, config: AwsConfig): AwsECSDeleteAccountSettingOutput
  deleteAttributes(input: AwsECSDeleteAttributesInput!, config: AwsConfig): AwsECSDeleteAttributesOutput
  deleteCluster(input: AwsECSDeleteClusterInput!, config: AwsConfig): AwsECSDeleteClusterOutput
  deleteService(input: AwsECSDeleteServiceInput!, config: AwsConfig): AwsECSDeleteServiceOutput
  deleteTaskSet(input: AwsECSDeleteTaskSetInput!, config: AwsConfig): AwsECSDeleteTaskSetOutput
  deregisterContainerInstance(input: AwsECSDeregisterContainerInstanceInput!, config: AwsConfig): AwsECSDeregisterContainerInstanceOutput
  deregisterTaskDefinition(input: AwsECSDeregisterTaskDefinitionInput!, config: AwsConfig): AwsECSDeregisterTaskDefinitionOutput
  describeClusters(input: AwsECSDescribeClustersInput, config: AwsConfig): AwsECSDescribeClustersOutput
  describeContainerInstances(input: AwsECSDescribeContainerInstancesInput!, config: AwsConfig): AwsECSDescribeContainerInstancesOutput
  describeServices(input: AwsECSDescribeServicesInput!, config: AwsConfig): AwsECSDescribeServicesOutput
  describeTaskDefinition(input: AwsECSDescribeTaskDefinitionInput!, config: AwsConfig): AwsECSDescribeTaskDefinitionOutput
  describeTaskSets(input: AwsECSDescribeTaskSetsInput!, config: AwsConfig): AwsECSDescribeTaskSetsOutput
  describeTasks(input: AwsECSDescribeTasksInput!, config: AwsConfig): AwsECSDescribeTasksOutput
  discoverPollEndpoint(input: AwsECSDiscoverPollEndpointInput, config: AwsConfig): AwsECSDiscoverPollEndpointOutput
  listAccountSettings(input: AwsECSListAccountSettingsInput, config: AwsConfig): AwsECSListAccountSettingsOutput
  listAttributes(input: AwsECSListAttributesInput!, config: AwsConfig): AwsECSListAttributesOutput
  listClusters(input: AwsECSListClustersInput, config: AwsConfig): AwsECSListClustersOutput
  listContainerInstances(input: AwsECSListContainerInstancesInput, config: AwsConfig): AwsECSListContainerInstancesOutput
  listServices(input: AwsECSListServicesInput, config: AwsConfig): AwsECSListServicesOutput
  listTagsForResource(input: AwsECSListTagsForResourceInput!, config: AwsConfig): AwsECSListTagsForResourceOutput
  listTaskDefinitionFamilies(input: AwsECSListTaskDefinitionFamiliesInput, config: AwsConfig): AwsECSListTaskDefinitionFamiliesOutput
  listTaskDefinitions(input: AwsECSListTaskDefinitionsInput, config: AwsConfig): AwsECSListTaskDefinitionsOutput
  listTasks(input: AwsECSListTasksInput, config: AwsConfig): AwsECSListTasksOutput
  putAccountSetting(input: AwsECSPutAccountSettingInput!, config: AwsConfig): AwsECSPutAccountSettingOutput
  putAccountSettingDefault(input: AwsECSPutAccountSettingDefaultInput!, config: AwsConfig): AwsECSPutAccountSettingDefaultOutput
  putAttributes(input: AwsECSPutAttributesInput!, config: AwsConfig): AwsECSPutAttributesOutput
  registerContainerInstance(input: AwsECSRegisterContainerInstanceInput, config: AwsConfig): AwsECSRegisterContainerInstanceOutput
  registerTaskDefinition(input: AwsECSRegisterTaskDefinitionInput!, config: AwsConfig): AwsECSRegisterTaskDefinitionOutput
  runTask(input: AwsECSRunTaskInput!, config: AwsConfig): AwsECSRunTaskOutput
  startTask(input: AwsECSStartTaskInput!, config: AwsConfig): AwsECSStartTaskOutput
  stopTask(input: AwsECSStopTaskInput!, config: AwsConfig): AwsECSStopTaskOutput
  submitAttachmentStateChanges(input: AwsECSSubmitAttachmentStateChangesInput!, config: AwsConfig): AwsECSSubmitAttachmentStateChangesOutput
  submitContainerStateChange(input: AwsECSSubmitContainerStateChangeInput, config: AwsConfig): AwsECSSubmitContainerStateChangeOutput
  submitTaskStateChange(input: AwsECSSubmitTaskStateChangeInput, config: AwsConfig): AwsECSSubmitTaskStateChangeOutput
  tagResource(input: AwsECSTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsECSUntagResourceInput!, config: AwsConfig): JSON
  updateContainerAgent(input: AwsECSUpdateContainerAgentInput!, config: AwsConfig): AwsECSUpdateContainerAgentOutput
  updateContainerInstancesState(input: AwsECSUpdateContainerInstancesStateInput!, config: AwsConfig): AwsECSUpdateContainerInstancesStateOutput
  updateService(input: AwsECSUpdateServiceInput!, config: AwsConfig): AwsECSUpdateServiceOutput
  updateServicePrimaryTaskSet(input: AwsECSUpdateServicePrimaryTaskSetInput!, config: AwsConfig): AwsECSUpdateServicePrimaryTaskSetOutput
  updateTaskSet(input: AwsECSUpdateTaskSetInput!, config: AwsConfig): AwsECSUpdateTaskSetOutput
}

input AwsECSCreateClusterInput {
  clusterName: String
  tags: [AwsECSS3Input]
}

type AwsECSCreateClusterOutput {
  cluster: AwsECSS8
}

input AwsECSCreateServiceInput {
  cluster: String
  serviceName: String!
  taskDefinition: String
  loadBalancers: [AwsECSSdInput]
  serviceRegistries: [AwsECSSgInput]
  desiredCount: Int
  clientToken: String
  launchType: String
  platformVersion: String
  role: String
  deploymentConfiguration: AwsECSSjInput
  placementConstraints: [AwsECSSkInput]
  placementStrategy: [AwsECSSnInput]
  networkConfiguration: AwsECSSqInput
  healthCheckGracePeriodSeconds: Int
  schedulingStrategy: String
  deploymentController: AwsECSSvInput
  tags: [AwsECSS3Input]
  enableECSManagedTags: Boolean
  propagateTags: String
}

type AwsECSCreateServiceOutput {
  service: AwsECSS10
}

input AwsECSCreateTaskSetInput {
  service: String!
  cluster: String!
  externalId: String
  taskDefinition: String!
  networkConfiguration: AwsECSSqInput
  loadBalancers: [AwsECSSdInput]
  serviceRegistries: [AwsECSSgInput]
  launchType: String
  platformVersion: String
  scale: AwsECSS14Input
  clientToken: String
}

type AwsECSCreateTaskSetOutput {
  taskSet: AwsECSS12
}

input AwsECSDeleteAccountSettingInput {
  name: String!
  principalArn: String
}

type AwsECSDeleteAccountSettingOutput {
  setting: AwsECSS1h
}

input AwsECSDeleteAttributesInput {
  cluster: String
  attributes: [AwsECSS1kInput]!
}

type AwsECSDeleteAttributesOutput {
  attributes: [AwsECSS1k]
}

input AwsECSDeleteClusterInput {
  cluster: String!
}

type AwsECSDeleteClusterOutput {
  cluster: AwsECSS8
}

input AwsECSDeleteServiceInput {
  cluster: String
  service: String!
  force: Boolean
}

type AwsECSDeleteServiceOutput {
  service: AwsECSS10
}

input AwsECSDeleteTaskSetInput {
  cluster: String!
  service: String!
  taskSet: String!
  force: Boolean
}

type AwsECSDeleteTaskSetOutput {
  taskSet: AwsECSS12
}

input AwsECSDeregisterContainerInstanceInput {
  cluster: String
  containerInstance: String!
  force: Boolean
}

type AwsECSDeregisterContainerInstanceOutput {
  containerInstance: AwsECSS1w
}

input AwsECSDeregisterTaskDefinitionInput {
  taskDefinition: String!
}

type AwsECSDeregisterTaskDefinitionOutput {
  taskDefinition: AwsECSS27
}

input AwsECSDescribeClustersInput {
  clusters: [String]
  include: [String]
}

type AwsECSDescribeClustersOutput {
  clusters: [AwsECSS8]
  failures: [AwsECSS3z]
}

input AwsECSDescribeContainerInstancesInput {
  cluster: String
  containerInstances: [String]!
  include: [String]
}

type AwsECSDescribeContainerInstancesOutput {
  containerInstances: [AwsECSS1w]
  failures: [AwsECSS3z]
}

input AwsECSDescribeServicesInput {
  cluster: String
  services: [String]!
  include: [String]
}

type AwsECSDescribeServicesOutput {
  services: [AwsECSS10]
  failures: [AwsECSS3z]
}

input AwsECSDescribeTaskDefinitionInput {
  taskDefinition: String!
  include: [String]
}

type AwsECSDescribeTaskDefinitionOutput {
  taskDefinition: AwsECSS27
  tags: [AwsECSS3]
}

input AwsECSDescribeTaskSetsInput {
  cluster: String!
  service: String!
  taskSets: [String]
}

type AwsECSDescribeTaskSetsOutput {
  taskSets: [AwsECSS12]
  failures: [AwsECSS3z]
}

input AwsECSDescribeTasksInput {
  cluster: String
  tasks: [String]!
  include: [String]
}

type AwsECSDescribeTasksOutput {
  tasks: [AwsECSS4m]
  failures: [AwsECSS3z]
}

input AwsECSDiscoverPollEndpointInput {
  containerInstance: String
  cluster: String
}

type AwsECSDiscoverPollEndpointOutput {
  endpoint: String
  telemetryEndpoint: String
}

input AwsECSListAccountSettingsInput {
  name: String
  value: String
  principalArn: String
  effectiveSettings: Boolean
  nextToken: String
  maxResults: Int
}

type AwsECSListAccountSettingsOutput {
  settings: [AwsECSS1h]
  nextToken: String
}

input AwsECSListAttributesInput {
  cluster: String
  targetType: String!
  attributeName: String
  attributeValue: String
  nextToken: String
  maxResults: Int
}

type AwsECSListAttributesOutput {
  attributes: [AwsECSS1k]
  nextToken: String
}

input AwsECSListClustersInput {
  nextToken: String
  maxResults: Int
}

type AwsECSListClustersOutput {
  clusterArns: [String]
  nextToken: String
}

input AwsECSListContainerInstancesInput {
  cluster: String
  filter: String
  nextToken: String
  maxResults: Int
  status: String
}

type AwsECSListContainerInstancesOutput {
  containerInstanceArns: [String]
  nextToken: String
}

input AwsECSListServicesInput {
  cluster: String
  nextToken: String
  maxResults: Int
  launchType: String
  schedulingStrategy: String
}

type AwsECSListServicesOutput {
  serviceArns: [String]
  nextToken: String
}

input AwsECSListTagsForResourceInput {
  resourceArn: String!
}

type AwsECSListTagsForResourceOutput {
  tags: [AwsECSS3]
}

input AwsECSListTaskDefinitionFamiliesInput {
  familyPrefix: String
  status: String
  nextToken: String
  maxResults: Int
}

type AwsECSListTaskDefinitionFamiliesOutput {
  families: [String]
  nextToken: String
}

input AwsECSListTaskDefinitionsInput {
  familyPrefix: String
  status: String
  sort: String
  nextToken: String
  maxResults: Int
}

type AwsECSListTaskDefinitionsOutput {
  taskDefinitionArns: [String]
  nextToken: String
}

input AwsECSListTasksInput {
  cluster: String
  containerInstance: String
  family: String
  nextToken: String
  maxResults: Int
  startedBy: String
  serviceName: String
  desiredStatus: String
  launchType: String
}

type AwsECSListTasksOutput {
  taskArns: [String]
  nextToken: String
}

input AwsECSPutAccountSettingDefaultInput {
  name: String!
  value: String!
}

type AwsECSPutAccountSettingDefaultOutput {
  setting: AwsECSS1h
}

input AwsECSPutAccountSettingInput {
  name: String!
  value: String!
  principalArn: String
}

type AwsECSPutAccountSettingOutput {
  setting: AwsECSS1h
}

input AwsECSPutAttributesInput {
  cluster: String
  attributes: [AwsECSS1kInput]!
}

type AwsECSPutAttributesOutput {
  attributes: [AwsECSS1k]
}

input AwsECSRegisterContainerInstanceInput {
  cluster: String
  instanceIdentityDocument: String
  instanceIdentityDocumentSignature: String
  totalResources: [AwsECSS1zInput]
  versionInfo: AwsECSS1yInput
  containerInstanceArn: String
  attributes: [AwsECSS1kInput]
  platformDevices: [AwsECSRegisterContainerInstancePlatformDevicesInput]
  tags: [AwsECSS3Input]
}

type AwsECSRegisterContainerInstanceOutput {
  containerInstance: AwsECSS1w
}

input AwsECSRegisterContainerInstancePlatformDevicesInput {
  id: String!
  type: String!
}

input AwsECSRegisterTaskDefinitionInput {
  family: String!
  taskRoleArn: String
  executionRoleArn: String
  networkMode: String
  containerDefinitions: [AwsECSS28Input]!
  volumes: [AwsECSS3cInput]
  placementConstraints: [AwsECSS3kInput]
  requiresCompatibilities: [String]
  cpu: String
  memory: String
  tags: [AwsECSS3Input]
  pidMode: String
  ipcMode: String
  proxyConfiguration: AwsECSS3rInput
}

type AwsECSRegisterTaskDefinitionOutput {
  taskDefinition: AwsECSS27
  tags: [AwsECSS3]
}

input AwsECSRunTaskInput {
  cluster: String
  taskDefinition: String!
  overrides: AwsECSS4nInput
  count: Int
  startedBy: String
  group: String
  placementConstraints: [AwsECSSkInput]
  placementStrategy: [AwsECSSnInput]
  launchType: String
  platformVersion: String
  networkConfiguration: AwsECSSqInput
  tags: [AwsECSS3Input]
  enableECSManagedTags: Boolean
  propagateTags: String
}

type AwsECSRunTaskOutput {
  tasks: [AwsECSS4m]
  failures: [AwsECSS3z]
}

type AwsECSS10 {
  serviceArn: String
  serviceName: String
  clusterArn: String
  loadBalancers: [AwsECSSd]
  serviceRegistries: [AwsECSSg]
  status: String
  desiredCount: Int
  runningCount: Int
  pendingCount: Int
  launchType: String
  platformVersion: String
  taskDefinition: String
  deploymentConfiguration: AwsECSSj
  taskSets: [AwsECSS12]
  deployments: [AwsECSS10Deployments]
  roleArn: String
  events: [AwsECSS10Events]
  createdAt: Date
  placementConstraints: [AwsECSSk]
  placementStrategy: [AwsECSSn]
  networkConfiguration: AwsECSSq
  healthCheckGracePeriodSeconds: Int
  schedulingStrategy: String
  deploymentController: AwsECSSv
  tags: [AwsECSS3]
  createdBy: String
  enableECSManagedTags: Boolean
  propagateTags: String
}

type AwsECSS10Deployments {
  id: String
  status: String
  taskDefinition: String
  desiredCount: Int
  pendingCount: Int
  runningCount: Int
  createdAt: Date
  updatedAt: Date
  launchType: String
  platformVersion: String
  networkConfiguration: AwsECSSq
}

type AwsECSS10Events {
  id: String
  createdAt: Date
  message: String
}

type AwsECSS12 {
  id: String
  taskSetArn: String
  serviceArn: String
  clusterArn: String
  startedBy: String
  externalId: String
  status: String
  taskDefinition: String
  computedDesiredCount: Int
  pendingCount: Int
  runningCount: Int
  createdAt: Date
  updatedAt: Date
  launchType: String
  platformVersion: String
  networkConfiguration: AwsECSSq
  loadBalancers: [AwsECSSd]
  serviceRegistries: [AwsECSSg]
  scale: AwsECSS14
  stabilityStatus: String
  stabilityStatusAt: Date
}

type AwsECSS14 {
  value: JSON
  unit: String
}

input AwsECSS14Input {
  value: JSON
  unit: String
}

type AwsECSS1h {
  name: String
  value: String
  principalArn: String
}

type AwsECSS1k {
  name: String!
  value: String
  targetType: String
  targetId: String
}

input AwsECSS1kInput {
  name: String!
  value: String
  targetType: String
  targetId: String
}

type AwsECSS1w {
  containerInstanceArn: String
  ec2InstanceId: String
  version: JSON
  versionInfo: AwsECSS1y
  remainingResources: [AwsECSS1z]
  registeredResources: [AwsECSS1z]
  status: String
  statusReason: String
  agentConnected: Boolean
  runningTasksCount: Int
  pendingTasksCount: Int
  agentUpdateStatus: String
  attributes: [AwsECSS1k]
  registeredAt: Date
  attachments: [AwsECSS22]
  tags: [AwsECSS3]
}

type AwsECSS1y {
  agentVersion: String
  agentHash: String
  dockerVersion: String
}

input AwsECSS1yInput {
  agentVersion: String
  agentHash: String
  dockerVersion: String
}

type AwsECSS1z {
  name: String
  type: String
  doubleValue: JSON
  longValue: JSON
  integerValue: Int
  stringSetValue: [String]
}

input AwsECSS1zInput {
  name: String
  type: String
  doubleValue: JSON
  longValue: JSON
  integerValue: Int
  stringSetValue: [String]
}

type AwsECSS22 {
  id: String
  type: String
  status: String
  details: [AwsECSSb]
}

type AwsECSS27 {
  taskDefinitionArn: String
  containerDefinitions: [AwsECSS28]
  family: String
  taskRoleArn: String
  executionRoleArn: String
  networkMode: String
  revision: Int
  volumes: [AwsECSS3c]
  status: String
  requiresAttributes: [AwsECSS1k]
  placementConstraints: [AwsECSS3k]
  compatibilities: [String]
  requiresCompatibilities: [String]
  cpu: String
  memory: String
  pidMode: String
  ipcMode: String
  proxyConfiguration: AwsECSS3r
}

type AwsECSS28 {
  name: String
  image: String
  repositoryCredentials: AwsECSS28RepositoryCredentials
  cpu: Int
  memory: Int
  memoryReservation: Int
  links: [String]
  portMappings: [AwsECSS28PortMappings]
  essential: Boolean
  entryPoint: [String]
  command: [String]
  environment: [AwsECSSb]
  mountPoints: [AwsECSS28MountPoints]
  volumesFrom: [AwsECSS28VolumesFrom]
  linuxParameters: AwsECSS28LinuxParameters
  secrets: [AwsECSS2r]
  dependsOn: [AwsECSS28DependsOn]
  startTimeout: Int
  stopTimeout: Int
  hostname: String
  user: String
  workingDirectory: String
  disableNetworking: Boolean
  privileged: Boolean
  readonlyRootFilesystem: Boolean
  dnsServers: [String]
  dnsSearchDomains: [String]
  extraHosts: [AwsECSS28ExtraHosts]
  dockerSecurityOptions: [String]
  interactive: Boolean
  pseudoTerminal: Boolean
  dockerLabels: JSON
  ulimits: [AwsECSS28Ulimits]
  logConfiguration: AwsECSS28LogConfiguration
  healthCheck: AwsECSS28HealthCheck
  systemControls: [AwsECSS28SystemControls]
  resourceRequirements: [AwsECSS38]
}

type AwsECSS28DependsOn {
  containerName: String!
  condition: String!
}

input AwsECSS28DependsOnInput {
  containerName: String!
  condition: String!
}

type AwsECSS28ExtraHosts {
  hostname: String!
  ipAddress: String!
}

input AwsECSS28ExtraHostsInput {
  hostname: String!
  ipAddress: String!
}

type AwsECSS28HealthCheck {
  command: [String]!
  interval: Int
  timeout: Int
  retries: Int
  startPeriod: Int
}

input AwsECSS28HealthCheckInput {
  command: [String]!
  interval: Int
  timeout: Int
  retries: Int
  startPeriod: Int
}

input AwsECSS28Input {
  name: String
  image: String
  repositoryCredentials: AwsECSS28RepositoryCredentialsInput
  cpu: Int
  memory: Int
  memoryReservation: Int
  links: [String]
  portMappings: [AwsECSS28PortMappingsInput]
  essential: Boolean
  entryPoint: [String]
  command: [String]
  environment: [AwsECSSbInput]
  mountPoints: [AwsECSS28MountPointsInput]
  volumesFrom: [AwsECSS28VolumesFromInput]
  linuxParameters: AwsECSS28LinuxParametersInput
  secrets: [AwsECSS2rInput]
  dependsOn: [AwsECSS28DependsOnInput]
  startTimeout: Int
  stopTimeout: Int
  hostname: String
  user: String
  workingDirectory: String
  disableNetworking: Boolean
  privileged: Boolean
  readonlyRootFilesystem: Boolean
  dnsServers: [String]
  dnsSearchDomains: [String]
  extraHosts: [AwsECSS28ExtraHostsInput]
  dockerSecurityOptions: [String]
  interactive: Boolean
  pseudoTerminal: Boolean
  dockerLabels: JSON
  ulimits: [AwsECSS28UlimitsInput]
  logConfiguration: AwsECSS28LogConfigurationInput
  healthCheck: AwsECSS28HealthCheckInput
  systemControls: [AwsECSS28SystemControlsInput]
  resourceRequirements: [AwsECSS38Input]
}

type AwsECSS28LinuxParameters {
  capabilities: AwsECSS28LinuxParametersCapabilities
  devices: [AwsECSS28LinuxParametersDevices]
  initProcessEnabled: Boolean
  sharedMemorySize: Int
  tmpfs: [AwsECSS28LinuxParametersTmpfs]
}

type AwsECSS28LinuxParametersCapabilities {
  add: [String]
  drop: [String]
}

input AwsECSS28LinuxParametersCapabilitiesInput {
  add: [String]
  drop: [String]
}

type AwsECSS28LinuxParametersDevices {
  hostPath: String!
  containerPath: String
  permissions: [String]
}

input AwsECSS28LinuxParametersDevicesInput {
  hostPath: String!
  containerPath: String
  permissions: [String]
}

input AwsECSS28LinuxParametersInput {
  capabilities: AwsECSS28LinuxParametersCapabilitiesInput
  devices: [AwsECSS28LinuxParametersDevicesInput]
  initProcessEnabled: Boolean
  sharedMemorySize: Int
  tmpfs: [AwsECSS28LinuxParametersTmpfsInput]
}

type AwsECSS28LinuxParametersTmpfs {
  containerPath: String!
  size: Int!
  mountOptions: [String]
}

input AwsECSS28LinuxParametersTmpfsInput {
  containerPath: String!
  size: Int!
  mountOptions: [String]
}

type AwsECSS28LogConfiguration {
  logDriver: String!
  options: JSON
  secretOptions: [AwsECSS2r]
}

input AwsECSS28LogConfigurationInput {
  logDriver: String!
  options: JSON
  secretOptions: [AwsECSS2rInput]
}

type AwsECSS28MountPoints {
  sourceVolume: String
  containerPath: String
  readOnly: Boolean
}

input AwsECSS28MountPointsInput {
  sourceVolume: String
  containerPath: String
  readOnly: Boolean
}

type AwsECSS28PortMappings {
  containerPort: Int
  hostPort: Int
  protocol: String
}

input AwsECSS28PortMappingsInput {
  containerPort: Int
  hostPort: Int
  protocol: String
}

type AwsECSS28RepositoryCredentials {
  credentialsParameter: String!
}

input AwsECSS28RepositoryCredentialsInput {
  credentialsParameter: String!
}

type AwsECSS28SystemControls {
  namespace: String
  value: String
}

input AwsECSS28SystemControlsInput {
  namespace: String
  value: String
}

type AwsECSS28Ulimits {
  name: String!
  softLimit: Int!
  hardLimit: Int!
}

input AwsECSS28UlimitsInput {
  name: String!
  softLimit: Int!
  hardLimit: Int!
}

type AwsECSS28VolumesFrom {
  sourceContainer: String
  readOnly: Boolean
}

input AwsECSS28VolumesFromInput {
  sourceContainer: String
  readOnly: Boolean
}

type AwsECSS2r {
  name: String!
  valueFrom: String!
}

input AwsECSS2rInput {
  name: String!
  valueFrom: String!
}

type AwsECSS3 {
  key: String
  value: String
}

type AwsECSS38 {
  value: String!
  type: String!
}

input AwsECSS38Input {
  value: String!
  type: String!
}

type AwsECSS3c {
  name: String
  host: AwsECSS3cHost
  dockerVolumeConfiguration: AwsECSS3cDockerVolumeConfiguration
}

type AwsECSS3cDockerVolumeConfiguration {
  scope: String
  autoprovision: Boolean
  driver: String
  driverOpts: JSON
  labels: JSON
}

input AwsECSS3cDockerVolumeConfigurationInput {
  scope: String
  autoprovision: Boolean
  driver: String
  driverOpts: JSON
  labels: JSON
}

type AwsECSS3cHost {
  sourcePath: String
}

input AwsECSS3cHostInput {
  sourcePath: String
}

input AwsECSS3cInput {
  name: String
  host: AwsECSS3cHostInput
  dockerVolumeConfiguration: AwsECSS3cDockerVolumeConfigurationInput
}

input AwsECSS3Input {
  key: String
  value: String
}

type AwsECSS3k {
  type: String
  expression: String
}

input AwsECSS3kInput {
  type: String
  expression: String
}

type AwsECSS3r {
  type: String
  containerName: String!
  properties: [AwsECSSb]
}

input AwsECSS3rInput {
  type: String
  containerName: String!
  properties: [AwsECSSbInput]
}

type AwsECSS3z {
  arn: String
  reason: String
}

type AwsECSS4m {
  taskArn: String
  clusterArn: String
  taskDefinitionArn: String
  containerInstanceArn: String
  overrides: AwsECSS4n
  lastStatus: String
  desiredStatus: String
  cpu: String
  memory: String
  containers: [AwsECSS4mContainers]
  startedBy: String
  version: JSON
  stoppedReason: String
  stopCode: String
  connectivity: String
  connectivityAt: Date
  pullStartedAt: Date
  pullStoppedAt: Date
  executionStoppedAt: Date
  createdAt: Date
  startedAt: Date
  stoppingAt: Date
  stoppedAt: Date
  group: String
  launchType: String
  platformVersion: String
  attachments: [AwsECSS22]
  healthStatus: String
  tags: [AwsECSS3]
}

type AwsECSS4mContainers {
  containerArn: String
  taskArn: String
  name: String
  lastStatus: String
  exitCode: Int
  reason: String
  networkBindings: [AwsECSS4s]
  networkInterfaces: [AwsECSS4mContainersNetworkInterfaces]
  healthStatus: String
  cpu: String
  memory: String
  memoryReservation: String
  gpuIds: [String]
}

type AwsECSS4mContainersNetworkInterfaces {
  attachmentId: String
  privateIpv4Address: String
  ipv6Address: String
}

type AwsECSS4n {
  containerOverrides: [AwsECSS4nContainerOverrides]
  taskRoleArn: String
  executionRoleArn: String
}

type AwsECSS4nContainerOverrides {
  name: String
  command: [String]
  environment: [AwsECSSb]
  cpu: Int
  memory: Int
  memoryReservation: Int
  resourceRequirements: [AwsECSS38]
}

input AwsECSS4nContainerOverridesInput {
  name: String
  command: [String]
  environment: [AwsECSSbInput]
  cpu: Int
  memory: Int
  memoryReservation: Int
  resourceRequirements: [AwsECSS38Input]
}

input AwsECSS4nInput {
  containerOverrides: [AwsECSS4nContainerOverridesInput]
  taskRoleArn: String
  executionRoleArn: String
}

type AwsECSS4s {
  bindIP: String
  containerPort: Int
  hostPort: Int
  protocol: String
}

input AwsECSS4sInput {
  bindIP: String
  containerPort: Int
  hostPort: Int
  protocol: String
}

input AwsECSS69Input {
  attachmentArn: String!
  status: String!
}

type AwsECSS8 {
  clusterArn: String
  clusterName: String
  status: String
  registeredContainerInstancesCount: Int
  runningTasksCount: Int
  pendingTasksCount: Int
  activeServicesCount: Int
  statistics: [AwsECSSb]
  tags: [AwsECSS3]
}

type AwsECSSb {
  name: String
  value: String
}

input AwsECSSbInput {
  name: String
  value: String
}

type AwsECSSd {
  targetGroupArn: String
  loadBalancerName: String
  containerName: String
  containerPort: Int
}

input AwsECSSdInput {
  targetGroupArn: String
  loadBalancerName: String
  containerName: String
  containerPort: Int
}

type AwsECSSg {
  registryArn: String
  port: Int
  containerName: String
  containerPort: Int
}

input AwsECSSgInput {
  registryArn: String
  port: Int
  containerName: String
  containerPort: Int
}

type AwsECSSj {
  maximumPercent: Int
  minimumHealthyPercent: Int
}

input AwsECSSjInput {
  maximumPercent: Int
  minimumHealthyPercent: Int
}

type AwsECSSk {
  type: String
  expression: String
}

input AwsECSSkInput {
  type: String
  expression: String
}

type AwsECSSn {
  type: String
  field: String
}

input AwsECSSnInput {
  type: String
  field: String
}

type AwsECSSq {
  awsvpcConfiguration: AwsECSSqAwsvpcConfiguration
}

type AwsECSSqAwsvpcConfiguration {
  subnets: [String]!
  securityGroups: [String]
  assignPublicIp: String
}

input AwsECSSqAwsvpcConfigurationInput {
  subnets: [String]!
  securityGroups: [String]
  assignPublicIp: String
}

input AwsECSSqInput {
  awsvpcConfiguration: AwsECSSqAwsvpcConfigurationInput
}

input AwsECSStartTaskInput {
  cluster: String
  taskDefinition: String!
  overrides: AwsECSS4nInput
  containerInstances: [String]!
  startedBy: String
  group: String
  networkConfiguration: AwsECSSqInput
  tags: [AwsECSS3Input]
  enableECSManagedTags: Boolean
  propagateTags: String
}

type AwsECSStartTaskOutput {
  tasks: [AwsECSS4m]
  failures: [AwsECSS3z]
}

input AwsECSStopTaskInput {
  cluster: String
  task: String!
  reason: String
}

type AwsECSStopTaskOutput {
  task: AwsECSS4m
}

input AwsECSSubmitAttachmentStateChangesInput {
  cluster: String
  attachments: [AwsECSS69Input]!
}

type AwsECSSubmitAttachmentStateChangesOutput {
  acknowledgment: String
}

input AwsECSSubmitContainerStateChangeInput {
  cluster: String
  task: String
  containerName: String
  status: String
  exitCode: Int
  reason: String
  networkBindings: [AwsECSS4sInput]
}

type AwsECSSubmitContainerStateChangeOutput {
  acknowledgment: String
}

input AwsECSSubmitTaskStateChangeContainersInput {
  containerName: String
  exitCode: Int
  networkBindings: [AwsECSS4sInput]
  reason: String
  status: String
}

input AwsECSSubmitTaskStateChangeInput {
  cluster: String
  task: String
  status: String
  reason: String
  containers: [AwsECSSubmitTaskStateChangeContainersInput]
  attachments: [AwsECSS69Input]
  pullStartedAt: Date
  pullStoppedAt: Date
  executionStoppedAt: Date
}

type AwsECSSubmitTaskStateChangeOutput {
  acknowledgment: String
}

type AwsECSSv {
  type: String!
}

input AwsECSSvInput {
  type: String!
}

input AwsECSTagResourceInput {
  resourceArn: String!
  tags: [AwsECSS3Input]!
}

input AwsECSUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsECSUpdateContainerAgentInput {
  cluster: String
  containerInstance: String!
}

type AwsECSUpdateContainerAgentOutput {
  containerInstance: AwsECSS1w
}

input AwsECSUpdateContainerInstancesStateInput {
  cluster: String
  containerInstances: [String]!
  status: String!
}

type AwsECSUpdateContainerInstancesStateOutput {
  containerInstances: [AwsECSS1w]
  failures: [AwsECSS3z]
}

input AwsECSUpdateServiceInput {
  cluster: String
  service: String!
  desiredCount: Int
  taskDefinition: String
  deploymentConfiguration: AwsECSSjInput
  networkConfiguration: AwsECSSqInput
  platformVersion: String
  forceNewDeployment: Boolean
  healthCheckGracePeriodSeconds: Int
}

type AwsECSUpdateServiceOutput {
  service: AwsECSS10
}

input AwsECSUpdateServicePrimaryTaskSetInput {
  cluster: String!
  service: String!
  primaryTaskSet: String!
}

type AwsECSUpdateServicePrimaryTaskSetOutput {
  taskSet: AwsECSS12
}

input AwsECSUpdateTaskSetInput {
  cluster: String!
  service: String!
  taskSet: String!
  scale: AwsECSS14Input!
}

type AwsECSUpdateTaskSetOutput {
  taskSet: AwsECSS12
}

"""Amazon Elastic File System (2015-02-01)"""
type AwsEFS {
  createFileSystem(input: AwsEFSCreateFileSystemInput!, config: AwsConfig): JSON
  createMountTarget(input: AwsEFSCreateMountTargetInput!, config: AwsConfig): JSON
  createTags(input: AwsEFSCreateTagsInput!, config: AwsConfig): JSON
  deleteFileSystem(input: AwsEFSDeleteFileSystemInput!, config: AwsConfig): JSON
  deleteMountTarget(input: AwsEFSDeleteMountTargetInput!, config: AwsConfig): JSON
  deleteTags(input: AwsEFSDeleteTagsInput!, config: AwsConfig): JSON
  describeFileSystems(input: AwsEFSDescribeFileSystemsInput, config: AwsConfig): AwsEFSDescribeFileSystemsOutput
  describeLifecycleConfiguration(input: AwsEFSDescribeLifecycleConfigurationInput!, config: AwsConfig): JSON
  describeMountTargetSecurityGroups(input: AwsEFSDescribeMountTargetSecurityGroupsInput!, config: AwsConfig): AwsEFSDescribeMountTargetSecurityGroupsOutput
  describeMountTargets(input: AwsEFSDescribeMountTargetsInput, config: AwsConfig): AwsEFSDescribeMountTargetsOutput
  describeTags(input: AwsEFSDescribeTagsInput!, config: AwsConfig): AwsEFSDescribeTagsOutput
  modifyMountTargetSecurityGroups(input: AwsEFSModifyMountTargetSecurityGroupsInput!, config: AwsConfig): JSON
  putLifecycleConfiguration(input: AwsEFSPutLifecycleConfigurationInput!, config: AwsConfig): JSON
  updateFileSystem(input: AwsEFSUpdateFileSystemInput!, config: AwsConfig): JSON
}

input AwsEFSCreateFileSystemInput {
  CreationToken: String!
  PerformanceMode: String
  Encrypted: Boolean
  KmsKeyId: String
  ThroughputMode: String
  ProvisionedThroughputInMibps: JSON
  Tags: [AwsEFSS8Input]
}

input AwsEFSCreateMountTargetInput {
  FileSystemId: String!
  SubnetId: String!
  IpAddress: String
  SecurityGroups: [String]
}

input AwsEFSCreateTagsInput {
  FileSystemId: String!
  Tags: [AwsEFSS8Input]!
}

input AwsEFSDeleteFileSystemInput {
  FileSystemId: String!
}

input AwsEFSDeleteMountTargetInput {
  MountTargetId: String!
}

input AwsEFSDeleteTagsInput {
  FileSystemId: String!
  TagKeys: [String]!
}

input AwsEFSDescribeFileSystemsInput {
  MaxItems: Int
  Marker: String
  CreationToken: String
  FileSystemId: String
}

type AwsEFSDescribeFileSystemsOutput {
  Marker: String
  FileSystems: [AwsEFSSc]
  NextMarker: String
}

input AwsEFSDescribeLifecycleConfigurationInput {
  FileSystemId: String!
}

input AwsEFSDescribeMountTargetSecurityGroupsInput {
  MountTargetId: String!
}

type AwsEFSDescribeMountTargetSecurityGroupsOutput {
  SecurityGroups: [String]!
}

input AwsEFSDescribeMountTargetsInput {
  MaxItems: Int
  Marker: String
  FileSystemId: String
  MountTargetId: String
}

type AwsEFSDescribeMountTargetsOutput {
  Marker: String
  MountTargets: [AwsEFSSq]
  NextMarker: String
}

input AwsEFSDescribeTagsInput {
  MaxItems: Int
  Marker: String
  FileSystemId: String!
}

type AwsEFSDescribeTagsOutput {
  Marker: String
  Tags: [AwsEFSS8]!
  NextMarker: String
}

input AwsEFSModifyMountTargetSecurityGroupsInput {
  MountTargetId: String!
  SecurityGroups: [String]
}

input AwsEFSPutLifecycleConfigurationInput {
  FileSystemId: String!
  LifecyclePolicies: [AwsEFSS15Input]!
}

input AwsEFSS15Input {
  TransitionToIA: String
}

type AwsEFSS8 {
  Key: String!
  Value: String!
}

input AwsEFSS8Input {
  Key: String!
  Value: String!
}

type AwsEFSSc {
  OwnerId: String!
  CreationToken: String!
  FileSystemId: String!
  CreationTime: Date!
  LifeCycleState: String!
  Name: String
  NumberOfMountTargets: Int!
  SizeInBytes: AwsEFSScSizeInBytes!
  PerformanceMode: String!
  Encrypted: Boolean
  KmsKeyId: String
  ThroughputMode: String
  ProvisionedThroughputInMibps: JSON
  Tags: [AwsEFSS8]!
}

type AwsEFSScSizeInBytes {
  Value: JSON!
  Timestamp: Date
  ValueInIA: JSON
  ValueInStandard: JSON
}

type AwsEFSSq {
  OwnerId: String
  MountTargetId: String!
  FileSystemId: String!
  SubnetId: String!
  LifeCycleState: String!
  IpAddress: String
  NetworkInterfaceId: String
}

input AwsEFSUpdateFileSystemInput {
  FileSystemId: String!
  ThroughputMode: String
  ProvisionedThroughputInMibps: JSON
}

"""Amazon Elastic Kubernetes Service (2017-11-01)"""
type AwsEKS {
  createCluster(input: AwsEKSCreateClusterInput!, config: AwsConfig): AwsEKSCreateClusterOutput
  deleteCluster(input: AwsEKSDeleteClusterInput!, config: AwsConfig): AwsEKSDeleteClusterOutput
  describeCluster(input: AwsEKSDescribeClusterInput!, config: AwsConfig): AwsEKSDescribeClusterOutput
  describeUpdate(input: AwsEKSDescribeUpdateInput!, config: AwsConfig): AwsEKSDescribeUpdateOutput
  listClusters(input: AwsEKSListClustersInput, config: AwsConfig): AwsEKSListClustersOutput
  listUpdates(input: AwsEKSListUpdatesInput!, config: AwsConfig): AwsEKSListUpdatesOutput
  updateClusterConfig(input: AwsEKSUpdateClusterConfigInput!, config: AwsConfig): AwsEKSUpdateClusterConfigOutput
  updateClusterVersion(input: AwsEKSUpdateClusterVersionInput!, config: AwsConfig): AwsEKSUpdateClusterVersionOutput
}

input AwsEKSCreateClusterInput {
  name: String!
  version: String
  roleArn: String!
  resourcesVpcConfig: AwsEKSS4Input!
  logging: AwsEKSS7Input
  clientRequestToken: String
}

type AwsEKSCreateClusterOutput {
  cluster: AwsEKSSd
}

input AwsEKSDeleteClusterInput {
  name: String!
}

type AwsEKSDeleteClusterOutput {
  cluster: AwsEKSSd
}

input AwsEKSDescribeClusterInput {
  name: String!
}

type AwsEKSDescribeClusterOutput {
  cluster: AwsEKSSd
}

input AwsEKSDescribeUpdateInput {
  name: String!
  updateId: String!
}

type AwsEKSDescribeUpdateOutput {
  update: AwsEKSSp
}

input AwsEKSListClustersInput {
  maxResults: Int
  nextToken: String
}

type AwsEKSListClustersOutput {
  clusters: [String]
  nextToken: String
}

input AwsEKSListUpdatesInput {
  name: String!
  nextToken: String
  maxResults: Int
}

type AwsEKSListUpdatesOutput {
  updateIds: [String]
  nextToken: String
}

input AwsEKSS4Input {
  subnetIds: [String]
  securityGroupIds: [String]
  endpointPublicAccess: Boolean
  endpointPrivateAccess: Boolean
}

type AwsEKSS7 {
  clusterLogging: [AwsEKSS7ClusterLogging]
}

type AwsEKSS7ClusterLogging {
  types: [String]
  enabled: Boolean
}

input AwsEKSS7ClusterLoggingInput {
  types: [String]
  enabled: Boolean
}

input AwsEKSS7Input {
  clusterLogging: [AwsEKSS7ClusterLoggingInput]
}

type AwsEKSSd {
  name: String
  arn: String
  createdAt: Date
  version: String
  endpoint: String
  roleArn: String
  resourcesVpcConfig: AwsEKSSdResourcesVpcConfig
  logging: AwsEKSS7
  status: String
  certificateAuthority: AwsEKSSdCertificateAuthority
  clientRequestToken: String
  platformVersion: String
}

type AwsEKSSdCertificateAuthority {
  data: String
}

type AwsEKSSdResourcesVpcConfig {
  subnetIds: [String]
  securityGroupIds: [String]
  vpcId: String
  endpointPublicAccess: Boolean
  endpointPrivateAccess: Boolean
}

type AwsEKSSp {
  id: String
  status: String
  type: String
  params: [AwsEKSSpParams]
  createdAt: Date
  errors: [AwsEKSSpErrors]
}

type AwsEKSSpErrors {
  errorCode: String
  errorMessage: String
  resourceIds: [String]
}

type AwsEKSSpParams {
  type: String
  value: String
}

input AwsEKSUpdateClusterConfigInput {
  name: String!
  resourcesVpcConfig: AwsEKSS4Input
  logging: AwsEKSS7Input
  clientRequestToken: String
}

type AwsEKSUpdateClusterConfigOutput {
  update: AwsEKSSp
}

input AwsEKSUpdateClusterVersionInput {
  name: String!
  version: String!
  clientRequestToken: String
}

type AwsEKSUpdateClusterVersionOutput {
  update: AwsEKSSp
}

"""Amazon ElastiCache (2015-02-02)"""
type AwsElastiCache {
  addTagsToResource(input: AwsElastiCacheAddTagsToResourceInput!, config: AwsConfig): JSON
  authorizeCacheSecurityGroupIngress(input: AwsElastiCacheAuthorizeCacheSecurityGroupIngressInput!, config: AwsConfig): AwsElastiCacheAuthorizeCacheSecurityGroupIngressOutput
  batchApplyUpdateAction(input: AwsElastiCacheBatchApplyUpdateActionInput!, config: AwsConfig): JSON
  batchStopUpdateAction(input: AwsElastiCacheBatchStopUpdateActionInput!, config: AwsConfig): JSON
  copySnapshot(input: AwsElastiCacheCopySnapshotInput!, config: AwsConfig): AwsElastiCacheCopySnapshotOutput
  createCacheCluster(input: AwsElastiCacheCreateCacheClusterInput!, config: AwsConfig): AwsElastiCacheCreateCacheClusterOutput
  createCacheParameterGroup(input: AwsElastiCacheCreateCacheParameterGroupInput!, config: AwsConfig): AwsElastiCacheCreateCacheParameterGroupOutput
  createCacheSecurityGroup(input: AwsElastiCacheCreateCacheSecurityGroupInput!, config: AwsConfig): AwsElastiCacheCreateCacheSecurityGroupOutput
  createCacheSubnetGroup(input: AwsElastiCacheCreateCacheSubnetGroupInput!, config: AwsConfig): AwsElastiCacheCreateCacheSubnetGroupOutput
  createReplicationGroup(input: AwsElastiCacheCreateReplicationGroupInput!, config: AwsConfig): AwsElastiCacheCreateReplicationGroupOutput
  createSnapshot(input: AwsElastiCacheCreateSnapshotInput!, config: AwsConfig): AwsElastiCacheCreateSnapshotOutput
  decreaseReplicaCount(input: AwsElastiCacheDecreaseReplicaCountInput!, config: AwsConfig): AwsElastiCacheDecreaseReplicaCountOutput
  deleteCacheCluster(input: AwsElastiCacheDeleteCacheClusterInput!, config: AwsConfig): AwsElastiCacheDeleteCacheClusterOutput
  deleteCacheParameterGroup(input: AwsElastiCacheDeleteCacheParameterGroupInput!, config: AwsConfig): JSON
  deleteCacheSecurityGroup(input: AwsElastiCacheDeleteCacheSecurityGroupInput!, config: AwsConfig): JSON
  deleteCacheSubnetGroup(input: AwsElastiCacheDeleteCacheSubnetGroupInput!, config: AwsConfig): JSON
  deleteReplicationGroup(input: AwsElastiCacheDeleteReplicationGroupInput!, config: AwsConfig): AwsElastiCacheDeleteReplicationGroupOutput
  deleteSnapshot(input: AwsElastiCacheDeleteSnapshotInput!, config: AwsConfig): AwsElastiCacheDeleteSnapshotOutput
  describeCacheClusters(input: AwsElastiCacheDescribeCacheClustersInput, config: AwsConfig): AwsElastiCacheDescribeCacheClustersOutput
  describeCacheEngineVersions(input: AwsElastiCacheDescribeCacheEngineVersionsInput, config: AwsConfig): AwsElastiCacheDescribeCacheEngineVersionsOutput
  describeCacheParameterGroups(input: AwsElastiCacheDescribeCacheParameterGroupsInput, config: AwsConfig): AwsElastiCacheDescribeCacheParameterGroupsOutput
  describeCacheParameters(input: AwsElastiCacheDescribeCacheParametersInput!, config: AwsConfig): AwsElastiCacheDescribeCacheParametersOutput
  describeCacheSecurityGroups(input: AwsElastiCacheDescribeCacheSecurityGroupsInput, config: AwsConfig): AwsElastiCacheDescribeCacheSecurityGroupsOutput
  describeCacheSubnetGroups(input: AwsElastiCacheDescribeCacheSubnetGroupsInput, config: AwsConfig): AwsElastiCacheDescribeCacheSubnetGroupsOutput
  describeEngineDefaultParameters(input: AwsElastiCacheDescribeEngineDefaultParametersInput!, config: AwsConfig): AwsElastiCacheDescribeEngineDefaultParametersOutput
  describeEvents(input: AwsElastiCacheDescribeEventsInput, config: AwsConfig): AwsElastiCacheDescribeEventsOutput
  describeReplicationGroups(input: AwsElastiCacheDescribeReplicationGroupsInput, config: AwsConfig): AwsElastiCacheDescribeReplicationGroupsOutput
  describeReservedCacheNodes(input: AwsElastiCacheDescribeReservedCacheNodesInput, config: AwsConfig): AwsElastiCacheDescribeReservedCacheNodesOutput
  describeReservedCacheNodesOfferings(input: AwsElastiCacheDescribeReservedCacheNodesOfferingsInput, config: AwsConfig): AwsElastiCacheDescribeReservedCacheNodesOfferingsOutput
  describeServiceUpdates(input: AwsElastiCacheDescribeServiceUpdatesInput, config: AwsConfig): AwsElastiCacheDescribeServiceUpdatesOutput
  describeSnapshots(input: AwsElastiCacheDescribeSnapshotsInput, config: AwsConfig): AwsElastiCacheDescribeSnapshotsOutput
  describeUpdateActions(input: AwsElastiCacheDescribeUpdateActionsInput, config: AwsConfig): AwsElastiCacheDescribeUpdateActionsOutput
  increaseReplicaCount(input: AwsElastiCacheIncreaseReplicaCountInput!, config: AwsConfig): AwsElastiCacheIncreaseReplicaCountOutput
  listAllowedNodeTypeModifications(input: AwsElastiCacheListAllowedNodeTypeModificationsInput, config: AwsConfig): AwsElastiCacheListAllowedNodeTypeModificationsOutput
  listTagsForResource(input: AwsElastiCacheListTagsForResourceInput!, config: AwsConfig): JSON
  modifyCacheCluster(input: AwsElastiCacheModifyCacheClusterInput!, config: AwsConfig): AwsElastiCacheModifyCacheClusterOutput
  modifyCacheParameterGroup(input: AwsElastiCacheModifyCacheParameterGroupInput!, config: AwsConfig): JSON
  modifyCacheSubnetGroup(input: AwsElastiCacheModifyCacheSubnetGroupInput!, config: AwsConfig): AwsElastiCacheModifyCacheSubnetGroupOutput
  modifyReplicationGroup(input: AwsElastiCacheModifyReplicationGroupInput!, config: AwsConfig): AwsElastiCacheModifyReplicationGroupOutput
  modifyReplicationGroupShardConfiguration(input: AwsElastiCacheModifyReplicationGroupShardConfigurationInput!, config: AwsConfig): AwsElastiCacheModifyReplicationGroupShardConfigurationOutput
  purchaseReservedCacheNodesOffering(input: AwsElastiCachePurchaseReservedCacheNodesOfferingInput!, config: AwsConfig): AwsElastiCachePurchaseReservedCacheNodesOfferingOutput
  rebootCacheCluster(input: AwsElastiCacheRebootCacheClusterInput!, config: AwsConfig): AwsElastiCacheRebootCacheClusterOutput
  removeTagsFromResource(input: AwsElastiCacheRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  resetCacheParameterGroup(input: AwsElastiCacheResetCacheParameterGroupInput!, config: AwsConfig): JSON
  revokeCacheSecurityGroupIngress(input: AwsElastiCacheRevokeCacheSecurityGroupIngressInput!, config: AwsConfig): AwsElastiCacheRevokeCacheSecurityGroupIngressOutput
  testFailover(input: AwsElastiCacheTestFailoverInput!, config: AwsConfig): AwsElastiCacheTestFailoverOutput
}

input AwsElastiCacheAddTagsToResourceInput {
  ResourceName: String!
  Tags: [AwsElastiCacheS3Input]!
}

input AwsElastiCacheAuthorizeCacheSecurityGroupIngressInput {
  CacheSecurityGroupName: String!
  EC2SecurityGroupName: String!
  EC2SecurityGroupOwnerId: String!
}

type AwsElastiCacheAuthorizeCacheSecurityGroupIngressOutput {
  CacheSecurityGroup: AwsElastiCacheS8
}

input AwsElastiCacheBatchApplyUpdateActionInput {
  ReplicationGroupIds: [String]!
  ServiceUpdateName: String!
}

input AwsElastiCacheBatchStopUpdateActionInput {
  ReplicationGroupIds: [String]!
  ServiceUpdateName: String!
}

input AwsElastiCacheCopySnapshotInput {
  SourceSnapshotName: String!
  TargetSnapshotName: String!
  TargetBucket: String
}

type AwsElastiCacheCopySnapshotOutput {
  Snapshot: AwsElastiCacheSm
}

input AwsElastiCacheCreateCacheClusterInput {
  CacheClusterId: String!
  ReplicationGroupId: String
  AZMode: String
  PreferredAvailabilityZone: String
  PreferredAvailabilityZones: [String]
  NumCacheNodes: Int
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  CacheParameterGroupName: String
  CacheSubnetGroupName: String
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  Tags: [AwsElastiCacheS3Input]
  SnapshotArns: [String]
  SnapshotName: String
  PreferredMaintenanceWindow: String
  Port: Int
  NotificationTopicArn: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  AuthToken: String
}

type AwsElastiCacheCreateCacheClusterOutput {
  CacheCluster: AwsElastiCacheS14
}

input AwsElastiCacheCreateCacheParameterGroupInput {
  CacheParameterGroupName: String!
  CacheParameterGroupFamily: String!
  Description: String!
}

type AwsElastiCacheCreateCacheParameterGroupOutput {
  CacheParameterGroup: AwsElastiCacheS1j
}

input AwsElastiCacheCreateCacheSecurityGroupInput {
  CacheSecurityGroupName: String!
  Description: String!
}

type AwsElastiCacheCreateCacheSecurityGroupOutput {
  CacheSecurityGroup: AwsElastiCacheS8
}

input AwsElastiCacheCreateCacheSubnetGroupInput {
  CacheSubnetGroupName: String!
  CacheSubnetGroupDescription: String!
  SubnetIds: [String]!
}

type AwsElastiCacheCreateCacheSubnetGroupOutput {
  CacheSubnetGroup: AwsElastiCacheS1p
}

input AwsElastiCacheCreateReplicationGroupInput {
  ReplicationGroupId: String!
  ReplicationGroupDescription: String!
  PrimaryClusterId: String
  AutomaticFailoverEnabled: Boolean
  NumCacheClusters: Int
  PreferredCacheClusterAZs: [String]
  NumNodeGroups: Int
  ReplicasPerNodeGroup: Int
  NodeGroupConfiguration: [AwsElastiCacheStInput]
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  CacheParameterGroupName: String
  CacheSubnetGroupName: String
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  Tags: [AwsElastiCacheS3Input]
  SnapshotArns: [String]
  SnapshotName: String
  PreferredMaintenanceWindow: String
  Port: Int
  NotificationTopicArn: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  AuthToken: String
  TransitEncryptionEnabled: Boolean
  AtRestEncryptionEnabled: Boolean
}

type AwsElastiCacheCreateReplicationGroupOutput {
  ReplicationGroup: AwsElastiCacheS1w
}

input AwsElastiCacheCreateSnapshotInput {
  ReplicationGroupId: String
  CacheClusterId: String
  SnapshotName: String!
}

type AwsElastiCacheCreateSnapshotOutput {
  Snapshot: AwsElastiCacheSm
}

input AwsElastiCacheDecreaseReplicaCountInput {
  ReplicationGroupId: String!
  NewReplicaCount: Int
  ReplicaConfiguration: [AwsElastiCacheS2aInput]
  ReplicasToRemove: [String]
  ApplyImmediately: Boolean!
}

type AwsElastiCacheDecreaseReplicaCountOutput {
  ReplicationGroup: AwsElastiCacheS1w
}

input AwsElastiCacheDeleteCacheClusterInput {
  CacheClusterId: String!
  FinalSnapshotIdentifier: String
}

type AwsElastiCacheDeleteCacheClusterOutput {
  CacheCluster: AwsElastiCacheS14
}

input AwsElastiCacheDeleteCacheParameterGroupInput {
  CacheParameterGroupName: String!
}

input AwsElastiCacheDeleteCacheSecurityGroupInput {
  CacheSecurityGroupName: String!
}

input AwsElastiCacheDeleteCacheSubnetGroupInput {
  CacheSubnetGroupName: String!
}

input AwsElastiCacheDeleteReplicationGroupInput {
  ReplicationGroupId: String!
  RetainPrimaryCluster: Boolean
  FinalSnapshotIdentifier: String
}

type AwsElastiCacheDeleteReplicationGroupOutput {
  ReplicationGroup: AwsElastiCacheS1w
}

input AwsElastiCacheDeleteSnapshotInput {
  SnapshotName: String!
}

type AwsElastiCacheDeleteSnapshotOutput {
  Snapshot: AwsElastiCacheSm
}

input AwsElastiCacheDescribeCacheClustersInput {
  CacheClusterId: String
  MaxRecords: Int
  Marker: String
  ShowCacheNodeInfo: Boolean
  ShowCacheClustersNotInReplicationGroups: Boolean
}

type AwsElastiCacheDescribeCacheClustersOutput {
  Marker: String
  CacheClusters: [AwsElastiCacheS14]
}

input AwsElastiCacheDescribeCacheEngineVersionsInput {
  Engine: String
  EngineVersion: String
  CacheParameterGroupFamily: String
  MaxRecords: Int
  Marker: String
  DefaultOnly: Boolean
}

type AwsElastiCacheDescribeCacheEngineVersionsOutput {
  Marker: String
  CacheEngineVersions: [AwsElastiCacheDescribeCacheEngineVersionsOutputCacheEngineVersions]
}

type AwsElastiCacheDescribeCacheEngineVersionsOutputCacheEngineVersions {
  Engine: String
  EngineVersion: String
  CacheParameterGroupFamily: String
  CacheEngineDescription: String
  CacheEngineVersionDescription: String
}

input AwsElastiCacheDescribeCacheParameterGroupsInput {
  CacheParameterGroupName: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeCacheParameterGroupsOutput {
  Marker: String
  CacheParameterGroups: [AwsElastiCacheS1j]
}

input AwsElastiCacheDescribeCacheParametersInput {
  CacheParameterGroupName: String!
  Source: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeCacheParametersOutput {
  Marker: String
  Parameters: [AwsElastiCacheS2z]
  CacheNodeTypeSpecificParameters: [AwsElastiCacheS32]
}

input AwsElastiCacheDescribeCacheSecurityGroupsInput {
  CacheSecurityGroupName: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeCacheSecurityGroupsOutput {
  Marker: String
  CacheSecurityGroups: [AwsElastiCacheS8]
}

input AwsElastiCacheDescribeCacheSubnetGroupsInput {
  CacheSubnetGroupName: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeCacheSubnetGroupsOutput {
  Marker: String
  CacheSubnetGroups: [AwsElastiCacheS1p]
}

input AwsElastiCacheDescribeEngineDefaultParametersInput {
  CacheParameterGroupFamily: String!
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeEngineDefaultParametersOutput {
  EngineDefaults: AwsElastiCacheDescribeEngineDefaultParametersOutputEngineDefaults
}

type AwsElastiCacheDescribeEngineDefaultParametersOutputEngineDefaults {
  CacheParameterGroupFamily: String
  Marker: String
  Parameters: [AwsElastiCacheS2z]
  CacheNodeTypeSpecificParameters: [AwsElastiCacheS32]
}

input AwsElastiCacheDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeEventsOutput {
  Marker: String
  Events: [AwsElastiCacheDescribeEventsOutputEvents]
}

type AwsElastiCacheDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  Date: Date
}

input AwsElastiCacheDescribeReplicationGroupsInput {
  ReplicationGroupId: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeReplicationGroupsOutput {
  Marker: String
  ReplicationGroups: [AwsElastiCacheS1w]
}

input AwsElastiCacheDescribeReservedCacheNodesInput {
  ReservedCacheNodeId: String
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MaxRecords: Int
  Marker: String
}

input AwsElastiCacheDescribeReservedCacheNodesOfferingsInput {
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeReservedCacheNodesOfferingsOutput {
  Marker: String
  ReservedCacheNodesOfferings: [AwsElastiCacheDescribeReservedCacheNodesOfferingsOutputReservedCacheNodesOfferings]
}

type AwsElastiCacheDescribeReservedCacheNodesOfferingsOutputReservedCacheNodesOfferings {
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  ProductDescription: String
  OfferingType: String
  RecurringCharges: [AwsElastiCacheS3r]
}

type AwsElastiCacheDescribeReservedCacheNodesOutput {
  Marker: String
  ReservedCacheNodes: [AwsElastiCacheS3q]
}

input AwsElastiCacheDescribeServiceUpdatesInput {
  ServiceUpdateName: String
  ServiceUpdateStatus: [String]
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeServiceUpdatesOutput {
  Marker: String
  ServiceUpdates: [AwsElastiCacheDescribeServiceUpdatesOutputServiceUpdates]
}

type AwsElastiCacheDescribeServiceUpdatesOutputServiceUpdates {
  ServiceUpdateName: String
  ServiceUpdateReleaseDate: Date
  ServiceUpdateEndDate: Date
  ServiceUpdateSeverity: String
  ServiceUpdateRecommendedApplyByDate: Date
  ServiceUpdateStatus: String
  ServiceUpdateDescription: String
  ServiceUpdateType: String
  Engine: String
  EngineVersion: String
  AutoUpdateAfterRecommendedApplyByDate: Boolean
  EstimatedUpdateTime: String
}

input AwsElastiCacheDescribeSnapshotsInput {
  ReplicationGroupId: String
  CacheClusterId: String
  SnapshotName: String
  SnapshotSource: String
  Marker: String
  MaxRecords: Int
  ShowNodeGroupConfig: Boolean
}

type AwsElastiCacheDescribeSnapshotsOutput {
  Marker: String
  Snapshots: [AwsElastiCacheSm]
}

input AwsElastiCacheDescribeUpdateActionsInput {
  ServiceUpdateName: String
  ReplicationGroupIds: [String]
  ServiceUpdateStatus: [String]
  ServiceUpdateTimeRange: AwsElastiCacheDescribeUpdateActionsServiceUpdateTimeRangeInput
  UpdateActionStatus: [String]
  ShowNodeLevelUpdateStatus: Boolean
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeUpdateActionsOutput {
  Marker: String
  UpdateActions: [AwsElastiCacheDescribeUpdateActionsOutputUpdateActions]
}

type AwsElastiCacheDescribeUpdateActionsOutputUpdateActions {
  ReplicationGroupId: String
  ServiceUpdateName: String
  ServiceUpdateReleaseDate: Date
  ServiceUpdateSeverity: String
  ServiceUpdateStatus: String
  ServiceUpdateRecommendedApplyByDate: Date
  ServiceUpdateType: String
  UpdateActionAvailableDate: Date
  UpdateActionStatus: String
  NodesUpdated: String
  UpdateActionStatusModifiedDate: Date
  SlaMet: String
  NodeGroupUpdateStatus: [AwsElastiCacheDescribeUpdateActionsOutputUpdateActionsNodeGroupUpdateStatus]
  EstimatedUpdateTime: String
}

type AwsElastiCacheDescribeUpdateActionsOutputUpdateActionsNodeGroupUpdateStatus {
  NodeGroupId: String
  NodeGroupMemberUpdateStatus: [AwsElastiCacheDescribeUpdateActionsOutputUpdateActionsNodeGroupUpdateStatusNodeGroupMemberUpdateStatus]
}

type AwsElastiCacheDescribeUpdateActionsOutputUpdateActionsNodeGroupUpdateStatusNodeGroupMemberUpdateStatus {
  CacheClusterId: String
  CacheNodeId: String
  NodeUpdateStatus: String
  NodeDeletionDate: Date
  NodeUpdateStartDate: Date
  NodeUpdateEndDate: Date
  NodeUpdateInitiatedBy: String
  NodeUpdateInitiatedDate: Date
  NodeUpdateStatusModifiedDate: Date
}

input AwsElastiCacheDescribeUpdateActionsServiceUpdateTimeRangeInput {
  StartTime: Date
  EndTime: Date
}

input AwsElastiCacheIncreaseReplicaCountInput {
  ReplicationGroupId: String!
  NewReplicaCount: Int
  ReplicaConfiguration: [AwsElastiCacheS2aInput]
  ApplyImmediately: Boolean!
}

type AwsElastiCacheIncreaseReplicaCountOutput {
  ReplicationGroup: AwsElastiCacheS1w
}

input AwsElastiCacheListAllowedNodeTypeModificationsInput {
  CacheClusterId: String
  ReplicationGroupId: String
}

type AwsElastiCacheListAllowedNodeTypeModificationsOutput {
  ScaleUpModifications: [String]
}

input AwsElastiCacheListTagsForResourceInput {
  ResourceName: String!
}

input AwsElastiCacheModifyCacheClusterInput {
  CacheClusterId: String!
  NumCacheNodes: Int
  CacheNodeIdsToRemove: [String]
  AZMode: String
  NewAvailabilityZones: [String]
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  CacheParameterGroupName: String
  NotificationTopicStatus: String
  ApplyImmediately: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  CacheNodeType: String
}

type AwsElastiCacheModifyCacheClusterOutput {
  CacheCluster: AwsElastiCacheS14
}

input AwsElastiCacheModifyCacheParameterGroupInput {
  CacheParameterGroupName: String!
  ParameterNameValues: [AwsElastiCacheS4uInput]!
}

input AwsElastiCacheModifyCacheSubnetGroupInput {
  CacheSubnetGroupName: String!
  CacheSubnetGroupDescription: String
  SubnetIds: [String]
}

type AwsElastiCacheModifyCacheSubnetGroupOutput {
  CacheSubnetGroup: AwsElastiCacheS1p
}

input AwsElastiCacheModifyReplicationGroupInput {
  ReplicationGroupId: String!
  ReplicationGroupDescription: String
  PrimaryClusterId: String
  SnapshottingClusterId: String
  AutomaticFailoverEnabled: Boolean
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  CacheParameterGroupName: String
  NotificationTopicStatus: String
  ApplyImmediately: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  CacheNodeType: String
  NodeGroupId: String
}

type AwsElastiCacheModifyReplicationGroupOutput {
  ReplicationGroup: AwsElastiCacheS1w
}

input AwsElastiCacheModifyReplicationGroupShardConfigurationInput {
  ReplicationGroupId: String!
  NodeGroupCount: Int!
  ApplyImmediately: Boolean!
  ReshardingConfiguration: [AwsElastiCacheModifyReplicationGroupShardConfigurationReshardingConfigurationInput]
  NodeGroupsToRemove: [String]
  NodeGroupsToRetain: [String]
}

type AwsElastiCacheModifyReplicationGroupShardConfigurationOutput {
  ReplicationGroup: AwsElastiCacheS1w
}

input AwsElastiCacheModifyReplicationGroupShardConfigurationReshardingConfigurationInput {
  NodeGroupId: String
  PreferredAvailabilityZones: [String]
}

input AwsElastiCachePurchaseReservedCacheNodesOfferingInput {
  ReservedCacheNodesOfferingId: String!
  ReservedCacheNodeId: String
  CacheNodeCount: Int
}

type AwsElastiCachePurchaseReservedCacheNodesOfferingOutput {
  ReservedCacheNode: AwsElastiCacheS3q
}

input AwsElastiCacheRebootCacheClusterInput {
  CacheClusterId: String!
  CacheNodeIdsToReboot: [String]!
}

type AwsElastiCacheRebootCacheClusterOutput {
  CacheCluster: AwsElastiCacheS14
}

input AwsElastiCacheRemoveTagsFromResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsElastiCacheResetCacheParameterGroupInput {
  CacheParameterGroupName: String!
  ResetAllParameters: Boolean
  ParameterNameValues: [AwsElastiCacheS4uInput]
}

input AwsElastiCacheRevokeCacheSecurityGroupIngressInput {
  CacheSecurityGroupName: String!
  EC2SecurityGroupName: String!
  EC2SecurityGroupOwnerId: String!
}

type AwsElastiCacheRevokeCacheSecurityGroupIngressOutput {
  CacheSecurityGroup: AwsElastiCacheS8
}

type AwsElastiCacheS14 {
  CacheClusterId: String
  ConfigurationEndpoint: AwsElastiCacheS15
  ClientDownloadLandingPage: String
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  CacheClusterStatus: String
  NumCacheNodes: Int
  PreferredAvailabilityZone: String
  CacheClusterCreateTime: Date
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsElastiCacheS14PendingModifiedValues
  NotificationConfiguration: AwsElastiCacheS14NotificationConfiguration
  CacheSecurityGroups: [AwsElastiCacheS14CacheSecurityGroups]
  CacheParameterGroup: AwsElastiCacheS14CacheParameterGroup
  CacheSubnetGroupName: String
  CacheNodes: [AwsElastiCacheS14CacheNodes]
  AutoMinorVersionUpgrade: Boolean
  SecurityGroups: [AwsElastiCacheS14SecurityGroups]
  ReplicationGroupId: String
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  AuthTokenEnabled: Boolean
  TransitEncryptionEnabled: Boolean
  AtRestEncryptionEnabled: Boolean
}

type AwsElastiCacheS14CacheNodes {
  CacheNodeId: String
  CacheNodeStatus: String
  CacheNodeCreateTime: Date
  Endpoint: AwsElastiCacheS15
  ParameterGroupStatus: String
  SourceCacheNodeId: String
  CustomerAvailabilityZone: String
}

type AwsElastiCacheS14CacheParameterGroup {
  CacheParameterGroupName: String
  ParameterApplyStatus: String
  CacheNodeIdsToReboot: [String]
}

type AwsElastiCacheS14CacheSecurityGroups {
  CacheSecurityGroupName: String
  Status: String
}

type AwsElastiCacheS14NotificationConfiguration {
  TopicArn: String
  TopicStatus: String
}

type AwsElastiCacheS14PendingModifiedValues {
  NumCacheNodes: Int
  CacheNodeIdsToRemove: [String]
  EngineVersion: String
  CacheNodeType: String
}

type AwsElastiCacheS14SecurityGroups {
  SecurityGroupId: String
  Status: String
}

type AwsElastiCacheS15 {
  Address: String
  Port: Int
}

type AwsElastiCacheS1j {
  CacheParameterGroupName: String
  CacheParameterGroupFamily: String
  Description: String
}

type AwsElastiCacheS1p {
  CacheSubnetGroupName: String
  CacheSubnetGroupDescription: String
  VpcId: String
  Subnets: [AwsElastiCacheS1pSubnets]
}

type AwsElastiCacheS1pSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsElastiCacheS1pSubnetsSubnetAvailabilityZone
}

type AwsElastiCacheS1pSubnetsSubnetAvailabilityZone {
  Name: String
}

type AwsElastiCacheS1w {
  ReplicationGroupId: String
  Description: String
  Status: String
  PendingModifiedValues: AwsElastiCacheS1wPendingModifiedValues
  MemberClusters: [String]
  NodeGroups: [AwsElastiCacheS1wNodeGroups]
  SnapshottingClusterId: String
  AutomaticFailover: String
  ConfigurationEndpoint: AwsElastiCacheS15
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  ClusterEnabled: Boolean
  CacheNodeType: String
  AuthTokenEnabled: Boolean
  TransitEncryptionEnabled: Boolean
  AtRestEncryptionEnabled: Boolean
}

type AwsElastiCacheS1wNodeGroups {
  NodeGroupId: String
  Status: String
  PrimaryEndpoint: AwsElastiCacheS15
  ReaderEndpoint: AwsElastiCacheS15
  Slots: String
  NodeGroupMembers: [AwsElastiCacheS1wNodeGroupsNodeGroupMembers]
}

type AwsElastiCacheS1wNodeGroupsNodeGroupMembers {
  CacheClusterId: String
  CacheNodeId: String
  ReadEndpoint: AwsElastiCacheS15
  PreferredAvailabilityZone: String
  CurrentRole: String
}

type AwsElastiCacheS1wPendingModifiedValues {
  PrimaryClusterId: String
  AutomaticFailoverStatus: String
  Resharding: AwsElastiCacheS1wPendingModifiedValuesResharding
}

type AwsElastiCacheS1wPendingModifiedValuesResharding {
  SlotMigration: AwsElastiCacheS1wPendingModifiedValuesReshardingSlotMigration
}

type AwsElastiCacheS1wPendingModifiedValuesReshardingSlotMigration {
  ProgressPercentage: JSON
}

input AwsElastiCacheS2aInput {
  NodeGroupId: String!
  NewReplicaCount: Int!
  PreferredAvailabilityZones: [String]
}

type AwsElastiCacheS2z {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ChangeType: String
}

type AwsElastiCacheS32 {
  ParameterName: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  CacheNodeTypeSpecificValues: [AwsElastiCacheS32CacheNodeTypeSpecificValues]
  ChangeType: String
}

type AwsElastiCacheS32CacheNodeTypeSpecificValues {
  CacheNodeType: String
  Value: String
}

input AwsElastiCacheS3Input {
  Key: String
  Value: String
}

type AwsElastiCacheS3q {
  ReservedCacheNodeId: String
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  StartTime: Date
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CacheNodeCount: Int
  ProductDescription: String
  OfferingType: String
  State: String
  RecurringCharges: [AwsElastiCacheS3r]
  ReservationARN: String
}

type AwsElastiCacheS3r {
  RecurringChargeAmount: JSON
  RecurringChargeFrequency: String
}

input AwsElastiCacheS4uInput {
  ParameterName: String
  ParameterValue: String
}

type AwsElastiCacheS8 {
  OwnerId: String
  CacheSecurityGroupName: String
  Description: String
  EC2SecurityGroups: [AwsElastiCacheS8EC2SecurityGroups]
}

type AwsElastiCacheS8EC2SecurityGroups {
  Status: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
}

type AwsElastiCacheSm {
  SnapshotName: String
  ReplicationGroupId: String
  ReplicationGroupDescription: String
  CacheClusterId: String
  SnapshotStatus: String
  SnapshotSource: String
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  NumCacheNodes: Int
  PreferredAvailabilityZone: String
  CacheClusterCreateTime: Date
  PreferredMaintenanceWindow: String
  TopicArn: String
  Port: Int
  CacheParameterGroupName: String
  CacheSubnetGroupName: String
  VpcId: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  NumNodeGroups: Int
  AutomaticFailover: String
  NodeSnapshots: [AwsElastiCacheSmNodeSnapshots]
}

type AwsElastiCacheSmNodeSnapshots {
  CacheClusterId: String
  NodeGroupId: String
  CacheNodeId: String
  NodeGroupConfiguration: AwsElastiCacheSt
  CacheSize: String
  CacheNodeCreateTime: Date
  SnapshotCreateTime: Date
}

type AwsElastiCacheSt {
  NodeGroupId: String
  Slots: String
  ReplicaCount: Int
  PrimaryAvailabilityZone: String
  ReplicaAvailabilityZones: [String]
}

input AwsElastiCacheStInput {
  NodeGroupId: String
  Slots: String
  ReplicaCount: Int
  PrimaryAvailabilityZone: String
  ReplicaAvailabilityZones: [String]
}

input AwsElastiCacheTestFailoverInput {
  ReplicationGroupId: String!
  NodeGroupId: String!
}

type AwsElastiCacheTestFailoverOutput {
  ReplicationGroup: AwsElastiCacheS1w
}

"""AWS Elastic Beanstalk (2010-12-01)"""
type AwsElasticBeanstalk {
  abortEnvironmentUpdate(input: AwsElasticBeanstalkAbortEnvironmentUpdateInput, config: AwsConfig): JSON
  applyEnvironmentManagedAction(input: AwsElasticBeanstalkApplyEnvironmentManagedActionInput!, config: AwsConfig): AwsElasticBeanstalkApplyEnvironmentManagedActionOutput
  checkDNSAvailability(input: AwsElasticBeanstalkCheckDNSAvailabilityInput!, config: AwsConfig): AwsElasticBeanstalkCheckDNSAvailabilityOutput
  composeEnvironments(input: AwsElasticBeanstalkComposeEnvironmentsInput, config: AwsConfig): JSON
  createApplication(input: AwsElasticBeanstalkCreateApplicationInput!, config: AwsConfig): JSON
  createApplicationVersion(input: AwsElasticBeanstalkCreateApplicationVersionInput!, config: AwsConfig): JSON
  createConfigurationTemplate(input: AwsElasticBeanstalkCreateConfigurationTemplateInput!, config: AwsConfig): JSON
  createEnvironment(input: AwsElasticBeanstalkCreateEnvironmentInput!, config: AwsConfig): JSON
  createPlatformVersion(input: AwsElasticBeanstalkCreatePlatformVersionInput!, config: AwsConfig): AwsElasticBeanstalkCreatePlatformVersionOutput
  createStorageLocation(config: AwsConfig): AwsElasticBeanstalkCreateStorageLocationOutput
  deleteApplication(input: AwsElasticBeanstalkDeleteApplicationInput!, config: AwsConfig): JSON
  deleteApplicationVersion(input: AwsElasticBeanstalkDeleteApplicationVersionInput!, config: AwsConfig): JSON
  deleteConfigurationTemplate(input: AwsElasticBeanstalkDeleteConfigurationTemplateInput!, config: AwsConfig): JSON
  deleteEnvironmentConfiguration(input: AwsElasticBeanstalkDeleteEnvironmentConfigurationInput!, config: AwsConfig): JSON
  deletePlatformVersion(input: AwsElasticBeanstalkDeletePlatformVersionInput, config: AwsConfig): AwsElasticBeanstalkDeletePlatformVersionOutput
  describeAccountAttributes(config: AwsConfig): AwsElasticBeanstalkDescribeAccountAttributesOutput
  describeApplicationVersions(input: AwsElasticBeanstalkDescribeApplicationVersionsInput, config: AwsConfig): AwsElasticBeanstalkDescribeApplicationVersionsOutput
  describeApplications(input: AwsElasticBeanstalkDescribeApplicationsInput, config: AwsConfig): AwsElasticBeanstalkDescribeApplicationsOutput
  describeConfigurationOptions(input: AwsElasticBeanstalkDescribeConfigurationOptionsInput, config: AwsConfig): AwsElasticBeanstalkDescribeConfigurationOptionsOutput
  describeConfigurationSettings(input: AwsElasticBeanstalkDescribeConfigurationSettingsInput!, config: AwsConfig): AwsElasticBeanstalkDescribeConfigurationSettingsOutput
  describeEnvironmentHealth(input: AwsElasticBeanstalkDescribeEnvironmentHealthInput, config: AwsConfig): AwsElasticBeanstalkDescribeEnvironmentHealthOutput
  describeEnvironmentManagedActionHistory(input: AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryInput, config: AwsConfig): AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryOutput
  describeEnvironmentManagedActions(input: AwsElasticBeanstalkDescribeEnvironmentManagedActionsInput, config: AwsConfig): AwsElasticBeanstalkDescribeEnvironmentManagedActionsOutput
  describeEnvironmentResources(input: AwsElasticBeanstalkDescribeEnvironmentResourcesInput, config: AwsConfig): AwsElasticBeanstalkDescribeEnvironmentResourcesOutput
  describeEnvironments(input: AwsElasticBeanstalkDescribeEnvironmentsInput, config: AwsConfig): JSON
  describeEvents(input: AwsElasticBeanstalkDescribeEventsInput, config: AwsConfig): AwsElasticBeanstalkDescribeEventsOutput
  describeInstancesHealth(input: AwsElasticBeanstalkDescribeInstancesHealthInput, config: AwsConfig): AwsElasticBeanstalkDescribeInstancesHealthOutput
  describePlatformVersion(input: AwsElasticBeanstalkDescribePlatformVersionInput, config: AwsConfig): AwsElasticBeanstalkDescribePlatformVersionOutput
  listAvailableSolutionStacks(config: AwsConfig): AwsElasticBeanstalkListAvailableSolutionStacksOutput
  listPlatformVersions(input: AwsElasticBeanstalkListPlatformVersionsInput, config: AwsConfig): AwsElasticBeanstalkListPlatformVersionsOutput
  listTagsForResource(input: AwsElasticBeanstalkListTagsForResourceInput!, config: AwsConfig): AwsElasticBeanstalkListTagsForResourceOutput
  rebuildEnvironment(input: AwsElasticBeanstalkRebuildEnvironmentInput, config: AwsConfig): JSON
  requestEnvironmentInfo(input: AwsElasticBeanstalkRequestEnvironmentInfoInput!, config: AwsConfig): JSON
  restartAppServer(input: AwsElasticBeanstalkRestartAppServerInput, config: AwsConfig): JSON
  retrieveEnvironmentInfo(input: AwsElasticBeanstalkRetrieveEnvironmentInfoInput!, config: AwsConfig): AwsElasticBeanstalkRetrieveEnvironmentInfoOutput
  swapEnvironmentCNAMEs(input: AwsElasticBeanstalkSwapEnvironmentCNAMEsInput, config: AwsConfig): JSON
  terminateEnvironment(input: AwsElasticBeanstalkTerminateEnvironmentInput, config: AwsConfig): JSON
  updateApplication(input: AwsElasticBeanstalkUpdateApplicationInput!, config: AwsConfig): JSON
  updateApplicationResourceLifecycle(input: AwsElasticBeanstalkUpdateApplicationResourceLifecycleInput!, config: AwsConfig): AwsElasticBeanstalkUpdateApplicationResourceLifecycleOutput
  updateApplicationVersion(input: AwsElasticBeanstalkUpdateApplicationVersionInput!, config: AwsConfig): JSON
  updateConfigurationTemplate(input: AwsElasticBeanstalkUpdateConfigurationTemplateInput!, config: AwsConfig): JSON
  updateEnvironment(input: AwsElasticBeanstalkUpdateEnvironmentInput, config: AwsConfig): JSON
  updateTagsForResource(input: AwsElasticBeanstalkUpdateTagsForResourceInput!, config: AwsConfig): JSON
  validateConfigurationSettings(input: AwsElasticBeanstalkValidateConfigurationSettingsInput!, config: AwsConfig): AwsElasticBeanstalkValidateConfigurationSettingsOutput
}

input AwsElasticBeanstalkAbortEnvironmentUpdateInput {
  EnvironmentId: String
  EnvironmentName: String
}

input AwsElasticBeanstalkApplyEnvironmentManagedActionInput {
  EnvironmentName: String
  EnvironmentId: String
  ActionId: String!
}

type AwsElasticBeanstalkApplyEnvironmentManagedActionOutput {
  ActionId: String
  ActionDescription: String
  ActionType: String
  Status: String
}

input AwsElasticBeanstalkCheckDNSAvailabilityInput {
  CNAMEPrefix: String!
}

type AwsElasticBeanstalkCheckDNSAvailabilityOutput {
  Available: Boolean
  FullyQualifiedCNAME: String
}

input AwsElasticBeanstalkComposeEnvironmentsInput {
  ApplicationName: String
  GroupName: String
  VersionLabels: [String]
}

input AwsElasticBeanstalkCreateApplicationInput {
  ApplicationName: String!
  Description: String
  ResourceLifecycleConfig: AwsElasticBeanstalkS17Input
  Tags: [AwsElasticBeanstalkS1eInput]
}

input AwsElasticBeanstalkCreateApplicationVersionBuildConfigurationInput {
  ArtifactName: String
  CodeBuildServiceRole: String!
  ComputeType: String
  Image: String!
  TimeoutInMinutes: Int
}

input AwsElasticBeanstalkCreateApplicationVersionInput {
  ApplicationName: String!
  VersionLabel: String!
  Description: String
  SourceBuildInformation: AwsElasticBeanstalkS1nInput
  SourceBundle: AwsElasticBeanstalkS1rInput
  BuildConfiguration: AwsElasticBeanstalkCreateApplicationVersionBuildConfigurationInput
  AutoCreateApplication: Boolean
  Process: Boolean
  Tags: [AwsElasticBeanstalkS1eInput]
}

input AwsElasticBeanstalkCreateConfigurationTemplateInput {
  ApplicationName: String!
  TemplateName: String!
  SolutionStackName: String
  PlatformArn: String
  SourceConfiguration: AwsElasticBeanstalkCreateConfigurationTemplateSourceConfigurationInput
  EnvironmentId: String
  Description: String
  OptionSettings: [AwsElasticBeanstalkS25Input]
  Tags: [AwsElasticBeanstalkS1eInput]
}

input AwsElasticBeanstalkCreateConfigurationTemplateSourceConfigurationInput {
  ApplicationName: String
  TemplateName: String
}

input AwsElasticBeanstalkCreateEnvironmentInput {
  ApplicationName: String!
  EnvironmentName: String
  GroupName: String
  Description: String
  CNAMEPrefix: String
  Tier: AwsElasticBeanstalkS11Input
  Tags: [AwsElasticBeanstalkS1eInput]
  VersionLabel: String
  TemplateName: String
  SolutionStackName: String
  PlatformArn: String
  OptionSettings: [AwsElasticBeanstalkS25Input]
  OptionsToRemove: [AwsElasticBeanstalkS2eInput]
}

input AwsElasticBeanstalkCreatePlatformVersionInput {
  PlatformName: String!
  PlatformVersion: String!
  PlatformDefinitionBundle: AwsElasticBeanstalkS1rInput!
  EnvironmentName: String
  OptionSettings: [AwsElasticBeanstalkS25Input]
  Tags: [AwsElasticBeanstalkS1eInput]
}

type AwsElasticBeanstalkCreatePlatformVersionOutput {
  PlatformSummary: AwsElasticBeanstalkS2k
  Builder: AwsElasticBeanstalkCreatePlatformVersionOutputBuilder
}

type AwsElasticBeanstalkCreatePlatformVersionOutputBuilder {
  ARN: String
}

type AwsElasticBeanstalkCreateStorageLocationOutput {
  S3Bucket: String
}

input AwsElasticBeanstalkDeleteApplicationInput {
  ApplicationName: String!
  TerminateEnvByForce: Boolean
}

input AwsElasticBeanstalkDeleteApplicationVersionInput {
  ApplicationName: String!
  VersionLabel: String!
  DeleteSourceBundle: Boolean
}

input AwsElasticBeanstalkDeleteConfigurationTemplateInput {
  ApplicationName: String!
  TemplateName: String!
}

input AwsElasticBeanstalkDeleteEnvironmentConfigurationInput {
  ApplicationName: String!
  EnvironmentName: String!
}

input AwsElasticBeanstalkDeletePlatformVersionInput {
  PlatformArn: String
}

type AwsElasticBeanstalkDeletePlatformVersionOutput {
  PlatformSummary: AwsElasticBeanstalkS2k
}

type AwsElasticBeanstalkDescribeAccountAttributesOutput {
  ResourceQuotas: AwsElasticBeanstalkDescribeAccountAttributesOutputResourceQuotas
}

type AwsElasticBeanstalkDescribeAccountAttributesOutputResourceQuotas {
  ApplicationQuota: AwsElasticBeanstalkS37
  ApplicationVersionQuota: AwsElasticBeanstalkS37
  EnvironmentQuota: AwsElasticBeanstalkS37
  ConfigurationTemplateQuota: AwsElasticBeanstalkS37
  CustomPlatformQuota: AwsElasticBeanstalkS37
}

input AwsElasticBeanstalkDescribeApplicationsInput {
  ApplicationNames: [String]
}

type AwsElasticBeanstalkDescribeApplicationsOutput {
  Applications: [AwsElasticBeanstalkS1i]
}

input AwsElasticBeanstalkDescribeApplicationVersionsInput {
  ApplicationName: String
  VersionLabels: [String]
  MaxRecords: Int
  NextToken: String
}

type AwsElasticBeanstalkDescribeApplicationVersionsOutput {
  ApplicationVersions: [AwsElasticBeanstalkS20]
  NextToken: String
}

input AwsElasticBeanstalkDescribeConfigurationOptionsInput {
  ApplicationName: String
  TemplateName: String
  EnvironmentName: String
  SolutionStackName: String
  PlatformArn: String
  Options: [AwsElasticBeanstalkS2eInput]
}

type AwsElasticBeanstalkDescribeConfigurationOptionsOutput {
  SolutionStackName: String
  PlatformArn: String
  Options: [AwsElasticBeanstalkDescribeConfigurationOptionsOutputOptions]
}

type AwsElasticBeanstalkDescribeConfigurationOptionsOutputOptions {
  Namespace: String
  Name: String
  DefaultValue: String
  ChangeSeverity: String
  UserDefined: Boolean
  ValueType: String
  ValueOptions: [String]
  MinValue: Int
  MaxValue: Int
  MaxLength: Int
  Regex: AwsElasticBeanstalkDescribeConfigurationOptionsOutputOptionsRegex
}

type AwsElasticBeanstalkDescribeConfigurationOptionsOutputOptionsRegex {
  Pattern: String
  Label: String
}

input AwsElasticBeanstalkDescribeConfigurationSettingsInput {
  ApplicationName: String!
  TemplateName: String
  EnvironmentName: String
}

type AwsElasticBeanstalkDescribeConfigurationSettingsOutput {
  ConfigurationSettings: [AwsElasticBeanstalkS2b]
}

input AwsElasticBeanstalkDescribeEnvironmentHealthInput {
  EnvironmentName: String
  EnvironmentId: String
  AttributeNames: [String]
}

type AwsElasticBeanstalkDescribeEnvironmentHealthOutput {
  EnvironmentName: String
  HealthStatus: String
  Status: String
  Color: String
  Causes: [String]
  ApplicationMetrics: AwsElasticBeanstalkS45
  InstancesHealth: AwsElasticBeanstalkDescribeEnvironmentHealthOutputInstancesHealth
  RefreshedAt: Date
}

type AwsElasticBeanstalkDescribeEnvironmentHealthOutputInstancesHealth {
  NoData: Int
  Unknown: Int
  Pending: Int
  Ok: Int
  Info: Int
  Warning: Int
  Degraded: Int
  Severe: Int
}

input AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryInput {
  EnvironmentId: String
  EnvironmentName: String
  NextToken: String
  MaxItems: Int
}

type AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryOutput {
  ManagedActionHistoryItems: [AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryOutputManagedActionHistoryItems]
  NextToken: String
}

type AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryOutputManagedActionHistoryItems {
  ActionId: String
  ActionType: String
  ActionDescription: String
  FailureType: String
  Status: String
  FailureDescription: String
  ExecutedTime: Date
  FinishedTime: Date
}

input AwsElasticBeanstalkDescribeEnvironmentManagedActionsInput {
  EnvironmentName: String
  EnvironmentId: String
  Status: String
}

type AwsElasticBeanstalkDescribeEnvironmentManagedActionsOutput {
  ManagedActions: [AwsElasticBeanstalkDescribeEnvironmentManagedActionsOutputManagedActions]
}

type AwsElasticBeanstalkDescribeEnvironmentManagedActionsOutputManagedActions {
  ActionId: String
  ActionDescription: String
  ActionType: String
  Status: String
  WindowStartTime: Date
}

input AwsElasticBeanstalkDescribeEnvironmentResourcesInput {
  EnvironmentId: String
  EnvironmentName: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutput {
  EnvironmentResources: AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResources
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResources {
  EnvironmentName: String
  AutoScalingGroups: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesAutoScalingGroups]
  Instances: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesInstances]
  LaunchConfigurations: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLaunchConfigurations]
  LaunchTemplates: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLaunchTemplates]
  LoadBalancers: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLoadBalancers]
  Triggers: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesTriggers]
  Queues: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesQueues]
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesAutoScalingGroups {
  Name: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesInstances {
  Id: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLaunchConfigurations {
  Name: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLaunchTemplates {
  Id: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLoadBalancers {
  Name: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesQueues {
  Name: String
  URL: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesTriggers {
  Name: String
}

input AwsElasticBeanstalkDescribeEnvironmentsInput {
  ApplicationName: String
  VersionLabel: String
  EnvironmentIds: [String]
  EnvironmentNames: [String]
  IncludeDeleted: Boolean
  IncludedDeletedBackTo: Date
  MaxRecords: Int
  NextToken: String
}

input AwsElasticBeanstalkDescribeEventsInput {
  ApplicationName: String
  VersionLabel: String
  TemplateName: String
  EnvironmentId: String
  EnvironmentName: String
  PlatformArn: String
  RequestId: String
  Severity: String
  StartTime: Date
  EndTime: Date
  MaxRecords: Int
  NextToken: String
}

type AwsElasticBeanstalkDescribeEventsOutput {
  Events: [AwsElasticBeanstalkDescribeEventsOutputEvents]
  NextToken: String
}

type AwsElasticBeanstalkDescribeEventsOutputEvents {
  EventDate: Date
  Message: String
  ApplicationName: String
  VersionLabel: String
  TemplateName: String
  EnvironmentName: String
  PlatformArn: String
  RequestId: String
  Severity: String
}

input AwsElasticBeanstalkDescribeInstancesHealthInput {
  EnvironmentName: String
  EnvironmentId: String
  AttributeNames: [String]
  NextToken: String
}

type AwsElasticBeanstalkDescribeInstancesHealthOutput {
  InstanceHealthList: [AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthList]
  RefreshedAt: Date
  NextToken: String
}

type AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthList {
  InstanceId: String
  HealthStatus: String
  Color: String
  Causes: [String]
  LaunchedAt: Date
  ApplicationMetrics: AwsElasticBeanstalkS45
  System: AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListSystem
  Deployment: AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListDeployment
  AvailabilityZone: String
  InstanceType: String
}

type AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListDeployment {
  VersionLabel: String
  DeploymentId: JSON
  Status: String
  DeploymentTime: Date
}

type AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListSystem {
  CPUUtilization: AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListSystemCPUUtilization
  LoadAverage: [JSON]
}

type AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListSystemCPUUtilization {
  User: JSON
  Nice: JSON
  System: JSON
  Idle: JSON
  IOWait: JSON
  IRQ: JSON
  SoftIRQ: JSON
  Privileged: JSON
}

input AwsElasticBeanstalkDescribePlatformVersionInput {
  PlatformArn: String
}

type AwsElasticBeanstalkDescribePlatformVersionOutput {
  PlatformDescription: AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescription
}

type AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescription {
  PlatformArn: String
  PlatformOwner: String
  PlatformName: String
  PlatformVersion: String
  SolutionStackName: String
  PlatformStatus: String
  DateCreated: Date
  DateUpdated: Date
  PlatformCategory: String
  Description: String
  Maintainer: String
  OperatingSystemName: String
  OperatingSystemVersion: String
  ProgrammingLanguages: [AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionProgrammingLanguages]
  Frameworks: [AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionFrameworks]
  CustomAmiList: [AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionCustomAmiList]
  SupportedTierList: [String]
  SupportedAddonList: [String]
}

type AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionCustomAmiList {
  VirtualizationType: String
  ImageId: String
}

type AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionFrameworks {
  Name: String
  Version: String
}

type AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionProgrammingLanguages {
  Name: String
  Version: String
}

type AwsElasticBeanstalkListAvailableSolutionStacksOutput {
  SolutionStacks: [String]
  SolutionStackDetails: [AwsElasticBeanstalkListAvailableSolutionStacksOutputSolutionStackDetails]
}

type AwsElasticBeanstalkListAvailableSolutionStacksOutputSolutionStackDetails {
  SolutionStackName: String
  PermittedFileTypes: [String]
}

input AwsElasticBeanstalkListPlatformVersionsFiltersInput {
  Type: String
  Operator: String
  Values: [String]
}

input AwsElasticBeanstalkListPlatformVersionsInput {
  Filters: [AwsElasticBeanstalkListPlatformVersionsFiltersInput]
  MaxRecords: Int
  NextToken: String
}

type AwsElasticBeanstalkListPlatformVersionsOutput {
  PlatformSummaryList: [AwsElasticBeanstalkS2k]
  NextToken: String
}

input AwsElasticBeanstalkListTagsForResourceInput {
  ResourceArn: String!
}

type AwsElasticBeanstalkListTagsForResourceOutput {
  ResourceArn: String
  ResourceTags: [AwsElasticBeanstalkS1e]
}

input AwsElasticBeanstalkRebuildEnvironmentInput {
  EnvironmentId: String
  EnvironmentName: String
}

input AwsElasticBeanstalkRequestEnvironmentInfoInput {
  EnvironmentId: String
  EnvironmentName: String
  InfoType: String!
}

input AwsElasticBeanstalkRestartAppServerInput {
  EnvironmentId: String
  EnvironmentName: String
}

input AwsElasticBeanstalkRetrieveEnvironmentInfoInput {
  EnvironmentId: String
  EnvironmentName: String
  InfoType: String!
}

type AwsElasticBeanstalkRetrieveEnvironmentInfoOutput {
  EnvironmentInfo: [AwsElasticBeanstalkRetrieveEnvironmentInfoOutputEnvironmentInfo]
}

type AwsElasticBeanstalkRetrieveEnvironmentInfoOutputEnvironmentInfo {
  InfoType: String
  Ec2InstanceId: String
  SampleTimestamp: Date
  Message: String
}

input AwsElasticBeanstalkS11Input {
  Name: String
  Type: String
  Version: String
}

type AwsElasticBeanstalkS17 {
  ServiceRole: String
  VersionLifecycleConfig: AwsElasticBeanstalkS17VersionLifecycleConfig
}

input AwsElasticBeanstalkS17Input {
  ServiceRole: String
  VersionLifecycleConfig: AwsElasticBeanstalkS17VersionLifecycleConfigInput
}

type AwsElasticBeanstalkS17VersionLifecycleConfig {
  MaxCountRule: AwsElasticBeanstalkS17VersionLifecycleConfigMaxCountRule
  MaxAgeRule: AwsElasticBeanstalkS17VersionLifecycleConfigMaxAgeRule
}

input AwsElasticBeanstalkS17VersionLifecycleConfigInput {
  MaxCountRule: AwsElasticBeanstalkS17VersionLifecycleConfigMaxCountRuleInput
  MaxAgeRule: AwsElasticBeanstalkS17VersionLifecycleConfigMaxAgeRuleInput
}

type AwsElasticBeanstalkS17VersionLifecycleConfigMaxAgeRule {
  Enabled: Boolean!
  MaxAgeInDays: Int
  DeleteSourceFromS3: Boolean
}

input AwsElasticBeanstalkS17VersionLifecycleConfigMaxAgeRuleInput {
  Enabled: Boolean!
  MaxAgeInDays: Int
  DeleteSourceFromS3: Boolean
}

type AwsElasticBeanstalkS17VersionLifecycleConfigMaxCountRule {
  Enabled: Boolean!
  MaxCount: Int
  DeleteSourceFromS3: Boolean
}

input AwsElasticBeanstalkS17VersionLifecycleConfigMaxCountRuleInput {
  Enabled: Boolean!
  MaxCount: Int
  DeleteSourceFromS3: Boolean
}

type AwsElasticBeanstalkS1e {
  Key: String
  Value: String
}

input AwsElasticBeanstalkS1eInput {
  Key: String
  Value: String
}

type AwsElasticBeanstalkS1i {
  ApplicationArn: String
  ApplicationName: String
  Description: String
  DateCreated: Date
  DateUpdated: Date
  Versions: [String]
  ConfigurationTemplates: [String]
  ResourceLifecycleConfig: AwsElasticBeanstalkS17
}

type AwsElasticBeanstalkS1n {
  SourceType: String!
  SourceRepository: String!
  SourceLocation: String!
}

input AwsElasticBeanstalkS1nInput {
  SourceType: String!
  SourceRepository: String!
  SourceLocation: String!
}

type AwsElasticBeanstalkS1r {
  S3Bucket: String
  S3Key: String
}

input AwsElasticBeanstalkS1rInput {
  S3Bucket: String
  S3Key: String
}

type AwsElasticBeanstalkS20 {
  ApplicationVersionArn: String
  ApplicationName: String
  Description: String
  VersionLabel: String
  SourceBuildInformation: AwsElasticBeanstalkS1n
  BuildArn: String
  SourceBundle: AwsElasticBeanstalkS1r
  DateCreated: Date
  DateUpdated: Date
  Status: String
}

type AwsElasticBeanstalkS25 {
  ResourceName: String
  Namespace: String
  OptionName: String
  Value: String
}

input AwsElasticBeanstalkS25Input {
  ResourceName: String
  Namespace: String
  OptionName: String
  Value: String
}

type AwsElasticBeanstalkS2b {
  SolutionStackName: String
  PlatformArn: String
  ApplicationName: String
  TemplateName: String
  Description: String
  EnvironmentName: String
  DeploymentStatus: String
  DateCreated: Date
  DateUpdated: Date
  OptionSettings: [AwsElasticBeanstalkS25]
}

input AwsElasticBeanstalkS2eInput {
  ResourceName: String
  Namespace: String
  OptionName: String
}

type AwsElasticBeanstalkS2k {
  PlatformArn: String
  PlatformOwner: String
  PlatformStatus: String
  PlatformCategory: String
  OperatingSystemName: String
  OperatingSystemVersion: String
  SupportedTierList: [String]
  SupportedAddonList: [String]
}

type AwsElasticBeanstalkS37 {
  Maximum: Int
}

type AwsElasticBeanstalkS45 {
  Duration: Int
  RequestCount: Int
  StatusCodes: AwsElasticBeanstalkS45StatusCodes
  Latency: AwsElasticBeanstalkS45Latency
}

type AwsElasticBeanstalkS45Latency {
  P999: JSON
  P99: JSON
  P95: JSON
  P90: JSON
  P85: JSON
  P75: JSON
  P50: JSON
  P10: JSON
}

type AwsElasticBeanstalkS45StatusCodes {
  Status2xx: Int
  Status3xx: Int
  Status4xx: Int
  Status5xx: Int
}

input AwsElasticBeanstalkSwapEnvironmentCNAMEsInput {
  SourceEnvironmentId: String
  SourceEnvironmentName: String
  DestinationEnvironmentId: String
  DestinationEnvironmentName: String
}

input AwsElasticBeanstalkTerminateEnvironmentInput {
  EnvironmentId: String
  EnvironmentName: String
  TerminateResources: Boolean
  ForceTerminate: Boolean
}

input AwsElasticBeanstalkUpdateApplicationInput {
  ApplicationName: String!
  Description: String
}

input AwsElasticBeanstalkUpdateApplicationResourceLifecycleInput {
  ApplicationName: String!
  ResourceLifecycleConfig: AwsElasticBeanstalkS17Input!
}

type AwsElasticBeanstalkUpdateApplicationResourceLifecycleOutput {
  ApplicationName: String
  ResourceLifecycleConfig: AwsElasticBeanstalkS17
}

input AwsElasticBeanstalkUpdateApplicationVersionInput {
  ApplicationName: String!
  VersionLabel: String!
  Description: String
}

input AwsElasticBeanstalkUpdateConfigurationTemplateInput {
  ApplicationName: String!
  TemplateName: String!
  Description: String
  OptionSettings: [AwsElasticBeanstalkS25Input]
  OptionsToRemove: [AwsElasticBeanstalkS2eInput]
}

input AwsElasticBeanstalkUpdateEnvironmentInput {
  ApplicationName: String
  EnvironmentId: String
  EnvironmentName: String
  GroupName: String
  Description: String
  Tier: AwsElasticBeanstalkS11Input
  VersionLabel: String
  TemplateName: String
  SolutionStackName: String
  PlatformArn: String
  OptionSettings: [AwsElasticBeanstalkS25Input]
  OptionsToRemove: [AwsElasticBeanstalkS2eInput]
}

input AwsElasticBeanstalkUpdateTagsForResourceInput {
  ResourceArn: String!
  TagsToAdd: [AwsElasticBeanstalkS1eInput]
  TagsToRemove: [String]
}

input AwsElasticBeanstalkValidateConfigurationSettingsInput {
  ApplicationName: String!
  TemplateName: String
  EnvironmentName: String
  OptionSettings: [AwsElasticBeanstalkS25Input]!
}

type AwsElasticBeanstalkValidateConfigurationSettingsOutput {
  Messages: [AwsElasticBeanstalkValidateConfigurationSettingsOutputMessages]
}

type AwsElasticBeanstalkValidateConfigurationSettingsOutputMessages {
  Message: String
  Severity: String
  Namespace: String
  OptionName: String
}

"""Amazon Elastic Transcoder (2012-09-25)"""
type AwsElasticTranscoder {
  cancelJob(input: AwsElasticTranscoderCancelJobInput!, config: AwsConfig): JSON
  createJob(input: AwsElasticTranscoderCreateJobInput!, config: AwsConfig): AwsElasticTranscoderCreateJobOutput
  createPipeline(input: AwsElasticTranscoderCreatePipelineInput!, config: AwsConfig): AwsElasticTranscoderCreatePipelineOutput
  createPreset(input: AwsElasticTranscoderCreatePresetInput!, config: AwsConfig): AwsElasticTranscoderCreatePresetOutput
  deletePipeline(input: AwsElasticTranscoderDeletePipelineInput!, config: AwsConfig): JSON
  deletePreset(input: AwsElasticTranscoderDeletePresetInput!, config: AwsConfig): JSON
  listJobsByPipeline(input: AwsElasticTranscoderListJobsByPipelineInput!, config: AwsConfig): AwsElasticTranscoderListJobsByPipelineOutput
  listJobsByStatus(input: AwsElasticTranscoderListJobsByStatusInput!, config: AwsConfig): AwsElasticTranscoderListJobsByStatusOutput
  listPipelines(input: AwsElasticTranscoderListPipelinesInput, config: AwsConfig): AwsElasticTranscoderListPipelinesOutput
  listPresets(input: AwsElasticTranscoderListPresetsInput, config: AwsConfig): AwsElasticTranscoderListPresetsOutput
  readJob(input: AwsElasticTranscoderReadJobInput!, config: AwsConfig): AwsElasticTranscoderReadJobOutput
  readPipeline(input: AwsElasticTranscoderReadPipelineInput!, config: AwsConfig): AwsElasticTranscoderReadPipelineOutput
  readPreset(input: AwsElasticTranscoderReadPresetInput!, config: AwsConfig): AwsElasticTranscoderReadPresetOutput
  testRole(input: AwsElasticTranscoderTestRoleInput!, config: AwsConfig): AwsElasticTranscoderTestRoleOutput
  updatePipeline(input: AwsElasticTranscoderUpdatePipelineInput!, config: AwsConfig): AwsElasticTranscoderUpdatePipelineOutput
  updatePipelineNotifications(input: AwsElasticTranscoderUpdatePipelineNotificationsInput!, config: AwsConfig): AwsElasticTranscoderUpdatePipelineNotificationsOutput
  updatePipelineStatus(input: AwsElasticTranscoderUpdatePipelineStatusInput!, config: AwsConfig): AwsElasticTranscoderUpdatePipelineStatusOutput
}

input AwsElasticTranscoderCancelJobInput {
  Id: String!
}

input AwsElasticTranscoderCreateJobInput {
  PipelineId: String!
  Input: AwsElasticTranscoderS5Input
  Inputs: [AwsElasticTranscoderS5Input]
  Output: AwsElasticTranscoderSuInput
  Outputs: [AwsElasticTranscoderSuInput]
  OutputKeyPrefix: String
  Playlists: [AwsElasticTranscoderCreateJobPlaylistsInput]
  UserMetadata: JSON
}

type AwsElasticTranscoderCreateJobOutput {
  Job: AwsElasticTranscoderS1y
}

input AwsElasticTranscoderCreateJobPlaylistsInput {
  Name: String
  Format: String
  OutputKeys: [String]
  HlsContentProtection: AwsElasticTranscoderS1mInput
  PlayReadyDrm: AwsElasticTranscoderS1qInput
}

input AwsElasticTranscoderCreatePipelineInput {
  Name: String!
  InputBucket: String!
  OutputBucket: String
  Role: String!
  AwsKmsKeyArn: String
  Notifications: AwsElasticTranscoderS2aInput
  ContentConfig: AwsElasticTranscoderS2cInput
  ThumbnailConfig: AwsElasticTranscoderS2cInput
}

type AwsElasticTranscoderCreatePipelineOutput {
  Pipeline: AwsElasticTranscoderS2l
  Warnings: [AwsElasticTranscoderS2n]
}

input AwsElasticTranscoderCreatePresetInput {
  Name: String!
  Description: String
  Container: String!
  Video: AwsElasticTranscoderS2rInput
  Audio: AwsElasticTranscoderS37Input
  Thumbnails: AwsElasticTranscoderS3iInput
}

type AwsElasticTranscoderCreatePresetOutput {
  Preset: AwsElasticTranscoderS3m
  Warning: String
}

input AwsElasticTranscoderDeletePipelineInput {
  Id: String!
}

input AwsElasticTranscoderDeletePresetInput {
  Id: String!
}

input AwsElasticTranscoderListJobsByPipelineInput {
  PipelineId: String!
  Ascending: String
  PageToken: String
}

type AwsElasticTranscoderListJobsByPipelineOutput {
  Jobs: [AwsElasticTranscoderS1y]
  NextPageToken: String
}

input AwsElasticTranscoderListJobsByStatusInput {
  Status: String!
  Ascending: String
  PageToken: String
}

type AwsElasticTranscoderListJobsByStatusOutput {
  Jobs: [AwsElasticTranscoderS1y]
  NextPageToken: String
}

input AwsElasticTranscoderListPipelinesInput {
  Ascending: String
  PageToken: String
}

type AwsElasticTranscoderListPipelinesOutput {
  Pipelines: [AwsElasticTranscoderS2l]
  NextPageToken: String
}

input AwsElasticTranscoderListPresetsInput {
  Ascending: String
  PageToken: String
}

type AwsElasticTranscoderListPresetsOutput {
  Presets: [AwsElasticTranscoderS3m]
  NextPageToken: String
}

input AwsElasticTranscoderReadJobInput {
  Id: String!
}

type AwsElasticTranscoderReadJobOutput {
  Job: AwsElasticTranscoderS1y
}

input AwsElasticTranscoderReadPipelineInput {
  Id: String!
}

type AwsElasticTranscoderReadPipelineOutput {
  Pipeline: AwsElasticTranscoderS2l
  Warnings: [AwsElasticTranscoderS2n]
}

input AwsElasticTranscoderReadPresetInput {
  Id: String!
}

type AwsElasticTranscoderReadPresetOutput {
  Preset: AwsElasticTranscoderS3m
}

type AwsElasticTranscoderS11 {
  MergePolicy: String
  Artwork: [AwsElasticTranscoderS11Artwork]
}

type AwsElasticTranscoderS11Artwork {
  InputKey: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
  AlbumArtFormat: String
  Encryption: AwsElasticTranscoderSc
}

input AwsElasticTranscoderS11ArtworkInput {
  InputKey: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
  AlbumArtFormat: String
  Encryption: AwsElasticTranscoderScInput
}

input AwsElasticTranscoderS11Input {
  MergePolicy: String
  Artwork: [AwsElasticTranscoderS11ArtworkInput]
}

type AwsElasticTranscoderS19 {
  TimeSpan: AwsElasticTranscoderSg
}

input AwsElasticTranscoderS19Input {
  TimeSpan: AwsElasticTranscoderSgInput
}

type AwsElasticTranscoderS1b {
  MergePolicy: String
  CaptionSources: [AwsElasticTranscoderSk]
  CaptionFormats: [AwsElasticTranscoderS1bCaptionFormats]
}

type AwsElasticTranscoderS1bCaptionFormats {
  Format: String
  Pattern: String
  Encryption: AwsElasticTranscoderSc
}

input AwsElasticTranscoderS1bCaptionFormatsInput {
  Format: String
  Pattern: String
  Encryption: AwsElasticTranscoderScInput
}

input AwsElasticTranscoderS1bInput {
  MergePolicy: String
  CaptionSources: [AwsElasticTranscoderSkInput]
  CaptionFormats: [AwsElasticTranscoderS1bCaptionFormatsInput]
}

type AwsElasticTranscoderS1m {
  Method: String
  Key: String
  KeyMd5: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
  KeyStoragePolicy: String
}

input AwsElasticTranscoderS1mInput {
  Method: String
  Key: String
  KeyMd5: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
  KeyStoragePolicy: String
}

type AwsElasticTranscoderS1q {
  Format: String
  Key: String
  KeyMd5: String
  KeyId: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
}

input AwsElasticTranscoderS1qInput {
  Format: String
  Key: String
  KeyMd5: String
  KeyId: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
}

type AwsElasticTranscoderS1y {
  Id: String
  Arn: String
  PipelineId: String
  Input: AwsElasticTranscoderS5
  Inputs: [AwsElasticTranscoderS5]
  Output: AwsElasticTranscoderS1z
  Outputs: [AwsElasticTranscoderS1z]
  OutputKeyPrefix: String
  Playlists: [AwsElasticTranscoderS1yPlaylists]
  Status: String
  UserMetadata: JSON
  Timing: AwsElasticTranscoderS1yTiming
}

type AwsElasticTranscoderS1yPlaylists {
  Name: String
  Format: String
  OutputKeys: [String]
  HlsContentProtection: AwsElasticTranscoderS1m
  PlayReadyDrm: AwsElasticTranscoderS1q
  Status: String
  StatusDetail: String
}

type AwsElasticTranscoderS1yTiming {
  SubmitTimeMillis: JSON
  StartTimeMillis: JSON
  FinishTimeMillis: JSON
}

type AwsElasticTranscoderS1z {
  Id: String
  Key: String
  ThumbnailPattern: String
  ThumbnailEncryption: AwsElasticTranscoderSc
  Rotate: String
  PresetId: String
  SegmentDuration: String
  Status: String
  StatusDetail: String
  Duration: JSON
  Width: Int
  Height: Int
  FrameRate: String
  FileSize: JSON
  DurationMillis: JSON
  Watermarks: [AwsElasticTranscoderSx]
  AlbumArt: AwsElasticTranscoderS11
  Composition: [AwsElasticTranscoderS19]
  Captions: AwsElasticTranscoderS1b
  Encryption: AwsElasticTranscoderSc
  AppliedColorSpaceConversion: String
}

type AwsElasticTranscoderS2a {
  Progressing: String
  Completed: String
  Warning: String
  Error: String
}

input AwsElasticTranscoderS2aInput {
  Progressing: String
  Completed: String
  Warning: String
  Error: String
}

type AwsElasticTranscoderS2c {
  Bucket: String
  StorageClass: String
  Permissions: [AwsElasticTranscoderS2cPermissions]
}

input AwsElasticTranscoderS2cInput {
  Bucket: String
  StorageClass: String
  Permissions: [AwsElasticTranscoderS2cPermissionsInput]
}

type AwsElasticTranscoderS2cPermissions {
  GranteeType: String
  Grantee: String
  Access: [String]
}

input AwsElasticTranscoderS2cPermissionsInput {
  GranteeType: String
  Grantee: String
  Access: [String]
}

type AwsElasticTranscoderS2l {
  Id: String
  Arn: String
  Name: String
  Status: String
  InputBucket: String
  OutputBucket: String
  Role: String
  AwsKmsKeyArn: String
  Notifications: AwsElasticTranscoderS2a
  ContentConfig: AwsElasticTranscoderS2c
  ThumbnailConfig: AwsElasticTranscoderS2c
}

type AwsElasticTranscoderS2n {
  Code: String
  Message: String
}

type AwsElasticTranscoderS2r {
  Codec: String
  CodecOptions: JSON
  KeyframesMaxDist: String
  FixedGOP: String
  BitRate: String
  FrameRate: String
  MaxFrameRate: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  DisplayAspectRatio: String
  SizingPolicy: String
  PaddingPolicy: String
  Watermarks: [AwsElasticTranscoderS2rWatermarks]
}

input AwsElasticTranscoderS2rInput {
  Codec: String
  CodecOptions: JSON
  KeyframesMaxDist: String
  FixedGOP: String
  BitRate: String
  FrameRate: String
  MaxFrameRate: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  DisplayAspectRatio: String
  SizingPolicy: String
  PaddingPolicy: String
  Watermarks: [AwsElasticTranscoderS2rWatermarksInput]
}

type AwsElasticTranscoderS2rWatermarks {
  Id: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  HorizontalAlign: String
  HorizontalOffset: String
  VerticalAlign: String
  VerticalOffset: String
  Opacity: String
  Target: String
}

input AwsElasticTranscoderS2rWatermarksInput {
  Id: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  HorizontalAlign: String
  HorizontalOffset: String
  VerticalAlign: String
  VerticalOffset: String
  Opacity: String
  Target: String
}

type AwsElasticTranscoderS37 {
  Codec: String
  SampleRate: String
  BitRate: String
  Channels: String
  AudioPackingMode: String
  CodecOptions: AwsElasticTranscoderS37CodecOptions
}

type AwsElasticTranscoderS37CodecOptions {
  Profile: String
  BitDepth: String
  BitOrder: String
  Signed: String
}

input AwsElasticTranscoderS37CodecOptionsInput {
  Profile: String
  BitDepth: String
  BitOrder: String
  Signed: String
}

input AwsElasticTranscoderS37Input {
  Codec: String
  SampleRate: String
  BitRate: String
  Channels: String
  AudioPackingMode: String
  CodecOptions: AwsElasticTranscoderS37CodecOptionsInput
}

type AwsElasticTranscoderS3i {
  Format: String
  Interval: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
}

input AwsElasticTranscoderS3iInput {
  Format: String
  Interval: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
}

type AwsElasticTranscoderS3m {
  Id: String
  Arn: String
  Name: String
  Description: String
  Container: String
  Audio: AwsElasticTranscoderS37
  Video: AwsElasticTranscoderS2r
  Thumbnails: AwsElasticTranscoderS3i
  Type: String
}

type AwsElasticTranscoderS5 {
  Key: String
  FrameRate: String
  Resolution: String
  AspectRatio: String
  Interlaced: String
  Container: String
  Encryption: AwsElasticTranscoderSc
  TimeSpan: AwsElasticTranscoderSg
  InputCaptions: AwsElasticTranscoderS5InputCaptions
  DetectedProperties: AwsElasticTranscoderS5DetectedProperties
}

type AwsElasticTranscoderS5DetectedProperties {
  Width: Int
  Height: Int
  FrameRate: String
  FileSize: JSON
  DurationMillis: JSON
}

input AwsElasticTranscoderS5DetectedPropertiesInput {
  Width: Int
  Height: Int
  FrameRate: String
  FileSize: JSON
  DurationMillis: JSON
}

input AwsElasticTranscoderS5Input {
  Key: String
  FrameRate: String
  Resolution: String
  AspectRatio: String
  Interlaced: String
  Container: String
  Encryption: AwsElasticTranscoderScInput
  TimeSpan: AwsElasticTranscoderSgInput
  InputCaptions: AwsElasticTranscoderS5InputCaptionsInput
  DetectedProperties: AwsElasticTranscoderS5DetectedPropertiesInput
}

type AwsElasticTranscoderS5InputCaptions {
  MergePolicy: String
  CaptionSources: [AwsElasticTranscoderSk]
}

input AwsElasticTranscoderS5InputCaptionsInput {
  MergePolicy: String
  CaptionSources: [AwsElasticTranscoderSkInput]
}

type AwsElasticTranscoderSc {
  Mode: String
  Key: String
  KeyMd5: String
  InitializationVector: String
}

input AwsElasticTranscoderScInput {
  Mode: String
  Key: String
  KeyMd5: String
  InitializationVector: String
}

type AwsElasticTranscoderSg {
  StartTime: String
  Duration: String
}

input AwsElasticTranscoderSgInput {
  StartTime: String
  Duration: String
}

type AwsElasticTranscoderSk {
  Key: String
  Language: String
  TimeOffset: String
  Label: String
  Encryption: AwsElasticTranscoderSc
}

input AwsElasticTranscoderSkInput {
  Key: String
  Language: String
  TimeOffset: String
  Label: String
  Encryption: AwsElasticTranscoderScInput
}

input AwsElasticTranscoderSuInput {
  Key: String
  ThumbnailPattern: String
  ThumbnailEncryption: AwsElasticTranscoderScInput
  Rotate: String
  PresetId: String
  SegmentDuration: String
  Watermarks: [AwsElasticTranscoderSxInput]
  AlbumArt: AwsElasticTranscoderS11Input
  Composition: [AwsElasticTranscoderS19Input]
  Captions: AwsElasticTranscoderS1bInput
  Encryption: AwsElasticTranscoderScInput
}

type AwsElasticTranscoderSx {
  PresetWatermarkId: String
  InputKey: String
  Encryption: AwsElasticTranscoderSc
}

input AwsElasticTranscoderSxInput {
  PresetWatermarkId: String
  InputKey: String
  Encryption: AwsElasticTranscoderScInput
}

input AwsElasticTranscoderTestRoleInput {
  Role: String!
  InputBucket: String!
  OutputBucket: String!
  Topics: [String]!
}

type AwsElasticTranscoderTestRoleOutput {
  Success: String
  Messages: [String]
}

input AwsElasticTranscoderUpdatePipelineInput {
  Id: String!
  Name: String
  InputBucket: String
  Role: String
  AwsKmsKeyArn: String
  Notifications: AwsElasticTranscoderS2aInput
  ContentConfig: AwsElasticTranscoderS2cInput
  ThumbnailConfig: AwsElasticTranscoderS2cInput
}

input AwsElasticTranscoderUpdatePipelineNotificationsInput {
  Id: String!
  Notifications: AwsElasticTranscoderS2aInput!
}

type AwsElasticTranscoderUpdatePipelineNotificationsOutput {
  Pipeline: AwsElasticTranscoderS2l
}

type AwsElasticTranscoderUpdatePipelineOutput {
  Pipeline: AwsElasticTranscoderS2l
  Warnings: [AwsElasticTranscoderS2n]
}

input AwsElasticTranscoderUpdatePipelineStatusInput {
  Id: String!
  Status: String!
}

type AwsElasticTranscoderUpdatePipelineStatusOutput {
  Pipeline: AwsElasticTranscoderS2l
}

"""Elastic Load Balancing (2012-06-01)"""
type AwsELB {
  addTags(input: AwsELBAddTagsInput!, config: AwsConfig): JSON
  applySecurityGroupsToLoadBalancer(input: AwsELBApplySecurityGroupsToLoadBalancerInput!, config: AwsConfig): AwsELBApplySecurityGroupsToLoadBalancerOutput
  attachLoadBalancerToSubnets(input: AwsELBAttachLoadBalancerToSubnetsInput!, config: AwsConfig): AwsELBAttachLoadBalancerToSubnetsOutput
  configureHealthCheck(input: AwsELBConfigureHealthCheckInput!, config: AwsConfig): AwsELBConfigureHealthCheckOutput
  createAppCookieStickinessPolicy(input: AwsELBCreateAppCookieStickinessPolicyInput!, config: AwsConfig): JSON
  createLBCookieStickinessPolicy(input: AwsELBCreateLBCookieStickinessPolicyInput!, config: AwsConfig): JSON
  createLoadBalancer(input: AwsELBCreateLoadBalancerInput!, config: AwsConfig): AwsELBCreateLoadBalancerOutput
  createLoadBalancerListeners(input: AwsELBCreateLoadBalancerListenersInput!, config: AwsConfig): JSON
  createLoadBalancerPolicy(input: AwsELBCreateLoadBalancerPolicyInput!, config: AwsConfig): JSON
  deleteLoadBalancer(input: AwsELBDeleteLoadBalancerInput!, config: AwsConfig): JSON
  deleteLoadBalancerListeners(input: AwsELBDeleteLoadBalancerListenersInput!, config: AwsConfig): JSON
  deleteLoadBalancerPolicy(input: AwsELBDeleteLoadBalancerPolicyInput!, config: AwsConfig): JSON
  deregisterInstancesFromLoadBalancer(input: AwsELBDeregisterInstancesFromLoadBalancerInput!, config: AwsConfig): AwsELBDeregisterInstancesFromLoadBalancerOutput
  describeAccountLimits(input: AwsELBDescribeAccountLimitsInput, config: AwsConfig): AwsELBDescribeAccountLimitsOutput
  describeInstanceHealth(input: AwsELBDescribeInstanceHealthInput!, config: AwsConfig): AwsELBDescribeInstanceHealthOutput
  describeLoadBalancerAttributes(input: AwsELBDescribeLoadBalancerAttributesInput!, config: AwsConfig): AwsELBDescribeLoadBalancerAttributesOutput
  describeLoadBalancerPolicies(input: AwsELBDescribeLoadBalancerPoliciesInput, config: AwsConfig): AwsELBDescribeLoadBalancerPoliciesOutput
  describeLoadBalancerPolicyTypes(input: AwsELBDescribeLoadBalancerPolicyTypesInput, config: AwsConfig): AwsELBDescribeLoadBalancerPolicyTypesOutput
  describeLoadBalancers(input: AwsELBDescribeLoadBalancersInput, config: AwsConfig): AwsELBDescribeLoadBalancersOutput
  describeTags(input: AwsELBDescribeTagsInput!, config: AwsConfig): AwsELBDescribeTagsOutput
  detachLoadBalancerFromSubnets(input: AwsELBDetachLoadBalancerFromSubnetsInput!, config: AwsConfig): AwsELBDetachLoadBalancerFromSubnetsOutput
  disableAvailabilityZonesForLoadBalancer(input: AwsELBDisableAvailabilityZonesForLoadBalancerInput!, config: AwsConfig): AwsELBDisableAvailabilityZonesForLoadBalancerOutput
  enableAvailabilityZonesForLoadBalancer(input: AwsELBEnableAvailabilityZonesForLoadBalancerInput!, config: AwsConfig): AwsELBEnableAvailabilityZonesForLoadBalancerOutput
  modifyLoadBalancerAttributes(input: AwsELBModifyLoadBalancerAttributesInput!, config: AwsConfig): AwsELBModifyLoadBalancerAttributesOutput
  registerInstancesWithLoadBalancer(input: AwsELBRegisterInstancesWithLoadBalancerInput!, config: AwsConfig): AwsELBRegisterInstancesWithLoadBalancerOutput
  removeTags(input: AwsELBRemoveTagsInput!, config: AwsConfig): JSON
  setLoadBalancerListenerSSLCertificate(input: AwsELBSetLoadBalancerListenerSSLCertificateInput!, config: AwsConfig): JSON
  setLoadBalancerPoliciesForBackendServer(input: AwsELBSetLoadBalancerPoliciesForBackendServerInput!, config: AwsConfig): JSON
  setLoadBalancerPoliciesOfListener(input: AwsELBSetLoadBalancerPoliciesOfListenerInput!, config: AwsConfig): JSON
}

input AwsELBAddTagsInput {
  LoadBalancerNames: [String]!
  Tags: [AwsELBS4Input]!
}

input AwsELBApplySecurityGroupsToLoadBalancerInput {
  LoadBalancerName: String!
  SecurityGroups: [String]!
}

type AwsELBApplySecurityGroupsToLoadBalancerOutput {
  SecurityGroups: [String]
}

input AwsELBAttachLoadBalancerToSubnetsInput {
  LoadBalancerName: String!
  Subnets: [String]!
}

type AwsELBAttachLoadBalancerToSubnetsOutput {
  Subnets: [String]
}

input AwsELBConfigureHealthCheckInput {
  LoadBalancerName: String!
  HealthCheck: AwsELBSiInput!
}

type AwsELBConfigureHealthCheckOutput {
  HealthCheck: AwsELBSi
}

input AwsELBCreateAppCookieStickinessPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
  CookieName: String!
}

input AwsELBCreateLBCookieStickinessPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
  CookieExpirationPeriod: JSON
}

input AwsELBCreateLoadBalancerInput {
  LoadBalancerName: String!
  Listeners: [AwsELBSyInput]!
  AvailabilityZones: [String]
  Subnets: [String]
  SecurityGroups: [String]
  Scheme: String
  Tags: [AwsELBS4Input]
}

input AwsELBCreateLoadBalancerListenersInput {
  LoadBalancerName: String!
  Listeners: [AwsELBSyInput]!
}

type AwsELBCreateLoadBalancerOutput {
  DNSName: String
}

input AwsELBCreateLoadBalancerPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
  PolicyTypeName: String!
  PolicyAttributes: [AwsELBCreateLoadBalancerPolicyPolicyAttributesInput]
}

input AwsELBCreateLoadBalancerPolicyPolicyAttributesInput {
  AttributeName: String
  AttributeValue: String
}

input AwsELBDeleteLoadBalancerInput {
  LoadBalancerName: String!
}

input AwsELBDeleteLoadBalancerListenersInput {
  LoadBalancerName: String!
  LoadBalancerPorts: [Int]!
}

input AwsELBDeleteLoadBalancerPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
}

input AwsELBDeregisterInstancesFromLoadBalancerInput {
  LoadBalancerName: String!
  Instances: [AwsELBS1pInput]!
}

type AwsELBDeregisterInstancesFromLoadBalancerOutput {
  Instances: [AwsELBS1p]
}

input AwsELBDescribeAccountLimitsInput {
  Marker: String
  PageSize: Int
}

type AwsELBDescribeAccountLimitsOutput {
  Limits: [AwsELBDescribeAccountLimitsOutputLimits]
  NextMarker: String
}

type AwsELBDescribeAccountLimitsOutputLimits {
  Name: String
  Max: String
}

input AwsELBDescribeInstanceHealthInput {
  LoadBalancerName: String!
  Instances: [AwsELBS1pInput]
}

type AwsELBDescribeInstanceHealthOutput {
  InstanceStates: [AwsELBDescribeInstanceHealthOutputInstanceStates]
}

type AwsELBDescribeInstanceHealthOutputInstanceStates {
  InstanceId: String
  State: String
  ReasonCode: String
  Description: String
}

input AwsELBDescribeLoadBalancerAttributesInput {
  LoadBalancerName: String!
}

type AwsELBDescribeLoadBalancerAttributesOutput {
  LoadBalancerAttributes: AwsELBS2a
}

input AwsELBDescribeLoadBalancerPoliciesInput {
  LoadBalancerName: String
  PolicyNames: [String]
}

type AwsELBDescribeLoadBalancerPoliciesOutput {
  PolicyDescriptions: [AwsELBDescribeLoadBalancerPoliciesOutputPolicyDescriptions]
}

type AwsELBDescribeLoadBalancerPoliciesOutputPolicyDescriptions {
  PolicyName: String
  PolicyTypeName: String
  PolicyAttributeDescriptions: [AwsELBDescribeLoadBalancerPoliciesOutputPolicyDescriptionsPolicyAttributeDescriptions]
}

type AwsELBDescribeLoadBalancerPoliciesOutputPolicyDescriptionsPolicyAttributeDescriptions {
  AttributeName: String
  AttributeValue: String
}

input AwsELBDescribeLoadBalancerPolicyTypesInput {
  PolicyTypeNames: [String]
}

type AwsELBDescribeLoadBalancerPolicyTypesOutput {
  PolicyTypeDescriptions: [AwsELBDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptions]
}

type AwsELBDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptions {
  PolicyTypeName: String
  Description: String
  PolicyAttributeTypeDescriptions: [AwsELBDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptionsPolicyAttributeTypeDescriptions]
}

type AwsELBDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptionsPolicyAttributeTypeDescriptions {
  AttributeName: String
  AttributeType: String
  Description: String
  DefaultValue: String
  Cardinality: String
}

input AwsELBDescribeLoadBalancersInput {
  LoadBalancerNames: [String]
  Marker: String
  PageSize: Int
}

type AwsELBDescribeLoadBalancersOutput {
  LoadBalancerDescriptions: [AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptions]
  NextMarker: String
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptions {
  LoadBalancerName: String
  DNSName: String
  CanonicalHostedZoneName: String
  CanonicalHostedZoneNameID: String
  ListenerDescriptions: [AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsListenerDescriptions]
  Policies: AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPolicies
  BackendServerDescriptions: [AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsBackendServerDescriptions]
  AvailabilityZones: [String]
  Subnets: [String]
  VPCId: String
  Instances: [AwsELBS1p]
  HealthCheck: AwsELBSi
  SourceSecurityGroup: AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsSourceSecurityGroup
  SecurityGroups: [String]
  CreatedTime: Date
  Scheme: String
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsBackendServerDescriptions {
  InstancePort: Int
  PolicyNames: [String]
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsListenerDescriptions {
  Listener: AwsELBSy
  PolicyNames: [String]
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPolicies {
  AppCookieStickinessPolicies: [AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesAppCookieStickinessPolicies]
  LBCookieStickinessPolicies: [AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesLBCookieStickinessPolicies]
  OtherPolicies: [String]
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesAppCookieStickinessPolicies {
  PolicyName: String
  CookieName: String
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesLBCookieStickinessPolicies {
  PolicyName: String
  CookieExpirationPeriod: JSON
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsSourceSecurityGroup {
  OwnerAlias: String
  GroupName: String
}

input AwsELBDescribeTagsInput {
  LoadBalancerNames: [String]!
}

type AwsELBDescribeTagsOutput {
  TagDescriptions: [AwsELBDescribeTagsOutputTagDescriptions]
}

type AwsELBDescribeTagsOutputTagDescriptions {
  LoadBalancerName: String
  Tags: [AwsELBS4]
}

input AwsELBDetachLoadBalancerFromSubnetsInput {
  LoadBalancerName: String!
  Subnets: [String]!
}

type AwsELBDetachLoadBalancerFromSubnetsOutput {
  Subnets: [String]
}

input AwsELBDisableAvailabilityZonesForLoadBalancerInput {
  LoadBalancerName: String!
  AvailabilityZones: [String]!
}

type AwsELBDisableAvailabilityZonesForLoadBalancerOutput {
  AvailabilityZones: [String]
}

input AwsELBEnableAvailabilityZonesForLoadBalancerInput {
  LoadBalancerName: String!
  AvailabilityZones: [String]!
}

type AwsELBEnableAvailabilityZonesForLoadBalancerOutput {
  AvailabilityZones: [String]
}

input AwsELBModifyLoadBalancerAttributesInput {
  LoadBalancerName: String!
  LoadBalancerAttributes: AwsELBS2aInput!
}

type AwsELBModifyLoadBalancerAttributesOutput {
  LoadBalancerName: String
  LoadBalancerAttributes: AwsELBS2a
}

input AwsELBRegisterInstancesWithLoadBalancerInput {
  LoadBalancerName: String!
  Instances: [AwsELBS1pInput]!
}

type AwsELBRegisterInstancesWithLoadBalancerOutput {
  Instances: [AwsELBS1p]
}

input AwsELBRemoveTagsInput {
  LoadBalancerNames: [String]!
  Tags: [AwsELBRemoveTagsTagsInput]!
}

input AwsELBRemoveTagsTagsInput {
  Key: String
}

type AwsELBS1p {
  InstanceId: String
}

input AwsELBS1pInput {
  InstanceId: String
}

type AwsELBS2a {
  CrossZoneLoadBalancing: AwsELBS2aCrossZoneLoadBalancing
  AccessLog: AwsELBS2aAccessLog
  ConnectionDraining: AwsELBS2aConnectionDraining
  ConnectionSettings: AwsELBS2aConnectionSettings
  AdditionalAttributes: [AwsELBS2aAdditionalAttributes]
}

type AwsELBS2aAccessLog {
  Enabled: Boolean!
  S3BucketName: String
  EmitInterval: Int
  S3BucketPrefix: String
}

input AwsELBS2aAccessLogInput {
  Enabled: Boolean!
  S3BucketName: String
  EmitInterval: Int
  S3BucketPrefix: String
}

type AwsELBS2aAdditionalAttributes {
  Key: String
  Value: String
}

input AwsELBS2aAdditionalAttributesInput {
  Key: String
  Value: String
}

type AwsELBS2aConnectionDraining {
  Enabled: Boolean!
  Timeout: Int
}

input AwsELBS2aConnectionDrainingInput {
  Enabled: Boolean!
  Timeout: Int
}

type AwsELBS2aConnectionSettings {
  IdleTimeout: Int!
}

input AwsELBS2aConnectionSettingsInput {
  IdleTimeout: Int!
}

type AwsELBS2aCrossZoneLoadBalancing {
  Enabled: Boolean!
}

input AwsELBS2aCrossZoneLoadBalancingInput {
  Enabled: Boolean!
}

input AwsELBS2aInput {
  CrossZoneLoadBalancing: AwsELBS2aCrossZoneLoadBalancingInput
  AccessLog: AwsELBS2aAccessLogInput
  ConnectionDraining: AwsELBS2aConnectionDrainingInput
  ConnectionSettings: AwsELBS2aConnectionSettingsInput
  AdditionalAttributes: [AwsELBS2aAdditionalAttributesInput]
}

type AwsELBS4 {
  Key: String!
  Value: String
}

input AwsELBS4Input {
  Key: String!
  Value: String
}

input AwsELBSetLoadBalancerListenerSSLCertificateInput {
  LoadBalancerName: String!
  LoadBalancerPort: Int!
  SSLCertificateId: String!
}

input AwsELBSetLoadBalancerPoliciesForBackendServerInput {
  LoadBalancerName: String!
  InstancePort: Int!
  PolicyNames: [String]!
}

input AwsELBSetLoadBalancerPoliciesOfListenerInput {
  LoadBalancerName: String!
  LoadBalancerPort: Int!
  PolicyNames: [String]!
}

type AwsELBSi {
  Target: String!
  Interval: Int!
  Timeout: Int!
  UnhealthyThreshold: Int!
  HealthyThreshold: Int!
}

input AwsELBSiInput {
  Target: String!
  Interval: Int!
  Timeout: Int!
  UnhealthyThreshold: Int!
  HealthyThreshold: Int!
}

type AwsELBSy {
  Protocol: String!
  LoadBalancerPort: Int!
  InstanceProtocol: String
  InstancePort: Int!
  SSLCertificateId: String
}

input AwsELBSyInput {
  Protocol: String!
  LoadBalancerPort: Int!
  InstanceProtocol: String
  InstancePort: Int!
  SSLCertificateId: String
}

"""Elastic Load Balancing (2015-12-01)"""
type AwsELBv2 {
  addListenerCertificates(input: AwsELBv2AddListenerCertificatesInput!, config: AwsConfig): AwsELBv2AddListenerCertificatesOutput
  addTags(input: AwsELBv2AddTagsInput!, config: AwsConfig): JSON
  createListener(input: AwsELBv2CreateListenerInput!, config: AwsConfig): AwsELBv2CreateListenerOutput
  createLoadBalancer(input: AwsELBv2CreateLoadBalancerInput!, config: AwsConfig): AwsELBv2CreateLoadBalancerOutput
  createRule(input: AwsELBv2CreateRuleInput!, config: AwsConfig): AwsELBv2CreateRuleOutput
  createTargetGroup(input: AwsELBv2CreateTargetGroupInput!, config: AwsConfig): AwsELBv2CreateTargetGroupOutput
  deleteListener(input: AwsELBv2DeleteListenerInput!, config: AwsConfig): JSON
  deleteLoadBalancer(input: AwsELBv2DeleteLoadBalancerInput!, config: AwsConfig): JSON
  deleteRule(input: AwsELBv2DeleteRuleInput!, config: AwsConfig): JSON
  deleteTargetGroup(input: AwsELBv2DeleteTargetGroupInput!, config: AwsConfig): JSON
  deregisterTargets(input: AwsELBv2DeregisterTargetsInput!, config: AwsConfig): JSON
  describeAccountLimits(input: AwsELBv2DescribeAccountLimitsInput, config: AwsConfig): AwsELBv2DescribeAccountLimitsOutput
  describeListenerCertificates(input: AwsELBv2DescribeListenerCertificatesInput!, config: AwsConfig): AwsELBv2DescribeListenerCertificatesOutput
  describeListeners(input: AwsELBv2DescribeListenersInput, config: AwsConfig): AwsELBv2DescribeListenersOutput
  describeLoadBalancerAttributes(input: AwsELBv2DescribeLoadBalancerAttributesInput!, config: AwsConfig): AwsELBv2DescribeLoadBalancerAttributesOutput
  describeLoadBalancers(input: AwsELBv2DescribeLoadBalancersInput, config: AwsConfig): AwsELBv2DescribeLoadBalancersOutput
  describeRules(input: AwsELBv2DescribeRulesInput, config: AwsConfig): AwsELBv2DescribeRulesOutput
  describeSSLPolicies(input: AwsELBv2DescribeSSLPoliciesInput, config: AwsConfig): AwsELBv2DescribeSSLPoliciesOutput
  describeTags(input: AwsELBv2DescribeTagsInput!, config: AwsConfig): AwsELBv2DescribeTagsOutput
  describeTargetGroupAttributes(input: AwsELBv2DescribeTargetGroupAttributesInput!, config: AwsConfig): AwsELBv2DescribeTargetGroupAttributesOutput
  describeTargetGroups(input: AwsELBv2DescribeTargetGroupsInput, config: AwsConfig): AwsELBv2DescribeTargetGroupsOutput
  describeTargetHealth(input: AwsELBv2DescribeTargetHealthInput!, config: AwsConfig): AwsELBv2DescribeTargetHealthOutput
  modifyListener(input: AwsELBv2ModifyListenerInput!, config: AwsConfig): AwsELBv2ModifyListenerOutput
  modifyLoadBalancerAttributes(input: AwsELBv2ModifyLoadBalancerAttributesInput!, config: AwsConfig): AwsELBv2ModifyLoadBalancerAttributesOutput
  modifyRule(input: AwsELBv2ModifyRuleInput!, config: AwsConfig): AwsELBv2ModifyRuleOutput
  modifyTargetGroup(input: AwsELBv2ModifyTargetGroupInput!, config: AwsConfig): AwsELBv2ModifyTargetGroupOutput
  modifyTargetGroupAttributes(input: AwsELBv2ModifyTargetGroupAttributesInput!, config: AwsConfig): AwsELBv2ModifyTargetGroupAttributesOutput
  registerTargets(input: AwsELBv2RegisterTargetsInput!, config: AwsConfig): JSON
  removeListenerCertificates(input: AwsELBv2RemoveListenerCertificatesInput!, config: AwsConfig): JSON
  removeTags(input: AwsELBv2RemoveTagsInput!, config: AwsConfig): JSON
  setIpAddressType(input: AwsELBv2SetIpAddressTypeInput!, config: AwsConfig): AwsELBv2SetIpAddressTypeOutput
  setRulePriorities(input: AwsELBv2SetRulePrioritiesInput!, config: AwsConfig): AwsELBv2SetRulePrioritiesOutput
  setSecurityGroups(input: AwsELBv2SetSecurityGroupsInput!, config: AwsConfig): AwsELBv2SetSecurityGroupsOutput
  setSubnets(input: AwsELBv2SetSubnetsInput!, config: AwsConfig): AwsELBv2SetSubnetsOutput
}

input AwsELBv2AddListenerCertificatesInput {
  ListenerArn: String!
  Certificates: [AwsELBv2S3Input]!
}

type AwsELBv2AddListenerCertificatesOutput {
  Certificates: [AwsELBv2S3]
}

input AwsELBv2AddTagsInput {
  ResourceArns: [String]!
  Tags: [AwsELBv2SbInput]!
}

input AwsELBv2CreateListenerInput {
  LoadBalancerArn: String!
  Protocol: String!
  Port: Int!
  SslPolicy: String
  Certificates: [AwsELBv2S3Input]
  DefaultActions: [AwsELBv2SlInput]!
}

type AwsELBv2CreateListenerOutput {
  Listeners: [AwsELBv2S1s]
}

input AwsELBv2CreateLoadBalancerInput {
  Name: String!
  Subnets: [String]
  SubnetMappings: [AwsELBv2S1yInput]
  SecurityGroups: [String]
  Scheme: String
  Tags: [AwsELBv2SbInput]
  Type: String
  IpAddressType: String
}

type AwsELBv2CreateLoadBalancerOutput {
  LoadBalancers: [AwsELBv2S27]
}

input AwsELBv2CreateRuleInput {
  ListenerArn: String!
  Conditions: [AwsELBv2S2nInput]!
  Priority: Int!
  Actions: [AwsELBv2SlInput]!
}

type AwsELBv2CreateRuleOutput {
  Rules: [AwsELBv2S33]
}

input AwsELBv2CreateTargetGroupInput {
  Name: String!
  Protocol: String
  Port: Int
  VpcId: String
  HealthCheckProtocol: String
  HealthCheckPort: String
  HealthCheckEnabled: Boolean
  HealthCheckPath: String
  HealthCheckIntervalSeconds: Int
  HealthCheckTimeoutSeconds: Int
  HealthyThresholdCount: Int
  UnhealthyThresholdCount: Int
  Matcher: AwsELBv2S3gInput
  TargetType: String
}

type AwsELBv2CreateTargetGroupOutput {
  TargetGroups: [AwsELBv2S3k]
}

input AwsELBv2DeleteListenerInput {
  ListenerArn: String!
}

input AwsELBv2DeleteLoadBalancerInput {
  LoadBalancerArn: String!
}

input AwsELBv2DeleteRuleInput {
  RuleArn: String!
}

input AwsELBv2DeleteTargetGroupInput {
  TargetGroupArn: String!
}

input AwsELBv2DeregisterTargetsInput {
  TargetGroupArn: String!
  Targets: [AwsELBv2S3xInput]!
}

input AwsELBv2DescribeAccountLimitsInput {
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeAccountLimitsOutput {
  Limits: [AwsELBv2DescribeAccountLimitsOutputLimits]
  NextMarker: String
}

type AwsELBv2DescribeAccountLimitsOutputLimits {
  Name: String
  Max: String
}

input AwsELBv2DescribeListenerCertificatesInput {
  ListenerArn: String!
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeListenerCertificatesOutput {
  Certificates: [AwsELBv2S3]
  NextMarker: String
}

input AwsELBv2DescribeListenersInput {
  LoadBalancerArn: String
  ListenerArns: [String]
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeListenersOutput {
  Listeners: [AwsELBv2S1s]
  NextMarker: String
}

input AwsELBv2DescribeLoadBalancerAttributesInput {
  LoadBalancerArn: String!
}

type AwsELBv2DescribeLoadBalancerAttributesOutput {
  Attributes: [AwsELBv2S4f]
}

input AwsELBv2DescribeLoadBalancersInput {
  LoadBalancerArns: [String]
  Names: [String]
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeLoadBalancersOutput {
  LoadBalancers: [AwsELBv2S27]
  NextMarker: String
}

input AwsELBv2DescribeRulesInput {
  ListenerArn: String
  RuleArns: [String]
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeRulesOutput {
  Rules: [AwsELBv2S33]
  NextMarker: String
}

input AwsELBv2DescribeSSLPoliciesInput {
  Names: [String]
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeSSLPoliciesOutput {
  SslPolicies: [AwsELBv2DescribeSSLPoliciesOutputSslPolicies]
  NextMarker: String
}

type AwsELBv2DescribeSSLPoliciesOutputSslPolicies {
  SslProtocols: [String]
  Ciphers: [AwsELBv2DescribeSSLPoliciesOutputSslPoliciesCiphers]
  Name: String
}

type AwsELBv2DescribeSSLPoliciesOutputSslPoliciesCiphers {
  Name: String
  Priority: Int
}

input AwsELBv2DescribeTagsInput {
  ResourceArns: [String]!
}

type AwsELBv2DescribeTagsOutput {
  TagDescriptions: [AwsELBv2DescribeTagsOutputTagDescriptions]
}

type AwsELBv2DescribeTagsOutputTagDescriptions {
  ResourceArn: String
  Tags: [AwsELBv2Sb]
}

input AwsELBv2DescribeTargetGroupAttributesInput {
  TargetGroupArn: String!
}

type AwsELBv2DescribeTargetGroupAttributesOutput {
  Attributes: [AwsELBv2S56]
}

input AwsELBv2DescribeTargetGroupsInput {
  LoadBalancerArn: String
  TargetGroupArns: [String]
  Names: [String]
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeTargetGroupsOutput {
  TargetGroups: [AwsELBv2S3k]
  NextMarker: String
}

input AwsELBv2DescribeTargetHealthInput {
  TargetGroupArn: String!
  Targets: [AwsELBv2S3xInput]
}

type AwsELBv2DescribeTargetHealthOutput {
  TargetHealthDescriptions: [AwsELBv2DescribeTargetHealthOutputTargetHealthDescriptions]
}

type AwsELBv2DescribeTargetHealthOutputTargetHealthDescriptions {
  Target: AwsELBv2S3x
  HealthCheckPort: String
  TargetHealth: AwsELBv2DescribeTargetHealthOutputTargetHealthDescriptionsTargetHealth
}

type AwsELBv2DescribeTargetHealthOutputTargetHealthDescriptionsTargetHealth {
  State: String
  Reason: String
  Description: String
}

input AwsELBv2ModifyListenerInput {
  ListenerArn: String!
  Port: Int
  Protocol: String
  SslPolicy: String
  Certificates: [AwsELBv2S3Input]
  DefaultActions: [AwsELBv2SlInput]
}

type AwsELBv2ModifyListenerOutput {
  Listeners: [AwsELBv2S1s]
}

input AwsELBv2ModifyLoadBalancerAttributesInput {
  LoadBalancerArn: String!
  Attributes: [AwsELBv2S4fInput]!
}

type AwsELBv2ModifyLoadBalancerAttributesOutput {
  Attributes: [AwsELBv2S4f]
}

input AwsELBv2ModifyRuleInput {
  RuleArn: String!
  Conditions: [AwsELBv2S2nInput]
  Actions: [AwsELBv2SlInput]
}

type AwsELBv2ModifyRuleOutput {
  Rules: [AwsELBv2S33]
}

input AwsELBv2ModifyTargetGroupAttributesInput {
  TargetGroupArn: String!
  Attributes: [AwsELBv2S56Input]!
}

type AwsELBv2ModifyTargetGroupAttributesOutput {
  Attributes: [AwsELBv2S56]
}

input AwsELBv2ModifyTargetGroupInput {
  TargetGroupArn: String!
  HealthCheckProtocol: String
  HealthCheckPort: String
  HealthCheckPath: String
  HealthCheckEnabled: Boolean
  HealthCheckIntervalSeconds: Int
  HealthCheckTimeoutSeconds: Int
  HealthyThresholdCount: Int
  UnhealthyThresholdCount: Int
  Matcher: AwsELBv2S3gInput
}

type AwsELBv2ModifyTargetGroupOutput {
  TargetGroups: [AwsELBv2S3k]
}

input AwsELBv2RegisterTargetsInput {
  TargetGroupArn: String!
  Targets: [AwsELBv2S3xInput]!
}

input AwsELBv2RemoveListenerCertificatesInput {
  ListenerArn: String!
  Certificates: [AwsELBv2S3Input]!
}

input AwsELBv2RemoveTagsInput {
  ResourceArns: [String]!
  TagKeys: [String]!
}

type AwsELBv2S1s {
  ListenerArn: String
  LoadBalancerArn: String
  Port: Int
  Protocol: String
  Certificates: [AwsELBv2S3]
  SslPolicy: String
  DefaultActions: [AwsELBv2Sl]
}

input AwsELBv2S1yInput {
  SubnetId: String
  AllocationId: String
}

type AwsELBv2S27 {
  LoadBalancerArn: String
  DNSName: String
  CanonicalHostedZoneId: String
  CreatedTime: Date
  LoadBalancerName: String
  Scheme: String
  VpcId: String
  State: AwsELBv2S27State
  Type: String
  AvailabilityZones: [AwsELBv2S2g]
  SecurityGroups: [String]
  IpAddressType: String
}

type AwsELBv2S27State {
  Code: String
  Reason: String
}

type AwsELBv2S2g {
  ZoneName: String
  SubnetId: String
  LoadBalancerAddresses: [AwsELBv2S2gLoadBalancerAddresses]
}

type AwsELBv2S2gLoadBalancerAddresses {
  IpAddress: String
  AllocationId: String
}

type AwsELBv2S2n {
  Field: String
  Values: [String]
  HostHeaderConfig: AwsELBv2S2nHostHeaderConfig
  PathPatternConfig: AwsELBv2S2nPathPatternConfig
  HttpHeaderConfig: AwsELBv2S2nHttpHeaderConfig
  QueryStringConfig: AwsELBv2S2nQueryStringConfig
  HttpRequestMethodConfig: AwsELBv2S2nHttpRequestMethodConfig
  SourceIpConfig: AwsELBv2S2nSourceIpConfig
}

type AwsELBv2S2nHostHeaderConfig {
  Values: [String]
}

input AwsELBv2S2nHostHeaderConfigInput {
  Values: [String]
}

type AwsELBv2S2nHttpHeaderConfig {
  HttpHeaderName: String
  Values: [String]
}

input AwsELBv2S2nHttpHeaderConfigInput {
  HttpHeaderName: String
  Values: [String]
}

type AwsELBv2S2nHttpRequestMethodConfig {
  Values: [String]
}

input AwsELBv2S2nHttpRequestMethodConfigInput {
  Values: [String]
}

input AwsELBv2S2nInput {
  Field: String
  Values: [String]
  HostHeaderConfig: AwsELBv2S2nHostHeaderConfigInput
  PathPatternConfig: AwsELBv2S2nPathPatternConfigInput
  HttpHeaderConfig: AwsELBv2S2nHttpHeaderConfigInput
  QueryStringConfig: AwsELBv2S2nQueryStringConfigInput
  HttpRequestMethodConfig: AwsELBv2S2nHttpRequestMethodConfigInput
  SourceIpConfig: AwsELBv2S2nSourceIpConfigInput
}

type AwsELBv2S2nPathPatternConfig {
  Values: [String]
}

input AwsELBv2S2nPathPatternConfigInput {
  Values: [String]
}

type AwsELBv2S2nQueryStringConfig {
  Values: [AwsELBv2S2nQueryStringConfigValues]
}

input AwsELBv2S2nQueryStringConfigInput {
  Values: [AwsELBv2S2nQueryStringConfigValuesInput]
}

type AwsELBv2S2nQueryStringConfigValues {
  Key: String
  Value: String
}

input AwsELBv2S2nQueryStringConfigValuesInput {
  Key: String
  Value: String
}

type AwsELBv2S2nSourceIpConfig {
  Values: [String]
}

input AwsELBv2S2nSourceIpConfigInput {
  Values: [String]
}

type AwsELBv2S3 {
  CertificateArn: String
  IsDefault: Boolean
}

type AwsELBv2S33 {
  RuleArn: String
  Priority: String
  Conditions: [AwsELBv2S2n]
  Actions: [AwsELBv2Sl]
  IsDefault: Boolean
}

type AwsELBv2S3g {
  HttpCode: String!
}

input AwsELBv2S3gInput {
  HttpCode: String!
}

input AwsELBv2S3Input {
  CertificateArn: String
  IsDefault: Boolean
}

type AwsELBv2S3k {
  TargetGroupArn: String
  TargetGroupName: String
  Protocol: String
  Port: Int
  VpcId: String
  HealthCheckProtocol: String
  HealthCheckPort: String
  HealthCheckEnabled: Boolean
  HealthCheckIntervalSeconds: Int
  HealthCheckTimeoutSeconds: Int
  HealthyThresholdCount: Int
  UnhealthyThresholdCount: Int
  HealthCheckPath: String
  Matcher: AwsELBv2S3g
  LoadBalancerArns: [String]
  TargetType: String
}

type AwsELBv2S3x {
  Id: String!
  Port: Int
  AvailabilityZone: String
}

input AwsELBv2S3xInput {
  Id: String!
  Port: Int
  AvailabilityZone: String
}

type AwsELBv2S4f {
  Key: String
  Value: String
}

input AwsELBv2S4fInput {
  Key: String
  Value: String
}

type AwsELBv2S56 {
  Key: String
  Value: String
}

input AwsELBv2S56Input {
  Key: String
  Value: String
}

type AwsELBv2Sb {
  Key: String!
  Value: String
}

input AwsELBv2SbInput {
  Key: String!
  Value: String
}

input AwsELBv2SetIpAddressTypeInput {
  LoadBalancerArn: String!
  IpAddressType: String!
}

type AwsELBv2SetIpAddressTypeOutput {
  IpAddressType: String
}

input AwsELBv2SetRulePrioritiesInput {
  RulePriorities: [AwsELBv2SetRulePrioritiesRulePrioritiesInput]!
}

type AwsELBv2SetRulePrioritiesOutput {
  Rules: [AwsELBv2S33]
}

input AwsELBv2SetRulePrioritiesRulePrioritiesInput {
  RuleArn: String
  Priority: Int
}

input AwsELBv2SetSecurityGroupsInput {
  LoadBalancerArn: String!
  SecurityGroups: [String]!
}

type AwsELBv2SetSecurityGroupsOutput {
  SecurityGroupIds: [String]
}

input AwsELBv2SetSubnetsInput {
  LoadBalancerArn: String!
  Subnets: [String]
  SubnetMappings: [AwsELBv2S1yInput]
}

type AwsELBv2SetSubnetsOutput {
  AvailabilityZones: [AwsELBv2S2g]
}

type AwsELBv2Sl {
  Type: String!
  TargetGroupArn: String
  AuthenticateOidcConfig: AwsELBv2SlAuthenticateOidcConfig
  AuthenticateCognitoConfig: AwsELBv2SlAuthenticateCognitoConfig
  Order: Int
  RedirectConfig: AwsELBv2SlRedirectConfig
  FixedResponseConfig: AwsELBv2SlFixedResponseConfig
}

type AwsELBv2SlAuthenticateCognitoConfig {
  UserPoolArn: String!
  UserPoolClientId: String!
  UserPoolDomain: String!
  SessionCookieName: String
  Scope: String
  SessionTimeout: JSON
  AuthenticationRequestExtraParams: JSON
  OnUnauthenticatedRequest: String
}

input AwsELBv2SlAuthenticateCognitoConfigInput {
  UserPoolArn: String!
  UserPoolClientId: String!
  UserPoolDomain: String!
  SessionCookieName: String
  Scope: String
  SessionTimeout: JSON
  AuthenticationRequestExtraParams: JSON
  OnUnauthenticatedRequest: String
}

type AwsELBv2SlAuthenticateOidcConfig {
  Issuer: String!
  AuthorizationEndpoint: String!
  TokenEndpoint: String!
  UserInfoEndpoint: String!
  ClientId: String!
  ClientSecret: String
  SessionCookieName: String
  Scope: String
  SessionTimeout: JSON
  AuthenticationRequestExtraParams: JSON
  OnUnauthenticatedRequest: String
  UseExistingClientSecret: Boolean
}

input AwsELBv2SlAuthenticateOidcConfigInput {
  Issuer: String!
  AuthorizationEndpoint: String!
  TokenEndpoint: String!
  UserInfoEndpoint: String!
  ClientId: String!
  ClientSecret: String
  SessionCookieName: String
  Scope: String
  SessionTimeout: JSON
  AuthenticationRequestExtraParams: JSON
  OnUnauthenticatedRequest: String
  UseExistingClientSecret: Boolean
}

type AwsELBv2SlFixedResponseConfig {
  MessageBody: String
  StatusCode: String!
  ContentType: String
}

input AwsELBv2SlFixedResponseConfigInput {
  MessageBody: String
  StatusCode: String!
  ContentType: String
}

input AwsELBv2SlInput {
  Type: String!
  TargetGroupArn: String
  AuthenticateOidcConfig: AwsELBv2SlAuthenticateOidcConfigInput
  AuthenticateCognitoConfig: AwsELBv2SlAuthenticateCognitoConfigInput
  Order: Int
  RedirectConfig: AwsELBv2SlRedirectConfigInput
  FixedResponseConfig: AwsELBv2SlFixedResponseConfigInput
}

type AwsELBv2SlRedirectConfig {
  Protocol: String
  Port: String
  Host: String
  Path: String
  Query: String
  StatusCode: String!
}

input AwsELBv2SlRedirectConfigInput {
  Protocol: String
  Port: String
  Host: String
  Path: String
  Query: String
  StatusCode: String!
}

"""Amazon Elastic MapReduce (2009-03-31)"""
type AwsEMR {
  addInstanceFleet(input: AwsEMRAddInstanceFleetInput!, config: AwsConfig): AwsEMRAddInstanceFleetOutput
  addInstanceGroups(input: AwsEMRAddInstanceGroupsInput!, config: AwsConfig): AwsEMRAddInstanceGroupsOutput
  addJobFlowSteps(input: AwsEMRAddJobFlowStepsInput!, config: AwsConfig): AwsEMRAddJobFlowStepsOutput
  addTags(input: AwsEMRAddTagsInput!, config: AwsConfig): JSON
  cancelSteps(input: AwsEMRCancelStepsInput, config: AwsConfig): AwsEMRCancelStepsOutput
  createSecurityConfiguration(input: AwsEMRCreateSecurityConfigurationInput!, config: AwsConfig): AwsEMRCreateSecurityConfigurationOutput
  deleteSecurityConfiguration(input: AwsEMRDeleteSecurityConfigurationInput!, config: AwsConfig): JSON
  describeCluster(input: AwsEMRDescribeClusterInput!, config: AwsConfig): AwsEMRDescribeClusterOutput
  describeJobFlows(input: AwsEMRDescribeJobFlowsInput, config: AwsConfig): AwsEMRDescribeJobFlowsOutput
  describeSecurityConfiguration(input: AwsEMRDescribeSecurityConfigurationInput!, config: AwsConfig): AwsEMRDescribeSecurityConfigurationOutput
  describeStep(input: AwsEMRDescribeStepInput!, config: AwsConfig): AwsEMRDescribeStepOutput
  listBootstrapActions(input: AwsEMRListBootstrapActionsInput!, config: AwsConfig): AwsEMRListBootstrapActionsOutput
  listClusters(input: AwsEMRListClustersInput, config: AwsConfig): AwsEMRListClustersOutput
  listInstanceFleets(input: AwsEMRListInstanceFleetsInput!, config: AwsConfig): AwsEMRListInstanceFleetsOutput
  listInstanceGroups(input: AwsEMRListInstanceGroupsInput!, config: AwsConfig): AwsEMRListInstanceGroupsOutput
  listInstances(input: AwsEMRListInstancesInput!, config: AwsConfig): AwsEMRListInstancesOutput
  listSecurityConfigurations(input: AwsEMRListSecurityConfigurationsInput, config: AwsConfig): AwsEMRListSecurityConfigurationsOutput
  listSteps(input: AwsEMRListStepsInput!, config: AwsConfig): AwsEMRListStepsOutput
  modifyInstanceFleet(input: AwsEMRModifyInstanceFleetInput!, config: AwsConfig): JSON
  modifyInstanceGroups(input: AwsEMRModifyInstanceGroupsInput, config: AwsConfig): JSON
  putAutoScalingPolicy(input: AwsEMRPutAutoScalingPolicyInput!, config: AwsConfig): AwsEMRPutAutoScalingPolicyOutput
  removeAutoScalingPolicy(input: AwsEMRRemoveAutoScalingPolicyInput!, config: AwsConfig): JSON
  removeTags(input: AwsEMRRemoveTagsInput!, config: AwsConfig): JSON
  runJobFlow(input: AwsEMRRunJobFlowInput!, config: AwsConfig): AwsEMRRunJobFlowOutput
  setTerminationProtection(input: AwsEMRSetTerminationProtectionInput!, config: AwsConfig): JSON
  setVisibleToAllUsers(input: AwsEMRSetVisibleToAllUsersInput!, config: AwsConfig): JSON
  terminateJobFlows(input: AwsEMRTerminateJobFlowsInput!, config: AwsConfig): JSON
}

input AwsEMRAddInstanceFleetInput {
  ClusterId: String!
  InstanceFleet: AwsEMRS3Input!
}

type AwsEMRAddInstanceFleetOutput {
  ClusterId: String
  InstanceFleetId: String
}

input AwsEMRAddInstanceGroupsInput {
  InstanceGroups: [AwsEMRSqInput]!
  JobFlowId: String!
}

type AwsEMRAddInstanceGroupsOutput {
  JobFlowId: String
  InstanceGroupIds: [String]
}

input AwsEMRAddJobFlowStepsInput {
  JobFlowId: String!
  Steps: [AwsEMRS1cInput]!
}

type AwsEMRAddJobFlowStepsOutput {
  StepIds: [String]
}

input AwsEMRAddTagsInput {
  ResourceId: String!
  Tags: [AwsEMRS1nInput]!
}

input AwsEMRCancelStepsInput {
  ClusterId: String
  StepIds: [String]
}

type AwsEMRCancelStepsOutput {
  CancelStepsInfoList: [AwsEMRCancelStepsOutputCancelStepsInfoList]
}

type AwsEMRCancelStepsOutputCancelStepsInfoList {
  StepId: String
  Status: String
  Reason: String
}

input AwsEMRCreateSecurityConfigurationInput {
  Name: String!
  SecurityConfiguration: String!
}

type AwsEMRCreateSecurityConfigurationOutput {
  Name: String!
  CreationDateTime: Date!
}

input AwsEMRDeleteSecurityConfigurationInput {
  Name: String!
}

input AwsEMRDescribeClusterInput {
  ClusterId: String!
}

type AwsEMRDescribeClusterOutput {
  Cluster: AwsEMRDescribeClusterOutputCluster
}

type AwsEMRDescribeClusterOutputCluster {
  Id: String
  Name: String
  Status: AwsEMRS25
  Ec2InstanceAttributes: AwsEMRDescribeClusterOutputClusterEc2InstanceAttributes
  InstanceCollectionType: String
  LogUri: String
  RequestedAmiVersion: String
  RunningAmiVersion: String
  ReleaseLabel: String
  AutoTerminate: Boolean
  TerminationProtected: Boolean
  VisibleToAllUsers: Boolean
  Applications: [AwsEMRS2f]
  Tags: [AwsEMRS1n]
  ServiceRole: String
  NormalizedInstanceHours: Int
  MasterPublicDnsName: String
  Configurations: [AwsEMRSh]
  SecurityConfiguration: String
  AutoScalingRole: String
  ScaleDownBehavior: String
  CustomAmiId: String
  EbsRootVolumeSize: Int
  RepoUpgradeOnBoot: String
  KerberosAttributes: AwsEMRS2j
}

type AwsEMRDescribeClusterOutputClusterEc2InstanceAttributes {
  Ec2KeyName: String
  Ec2SubnetId: String
  RequestedEc2SubnetIds: [String]
  Ec2AvailabilityZone: String
  RequestedEc2AvailabilityZones: [String]
  IamInstanceProfile: String
  EmrManagedMasterSecurityGroup: String
  EmrManagedSlaveSecurityGroup: String
  ServiceAccessSecurityGroup: String
  AdditionalMasterSecurityGroups: [String]
  AdditionalSlaveSecurityGroups: [String]
}

input AwsEMRDescribeJobFlowsInput {
  CreatedAfter: Date
  CreatedBefore: Date
  JobFlowIds: [String]
  JobFlowStates: [String]
}

type AwsEMRDescribeJobFlowsOutput {
  JobFlows: [AwsEMRDescribeJobFlowsOutputJobFlows]
}

type AwsEMRDescribeJobFlowsOutputJobFlows {
  JobFlowId: String!
  Name: String!
  LogUri: String
  AmiVersion: String
  ExecutionStatusDetail: AwsEMRDescribeJobFlowsOutputJobFlowsExecutionStatusDetail!
  Instances: AwsEMRDescribeJobFlowsOutputJobFlowsInstances!
  Steps: [AwsEMRDescribeJobFlowsOutputJobFlowsSteps]
  BootstrapActions: [AwsEMRDescribeJobFlowsOutputJobFlowsBootstrapActions]
  SupportedProducts: [String]
  VisibleToAllUsers: Boolean
  JobFlowRole: String
  ServiceRole: String
  AutoScalingRole: String
  ScaleDownBehavior: String
}

type AwsEMRDescribeJobFlowsOutputJobFlowsBootstrapActions {
  BootstrapActionConfig: AwsEMRS32
}

type AwsEMRDescribeJobFlowsOutputJobFlowsExecutionStatusDetail {
  State: String!
  CreationDateTime: Date!
  StartDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
  LastStateChangeReason: String
}

type AwsEMRDescribeJobFlowsOutputJobFlowsInstances {
  MasterInstanceType: String!
  MasterPublicDnsName: String
  MasterInstanceId: String
  SlaveInstanceType: String!
  InstanceCount: Int!
  InstanceGroups: [AwsEMRDescribeJobFlowsOutputJobFlowsInstancesInstanceGroups]
  NormalizedInstanceHours: Int
  Ec2KeyName: String
  Ec2SubnetId: String
  Placement: AwsEMRS2v
  KeepJobFlowAliveWhenNoSteps: Boolean
  TerminationProtected: Boolean
  HadoopVersion: String
}

type AwsEMRDescribeJobFlowsOutputJobFlowsInstancesInstanceGroups {
  InstanceGroupId: String
  Name: String
  Market: String!
  InstanceRole: String!
  BidPrice: String
  InstanceType: String!
  InstanceRequestCount: Int!
  InstanceRunningCount: Int!
  State: String!
  LastStateChangeReason: String
  CreationDateTime: Date!
  StartDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

type AwsEMRDescribeJobFlowsOutputJobFlowsSteps {
  StepConfig: AwsEMRS1c!
  ExecutionStatusDetail: AwsEMRDescribeJobFlowsOutputJobFlowsStepsExecutionStatusDetail!
}

type AwsEMRDescribeJobFlowsOutputJobFlowsStepsExecutionStatusDetail {
  State: String!
  CreationDateTime: Date!
  StartDateTime: Date
  EndDateTime: Date
  LastStateChangeReason: String
}

input AwsEMRDescribeSecurityConfigurationInput {
  Name: String!
}

type AwsEMRDescribeSecurityConfigurationOutput {
  Name: String
  SecurityConfiguration: String
  CreationDateTime: Date
}

input AwsEMRDescribeStepInput {
  ClusterId: String!
  StepId: String!
}

type AwsEMRDescribeStepOutput {
  Step: AwsEMRDescribeStepOutputStep
}

type AwsEMRDescribeStepOutputStep {
  Id: String
  Name: String
  Config: AwsEMRS3a
  ActionOnFailure: String
  Status: AwsEMRS3b
}

input AwsEMRListBootstrapActionsInput {
  ClusterId: String!
  Marker: String
}

type AwsEMRListBootstrapActionsOutput {
  BootstrapActions: [AwsEMRListBootstrapActionsOutputBootstrapActions]
  Marker: String
}

type AwsEMRListBootstrapActionsOutputBootstrapActions {
  Name: String
  ScriptPath: String
  Args: [String]
}

input AwsEMRListClustersInput {
  CreatedAfter: Date
  CreatedBefore: Date
  ClusterStates: [String]
  Marker: String
}

type AwsEMRListClustersOutput {
  Clusters: [AwsEMRListClustersOutputClusters]
  Marker: String
}

type AwsEMRListClustersOutputClusters {
  Id: String
  Name: String
  Status: AwsEMRS25
  NormalizedInstanceHours: Int
}

input AwsEMRListInstanceFleetsInput {
  ClusterId: String!
  Marker: String
}

type AwsEMRListInstanceFleetsOutput {
  InstanceFleets: [AwsEMRListInstanceFleetsOutputInstanceFleets]
  Marker: String
}

type AwsEMRListInstanceFleetsOutputInstanceFleets {
  Id: String
  Name: String
  Status: AwsEMRListInstanceFleetsOutputInstanceFleetsStatus
  InstanceFleetType: String
  TargetOnDemandCapacity: Int
  TargetSpotCapacity: Int
  ProvisionedOnDemandCapacity: Int
  ProvisionedSpotCapacity: Int
  InstanceTypeSpecifications: [AwsEMRListInstanceFleetsOutputInstanceFleetsInstanceTypeSpecifications]
  LaunchSpecifications: AwsEMRSk
}

type AwsEMRListInstanceFleetsOutputInstanceFleetsInstanceTypeSpecifications {
  InstanceType: String
  WeightedCapacity: Int
  BidPrice: String
  BidPriceAsPercentageOfOnDemandPrice: JSON
  Configurations: [AwsEMRSh]
  EbsBlockDevices: [AwsEMRS42]
  EbsOptimized: Boolean
}

type AwsEMRListInstanceFleetsOutputInstanceFleetsStatus {
  State: String
  StateChangeReason: AwsEMRListInstanceFleetsOutputInstanceFleetsStatusStateChangeReason
  Timeline: AwsEMRListInstanceFleetsOutputInstanceFleetsStatusTimeline
}

type AwsEMRListInstanceFleetsOutputInstanceFleetsStatusStateChangeReason {
  Code: String
  Message: String
}

type AwsEMRListInstanceFleetsOutputInstanceFleetsStatusTimeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

input AwsEMRListInstanceGroupsInput {
  ClusterId: String!
  Marker: String
}

type AwsEMRListInstanceGroupsOutput {
  InstanceGroups: [AwsEMRListInstanceGroupsOutputInstanceGroups]
  Marker: String
}

type AwsEMRListInstanceGroupsOutputInstanceGroups {
  Id: String
  Name: String
  Market: String
  InstanceGroupType: String
  BidPrice: String
  InstanceType: String
  RequestedInstanceCount: Int
  RunningInstanceCount: Int
  Status: AwsEMRListInstanceGroupsOutputInstanceGroupsStatus
  Configurations: [AwsEMRSh]
  ConfigurationsVersion: JSON
  LastSuccessfullyAppliedConfigurations: [AwsEMRSh]
  LastSuccessfullyAppliedConfigurationsVersion: JSON
  EbsBlockDevices: [AwsEMRS42]
  EbsOptimized: Boolean
  ShrinkPolicy: AwsEMRS4f
  AutoScalingPolicy: AwsEMRS4j
}

type AwsEMRListInstanceGroupsOutputInstanceGroupsStatus {
  State: String
  StateChangeReason: AwsEMRListInstanceGroupsOutputInstanceGroupsStatusStateChangeReason
  Timeline: AwsEMRListInstanceGroupsOutputInstanceGroupsStatusTimeline
}

type AwsEMRListInstanceGroupsOutputInstanceGroupsStatusStateChangeReason {
  Code: String
  Message: String
}

type AwsEMRListInstanceGroupsOutputInstanceGroupsStatusTimeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

input AwsEMRListInstancesInput {
  ClusterId: String!
  InstanceGroupId: String
  InstanceGroupTypes: [String]
  InstanceFleetId: String
  InstanceFleetType: String
  InstanceStates: [String]
  Marker: String
}

type AwsEMRListInstancesOutput {
  Instances: [AwsEMRListInstancesOutputInstances]
  Marker: String
}

type AwsEMRListInstancesOutputInstances {
  Id: String
  Ec2InstanceId: String
  PublicDnsName: String
  PublicIpAddress: String
  PrivateDnsName: String
  PrivateIpAddress: String
  Status: AwsEMRListInstancesOutputInstancesStatus
  InstanceGroupId: String
  InstanceFleetId: String
  Market: String
  InstanceType: String
  EbsVolumes: [AwsEMRListInstancesOutputInstancesEbsVolumes]
}

type AwsEMRListInstancesOutputInstancesEbsVolumes {
  Device: String
  VolumeId: String
}

type AwsEMRListInstancesOutputInstancesStatus {
  State: String
  StateChangeReason: AwsEMRListInstancesOutputInstancesStatusStateChangeReason
  Timeline: AwsEMRListInstancesOutputInstancesStatusTimeline
}

type AwsEMRListInstancesOutputInstancesStatusStateChangeReason {
  Code: String
  Message: String
}

type AwsEMRListInstancesOutputInstancesStatusTimeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

input AwsEMRListSecurityConfigurationsInput {
  Marker: String
}

type AwsEMRListSecurityConfigurationsOutput {
  SecurityConfigurations: [AwsEMRListSecurityConfigurationsOutputSecurityConfigurations]
  Marker: String
}

type AwsEMRListSecurityConfigurationsOutputSecurityConfigurations {
  Name: String
  CreationDateTime: Date
}

input AwsEMRListStepsInput {
  ClusterId: String!
  StepStates: [String]
  StepIds: [String]
  Marker: String
}

type AwsEMRListStepsOutput {
  Steps: [AwsEMRListStepsOutputSteps]
  Marker: String
}

type AwsEMRListStepsOutputSteps {
  Id: String
  Name: String
  Config: AwsEMRS3a
  ActionOnFailure: String
  Status: AwsEMRS3b
}

input AwsEMRModifyInstanceFleetInput {
  ClusterId: String!
  InstanceFleet: AwsEMRModifyInstanceFleetInstanceFleetInput!
}

input AwsEMRModifyInstanceFleetInstanceFleetInput {
  InstanceFleetId: String!
  TargetOnDemandCapacity: Int
  TargetSpotCapacity: Int
}

input AwsEMRModifyInstanceGroupsInput {
  ClusterId: String
  InstanceGroups: [AwsEMRModifyInstanceGroupsInstanceGroupsInput]
}

input AwsEMRModifyInstanceGroupsInstanceGroupsInput {
  InstanceGroupId: String!
  InstanceCount: Int
  EC2InstanceIdsToTerminate: [String]
  ShrinkPolicy: AwsEMRS4fInput
  Configurations: [AwsEMRShInput]
}

input AwsEMRPutAutoScalingPolicyInput {
  ClusterId: String!
  InstanceGroupId: String!
  AutoScalingPolicy: AwsEMRSuInput!
}

type AwsEMRPutAutoScalingPolicyOutput {
  ClusterId: String
  InstanceGroupId: String
  AutoScalingPolicy: AwsEMRS4j
}

input AwsEMRRemoveAutoScalingPolicyInput {
  ClusterId: String!
  InstanceGroupId: String!
}

input AwsEMRRemoveTagsInput {
  ResourceId: String!
  TagKeys: [String]!
}

input AwsEMRRunJobFlowInput {
  Name: String!
  LogUri: String
  AdditionalInfo: String
  AmiVersion: String
  ReleaseLabel: String
  Instances: AwsEMRRunJobFlowInstancesInput!
  Steps: [AwsEMRS1cInput]
  BootstrapActions: [AwsEMRS32Input]
  SupportedProducts: [String]
  NewSupportedProducts: [AwsEMRRunJobFlowNewSupportedProductsInput]
  Applications: [AwsEMRS2fInput]
  Configurations: [AwsEMRShInput]
  VisibleToAllUsers: Boolean
  JobFlowRole: String
  ServiceRole: String
  Tags: [AwsEMRS1nInput]
  SecurityConfiguration: String
  AutoScalingRole: String
  ScaleDownBehavior: String
  CustomAmiId: String
  EbsRootVolumeSize: Int
  RepoUpgradeOnBoot: String
  KerberosAttributes: AwsEMRS2jInput
}

input AwsEMRRunJobFlowInstancesInput {
  MasterInstanceType: String
  SlaveInstanceType: String
  InstanceCount: Int
  InstanceGroups: [AwsEMRSqInput]
  InstanceFleets: [AwsEMRS3Input]
  Ec2KeyName: String
  Placement: AwsEMRS2vInput
  KeepJobFlowAliveWhenNoSteps: Boolean
  TerminationProtected: Boolean
  HadoopVersion: String
  Ec2SubnetId: String
  Ec2SubnetIds: [String]
  EmrManagedMasterSecurityGroup: String
  EmrManagedSlaveSecurityGroup: String
  ServiceAccessSecurityGroup: String
  AdditionalMasterSecurityGroups: [String]
  AdditionalSlaveSecurityGroups: [String]
}

input AwsEMRRunJobFlowNewSupportedProductsInput {
  Name: String
  Args: [String]
}

type AwsEMRRunJobFlowOutput {
  JobFlowId: String
}

type AwsEMRS1c {
  Name: String!
  ActionOnFailure: String
  HadoopJarStep: AwsEMRS1cHadoopJarStep!
}

type AwsEMRS1cHadoopJarStep {
  Properties: [AwsEMRS1cHadoopJarStepProperties]
  Jar: String!
  MainClass: String
  Args: [String]
}

input AwsEMRS1cHadoopJarStepInput {
  Properties: [AwsEMRS1cHadoopJarStepPropertiesInput]
  Jar: String!
  MainClass: String
  Args: [String]
}

type AwsEMRS1cHadoopJarStepProperties {
  Key: String
  Value: String
}

input AwsEMRS1cHadoopJarStepPropertiesInput {
  Key: String
  Value: String
}

input AwsEMRS1cInput {
  Name: String!
  ActionOnFailure: String
  HadoopJarStep: AwsEMRS1cHadoopJarStepInput!
}

type AwsEMRS1n {
  Key: String
  Value: String
}

input AwsEMRS1nInput {
  Key: String
  Value: String
}

type AwsEMRS25 {
  State: String
  StateChangeReason: AwsEMRS25StateChangeReason
  Timeline: AwsEMRS25Timeline
}

type AwsEMRS25StateChangeReason {
  Code: String
  Message: String
}

type AwsEMRS25Timeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

type AwsEMRS2f {
  Name: String
  Version: String
  Args: [String]
  AdditionalInfo: JSON
}

input AwsEMRS2fInput {
  Name: String
  Version: String
  Args: [String]
  AdditionalInfo: JSON
}

type AwsEMRS2j {
  Realm: String!
  KdcAdminPassword: String!
  CrossRealmTrustPrincipalPassword: String
  ADDomainJoinUser: String
  ADDomainJoinPassword: String
}

input AwsEMRS2jInput {
  Realm: String!
  KdcAdminPassword: String!
  CrossRealmTrustPrincipalPassword: String
  ADDomainJoinUser: String
  ADDomainJoinPassword: String
}

type AwsEMRS2v {
  AvailabilityZone: String
  AvailabilityZones: [String]
}

input AwsEMRS2vInput {
  AvailabilityZone: String
  AvailabilityZones: [String]
}

type AwsEMRS32 {
  Name: String!
  ScriptBootstrapAction: AwsEMRS32ScriptBootstrapAction!
}

input AwsEMRS32Input {
  Name: String!
  ScriptBootstrapAction: AwsEMRS32ScriptBootstrapActionInput!
}

type AwsEMRS32ScriptBootstrapAction {
  Path: String!
  Args: [String]
}

input AwsEMRS32ScriptBootstrapActionInput {
  Path: String!
  Args: [String]
}

type AwsEMRS3a {
  Jar: String
  Properties: JSON
  MainClass: String
  Args: [String]
}

type AwsEMRS3b {
  State: String
  StateChangeReason: AwsEMRS3bStateChangeReason
  FailureDetails: AwsEMRS3bFailureDetails
  Timeline: AwsEMRS3bTimeline
}

type AwsEMRS3bFailureDetails {
  Reason: String
  Message: String
  LogFile: String
}

type AwsEMRS3bStateChangeReason {
  Code: String
  Message: String
}

type AwsEMRS3bTimeline {
  CreationDateTime: Date
  StartDateTime: Date
  EndDateTime: Date
}

input AwsEMRS3Input {
  Name: String
  InstanceFleetType: String!
  TargetOnDemandCapacity: Int
  TargetSpotCapacity: Int
  InstanceTypeConfigs: [AwsEMRS3InstanceTypeConfigsInput]
  LaunchSpecifications: AwsEMRSkInput
}

input AwsEMRS3InstanceTypeConfigsInput {
  InstanceType: String!
  WeightedCapacity: Int
  BidPrice: String
  BidPriceAsPercentageOfOnDemandPrice: JSON
  EbsConfiguration: AwsEMRSaInput
  Configurations: [AwsEMRShInput]
}

type AwsEMRS42 {
  VolumeSpecification: AwsEMRSd
  Device: String
}

type AwsEMRS4f {
  DecommissionTimeout: Int
  InstanceResizePolicy: AwsEMRS4fInstanceResizePolicy
}

input AwsEMRS4fInput {
  DecommissionTimeout: Int
  InstanceResizePolicy: AwsEMRS4fInstanceResizePolicyInput
}

type AwsEMRS4fInstanceResizePolicy {
  InstancesToTerminate: [String]
  InstancesToProtect: [String]
  InstanceTerminationTimeout: Int
}

input AwsEMRS4fInstanceResizePolicyInput {
  InstancesToTerminate: [String]
  InstancesToProtect: [String]
  InstanceTerminationTimeout: Int
}

type AwsEMRS4j {
  Status: AwsEMRS4jStatus
  Constraints: AwsEMRSv
  Rules: [AwsEMRSw]
}

type AwsEMRS4jStatus {
  State: String
  StateChangeReason: AwsEMRS4jStatusStateChangeReason
}

type AwsEMRS4jStatusStateChangeReason {
  Code: String
  Message: String
}

input AwsEMRSaEbsBlockDeviceConfigsInput {
  VolumeSpecification: AwsEMRSdInput!
  VolumesPerInstance: Int
}

input AwsEMRSaInput {
  EbsBlockDeviceConfigs: [AwsEMRSaEbsBlockDeviceConfigsInput]
  EbsOptimized: Boolean
}

type AwsEMRSd {
  VolumeType: String!
  Iops: Int
  SizeInGB: Int!
}

input AwsEMRSdInput {
  VolumeType: String!
  Iops: Int
  SizeInGB: Int!
}

input AwsEMRSetTerminationProtectionInput {
  JobFlowIds: [String]!
  TerminationProtected: Boolean!
}

input AwsEMRSetVisibleToAllUsersInput {
  JobFlowIds: [String]!
  VisibleToAllUsers: Boolean!
}

type AwsEMRSh {
  Classification: String
  Configurations: JSON
  Properties: JSON
}

input AwsEMRShInput {
  Classification: String
  Configurations: JSON
  Properties: JSON
}

type AwsEMRSk {
  SpotSpecification: AwsEMRSkSpotSpecification!
}

input AwsEMRSkInput {
  SpotSpecification: AwsEMRSkSpotSpecificationInput!
}

type AwsEMRSkSpotSpecification {
  TimeoutDurationMinutes: Int!
  TimeoutAction: String!
  BlockDurationMinutes: Int
}

input AwsEMRSkSpotSpecificationInput {
  TimeoutDurationMinutes: Int!
  TimeoutAction: String!
  BlockDurationMinutes: Int
}

input AwsEMRSqInput {
  Name: String
  Market: String
  InstanceRole: String!
  BidPrice: String
  InstanceType: String!
  InstanceCount: Int!
  Configurations: [AwsEMRShInput]
  EbsConfiguration: AwsEMRSaInput
  AutoScalingPolicy: AwsEMRSuInput
}

input AwsEMRSuInput {
  Constraints: AwsEMRSvInput!
  Rules: [AwsEMRSwInput]!
}

type AwsEMRSv {
  MinCapacity: Int!
  MaxCapacity: Int!
}

input AwsEMRSvInput {
  MinCapacity: Int!
  MaxCapacity: Int!
}

type AwsEMRSw {
  Name: String!
  Description: String
  Action: AwsEMRSwAction!
  Trigger: AwsEMRSwTrigger!
}

type AwsEMRSwAction {
  Market: String
  SimpleScalingPolicyConfiguration: AwsEMRSwActionSimpleScalingPolicyConfiguration!
}

input AwsEMRSwActionInput {
  Market: String
  SimpleScalingPolicyConfiguration: AwsEMRSwActionSimpleScalingPolicyConfigurationInput!
}

type AwsEMRSwActionSimpleScalingPolicyConfiguration {
  AdjustmentType: String
  ScalingAdjustment: Int!
  CoolDown: Int
}

input AwsEMRSwActionSimpleScalingPolicyConfigurationInput {
  AdjustmentType: String
  ScalingAdjustment: Int!
  CoolDown: Int
}

input AwsEMRSwInput {
  Name: String!
  Description: String
  Action: AwsEMRSwActionInput!
  Trigger: AwsEMRSwTriggerInput!
}

type AwsEMRSwTrigger {
  CloudWatchAlarmDefinition: AwsEMRSwTriggerCloudWatchAlarmDefinition!
}

type AwsEMRSwTriggerCloudWatchAlarmDefinition {
  ComparisonOperator: String!
  EvaluationPeriods: Int
  MetricName: String!
  Namespace: String
  Period: Int!
  Statistic: String
  Threshold: JSON!
  Unit: String
  Dimensions: [AwsEMRSwTriggerCloudWatchAlarmDefinitionDimensions]
}

type AwsEMRSwTriggerCloudWatchAlarmDefinitionDimensions {
  Key: String
  Value: String
}

input AwsEMRSwTriggerCloudWatchAlarmDefinitionDimensionsInput {
  Key: String
  Value: String
}

input AwsEMRSwTriggerCloudWatchAlarmDefinitionInput {
  ComparisonOperator: String!
  EvaluationPeriods: Int
  MetricName: String!
  Namespace: String
  Period: Int!
  Statistic: String
  Threshold: JSON!
  Unit: String
  Dimensions: [AwsEMRSwTriggerCloudWatchAlarmDefinitionDimensionsInput]
}

input AwsEMRSwTriggerInput {
  CloudWatchAlarmDefinition: AwsEMRSwTriggerCloudWatchAlarmDefinitionInput!
}

input AwsEMRTerminateJobFlowsInput {
  JobFlowIds: [String]!
}

"""Amazon Elasticsearch Service (2015-01-01)"""
type AwsES {
  addTags(input: AwsESAddTagsInput!, config: AwsConfig): JSON
  cancelElasticsearchServiceSoftwareUpdate(input: AwsESCancelElasticsearchServiceSoftwareUpdateInput!, config: AwsConfig): AwsESCancelElasticsearchServiceSoftwareUpdateOutput
  createElasticsearchDomain(input: AwsESCreateElasticsearchDomainInput!, config: AwsConfig): AwsESCreateElasticsearchDomainOutput
  deleteElasticsearchDomain(input: AwsESDeleteElasticsearchDomainInput!, config: AwsConfig): AwsESDeleteElasticsearchDomainOutput
  deleteElasticsearchServiceRole(config: AwsConfig): JSON
  describeElasticsearchDomain(input: AwsESDescribeElasticsearchDomainInput!, config: AwsConfig): AwsESDescribeElasticsearchDomainOutput
  describeElasticsearchDomainConfig(input: AwsESDescribeElasticsearchDomainConfigInput!, config: AwsConfig): AwsESDescribeElasticsearchDomainConfigOutput
  describeElasticsearchDomains(input: AwsESDescribeElasticsearchDomainsInput!, config: AwsConfig): AwsESDescribeElasticsearchDomainsOutput
  describeElasticsearchInstanceTypeLimits(input: AwsESDescribeElasticsearchInstanceTypeLimitsInput!, config: AwsConfig): AwsESDescribeElasticsearchInstanceTypeLimitsOutput
  describeReservedElasticsearchInstanceOfferings(input: AwsESDescribeReservedElasticsearchInstanceOfferingsInput, config: AwsConfig): AwsESDescribeReservedElasticsearchInstanceOfferingsOutput
  describeReservedElasticsearchInstances(input: AwsESDescribeReservedElasticsearchInstancesInput, config: AwsConfig): AwsESDescribeReservedElasticsearchInstancesOutput
  getCompatibleElasticsearchVersions(input: AwsESGetCompatibleElasticsearchVersionsInput, config: AwsConfig): AwsESGetCompatibleElasticsearchVersionsOutput
  getUpgradeHistory(input: AwsESGetUpgradeHistoryInput!, config: AwsConfig): AwsESGetUpgradeHistoryOutput
  getUpgradeStatus(input: AwsESGetUpgradeStatusInput!, config: AwsConfig): AwsESGetUpgradeStatusOutput
  listDomainNames(config: AwsConfig): AwsESListDomainNamesOutput
  listElasticsearchInstanceTypes(input: AwsESListElasticsearchInstanceTypesInput!, config: AwsConfig): AwsESListElasticsearchInstanceTypesOutput
  listElasticsearchVersions(input: AwsESListElasticsearchVersionsInput, config: AwsConfig): AwsESListElasticsearchVersionsOutput
  listTags(input: AwsESListTagsInput!, config: AwsConfig): AwsESListTagsOutput
  purchaseReservedElasticsearchInstanceOffering(input: AwsESPurchaseReservedElasticsearchInstanceOfferingInput!, config: AwsConfig): AwsESPurchaseReservedElasticsearchInstanceOfferingOutput
  removeTags(input: AwsESRemoveTagsInput!, config: AwsConfig): JSON
  startElasticsearchServiceSoftwareUpdate(input: AwsESStartElasticsearchServiceSoftwareUpdateInput!, config: AwsConfig): AwsESStartElasticsearchServiceSoftwareUpdateOutput
  updateElasticsearchDomainConfig(input: AwsESUpdateElasticsearchDomainConfigInput!, config: AwsConfig): AwsESUpdateElasticsearchDomainConfigOutput
  upgradeElasticsearchDomain(input: AwsESUpgradeElasticsearchDomainInput!, config: AwsConfig): AwsESUpgradeElasticsearchDomainOutput
}

input AwsESAddTagsInput {
  ARN: String!
  TagList: [AwsESS3Input]!
}

input AwsESCancelElasticsearchServiceSoftwareUpdateInput {
  DomainName: String!
}

type AwsESCancelElasticsearchServiceSoftwareUpdateOutput {
  ServiceSoftwareOptions: AwsESSa
}

input AwsESCreateElasticsearchDomainInput {
  DomainName: String!
  ElasticsearchVersion: String
  ElasticsearchClusterConfig: AwsESShInput
  EBSOptions: AwsESSlInput
  AccessPolicies: String
  SnapshotOptions: AwsESSoInput
  VPCOptions: AwsESSpInput
  CognitoOptions: AwsESSrInput
  EncryptionAtRestOptions: AwsESSvInput
  NodeToNodeEncryptionOptions: AwsESSxInput
  AdvancedOptions: JSON
  LogPublishingOptions: JSON
}

type AwsESCreateElasticsearchDomainOutput {
  DomainStatus: AwsESS14
}

input AwsESDeleteElasticsearchDomainInput {
  DomainName: String!
}

type AwsESDeleteElasticsearchDomainOutput {
  DomainStatus: AwsESS14
}

input AwsESDescribeElasticsearchDomainConfigInput {
  DomainName: String!
}

type AwsESDescribeElasticsearchDomainConfigOutput {
  DomainConfig: AwsESS1f!
}

input AwsESDescribeElasticsearchDomainInput {
  DomainName: String!
}

type AwsESDescribeElasticsearchDomainOutput {
  DomainStatus: AwsESS14!
}

input AwsESDescribeElasticsearchDomainsInput {
  DomainNames: [String]!
}

type AwsESDescribeElasticsearchDomainsOutput {
  DomainStatusList: [AwsESS14]!
}

input AwsESDescribeElasticsearchInstanceTypeLimitsInput {
  DomainName: String
  InstanceType: String!
  ElasticsearchVersion: String!
}

type AwsESDescribeElasticsearchInstanceTypeLimitsOutput {
  LimitsByRole: JSON
}

input AwsESDescribeReservedElasticsearchInstanceOfferingsInput {
  ReservedElasticsearchInstanceOfferingId: String
  MaxResults: Int
  NextToken: String
}

type AwsESDescribeReservedElasticsearchInstanceOfferingsOutput {
  NextToken: String
  ReservedElasticsearchInstanceOfferings: [AwsESDescribeReservedElasticsearchInstanceOfferingsOutputReservedElasticsearchInstanceOfferings]
}

type AwsESDescribeReservedElasticsearchInstanceOfferingsOutputReservedElasticsearchInstanceOfferings {
  ReservedElasticsearchInstanceOfferingId: String
  ElasticsearchInstanceType: String
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  PaymentOption: String
  RecurringCharges: [AwsESS2t]
}

input AwsESDescribeReservedElasticsearchInstancesInput {
  ReservedElasticsearchInstanceId: String
  MaxResults: Int
  NextToken: String
}

type AwsESDescribeReservedElasticsearchInstancesOutput {
  NextToken: String
  ReservedElasticsearchInstances: [AwsESDescribeReservedElasticsearchInstancesOutputReservedElasticsearchInstances]
}

type AwsESDescribeReservedElasticsearchInstancesOutputReservedElasticsearchInstances {
  ReservationName: String
  ReservedElasticsearchInstanceId: String
  ReservedElasticsearchInstanceOfferingId: String
  ElasticsearchInstanceType: String
  StartTime: Date
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  ElasticsearchInstanceCount: Int
  State: String
  PaymentOption: String
  RecurringCharges: [AwsESS2t]
}

input AwsESGetCompatibleElasticsearchVersionsInput {
  DomainName: String
}

type AwsESGetCompatibleElasticsearchVersionsOutput {
  CompatibleElasticsearchVersions: [AwsESGetCompatibleElasticsearchVersionsOutputCompatibleElasticsearchVersions]
}

type AwsESGetCompatibleElasticsearchVersionsOutputCompatibleElasticsearchVersions {
  SourceVersion: String
  TargetVersions: [String]
}

input AwsESGetUpgradeHistoryInput {
  DomainName: String!
  MaxResults: Int
  NextToken: String
}

type AwsESGetUpgradeHistoryOutput {
  UpgradeHistories: [AwsESGetUpgradeHistoryOutputUpgradeHistories]
  NextToken: String
}

type AwsESGetUpgradeHistoryOutputUpgradeHistories {
  UpgradeName: String
  StartTimestamp: Date
  UpgradeStatus: String
  StepsList: [AwsESGetUpgradeHistoryOutputUpgradeHistoriesStepsList]
}

type AwsESGetUpgradeHistoryOutputUpgradeHistoriesStepsList {
  UpgradeStep: String
  UpgradeStepStatus: String
  Issues: [String]
  ProgressPercent: JSON
}

input AwsESGetUpgradeStatusInput {
  DomainName: String!
}

type AwsESGetUpgradeStatusOutput {
  UpgradeStep: String
  StepStatus: String
  UpgradeName: String
}

type AwsESListDomainNamesOutput {
  DomainNames: [AwsESListDomainNamesOutputDomainNames]
}

type AwsESListDomainNamesOutputDomainNames {
  DomainName: String
}

input AwsESListElasticsearchInstanceTypesInput {
  ElasticsearchVersion: String!
  DomainName: String
  MaxResults: Int
  NextToken: String
}

type AwsESListElasticsearchInstanceTypesOutput {
  ElasticsearchInstanceTypes: [String]
  NextToken: String
}

input AwsESListElasticsearchVersionsInput {
  MaxResults: Int
  NextToken: String
}

type AwsESListElasticsearchVersionsOutput {
  ElasticsearchVersions: [String]
  NextToken: String
}

input AwsESListTagsInput {
  ARN: String!
}

type AwsESListTagsOutput {
  TagList: [AwsESS3]
}

input AwsESPurchaseReservedElasticsearchInstanceOfferingInput {
  ReservedElasticsearchInstanceOfferingId: String!
  ReservationName: String!
  InstanceCount: Int
}

type AwsESPurchaseReservedElasticsearchInstanceOfferingOutput {
  ReservedElasticsearchInstanceId: String
  ReservationName: String
}

input AwsESRemoveTagsInput {
  ARN: String!
  TagKeys: [String]!
}

type AwsESS14 {
  DomainId: String!
  DomainName: String!
  ARN: String!
  Created: Boolean
  Deleted: Boolean
  Endpoint: String
  Endpoints: JSON
  Processing: Boolean
  UpgradeProcessing: Boolean
  ElasticsearchVersion: String
  ElasticsearchClusterConfig: AwsESSh!
  EBSOptions: AwsESSl
  AccessPolicies: String
  SnapshotOptions: AwsESSo
  VPCOptions: AwsESS18
  CognitoOptions: AwsESSr
  EncryptionAtRestOptions: AwsESSv
  NodeToNodeEncryptionOptions: AwsESSx
  AdvancedOptions: JSON
  LogPublishingOptions: JSON
  ServiceSoftwareOptions: AwsESSa
}

type AwsESS18 {
  VPCId: String
  SubnetIds: [String]
  AvailabilityZones: [String]
  SecurityGroupIds: [String]
}

type AwsESS1f {
  ElasticsearchVersion: AwsESS1fElasticsearchVersion
  ElasticsearchClusterConfig: AwsESS1fElasticsearchClusterConfig
  EBSOptions: AwsESS1fEBSOptions
  AccessPolicies: AwsESS1fAccessPolicies
  SnapshotOptions: AwsESS1fSnapshotOptions
  VPCOptions: AwsESS1fVPCOptions
  CognitoOptions: AwsESS1fCognitoOptions
  EncryptionAtRestOptions: AwsESS1fEncryptionAtRestOptions
  NodeToNodeEncryptionOptions: AwsESS1fNodeToNodeEncryptionOptions
  AdvancedOptions: AwsESS1fAdvancedOptions
  LogPublishingOptions: AwsESS1fLogPublishingOptions
}

type AwsESS1fAccessPolicies {
  Options: String!
  Status: AwsESS1h!
}

type AwsESS1fAdvancedOptions {
  Options: JSON!
  Status: AwsESS1h!
}

type AwsESS1fCognitoOptions {
  Options: AwsESSr!
  Status: AwsESS1h!
}

type AwsESS1fEBSOptions {
  Options: AwsESSl!
  Status: AwsESS1h!
}

type AwsESS1fElasticsearchClusterConfig {
  Options: AwsESSh!
  Status: AwsESS1h!
}

type AwsESS1fElasticsearchVersion {
  Options: String!
  Status: AwsESS1h!
}

type AwsESS1fEncryptionAtRestOptions {
  Options: AwsESSv!
  Status: AwsESS1h!
}

type AwsESS1fLogPublishingOptions {
  Options: JSON
  Status: AwsESS1h
}

type AwsESS1fNodeToNodeEncryptionOptions {
  Options: AwsESSx!
  Status: AwsESS1h!
}

type AwsESS1fSnapshotOptions {
  Options: AwsESSo!
  Status: AwsESS1h!
}

type AwsESS1fVPCOptions {
  Options: AwsESS18!
  Status: AwsESS1h!
}

type AwsESS1h {
  CreationDate: Date!
  UpdateDate: Date!
  UpdateVersion: Int
  State: String!
  PendingDeletion: Boolean
}

type AwsESS2t {
  RecurringChargeAmount: JSON
  RecurringChargeFrequency: String
}

type AwsESS3 {
  Key: String!
  Value: String!
}

input AwsESS3Input {
  Key: String!
  Value: String!
}

type AwsESSa {
  CurrentVersion: String
  NewVersion: String
  UpdateAvailable: Boolean
  Cancellable: Boolean
  UpdateStatus: String
  Description: String
  AutomatedUpdateDate: Date
}

type AwsESSh {
  InstanceType: String
  InstanceCount: Int
  DedicatedMasterEnabled: Boolean
  ZoneAwarenessEnabled: Boolean
  ZoneAwarenessConfig: AwsESShZoneAwarenessConfig
  DedicatedMasterType: String
  DedicatedMasterCount: Int
}

input AwsESShInput {
  InstanceType: String
  InstanceCount: Int
  DedicatedMasterEnabled: Boolean
  ZoneAwarenessEnabled: Boolean
  ZoneAwarenessConfig: AwsESShZoneAwarenessConfigInput
  DedicatedMasterType: String
  DedicatedMasterCount: Int
}

type AwsESShZoneAwarenessConfig {
  AvailabilityZoneCount: Int
}

input AwsESShZoneAwarenessConfigInput {
  AvailabilityZoneCount: Int
}

type AwsESSl {
  EBSEnabled: Boolean
  VolumeType: String
  VolumeSize: Int
  Iops: Int
}

input AwsESSlInput {
  EBSEnabled: Boolean
  VolumeType: String
  VolumeSize: Int
  Iops: Int
}

type AwsESSo {
  AutomatedSnapshotStartHour: Int
}

input AwsESSoInput {
  AutomatedSnapshotStartHour: Int
}

input AwsESSpInput {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

type AwsESSr {
  Enabled: Boolean
  UserPoolId: String
  IdentityPoolId: String
  RoleArn: String
}

input AwsESSrInput {
  Enabled: Boolean
  UserPoolId: String
  IdentityPoolId: String
  RoleArn: String
}

input AwsESStartElasticsearchServiceSoftwareUpdateInput {
  DomainName: String!
}

type AwsESStartElasticsearchServiceSoftwareUpdateOutput {
  ServiceSoftwareOptions: AwsESSa
}

type AwsESSv {
  Enabled: Boolean
  KmsKeyId: String
}

input AwsESSvInput {
  Enabled: Boolean
  KmsKeyId: String
}

type AwsESSx {
  Enabled: Boolean
}

input AwsESSxInput {
  Enabled: Boolean
}

input AwsESUpdateElasticsearchDomainConfigInput {
  DomainName: String!
  ElasticsearchClusterConfig: AwsESShInput
  EBSOptions: AwsESSlInput
  SnapshotOptions: AwsESSoInput
  VPCOptions: AwsESSpInput
  CognitoOptions: AwsESSrInput
  AdvancedOptions: JSON
  AccessPolicies: String
  LogPublishingOptions: JSON
}

type AwsESUpdateElasticsearchDomainConfigOutput {
  DomainConfig: AwsESS1f!
}

input AwsESUpgradeElasticsearchDomainInput {
  DomainName: String!
  TargetVersion: String!
  PerformCheckOnly: Boolean
}

type AwsESUpgradeElasticsearchDomainOutput {
  DomainName: String
  TargetVersion: String
  PerformCheckOnly: Boolean
}

"""Amazon Kinesis Firehose (2015-08-04)"""
type AwsFirehose {
  createDeliveryStream(input: AwsFirehoseCreateDeliveryStreamInput!, config: AwsConfig): AwsFirehoseCreateDeliveryStreamOutput
  deleteDeliveryStream(input: AwsFirehoseDeleteDeliveryStreamInput!, config: AwsConfig): JSON
  describeDeliveryStream(input: AwsFirehoseDescribeDeliveryStreamInput!, config: AwsConfig): AwsFirehoseDescribeDeliveryStreamOutput
  listDeliveryStreams(input: AwsFirehoseListDeliveryStreamsInput, config: AwsConfig): AwsFirehoseListDeliveryStreamsOutput
  listTagsForDeliveryStream(input: AwsFirehoseListTagsForDeliveryStreamInput!, config: AwsConfig): AwsFirehoseListTagsForDeliveryStreamOutput
  putRecord(input: AwsFirehosePutRecordInput!, config: AwsConfig): AwsFirehosePutRecordOutput
  putRecordBatch(input: AwsFirehosePutRecordBatchInput!, config: AwsConfig): AwsFirehosePutRecordBatchOutput
  startDeliveryStreamEncryption(input: AwsFirehoseStartDeliveryStreamEncryptionInput!, config: AwsConfig): JSON
  stopDeliveryStreamEncryption(input: AwsFirehoseStopDeliveryStreamEncryptionInput!, config: AwsConfig): JSON
  tagDeliveryStream(input: AwsFirehoseTagDeliveryStreamInput!, config: AwsConfig): JSON
  untagDeliveryStream(input: AwsFirehoseUntagDeliveryStreamInput!, config: AwsConfig): JSON
  updateDestination(input: AwsFirehoseUpdateDestinationInput!, config: AwsConfig): JSON
}

input AwsFirehoseCreateDeliveryStreamElasticsearchDestinationConfigurationInput {
  RoleARN: String!
  DomainARN: String!
  IndexName: String!
  TypeName: String!
  IndexRotationPeriod: String
  BufferingHints: AwsFirehoseS22Input
  RetryOptions: AwsFirehoseS25Input
  S3BackupMode: String
  S3Configuration: AwsFirehoseS7Input!
  ProcessingConfiguration: AwsFirehoseSoInput
  CloudWatchLoggingOptions: AwsFirehoseSjInput
}

input AwsFirehoseCreateDeliveryStreamExtendedS3DestinationConfigurationInput {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  ErrorOutputPrefix: String
  BufferingHints: AwsFirehoseSbInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSfInput
  CloudWatchLoggingOptions: AwsFirehoseSjInput
  ProcessingConfiguration: AwsFirehoseSoInput
  S3BackupMode: String
  S3BackupConfiguration: AwsFirehoseS7Input
  DataFormatConversionConfiguration: AwsFirehoseSxInput
}

input AwsFirehoseCreateDeliveryStreamInput {
  DeliveryStreamName: String!
  DeliveryStreamType: String
  KinesisStreamSourceConfiguration: AwsFirehoseCreateDeliveryStreamKinesisStreamSourceConfigurationInput
  S3DestinationConfiguration: AwsFirehoseS7Input
  ExtendedS3DestinationConfiguration: AwsFirehoseCreateDeliveryStreamExtendedS3DestinationConfigurationInput
  RedshiftDestinationConfiguration: AwsFirehoseCreateDeliveryStreamRedshiftDestinationConfigurationInput
  ElasticsearchDestinationConfiguration: AwsFirehoseCreateDeliveryStreamElasticsearchDestinationConfigurationInput
  SplunkDestinationConfiguration: AwsFirehoseCreateDeliveryStreamSplunkDestinationConfigurationInput
  Tags: [AwsFirehoseS2hInput]
}

input AwsFirehoseCreateDeliveryStreamKinesisStreamSourceConfigurationInput {
  KinesisStreamARN: String!
  RoleARN: String!
}

type AwsFirehoseCreateDeliveryStreamOutput {
  DeliveryStreamARN: String
}

input AwsFirehoseCreateDeliveryStreamRedshiftDestinationConfigurationInput {
  RoleARN: String!
  ClusterJDBCURL: String!
  CopyCommand: AwsFirehoseS1oInput!
  Username: String!
  Password: String!
  RetryOptions: AwsFirehoseS1uInput
  S3Configuration: AwsFirehoseS7Input!
  ProcessingConfiguration: AwsFirehoseSoInput
  S3BackupMode: String
  S3BackupConfiguration: AwsFirehoseS7Input
  CloudWatchLoggingOptions: AwsFirehoseSjInput
}

input AwsFirehoseCreateDeliveryStreamSplunkDestinationConfigurationInput {
  HECEndpoint: String!
  HECEndpointType: String!
  HECToken: String!
  HECAcknowledgmentTimeoutInSeconds: Int
  RetryOptions: AwsFirehoseS2dInput
  S3BackupMode: String
  S3Configuration: AwsFirehoseS7Input!
  ProcessingConfiguration: AwsFirehoseSoInput
  CloudWatchLoggingOptions: AwsFirehoseSjInput
}

input AwsFirehoseDeleteDeliveryStreamInput {
  DeliveryStreamName: String!
}

input AwsFirehoseDescribeDeliveryStreamInput {
  DeliveryStreamName: String!
  Limit: Int
  ExclusiveStartDestinationId: String
}

type AwsFirehoseDescribeDeliveryStreamOutput {
  DeliveryStreamDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescription!
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescription {
  DeliveryStreamName: String!
  DeliveryStreamARN: String!
  DeliveryStreamStatus: String!
  DeliveryStreamEncryptionConfiguration: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration
  DeliveryStreamType: String!
  VersionId: String!
  CreateTimestamp: Date
  LastUpdateTimestamp: Date
  Source: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSource
  Destinations: [AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinations]!
  HasMoreDestinations: Boolean!
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDeliveryStreamEncryptionConfiguration {
  Status: String
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinations {
  DestinationId: String!
  S3DestinationDescription: AwsFirehoseS33
  ExtendedS3DestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsExtendedS3DestinationDescription
  RedshiftDestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsRedshiftDestinationDescription
  ElasticsearchDestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsElasticsearchDestinationDescription
  SplunkDestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsSplunkDestinationDescription
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsElasticsearchDestinationDescription {
  RoleARN: String
  DomainARN: String
  IndexName: String
  TypeName: String
  IndexRotationPeriod: String
  BufferingHints: AwsFirehoseS22
  RetryOptions: AwsFirehoseS25
  S3BackupMode: String
  S3DestinationDescription: AwsFirehoseS33
  ProcessingConfiguration: AwsFirehoseSo
  CloudWatchLoggingOptions: AwsFirehoseSj
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsExtendedS3DestinationDescription {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  ErrorOutputPrefix: String
  BufferingHints: AwsFirehoseSb!
  CompressionFormat: String!
  EncryptionConfiguration: AwsFirehoseSf!
  CloudWatchLoggingOptions: AwsFirehoseSj
  ProcessingConfiguration: AwsFirehoseSo
  S3BackupMode: String
  S3BackupDescription: AwsFirehoseS33
  DataFormatConversionConfiguration: AwsFirehoseSx
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsRedshiftDestinationDescription {
  RoleARN: String!
  ClusterJDBCURL: String!
  CopyCommand: AwsFirehoseS1o!
  Username: String!
  RetryOptions: AwsFirehoseS1u
  S3DestinationDescription: AwsFirehoseS33!
  ProcessingConfiguration: AwsFirehoseSo
  S3BackupMode: String
  S3BackupDescription: AwsFirehoseS33
  CloudWatchLoggingOptions: AwsFirehoseSj
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsSplunkDestinationDescription {
  HECEndpoint: String
  HECEndpointType: String
  HECToken: String
  HECAcknowledgmentTimeoutInSeconds: Int
  RetryOptions: AwsFirehoseS2d
  S3BackupMode: String
  S3DestinationDescription: AwsFirehoseS33
  ProcessingConfiguration: AwsFirehoseSo
  CloudWatchLoggingOptions: AwsFirehoseSj
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSource {
  KinesisStreamSourceDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSourceKinesisStreamSourceDescription
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSourceKinesisStreamSourceDescription {
  KinesisStreamARN: String
  RoleARN: String
  DeliveryStartTimestamp: Date
}

input AwsFirehoseListDeliveryStreamsInput {
  Limit: Int
  DeliveryStreamType: String
  ExclusiveStartDeliveryStreamName: String
}

type AwsFirehoseListDeliveryStreamsOutput {
  DeliveryStreamNames: [String]!
  HasMoreDeliveryStreams: Boolean!
}

input AwsFirehoseListTagsForDeliveryStreamInput {
  DeliveryStreamName: String!
  ExclusiveStartTagKey: String
  Limit: Int
}

type AwsFirehoseListTagsForDeliveryStreamOutput {
  Tags: [AwsFirehoseS2h]!
  HasMoreTags: Boolean!
}

input AwsFirehosePutRecordBatchInput {
  DeliveryStreamName: String!
  Records: [AwsFirehoseS3hInput]!
}

type AwsFirehosePutRecordBatchOutput {
  FailedPutCount: Int!
  Encrypted: Boolean
  RequestResponses: [AwsFirehosePutRecordBatchOutputRequestResponses]!
}

type AwsFirehosePutRecordBatchOutputRequestResponses {
  RecordId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsFirehosePutRecordInput {
  DeliveryStreamName: String!
  Record: AwsFirehoseS3hInput!
}

type AwsFirehosePutRecordOutput {
  RecordId: String!
  Encrypted: Boolean
}

type AwsFirehoseS1o {
  DataTableName: String!
  DataTableColumns: String
  CopyOptions: String
}

input AwsFirehoseS1oInput {
  DataTableName: String!
  DataTableColumns: String
  CopyOptions: String
}

type AwsFirehoseS1u {
  DurationInSeconds: Int
}

input AwsFirehoseS1uInput {
  DurationInSeconds: Int
}

type AwsFirehoseS22 {
  IntervalInSeconds: Int
  SizeInMBs: Int
}

input AwsFirehoseS22Input {
  IntervalInSeconds: Int
  SizeInMBs: Int
}

type AwsFirehoseS25 {
  DurationInSeconds: Int
}

input AwsFirehoseS25Input {
  DurationInSeconds: Int
}

type AwsFirehoseS2d {
  DurationInSeconds: Int
}

input AwsFirehoseS2dInput {
  DurationInSeconds: Int
}

type AwsFirehoseS2h {
  Key: String!
  Value: String
}

input AwsFirehoseS2hInput {
  Key: String!
  Value: String
}

type AwsFirehoseS33 {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  ErrorOutputPrefix: String
  BufferingHints: AwsFirehoseSb!
  CompressionFormat: String!
  EncryptionConfiguration: AwsFirehoseSf!
  CloudWatchLoggingOptions: AwsFirehoseSj
}

input AwsFirehoseS3hInput {
  Data: JSON!
}

input AwsFirehoseS42Input {
  RoleARN: String
  BucketARN: String
  Prefix: String
  ErrorOutputPrefix: String
  BufferingHints: AwsFirehoseSbInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSfInput
  CloudWatchLoggingOptions: AwsFirehoseSjInput
}

input AwsFirehoseS7Input {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  ErrorOutputPrefix: String
  BufferingHints: AwsFirehoseSbInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSfInput
  CloudWatchLoggingOptions: AwsFirehoseSjInput
}

type AwsFirehoseSb {
  SizeInMBs: Int
  IntervalInSeconds: Int
}

input AwsFirehoseSbInput {
  SizeInMBs: Int
  IntervalInSeconds: Int
}

type AwsFirehoseSf {
  NoEncryptionConfig: String
  KMSEncryptionConfig: AwsFirehoseSfKMSEncryptionConfig
}

input AwsFirehoseSfInput {
  NoEncryptionConfig: String
  KMSEncryptionConfig: AwsFirehoseSfKMSEncryptionConfigInput
}

type AwsFirehoseSfKMSEncryptionConfig {
  AWSKMSKeyARN: String!
}

input AwsFirehoseSfKMSEncryptionConfigInput {
  AWSKMSKeyARN: String!
}

type AwsFirehoseSj {
  Enabled: Boolean
  LogGroupName: String
  LogStreamName: String
}

input AwsFirehoseSjInput {
  Enabled: Boolean
  LogGroupName: String
  LogStreamName: String
}

type AwsFirehoseSo {
  Enabled: Boolean
  Processors: [AwsFirehoseSoProcessors]
}

input AwsFirehoseSoInput {
  Enabled: Boolean
  Processors: [AwsFirehoseSoProcessorsInput]
}

type AwsFirehoseSoProcessors {
  Type: String!
  Parameters: [AwsFirehoseSoProcessorsParameters]
}

input AwsFirehoseSoProcessorsInput {
  Type: String!
  Parameters: [AwsFirehoseSoProcessorsParametersInput]
}

type AwsFirehoseSoProcessorsParameters {
  ParameterName: String!
  ParameterValue: String!
}

input AwsFirehoseSoProcessorsParametersInput {
  ParameterName: String!
  ParameterValue: String!
}

input AwsFirehoseStartDeliveryStreamEncryptionInput {
  DeliveryStreamName: String!
}

input AwsFirehoseStopDeliveryStreamEncryptionInput {
  DeliveryStreamName: String!
}

type AwsFirehoseSx {
  SchemaConfiguration: AwsFirehoseSxSchemaConfiguration
  InputFormatConfiguration: AwsFirehoseSxInputFormatConfiguration
  OutputFormatConfiguration: AwsFirehoseSxOutputFormatConfiguration
  Enabled: Boolean
}

input AwsFirehoseSxInput {
  SchemaConfiguration: AwsFirehoseSxSchemaConfigurationInput
  InputFormatConfiguration: AwsFirehoseSxInputFormatConfigurationInput
  OutputFormatConfiguration: AwsFirehoseSxOutputFormatConfigurationInput
  Enabled: Boolean
}

type AwsFirehoseSxInputFormatConfiguration {
  Deserializer: AwsFirehoseSxInputFormatConfigurationDeserializer
}

type AwsFirehoseSxInputFormatConfigurationDeserializer {
  OpenXJsonSerDe: AwsFirehoseSxInputFormatConfigurationDeserializerOpenXJsonSerDe
  HiveJsonSerDe: AwsFirehoseSxInputFormatConfigurationDeserializerHiveJsonSerDe
}

type AwsFirehoseSxInputFormatConfigurationDeserializerHiveJsonSerDe {
  TimestampFormats: [String]
}

input AwsFirehoseSxInputFormatConfigurationDeserializerHiveJsonSerDeInput {
  TimestampFormats: [String]
}

input AwsFirehoseSxInputFormatConfigurationDeserializerInput {
  OpenXJsonSerDe: AwsFirehoseSxInputFormatConfigurationDeserializerOpenXJsonSerDeInput
  HiveJsonSerDe: AwsFirehoseSxInputFormatConfigurationDeserializerHiveJsonSerDeInput
}

type AwsFirehoseSxInputFormatConfigurationDeserializerOpenXJsonSerDe {
  ConvertDotsInJsonKeysToUnderscores: Boolean
  CaseInsensitive: Boolean
  ColumnToJsonKeyMappings: JSON
}

input AwsFirehoseSxInputFormatConfigurationDeserializerOpenXJsonSerDeInput {
  ConvertDotsInJsonKeysToUnderscores: Boolean
  CaseInsensitive: Boolean
  ColumnToJsonKeyMappings: JSON
}

input AwsFirehoseSxInputFormatConfigurationInput {
  Deserializer: AwsFirehoseSxInputFormatConfigurationDeserializerInput
}

type AwsFirehoseSxOutputFormatConfiguration {
  Serializer: AwsFirehoseSxOutputFormatConfigurationSerializer
}

input AwsFirehoseSxOutputFormatConfigurationInput {
  Serializer: AwsFirehoseSxOutputFormatConfigurationSerializerInput
}

type AwsFirehoseSxOutputFormatConfigurationSerializer {
  ParquetSerDe: AwsFirehoseSxOutputFormatConfigurationSerializerParquetSerDe
  OrcSerDe: AwsFirehoseSxOutputFormatConfigurationSerializerOrcSerDe
}

input AwsFirehoseSxOutputFormatConfigurationSerializerInput {
  ParquetSerDe: AwsFirehoseSxOutputFormatConfigurationSerializerParquetSerDeInput
  OrcSerDe: AwsFirehoseSxOutputFormatConfigurationSerializerOrcSerDeInput
}

type AwsFirehoseSxOutputFormatConfigurationSerializerOrcSerDe {
  StripeSizeBytes: Int
  BlockSizeBytes: Int
  RowIndexStride: Int
  EnablePadding: Boolean
  PaddingTolerance: JSON
  Compression: String
  BloomFilterColumns: [String]
  BloomFilterFalsePositiveProbability: JSON
  DictionaryKeyThreshold: JSON
  FormatVersion: String
}

input AwsFirehoseSxOutputFormatConfigurationSerializerOrcSerDeInput {
  StripeSizeBytes: Int
  BlockSizeBytes: Int
  RowIndexStride: Int
  EnablePadding: Boolean
  PaddingTolerance: JSON
  Compression: String
  BloomFilterColumns: [String]
  BloomFilterFalsePositiveProbability: JSON
  DictionaryKeyThreshold: JSON
  FormatVersion: String
}

type AwsFirehoseSxOutputFormatConfigurationSerializerParquetSerDe {
  BlockSizeBytes: Int
  PageSizeBytes: Int
  Compression: String
  EnableDictionaryCompression: Boolean
  MaxPaddingBytes: Int
  WriterVersion: String
}

input AwsFirehoseSxOutputFormatConfigurationSerializerParquetSerDeInput {
  BlockSizeBytes: Int
  PageSizeBytes: Int
  Compression: String
  EnableDictionaryCompression: Boolean
  MaxPaddingBytes: Int
  WriterVersion: String
}

type AwsFirehoseSxSchemaConfiguration {
  RoleARN: String
  CatalogId: String
  DatabaseName: String
  TableName: String
  Region: String
  VersionId: String
}

input AwsFirehoseSxSchemaConfigurationInput {
  RoleARN: String
  CatalogId: String
  DatabaseName: String
  TableName: String
  Region: String
  VersionId: String
}

input AwsFirehoseTagDeliveryStreamInput {
  DeliveryStreamName: String!
  Tags: [AwsFirehoseS2hInput]!
}

input AwsFirehoseUntagDeliveryStreamInput {
  DeliveryStreamName: String!
  TagKeys: [String]!
}

input AwsFirehoseUpdateDestinationElasticsearchDestinationUpdateInput {
  RoleARN: String
  DomainARN: String
  IndexName: String
  TypeName: String
  IndexRotationPeriod: String
  BufferingHints: AwsFirehoseS22Input
  RetryOptions: AwsFirehoseS25Input
  S3Update: AwsFirehoseS42Input
  ProcessingConfiguration: AwsFirehoseSoInput
  CloudWatchLoggingOptions: AwsFirehoseSjInput
}

input AwsFirehoseUpdateDestinationExtendedS3DestinationUpdateInput {
  RoleARN: String
  BucketARN: String
  Prefix: String
  ErrorOutputPrefix: String
  BufferingHints: AwsFirehoseSbInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSfInput
  CloudWatchLoggingOptions: AwsFirehoseSjInput
  ProcessingConfiguration: AwsFirehoseSoInput
  S3BackupMode: String
  S3BackupUpdate: AwsFirehoseS42Input
  DataFormatConversionConfiguration: AwsFirehoseSxInput
}

input AwsFirehoseUpdateDestinationInput {
  DeliveryStreamName: String!
  CurrentDeliveryStreamVersionId: String!
  DestinationId: String!
  S3DestinationUpdate: AwsFirehoseS42Input
  ExtendedS3DestinationUpdate: AwsFirehoseUpdateDestinationExtendedS3DestinationUpdateInput
  RedshiftDestinationUpdate: AwsFirehoseUpdateDestinationRedshiftDestinationUpdateInput
  ElasticsearchDestinationUpdate: AwsFirehoseUpdateDestinationElasticsearchDestinationUpdateInput
  SplunkDestinationUpdate: AwsFirehoseUpdateDestinationSplunkDestinationUpdateInput
}

input AwsFirehoseUpdateDestinationRedshiftDestinationUpdateInput {
  RoleARN: String
  ClusterJDBCURL: String
  CopyCommand: AwsFirehoseS1oInput
  Username: String
  Password: String
  RetryOptions: AwsFirehoseS1uInput
  S3Update: AwsFirehoseS42Input
  ProcessingConfiguration: AwsFirehoseSoInput
  S3BackupMode: String
  S3BackupUpdate: AwsFirehoseS42Input
  CloudWatchLoggingOptions: AwsFirehoseSjInput
}

input AwsFirehoseUpdateDestinationSplunkDestinationUpdateInput {
  HECEndpoint: String
  HECEndpointType: String
  HECToken: String
  HECAcknowledgmentTimeoutInSeconds: Int
  RetryOptions: AwsFirehoseS2dInput
  S3BackupMode: String
  S3Update: AwsFirehoseS42Input
  ProcessingConfiguration: AwsFirehoseSoInput
  CloudWatchLoggingOptions: AwsFirehoseSjInput
}

"""Firewall Management Service (2018-01-01)"""
type AwsFMS {
  associateAdminAccount(input: AwsFMSAssociateAdminAccountInput!, config: AwsConfig): JSON
  deleteNotificationChannel(input: JSON, config: AwsConfig): JSON
  deletePolicy(input: AwsFMSDeletePolicyInput!, config: AwsConfig): JSON
  disassociateAdminAccount(input: JSON, config: AwsConfig): JSON
  getAdminAccount(input: JSON, config: AwsConfig): AwsFMSGetAdminAccountOutput
  getComplianceDetail(input: AwsFMSGetComplianceDetailInput!, config: AwsConfig): AwsFMSGetComplianceDetailOutput
  getNotificationChannel(input: JSON, config: AwsConfig): AwsFMSGetNotificationChannelOutput
  getPolicy(input: AwsFMSGetPolicyInput!, config: AwsConfig): AwsFMSGetPolicyOutput
  getProtectionStatus(input: AwsFMSGetProtectionStatusInput!, config: AwsConfig): AwsFMSGetProtectionStatusOutput
  listComplianceStatus(input: AwsFMSListComplianceStatusInput!, config: AwsConfig): AwsFMSListComplianceStatusOutput
  listMemberAccounts(input: AwsFMSListMemberAccountsInput, config: AwsConfig): AwsFMSListMemberAccountsOutput
  listPolicies(input: AwsFMSListPoliciesInput, config: AwsConfig): AwsFMSListPoliciesOutput
  putNotificationChannel(input: AwsFMSPutNotificationChannelInput!, config: AwsConfig): JSON
  putPolicy(input: AwsFMSPutPolicyInput!, config: AwsConfig): AwsFMSPutPolicyOutput
}

input AwsFMSAssociateAdminAccountInput {
  AdminAccount: String!
}

input AwsFMSDeletePolicyInput {
  PolicyId: String!
  DeleteAllPolicyResources: Boolean
}

type AwsFMSGetAdminAccountOutput {
  AdminAccount: String
  RoleStatus: String
}

input AwsFMSGetComplianceDetailInput {
  PolicyId: String!
  MemberAccount: String!
}

type AwsFMSGetComplianceDetailOutput {
  PolicyComplianceDetail: AwsFMSGetComplianceDetailOutputPolicyComplianceDetail
}

type AwsFMSGetComplianceDetailOutputPolicyComplianceDetail {
  PolicyOwner: String
  PolicyId: String
  MemberAccount: String
  Violators: [AwsFMSGetComplianceDetailOutputPolicyComplianceDetailViolators]
  EvaluationLimitExceeded: Boolean
  ExpiredAt: Date
  IssueInfoMap: JSON
}

type AwsFMSGetComplianceDetailOutputPolicyComplianceDetailViolators {
  ResourceId: String
  ViolationReason: String
  ResourceType: String
}

type AwsFMSGetNotificationChannelOutput {
  SnsTopicArn: String
  SnsRoleName: String
}

input AwsFMSGetPolicyInput {
  PolicyId: String!
}

type AwsFMSGetPolicyOutput {
  Policy: AwsFMSSs
  PolicyArn: String
}

input AwsFMSGetProtectionStatusInput {
  PolicyId: String!
  MemberAccountId: String
  StartTime: Date
  EndTime: Date
  NextToken: String
  MaxResults: Int
}

type AwsFMSGetProtectionStatusOutput {
  AdminAccountId: String
  ServiceType: String
  Data: String
  NextToken: String
}

input AwsFMSListComplianceStatusInput {
  PolicyId: String!
  NextToken: String
  MaxResults: Int
}

type AwsFMSListComplianceStatusOutput {
  PolicyComplianceStatusList: [AwsFMSListComplianceStatusOutputPolicyComplianceStatusList]
  NextToken: String
}

type AwsFMSListComplianceStatusOutputPolicyComplianceStatusList {
  PolicyOwner: String
  PolicyId: String
  PolicyName: String
  MemberAccount: String
  EvaluationResults: [AwsFMSListComplianceStatusOutputPolicyComplianceStatusListEvaluationResults]
  LastUpdated: Date
  IssueInfoMap: JSON
}

type AwsFMSListComplianceStatusOutputPolicyComplianceStatusListEvaluationResults {
  ComplianceStatus: String
  ViolatorCount: JSON
  EvaluationLimitExceeded: Boolean
}

input AwsFMSListMemberAccountsInput {
  NextToken: String
  MaxResults: Int
}

type AwsFMSListMemberAccountsOutput {
  MemberAccounts: [String]
  NextToken: String
}

input AwsFMSListPoliciesInput {
  NextToken: String
  MaxResults: Int
}

type AwsFMSListPoliciesOutput {
  PolicyList: [AwsFMSListPoliciesOutputPolicyList]
  NextToken: String
}

type AwsFMSListPoliciesOutputPolicyList {
  PolicyArn: String
  PolicyId: String
  PolicyName: String
  ResourceType: String
  SecurityServiceType: String
  RemediationEnabled: Boolean
}

input AwsFMSPutNotificationChannelInput {
  SnsTopicArn: String!
  SnsRoleName: String!
}

input AwsFMSPutPolicyInput {
  Policy: AwsFMSSsInput!
}

type AwsFMSPutPolicyOutput {
  Policy: AwsFMSSs
  PolicyArn: String
}

type AwsFMSSs {
  PolicyId: String
  PolicyName: String!
  PolicyUpdateToken: String
  SecurityServicePolicyData: AwsFMSSsSecurityServicePolicyData!
  ResourceType: String!
  ResourceTypeList: [String]
  ResourceTags: [AwsFMSSsResourceTags]
  ExcludeResourceTags: Boolean!
  RemediationEnabled: Boolean!
  IncludeMap: JSON
  ExcludeMap: JSON
}

input AwsFMSSsInput {
  PolicyId: String
  PolicyName: String!
  PolicyUpdateToken: String
  SecurityServicePolicyData: AwsFMSSsSecurityServicePolicyDataInput!
  ResourceType: String!
  ResourceTypeList: [String]
  ResourceTags: [AwsFMSSsResourceTagsInput]
  ExcludeResourceTags: Boolean!
  RemediationEnabled: Boolean!
  IncludeMap: JSON
  ExcludeMap: JSON
}

type AwsFMSSsResourceTags {
  Key: String!
  Value: String
}

input AwsFMSSsResourceTagsInput {
  Key: String!
  Value: String
}

type AwsFMSSsSecurityServicePolicyData {
  Type: String!
  ManagedServiceData: String
}

input AwsFMSSsSecurityServicePolicyDataInput {
  Type: String!
  ManagedServiceData: String
}

"""Amazon FSx (2018-03-01)"""
type AwsFSx {
  createBackup(input: AwsFSxCreateBackupInput!, config: AwsConfig): AwsFSxCreateBackupOutput
  createFileSystem(input: AwsFSxCreateFileSystemInput!, config: AwsConfig): AwsFSxCreateFileSystemOutput
  createFileSystemFromBackup(input: AwsFSxCreateFileSystemFromBackupInput!, config: AwsConfig): AwsFSxCreateFileSystemFromBackupOutput
  deleteBackup(input: AwsFSxDeleteBackupInput!, config: AwsConfig): AwsFSxDeleteBackupOutput
  deleteFileSystem(input: AwsFSxDeleteFileSystemInput!, config: AwsConfig): AwsFSxDeleteFileSystemOutput
  describeBackups(input: AwsFSxDescribeBackupsInput, config: AwsConfig): AwsFSxDescribeBackupsOutput
  describeFileSystems(input: AwsFSxDescribeFileSystemsInput, config: AwsConfig): AwsFSxDescribeFileSystemsOutput
  listTagsForResource(input: AwsFSxListTagsForResourceInput!, config: AwsConfig): AwsFSxListTagsForResourceOutput
  tagResource(input: AwsFSxTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsFSxUntagResourceInput!, config: AwsConfig): JSON
  updateFileSystem(input: AwsFSxUpdateFileSystemInput!, config: AwsConfig): AwsFSxUpdateFileSystemOutput
}

input AwsFSxCreateBackupInput {
  FileSystemId: String!
  ClientRequestToken: String
  Tags: [AwsFSxS4Input]
}

type AwsFSxCreateBackupOutput {
  Backup: AwsFSxS9
}

input AwsFSxCreateFileSystemFromBackupInput {
  BackupId: String!
  ClientRequestToken: String
  SubnetIds: [String]!
  SecurityGroupIds: [String]
  Tags: [AwsFSxS4Input]
  WindowsConfiguration: AwsFSxS1jInput
}

type AwsFSxCreateFileSystemFromBackupOutput {
  FileSystem: AwsFSxSj
}

input AwsFSxCreateFileSystemInput {
  ClientRequestToken: String
  FileSystemType: String!
  StorageCapacity: Int!
  SubnetIds: [String]!
  SecurityGroupIds: [String]
  Tags: [AwsFSxS4Input]
  KmsKeyId: String
  WindowsConfiguration: AwsFSxS1jInput
  LustreConfiguration: AwsFSxCreateFileSystemLustreConfigurationInput
}

input AwsFSxCreateFileSystemLustreConfigurationInput {
  WeeklyMaintenanceStartTime: String
  ImportPath: String
  ExportPath: String
  ImportedFileChunkSize: Int
}

type AwsFSxCreateFileSystemOutput {
  FileSystem: AwsFSxSj
}

input AwsFSxDeleteBackupInput {
  BackupId: String!
  ClientRequestToken: String
}

type AwsFSxDeleteBackupOutput {
  BackupId: String
  Lifecycle: String
}

input AwsFSxDeleteFileSystemInput {
  FileSystemId: String!
  ClientRequestToken: String
  WindowsConfiguration: AwsFSxDeleteFileSystemWindowsConfigurationInput
}

type AwsFSxDeleteFileSystemOutput {
  FileSystemId: String
  Lifecycle: String
  WindowsResponse: AwsFSxDeleteFileSystemOutputWindowsResponse
}

type AwsFSxDeleteFileSystemOutputWindowsResponse {
  FinalBackupId: String
  FinalBackupTags: [AwsFSxS4]
}

input AwsFSxDeleteFileSystemWindowsConfigurationInput {
  SkipFinalBackup: Boolean
  FinalBackupTags: [AwsFSxS4Input]
}

input AwsFSxDescribeBackupsFiltersInput {
  Name: String
  Values: [String]
}

input AwsFSxDescribeBackupsInput {
  BackupIds: [String]
  Filters: [AwsFSxDescribeBackupsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsFSxDescribeBackupsOutput {
  Backups: [AwsFSxS9]
  NextToken: String
}

input AwsFSxDescribeFileSystemsInput {
  FileSystemIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsFSxDescribeFileSystemsOutput {
  FileSystems: [AwsFSxSj]
  NextToken: String
}

input AwsFSxListTagsForResourceInput {
  ResourceARN: String!
  MaxResults: Int
  NextToken: String
}

type AwsFSxListTagsForResourceOutput {
  Tags: [AwsFSxS4]
  NextToken: String
}

input AwsFSxS1jInput {
  ActiveDirectoryId: String
  SelfManagedActiveDirectoryConfiguration: AwsFSxS1jSelfManagedActiveDirectoryConfigurationInput
  ThroughputCapacity: Int!
  WeeklyMaintenanceStartTime: String
  DailyAutomaticBackupStartTime: String
  AutomaticBackupRetentionDays: Int
  CopyTagsToBackups: Boolean
}

input AwsFSxS1jSelfManagedActiveDirectoryConfigurationInput {
  DomainName: String!
  OrganizationalUnitDistinguishedName: String
  FileSystemAdministratorsGroup: String
  UserName: String!
  Password: String!
  DnsIps: [String]!
}

type AwsFSxS4 {
  Key: String
  Value: String
}

input AwsFSxS4Input {
  Key: String
  Value: String
}

type AwsFSxS9 {
  BackupId: String!
  Lifecycle: String!
  FailureDetails: AwsFSxS9FailureDetails
  Type: String!
  ProgressPercent: Int
  CreationTime: Date!
  KmsKeyId: String
  ResourceARN: String
  Tags: [AwsFSxS4]
  FileSystem: AwsFSxSj!
  DirectoryInformation: AwsFSxS9DirectoryInformation
}

type AwsFSxS9DirectoryInformation {
  DomainName: String
  ActiveDirectoryId: String
}

type AwsFSxS9FailureDetails {
  Message: String
}

type AwsFSxSj {
  OwnerId: String
  CreationTime: Date
  FileSystemId: String
  FileSystemType: String
  Lifecycle: String
  FailureDetails: AwsFSxSjFailureDetails
  StorageCapacity: Int
  VpcId: String
  SubnetIds: [String]
  NetworkInterfaceIds: [String]
  DNSName: String
  KmsKeyId: String
  ResourceARN: String
  Tags: [AwsFSxS4]
  WindowsConfiguration: AwsFSxSjWindowsConfiguration
  LustreConfiguration: AwsFSxSjLustreConfiguration
}

type AwsFSxSjFailureDetails {
  Message: String
}

type AwsFSxSjLustreConfiguration {
  WeeklyMaintenanceStartTime: String
  DataRepositoryConfiguration: AwsFSxSjLustreConfigurationDataRepositoryConfiguration
}

type AwsFSxSjLustreConfigurationDataRepositoryConfiguration {
  ImportPath: String
  ExportPath: String
  ImportedFileChunkSize: Int
}

type AwsFSxSjWindowsConfiguration {
  ActiveDirectoryId: String
  SelfManagedActiveDirectoryConfiguration: AwsFSxSjWindowsConfigurationSelfManagedActiveDirectoryConfiguration
  ThroughputCapacity: Int
  MaintenanceOperationsInProgress: [String]
  WeeklyMaintenanceStartTime: String
  DailyAutomaticBackupStartTime: String
  AutomaticBackupRetentionDays: Int
  CopyTagsToBackups: Boolean
}

type AwsFSxSjWindowsConfigurationSelfManagedActiveDirectoryConfiguration {
  DomainName: String
  OrganizationalUnitDistinguishedName: String
  FileSystemAdministratorsGroup: String
  UserName: String
  DnsIps: [String]
}

input AwsFSxTagResourceInput {
  ResourceARN: String!
  Tags: [AwsFSxS4Input]!
}

input AwsFSxUntagResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

input AwsFSxUpdateFileSystemInput {
  FileSystemId: String!
  ClientRequestToken: String
  WindowsConfiguration: AwsFSxUpdateFileSystemWindowsConfigurationInput
  LustreConfiguration: AwsFSxUpdateFileSystemLustreConfigurationInput
}

input AwsFSxUpdateFileSystemLustreConfigurationInput {
  WeeklyMaintenanceStartTime: String
}

type AwsFSxUpdateFileSystemOutput {
  FileSystem: AwsFSxSj
}

input AwsFSxUpdateFileSystemWindowsConfigurationInput {
  WeeklyMaintenanceStartTime: String
  DailyAutomaticBackupStartTime: String
  AutomaticBackupRetentionDays: Int
  SelfManagedActiveDirectoryConfiguration: AwsFSxUpdateFileSystemWindowsConfigurationSelfManagedActiveDirectoryConfigurationInput
}

input AwsFSxUpdateFileSystemWindowsConfigurationSelfManagedActiveDirectoryConfigurationInput {
  UserName: String
  Password: String
  DnsIps: [String]
}

"""Amazon GameLift (2015-10-01)"""
type AwsGameLift {
  acceptMatch(input: AwsGameLiftAcceptMatchInput!, config: AwsConfig): JSON
  createAlias(input: AwsGameLiftCreateAliasInput!, config: AwsConfig): AwsGameLiftCreateAliasOutput
  createBuild(input: AwsGameLiftCreateBuildInput, config: AwsConfig): AwsGameLiftCreateBuildOutput
  createFleet(input: AwsGameLiftCreateFleetInput!, config: AwsConfig): AwsGameLiftCreateFleetOutput
  createGameSession(input: AwsGameLiftCreateGameSessionInput!, config: AwsConfig): AwsGameLiftCreateGameSessionOutput
  createGameSessionQueue(input: AwsGameLiftCreateGameSessionQueueInput!, config: AwsConfig): AwsGameLiftCreateGameSessionQueueOutput
  createMatchmakingConfiguration(input: AwsGameLiftCreateMatchmakingConfigurationInput!, config: AwsConfig): AwsGameLiftCreateMatchmakingConfigurationOutput
  createMatchmakingRuleSet(input: AwsGameLiftCreateMatchmakingRuleSetInput!, config: AwsConfig): AwsGameLiftCreateMatchmakingRuleSetOutput
  createPlayerSession(input: AwsGameLiftCreatePlayerSessionInput!, config: AwsConfig): AwsGameLiftCreatePlayerSessionOutput
  createPlayerSessions(input: AwsGameLiftCreatePlayerSessionsInput!, config: AwsConfig): AwsGameLiftCreatePlayerSessionsOutput
  createScript(input: AwsGameLiftCreateScriptInput, config: AwsConfig): AwsGameLiftCreateScriptOutput
  createVpcPeeringAuthorization(input: AwsGameLiftCreateVpcPeeringAuthorizationInput!, config: AwsConfig): AwsGameLiftCreateVpcPeeringAuthorizationOutput
  createVpcPeeringConnection(input: AwsGameLiftCreateVpcPeeringConnectionInput!, config: AwsConfig): JSON
  deleteAlias(input: AwsGameLiftDeleteAliasInput!, config: AwsConfig): JSON
  deleteBuild(input: AwsGameLiftDeleteBuildInput!, config: AwsConfig): JSON
  deleteFleet(input: AwsGameLiftDeleteFleetInput!, config: AwsConfig): JSON
  deleteGameSessionQueue(input: AwsGameLiftDeleteGameSessionQueueInput!, config: AwsConfig): JSON
  deleteMatchmakingConfiguration(input: AwsGameLiftDeleteMatchmakingConfigurationInput!, config: AwsConfig): JSON
  deleteMatchmakingRuleSet(input: AwsGameLiftDeleteMatchmakingRuleSetInput!, config: AwsConfig): JSON
  deleteScalingPolicy(input: AwsGameLiftDeleteScalingPolicyInput!, config: AwsConfig): JSON
  deleteScript(input: AwsGameLiftDeleteScriptInput!, config: AwsConfig): JSON
  deleteVpcPeeringAuthorization(input: AwsGameLiftDeleteVpcPeeringAuthorizationInput!, config: AwsConfig): JSON
  deleteVpcPeeringConnection(input: AwsGameLiftDeleteVpcPeeringConnectionInput!, config: AwsConfig): JSON
  describeAlias(input: AwsGameLiftDescribeAliasInput!, config: AwsConfig): AwsGameLiftDescribeAliasOutput
  describeBuild(input: AwsGameLiftDescribeBuildInput!, config: AwsConfig): AwsGameLiftDescribeBuildOutput
  describeEC2InstanceLimits(input: AwsGameLiftDescribeEC2InstanceLimitsInput, config: AwsConfig): AwsGameLiftDescribeEC2InstanceLimitsOutput
  describeFleetAttributes(input: AwsGameLiftDescribeFleetAttributesInput, config: AwsConfig): AwsGameLiftDescribeFleetAttributesOutput
  describeFleetCapacity(input: AwsGameLiftDescribeFleetCapacityInput, config: AwsConfig): AwsGameLiftDescribeFleetCapacityOutput
  describeFleetEvents(input: AwsGameLiftDescribeFleetEventsInput!, config: AwsConfig): AwsGameLiftDescribeFleetEventsOutput
  describeFleetPortSettings(input: AwsGameLiftDescribeFleetPortSettingsInput!, config: AwsConfig): AwsGameLiftDescribeFleetPortSettingsOutput
  describeFleetUtilization(input: AwsGameLiftDescribeFleetUtilizationInput, config: AwsConfig): AwsGameLiftDescribeFleetUtilizationOutput
  describeGameSessionDetails(input: AwsGameLiftDescribeGameSessionDetailsInput, config: AwsConfig): AwsGameLiftDescribeGameSessionDetailsOutput
  describeGameSessionPlacement(input: AwsGameLiftDescribeGameSessionPlacementInput!, config: AwsConfig): AwsGameLiftDescribeGameSessionPlacementOutput
  describeGameSessionQueues(input: AwsGameLiftDescribeGameSessionQueuesInput, config: AwsConfig): AwsGameLiftDescribeGameSessionQueuesOutput
  describeGameSessions(input: AwsGameLiftDescribeGameSessionsInput, config: AwsConfig): AwsGameLiftDescribeGameSessionsOutput
  describeInstances(input: AwsGameLiftDescribeInstancesInput!, config: AwsConfig): AwsGameLiftDescribeInstancesOutput
  describeMatchmaking(input: AwsGameLiftDescribeMatchmakingInput!, config: AwsConfig): AwsGameLiftDescribeMatchmakingOutput
  describeMatchmakingConfigurations(input: AwsGameLiftDescribeMatchmakingConfigurationsInput, config: AwsConfig): AwsGameLiftDescribeMatchmakingConfigurationsOutput
  describeMatchmakingRuleSets(input: AwsGameLiftDescribeMatchmakingRuleSetsInput, config: AwsConfig): AwsGameLiftDescribeMatchmakingRuleSetsOutput
  describePlayerSessions(input: AwsGameLiftDescribePlayerSessionsInput, config: AwsConfig): AwsGameLiftDescribePlayerSessionsOutput
  describeRuntimeConfiguration(input: AwsGameLiftDescribeRuntimeConfigurationInput!, config: AwsConfig): AwsGameLiftDescribeRuntimeConfigurationOutput
  describeScalingPolicies(input: AwsGameLiftDescribeScalingPoliciesInput!, config: AwsConfig): AwsGameLiftDescribeScalingPoliciesOutput
  describeScript(input: AwsGameLiftDescribeScriptInput!, config: AwsConfig): AwsGameLiftDescribeScriptOutput
  describeVpcPeeringAuthorizations(input: JSON, config: AwsConfig): AwsGameLiftDescribeVpcPeeringAuthorizationsOutput
  describeVpcPeeringConnections(input: AwsGameLiftDescribeVpcPeeringConnectionsInput, config: AwsConfig): AwsGameLiftDescribeVpcPeeringConnectionsOutput
  getGameSessionLogUrl(input: AwsGameLiftGetGameSessionLogUrlInput!, config: AwsConfig): AwsGameLiftGetGameSessionLogUrlOutput
  getInstanceAccess(input: AwsGameLiftGetInstanceAccessInput!, config: AwsConfig): AwsGameLiftGetInstanceAccessOutput
  listAliases(input: AwsGameLiftListAliasesInput, config: AwsConfig): AwsGameLiftListAliasesOutput
  listBuilds(input: AwsGameLiftListBuildsInput, config: AwsConfig): AwsGameLiftListBuildsOutput
  listFleets(input: AwsGameLiftListFleetsInput, config: AwsConfig): AwsGameLiftListFleetsOutput
  listScripts(input: AwsGameLiftListScriptsInput, config: AwsConfig): AwsGameLiftListScriptsOutput
  putScalingPolicy(input: AwsGameLiftPutScalingPolicyInput!, config: AwsConfig): AwsGameLiftPutScalingPolicyOutput
  requestUploadCredentials(input: AwsGameLiftRequestUploadCredentialsInput!, config: AwsConfig): AwsGameLiftRequestUploadCredentialsOutput
  resolveAlias(input: AwsGameLiftResolveAliasInput!, config: AwsConfig): AwsGameLiftResolveAliasOutput
  searchGameSessions(input: AwsGameLiftSearchGameSessionsInput, config: AwsConfig): AwsGameLiftSearchGameSessionsOutput
  startFleetActions(input: AwsGameLiftStartFleetActionsInput!, config: AwsConfig): JSON
  startGameSessionPlacement(input: AwsGameLiftStartGameSessionPlacementInput!, config: AwsConfig): AwsGameLiftStartGameSessionPlacementOutput
  startMatchBackfill(input: AwsGameLiftStartMatchBackfillInput!, config: AwsConfig): AwsGameLiftStartMatchBackfillOutput
  startMatchmaking(input: AwsGameLiftStartMatchmakingInput!, config: AwsConfig): AwsGameLiftStartMatchmakingOutput
  stopFleetActions(input: AwsGameLiftStopFleetActionsInput!, config: AwsConfig): JSON
  stopGameSessionPlacement(input: AwsGameLiftStopGameSessionPlacementInput!, config: AwsConfig): AwsGameLiftStopGameSessionPlacementOutput
  stopMatchmaking(input: AwsGameLiftStopMatchmakingInput!, config: AwsConfig): JSON
  updateAlias(input: AwsGameLiftUpdateAliasInput!, config: AwsConfig): AwsGameLiftUpdateAliasOutput
  updateBuild(input: AwsGameLiftUpdateBuildInput!, config: AwsConfig): AwsGameLiftUpdateBuildOutput
  updateFleetAttributes(input: AwsGameLiftUpdateFleetAttributesInput!, config: AwsConfig): AwsGameLiftUpdateFleetAttributesOutput
  updateFleetCapacity(input: AwsGameLiftUpdateFleetCapacityInput!, config: AwsConfig): AwsGameLiftUpdateFleetCapacityOutput
  updateFleetPortSettings(input: AwsGameLiftUpdateFleetPortSettingsInput!, config: AwsConfig): AwsGameLiftUpdateFleetPortSettingsOutput
  updateGameSession(input: AwsGameLiftUpdateGameSessionInput!, config: AwsConfig): AwsGameLiftUpdateGameSessionOutput
  updateGameSessionQueue(input: AwsGameLiftUpdateGameSessionQueueInput!, config: AwsConfig): AwsGameLiftUpdateGameSessionQueueOutput
  updateMatchmakingConfiguration(input: AwsGameLiftUpdateMatchmakingConfigurationInput!, config: AwsConfig): AwsGameLiftUpdateMatchmakingConfigurationOutput
  updateRuntimeConfiguration(input: AwsGameLiftUpdateRuntimeConfigurationInput!, config: AwsConfig): AwsGameLiftUpdateRuntimeConfigurationOutput
  updateScript(input: AwsGameLiftUpdateScriptInput!, config: AwsConfig): AwsGameLiftUpdateScriptOutput
  validateMatchmakingRuleSet(input: AwsGameLiftValidateMatchmakingRuleSetInput!, config: AwsConfig): AwsGameLiftValidateMatchmakingRuleSetOutput
}

input AwsGameLiftAcceptMatchInput {
  TicketId: String!
  PlayerIds: [String]!
  AcceptanceType: String!
}

input AwsGameLiftCreateAliasInput {
  Name: String!
  Description: String
  RoutingStrategy: AwsGameLiftS9Input!
}

type AwsGameLiftCreateAliasOutput {
  Alias: AwsGameLiftSe
}

input AwsGameLiftCreateBuildInput {
  Name: String
  Version: String
  StorageLocation: AwsGameLiftSjInput
  OperatingSystem: String
}

type AwsGameLiftCreateBuildOutput {
  Build: AwsGameLiftSn
  UploadCredentials: AwsGameLiftSr
  StorageLocation: AwsGameLiftSj
}

input AwsGameLiftCreateFleetInput {
  Name: String!
  Description: String
  BuildId: String
  ScriptId: String
  ServerLaunchPath: String
  ServerLaunchParameters: String
  LogPaths: [String]
  EC2InstanceType: String!
  EC2InboundPermissions: [AwsGameLiftSvInput]
  NewGameSessionProtectionPolicy: String
  RuntimeConfiguration: AwsGameLiftS11Input
  ResourceCreationLimitPolicy: AwsGameLiftS17Input
  MetricGroups: [String]
  PeerVpcAwsAccountId: String
  PeerVpcId: String
  FleetType: String
  InstanceRoleArn: String
}

type AwsGameLiftCreateFleetOutput {
  FleetAttributes: AwsGameLiftS1d
}

input AwsGameLiftCreateGameSessionInput {
  FleetId: String
  AliasId: String
  MaximumPlayerSessionCount: Int!
  Name: String
  GameProperties: [AwsGameLiftS1iInput]
  CreatorId: String
  GameSessionId: String
  IdempotencyToken: String
  GameSessionData: String
}

type AwsGameLiftCreateGameSessionOutput {
  GameSession: AwsGameLiftS1p
}

input AwsGameLiftCreateGameSessionQueueInput {
  Name: String!
  TimeoutInSeconds: Int
  PlayerLatencyPolicies: [AwsGameLiftS1xInput]
  Destinations: [AwsGameLiftS1zInput]
}

type AwsGameLiftCreateGameSessionQueueOutput {
  GameSessionQueue: AwsGameLiftS22
}

input AwsGameLiftCreateMatchmakingConfigurationInput {
  Name: String!
  Description: String
  GameSessionQueueArns: [String]!
  RequestTimeoutSeconds: Int!
  AcceptanceTimeoutSeconds: Int
  AcceptanceRequired: Boolean!
  RuleSetName: String!
  NotificationTarget: String
  AdditionalPlayerCount: Int
  CustomEventData: String
  GameProperties: [AwsGameLiftS1iInput]
  GameSessionData: String
  BackfillMode: String
}

type AwsGameLiftCreateMatchmakingConfigurationOutput {
  Configuration: AwsGameLiftS2c
}

input AwsGameLiftCreateMatchmakingRuleSetInput {
  Name: String!
  RuleSetBody: String!
}

type AwsGameLiftCreateMatchmakingRuleSetOutput {
  RuleSet: AwsGameLiftS2g!
}

input AwsGameLiftCreatePlayerSessionInput {
  GameSessionId: String!
  PlayerId: String!
  PlayerData: String
}

type AwsGameLiftCreatePlayerSessionOutput {
  PlayerSession: AwsGameLiftS2k
}

input AwsGameLiftCreatePlayerSessionsInput {
  GameSessionId: String!
  PlayerIds: [String]!
  PlayerDataMap: JSON
}

type AwsGameLiftCreatePlayerSessionsOutput {
  PlayerSessions: [AwsGameLiftS2k]
}

input AwsGameLiftCreateScriptInput {
  Name: String
  Version: String
  StorageLocation: AwsGameLiftSjInput
  ZipFile: JSON
}

type AwsGameLiftCreateScriptOutput {
  Script: AwsGameLiftS2v
}

input AwsGameLiftCreateVpcPeeringAuthorizationInput {
  GameLiftAwsAccountId: String!
  PeerVpcId: String!
}

type AwsGameLiftCreateVpcPeeringAuthorizationOutput {
  VpcPeeringAuthorization: AwsGameLiftS2y
}

input AwsGameLiftCreateVpcPeeringConnectionInput {
  FleetId: String!
  PeerVpcAwsAccountId: String!
  PeerVpcId: String!
}

input AwsGameLiftDeleteAliasInput {
  AliasId: String!
}

input AwsGameLiftDeleteBuildInput {
  BuildId: String!
}

input AwsGameLiftDeleteFleetInput {
  FleetId: String!
}

input AwsGameLiftDeleteGameSessionQueueInput {
  Name: String!
}

input AwsGameLiftDeleteMatchmakingConfigurationInput {
  Name: String!
}

input AwsGameLiftDeleteMatchmakingRuleSetInput {
  Name: String!
}

input AwsGameLiftDeleteScalingPolicyInput {
  Name: String!
  FleetId: String!
}

input AwsGameLiftDeleteScriptInput {
  ScriptId: String!
}

input AwsGameLiftDeleteVpcPeeringAuthorizationInput {
  GameLiftAwsAccountId: String!
  PeerVpcId: String!
}

input AwsGameLiftDeleteVpcPeeringConnectionInput {
  FleetId: String!
  VpcPeeringConnectionId: String!
}

input AwsGameLiftDescribeAliasInput {
  AliasId: String!
}

type AwsGameLiftDescribeAliasOutput {
  Alias: AwsGameLiftSe
}

input AwsGameLiftDescribeBuildInput {
  BuildId: String!
}

type AwsGameLiftDescribeBuildOutput {
  Build: AwsGameLiftSn
}

input AwsGameLiftDescribeEC2InstanceLimitsInput {
  EC2InstanceType: String
}

type AwsGameLiftDescribeEC2InstanceLimitsOutput {
  EC2InstanceLimits: [AwsGameLiftDescribeEC2InstanceLimitsOutputEC2InstanceLimits]
}

type AwsGameLiftDescribeEC2InstanceLimitsOutputEC2InstanceLimits {
  EC2InstanceType: String
  CurrentInstances: Int
  InstanceLimit: Int
}

input AwsGameLiftDescribeFleetAttributesInput {
  FleetIds: [String]
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeFleetAttributesOutput {
  FleetAttributes: [AwsGameLiftS1d]
  NextToken: String
}

input AwsGameLiftDescribeFleetCapacityInput {
  FleetIds: [String]
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeFleetCapacityOutput {
  FleetCapacity: [AwsGameLiftDescribeFleetCapacityOutputFleetCapacity]
  NextToken: String
}

type AwsGameLiftDescribeFleetCapacityOutputFleetCapacity {
  FleetId: String
  InstanceType: String
  InstanceCounts: AwsGameLiftDescribeFleetCapacityOutputFleetCapacityInstanceCounts
}

type AwsGameLiftDescribeFleetCapacityOutputFleetCapacityInstanceCounts {
  DESIRED: Int
  MINIMUM: Int
  MAXIMUM: Int
  PENDING: Int
  ACTIVE: Int
  IDLE: Int
  TERMINATING: Int
}

input AwsGameLiftDescribeFleetEventsInput {
  FleetId: String!
  StartTime: Date
  EndTime: Date
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeFleetEventsOutput {
  Events: [AwsGameLiftDescribeFleetEventsOutputEvents]
  NextToken: String
}

type AwsGameLiftDescribeFleetEventsOutputEvents {
  EventId: String
  ResourceId: String
  EventCode: String
  Message: String
  EventTime: Date
  PreSignedLogUrl: String
}

input AwsGameLiftDescribeFleetPortSettingsInput {
  FleetId: String!
}

type AwsGameLiftDescribeFleetPortSettingsOutput {
  InboundPermissions: [AwsGameLiftSv]
}

input AwsGameLiftDescribeFleetUtilizationInput {
  FleetIds: [String]
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeFleetUtilizationOutput {
  FleetUtilization: [AwsGameLiftDescribeFleetUtilizationOutputFleetUtilization]
  NextToken: String
}

type AwsGameLiftDescribeFleetUtilizationOutputFleetUtilization {
  FleetId: String
  ActiveServerProcessCount: Int
  ActiveGameSessionCount: Int
  CurrentPlayerSessionCount: Int
  MaximumPlayerSessionCount: Int
}

input AwsGameLiftDescribeGameSessionDetailsInput {
  FleetId: String
  GameSessionId: String
  AliasId: String
  StatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeGameSessionDetailsOutput {
  GameSessionDetails: [AwsGameLiftDescribeGameSessionDetailsOutputGameSessionDetails]
  NextToken: String
}

type AwsGameLiftDescribeGameSessionDetailsOutputGameSessionDetails {
  GameSession: AwsGameLiftS1p
  ProtectionPolicy: String
}

input AwsGameLiftDescribeGameSessionPlacementInput {
  PlacementId: String!
}

type AwsGameLiftDescribeGameSessionPlacementOutput {
  GameSessionPlacement: AwsGameLiftS4e
}

input AwsGameLiftDescribeGameSessionQueuesInput {
  Names: [String]
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeGameSessionQueuesOutput {
  GameSessionQueues: [AwsGameLiftS22]
  NextToken: String
}

input AwsGameLiftDescribeGameSessionsInput {
  FleetId: String
  GameSessionId: String
  AliasId: String
  StatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeGameSessionsOutput {
  GameSessions: [AwsGameLiftS1p]
  NextToken: String
}

input AwsGameLiftDescribeInstancesInput {
  FleetId: String!
  InstanceId: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeInstancesOutput {
  Instances: [AwsGameLiftDescribeInstancesOutputInstances]
  NextToken: String
}

type AwsGameLiftDescribeInstancesOutputInstances {
  FleetId: String
  InstanceId: String
  IpAddress: String
  OperatingSystem: String
  Type: String
  Status: String
  CreationTime: Date
}

input AwsGameLiftDescribeMatchmakingConfigurationsInput {
  Names: [String]
  RuleSetName: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeMatchmakingConfigurationsOutput {
  Configurations: [AwsGameLiftS2c]
  NextToken: String
}

input AwsGameLiftDescribeMatchmakingInput {
  TicketIds: [String]!
}

type AwsGameLiftDescribeMatchmakingOutput {
  TicketList: [AwsGameLiftS52]
}

input AwsGameLiftDescribeMatchmakingRuleSetsInput {
  Names: [String]
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeMatchmakingRuleSetsOutput {
  RuleSets: [AwsGameLiftS2g]!
  NextToken: String
}

input AwsGameLiftDescribePlayerSessionsInput {
  GameSessionId: String
  PlayerId: String
  PlayerSessionId: String
  PlayerSessionStatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribePlayerSessionsOutput {
  PlayerSessions: [AwsGameLiftS2k]
  NextToken: String
}

input AwsGameLiftDescribeRuntimeConfigurationInput {
  FleetId: String!
}

type AwsGameLiftDescribeRuntimeConfigurationOutput {
  RuntimeConfiguration: AwsGameLiftS11
}

input AwsGameLiftDescribeScalingPoliciesInput {
  FleetId: String!
  StatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeScalingPoliciesOutput {
  ScalingPolicies: [AwsGameLiftDescribeScalingPoliciesOutputScalingPolicies]
  NextToken: String
}

type AwsGameLiftDescribeScalingPoliciesOutputScalingPolicies {
  FleetId: String
  Name: String
  Status: String
  ScalingAdjustment: Int
  ScalingAdjustmentType: String
  ComparisonOperator: String
  Threshold: JSON
  EvaluationPeriods: Int
  MetricName: String
  PolicyType: String
  TargetConfiguration: AwsGameLiftS62
}

input AwsGameLiftDescribeScriptInput {
  ScriptId: String!
}

type AwsGameLiftDescribeScriptOutput {
  Script: AwsGameLiftS2v
}

type AwsGameLiftDescribeVpcPeeringAuthorizationsOutput {
  VpcPeeringAuthorizations: [AwsGameLiftS2y]
}

input AwsGameLiftDescribeVpcPeeringConnectionsInput {
  FleetId: String
}

type AwsGameLiftDescribeVpcPeeringConnectionsOutput {
  VpcPeeringConnections: [AwsGameLiftDescribeVpcPeeringConnectionsOutputVpcPeeringConnections]
}

type AwsGameLiftDescribeVpcPeeringConnectionsOutputVpcPeeringConnections {
  FleetId: String
  IpV4CidrBlock: String
  VpcPeeringConnectionId: String
  Status: AwsGameLiftDescribeVpcPeeringConnectionsOutputVpcPeeringConnectionsStatus
  PeerVpcId: String
  GameLiftVpcId: String
}

type AwsGameLiftDescribeVpcPeeringConnectionsOutputVpcPeeringConnectionsStatus {
  Code: String
  Message: String
}

input AwsGameLiftGetGameSessionLogUrlInput {
  GameSessionId: String!
}

type AwsGameLiftGetGameSessionLogUrlOutput {
  PreSignedUrl: String
}

input AwsGameLiftGetInstanceAccessInput {
  FleetId: String!
  InstanceId: String!
}

type AwsGameLiftGetInstanceAccessOutput {
  InstanceAccess: AwsGameLiftGetInstanceAccessOutputInstanceAccess
}

type AwsGameLiftGetInstanceAccessOutputInstanceAccess {
  FleetId: String
  InstanceId: String
  IpAddress: String
  OperatingSystem: String
  Credentials: AwsGameLiftGetInstanceAccessOutputInstanceAccessCredentials
}

type AwsGameLiftGetInstanceAccessOutputInstanceAccessCredentials {
  UserName: String
  Secret: String
}

input AwsGameLiftListAliasesInput {
  RoutingStrategyType: String
  Name: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftListAliasesOutput {
  Aliases: [AwsGameLiftSe]
  NextToken: String
}

input AwsGameLiftListBuildsInput {
  Status: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftListBuildsOutput {
  Builds: [AwsGameLiftSn]
  NextToken: String
}

input AwsGameLiftListFleetsInput {
  BuildId: String
  ScriptId: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftListFleetsOutput {
  FleetIds: [String]
  NextToken: String
}

input AwsGameLiftListScriptsInput {
  Limit: Int
  NextToken: String
}

type AwsGameLiftListScriptsOutput {
  Scripts: [AwsGameLiftS2v]
  NextToken: String
}

input AwsGameLiftPutScalingPolicyInput {
  Name: String!
  FleetId: String!
  ScalingAdjustment: Int
  ScalingAdjustmentType: String
  Threshold: JSON
  ComparisonOperator: String
  EvaluationPeriods: Int
  MetricName: String!
  PolicyType: String
  TargetConfiguration: AwsGameLiftS62Input
}

type AwsGameLiftPutScalingPolicyOutput {
  Name: String
}

input AwsGameLiftRequestUploadCredentialsInput {
  BuildId: String!
}

type AwsGameLiftRequestUploadCredentialsOutput {
  UploadCredentials: AwsGameLiftSr
  StorageLocation: AwsGameLiftSj
}

input AwsGameLiftResolveAliasInput {
  AliasId: String!
}

type AwsGameLiftResolveAliasOutput {
  FleetId: String
}

type AwsGameLiftS11 {
  ServerProcesses: [AwsGameLiftS11ServerProcesses]
  MaxConcurrentGameSessionActivations: Int
  GameSessionActivationTimeoutSeconds: Int
}

input AwsGameLiftS11Input {
  ServerProcesses: [AwsGameLiftS11ServerProcessesInput]
  MaxConcurrentGameSessionActivations: Int
  GameSessionActivationTimeoutSeconds: Int
}

type AwsGameLiftS11ServerProcesses {
  LaunchPath: String!
  Parameters: String
  ConcurrentExecutions: Int!
}

input AwsGameLiftS11ServerProcessesInput {
  LaunchPath: String!
  Parameters: String
  ConcurrentExecutions: Int!
}

type AwsGameLiftS17 {
  NewGameSessionsPerCreator: Int
  PolicyPeriodInMinutes: Int
}

input AwsGameLiftS17Input {
  NewGameSessionsPerCreator: Int
  PolicyPeriodInMinutes: Int
}

type AwsGameLiftS1d {
  FleetId: String
  FleetArn: String
  FleetType: String
  InstanceType: String
  Description: String
  Name: String
  CreationTime: Date
  TerminationTime: Date
  Status: String
  BuildId: String
  ScriptId: String
  ServerLaunchPath: String
  ServerLaunchParameters: String
  LogPaths: [String]
  NewGameSessionProtectionPolicy: String
  OperatingSystem: String
  ResourceCreationLimitPolicy: AwsGameLiftS17
  MetricGroups: [String]
  StoppedActions: [String]
  InstanceRoleArn: String
}

type AwsGameLiftS1i {
  Key: String!
  Value: String!
}

input AwsGameLiftS1iInput {
  Key: String!
  Value: String!
}

type AwsGameLiftS1p {
  GameSessionId: String
  Name: String
  FleetId: String
  CreationTime: Date
  TerminationTime: Date
  CurrentPlayerSessionCount: Int
  MaximumPlayerSessionCount: Int
  Status: String
  StatusReason: String
  GameProperties: [AwsGameLiftS1i]
  IpAddress: String
  Port: Int
  PlayerSessionCreationPolicy: String
  CreatorId: String
  GameSessionData: String
  MatchmakerData: String
}

type AwsGameLiftS1x {
  MaximumIndividualPlayerLatencyMilliseconds: Int
  PolicyDurationSeconds: Int
}

input AwsGameLiftS1xInput {
  MaximumIndividualPlayerLatencyMilliseconds: Int
  PolicyDurationSeconds: Int
}

type AwsGameLiftS1z {
  DestinationArn: String
}

input AwsGameLiftS1zInput {
  DestinationArn: String
}

type AwsGameLiftS22 {
  Name: String
  GameSessionQueueArn: String
  TimeoutInSeconds: Int
  PlayerLatencyPolicies: [AwsGameLiftS1x]
  Destinations: [AwsGameLiftS1z]
}

type AwsGameLiftS2c {
  Name: String
  Description: String
  GameSessionQueueArns: [String]
  RequestTimeoutSeconds: Int
  AcceptanceTimeoutSeconds: Int
  AcceptanceRequired: Boolean
  RuleSetName: String
  NotificationTarget: String
  AdditionalPlayerCount: Int
  CustomEventData: String
  CreationTime: Date
  GameProperties: [AwsGameLiftS1i]
  GameSessionData: String
  BackfillMode: String
}

type AwsGameLiftS2g {
  RuleSetName: String
  RuleSetBody: String!
  CreationTime: Date
}

type AwsGameLiftS2k {
  PlayerSessionId: String
  PlayerId: String
  GameSessionId: String
  FleetId: String
  CreationTime: Date
  TerminationTime: Date
  Status: String
  IpAddress: String
  Port: Int
  PlayerData: String
}

type AwsGameLiftS2v {
  ScriptId: String
  Name: String
  Version: String
  SizeOnDisk: JSON
  CreationTime: Date
  StorageLocation: AwsGameLiftSj
}

type AwsGameLiftS2y {
  GameLiftAwsAccountId: String
  PeerVpcAwsAccountId: String
  PeerVpcId: String
  CreationTime: Date
  ExpirationTime: Date
}

type AwsGameLiftS4e {
  PlacementId: String
  GameSessionQueueName: String
  Status: String
  GameProperties: [AwsGameLiftS1i]
  MaximumPlayerSessionCount: Int
  GameSessionName: String
  GameSessionId: String
  GameSessionArn: String
  GameSessionRegion: String
  PlayerLatencies: [AwsGameLiftS4g]
  StartTime: Date
  EndTime: Date
  IpAddress: String
  Port: Int
  PlacedPlayerSessions: [AwsGameLiftS4ePlacedPlayerSessions]
  GameSessionData: String
  MatchmakerData: String
}

type AwsGameLiftS4ePlacedPlayerSessions {
  PlayerId: String
  PlayerSessionId: String
}

type AwsGameLiftS4g {
  PlayerId: String
  RegionIdentifier: String
  LatencyInMilliseconds: Float
}

input AwsGameLiftS4gInput {
  PlayerId: String
  RegionIdentifier: String
  LatencyInMilliseconds: Float
}

type AwsGameLiftS52 {
  TicketId: String
  ConfigurationName: String
  Status: String
  StatusReason: String
  StatusMessage: String
  StartTime: Date
  EndTime: Date
  Players: [AwsGameLiftS55]
  GameSessionConnectionInfo: AwsGameLiftS52GameSessionConnectionInfo
  EstimatedWaitTime: Int
}

type AwsGameLiftS52GameSessionConnectionInfo {
  GameSessionArn: String
  IpAddress: String
  Port: Int
  MatchedPlayerSessions: [AwsGameLiftS52GameSessionConnectionInfoMatchedPlayerSessions]
}

type AwsGameLiftS52GameSessionConnectionInfoMatchedPlayerSessions {
  PlayerId: String
  PlayerSessionId: String
}

type AwsGameLiftS55 {
  PlayerId: String
  PlayerAttributes: JSON
  Team: String
  LatencyInMs: JSON
}

input AwsGameLiftS55Input {
  PlayerId: String
  PlayerAttributes: JSON
  Team: String
  LatencyInMs: JSON
}

type AwsGameLiftS62 {
  TargetValue: JSON!
}

input AwsGameLiftS62Input {
  TargetValue: JSON!
}

type AwsGameLiftS9 {
  Type: String
  FleetId: String
  Message: String
}

input AwsGameLiftS9Input {
  Type: String
  FleetId: String
  Message: String
}

type AwsGameLiftSe {
  AliasId: String
  Name: String
  AliasArn: String
  Description: String
  RoutingStrategy: AwsGameLiftS9
  CreationTime: Date
  LastUpdatedTime: Date
}

input AwsGameLiftSearchGameSessionsInput {
  FleetId: String
  AliasId: String
  FilterExpression: String
  SortExpression: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftSearchGameSessionsOutput {
  GameSessions: [AwsGameLiftS1p]
  NextToken: String
}

type AwsGameLiftSj {
  Bucket: String
  Key: String
  RoleArn: String
  ObjectVersion: String
}

input AwsGameLiftSjInput {
  Bucket: String
  Key: String
  RoleArn: String
  ObjectVersion: String
}

type AwsGameLiftSn {
  BuildId: String
  Name: String
  Version: String
  Status: String
  SizeOnDisk: JSON
  OperatingSystem: String
  CreationTime: Date
}

type AwsGameLiftSr {
  AccessKeyId: String
  SecretAccessKey: String
  SessionToken: String
}

input AwsGameLiftStartFleetActionsInput {
  FleetId: String!
  Actions: [String]!
}

input AwsGameLiftStartGameSessionPlacementDesiredPlayerSessionsInput {
  PlayerId: String
  PlayerData: String
}

input AwsGameLiftStartGameSessionPlacementInput {
  PlacementId: String!
  GameSessionQueueName: String!
  GameProperties: [AwsGameLiftS1iInput]
  MaximumPlayerSessionCount: Int!
  GameSessionName: String
  PlayerLatencies: [AwsGameLiftS4gInput]
  DesiredPlayerSessions: [AwsGameLiftStartGameSessionPlacementDesiredPlayerSessionsInput]
  GameSessionData: String
}

type AwsGameLiftStartGameSessionPlacementOutput {
  GameSessionPlacement: AwsGameLiftS4e
}

input AwsGameLiftStartMatchBackfillInput {
  TicketId: String
  ConfigurationName: String!
  GameSessionArn: String!
  Players: [AwsGameLiftS55Input]!
}

type AwsGameLiftStartMatchBackfillOutput {
  MatchmakingTicket: AwsGameLiftS52
}

input AwsGameLiftStartMatchmakingInput {
  TicketId: String
  ConfigurationName: String!
  Players: [AwsGameLiftS55Input]!
}

type AwsGameLiftStartMatchmakingOutput {
  MatchmakingTicket: AwsGameLiftS52
}

input AwsGameLiftStopFleetActionsInput {
  FleetId: String!
  Actions: [String]!
}

input AwsGameLiftStopGameSessionPlacementInput {
  PlacementId: String!
}

type AwsGameLiftStopGameSessionPlacementOutput {
  GameSessionPlacement: AwsGameLiftS4e
}

input AwsGameLiftStopMatchmakingInput {
  TicketId: String!
}

type AwsGameLiftSv {
  FromPort: Int!
  ToPort: Int!
  IpRange: String!
  Protocol: String!
}

input AwsGameLiftSvInput {
  FromPort: Int!
  ToPort: Int!
  IpRange: String!
  Protocol: String!
}

input AwsGameLiftUpdateAliasInput {
  AliasId: String!
  Name: String
  Description: String
  RoutingStrategy: AwsGameLiftS9Input
}

type AwsGameLiftUpdateAliasOutput {
  Alias: AwsGameLiftSe
}

input AwsGameLiftUpdateBuildInput {
  BuildId: String!
  Name: String
  Version: String
}

type AwsGameLiftUpdateBuildOutput {
  Build: AwsGameLiftSn
}

input AwsGameLiftUpdateFleetAttributesInput {
  FleetId: String!
  Name: String
  Description: String
  NewGameSessionProtectionPolicy: String
  ResourceCreationLimitPolicy: AwsGameLiftS17Input
  MetricGroups: [String]
}

type AwsGameLiftUpdateFleetAttributesOutput {
  FleetId: String
}

input AwsGameLiftUpdateFleetCapacityInput {
  FleetId: String!
  DesiredInstances: Int
  MinSize: Int
  MaxSize: Int
}

type AwsGameLiftUpdateFleetCapacityOutput {
  FleetId: String
}

input AwsGameLiftUpdateFleetPortSettingsInput {
  FleetId: String!
  InboundPermissionAuthorizations: [AwsGameLiftSvInput]
  InboundPermissionRevocations: [AwsGameLiftSvInput]
}

type AwsGameLiftUpdateFleetPortSettingsOutput {
  FleetId: String
}

input AwsGameLiftUpdateGameSessionInput {
  GameSessionId: String!
  MaximumPlayerSessionCount: Int
  Name: String
  PlayerSessionCreationPolicy: String
  ProtectionPolicy: String
}

type AwsGameLiftUpdateGameSessionOutput {
  GameSession: AwsGameLiftS1p
}

input AwsGameLiftUpdateGameSessionQueueInput {
  Name: String!
  TimeoutInSeconds: Int
  PlayerLatencyPolicies: [AwsGameLiftS1xInput]
  Destinations: [AwsGameLiftS1zInput]
}

type AwsGameLiftUpdateGameSessionQueueOutput {
  GameSessionQueue: AwsGameLiftS22
}

input AwsGameLiftUpdateMatchmakingConfigurationInput {
  Name: String!
  Description: String
  GameSessionQueueArns: [String]
  RequestTimeoutSeconds: Int
  AcceptanceTimeoutSeconds: Int
  AcceptanceRequired: Boolean
  RuleSetName: String
  NotificationTarget: String
  AdditionalPlayerCount: Int
  CustomEventData: String
  GameProperties: [AwsGameLiftS1iInput]
  GameSessionData: String
  BackfillMode: String
}

type AwsGameLiftUpdateMatchmakingConfigurationOutput {
  Configuration: AwsGameLiftS2c
}

input AwsGameLiftUpdateRuntimeConfigurationInput {
  FleetId: String!
  RuntimeConfiguration: AwsGameLiftS11Input!
}

type AwsGameLiftUpdateRuntimeConfigurationOutput {
  RuntimeConfiguration: AwsGameLiftS11
}

input AwsGameLiftUpdateScriptInput {
  ScriptId: String!
  Name: String
  Version: String
  StorageLocation: AwsGameLiftSjInput
  ZipFile: JSON
}

type AwsGameLiftUpdateScriptOutput {
  Script: AwsGameLiftS2v
}

input AwsGameLiftValidateMatchmakingRuleSetInput {
  RuleSetBody: String!
}

type AwsGameLiftValidateMatchmakingRuleSetOutput {
  Valid: Boolean
}

"""Amazon Glacier (2012-06-01)"""
type AwsGlacier {
  abortMultipartUpload(input: AwsGlacierAbortMultipartUploadInput!, config: AwsConfig): JSON
  abortVaultLock(input: AwsGlacierAbortVaultLockInput!, config: AwsConfig): JSON
  addTagsToVault(input: AwsGlacierAddTagsToVaultInput!, config: AwsConfig): JSON
  completeMultipartUpload(input: AwsGlacierCompleteMultipartUploadInput!, config: AwsConfig): JSON
  completeVaultLock(input: AwsGlacierCompleteVaultLockInput!, config: AwsConfig): JSON
  createVault(input: AwsGlacierCreateVaultInput!, config: AwsConfig): AwsGlacierCreateVaultOutput
  deleteArchive(input: AwsGlacierDeleteArchiveInput!, config: AwsConfig): JSON
  deleteVault(input: AwsGlacierDeleteVaultInput!, config: AwsConfig): JSON
  deleteVaultAccessPolicy(input: AwsGlacierDeleteVaultAccessPolicyInput!, config: AwsConfig): JSON
  deleteVaultNotifications(input: AwsGlacierDeleteVaultNotificationsInput!, config: AwsConfig): JSON
  describeJob(input: AwsGlacierDescribeJobInput!, config: AwsConfig): JSON
  describeVault(input: AwsGlacierDescribeVaultInput!, config: AwsConfig): JSON
  getDataRetrievalPolicy(input: AwsGlacierGetDataRetrievalPolicyInput!, config: AwsConfig): AwsGlacierGetDataRetrievalPolicyOutput
  getJobOutput(input: AwsGlacierGetJobOutputInput!, config: AwsConfig): AwsGlacierGetJobOutputOutput
  getVaultAccessPolicy(input: AwsGlacierGetVaultAccessPolicyInput!, config: AwsConfig): AwsGlacierGetVaultAccessPolicyOutput
  getVaultLock(input: AwsGlacierGetVaultLockInput!, config: AwsConfig): AwsGlacierGetVaultLockOutput
  getVaultNotifications(input: AwsGlacierGetVaultNotificationsInput!, config: AwsConfig): AwsGlacierGetVaultNotificationsOutput
  initiateJob(input: AwsGlacierInitiateJobInput!, config: AwsConfig): AwsGlacierInitiateJobOutput
  initiateMultipartUpload(input: AwsGlacierInitiateMultipartUploadInput!, config: AwsConfig): AwsGlacierInitiateMultipartUploadOutput
  initiateVaultLock(input: AwsGlacierInitiateVaultLockInput!, config: AwsConfig): AwsGlacierInitiateVaultLockOutput
  listJobs(input: AwsGlacierListJobsInput!, config: AwsConfig): AwsGlacierListJobsOutput
  listMultipartUploads(input: AwsGlacierListMultipartUploadsInput!, config: AwsConfig): AwsGlacierListMultipartUploadsOutput
  listParts(input: AwsGlacierListPartsInput!, config: AwsConfig): AwsGlacierListPartsOutput
  listProvisionedCapacity(input: AwsGlacierListProvisionedCapacityInput!, config: AwsConfig): AwsGlacierListProvisionedCapacityOutput
  listTagsForVault(input: AwsGlacierListTagsForVaultInput!, config: AwsConfig): AwsGlacierListTagsForVaultOutput
  listVaults(input: AwsGlacierListVaultsInput!, config: AwsConfig): AwsGlacierListVaultsOutput
  purchaseProvisionedCapacity(input: AwsGlacierPurchaseProvisionedCapacityInput!, config: AwsConfig): AwsGlacierPurchaseProvisionedCapacityOutput
  removeTagsFromVault(input: AwsGlacierRemoveTagsFromVaultInput!, config: AwsConfig): JSON
  setDataRetrievalPolicy(input: AwsGlacierSetDataRetrievalPolicyInput!, config: AwsConfig): JSON
  setVaultAccessPolicy(input: AwsGlacierSetVaultAccessPolicyInput!, config: AwsConfig): JSON
  setVaultNotifications(input: AwsGlacierSetVaultNotificationsInput!, config: AwsConfig): JSON
  uploadArchive(input: AwsGlacierUploadArchiveInput!, config: AwsConfig): JSON
  uploadMultipartPart(input: AwsGlacierUploadMultipartPartInput!, config: AwsConfig): AwsGlacierUploadMultipartPartOutput
}

input AwsGlacierAbortMultipartUploadInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
}

input AwsGlacierAbortVaultLockInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierAddTagsToVaultInput {
  accountId: String!
  vaultName: String!
  Tags: JSON
}

input AwsGlacierCompleteMultipartUploadInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
  archiveSize: String
  checksum: String
}

input AwsGlacierCompleteVaultLockInput {
  accountId: String!
  vaultName: String!
  lockId: String!
}

input AwsGlacierCreateVaultInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierCreateVaultOutput {
  location: String
}

input AwsGlacierDeleteArchiveInput {
  accountId: String!
  vaultName: String!
  archiveId: String!
}

input AwsGlacierDeleteVaultAccessPolicyInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierDeleteVaultInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierDeleteVaultNotificationsInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierDescribeJobInput {
  accountId: String!
  vaultName: String!
  jobId: String!
}

input AwsGlacierDescribeVaultInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierGetDataRetrievalPolicyInput {
  accountId: String!
}

type AwsGlacierGetDataRetrievalPolicyOutput {
  Policy: AwsGlacierS1e
}

input AwsGlacierGetJobOutputInput {
  accountId: String!
  vaultName: String!
  jobId: String!
  range: String
}

type AwsGlacierGetJobOutputOutput {
  body: JSON
  checksum: String
  status: Int
  contentRange: String
  acceptRanges: String
  contentType: String
  archiveDescription: String
}

input AwsGlacierGetVaultAccessPolicyInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierGetVaultAccessPolicyOutput {
  policy: AwsGlacierS1o
}

input AwsGlacierGetVaultLockInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierGetVaultLockOutput {
  Policy: String
  State: String
  ExpirationDate: String
  CreationDate: String
}

input AwsGlacierGetVaultNotificationsInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierGetVaultNotificationsOutput {
  vaultNotificationConfig: AwsGlacierS1t
}

input AwsGlacierInitiateJobInput {
  accountId: String!
  vaultName: String!
  jobParameters: AwsGlacierInitiateJobJobParametersInput
}

input AwsGlacierInitiateJobJobParametersInput {
  Format: String
  Type: String
  ArchiveId: String
  Description: String
  SNSTopic: String
  RetrievalByteRange: String
  Tier: String
  InventoryRetrievalParameters: AwsGlacierInitiateJobJobParametersInventoryRetrievalParametersInput
  SelectParameters: AwsGlacierSpInput
  OutputLocation: AwsGlacierSxInput
}

input AwsGlacierInitiateJobJobParametersInventoryRetrievalParametersInput {
  StartDate: String
  EndDate: String
  Limit: String
  Marker: String
}

type AwsGlacierInitiateJobOutput {
  location: String
  jobId: String
  jobOutputPath: String
}

input AwsGlacierInitiateMultipartUploadInput {
  accountId: String!
  vaultName: String!
  archiveDescription: String
  partSize: String
}

type AwsGlacierInitiateMultipartUploadOutput {
  location: String
  uploadId: String
}

input AwsGlacierInitiateVaultLockInput {
  accountId: String!
  vaultName: String!
  policy: AwsGlacierInitiateVaultLockPolicyInput
}

type AwsGlacierInitiateVaultLockOutput {
  lockId: String
}

input AwsGlacierInitiateVaultLockPolicyInput {
  Policy: String
}

input AwsGlacierListJobsInput {
  accountId: String!
  vaultName: String!
  limit: String
  marker: String
  statuscode: String
  completed: String
}

type AwsGlacierListJobsOutput {
  JobList: [AwsGlacierSi]
  Marker: String
}

input AwsGlacierListMultipartUploadsInput {
  accountId: String!
  vaultName: String!
  marker: String
  limit: String
}

type AwsGlacierListMultipartUploadsOutput {
  UploadsList: [AwsGlacierListMultipartUploadsOutputUploadsList]
  Marker: String
}

type AwsGlacierListMultipartUploadsOutputUploadsList {
  MultipartUploadId: String
  VaultARN: String
  ArchiveDescription: String
  PartSizeInBytes: JSON
  CreationDate: String
}

input AwsGlacierListPartsInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
  marker: String
  limit: String
}

type AwsGlacierListPartsOutput {
  MultipartUploadId: String
  VaultARN: String
  ArchiveDescription: String
  PartSizeInBytes: JSON
  CreationDate: String
  Parts: [AwsGlacierListPartsOutputParts]
  Marker: String
}

type AwsGlacierListPartsOutputParts {
  RangeInBytes: String
  SHA256TreeHash: String
}

input AwsGlacierListProvisionedCapacityInput {
  accountId: String!
}

type AwsGlacierListProvisionedCapacityOutput {
  ProvisionedCapacityList: [AwsGlacierListProvisionedCapacityOutputProvisionedCapacityList]
}

type AwsGlacierListProvisionedCapacityOutputProvisionedCapacityList {
  CapacityId: String
  StartDate: String
  ExpirationDate: String
}

input AwsGlacierListTagsForVaultInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierListTagsForVaultOutput {
  Tags: JSON
}

input AwsGlacierListVaultsInput {
  accountId: String!
  marker: String
  limit: String
}

type AwsGlacierListVaultsOutput {
  VaultList: [AwsGlacierS1a]
  Marker: String
}

input AwsGlacierPurchaseProvisionedCapacityInput {
  accountId: String!
}

type AwsGlacierPurchaseProvisionedCapacityOutput {
  capacityId: String
}

input AwsGlacierRemoveTagsFromVaultInput {
  accountId: String!
  vaultName: String!
  TagKeys: [String]
}

type AwsGlacierS1a {
  VaultARN: String
  VaultName: String
  CreationDate: String
  LastInventoryDate: String
  NumberOfArchives: JSON
  SizeInBytes: JSON
}

type AwsGlacierS1e {
  Rules: [AwsGlacierS1eRules]
}

input AwsGlacierS1eInput {
  Rules: [AwsGlacierS1eRulesInput]
}

type AwsGlacierS1eRules {
  Strategy: String
  BytesPerHour: JSON
}

input AwsGlacierS1eRulesInput {
  Strategy: String
  BytesPerHour: JSON
}

type AwsGlacierS1o {
  Policy: String
}

input AwsGlacierS1oInput {
  Policy: String
}

type AwsGlacierS1t {
  SNSTopic: String
  Events: [String]
}

input AwsGlacierS1tInput {
  SNSTopic: String
  Events: [String]
}

input AwsGlacierSetDataRetrievalPolicyInput {
  accountId: String!
  Policy: AwsGlacierS1eInput
}

input AwsGlacierSetVaultAccessPolicyInput {
  accountId: String!
  vaultName: String!
  policy: AwsGlacierS1oInput
}

input AwsGlacierSetVaultNotificationsInput {
  accountId: String!
  vaultName: String!
  vaultNotificationConfig: AwsGlacierS1tInput
}

type AwsGlacierSi {
  JobId: String
  JobDescription: String
  Action: String
  ArchiveId: String
  VaultARN: String
  CreationDate: String
  Completed: Boolean
  StatusCode: String
  StatusMessage: String
  ArchiveSizeInBytes: JSON
  InventorySizeInBytes: JSON
  SNSTopic: String
  CompletionDate: String
  SHA256TreeHash: String
  ArchiveSHA256TreeHash: String
  RetrievalByteRange: String
  Tier: String
  InventoryRetrievalParameters: AwsGlacierSiInventoryRetrievalParameters
  JobOutputPath: String
  SelectParameters: AwsGlacierSp
  OutputLocation: AwsGlacierSx
}

type AwsGlacierSiInventoryRetrievalParameters {
  Format: String
  StartDate: String
  EndDate: String
  Limit: String
  Marker: String
}

type AwsGlacierSp {
  InputSerialization: AwsGlacierSpInputSerialization
  ExpressionType: String
  Expression: String
  OutputSerialization: AwsGlacierSpOutputSerialization
}

input AwsGlacierSpInput {
  InputSerialization: AwsGlacierSpInputSerializationInput
  ExpressionType: String
  Expression: String
  OutputSerialization: AwsGlacierSpOutputSerializationInput
}

type AwsGlacierSpInputSerialization {
  csv: AwsGlacierSpInputSerializationCsv
}

type AwsGlacierSpInputSerializationCsv {
  FileHeaderInfo: String
  Comments: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpInputSerializationCsvInput {
  FileHeaderInfo: String
  Comments: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpInputSerializationInput {
  csv: AwsGlacierSpInputSerializationCsvInput
}

type AwsGlacierSpOutputSerialization {
  csv: AwsGlacierSpOutputSerializationCsv
}

type AwsGlacierSpOutputSerializationCsv {
  QuoteFields: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpOutputSerializationCsvInput {
  QuoteFields: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpOutputSerializationInput {
  csv: AwsGlacierSpOutputSerializationCsvInput
}

type AwsGlacierSx {
  S3: AwsGlacierSxS3
}

input AwsGlacierSxInput {
  S3: AwsGlacierSxS3Input
}

type AwsGlacierSxS3 {
  BucketName: String
  Prefix: String
  Encryption: AwsGlacierSxS3Encryption
  CannedACL: String
  AccessControlList: [AwsGlacierSxS3AccessControlList]
  Tagging: JSON
  UserMetadata: JSON
  StorageClass: String
}

type AwsGlacierSxS3AccessControlList {
  Grantee: AwsGlacierSxS3AccessControlListGrantee
  Permission: String
}

type AwsGlacierSxS3AccessControlListGrantee {
  Type: String!
  DisplayName: String
  URI: String
  ID: String
  EmailAddress: String
}

input AwsGlacierSxS3AccessControlListGranteeInput {
  Type: String!
  DisplayName: String
  URI: String
  ID: String
  EmailAddress: String
}

input AwsGlacierSxS3AccessControlListInput {
  Grantee: AwsGlacierSxS3AccessControlListGranteeInput
  Permission: String
}

type AwsGlacierSxS3Encryption {
  EncryptionType: String
  KMSKeyId: String
  KMSContext: String
}

input AwsGlacierSxS3EncryptionInput {
  EncryptionType: String
  KMSKeyId: String
  KMSContext: String
}

input AwsGlacierSxS3Input {
  BucketName: String
  Prefix: String
  Encryption: AwsGlacierSxS3EncryptionInput
  CannedACL: String
  AccessControlList: [AwsGlacierSxS3AccessControlListInput]
  Tagging: JSON
  UserMetadata: JSON
  StorageClass: String
}

input AwsGlacierUploadArchiveInput {
  vaultName: String!
  accountId: String!
  archiveDescription: String
  checksum: String
  body: JSON
}

input AwsGlacierUploadMultipartPartInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
  checksum: String
  range: String
  body: JSON
}

type AwsGlacierUploadMultipartPartOutput {
  checksum: String
}

"""AWS Global Accelerator (2018-08-08)"""
type AwsGlobalAccelerator {
  createAccelerator(input: AwsGlobalAcceleratorCreateAcceleratorInput!, config: AwsConfig): AwsGlobalAcceleratorCreateAcceleratorOutput
  createEndpointGroup(input: AwsGlobalAcceleratorCreateEndpointGroupInput!, config: AwsConfig): AwsGlobalAcceleratorCreateEndpointGroupOutput
  createListener(input: AwsGlobalAcceleratorCreateListenerInput!, config: AwsConfig): AwsGlobalAcceleratorCreateListenerOutput
  deleteAccelerator(input: AwsGlobalAcceleratorDeleteAcceleratorInput!, config: AwsConfig): JSON
  deleteEndpointGroup(input: AwsGlobalAcceleratorDeleteEndpointGroupInput!, config: AwsConfig): JSON
  deleteListener(input: AwsGlobalAcceleratorDeleteListenerInput!, config: AwsConfig): JSON
  describeAccelerator(input: AwsGlobalAcceleratorDescribeAcceleratorInput!, config: AwsConfig): AwsGlobalAcceleratorDescribeAcceleratorOutput
  describeAcceleratorAttributes(input: AwsGlobalAcceleratorDescribeAcceleratorAttributesInput, config: AwsConfig): AwsGlobalAcceleratorDescribeAcceleratorAttributesOutput
  describeEndpointGroup(input: AwsGlobalAcceleratorDescribeEndpointGroupInput!, config: AwsConfig): AwsGlobalAcceleratorDescribeEndpointGroupOutput
  describeListener(input: AwsGlobalAcceleratorDescribeListenerInput!, config: AwsConfig): AwsGlobalAcceleratorDescribeListenerOutput
  listAccelerators(input: AwsGlobalAcceleratorListAcceleratorsInput, config: AwsConfig): AwsGlobalAcceleratorListAcceleratorsOutput
  listEndpointGroups(input: AwsGlobalAcceleratorListEndpointGroupsInput!, config: AwsConfig): AwsGlobalAcceleratorListEndpointGroupsOutput
  listListeners(input: AwsGlobalAcceleratorListListenersInput!, config: AwsConfig): AwsGlobalAcceleratorListListenersOutput
  updateAccelerator(input: AwsGlobalAcceleratorUpdateAcceleratorInput!, config: AwsConfig): AwsGlobalAcceleratorUpdateAcceleratorOutput
  updateAcceleratorAttributes(input: AwsGlobalAcceleratorUpdateAcceleratorAttributesInput, config: AwsConfig): AwsGlobalAcceleratorUpdateAcceleratorAttributesOutput
  updateEndpointGroup(input: AwsGlobalAcceleratorUpdateEndpointGroupInput!, config: AwsConfig): AwsGlobalAcceleratorUpdateEndpointGroupOutput
  updateListener(input: AwsGlobalAcceleratorUpdateListenerInput!, config: AwsConfig): AwsGlobalAcceleratorUpdateListenerOutput
}

input AwsGlobalAcceleratorCreateAcceleratorInput {
  Name: String!
  IpAddressType: String
  Enabled: Boolean
  IdempotencyToken: String!
}

type AwsGlobalAcceleratorCreateAcceleratorOutput {
  Accelerator: AwsGlobalAcceleratorS7
}

input AwsGlobalAcceleratorCreateEndpointGroupInput {
  ListenerArn: String!
  EndpointGroupRegion: String!
  EndpointConfigurations: [AwsGlobalAcceleratorSfInput]
  TrafficDialPercentage: Float
  HealthCheckPort: Int
  HealthCheckProtocol: String
  HealthCheckPath: String
  HealthCheckIntervalSeconds: Int
  ThresholdCount: Int
  IdempotencyToken: String!
}

type AwsGlobalAcceleratorCreateEndpointGroupOutput {
  EndpointGroup: AwsGlobalAcceleratorSo
}

input AwsGlobalAcceleratorCreateListenerInput {
  AcceleratorArn: String!
  PortRanges: [AwsGlobalAcceleratorStInput]!
  Protocol: String!
  ClientAffinity: String
  IdempotencyToken: String!
}

type AwsGlobalAcceleratorCreateListenerOutput {
  Listener: AwsGlobalAcceleratorSz
}

input AwsGlobalAcceleratorDeleteAcceleratorInput {
  AcceleratorArn: String!
}

input AwsGlobalAcceleratorDeleteEndpointGroupInput {
  EndpointGroupArn: String!
}

input AwsGlobalAcceleratorDeleteListenerInput {
  ListenerArn: String!
}

input AwsGlobalAcceleratorDescribeAcceleratorAttributesInput {
  AcceleratorArn: String
}

type AwsGlobalAcceleratorDescribeAcceleratorAttributesOutput {
  AcceleratorAttributes: AwsGlobalAcceleratorS17
}

input AwsGlobalAcceleratorDescribeAcceleratorInput {
  AcceleratorArn: String!
}

type AwsGlobalAcceleratorDescribeAcceleratorOutput {
  Accelerator: AwsGlobalAcceleratorS7
}

input AwsGlobalAcceleratorDescribeEndpointGroupInput {
  EndpointGroupArn: String!
}

type AwsGlobalAcceleratorDescribeEndpointGroupOutput {
  EndpointGroup: AwsGlobalAcceleratorSo
}

input AwsGlobalAcceleratorDescribeListenerInput {
  ListenerArn: String!
}

type AwsGlobalAcceleratorDescribeListenerOutput {
  Listener: AwsGlobalAcceleratorSz
}

input AwsGlobalAcceleratorListAcceleratorsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlobalAcceleratorListAcceleratorsOutput {
  Accelerators: [AwsGlobalAcceleratorS7]
  NextToken: String
}

input AwsGlobalAcceleratorListEndpointGroupsInput {
  ListenerArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsGlobalAcceleratorListEndpointGroupsOutput {
  EndpointGroups: [AwsGlobalAcceleratorSo]
  NextToken: String
}

input AwsGlobalAcceleratorListListenersInput {
  AcceleratorArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsGlobalAcceleratorListListenersOutput {
  Listeners: [AwsGlobalAcceleratorSz]
  NextToken: String
}

type AwsGlobalAcceleratorS17 {
  FlowLogsEnabled: Boolean
  FlowLogsS3Bucket: String
  FlowLogsS3Prefix: String
}

type AwsGlobalAcceleratorS7 {
  AcceleratorArn: String
  Name: String
  IpAddressType: String
  Enabled: Boolean
  IpSets: [AwsGlobalAcceleratorS7IpSets]
  Status: String
  CreatedTime: Date
  LastModifiedTime: Date
}

type AwsGlobalAcceleratorS7IpSets {
  IpFamily: String
  IpAddresses: [String]
}

input AwsGlobalAcceleratorSfInput {
  EndpointId: String
  Weight: Int
}

type AwsGlobalAcceleratorSo {
  EndpointGroupArn: String
  EndpointGroupRegion: String
  EndpointDescriptions: [AwsGlobalAcceleratorSoEndpointDescriptions]
  TrafficDialPercentage: Float
  HealthCheckPort: Int
  HealthCheckProtocol: String
  HealthCheckPath: String
  HealthCheckIntervalSeconds: Int
  ThresholdCount: Int
}

type AwsGlobalAcceleratorSoEndpointDescriptions {
  EndpointId: String
  Weight: Int
  HealthState: String
  HealthReason: String
}

type AwsGlobalAcceleratorSt {
  FromPort: Int
  ToPort: Int
}

input AwsGlobalAcceleratorStInput {
  FromPort: Int
  ToPort: Int
}

type AwsGlobalAcceleratorSz {
  ListenerArn: String
  PortRanges: [AwsGlobalAcceleratorSt]
  Protocol: String
  ClientAffinity: String
}

input AwsGlobalAcceleratorUpdateAcceleratorAttributesInput {
  AcceleratorArn: String
  FlowLogsEnabled: Boolean
  FlowLogsS3Bucket: String
  FlowLogsS3Prefix: String
}

type AwsGlobalAcceleratorUpdateAcceleratorAttributesOutput {
  AcceleratorAttributes: AwsGlobalAcceleratorS17
}

input AwsGlobalAcceleratorUpdateAcceleratorInput {
  AcceleratorArn: String!
  Name: String
  IpAddressType: String
  Enabled: Boolean
}

type AwsGlobalAcceleratorUpdateAcceleratorOutput {
  Accelerator: AwsGlobalAcceleratorS7
}

input AwsGlobalAcceleratorUpdateEndpointGroupInput {
  EndpointGroupArn: String!
  EndpointConfigurations: [AwsGlobalAcceleratorSfInput]
  TrafficDialPercentage: Float
  HealthCheckPort: Int
  HealthCheckProtocol: String
  HealthCheckPath: String
  HealthCheckIntervalSeconds: Int
  ThresholdCount: Int
}

type AwsGlobalAcceleratorUpdateEndpointGroupOutput {
  EndpointGroup: AwsGlobalAcceleratorSo
}

input AwsGlobalAcceleratorUpdateListenerInput {
  ListenerArn: String!
  PortRanges: [AwsGlobalAcceleratorStInput]
  Protocol: String
  ClientAffinity: String
}

type AwsGlobalAcceleratorUpdateListenerOutput {
  Listener: AwsGlobalAcceleratorSz
}

"""AWS Glue (2017-03-31)"""
type AwsGlue {
  batchCreatePartition(input: AwsGlueBatchCreatePartitionInput!, config: AwsConfig): AwsGlueBatchCreatePartitionOutput
  batchDeleteConnection(input: AwsGlueBatchDeleteConnectionInput!, config: AwsConfig): AwsGlueBatchDeleteConnectionOutput
  batchDeletePartition(input: AwsGlueBatchDeletePartitionInput!, config: AwsConfig): AwsGlueBatchDeletePartitionOutput
  batchDeleteTable(input: AwsGlueBatchDeleteTableInput!, config: AwsConfig): AwsGlueBatchDeleteTableOutput
  batchDeleteTableVersion(input: AwsGlueBatchDeleteTableVersionInput!, config: AwsConfig): AwsGlueBatchDeleteTableVersionOutput
  batchGetCrawlers(input: AwsGlueBatchGetCrawlersInput!, config: AwsConfig): AwsGlueBatchGetCrawlersOutput
  batchGetDevEndpoints(input: AwsGlueBatchGetDevEndpointsInput!, config: AwsConfig): AwsGlueBatchGetDevEndpointsOutput
  batchGetJobs(input: AwsGlueBatchGetJobsInput!, config: AwsConfig): AwsGlueBatchGetJobsOutput
  batchGetPartition(input: AwsGlueBatchGetPartitionInput!, config: AwsConfig): AwsGlueBatchGetPartitionOutput
  batchGetTriggers(input: AwsGlueBatchGetTriggersInput!, config: AwsConfig): AwsGlueBatchGetTriggersOutput
  batchGetWorkflows(input: AwsGlueBatchGetWorkflowsInput!, config: AwsConfig): AwsGlueBatchGetWorkflowsOutput
  batchStopJobRun(input: AwsGlueBatchStopJobRunInput!, config: AwsConfig): AwsGlueBatchStopJobRunOutput
  createClassifier(input: AwsGlueCreateClassifierInput, config: AwsConfig): JSON
  createConnection(input: AwsGlueCreateConnectionInput!, config: AwsConfig): JSON
  createCrawler(input: AwsGlueCreateCrawlerInput!, config: AwsConfig): JSON
  createDatabase(input: AwsGlueCreateDatabaseInput!, config: AwsConfig): JSON
  createDevEndpoint(input: AwsGlueCreateDevEndpointInput!, config: AwsConfig): AwsGlueCreateDevEndpointOutput
  createJob(input: AwsGlueCreateJobInput!, config: AwsConfig): AwsGlueCreateJobOutput
  createPartition(input: AwsGlueCreatePartitionInput!, config: AwsConfig): JSON
  createScript(input: AwsGlueCreateScriptInput, config: AwsConfig): AwsGlueCreateScriptOutput
  createSecurityConfiguration(input: AwsGlueCreateSecurityConfigurationInput!, config: AwsConfig): AwsGlueCreateSecurityConfigurationOutput
  createTable(input: AwsGlueCreateTableInput!, config: AwsConfig): JSON
  createTrigger(input: AwsGlueCreateTriggerInput!, config: AwsConfig): AwsGlueCreateTriggerOutput
  createUserDefinedFunction(input: AwsGlueCreateUserDefinedFunctionInput!, config: AwsConfig): JSON
  createWorkflow(input: AwsGlueCreateWorkflowInput!, config: AwsConfig): AwsGlueCreateWorkflowOutput
  deleteClassifier(input: AwsGlueDeleteClassifierInput!, config: AwsConfig): JSON
  deleteConnection(input: AwsGlueDeleteConnectionInput!, config: AwsConfig): JSON
  deleteCrawler(input: AwsGlueDeleteCrawlerInput!, config: AwsConfig): JSON
  deleteDatabase(input: AwsGlueDeleteDatabaseInput!, config: AwsConfig): JSON
  deleteDevEndpoint(input: AwsGlueDeleteDevEndpointInput!, config: AwsConfig): JSON
  deleteJob(input: AwsGlueDeleteJobInput!, config: AwsConfig): AwsGlueDeleteJobOutput
  deletePartition(input: AwsGlueDeletePartitionInput!, config: AwsConfig): JSON
  deleteResourcePolicy(input: AwsGlueDeleteResourcePolicyInput, config: AwsConfig): JSON
  deleteSecurityConfiguration(input: AwsGlueDeleteSecurityConfigurationInput!, config: AwsConfig): JSON
  deleteTable(input: AwsGlueDeleteTableInput!, config: AwsConfig): JSON
  deleteTableVersion(input: AwsGlueDeleteTableVersionInput!, config: AwsConfig): JSON
  deleteTrigger(input: AwsGlueDeleteTriggerInput!, config: AwsConfig): AwsGlueDeleteTriggerOutput
  deleteUserDefinedFunction(input: AwsGlueDeleteUserDefinedFunctionInput!, config: AwsConfig): JSON
  deleteWorkflow(input: AwsGlueDeleteWorkflowInput!, config: AwsConfig): AwsGlueDeleteWorkflowOutput
  getCatalogImportStatus(input: AwsGlueGetCatalogImportStatusInput, config: AwsConfig): AwsGlueGetCatalogImportStatusOutput
  getClassifier(input: AwsGlueGetClassifierInput!, config: AwsConfig): AwsGlueGetClassifierOutput
  getClassifiers(input: AwsGlueGetClassifiersInput, config: AwsConfig): AwsGlueGetClassifiersOutput
  getConnection(input: AwsGlueGetConnectionInput!, config: AwsConfig): AwsGlueGetConnectionOutput
  getConnections(input: AwsGlueGetConnectionsInput, config: AwsConfig): AwsGlueGetConnectionsOutput
  getCrawler(input: AwsGlueGetCrawlerInput!, config: AwsConfig): AwsGlueGetCrawlerOutput
  getCrawlerMetrics(input: AwsGlueGetCrawlerMetricsInput, config: AwsConfig): AwsGlueGetCrawlerMetricsOutput
  getCrawlers(input: AwsGlueGetCrawlersInput, config: AwsConfig): AwsGlueGetCrawlersOutput
  getDataCatalogEncryptionSettings(input: AwsGlueGetDataCatalogEncryptionSettingsInput, config: AwsConfig): AwsGlueGetDataCatalogEncryptionSettingsOutput
  getDatabase(input: AwsGlueGetDatabaseInput!, config: AwsConfig): AwsGlueGetDatabaseOutput
  getDatabases(input: AwsGlueGetDatabasesInput, config: AwsConfig): AwsGlueGetDatabasesOutput
  getDataflowGraph(input: AwsGlueGetDataflowGraphInput, config: AwsConfig): AwsGlueGetDataflowGraphOutput
  getDevEndpoint(input: AwsGlueGetDevEndpointInput!, config: AwsConfig): AwsGlueGetDevEndpointOutput
  getDevEndpoints(input: AwsGlueGetDevEndpointsInput, config: AwsConfig): AwsGlueGetDevEndpointsOutput
  getJob(input: AwsGlueGetJobInput!, config: AwsConfig): AwsGlueGetJobOutput
  getJobRun(input: AwsGlueGetJobRunInput!, config: AwsConfig): AwsGlueGetJobRunOutput
  getJobRuns(input: AwsGlueGetJobRunsInput!, config: AwsConfig): AwsGlueGetJobRunsOutput
  getJobs(input: AwsGlueGetJobsInput, config: AwsConfig): AwsGlueGetJobsOutput
  getMapping(input: AwsGlueGetMappingInput!, config: AwsConfig): AwsGlueGetMappingOutput
  getPartition(input: AwsGlueGetPartitionInput!, config: AwsConfig): AwsGlueGetPartitionOutput
  getPartitions(input: AwsGlueGetPartitionsInput!, config: AwsConfig): AwsGlueGetPartitionsOutput
  getPlan(input: AwsGlueGetPlanInput!, config: AwsConfig): AwsGlueGetPlanOutput
  getResourcePolicy(input: JSON, config: AwsConfig): AwsGlueGetResourcePolicyOutput
  getSecurityConfiguration(input: AwsGlueGetSecurityConfigurationInput!, config: AwsConfig): AwsGlueGetSecurityConfigurationOutput
  getSecurityConfigurations(input: AwsGlueGetSecurityConfigurationsInput, config: AwsConfig): AwsGlueGetSecurityConfigurationsOutput
  getTable(input: AwsGlueGetTableInput!, config: AwsConfig): AwsGlueGetTableOutput
  getTableVersion(input: AwsGlueGetTableVersionInput!, config: AwsConfig): AwsGlueGetTableVersionOutput
  getTableVersions(input: AwsGlueGetTableVersionsInput!, config: AwsConfig): AwsGlueGetTableVersionsOutput
  getTables(input: AwsGlueGetTablesInput!, config: AwsConfig): AwsGlueGetTablesOutput
  getTags(input: AwsGlueGetTagsInput!, config: AwsConfig): AwsGlueGetTagsOutput
  getTrigger(input: AwsGlueGetTriggerInput!, config: AwsConfig): AwsGlueGetTriggerOutput
  getTriggers(input: AwsGlueGetTriggersInput, config: AwsConfig): AwsGlueGetTriggersOutput
  getUserDefinedFunction(input: AwsGlueGetUserDefinedFunctionInput!, config: AwsConfig): AwsGlueGetUserDefinedFunctionOutput
  getUserDefinedFunctions(input: AwsGlueGetUserDefinedFunctionsInput!, config: AwsConfig): AwsGlueGetUserDefinedFunctionsOutput
  getWorkflow(input: AwsGlueGetWorkflowInput!, config: AwsConfig): AwsGlueGetWorkflowOutput
  getWorkflowRun(input: AwsGlueGetWorkflowRunInput!, config: AwsConfig): AwsGlueGetWorkflowRunOutput
  getWorkflowRunProperties(input: AwsGlueGetWorkflowRunPropertiesInput!, config: AwsConfig): AwsGlueGetWorkflowRunPropertiesOutput
  getWorkflowRuns(input: AwsGlueGetWorkflowRunsInput!, config: AwsConfig): AwsGlueGetWorkflowRunsOutput
  importCatalogToGlue(input: AwsGlueImportCatalogToGlueInput, config: AwsConfig): JSON
  listCrawlers(input: AwsGlueListCrawlersInput, config: AwsConfig): AwsGlueListCrawlersOutput
  listDevEndpoints(input: AwsGlueListDevEndpointsInput, config: AwsConfig): AwsGlueListDevEndpointsOutput
  listJobs(input: AwsGlueListJobsInput, config: AwsConfig): AwsGlueListJobsOutput
  listTriggers(input: AwsGlueListTriggersInput, config: AwsConfig): AwsGlueListTriggersOutput
  listWorkflows(input: AwsGlueListWorkflowsInput, config: AwsConfig): AwsGlueListWorkflowsOutput
  putDataCatalogEncryptionSettings(input: AwsGluePutDataCatalogEncryptionSettingsInput!, config: AwsConfig): JSON
  putResourcePolicy(input: AwsGluePutResourcePolicyInput!, config: AwsConfig): AwsGluePutResourcePolicyOutput
  putWorkflowRunProperties(input: AwsGluePutWorkflowRunPropertiesInput!, config: AwsConfig): JSON
  resetJobBookmark(input: AwsGlueResetJobBookmarkInput!, config: AwsConfig): AwsGlueResetJobBookmarkOutput
  startCrawler(input: AwsGlueStartCrawlerInput!, config: AwsConfig): JSON
  startCrawlerSchedule(input: AwsGlueStartCrawlerScheduleInput!, config: AwsConfig): JSON
  startJobRun(input: AwsGlueStartJobRunInput!, config: AwsConfig): AwsGlueStartJobRunOutput
  startTrigger(input: AwsGlueStartTriggerInput!, config: AwsConfig): AwsGlueStartTriggerOutput
  startWorkflowRun(input: AwsGlueStartWorkflowRunInput!, config: AwsConfig): AwsGlueStartWorkflowRunOutput
  stopCrawler(input: AwsGlueStopCrawlerInput!, config: AwsConfig): JSON
  stopCrawlerSchedule(input: AwsGlueStopCrawlerScheduleInput!, config: AwsConfig): JSON
  stopTrigger(input: AwsGlueStopTriggerInput!, config: AwsConfig): AwsGlueStopTriggerOutput
  tagResource(input: AwsGlueTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsGlueUntagResourceInput!, config: AwsConfig): JSON
  updateClassifier(input: AwsGlueUpdateClassifierInput, config: AwsConfig): JSON
  updateConnection(input: AwsGlueUpdateConnectionInput!, config: AwsConfig): JSON
  updateCrawler(input: AwsGlueUpdateCrawlerInput!, config: AwsConfig): JSON
  updateCrawlerSchedule(input: AwsGlueUpdateCrawlerScheduleInput!, config: AwsConfig): JSON
  updateDatabase(input: AwsGlueUpdateDatabaseInput!, config: AwsConfig): JSON
  updateDevEndpoint(input: AwsGlueUpdateDevEndpointInput!, config: AwsConfig): JSON
  updateJob(input: AwsGlueUpdateJobInput!, config: AwsConfig): AwsGlueUpdateJobOutput
  updatePartition(input: AwsGlueUpdatePartitionInput!, config: AwsConfig): JSON
  updateTable(input: AwsGlueUpdateTableInput!, config: AwsConfig): JSON
  updateTrigger(input: AwsGlueUpdateTriggerInput!, config: AwsConfig): AwsGlueUpdateTriggerOutput
  updateUserDefinedFunction(input: AwsGlueUpdateUserDefinedFunctionInput!, config: AwsConfig): JSON
  updateWorkflow(input: AwsGlueUpdateWorkflowInput!, config: AwsConfig): AwsGlueUpdateWorkflowOutput
}

input AwsGlueBatchCreatePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionInputList: [AwsGlueS5Input]!
}

type AwsGlueBatchCreatePartitionOutput {
  Errors: [AwsGlueSv]
}

input AwsGlueBatchDeleteConnectionInput {
  CatalogId: String
  ConnectionNameList: [String]!
}

type AwsGlueBatchDeleteConnectionOutput {
  Succeeded: [String]
  Errors: JSON
}

input AwsGlueBatchDeletePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionsToDelete: [AwsGlueS15Input]!
}

type AwsGlueBatchDeletePartitionOutput {
  Errors: [AwsGlueSv]
}

input AwsGlueBatchDeleteTableInput {
  CatalogId: String
  DatabaseName: String!
  TablesToDelete: [String]!
}

type AwsGlueBatchDeleteTableOutput {
  Errors: [AwsGlueBatchDeleteTableOutputErrors]
}

type AwsGlueBatchDeleteTableOutputErrors {
  TableName: String
  ErrorDetail: AwsGlueSx
}

input AwsGlueBatchDeleteTableVersionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  VersionIds: [String]!
}

type AwsGlueBatchDeleteTableVersionOutput {
  Errors: [AwsGlueBatchDeleteTableVersionOutputErrors]
}

type AwsGlueBatchDeleteTableVersionOutputErrors {
  TableName: String
  VersionId: String
  ErrorDetail: AwsGlueSx
}

input AwsGlueBatchGetCrawlersInput {
  CrawlerNames: [String]!
}

type AwsGlueBatchGetCrawlersOutput {
  Crawlers: [AwsGlueS1m]
  CrawlersNotFound: [String]
}

input AwsGlueBatchGetDevEndpointsInput {
  DevEndpointNames: [String]!
}

type AwsGlueBatchGetDevEndpointsOutput {
  DevEndpoints: [AwsGlueS2p]
  DevEndpointsNotFound: [String]
}

input AwsGlueBatchGetJobsInput {
  JobNames: [String]!
}

type AwsGlueBatchGetJobsOutput {
  Jobs: [AwsGlueS30]
  JobsNotFound: [String]
}

input AwsGlueBatchGetPartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionsToGet: [AwsGlueS15Input]!
}

type AwsGlueBatchGetPartitionOutput {
  Partitions: [AwsGlueS3m]
  UnprocessedKeys: [AwsGlueS15]
}

input AwsGlueBatchGetTriggersInput {
  TriggerNames: [String]!
}

type AwsGlueBatchGetTriggersOutput {
  Triggers: [AwsGlueS3r]
  TriggersNotFound: [String]
}

input AwsGlueBatchGetWorkflowsInput {
  Names: [String]!
  IncludeGraph: Boolean
}

type AwsGlueBatchGetWorkflowsOutput {
  Workflows: [AwsGlueS49]
  MissingWorkflows: [String]
}

input AwsGlueBatchStopJobRunInput {
  JobName: String!
  JobRunIds: [String]!
}

type AwsGlueBatchStopJobRunOutput {
  SuccessfulSubmissions: [AwsGlueBatchStopJobRunOutputSuccessfulSubmissions]
  Errors: [AwsGlueBatchStopJobRunOutputErrors]
}

type AwsGlueBatchStopJobRunOutputErrors {
  JobName: String
  JobRunId: String
  ErrorDetail: AwsGlueSx
}

type AwsGlueBatchStopJobRunOutputSuccessfulSubmissions {
  JobName: String
  JobRunId: String
}

input AwsGlueCreateClassifierCsvClassifierInput {
  Name: String!
  Delimiter: String
  QuoteSymbol: String
  ContainsHeader: String
  Header: [String]
  DisableValueTrimming: Boolean
  AllowSingleColumn: Boolean
}

input AwsGlueCreateClassifierGrokClassifierInput {
  Classification: String!
  Name: String!
  GrokPattern: String!
  CustomPatterns: String
}

input AwsGlueCreateClassifierInput {
  GrokClassifier: AwsGlueCreateClassifierGrokClassifierInput
  XMLClassifier: AwsGlueCreateClassifierXMLClassifierInput
  JsonClassifier: AwsGlueCreateClassifierJsonClassifierInput
  CsvClassifier: AwsGlueCreateClassifierCsvClassifierInput
}

input AwsGlueCreateClassifierJsonClassifierInput {
  Name: String!
  JsonPath: String!
}

input AwsGlueCreateClassifierXMLClassifierInput {
  Classification: String!
  Name: String!
  RowTag: String
}

input AwsGlueCreateConnectionInput {
  CatalogId: String
  ConnectionInput: AwsGlueS5jInput!
}

input AwsGlueCreateCrawlerInput {
  Name: String!
  Role: String!
  DatabaseName: String
  Description: String
  Targets: AwsGlueS1oInput!
  Schedule: String
  Classifiers: [String]
  TablePrefix: String
  SchemaChangePolicy: AwsGlueS23Input
  Configuration: String
  CrawlerSecurityConfiguration: String
  Tags: JSON
}

input AwsGlueCreateDatabaseInput {
  CatalogId: String
  DatabaseInput: AwsGlueS5xInput!
}

input AwsGlueCreateDevEndpointInput {
  EndpointName: String!
  RoleArn: String!
  SecurityGroupIds: [String]
  SubnetId: String
  PublicKey: String
  PublicKeys: [String]
  NumberOfNodes: Int
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
  SecurityConfiguration: String
  Tags: JSON
  Arguments: JSON
}

type AwsGlueCreateDevEndpointOutput {
  EndpointName: String
  Status: String
  SecurityGroupIds: [String]
  SubnetId: String
  RoleArn: String
  YarnEndpointAddress: String
  ZeppelinRemoteSparkInterpreterPort: Int
  NumberOfNodes: Int
  AvailabilityZone: String
  VpcId: String
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
  FailureReason: String
  SecurityConfiguration: String
  CreatedTimestamp: Date
  Arguments: JSON
}

input AwsGlueCreateJobInput {
  Name: String!
  Description: String
  LogUri: String
  Role: String!
  ExecutionProperty: AwsGlueS33Input
  Command: AwsGlueS35Input!
  DefaultArguments: JSON
  Connections: AwsGlueS39Input
  MaxRetries: Int
  AllocatedCapacity: Int
  Timeout: Int
  MaxCapacity: JSON
  SecurityConfiguration: String
  Tags: JSON
  NotificationProperty: AwsGlueS3gInput
  NumberOfWorkers: Int
  WorkerType: String
}

type AwsGlueCreateJobOutput {
  Name: String
}

input AwsGlueCreatePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionInput: AwsGlueS5Input!
}

input AwsGlueCreateScriptInput {
  DagNodes: [AwsGlueS67Input]
  DagEdges: [AwsGlueS6fInput]
  Language: String
}

type AwsGlueCreateScriptOutput {
  PythonScript: String
  ScalaCode: String
}

input AwsGlueCreateSecurityConfigurationInput {
  Name: String!
  EncryptionConfiguration: AwsGlueS6mInput!
}

type AwsGlueCreateSecurityConfigurationOutput {
  Name: String
  CreatedTimestamp: Date
}

input AwsGlueCreateTableInput {
  CatalogId: String
  DatabaseName: String!
  TableInput: AwsGlueS6xInput!
}

input AwsGlueCreateTriggerInput {
  Name: String!
  WorkflowName: String
  Type: String!
  Schedule: String
  Predicate: AwsGlueS3xInput
  Actions: [AwsGlueS3vInput]!
  Description: String
  StartOnCreation: Boolean
  Tags: JSON
}

type AwsGlueCreateTriggerOutput {
  Name: String
}

input AwsGlueCreateUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionInput: AwsGlueS76Input!
}

input AwsGlueCreateWorkflowInput {
  Name: String!
  Description: String
  DefaultRunProperties: JSON
  Tags: JSON
}

type AwsGlueCreateWorkflowOutput {
  Name: String
}

input AwsGlueDeleteClassifierInput {
  Name: String!
}

input AwsGlueDeleteConnectionInput {
  CatalogId: String
  ConnectionName: String!
}

input AwsGlueDeleteCrawlerInput {
  Name: String!
}

input AwsGlueDeleteDatabaseInput {
  CatalogId: String
  Name: String!
}

input AwsGlueDeleteDevEndpointInput {
  EndpointName: String!
}

input AwsGlueDeleteJobInput {
  JobName: String!
}

type AwsGlueDeleteJobOutput {
  JobName: String
}

input AwsGlueDeletePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionValues: [String]!
}

input AwsGlueDeleteResourcePolicyInput {
  PolicyHashCondition: String
}

input AwsGlueDeleteSecurityConfigurationInput {
  Name: String!
}

input AwsGlueDeleteTableInput {
  CatalogId: String
  DatabaseName: String!
  Name: String!
}

input AwsGlueDeleteTableVersionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  VersionId: String!
}

input AwsGlueDeleteTriggerInput {
  Name: String!
}

type AwsGlueDeleteTriggerOutput {
  Name: String
}

input AwsGlueDeleteUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionName: String!
}

input AwsGlueDeleteWorkflowInput {
  Name: String!
}

type AwsGlueDeleteWorkflowOutput {
  Name: String
}

input AwsGlueGetCatalogImportStatusInput {
  CatalogId: String
}

type AwsGlueGetCatalogImportStatusOutput {
  ImportStatus: AwsGlueGetCatalogImportStatusOutputImportStatus
}

type AwsGlueGetCatalogImportStatusOutputImportStatus {
  ImportCompleted: Boolean
  ImportTime: Date
  ImportedBy: String
}

input AwsGlueGetClassifierInput {
  Name: String!
}

type AwsGlueGetClassifierOutput {
  Classifier: AwsGlueS8c
}

input AwsGlueGetClassifiersInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetClassifiersOutput {
  Classifiers: [AwsGlueS8c]
  NextToken: String
}

input AwsGlueGetConnectionInput {
  CatalogId: String
  Name: String!
  HidePassword: Boolean
}

type AwsGlueGetConnectionOutput {
  Connection: AwsGlueS8o
}

input AwsGlueGetConnectionsFilterInput {
  MatchCriteria: [String]
  ConnectionType: String
}

input AwsGlueGetConnectionsInput {
  CatalogId: String
  Filter: AwsGlueGetConnectionsFilterInput
  HidePassword: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetConnectionsOutput {
  ConnectionList: [AwsGlueS8o]
  NextToken: String
}

input AwsGlueGetCrawlerInput {
  Name: String!
}

input AwsGlueGetCrawlerMetricsInput {
  CrawlerNameList: [String]
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetCrawlerMetricsOutput {
  CrawlerMetricsList: [AwsGlueGetCrawlerMetricsOutputCrawlerMetricsList]
  NextToken: String
}

type AwsGlueGetCrawlerMetricsOutputCrawlerMetricsList {
  CrawlerName: String
  TimeLeftSeconds: JSON
  StillEstimating: Boolean
  LastRuntimeSeconds: JSON
  MedianRuntimeSeconds: JSON
  TablesCreated: Int
  TablesUpdated: Int
  TablesDeleted: Int
}

type AwsGlueGetCrawlerOutput {
  Crawler: AwsGlueS1m
}

input AwsGlueGetCrawlersInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetCrawlersOutput {
  Crawlers: [AwsGlueS1m]
  NextToken: String
}

input AwsGlueGetDatabaseInput {
  CatalogId: String
  Name: String!
}

type AwsGlueGetDatabaseOutput {
  Database: AwsGlueS9a
}

input AwsGlueGetDatabasesInput {
  CatalogId: String
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetDatabasesOutput {
  DatabaseList: [AwsGlueS9a]!
  NextToken: String
}

input AwsGlueGetDataCatalogEncryptionSettingsInput {
  CatalogId: String
}

type AwsGlueGetDataCatalogEncryptionSettingsOutput {
  DataCatalogEncryptionSettings: AwsGlueS94
}

input AwsGlueGetDataflowGraphInput {
  PythonScript: String
}

type AwsGlueGetDataflowGraphOutput {
  DagNodes: [AwsGlueS67]
  DagEdges: [AwsGlueS6f]
}

input AwsGlueGetDevEndpointInput {
  EndpointName: String!
}

type AwsGlueGetDevEndpointOutput {
  DevEndpoint: AwsGlueS2p
}

input AwsGlueGetDevEndpointsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetDevEndpointsOutput {
  DevEndpoints: [AwsGlueS2p]
  NextToken: String
}

input AwsGlueGetJobInput {
  JobName: String!
}

type AwsGlueGetJobOutput {
  Job: AwsGlueS30
}

input AwsGlueGetJobRunInput {
  JobName: String!
  RunId: String!
  PredecessorsIncluded: Boolean
}

type AwsGlueGetJobRunOutput {
  JobRun: AwsGlueS4l
}

input AwsGlueGetJobRunsInput {
  JobName: String!
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetJobRunsOutput {
  JobRuns: [AwsGlueS4l]
  NextToken: String
}

input AwsGlueGetJobsInput {
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetJobsOutput {
  Jobs: [AwsGlueS30]
  NextToken: String
}

input AwsGlueGetMappingInput {
  Source: AwsGlueS9tInput!
  Sinks: [AwsGlueS9tInput]
  Location: AwsGlueS9vInput
}

type AwsGlueGetMappingOutput {
  Mapping: [AwsGlueS9x]!
}

input AwsGlueGetPartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionValues: [String]!
}

type AwsGlueGetPartitionOutput {
  Partition: AwsGlueS3m
}

input AwsGlueGetPartitionsInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  Expression: String
  NextToken: String
  Segment: AwsGlueGetPartitionsSegmentInput
  MaxResults: Int
}

type AwsGlueGetPartitionsOutput {
  Partitions: [AwsGlueS3m]
  NextToken: String
}

input AwsGlueGetPartitionsSegmentInput {
  SegmentNumber: Int!
  TotalSegments: Int!
}

input AwsGlueGetPlanInput {
  Mapping: [AwsGlueS9xInput]!
  Source: AwsGlueS9tInput!
  Sinks: [AwsGlueS9tInput]
  Location: AwsGlueS9vInput
  Language: String
}

type AwsGlueGetPlanOutput {
  PythonScript: String
  ScalaCode: String
}

type AwsGlueGetResourcePolicyOutput {
  PolicyInJson: String
  PolicyHash: String
  CreateTime: Date
  UpdateTime: Date
}

input AwsGlueGetSecurityConfigurationInput {
  Name: String!
}

type AwsGlueGetSecurityConfigurationOutput {
  SecurityConfiguration: AwsGlueSag
}

input AwsGlueGetSecurityConfigurationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetSecurityConfigurationsOutput {
  SecurityConfigurations: [AwsGlueSag]
  NextToken: String
}

input AwsGlueGetTableInput {
  CatalogId: String
  DatabaseName: String!
  Name: String!
}

type AwsGlueGetTableOutput {
  Table: AwsGlueSam
}

input AwsGlueGetTablesInput {
  CatalogId: String
  DatabaseName: String!
  Expression: String
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetTablesOutput {
  TableList: [AwsGlueSam]
  NextToken: String
}

input AwsGlueGetTableVersionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  VersionId: String
}

type AwsGlueGetTableVersionOutput {
  TableVersion: AwsGlueSap
}

input AwsGlueGetTableVersionsInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetTableVersionsOutput {
  TableVersions: [AwsGlueSap]
  NextToken: String
}

input AwsGlueGetTagsInput {
  ResourceArn: String!
}

type AwsGlueGetTagsOutput {
  Tags: JSON
}

input AwsGlueGetTriggerInput {
  Name: String!
}

type AwsGlueGetTriggerOutput {
  Trigger: AwsGlueS3r
}

input AwsGlueGetTriggersInput {
  NextToken: String
  DependentJobName: String
  MaxResults: Int
}

type AwsGlueGetTriggersOutput {
  Triggers: [AwsGlueS3r]
  NextToken: String
}

input AwsGlueGetUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionName: String!
}

type AwsGlueGetUserDefinedFunctionOutput {
  UserDefinedFunction: AwsGlueSb6
}

input AwsGlueGetUserDefinedFunctionsInput {
  CatalogId: String
  DatabaseName: String!
  Pattern: String!
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetUserDefinedFunctionsOutput {
  UserDefinedFunctions: [AwsGlueSb6]
  NextToken: String
}

input AwsGlueGetWorkflowInput {
  Name: String!
  IncludeGraph: Boolean
}

type AwsGlueGetWorkflowOutput {
  Workflow: AwsGlueS49
}

input AwsGlueGetWorkflowRunInput {
  Name: String!
  RunId: String!
  IncludeGraph: Boolean
}

type AwsGlueGetWorkflowRunOutput {
  Run: AwsGlueS4b
}

input AwsGlueGetWorkflowRunPropertiesInput {
  Name: String!
  RunId: String!
}

type AwsGlueGetWorkflowRunPropertiesOutput {
  RunProperties: JSON
}

input AwsGlueGetWorkflowRunsInput {
  Name: String!
  IncludeGraph: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetWorkflowRunsOutput {
  Runs: [AwsGlueS4b]
  NextToken: String
}

input AwsGlueImportCatalogToGlueInput {
  CatalogId: String
}

input AwsGlueListCrawlersInput {
  MaxResults: Int
  NextToken: String
  Tags: JSON
}

type AwsGlueListCrawlersOutput {
  CrawlerNames: [String]
  NextToken: String
}

input AwsGlueListDevEndpointsInput {
  NextToken: String
  MaxResults: Int
  Tags: JSON
}

type AwsGlueListDevEndpointsOutput {
  DevEndpointNames: [String]
  NextToken: String
}

input AwsGlueListJobsInput {
  NextToken: String
  MaxResults: Int
  Tags: JSON
}

type AwsGlueListJobsOutput {
  JobNames: [String]
  NextToken: String
}

input AwsGlueListTriggersInput {
  NextToken: String
  DependentJobName: String
  MaxResults: Int
  Tags: JSON
}

type AwsGlueListTriggersOutput {
  TriggerNames: [String]
  NextToken: String
}

input AwsGlueListWorkflowsInput {
  NextToken: String
  MaxResults: Int
}

type AwsGlueListWorkflowsOutput {
  Workflows: [String]
  NextToken: String
}

input AwsGluePutDataCatalogEncryptionSettingsInput {
  CatalogId: String
  DataCatalogEncryptionSettings: AwsGlueS94Input!
}

input AwsGluePutResourcePolicyInput {
  PolicyInJson: String!
  PolicyHashCondition: String
  PolicyExistsCondition: String
}

type AwsGluePutResourcePolicyOutput {
  PolicyHash: String
}

input AwsGluePutWorkflowRunPropertiesInput {
  Name: String!
  RunId: String!
  RunProperties: JSON!
}

input AwsGlueResetJobBookmarkInput {
  JobName: String!
}

type AwsGlueResetJobBookmarkOutput {
  JobBookmarkEntry: AwsGlueResetJobBookmarkOutputJobBookmarkEntry
}

type AwsGlueResetJobBookmarkOutputJobBookmarkEntry {
  JobName: String
  Version: Int
  Run: Int
  Attempt: Int
  JobBookmark: String
}

type AwsGlueS15 {
  Values: [String]!
}

input AwsGlueS15Input {
  Values: [String]!
}

type AwsGlueS1m {
  Name: String
  Role: String
  Targets: AwsGlueS1o
  DatabaseName: String
  Description: String
  Classifiers: [String]
  SchemaChangePolicy: AwsGlueS23
  State: String
  TablePrefix: String
  Schedule: AwsGlueS1mSchedule
  CrawlElapsedTime: JSON
  CreationTime: Date
  LastUpdated: Date
  LastCrawl: AwsGlueS1mLastCrawl
  Version: JSON
  Configuration: String
  CrawlerSecurityConfiguration: String
}

type AwsGlueS1mLastCrawl {
  Status: String
  ErrorMessage: String
  LogGroup: String
  LogStream: String
  MessagePrefix: String
  StartTime: Date
}

type AwsGlueS1mSchedule {
  ScheduleExpression: String
  State: String
}

type AwsGlueS1o {
  S3Targets: [AwsGlueS1oS3Targets]
  JdbcTargets: [AwsGlueS1oJdbcTargets]
  DynamoDBTargets: [AwsGlueS1oDynamoDBTargets]
  CatalogTargets: [AwsGlueS1oCatalogTargets]
}

type AwsGlueS1oCatalogTargets {
  DatabaseName: String!
  Tables: [String]!
}

input AwsGlueS1oCatalogTargetsInput {
  DatabaseName: String!
  Tables: [String]!
}

type AwsGlueS1oDynamoDBTargets {
  Path: String
}

input AwsGlueS1oDynamoDBTargetsInput {
  Path: String
}

input AwsGlueS1oInput {
  S3Targets: [AwsGlueS1oS3TargetsInput]
  JdbcTargets: [AwsGlueS1oJdbcTargetsInput]
  DynamoDBTargets: [AwsGlueS1oDynamoDBTargetsInput]
  CatalogTargets: [AwsGlueS1oCatalogTargetsInput]
}

type AwsGlueS1oJdbcTargets {
  ConnectionName: String
  Path: String
  Exclusions: [String]
}

input AwsGlueS1oJdbcTargetsInput {
  ConnectionName: String
  Path: String
  Exclusions: [String]
}

type AwsGlueS1oS3Targets {
  Path: String
  Exclusions: [String]
}

input AwsGlueS1oS3TargetsInput {
  Path: String
  Exclusions: [String]
}

type AwsGlueS23 {
  UpdateBehavior: String
  DeleteBehavior: String
}

input AwsGlueS23Input {
  UpdateBehavior: String
  DeleteBehavior: String
}

type AwsGlueS2p {
  EndpointName: String
  RoleArn: String
  SecurityGroupIds: [String]
  SubnetId: String
  YarnEndpointAddress: String
  PrivateAddress: String
  ZeppelinRemoteSparkInterpreterPort: Int
  PublicAddress: String
  Status: String
  NumberOfNodes: Int
  AvailabilityZone: String
  VpcId: String
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
  FailureReason: String
  LastUpdateStatus: String
  CreatedTimestamp: Date
  LastModifiedTimestamp: Date
  PublicKey: String
  PublicKeys: [String]
  SecurityConfiguration: String
  Arguments: JSON
}

type AwsGlueS30 {
  Name: String
  Description: String
  LogUri: String
  Role: String
  CreatedOn: Date
  LastModifiedOn: Date
  ExecutionProperty: AwsGlueS33
  Command: AwsGlueS35
  DefaultArguments: JSON
  Connections: AwsGlueS39
  MaxRetries: Int
  AllocatedCapacity: Int
  Timeout: Int
  MaxCapacity: JSON
  WorkerType: String
  NumberOfWorkers: Int
  SecurityConfiguration: String
  NotificationProperty: AwsGlueS3g
}

type AwsGlueS33 {
  MaxConcurrentRuns: Int
}

input AwsGlueS33Input {
  MaxConcurrentRuns: Int
}

type AwsGlueS35 {
  Name: String
  ScriptLocation: String
  PythonVersion: String
}

input AwsGlueS35Input {
  Name: String
  ScriptLocation: String
  PythonVersion: String
}

type AwsGlueS39 {
  Connections: [String]
}

input AwsGlueS39Input {
  Connections: [String]
}

type AwsGlueS3g {
  NotifyDelayAfter: Int
}

input AwsGlueS3gInput {
  NotifyDelayAfter: Int
}

type AwsGlueS3m {
  Values: [String]
  DatabaseName: String
  TableName: String
  CreationTime: Date
  LastAccessTime: Date
  StorageDescriptor: AwsGlueS9
  Parameters: JSON
  LastAnalyzedTime: Date
}

type AwsGlueS3r {
  Name: String
  WorkflowName: String
  Id: String
  Type: String
  State: String
  Description: String
  Schedule: String
  Actions: [AwsGlueS3v]
  Predicate: AwsGlueS3x
}

type AwsGlueS3v {
  JobName: String
  Arguments: JSON
  Timeout: Int
  SecurityConfiguration: String
  NotificationProperty: AwsGlueS3g
  CrawlerName: String
}

input AwsGlueS3vInput {
  JobName: String
  Arguments: JSON
  Timeout: Int
  SecurityConfiguration: String
  NotificationProperty: AwsGlueS3gInput
  CrawlerName: String
}

type AwsGlueS3x {
  Logical: String
  Conditions: [AwsGlueS3xConditions]
}

type AwsGlueS3xConditions {
  LogicalOperator: String
  JobName: String
  State: String
  CrawlerName: String
  CrawlState: String
}

input AwsGlueS3xConditionsInput {
  LogicalOperator: String
  JobName: String
  State: String
  CrawlerName: String
  CrawlState: String
}

input AwsGlueS3xInput {
  Logical: String
  Conditions: [AwsGlueS3xConditionsInput]
}

type AwsGlueS49 {
  Name: String
  Description: String
  DefaultRunProperties: JSON
  CreatedOn: Date
  LastModifiedOn: Date
  LastRun: AwsGlueS4b
  Graph: AwsGlueS4e
}

type AwsGlueS4b {
  Name: String
  WorkflowRunId: String
  WorkflowRunProperties: JSON
  StartedOn: Date
  CompletedOn: Date
  Status: String
  Statistics: AwsGlueS4bStatistics
  Graph: AwsGlueS4e
}

type AwsGlueS4bStatistics {
  TotalActions: Int
  TimeoutActions: Int
  FailedActions: Int
  StoppedActions: Int
  SucceededActions: Int
  RunningActions: Int
}

type AwsGlueS4e {
  Nodes: [AwsGlueS4eNodes]
  Edges: [AwsGlueS4eEdges]
}

type AwsGlueS4eEdges {
  SourceId: String
  DestinationId: String
}

type AwsGlueS4eNodes {
  Type: String
  Name: String
  UniqueId: String
  TriggerDetails: AwsGlueS4eNodesTriggerDetails
  JobDetails: AwsGlueS4eNodesJobDetails
  CrawlerDetails: AwsGlueS4eNodesCrawlerDetails
}

type AwsGlueS4eNodesCrawlerDetails {
  Crawls: [AwsGlueS4eNodesCrawlerDetailsCrawls]
}

type AwsGlueS4eNodesCrawlerDetailsCrawls {
  State: String
  StartedOn: Date
  CompletedOn: Date
  ErrorMessage: String
  LogGroup: String
  LogStream: String
}

type AwsGlueS4eNodesJobDetails {
  JobRuns: [AwsGlueS4l]
}

type AwsGlueS4eNodesTriggerDetails {
  Trigger: AwsGlueS3r
}

type AwsGlueS4l {
  Id: String
  Attempt: Int
  PreviousRunId: String
  TriggerName: String
  JobName: String
  StartedOn: Date
  LastModifiedOn: Date
  CompletedOn: Date
  JobRunState: String
  Arguments: JSON
  ErrorMessage: String
  PredecessorRuns: [AwsGlueS4lPredecessorRuns]
  AllocatedCapacity: Int
  ExecutionTime: Int
  Timeout: Int
  MaxCapacity: JSON
  WorkerType: String
  NumberOfWorkers: Int
  SecurityConfiguration: String
  LogGroupName: String
  NotificationProperty: AwsGlueS3g
}

type AwsGlueS4lPredecessorRuns {
  JobName: String
  RunId: String
}

input AwsGlueS5Input {
  Values: [String]
  LastAccessTime: Date
  StorageDescriptor: AwsGlueS9Input
  Parameters: JSON
  LastAnalyzedTime: Date
}

input AwsGlueS5jInput {
  Name: String!
  Description: String
  ConnectionType: String!
  MatchCriteria: [String]
  ConnectionProperties: JSON!
  PhysicalConnectionRequirements: AwsGlueS5oInput
}

type AwsGlueS5o {
  SubnetId: String
  SecurityGroupIdList: [String]
  AvailabilityZone: String
}

input AwsGlueS5oInput {
  SubnetId: String
  SecurityGroupIdList: [String]
  AvailabilityZone: String
}

input AwsGlueS5xInput {
  Name: String!
  Description: String
  LocationUri: String
  Parameters: JSON
}

type AwsGlueS67 {
  Id: String!
  NodeType: String!
  Args: [AwsGlueS6b]!
  LineNumber: Int
}

input AwsGlueS67Input {
  Id: String!
  NodeType: String!
  Args: [AwsGlueS6bInput]!
  LineNumber: Int
}

type AwsGlueS6b {
  Name: String!
  Value: String!
  Param: Boolean
}

input AwsGlueS6bInput {
  Name: String!
  Value: String!
  Param: Boolean
}

type AwsGlueS6f {
  Source: String!
  Target: String!
  TargetParameter: String
}

input AwsGlueS6fInput {
  Source: String!
  Target: String!
  TargetParameter: String
}

type AwsGlueS6m {
  S3Encryption: [AwsGlueS6mS3Encryption]
  CloudWatchEncryption: AwsGlueS6mCloudWatchEncryption
  JobBookmarksEncryption: AwsGlueS6mJobBookmarksEncryption
}

type AwsGlueS6mCloudWatchEncryption {
  CloudWatchEncryptionMode: String
  KmsKeyArn: String
}

input AwsGlueS6mCloudWatchEncryptionInput {
  CloudWatchEncryptionMode: String
  KmsKeyArn: String
}

input AwsGlueS6mInput {
  S3Encryption: [AwsGlueS6mS3EncryptionInput]
  CloudWatchEncryption: AwsGlueS6mCloudWatchEncryptionInput
  JobBookmarksEncryption: AwsGlueS6mJobBookmarksEncryptionInput
}

type AwsGlueS6mJobBookmarksEncryption {
  JobBookmarksEncryptionMode: String
  KmsKeyArn: String
}

input AwsGlueS6mJobBookmarksEncryptionInput {
  JobBookmarksEncryptionMode: String
  KmsKeyArn: String
}

type AwsGlueS6mS3Encryption {
  S3EncryptionMode: String
  KmsKeyArn: String
}

input AwsGlueS6mS3EncryptionInput {
  S3EncryptionMode: String
  KmsKeyArn: String
}

input AwsGlueS6xInput {
  Name: String!
  Description: String
  Owner: String
  LastAccessTime: Date
  LastAnalyzedTime: Date
  Retention: Int
  StorageDescriptor: AwsGlueS9Input
  PartitionKeys: [AwsGlueSaInput]
  ViewOriginalText: String
  ViewExpandedText: String
  TableType: String
  Parameters: JSON
}

input AwsGlueS76Input {
  FunctionName: String
  ClassName: String
  OwnerName: String
  OwnerType: String
  ResourceUris: [AwsGlueS78Input]
}

type AwsGlueS78 {
  ResourceType: String
  Uri: String
}

input AwsGlueS78Input {
  ResourceType: String
  Uri: String
}

type AwsGlueS8c {
  GrokClassifier: AwsGlueS8cGrokClassifier
  XMLClassifier: AwsGlueS8cXMLClassifier
  JsonClassifier: AwsGlueS8cJsonClassifier
  CsvClassifier: AwsGlueS8cCsvClassifier
}

type AwsGlueS8cCsvClassifier {
  Name: String!
  CreationTime: Date
  LastUpdated: Date
  Version: JSON
  Delimiter: String
  QuoteSymbol: String
  ContainsHeader: String
  Header: [String]
  DisableValueTrimming: Boolean
  AllowSingleColumn: Boolean
}

type AwsGlueS8cGrokClassifier {
  Name: String!
  Classification: String!
  CreationTime: Date
  LastUpdated: Date
  Version: JSON
  GrokPattern: String!
  CustomPatterns: String
}

type AwsGlueS8cJsonClassifier {
  Name: String!
  CreationTime: Date
  LastUpdated: Date
  Version: JSON
  JsonPath: String!
}

type AwsGlueS8cXMLClassifier {
  Name: String!
  Classification: String!
  CreationTime: Date
  LastUpdated: Date
  Version: JSON
  RowTag: String
}

type AwsGlueS8o {
  Name: String
  Description: String
  ConnectionType: String
  MatchCriteria: [String]
  ConnectionProperties: JSON
  PhysicalConnectionRequirements: AwsGlueS5o
  CreationTime: Date
  LastUpdatedTime: Date
  LastUpdatedBy: String
}

type AwsGlueS9 {
  Columns: [AwsGlueSa]
  Location: String
  InputFormat: String
  OutputFormat: String
  Compressed: Boolean
  NumberOfBuckets: Int
  SerdeInfo: AwsGlueS9SerdeInfo
  BucketColumns: [String]
  SortColumns: [AwsGlueS9SortColumns]
  Parameters: JSON
  SkewedInfo: AwsGlueS9SkewedInfo
  StoredAsSubDirectories: Boolean
}

type AwsGlueS94 {
  EncryptionAtRest: AwsGlueS94EncryptionAtRest
  ConnectionPasswordEncryption: AwsGlueS94ConnectionPasswordEncryption
}

type AwsGlueS94ConnectionPasswordEncryption {
  ReturnConnectionPasswordEncrypted: Boolean!
  AwsKmsKeyId: String
}

input AwsGlueS94ConnectionPasswordEncryptionInput {
  ReturnConnectionPasswordEncrypted: Boolean!
  AwsKmsKeyId: String
}

type AwsGlueS94EncryptionAtRest {
  CatalogEncryptionMode: String!
  SseAwsKmsKeyId: String
}

input AwsGlueS94EncryptionAtRestInput {
  CatalogEncryptionMode: String!
  SseAwsKmsKeyId: String
}

input AwsGlueS94Input {
  EncryptionAtRest: AwsGlueS94EncryptionAtRestInput
  ConnectionPasswordEncryption: AwsGlueS94ConnectionPasswordEncryptionInput
}

type AwsGlueS9a {
  Name: String!
  Description: String
  LocationUri: String
  Parameters: JSON
  CreateTime: Date
}

input AwsGlueS9Input {
  Columns: [AwsGlueSaInput]
  Location: String
  InputFormat: String
  OutputFormat: String
  Compressed: Boolean
  NumberOfBuckets: Int
  SerdeInfo: AwsGlueS9SerdeInfoInput
  BucketColumns: [String]
  SortColumns: [AwsGlueS9SortColumnsInput]
  Parameters: JSON
  SkewedInfo: AwsGlueS9SkewedInfoInput
  StoredAsSubDirectories: Boolean
}

type AwsGlueS9SerdeInfo {
  Name: String
  SerializationLibrary: String
  Parameters: JSON
}

input AwsGlueS9SerdeInfoInput {
  Name: String
  SerializationLibrary: String
  Parameters: JSON
}

type AwsGlueS9SkewedInfo {
  SkewedColumnNames: [String]
  SkewedColumnValues: [String]
  SkewedColumnValueLocationMaps: JSON
}

input AwsGlueS9SkewedInfoInput {
  SkewedColumnNames: [String]
  SkewedColumnValues: [String]
  SkewedColumnValueLocationMaps: JSON
}

type AwsGlueS9SortColumns {
  Column: String!
  SortOrder: Int!
}

input AwsGlueS9SortColumnsInput {
  Column: String!
  SortOrder: Int!
}

input AwsGlueS9tInput {
  DatabaseName: String!
  TableName: String!
}

input AwsGlueS9vInput {
  Jdbc: [AwsGlueS6bInput]
  S3: [AwsGlueS6bInput]
  DynamoDB: [AwsGlueS6bInput]
}

type AwsGlueS9x {
  SourceTable: String
  SourcePath: String
  SourceType: String
  TargetTable: String
  TargetPath: String
  TargetType: String
}

input AwsGlueS9xInput {
  SourceTable: String
  SourcePath: String
  SourceType: String
  TargetTable: String
  TargetPath: String
  TargetType: String
}

type AwsGlueSa {
  Name: String!
  Type: String
  Comment: String
}

type AwsGlueSag {
  Name: String
  CreatedTimeStamp: Date
  EncryptionConfiguration: AwsGlueS6m
}

input AwsGlueSaInput {
  Name: String!
  Type: String
  Comment: String
}

type AwsGlueSam {
  Name: String!
  DatabaseName: String
  Description: String
  Owner: String
  CreateTime: Date
  UpdateTime: Date
  LastAccessTime: Date
  LastAnalyzedTime: Date
  Retention: Int
  StorageDescriptor: AwsGlueS9
  PartitionKeys: [AwsGlueSa]
  ViewOriginalText: String
  ViewExpandedText: String
  TableType: String
  Parameters: JSON
  CreatedBy: String
}

type AwsGlueSap {
  Table: AwsGlueSam
  VersionId: String
}

type AwsGlueSb6 {
  FunctionName: String
  ClassName: String
  OwnerName: String
  OwnerType: String
  CreateTime: Date
  ResourceUris: [AwsGlueS78]
}

input AwsGlueStartCrawlerInput {
  Name: String!
}

input AwsGlueStartCrawlerScheduleInput {
  CrawlerName: String!
}

input AwsGlueStartJobRunInput {
  JobName: String!
  JobRunId: String
  Arguments: JSON
  AllocatedCapacity: Int
  Timeout: Int
  MaxCapacity: JSON
  SecurityConfiguration: String
  NotificationProperty: AwsGlueS3gInput
  WorkerType: String
  NumberOfWorkers: Int
}

type AwsGlueStartJobRunOutput {
  JobRunId: String
}

input AwsGlueStartTriggerInput {
  Name: String!
}

type AwsGlueStartTriggerOutput {
  Name: String
}

input AwsGlueStartWorkflowRunInput {
  Name: String!
}

type AwsGlueStartWorkflowRunOutput {
  RunId: String
}

input AwsGlueStopCrawlerInput {
  Name: String!
}

input AwsGlueStopCrawlerScheduleInput {
  CrawlerName: String!
}

input AwsGlueStopTriggerInput {
  Name: String!
}

type AwsGlueStopTriggerOutput {
  Name: String
}

type AwsGlueSv {
  PartitionValues: [String]
  ErrorDetail: AwsGlueSx
}

type AwsGlueSx {
  ErrorCode: String
  ErrorMessage: String
}

input AwsGlueTagResourceInput {
  ResourceArn: String!
  TagsToAdd: JSON!
}

input AwsGlueUntagResourceInput {
  ResourceArn: String!
  TagsToRemove: [String]!
}

input AwsGlueUpdateClassifierCsvClassifierInput {
  Name: String!
  Delimiter: String
  QuoteSymbol: String
  ContainsHeader: String
  Header: [String]
  DisableValueTrimming: Boolean
  AllowSingleColumn: Boolean
}

input AwsGlueUpdateClassifierGrokClassifierInput {
  Name: String!
  Classification: String
  GrokPattern: String
  CustomPatterns: String
}

input AwsGlueUpdateClassifierInput {
  GrokClassifier: AwsGlueUpdateClassifierGrokClassifierInput
  XMLClassifier: AwsGlueUpdateClassifierXMLClassifierInput
  JsonClassifier: AwsGlueUpdateClassifierJsonClassifierInput
  CsvClassifier: AwsGlueUpdateClassifierCsvClassifierInput
}

input AwsGlueUpdateClassifierJsonClassifierInput {
  Name: String!
  JsonPath: String
}

input AwsGlueUpdateClassifierXMLClassifierInput {
  Name: String!
  Classification: String
  RowTag: String
}

input AwsGlueUpdateConnectionInput {
  CatalogId: String
  Name: String!
  ConnectionInput: AwsGlueS5jInput!
}

input AwsGlueUpdateCrawlerInput {
  Name: String!
  Role: String
  DatabaseName: String
  Description: String
  Targets: AwsGlueS1oInput
  Schedule: String
  Classifiers: [String]
  TablePrefix: String
  SchemaChangePolicy: AwsGlueS23Input
  Configuration: String
  CrawlerSecurityConfiguration: String
}

input AwsGlueUpdateCrawlerScheduleInput {
  CrawlerName: String!
  Schedule: String
}

input AwsGlueUpdateDatabaseInput {
  CatalogId: String
  Name: String!
  DatabaseInput: AwsGlueS5xInput!
}

input AwsGlueUpdateDevEndpointCustomLibrariesInput {
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
}

input AwsGlueUpdateDevEndpointInput {
  EndpointName: String!
  PublicKey: String
  AddPublicKeys: [String]
  DeletePublicKeys: [String]
  CustomLibraries: AwsGlueUpdateDevEndpointCustomLibrariesInput
  UpdateEtlLibraries: Boolean
  DeleteArguments: [String]
  AddArguments: JSON
}

input AwsGlueUpdateJobInput {
  JobName: String!
  JobUpdate: AwsGlueUpdateJobJobUpdateInput!
}

input AwsGlueUpdateJobJobUpdateInput {
  Description: String
  LogUri: String
  Role: String
  ExecutionProperty: AwsGlueS33Input
  Command: AwsGlueS35Input
  DefaultArguments: JSON
  Connections: AwsGlueS39Input
  MaxRetries: Int
  AllocatedCapacity: Int
  Timeout: Int
  MaxCapacity: JSON
  WorkerType: String
  NumberOfWorkers: Int
  SecurityConfiguration: String
  NotificationProperty: AwsGlueS3gInput
}

type AwsGlueUpdateJobOutput {
  JobName: String
}

input AwsGlueUpdatePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionValueList: [String]!
  PartitionInput: AwsGlueS5Input!
}

input AwsGlueUpdateTableInput {
  CatalogId: String
  DatabaseName: String!
  TableInput: AwsGlueS6xInput!
  SkipArchive: Boolean
}

input AwsGlueUpdateTriggerInput {
  Name: String!
  TriggerUpdate: AwsGlueUpdateTriggerTriggerUpdateInput!
}

type AwsGlueUpdateTriggerOutput {
  Trigger: AwsGlueS3r
}

input AwsGlueUpdateTriggerTriggerUpdateInput {
  Name: String
  Description: String
  Schedule: String
  Actions: [AwsGlueS3vInput]
  Predicate: AwsGlueS3xInput
}

input AwsGlueUpdateUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionName: String!
  FunctionInput: AwsGlueS76Input!
}

input AwsGlueUpdateWorkflowInput {
  Name: String!
  Description: String
  DefaultRunProperties: JSON
}

type AwsGlueUpdateWorkflowOutput {
  Name: String
}

"""AWS Greengrass (2017-06-07)"""
type AwsGreengrass {
  associateRoleToGroup(input: AwsGreengrassAssociateRoleToGroupInput!, config: AwsConfig): AwsGreengrassAssociateRoleToGroupOutput
  associateServiceRoleToAccount(input: AwsGreengrassAssociateServiceRoleToAccountInput, config: AwsConfig): AwsGreengrassAssociateServiceRoleToAccountOutput
  createConnectorDefinition(input: AwsGreengrassCreateConnectorDefinitionInput, config: AwsConfig): AwsGreengrassCreateConnectorDefinitionOutput
  createConnectorDefinitionVersion(input: AwsGreengrassCreateConnectorDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateConnectorDefinitionVersionOutput
  createCoreDefinition(input: AwsGreengrassCreateCoreDefinitionInput, config: AwsConfig): AwsGreengrassCreateCoreDefinitionOutput
  createCoreDefinitionVersion(input: AwsGreengrassCreateCoreDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateCoreDefinitionVersionOutput
  createDeployment(input: AwsGreengrassCreateDeploymentInput!, config: AwsConfig): AwsGreengrassCreateDeploymentOutput
  createDeviceDefinition(input: AwsGreengrassCreateDeviceDefinitionInput, config: AwsConfig): AwsGreengrassCreateDeviceDefinitionOutput
  createDeviceDefinitionVersion(input: AwsGreengrassCreateDeviceDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateDeviceDefinitionVersionOutput
  createFunctionDefinition(input: AwsGreengrassCreateFunctionDefinitionInput, config: AwsConfig): AwsGreengrassCreateFunctionDefinitionOutput
  createFunctionDefinitionVersion(input: AwsGreengrassCreateFunctionDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateFunctionDefinitionVersionOutput
  createGroup(input: AwsGreengrassCreateGroupInput, config: AwsConfig): AwsGreengrassCreateGroupOutput
  createGroupCertificateAuthority(input: AwsGreengrassCreateGroupCertificateAuthorityInput!, config: AwsConfig): AwsGreengrassCreateGroupCertificateAuthorityOutput
  createGroupVersion(input: AwsGreengrassCreateGroupVersionInput!, config: AwsConfig): AwsGreengrassCreateGroupVersionOutput
  createLoggerDefinition(input: AwsGreengrassCreateLoggerDefinitionInput, config: AwsConfig): AwsGreengrassCreateLoggerDefinitionOutput
  createLoggerDefinitionVersion(input: AwsGreengrassCreateLoggerDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateLoggerDefinitionVersionOutput
  createResourceDefinition(input: AwsGreengrassCreateResourceDefinitionInput, config: AwsConfig): AwsGreengrassCreateResourceDefinitionOutput
  createResourceDefinitionVersion(input: AwsGreengrassCreateResourceDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateResourceDefinitionVersionOutput
  createSoftwareUpdateJob(input: AwsGreengrassCreateSoftwareUpdateJobInput, config: AwsConfig): AwsGreengrassCreateSoftwareUpdateJobOutput
  createSubscriptionDefinition(input: AwsGreengrassCreateSubscriptionDefinitionInput, config: AwsConfig): AwsGreengrassCreateSubscriptionDefinitionOutput
  createSubscriptionDefinitionVersion(input: AwsGreengrassCreateSubscriptionDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateSubscriptionDefinitionVersionOutput
  tagResource(input: AwsGreengrassTagResourceInput!, config: AwsConfig): JSON
  deleteConnectorDefinition(input: AwsGreengrassDeleteConnectorDefinitionInput!, config: AwsConfig): JSON
  deleteCoreDefinition(input: AwsGreengrassDeleteCoreDefinitionInput!, config: AwsConfig): JSON
  deleteDeviceDefinition(input: AwsGreengrassDeleteDeviceDefinitionInput!, config: AwsConfig): JSON
  deleteFunctionDefinition(input: AwsGreengrassDeleteFunctionDefinitionInput!, config: AwsConfig): JSON
  deleteGroup(input: AwsGreengrassDeleteGroupInput!, config: AwsConfig): JSON
  deleteLoggerDefinition(input: AwsGreengrassDeleteLoggerDefinitionInput!, config: AwsConfig): JSON
  deleteResourceDefinition(input: AwsGreengrassDeleteResourceDefinitionInput!, config: AwsConfig): JSON
  deleteSubscriptionDefinition(input: AwsGreengrassDeleteSubscriptionDefinitionInput!, config: AwsConfig): JSON
  untagResource(input: AwsGreengrassUntagResourceInput!, config: AwsConfig): JSON
  disassociateRoleFromGroup(input: AwsGreengrassDisassociateRoleFromGroupInput!, config: AwsConfig): AwsGreengrassDisassociateRoleFromGroupOutput
  disassociateServiceRoleFromAccount(input: JSON, config: AwsConfig): AwsGreengrassDisassociateServiceRoleFromAccountOutput
  getAssociatedRole(input: AwsGreengrassGetAssociatedRoleInput!, config: AwsConfig): AwsGreengrassGetAssociatedRoleOutput
  getBulkDeploymentStatus(input: AwsGreengrassGetBulkDeploymentStatusInput!, config: AwsConfig): AwsGreengrassGetBulkDeploymentStatusOutput
  getConnectivityInfo(input: AwsGreengrassGetConnectivityInfoInput!, config: AwsConfig): AwsGreengrassGetConnectivityInfoOutput
  getConnectorDefinition(input: AwsGreengrassGetConnectorDefinitionInput!, config: AwsConfig): AwsGreengrassGetConnectorDefinitionOutput
  getConnectorDefinitionVersion(input: AwsGreengrassGetConnectorDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetConnectorDefinitionVersionOutput
  getCoreDefinition(input: AwsGreengrassGetCoreDefinitionInput!, config: AwsConfig): AwsGreengrassGetCoreDefinitionOutput
  getCoreDefinitionVersion(input: AwsGreengrassGetCoreDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetCoreDefinitionVersionOutput
  getDeploymentStatus(input: AwsGreengrassGetDeploymentStatusInput!, config: AwsConfig): AwsGreengrassGetDeploymentStatusOutput
  getDeviceDefinition(input: AwsGreengrassGetDeviceDefinitionInput!, config: AwsConfig): AwsGreengrassGetDeviceDefinitionOutput
  getDeviceDefinitionVersion(input: AwsGreengrassGetDeviceDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetDeviceDefinitionVersionOutput
  getFunctionDefinition(input: AwsGreengrassGetFunctionDefinitionInput!, config: AwsConfig): AwsGreengrassGetFunctionDefinitionOutput
  getFunctionDefinitionVersion(input: AwsGreengrassGetFunctionDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetFunctionDefinitionVersionOutput
  getGroup(input: AwsGreengrassGetGroupInput!, config: AwsConfig): AwsGreengrassGetGroupOutput
  getGroupCertificateAuthority(input: AwsGreengrassGetGroupCertificateAuthorityInput!, config: AwsConfig): AwsGreengrassGetGroupCertificateAuthorityOutput
  getGroupCertificateConfiguration(input: AwsGreengrassGetGroupCertificateConfigurationInput!, config: AwsConfig): AwsGreengrassGetGroupCertificateConfigurationOutput
  getGroupVersion(input: AwsGreengrassGetGroupVersionInput!, config: AwsConfig): AwsGreengrassGetGroupVersionOutput
  getLoggerDefinition(input: AwsGreengrassGetLoggerDefinitionInput!, config: AwsConfig): AwsGreengrassGetLoggerDefinitionOutput
  getLoggerDefinitionVersion(input: AwsGreengrassGetLoggerDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetLoggerDefinitionVersionOutput
  getResourceDefinition(input: AwsGreengrassGetResourceDefinitionInput!, config: AwsConfig): AwsGreengrassGetResourceDefinitionOutput
  getResourceDefinitionVersion(input: AwsGreengrassGetResourceDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetResourceDefinitionVersionOutput
  getServiceRoleForAccount(input: JSON, config: AwsConfig): AwsGreengrassGetServiceRoleForAccountOutput
  getSubscriptionDefinition(input: AwsGreengrassGetSubscriptionDefinitionInput!, config: AwsConfig): AwsGreengrassGetSubscriptionDefinitionOutput
  getSubscriptionDefinitionVersion(input: AwsGreengrassGetSubscriptionDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetSubscriptionDefinitionVersionOutput
  listBulkDeploymentDetailedReports(input: AwsGreengrassListBulkDeploymentDetailedReportsInput!, config: AwsConfig): AwsGreengrassListBulkDeploymentDetailedReportsOutput
  listBulkDeployments(input: AwsGreengrassListBulkDeploymentsInput, config: AwsConfig): AwsGreengrassListBulkDeploymentsOutput
  listConnectorDefinitionVersions(input: AwsGreengrassListConnectorDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListConnectorDefinitionVersionsOutput
  listConnectorDefinitions(input: AwsGreengrassListConnectorDefinitionsInput, config: AwsConfig): AwsGreengrassListConnectorDefinitionsOutput
  listCoreDefinitionVersions(input: AwsGreengrassListCoreDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListCoreDefinitionVersionsOutput
  listCoreDefinitions(input: AwsGreengrassListCoreDefinitionsInput, config: AwsConfig): AwsGreengrassListCoreDefinitionsOutput
  listDeployments(input: AwsGreengrassListDeploymentsInput!, config: AwsConfig): AwsGreengrassListDeploymentsOutput
  listDeviceDefinitionVersions(input: AwsGreengrassListDeviceDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListDeviceDefinitionVersionsOutput
  listDeviceDefinitions(input: AwsGreengrassListDeviceDefinitionsInput, config: AwsConfig): AwsGreengrassListDeviceDefinitionsOutput
  listFunctionDefinitionVersions(input: AwsGreengrassListFunctionDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListFunctionDefinitionVersionsOutput
  listFunctionDefinitions(input: AwsGreengrassListFunctionDefinitionsInput, config: AwsConfig): AwsGreengrassListFunctionDefinitionsOutput
  listGroupCertificateAuthorities(input: AwsGreengrassListGroupCertificateAuthoritiesInput!, config: AwsConfig): AwsGreengrassListGroupCertificateAuthoritiesOutput
  listGroupVersions(input: AwsGreengrassListGroupVersionsInput!, config: AwsConfig): AwsGreengrassListGroupVersionsOutput
  listGroups(input: AwsGreengrassListGroupsInput, config: AwsConfig): AwsGreengrassListGroupsOutput
  listLoggerDefinitionVersions(input: AwsGreengrassListLoggerDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListLoggerDefinitionVersionsOutput
  listLoggerDefinitions(input: AwsGreengrassListLoggerDefinitionsInput, config: AwsConfig): AwsGreengrassListLoggerDefinitionsOutput
  listResourceDefinitionVersions(input: AwsGreengrassListResourceDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListResourceDefinitionVersionsOutput
  listResourceDefinitions(input: AwsGreengrassListResourceDefinitionsInput, config: AwsConfig): AwsGreengrassListResourceDefinitionsOutput
  listSubscriptionDefinitionVersions(input: AwsGreengrassListSubscriptionDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListSubscriptionDefinitionVersionsOutput
  listSubscriptionDefinitions(input: AwsGreengrassListSubscriptionDefinitionsInput, config: AwsConfig): AwsGreengrassListSubscriptionDefinitionsOutput
  listTagsForResource(input: AwsGreengrassListTagsForResourceInput!, config: AwsConfig): AwsGreengrassListTagsForResourceOutput
  resetDeployments(input: AwsGreengrassResetDeploymentsInput!, config: AwsConfig): AwsGreengrassResetDeploymentsOutput
  startBulkDeployment(input: AwsGreengrassStartBulkDeploymentInput, config: AwsConfig): AwsGreengrassStartBulkDeploymentOutput
  stopBulkDeployment(input: AwsGreengrassStopBulkDeploymentInput!, config: AwsConfig): JSON
  updateConnectivityInfo(input: AwsGreengrassUpdateConnectivityInfoInput!, config: AwsConfig): AwsGreengrassUpdateConnectivityInfoOutput
  updateConnectorDefinition(input: AwsGreengrassUpdateConnectorDefinitionInput!, config: AwsConfig): JSON
  updateCoreDefinition(input: AwsGreengrassUpdateCoreDefinitionInput!, config: AwsConfig): JSON
  updateDeviceDefinition(input: AwsGreengrassUpdateDeviceDefinitionInput!, config: AwsConfig): JSON
  updateFunctionDefinition(input: AwsGreengrassUpdateFunctionDefinitionInput!, config: AwsConfig): JSON
  updateGroup(input: AwsGreengrassUpdateGroupInput!, config: AwsConfig): JSON
  updateGroupCertificateConfiguration(input: AwsGreengrassUpdateGroupCertificateConfigurationInput!, config: AwsConfig): AwsGreengrassUpdateGroupCertificateConfigurationOutput
  updateLoggerDefinition(input: AwsGreengrassUpdateLoggerDefinitionInput!, config: AwsConfig): JSON
  updateResourceDefinition(input: AwsGreengrassUpdateResourceDefinitionInput!, config: AwsConfig): JSON
  updateSubscriptionDefinition(input: AwsGreengrassUpdateSubscriptionDefinitionInput!, config: AwsConfig): JSON
}

input AwsGreengrassAssociateRoleToGroupInput {
  GroupId: String!
  RoleArn: String
}

type AwsGreengrassAssociateRoleToGroupOutput {
  AssociatedAt: String
}

input AwsGreengrassAssociateServiceRoleToAccountInput {
  RoleArn: String
}

type AwsGreengrassAssociateServiceRoleToAccountOutput {
  AssociatedAt: String
}

input AwsGreengrassCreateConnectorDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS7Input
  Name: String
  tags: JSON
}

type AwsGreengrassCreateConnectorDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateConnectorDefinitionVersionInput {
  AmznClientToken: String
  ConnectorDefinitionId: String!
  Connectors: [AwsGreengrassS8Input]
}

type AwsGreengrassCreateConnectorDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateCoreDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassSgInput
  Name: String
  tags: JSON
}

type AwsGreengrassCreateCoreDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateCoreDefinitionVersionInput {
  AmznClientToken: String
  CoreDefinitionId: String!
  Cores: [AwsGreengrassShInput]
}

type AwsGreengrassCreateCoreDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateDeploymentInput {
  AmznClientToken: String
  DeploymentId: String
  DeploymentType: String
  GroupId: String!
  GroupVersionId: String
}

type AwsGreengrassCreateDeploymentOutput {
  DeploymentArn: String
  DeploymentId: String
}

input AwsGreengrassCreateDeviceDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassSrInput
  Name: String
  tags: JSON
}

type AwsGreengrassCreateDeviceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateDeviceDefinitionVersionInput {
  AmznClientToken: String
  DeviceDefinitionId: String!
  Devices: [AwsGreengrassSsInput]
}

type AwsGreengrassCreateDeviceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateFunctionDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassSyInput
  Name: String
  tags: JSON
}

type AwsGreengrassCreateFunctionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateFunctionDefinitionVersionInput {
  AmznClientToken: String
  DefaultConfig: AwsGreengrassSzInput
  FunctionDefinitionId: String!
  Functions: [AwsGreengrassS14Input]
}

type AwsGreengrassCreateFunctionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateGroupCertificateAuthorityInput {
  AmznClientToken: String
  GroupId: String!
}

type AwsGreengrassCreateGroupCertificateAuthorityOutput {
  GroupCertificateAuthorityArn: String
}

input AwsGreengrassCreateGroupInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS1hInput
  Name: String
  tags: JSON
}

type AwsGreengrassCreateGroupOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateGroupVersionInput {
  AmznClientToken: String
  ConnectorDefinitionVersionArn: String
  CoreDefinitionVersionArn: String
  DeviceDefinitionVersionArn: String
  FunctionDefinitionVersionArn: String
  GroupId: String!
  LoggerDefinitionVersionArn: String
  ResourceDefinitionVersionArn: String
  SubscriptionDefinitionVersionArn: String
}

type AwsGreengrassCreateGroupVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateLoggerDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS1oInput
  Name: String
  tags: JSON
}

type AwsGreengrassCreateLoggerDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateLoggerDefinitionVersionInput {
  AmznClientToken: String
  LoggerDefinitionId: String!
  Loggers: [AwsGreengrassS1pInput]
}

type AwsGreengrassCreateLoggerDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateResourceDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS1yInput
  Name: String
  tags: JSON
}

type AwsGreengrassCreateResourceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateResourceDefinitionVersionInput {
  AmznClientToken: String
  ResourceDefinitionId: String!
  Resources: [AwsGreengrassS1zInput]
}

type AwsGreengrassCreateResourceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateSoftwareUpdateJobInput {
  AmznClientToken: String
  S3UrlSignerRole: String
  SoftwareToUpdate: String
  UpdateAgentLogLevel: String
  UpdateTargets: [String]
  UpdateTargetsArchitecture: String
  UpdateTargetsOperatingSystem: String
}

type AwsGreengrassCreateSoftwareUpdateJobOutput {
  IotJobArn: String
  IotJobId: String
}

input AwsGreengrassCreateSubscriptionDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS2lInput
  Name: String
  tags: JSON
}

type AwsGreengrassCreateSubscriptionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateSubscriptionDefinitionVersionInput {
  AmznClientToken: String
  SubscriptionDefinitionId: String!
  Subscriptions: [AwsGreengrassS2mInput]
}

type AwsGreengrassCreateSubscriptionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassDeleteConnectorDefinitionInput {
  ConnectorDefinitionId: String!
}

input AwsGreengrassDeleteCoreDefinitionInput {
  CoreDefinitionId: String!
}

input AwsGreengrassDeleteDeviceDefinitionInput {
  DeviceDefinitionId: String!
}

input AwsGreengrassDeleteFunctionDefinitionInput {
  FunctionDefinitionId: String!
}

input AwsGreengrassDeleteGroupInput {
  GroupId: String!
}

input AwsGreengrassDeleteLoggerDefinitionInput {
  LoggerDefinitionId: String!
}

input AwsGreengrassDeleteResourceDefinitionInput {
  ResourceDefinitionId: String!
}

input AwsGreengrassDeleteSubscriptionDefinitionInput {
  SubscriptionDefinitionId: String!
}

input AwsGreengrassDisassociateRoleFromGroupInput {
  GroupId: String!
}

type AwsGreengrassDisassociateRoleFromGroupOutput {
  DisassociatedAt: String
}

type AwsGreengrassDisassociateServiceRoleFromAccountOutput {
  DisassociatedAt: String
}

input AwsGreengrassGetAssociatedRoleInput {
  GroupId: String!
}

type AwsGreengrassGetAssociatedRoleOutput {
  AssociatedAt: String
  RoleArn: String
}

input AwsGreengrassGetBulkDeploymentStatusInput {
  BulkDeploymentId: String!
}

type AwsGreengrassGetBulkDeploymentStatusOutput {
  BulkDeploymentMetrics: AwsGreengrassGetBulkDeploymentStatusOutputBulkDeploymentMetrics
  BulkDeploymentStatus: String
  CreatedAt: String
  ErrorDetails: [AwsGreengrassS3j]
  ErrorMessage: String
  tags: JSON
}

type AwsGreengrassGetBulkDeploymentStatusOutputBulkDeploymentMetrics {
  InvalidInputRecords: Int
  RecordsProcessed: Int
  RetryAttempts: Int
}

input AwsGreengrassGetConnectivityInfoInput {
  ThingName: String!
}

type AwsGreengrassGetConnectivityInfoOutput {
  ConnectivityInfo: [AwsGreengrassS3n]
  Message: String
}

input AwsGreengrassGetConnectorDefinitionInput {
  ConnectorDefinitionId: String!
}

type AwsGreengrassGetConnectorDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
  tags: JSON
}

input AwsGreengrassGetConnectorDefinitionVersionInput {
  ConnectorDefinitionId: String!
  ConnectorDefinitionVersionId: String!
  NextToken: String
}

type AwsGreengrassGetConnectorDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS7
  Id: String
  NextToken: String
  Version: String
}

input AwsGreengrassGetCoreDefinitionInput {
  CoreDefinitionId: String!
}

type AwsGreengrassGetCoreDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
  tags: JSON
}

input AwsGreengrassGetCoreDefinitionVersionInput {
  CoreDefinitionId: String!
  CoreDefinitionVersionId: String!
}

type AwsGreengrassGetCoreDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassSg
  Id: String
  NextToken: String
  Version: String
}

input AwsGreengrassGetDeploymentStatusInput {
  DeploymentId: String!
  GroupId: String!
}

type AwsGreengrassGetDeploymentStatusOutput {
  DeploymentStatus: String
  DeploymentType: String
  ErrorDetails: [AwsGreengrassS3j]
  ErrorMessage: String
  UpdatedAt: String
}

input AwsGreengrassGetDeviceDefinitionInput {
  DeviceDefinitionId: String!
}

type AwsGreengrassGetDeviceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
  tags: JSON
}

input AwsGreengrassGetDeviceDefinitionVersionInput {
  DeviceDefinitionId: String!
  DeviceDefinitionVersionId: String!
  NextToken: String
}

type AwsGreengrassGetDeviceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassSr
  Id: String
  NextToken: String
  Version: String
}

input AwsGreengrassGetFunctionDefinitionInput {
  FunctionDefinitionId: String!
}

type AwsGreengrassGetFunctionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
  tags: JSON
}

input AwsGreengrassGetFunctionDefinitionVersionInput {
  FunctionDefinitionId: String!
  FunctionDefinitionVersionId: String!
  NextToken: String
}

type AwsGreengrassGetFunctionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassSy
  Id: String
  NextToken: String
  Version: String
}

input AwsGreengrassGetGroupCertificateAuthorityInput {
  CertificateAuthorityId: String!
  GroupId: String!
}

type AwsGreengrassGetGroupCertificateAuthorityOutput {
  GroupCertificateAuthorityArn: String
  GroupCertificateAuthorityId: String
  PemEncodedCertificate: String
}

input AwsGreengrassGetGroupCertificateConfigurationInput {
  GroupId: String!
}

type AwsGreengrassGetGroupCertificateConfigurationOutput {
  CertificateAuthorityExpiryInMilliseconds: String
  CertificateExpiryInMilliseconds: String
  GroupId: String
}

input AwsGreengrassGetGroupInput {
  GroupId: String!
}

type AwsGreengrassGetGroupOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
  tags: JSON
}

input AwsGreengrassGetGroupVersionInput {
  GroupId: String!
  GroupVersionId: String!
}

type AwsGreengrassGetGroupVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS1h
  Id: String
  Version: String
}

input AwsGreengrassGetLoggerDefinitionInput {
  LoggerDefinitionId: String!
}

type AwsGreengrassGetLoggerDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
  tags: JSON
}

input AwsGreengrassGetLoggerDefinitionVersionInput {
  LoggerDefinitionId: String!
  LoggerDefinitionVersionId: String!
  NextToken: String
}

type AwsGreengrassGetLoggerDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS1o
  Id: String
  Version: String
}

input AwsGreengrassGetResourceDefinitionInput {
  ResourceDefinitionId: String!
}

type AwsGreengrassGetResourceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
  tags: JSON
}

input AwsGreengrassGetResourceDefinitionVersionInput {
  ResourceDefinitionId: String!
  ResourceDefinitionVersionId: String!
}

type AwsGreengrassGetResourceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS1y
  Id: String
  Version: String
}

type AwsGreengrassGetServiceRoleForAccountOutput {
  AssociatedAt: String
  RoleArn: String
}

input AwsGreengrassGetSubscriptionDefinitionInput {
  SubscriptionDefinitionId: String!
}

type AwsGreengrassGetSubscriptionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
  tags: JSON
}

input AwsGreengrassGetSubscriptionDefinitionVersionInput {
  NextToken: String
  SubscriptionDefinitionId: String!
  SubscriptionDefinitionVersionId: String!
}

type AwsGreengrassGetSubscriptionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS2l
  Id: String
  NextToken: String
  Version: String
}

input AwsGreengrassListBulkDeploymentDetailedReportsInput {
  BulkDeploymentId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListBulkDeploymentDetailedReportsOutput {
  Deployments: [AwsGreengrassListBulkDeploymentDetailedReportsOutputDeployments]
  NextToken: String
}

type AwsGreengrassListBulkDeploymentDetailedReportsOutputDeployments {
  CreatedAt: String
  DeploymentArn: String
  DeploymentId: String
  DeploymentStatus: String
  DeploymentType: String
  ErrorDetails: [AwsGreengrassS3j]
  ErrorMessage: String
  GroupArn: String
}

input AwsGreengrassListBulkDeploymentsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListBulkDeploymentsOutput {
  BulkDeployments: [AwsGreengrassListBulkDeploymentsOutputBulkDeployments]
  NextToken: String
}

type AwsGreengrassListBulkDeploymentsOutputBulkDeployments {
  BulkDeploymentArn: String
  BulkDeploymentId: String
  CreatedAt: String
}

input AwsGreengrassListConnectorDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListConnectorDefinitionsOutput {
  Definitions: [AwsGreengrassS57]
  NextToken: String
}

input AwsGreengrassListConnectorDefinitionVersionsInput {
  ConnectorDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListConnectorDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS53]
}

input AwsGreengrassListCoreDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListCoreDefinitionsOutput {
  Definitions: [AwsGreengrassS57]
  NextToken: String
}

input AwsGreengrassListCoreDefinitionVersionsInput {
  CoreDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListCoreDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS53]
}

input AwsGreengrassListDeploymentsInput {
  GroupId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListDeploymentsOutput {
  Deployments: [AwsGreengrassListDeploymentsOutputDeployments]
  NextToken: String
}

type AwsGreengrassListDeploymentsOutputDeployments {
  CreatedAt: String
  DeploymentArn: String
  DeploymentId: String
  DeploymentType: String
  GroupArn: String
}

input AwsGreengrassListDeviceDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListDeviceDefinitionsOutput {
  Definitions: [AwsGreengrassS57]
  NextToken: String
}

input AwsGreengrassListDeviceDefinitionVersionsInput {
  DeviceDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListDeviceDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS53]
}

input AwsGreengrassListFunctionDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListFunctionDefinitionsOutput {
  Definitions: [AwsGreengrassS57]
  NextToken: String
}

input AwsGreengrassListFunctionDefinitionVersionsInput {
  FunctionDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListFunctionDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS53]
}

input AwsGreengrassListGroupCertificateAuthoritiesInput {
  GroupId: String!
}

type AwsGreengrassListGroupCertificateAuthoritiesOutput {
  GroupCertificateAuthorities: [AwsGreengrassListGroupCertificateAuthoritiesOutputGroupCertificateAuthorities]
}

type AwsGreengrassListGroupCertificateAuthoritiesOutputGroupCertificateAuthorities {
  GroupCertificateAuthorityArn: String
  GroupCertificateAuthorityId: String
}

input AwsGreengrassListGroupsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListGroupsOutput {
  Groups: [AwsGreengrassListGroupsOutputGroups]
  NextToken: String
}

type AwsGreengrassListGroupsOutputGroups {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassListGroupVersionsInput {
  GroupId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListGroupVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS53]
}

input AwsGreengrassListLoggerDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListLoggerDefinitionsOutput {
  Definitions: [AwsGreengrassS57]
  NextToken: String
}

input AwsGreengrassListLoggerDefinitionVersionsInput {
  LoggerDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListLoggerDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS53]
}

input AwsGreengrassListResourceDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListResourceDefinitionsOutput {
  Definitions: [AwsGreengrassS57]
  NextToken: String
}

input AwsGreengrassListResourceDefinitionVersionsInput {
  MaxResults: String
  NextToken: String
  ResourceDefinitionId: String!
}

type AwsGreengrassListResourceDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS53]
}

input AwsGreengrassListSubscriptionDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListSubscriptionDefinitionsOutput {
  Definitions: [AwsGreengrassS57]
  NextToken: String
}

input AwsGreengrassListSubscriptionDefinitionVersionsInput {
  MaxResults: String
  NextToken: String
  SubscriptionDefinitionId: String!
}

type AwsGreengrassListSubscriptionDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS53]
}

input AwsGreengrassListTagsForResourceInput {
  ResourceArn: String!
}

type AwsGreengrassListTagsForResourceOutput {
  tags: JSON
}

input AwsGreengrassResetDeploymentsInput {
  AmznClientToken: String
  Force: Boolean
  GroupId: String!
}

type AwsGreengrassResetDeploymentsOutput {
  DeploymentArn: String
  DeploymentId: String
}

type AwsGreengrassS12 {
  Gid: Int
  Uid: Int
}

input AwsGreengrassS12Input {
  Gid: Int
  Uid: Int
}

type AwsGreengrassS14 {
  FunctionArn: String
  FunctionConfiguration: AwsGreengrassS14FunctionConfiguration
  Id: String
}

type AwsGreengrassS14FunctionConfiguration {
  EncodingType: String
  Environment: AwsGreengrassS14FunctionConfigurationEnvironment
  ExecArgs: String
  Executable: String
  MemorySize: Int
  Pinned: Boolean
  Timeout: Int
}

type AwsGreengrassS14FunctionConfigurationEnvironment {
  AccessSysfs: Boolean
  Execution: AwsGreengrassS14FunctionConfigurationEnvironmentExecution
  ResourceAccessPolicies: [AwsGreengrassS14FunctionConfigurationEnvironmentResourceAccessPolicies]
  Variables: JSON
}

type AwsGreengrassS14FunctionConfigurationEnvironmentExecution {
  IsolationMode: String
  RunAs: AwsGreengrassS12
}

input AwsGreengrassS14FunctionConfigurationEnvironmentExecutionInput {
  IsolationMode: String
  RunAs: AwsGreengrassS12Input
}

input AwsGreengrassS14FunctionConfigurationEnvironmentInput {
  AccessSysfs: Boolean
  Execution: AwsGreengrassS14FunctionConfigurationEnvironmentExecutionInput
  ResourceAccessPolicies: [AwsGreengrassS14FunctionConfigurationEnvironmentResourceAccessPoliciesInput]
  Variables: JSON
}

type AwsGreengrassS14FunctionConfigurationEnvironmentResourceAccessPolicies {
  Permission: String
  ResourceId: String
}

input AwsGreengrassS14FunctionConfigurationEnvironmentResourceAccessPoliciesInput {
  Permission: String
  ResourceId: String
}

input AwsGreengrassS14FunctionConfigurationInput {
  EncodingType: String
  Environment: AwsGreengrassS14FunctionConfigurationEnvironmentInput
  ExecArgs: String
  Executable: String
  MemorySize: Int
  Pinned: Boolean
  Timeout: Int
}

input AwsGreengrassS14Input {
  FunctionArn: String
  FunctionConfiguration: AwsGreengrassS14FunctionConfigurationInput
  Id: String
}

type AwsGreengrassS1h {
  ConnectorDefinitionVersionArn: String
  CoreDefinitionVersionArn: String
  DeviceDefinitionVersionArn: String
  FunctionDefinitionVersionArn: String
  LoggerDefinitionVersionArn: String
  ResourceDefinitionVersionArn: String
  SubscriptionDefinitionVersionArn: String
}

input AwsGreengrassS1hInput {
  ConnectorDefinitionVersionArn: String
  CoreDefinitionVersionArn: String
  DeviceDefinitionVersionArn: String
  FunctionDefinitionVersionArn: String
  LoggerDefinitionVersionArn: String
  ResourceDefinitionVersionArn: String
  SubscriptionDefinitionVersionArn: String
}

type AwsGreengrassS1o {
  Loggers: [AwsGreengrassS1p]
}

input AwsGreengrassS1oInput {
  Loggers: [AwsGreengrassS1pInput]
}

type AwsGreengrassS1p {
  Component: String
  Id: String
  Level: String
  Space: Int
  Type: String
}

input AwsGreengrassS1pInput {
  Component: String
  Id: String
  Level: String
  Space: Int
  Type: String
}

type AwsGreengrassS1y {
  Resources: [AwsGreengrassS1z]
}

input AwsGreengrassS1yInput {
  Resources: [AwsGreengrassS1zInput]
}

type AwsGreengrassS1z {
  Id: String
  Name: String
  ResourceDataContainer: AwsGreengrassS1zResourceDataContainer
}

input AwsGreengrassS1zInput {
  Id: String
  Name: String
  ResourceDataContainer: AwsGreengrassS1zResourceDataContainerInput
}

type AwsGreengrassS1zResourceDataContainer {
  LocalDeviceResourceData: AwsGreengrassS1zResourceDataContainerLocalDeviceResourceData
  LocalVolumeResourceData: AwsGreengrassS1zResourceDataContainerLocalVolumeResourceData
  S3MachineLearningModelResourceData: AwsGreengrassS1zResourceDataContainerS3MachineLearningModelResourceData
  SageMakerMachineLearningModelResourceData: AwsGreengrassS1zResourceDataContainerSageMakerMachineLearningModelResourceData
  SecretsManagerSecretResourceData: AwsGreengrassS1zResourceDataContainerSecretsManagerSecretResourceData
}

input AwsGreengrassS1zResourceDataContainerInput {
  LocalDeviceResourceData: AwsGreengrassS1zResourceDataContainerLocalDeviceResourceDataInput
  LocalVolumeResourceData: AwsGreengrassS1zResourceDataContainerLocalVolumeResourceDataInput
  S3MachineLearningModelResourceData: AwsGreengrassS1zResourceDataContainerS3MachineLearningModelResourceDataInput
  SageMakerMachineLearningModelResourceData: AwsGreengrassS1zResourceDataContainerSageMakerMachineLearningModelResourceDataInput
  SecretsManagerSecretResourceData: AwsGreengrassS1zResourceDataContainerSecretsManagerSecretResourceDataInput
}

type AwsGreengrassS1zResourceDataContainerLocalDeviceResourceData {
  GroupOwnerSetting: AwsGreengrassS23
  SourcePath: String
}

input AwsGreengrassS1zResourceDataContainerLocalDeviceResourceDataInput {
  GroupOwnerSetting: AwsGreengrassS23Input
  SourcePath: String
}

type AwsGreengrassS1zResourceDataContainerLocalVolumeResourceData {
  DestinationPath: String
  GroupOwnerSetting: AwsGreengrassS23
  SourcePath: String
}

input AwsGreengrassS1zResourceDataContainerLocalVolumeResourceDataInput {
  DestinationPath: String
  GroupOwnerSetting: AwsGreengrassS23Input
  SourcePath: String
}

type AwsGreengrassS1zResourceDataContainerS3MachineLearningModelResourceData {
  DestinationPath: String
  S3Uri: String
}

input AwsGreengrassS1zResourceDataContainerS3MachineLearningModelResourceDataInput {
  DestinationPath: String
  S3Uri: String
}

type AwsGreengrassS1zResourceDataContainerSageMakerMachineLearningModelResourceData {
  DestinationPath: String
  SageMakerJobArn: String
}

input AwsGreengrassS1zResourceDataContainerSageMakerMachineLearningModelResourceDataInput {
  DestinationPath: String
  SageMakerJobArn: String
}

type AwsGreengrassS1zResourceDataContainerSecretsManagerSecretResourceData {
  ARN: String
  AdditionalStagingLabelsToDownload: [String]
}

input AwsGreengrassS1zResourceDataContainerSecretsManagerSecretResourceDataInput {
  ARN: String
  AdditionalStagingLabelsToDownload: [String]
}

type AwsGreengrassS23 {
  AutoAddGroupOwner: Boolean
  GroupOwner: String
}

input AwsGreengrassS23Input {
  AutoAddGroupOwner: Boolean
  GroupOwner: String
}

type AwsGreengrassS2l {
  Subscriptions: [AwsGreengrassS2m]
}

input AwsGreengrassS2lInput {
  Subscriptions: [AwsGreengrassS2mInput]
}

type AwsGreengrassS2m {
  Id: String
  Source: String
  Subject: String
  Target: String
}

input AwsGreengrassS2mInput {
  Id: String
  Source: String
  Subject: String
  Target: String
}

type AwsGreengrassS3j {
  DetailedErrorCode: String
  DetailedErrorMessage: String
}

type AwsGreengrassS3n {
  HostAddress: String
  Id: String
  Metadata: String
  PortNumber: Int
}

input AwsGreengrassS3nInput {
  HostAddress: String
  Id: String
  Metadata: String
  PortNumber: Int
}

type AwsGreengrassS53 {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

type AwsGreengrassS57 {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
  Tags: JSON
}

type AwsGreengrassS7 {
  Connectors: [AwsGreengrassS8]
}

input AwsGreengrassS7Input {
  Connectors: [AwsGreengrassS8Input]
}

type AwsGreengrassS8 {
  ConnectorArn: String
  Id: String
  Parameters: JSON
}

input AwsGreengrassS8Input {
  ConnectorArn: String
  Id: String
  Parameters: JSON
}

type AwsGreengrassSg {
  Cores: [AwsGreengrassSh]
}

input AwsGreengrassSgInput {
  Cores: [AwsGreengrassShInput]
}

type AwsGreengrassSh {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

input AwsGreengrassShInput {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

type AwsGreengrassSr {
  Devices: [AwsGreengrassSs]
}

input AwsGreengrassSrInput {
  Devices: [AwsGreengrassSsInput]
}

type AwsGreengrassSs {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

input AwsGreengrassSsInput {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

input AwsGreengrassStartBulkDeploymentInput {
  AmznClientToken: String
  ExecutionRoleArn: String
  InputFileUri: String
  tags: JSON
}

type AwsGreengrassStartBulkDeploymentOutput {
  BulkDeploymentArn: String
  BulkDeploymentId: String
}

input AwsGreengrassStopBulkDeploymentInput {
  BulkDeploymentId: String!
}

type AwsGreengrassSy {
  DefaultConfig: AwsGreengrassSz
  Functions: [AwsGreengrassS14]
}

input AwsGreengrassSyInput {
  DefaultConfig: AwsGreengrassSzInput
  Functions: [AwsGreengrassS14Input]
}

type AwsGreengrassSz {
  Execution: AwsGreengrassSzExecution
}

type AwsGreengrassSzExecution {
  IsolationMode: String
  RunAs: AwsGreengrassS12
}

input AwsGreengrassSzExecutionInput {
  IsolationMode: String
  RunAs: AwsGreengrassS12Input
}

input AwsGreengrassSzInput {
  Execution: AwsGreengrassSzExecutionInput
}

input AwsGreengrassTagResourceInput {
  ResourceArn: String!
  tags: JSON!
}

input AwsGreengrassUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsGreengrassUpdateConnectivityInfoInput {
  ConnectivityInfo: [AwsGreengrassS3nInput]
  ThingName: String!
}

type AwsGreengrassUpdateConnectivityInfoOutput {
  Message: String
  Version: String
}

input AwsGreengrassUpdateConnectorDefinitionInput {
  ConnectorDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateCoreDefinitionInput {
  CoreDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateDeviceDefinitionInput {
  DeviceDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateFunctionDefinitionInput {
  FunctionDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateGroupCertificateConfigurationInput {
  CertificateExpiryInMilliseconds: String
  GroupId: String!
}

type AwsGreengrassUpdateGroupCertificateConfigurationOutput {
  CertificateAuthorityExpiryInMilliseconds: String
  CertificateExpiryInMilliseconds: String
  GroupId: String
}

input AwsGreengrassUpdateGroupInput {
  GroupId: String!
  Name: String
}

input AwsGreengrassUpdateLoggerDefinitionInput {
  LoggerDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateResourceDefinitionInput {
  Name: String
  ResourceDefinitionId: String!
}

input AwsGreengrassUpdateSubscriptionDefinitionInput {
  Name: String
  SubscriptionDefinitionId: String!
}

"""AWS Ground Station (2019-05-23)"""
type AwsGroundStation {
  cancelContact(input: AwsGroundStationCancelContactInput!, config: AwsConfig): JSON
  createConfig(input: AwsGroundStationCreateConfigInput!, config: AwsConfig): JSON
  createDataflowEndpointGroup(input: AwsGroundStationCreateDataflowEndpointGroupInput!, config: AwsConfig): JSON
  createMissionProfile(input: AwsGroundStationCreateMissionProfileInput!, config: AwsConfig): JSON
  deleteConfig(input: AwsGroundStationDeleteConfigInput!, config: AwsConfig): JSON
  deleteDataflowEndpointGroup(input: AwsGroundStationDeleteDataflowEndpointGroupInput!, config: AwsConfig): JSON
  deleteMissionProfile(input: AwsGroundStationDeleteMissionProfileInput!, config: AwsConfig): JSON
  describeContact(input: AwsGroundStationDescribeContactInput!, config: AwsConfig): AwsGroundStationDescribeContactOutput
  getConfig(input: AwsGroundStationGetConfigInput!, config: AwsConfig): AwsGroundStationGetConfigOutput
  getDataflowEndpointGroup(input: AwsGroundStationGetDataflowEndpointGroupInput!, config: AwsConfig): AwsGroundStationGetDataflowEndpointGroupOutput
  getMissionProfile(input: AwsGroundStationGetMissionProfileInput!, config: AwsConfig): AwsGroundStationGetMissionProfileOutput
  listConfigs(input: AwsGroundStationListConfigsInput, config: AwsConfig): AwsGroundStationListConfigsOutput
  listContacts(input: AwsGroundStationListContactsInput!, config: AwsConfig): AwsGroundStationListContactsOutput
  listDataflowEndpointGroups(input: AwsGroundStationListDataflowEndpointGroupsInput, config: AwsConfig): AwsGroundStationListDataflowEndpointGroupsOutput
  listMissionProfiles(input: AwsGroundStationListMissionProfilesInput, config: AwsConfig): AwsGroundStationListMissionProfilesOutput
  reserveContact(input: AwsGroundStationReserveContactInput!, config: AwsConfig): JSON
  updateConfig(input: AwsGroundStationUpdateConfigInput!, config: AwsConfig): JSON
  updateMissionProfile(input: AwsGroundStationUpdateMissionProfileInput!, config: AwsConfig): JSON
  getMinuteUsage(input: AwsGroundStationGetMinuteUsageInput!, config: AwsConfig): AwsGroundStationGetMinuteUsageOutput
  getSatellite(input: AwsGroundStationGetSatelliteInput!, config: AwsConfig): AwsGroundStationGetSatelliteOutput
  listGroundStations(input: AwsGroundStationListGroundStationsInput, config: AwsConfig): AwsGroundStationListGroundStationsOutput
  listSatellites(input: AwsGroundStationListSatellitesInput, config: AwsConfig): AwsGroundStationListSatellitesOutput
  listTagsForResource(input: AwsGroundStationListTagsForResourceInput!, config: AwsConfig): AwsGroundStationListTagsForResourceOutput
  tagResource(input: AwsGroundStationTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsGroundStationUntagResourceInput!, config: AwsConfig): JSON
}

input AwsGroundStationCancelContactInput {
  contactId: String!
}

input AwsGroundStationCreateConfigInput {
  configData: AwsGroundStationS5Input!
  name: String!
  tags: JSON
}

input AwsGroundStationCreateDataflowEndpointGroupInput {
  endpointDetails: [AwsGroundStationSxInput]!
  tags: JSON
}

input AwsGroundStationCreateMissionProfileInput {
  contactPostPassDurationSeconds: Int
  contactPrePassDurationSeconds: Int
  dataflowEdges: [[String]]!
  minimumViableContactDurationSeconds: Int!
  name: String!
  tags: JSON
  trackingConfigArn: String!
}

input AwsGroundStationDeleteConfigInput {
  configId: String!
  configType: String!
}

input AwsGroundStationDeleteDataflowEndpointGroupInput {
  dataflowEndpointGroupId: String!
}

input AwsGroundStationDeleteMissionProfileInput {
  missionProfileId: String!
}

input AwsGroundStationDescribeContactInput {
  contactId: String!
}

type AwsGroundStationDescribeContactOutput {
  contactId: String
  contactStatus: String
  endTime: Date
  errorMessage: String
  groundStation: String
  maximumElevation: AwsGroundStationS1k
  missionProfileArn: String
  postPassEndTime: Date
  prePassStartTime: Date
  satelliteArn: String
  startTime: Date
  tags: JSON
}

input AwsGroundStationGetConfigInput {
  configId: String!
  configType: String!
}

type AwsGroundStationGetConfigOutput {
  configArn: String!
  configData: AwsGroundStationS5!
  configId: String!
  configType: String
  name: String!
  tags: JSON
}

input AwsGroundStationGetDataflowEndpointGroupInput {
  dataflowEndpointGroupId: String!
}

type AwsGroundStationGetDataflowEndpointGroupOutput {
  dataflowEndpointGroupArn: String
  dataflowEndpointGroupId: String
  endpointsDetails: [AwsGroundStationSx]
  tags: JSON
}

input AwsGroundStationGetMinuteUsageInput {
  month: Int!
  year: Int!
}

type AwsGroundStationGetMinuteUsageOutput {
  estimatedMinutesRemaining: Int
  isReservedMinutesCustomer: Boolean
  totalReservedMinuteAllocation: Int
  totalScheduledMinutes: Int
  upcomingMinutesScheduled: Int
}

input AwsGroundStationGetMissionProfileInput {
  missionProfileId: String!
}

type AwsGroundStationGetMissionProfileOutput {
  contactPostPassDurationSeconds: Int
  contactPrePassDurationSeconds: Int
  dataflowEdges: [[String]]
  minimumViableContactDurationSeconds: Int
  missionProfileArn: String
  missionProfileId: String
  name: String
  region: String
  tags: JSON
  trackingConfigArn: String
}

input AwsGroundStationGetSatelliteInput {
  satelliteId: String!
}

type AwsGroundStationGetSatelliteOutput {
  dateCreated: Date
  lastUpdated: Date
  noradSatelliteID: Int
  satelliteArn: String
  satelliteId: String
  tags: JSON
}

input AwsGroundStationListConfigsInput {
  maxResults: Int
  nextToken: String
}

type AwsGroundStationListConfigsOutput {
  configList: [AwsGroundStationListConfigsOutputConfigList]
  nextToken: String
}

type AwsGroundStationListConfigsOutputConfigList {
  configArn: String
  configId: String
  configType: String
  name: String
}

input AwsGroundStationListContactsInput {
  endTime: Date!
  groundStation: String
  maxResults: Int
  missionProfileArn: String
  nextToken: String
  satelliteArn: String
  startTime: Date!
  statusList: [String]!
}

type AwsGroundStationListContactsOutput {
  contactList: [AwsGroundStationListContactsOutputContactList]
  nextToken: String
}

type AwsGroundStationListContactsOutputContactList {
  contactId: String
  contactStatus: String
  endTime: Date
  errorMessage: String
  groundStation: String
  maximumElevation: AwsGroundStationS1k
  missionProfileArn: String
  postPassEndTime: Date
  prePassStartTime: Date
  satelliteArn: String
  startTime: Date
  tags: JSON
}

input AwsGroundStationListDataflowEndpointGroupsInput {
  maxResults: Int
  nextToken: String
}

type AwsGroundStationListDataflowEndpointGroupsOutput {
  dataflowEndpointGroupList: [AwsGroundStationListDataflowEndpointGroupsOutputDataflowEndpointGroupList]
  nextToken: String
}

type AwsGroundStationListDataflowEndpointGroupsOutputDataflowEndpointGroupList {
  dataflowEndpointGroupArn: String
  dataflowEndpointGroupId: String
}

input AwsGroundStationListGroundStationsInput {
  maxResults: Int
  nextToken: String
}

type AwsGroundStationListGroundStationsOutput {
  groundStationList: [AwsGroundStationListGroundStationsOutputGroundStationList]
  nextToken: String
}

type AwsGroundStationListGroundStationsOutputGroundStationList {
  groundStationId: String
  groundStationName: String
  region: String
}

input AwsGroundStationListMissionProfilesInput {
  maxResults: Int
  nextToken: String
}

type AwsGroundStationListMissionProfilesOutput {
  missionProfileList: [AwsGroundStationListMissionProfilesOutputMissionProfileList]
  nextToken: String
}

type AwsGroundStationListMissionProfilesOutputMissionProfileList {
  missionProfileArn: String
  missionProfileId: String
  name: String
  region: String
}

input AwsGroundStationListSatellitesInput {
  maxResults: Int
  nextToken: String
}

type AwsGroundStationListSatellitesOutput {
  nextToken: String
  satellites: [AwsGroundStationListSatellitesOutputSatellites]
}

type AwsGroundStationListSatellitesOutputSatellites {
  noradSatelliteID: Int
  satelliteArn: String
  satelliteId: String
}

input AwsGroundStationListTagsForResourceInput {
  resourceArn: String!
}

type AwsGroundStationListTagsForResourceOutput {
  tags: JSON
}

input AwsGroundStationReserveContactInput {
  endTime: Date!
  groundStation: String!
  missionProfileArn: String!
  satelliteArn: String!
  startTime: Date!
  tags: JSON
}

type AwsGroundStationS1k {
  unit: String!
  value: JSON!
}

type AwsGroundStationS5 {
  antennaDownlinkConfig: AwsGroundStationS5AntennaDownlinkConfig
  antennaDownlinkDemodDecodeConfig: AwsGroundStationS5AntennaDownlinkDemodDecodeConfig
  antennaUplinkConfig: AwsGroundStationS5AntennaUplinkConfig
  dataflowEndpointConfig: AwsGroundStationS5DataflowEndpointConfig
  trackingConfig: AwsGroundStationS5TrackingConfig
  uplinkEchoConfig: AwsGroundStationS5UplinkEchoConfig
}

type AwsGroundStationS5AntennaDownlinkConfig {
  spectrumConfig: AwsGroundStationS7!
}

input AwsGroundStationS5AntennaDownlinkConfigInput {
  spectrumConfig: AwsGroundStationS7Input!
}

type AwsGroundStationS5AntennaDownlinkDemodDecodeConfig {
  decodeConfig: AwsGroundStationS5AntennaDownlinkDemodDecodeConfigDecodeConfig!
  demodulationConfig: AwsGroundStationS5AntennaDownlinkDemodDecodeConfigDemodulationConfig!
  spectrumConfig: AwsGroundStationS7!
}

type AwsGroundStationS5AntennaDownlinkDemodDecodeConfigDecodeConfig {
  unvalidatedJSON: String!
}

input AwsGroundStationS5AntennaDownlinkDemodDecodeConfigDecodeConfigInput {
  unvalidatedJSON: String!
}

type AwsGroundStationS5AntennaDownlinkDemodDecodeConfigDemodulationConfig {
  unvalidatedJSON: String!
}

input AwsGroundStationS5AntennaDownlinkDemodDecodeConfigDemodulationConfigInput {
  unvalidatedJSON: String!
}

input AwsGroundStationS5AntennaDownlinkDemodDecodeConfigInput {
  decodeConfig: AwsGroundStationS5AntennaDownlinkDemodDecodeConfigDecodeConfigInput!
  demodulationConfig: AwsGroundStationS5AntennaDownlinkDemodDecodeConfigDemodulationConfigInput!
  spectrumConfig: AwsGroundStationS7Input!
}

type AwsGroundStationS5AntennaUplinkConfig {
  spectrumConfig: AwsGroundStationS5AntennaUplinkConfigSpectrumConfig!
  targetEirp: AwsGroundStationS5AntennaUplinkConfigTargetEirp!
}

input AwsGroundStationS5AntennaUplinkConfigInput {
  spectrumConfig: AwsGroundStationS5AntennaUplinkConfigSpectrumConfigInput!
  targetEirp: AwsGroundStationS5AntennaUplinkConfigTargetEirpInput!
}

type AwsGroundStationS5AntennaUplinkConfigSpectrumConfig {
  centerFrequency: AwsGroundStationSb!
  polarization: String
}

input AwsGroundStationS5AntennaUplinkConfigSpectrumConfigInput {
  centerFrequency: AwsGroundStationSbInput!
  polarization: String
}

type AwsGroundStationS5AntennaUplinkConfigTargetEirp {
  units: String!
  value: JSON!
}

input AwsGroundStationS5AntennaUplinkConfigTargetEirpInput {
  units: String!
  value: JSON!
}

type AwsGroundStationS5DataflowEndpointConfig {
  dataflowEndpointName: String!
}

input AwsGroundStationS5DataflowEndpointConfigInput {
  dataflowEndpointName: String!
}

input AwsGroundStationS5Input {
  antennaDownlinkConfig: AwsGroundStationS5AntennaDownlinkConfigInput
  antennaDownlinkDemodDecodeConfig: AwsGroundStationS5AntennaDownlinkDemodDecodeConfigInput
  antennaUplinkConfig: AwsGroundStationS5AntennaUplinkConfigInput
  dataflowEndpointConfig: AwsGroundStationS5DataflowEndpointConfigInput
  trackingConfig: AwsGroundStationS5TrackingConfigInput
  uplinkEchoConfig: AwsGroundStationS5UplinkEchoConfigInput
}

type AwsGroundStationS5TrackingConfig {
  autotrack: String!
}

input AwsGroundStationS5TrackingConfigInput {
  autotrack: String!
}

type AwsGroundStationS5UplinkEchoConfig {
  antennaUplinkConfigArn: String!
  enabled: Boolean!
}

input AwsGroundStationS5UplinkEchoConfigInput {
  antennaUplinkConfigArn: String!
  enabled: Boolean!
}

type AwsGroundStationS7 {
  bandwidth: AwsGroundStationS7Bandwidth!
  centerFrequency: AwsGroundStationSb!
  polarization: String
}

type AwsGroundStationS7Bandwidth {
  units: String!
  value: JSON!
}

input AwsGroundStationS7BandwidthInput {
  units: String!
  value: JSON!
}

input AwsGroundStationS7Input {
  bandwidth: AwsGroundStationS7BandwidthInput!
  centerFrequency: AwsGroundStationSbInput!
  polarization: String
}

type AwsGroundStationSb {
  units: String!
  value: JSON!
}

input AwsGroundStationSbInput {
  units: String!
  value: JSON!
}

type AwsGroundStationSx {
  endpoint: AwsGroundStationSxEndpoint
  securityDetails: AwsGroundStationSxSecurityDetails
}

type AwsGroundStationSxEndpoint {
  address: AwsGroundStationSxEndpointAddress
  name: String
  status: String
}

type AwsGroundStationSxEndpointAddress {
  name: String!
  port: Int!
}

input AwsGroundStationSxEndpointAddressInput {
  name: String!
  port: Int!
}

input AwsGroundStationSxEndpointInput {
  address: AwsGroundStationSxEndpointAddressInput
  name: String
  status: String
}

input AwsGroundStationSxInput {
  endpoint: AwsGroundStationSxEndpointInput
  securityDetails: AwsGroundStationSxSecurityDetailsInput
}

type AwsGroundStationSxSecurityDetails {
  roleArn: String!
  securityGroupIds: [String]!
  subnetIds: [String]!
}

input AwsGroundStationSxSecurityDetailsInput {
  roleArn: String!
  securityGroupIds: [String]!
  subnetIds: [String]!
}

input AwsGroundStationTagResourceInput {
  resourceArn: String!
  tags: JSON
}

input AwsGroundStationUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsGroundStationUpdateConfigInput {
  configData: AwsGroundStationS5Input!
  configId: String!
  configType: String!
  name: String!
}

input AwsGroundStationUpdateMissionProfileInput {
  contactPostPassDurationSeconds: Int
  contactPrePassDurationSeconds: Int
  dataflowEdges: [[String]]
  minimumViableContactDurationSeconds: Int
  missionProfileId: String!
  name: String
  trackingConfigArn: String
}

"""Amazon GuardDuty (2017-11-28)"""
type AwsGuardDuty {
  acceptInvitation(input: AwsGuardDutyAcceptInvitationInput!, config: AwsConfig): JSON
  archiveFindings(input: AwsGuardDutyArchiveFindingsInput!, config: AwsConfig): JSON
  createDetector(input: AwsGuardDutyCreateDetectorInput!, config: AwsConfig): AwsGuardDutyCreateDetectorOutput
  createFilter(input: AwsGuardDutyCreateFilterInput!, config: AwsConfig): AwsGuardDutyCreateFilterOutput
  createIPSet(input: AwsGuardDutyCreateIPSetInput!, config: AwsConfig): AwsGuardDutyCreateIPSetOutput
  createMembers(input: AwsGuardDutyCreateMembersInput!, config: AwsConfig): AwsGuardDutyCreateMembersOutput
  createSampleFindings(input: AwsGuardDutyCreateSampleFindingsInput!, config: AwsConfig): JSON
  createThreatIntelSet(input: AwsGuardDutyCreateThreatIntelSetInput!, config: AwsConfig): AwsGuardDutyCreateThreatIntelSetOutput
  declineInvitations(input: AwsGuardDutyDeclineInvitationsInput!, config: AwsConfig): AwsGuardDutyDeclineInvitationsOutput
  deleteDetector(input: AwsGuardDutyDeleteDetectorInput!, config: AwsConfig): JSON
  deleteFilter(input: AwsGuardDutyDeleteFilterInput!, config: AwsConfig): JSON
  deleteIPSet(input: AwsGuardDutyDeleteIPSetInput!, config: AwsConfig): JSON
  deleteInvitations(input: AwsGuardDutyDeleteInvitationsInput!, config: AwsConfig): AwsGuardDutyDeleteInvitationsOutput
  deleteMembers(input: AwsGuardDutyDeleteMembersInput!, config: AwsConfig): AwsGuardDutyDeleteMembersOutput
  deleteThreatIntelSet(input: AwsGuardDutyDeleteThreatIntelSetInput!, config: AwsConfig): JSON
  disassociateFromMasterAccount(input: AwsGuardDutyDisassociateFromMasterAccountInput!, config: AwsConfig): JSON
  disassociateMembers(input: AwsGuardDutyDisassociateMembersInput!, config: AwsConfig): AwsGuardDutyDisassociateMembersOutput
  getDetector(input: AwsGuardDutyGetDetectorInput!, config: AwsConfig): AwsGuardDutyGetDetectorOutput
  getFilter(input: AwsGuardDutyGetFilterInput!, config: AwsConfig): AwsGuardDutyGetFilterOutput
  getFindings(input: AwsGuardDutyGetFindingsInput!, config: AwsConfig): AwsGuardDutyGetFindingsOutput
  getFindingsStatistics(input: AwsGuardDutyGetFindingsStatisticsInput!, config: AwsConfig): AwsGuardDutyGetFindingsStatisticsOutput
  getIPSet(input: AwsGuardDutyGetIPSetInput!, config: AwsConfig): AwsGuardDutyGetIPSetOutput
  getInvitationsCount(input: JSON, config: AwsConfig): AwsGuardDutyGetInvitationsCountOutput
  getMasterAccount(input: AwsGuardDutyGetMasterAccountInput!, config: AwsConfig): AwsGuardDutyGetMasterAccountOutput
  getMembers(input: AwsGuardDutyGetMembersInput!, config: AwsConfig): AwsGuardDutyGetMembersOutput
  getThreatIntelSet(input: AwsGuardDutyGetThreatIntelSetInput!, config: AwsConfig): AwsGuardDutyGetThreatIntelSetOutput
  inviteMembers(input: AwsGuardDutyInviteMembersInput!, config: AwsConfig): AwsGuardDutyInviteMembersOutput
  listDetectors(input: AwsGuardDutyListDetectorsInput, config: AwsConfig): AwsGuardDutyListDetectorsOutput
  listFilters(input: AwsGuardDutyListFiltersInput!, config: AwsConfig): AwsGuardDutyListFiltersOutput
  listFindings(input: AwsGuardDutyListFindingsInput!, config: AwsConfig): AwsGuardDutyListFindingsOutput
  listIPSets(input: AwsGuardDutyListIPSetsInput!, config: AwsConfig): AwsGuardDutyListIPSetsOutput
  listInvitations(input: AwsGuardDutyListInvitationsInput, config: AwsConfig): AwsGuardDutyListInvitationsOutput
  listMembers(input: AwsGuardDutyListMembersInput!, config: AwsConfig): AwsGuardDutyListMembersOutput
  listTagsForResource(input: AwsGuardDutyListTagsForResourceInput!, config: AwsConfig): AwsGuardDutyListTagsForResourceOutput
  listThreatIntelSets(input: AwsGuardDutyListThreatIntelSetsInput!, config: AwsConfig): AwsGuardDutyListThreatIntelSetsOutput
  startMonitoringMembers(input: AwsGuardDutyStartMonitoringMembersInput!, config: AwsConfig): AwsGuardDutyStartMonitoringMembersOutput
  stopMonitoringMembers(input: AwsGuardDutyStopMonitoringMembersInput!, config: AwsConfig): AwsGuardDutyStopMonitoringMembersOutput
  tagResource(input: AwsGuardDutyTagResourceInput!, config: AwsConfig): JSON
  unarchiveFindings(input: AwsGuardDutyUnarchiveFindingsInput!, config: AwsConfig): JSON
  untagResource(input: AwsGuardDutyUntagResourceInput!, config: AwsConfig): JSON
  updateDetector(input: AwsGuardDutyUpdateDetectorInput!, config: AwsConfig): JSON
  updateFilter(input: AwsGuardDutyUpdateFilterInput!, config: AwsConfig): AwsGuardDutyUpdateFilterOutput
  updateFindingsFeedback(input: AwsGuardDutyUpdateFindingsFeedbackInput!, config: AwsConfig): JSON
  updateIPSet(input: AwsGuardDutyUpdateIPSetInput!, config: AwsConfig): JSON
  updateThreatIntelSet(input: AwsGuardDutyUpdateThreatIntelSetInput!, config: AwsConfig): JSON
}

input AwsGuardDutyAcceptInvitationInput {
  DetectorId: String!
  MasterId: String!
  InvitationId: String!
}

input AwsGuardDutyArchiveFindingsInput {
  DetectorId: String!
  FindingIds: [String]!
}

input AwsGuardDutyCreateDetectorInput {
  Enable: Boolean!
  ClientToken: String
  FindingPublishingFrequency: String
  Tags: JSON
}

type AwsGuardDutyCreateDetectorOutput {
  DetectorId: String
}

input AwsGuardDutyCreateFilterInput {
  DetectorId: String!
  Name: String!
  Description: String
  Action: String
  Rank: Int
  FindingCriteria: AwsGuardDutySmInput!
  ClientToken: String
  Tags: JSON
}

type AwsGuardDutyCreateFilterOutput {
  Name: String!
}

input AwsGuardDutyCreateIPSetInput {
  DetectorId: String!
  Name: String!
  Format: String!
  Location: String!
  Activate: Boolean!
  ClientToken: String
  Tags: JSON
}

type AwsGuardDutyCreateIPSetOutput {
  IpSetId: String!
}

input AwsGuardDutyCreateMembersAccountDetailsInput {
  AccountId: String!
  Email: String!
}

input AwsGuardDutyCreateMembersInput {
  DetectorId: String!
  AccountDetails: [AwsGuardDutyCreateMembersAccountDetailsInput]!
}

type AwsGuardDutyCreateMembersOutput {
  UnprocessedAccounts: [AwsGuardDutyS17]!
}

input AwsGuardDutyCreateSampleFindingsInput {
  DetectorId: String!
  FindingTypes: [String]
}

input AwsGuardDutyCreateThreatIntelSetInput {
  DetectorId: String!
  Name: String!
  Format: String!
  Location: String!
  Activate: Boolean!
  ClientToken: String
  Tags: JSON
}

type AwsGuardDutyCreateThreatIntelSetOutput {
  ThreatIntelSetId: String!
}

input AwsGuardDutyDeclineInvitationsInput {
  AccountIds: [String]!
}

type AwsGuardDutyDeclineInvitationsOutput {
  UnprocessedAccounts: [AwsGuardDutyS17]!
}

input AwsGuardDutyDeleteDetectorInput {
  DetectorId: String!
}

input AwsGuardDutyDeleteFilterInput {
  DetectorId: String!
  FilterName: String!
}

input AwsGuardDutyDeleteInvitationsInput {
  AccountIds: [String]!
}

type AwsGuardDutyDeleteInvitationsOutput {
  UnprocessedAccounts: [AwsGuardDutyS17]!
}

input AwsGuardDutyDeleteIPSetInput {
  DetectorId: String!
  IpSetId: String!
}

input AwsGuardDutyDeleteMembersInput {
  DetectorId: String!
  AccountIds: [String]!
}

type AwsGuardDutyDeleteMembersOutput {
  UnprocessedAccounts: [AwsGuardDutyS17]!
}

input AwsGuardDutyDeleteThreatIntelSetInput {
  DetectorId: String!
  ThreatIntelSetId: String!
}

input AwsGuardDutyDisassociateFromMasterAccountInput {
  DetectorId: String!
}

input AwsGuardDutyDisassociateMembersInput {
  DetectorId: String!
  AccountIds: [String]!
}

type AwsGuardDutyDisassociateMembersOutput {
  UnprocessedAccounts: [AwsGuardDutyS17]!
}

input AwsGuardDutyGetDetectorInput {
  DetectorId: String!
}

type AwsGuardDutyGetDetectorOutput {
  CreatedAt: String
  FindingPublishingFrequency: String
  ServiceRole: String!
  Status: String!
  UpdatedAt: String
  Tags: JSON
}

input AwsGuardDutyGetFilterInput {
  DetectorId: String!
  FilterName: String!
}

type AwsGuardDutyGetFilterOutput {
  Name: String!
  Description: String
  Action: String!
  Rank: Int
  FindingCriteria: AwsGuardDutySm!
  Tags: JSON
}

input AwsGuardDutyGetFindingsInput {
  DetectorId: String!
  FindingIds: [String]!
  SortCriteria: AwsGuardDutyS25Input
}

type AwsGuardDutyGetFindingsOutput {
  Findings: [AwsGuardDutyGetFindingsOutputFindings]!
}

type AwsGuardDutyGetFindingsOutputFindings {
  AccountId: String!
  Arn: String!
  Confidence: JSON
  CreatedAt: String!
  Description: String
  Id: String!
  Partition: String
  Region: String!
  Resource: AwsGuardDutyGetFindingsOutputFindingsResource!
  SchemaVersion: String!
  Service: AwsGuardDutyGetFindingsOutputFindingsService
  Severity: JSON!
  Title: String
  Type: String!
  UpdatedAt: String!
}

type AwsGuardDutyGetFindingsOutputFindingsResource {
  AccessKeyDetails: AwsGuardDutyGetFindingsOutputFindingsResourceAccessKeyDetails
  InstanceDetails: AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetails
  ResourceType: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceAccessKeyDetails {
  AccessKeyId: String
  PrincipalId: String
  UserName: String
  UserType: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetails {
  AvailabilityZone: String
  IamInstanceProfile: AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsIamInstanceProfile
  ImageDescription: String
  ImageId: String
  InstanceId: String
  InstanceState: String
  InstanceType: String
  LaunchTime: String
  NetworkInterfaces: [AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfaces]
  Platform: String
  ProductCodes: [AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsProductCodes]
  Tags: [AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsTags]
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsIamInstanceProfile {
  Arn: String
  Id: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfaces {
  Ipv6Addresses: [String]
  NetworkInterfaceId: String
  PrivateDnsName: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesPrivateIpAddresses]
  PublicDnsName: String
  PublicIp: String
  SecurityGroups: [AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesSecurityGroups]
  SubnetId: String
  VpcId: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesPrivateIpAddresses {
  PrivateDnsName: String
  PrivateIpAddress: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesSecurityGroups {
  GroupId: String
  GroupName: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsProductCodes {
  Code: String
  ProductType: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsTags {
  Key: String
  Value: String
}

type AwsGuardDutyGetFindingsOutputFindingsService {
  Action: AwsGuardDutyGetFindingsOutputFindingsServiceAction
  Archived: Boolean
  Count: Int
  DetectorId: String
  EventFirstSeen: String
  EventLastSeen: String
  ResourceRole: String
  ServiceName: String
  UserFeedback: String
}

type AwsGuardDutyGetFindingsOutputFindingsServiceAction {
  ActionType: String
  AwsApiCallAction: AwsGuardDutyGetFindingsOutputFindingsServiceActionAwsApiCallAction
  DnsRequestAction: AwsGuardDutyGetFindingsOutputFindingsServiceActionDnsRequestAction
  NetworkConnectionAction: AwsGuardDutyGetFindingsOutputFindingsServiceActionNetworkConnectionAction
  PortProbeAction: AwsGuardDutyGetFindingsOutputFindingsServiceActionPortProbeAction
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionAwsApiCallAction {
  Api: String
  CallerType: String
  DomainDetails: AwsGuardDutyGetFindingsOutputFindingsServiceActionAwsApiCallActionDomainDetails
  RemoteIpDetails: AwsGuardDutyS2u
  ServiceName: String
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionAwsApiCallActionDomainDetails {
  Domain: String
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionDnsRequestAction {
  Domain: String
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionNetworkConnectionAction {
  Blocked: Boolean
  ConnectionDirection: String
  LocalPortDetails: AwsGuardDutyS31
  Protocol: String
  RemoteIpDetails: AwsGuardDutyS2u
  RemotePortDetails: AwsGuardDutyGetFindingsOutputFindingsServiceActionNetworkConnectionActionRemotePortDetails
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionNetworkConnectionActionRemotePortDetails {
  Port: Int
  PortName: String
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionPortProbeAction {
  Blocked: Boolean
  PortProbeDetails: [AwsGuardDutyGetFindingsOutputFindingsServiceActionPortProbeActionPortProbeDetails]
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionPortProbeActionPortProbeDetails {
  LocalPortDetails: AwsGuardDutyS31
  RemoteIpDetails: AwsGuardDutyS2u
}

input AwsGuardDutyGetFindingsStatisticsInput {
  DetectorId: String!
  FindingStatisticTypes: [String]!
  FindingCriteria: AwsGuardDutySmInput
}

type AwsGuardDutyGetFindingsStatisticsOutput {
  FindingStatistics: AwsGuardDutyGetFindingsStatisticsOutputFindingStatistics!
}

type AwsGuardDutyGetFindingsStatisticsOutputFindingStatistics {
  CountBySeverity: JSON
}

type AwsGuardDutyGetInvitationsCountOutput {
  InvitationsCount: Int
}

input AwsGuardDutyGetIPSetInput {
  DetectorId: String!
  IpSetId: String!
}

type AwsGuardDutyGetIPSetOutput {
  Name: String!
  Format: String!
  Location: String!
  Status: String!
  Tags: JSON
}

input AwsGuardDutyGetMasterAccountInput {
  DetectorId: String!
}

type AwsGuardDutyGetMasterAccountOutput {
  Master: AwsGuardDutyGetMasterAccountOutputMaster!
}

type AwsGuardDutyGetMasterAccountOutputMaster {
  AccountId: String
  InvitationId: String
  RelationshipStatus: String
  InvitedAt: String
}

input AwsGuardDutyGetMembersInput {
  DetectorId: String!
  AccountIds: [String]!
}

type AwsGuardDutyGetMembersOutput {
  Members: [AwsGuardDutyS3m]!
  UnprocessedAccounts: [AwsGuardDutyS17]!
}

input AwsGuardDutyGetThreatIntelSetInput {
  DetectorId: String!
  ThreatIntelSetId: String!
}

type AwsGuardDutyGetThreatIntelSetOutput {
  Name: String!
  Format: String!
  Location: String!
  Status: String!
  Tags: JSON
}

input AwsGuardDutyInviteMembersInput {
  DetectorId: String!
  AccountIds: [String]!
  DisableEmailNotification: Boolean
  Message: String
}

type AwsGuardDutyInviteMembersOutput {
  UnprocessedAccounts: [AwsGuardDutyS17]!
}

input AwsGuardDutyListDetectorsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGuardDutyListDetectorsOutput {
  DetectorIds: [String]!
  NextToken: String
}

input AwsGuardDutyListFiltersInput {
  DetectorId: String!
  MaxResults: Int
  NextToken: String
}

type AwsGuardDutyListFiltersOutput {
  FilterNames: [String]!
  NextToken: String
}

input AwsGuardDutyListFindingsInput {
  DetectorId: String!
  FindingCriteria: AwsGuardDutySmInput
  SortCriteria: AwsGuardDutyS25Input
  MaxResults: Int
  NextToken: String
}

type AwsGuardDutyListFindingsOutput {
  FindingIds: [String]!
  NextToken: String
}

input AwsGuardDutyListInvitationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGuardDutyListInvitationsOutput {
  Invitations: [AwsGuardDutyListInvitationsOutputInvitations]
  NextToken: String
}

type AwsGuardDutyListInvitationsOutputInvitations {
  AccountId: String
  InvitationId: String
  RelationshipStatus: String
  InvitedAt: String
}

input AwsGuardDutyListIPSetsInput {
  DetectorId: String!
  MaxResults: Int
  NextToken: String
}

type AwsGuardDutyListIPSetsOutput {
  IpSetIds: [String]!
  NextToken: String
}

input AwsGuardDutyListMembersInput {
  DetectorId: String!
  MaxResults: Int
  NextToken: String
  OnlyAssociated: String
}

type AwsGuardDutyListMembersOutput {
  Members: [AwsGuardDutyS3m]
  NextToken: String
}

input AwsGuardDutyListTagsForResourceInput {
  ResourceArn: String!
}

type AwsGuardDutyListTagsForResourceOutput {
  Tags: JSON
}

input AwsGuardDutyListThreatIntelSetsInput {
  DetectorId: String!
  MaxResults: Int
  NextToken: String
}

type AwsGuardDutyListThreatIntelSetsOutput {
  ThreatIntelSetIds: [String]!
  NextToken: String
}

type AwsGuardDutyS17 {
  AccountId: String!
  Result: String!
}

input AwsGuardDutyS25Input {
  AttributeName: String
  OrderBy: String
}

type AwsGuardDutyS2u {
  City: AwsGuardDutyS2uCity
  Country: AwsGuardDutyS2uCountry
  GeoLocation: AwsGuardDutyS2uGeoLocation
  IpAddressV4: String
  Organization: AwsGuardDutyS2uOrganization
}

type AwsGuardDutyS2uCity {
  CityName: String
}

type AwsGuardDutyS2uCountry {
  CountryCode: String
  CountryName: String
}

type AwsGuardDutyS2uGeoLocation {
  Lat: JSON
  Lon: JSON
}

type AwsGuardDutyS2uOrganization {
  Asn: String
  AsnOrg: String
  Isp: String
  Org: String
}

type AwsGuardDutyS31 {
  Port: Int
  PortName: String
}

type AwsGuardDutyS3m {
  AccountId: String!
  DetectorId: String
  MasterId: String!
  Email: String!
  RelationshipStatus: String!
  InvitedAt: String
  UpdatedAt: String!
}

type AwsGuardDutySm {
  Criterion: JSON
}

input AwsGuardDutySmInput {
  Criterion: JSON
}

input AwsGuardDutyStartMonitoringMembersInput {
  DetectorId: String!
  AccountIds: [String]!
}

type AwsGuardDutyStartMonitoringMembersOutput {
  UnprocessedAccounts: [AwsGuardDutyS17]!
}

input AwsGuardDutyStopMonitoringMembersInput {
  DetectorId: String!
  AccountIds: [String]!
}

type AwsGuardDutyStopMonitoringMembersOutput {
  UnprocessedAccounts: [AwsGuardDutyS17]!
}

input AwsGuardDutyTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsGuardDutyUnarchiveFindingsInput {
  DetectorId: String!
  FindingIds: [String]!
}

input AwsGuardDutyUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsGuardDutyUpdateDetectorInput {
  DetectorId: String!
  Enable: Boolean
  FindingPublishingFrequency: String
}

input AwsGuardDutyUpdateFilterInput {
  DetectorId: String!
  FilterName: String!
  Description: String
  Action: String
  Rank: Int
  FindingCriteria: AwsGuardDutySmInput
}

type AwsGuardDutyUpdateFilterOutput {
  Name: String!
}

input AwsGuardDutyUpdateFindingsFeedbackInput {
  DetectorId: String!
  FindingIds: [String]!
  Feedback: String!
  Comments: String
}

input AwsGuardDutyUpdateIPSetInput {
  DetectorId: String!
  IpSetId: String!
  Name: String
  Location: String
  Activate: Boolean
}

input AwsGuardDutyUpdateThreatIntelSetInput {
  DetectorId: String!
  ThreatIntelSetId: String!
  Name: String
  Location: String
  Activate: Boolean
}

"""AWS Health APIs and Notifications (2016-08-04)"""
type AwsHealth {
  describeAffectedEntities(input: AwsHealthDescribeAffectedEntitiesInput!, config: AwsConfig): AwsHealthDescribeAffectedEntitiesOutput
  describeEntityAggregates(input: AwsHealthDescribeEntityAggregatesInput, config: AwsConfig): AwsHealthDescribeEntityAggregatesOutput
  describeEventAggregates(input: AwsHealthDescribeEventAggregatesInput!, config: AwsConfig): AwsHealthDescribeEventAggregatesOutput
  describeEventDetails(input: AwsHealthDescribeEventDetailsInput!, config: AwsConfig): AwsHealthDescribeEventDetailsOutput
  describeEventTypes(input: AwsHealthDescribeEventTypesInput, config: AwsConfig): AwsHealthDescribeEventTypesOutput
  describeEvents(input: AwsHealthDescribeEventsInput, config: AwsConfig): AwsHealthDescribeEventsOutput
}

input AwsHealthDescribeAffectedEntitiesFilterInput {
  eventArns: [String]!
  entityArns: [String]
  entityValues: [String]
  lastUpdatedTimes: [AwsHealthS9Input]
  tags: [JSON]
  statusCodes: [String]
}

input AwsHealthDescribeAffectedEntitiesInput {
  filter: AwsHealthDescribeAffectedEntitiesFilterInput!
  locale: String
  nextToken: String
  maxResults: Int
}

type AwsHealthDescribeAffectedEntitiesOutput {
  entities: [AwsHealthDescribeAffectedEntitiesOutputEntities]
  nextToken: String
}

type AwsHealthDescribeAffectedEntitiesOutputEntities {
  entityArn: String
  eventArn: String
  entityValue: String
  entityUrl: String
  awsAccountId: String
  lastUpdatedTime: Date
  statusCode: String
  tags: JSON
}

input AwsHealthDescribeEntityAggregatesInput {
  eventArns: [String]
}

type AwsHealthDescribeEntityAggregatesOutput {
  entityAggregates: [AwsHealthDescribeEntityAggregatesOutputEntityAggregates]
}

type AwsHealthDescribeEntityAggregatesOutputEntityAggregates {
  eventArn: String
  count: Int
}

input AwsHealthDescribeEventAggregatesInput {
  filter: AwsHealthSxInput
  aggregateField: String!
  maxResults: Int
  nextToken: String
}

type AwsHealthDescribeEventAggregatesOutput {
  eventAggregates: [AwsHealthDescribeEventAggregatesOutputEventAggregates]
  nextToken: String
}

type AwsHealthDescribeEventAggregatesOutputEventAggregates {
  aggregateValue: String
  count: Int
}

input AwsHealthDescribeEventDetailsInput {
  eventArns: [String]!
  locale: String
}

type AwsHealthDescribeEventDetailsOutput {
  successfulSet: [AwsHealthDescribeEventDetailsOutputSuccessfulSet]
  failedSet: [AwsHealthDescribeEventDetailsOutputFailedSet]
}

type AwsHealthDescribeEventDetailsOutputFailedSet {
  eventArn: String
  errorName: String
  errorMessage: String
}

type AwsHealthDescribeEventDetailsOutputSuccessfulSet {
  event: AwsHealthS1j
  eventDescription: AwsHealthDescribeEventDetailsOutputSuccessfulSetEventDescription
  eventMetadata: JSON
}

type AwsHealthDescribeEventDetailsOutputSuccessfulSetEventDescription {
  latestDescription: String
}

input AwsHealthDescribeEventsInput {
  filter: AwsHealthSxInput
  nextToken: String
  maxResults: Int
  locale: String
}

type AwsHealthDescribeEventsOutput {
  events: [AwsHealthS1j]
  nextToken: String
}

input AwsHealthDescribeEventTypesFilterInput {
  eventTypeCodes: [String]
  services: [String]
  eventTypeCategories: [String]
}

input AwsHealthDescribeEventTypesInput {
  filter: AwsHealthDescribeEventTypesFilterInput
  locale: String
  nextToken: String
  maxResults: Int
}

type AwsHealthDescribeEventTypesOutput {
  eventTypes: [AwsHealthDescribeEventTypesOutputEventTypes]
  nextToken: String
}

type AwsHealthDescribeEventTypesOutputEventTypes {
  service: String
  code: String
  category: String
}

type AwsHealthS1j {
  arn: String
  service: String
  eventTypeCode: String
  eventTypeCategory: String
  region: String
  availabilityZone: String
  startTime: Date
  endTime: Date
  lastUpdatedTime: Date
  statusCode: String
}

input AwsHealthS9Input {
  from: Date
  to: Date
}

input AwsHealthSxInput {
  eventArns: [String]
  eventTypeCodes: [String]
  services: [String]
  regions: [String]
  availabilityZones: [String]
  startTimes: [AwsHealthS9Input]
  endTimes: [AwsHealthS9Input]
  lastUpdatedTimes: [AwsHealthS9Input]
  entityArns: [String]
  entityValues: [String]
  eventTypeCategories: [String]
  tags: [JSON]
  eventStatusCodes: [String]
}

"""AWS Identity and Access Management (2010-05-08)"""
type AwsIAM {
  addClientIDToOpenIDConnectProvider(input: AwsIAMAddClientIDToOpenIDConnectProviderInput!, config: AwsConfig): JSON
  addRoleToInstanceProfile(input: AwsIAMAddRoleToInstanceProfileInput!, config: AwsConfig): JSON
  addUserToGroup(input: AwsIAMAddUserToGroupInput!, config: AwsConfig): JSON
  attachGroupPolicy(input: AwsIAMAttachGroupPolicyInput!, config: AwsConfig): JSON
  attachRolePolicy(input: AwsIAMAttachRolePolicyInput!, config: AwsConfig): JSON
  attachUserPolicy(input: AwsIAMAttachUserPolicyInput!, config: AwsConfig): JSON
  changePassword(input: AwsIAMChangePasswordInput!, config: AwsConfig): JSON
  createAccessKey(input: AwsIAMCreateAccessKeyInput, config: AwsConfig): AwsIAMCreateAccessKeyOutput
  createAccountAlias(input: AwsIAMCreateAccountAliasInput!, config: AwsConfig): JSON
  createGroup(input: AwsIAMCreateGroupInput!, config: AwsConfig): AwsIAMCreateGroupOutput
  createInstanceProfile(input: AwsIAMCreateInstanceProfileInput!, config: AwsConfig): AwsIAMCreateInstanceProfileOutput
  createLoginProfile(input: AwsIAMCreateLoginProfileInput!, config: AwsConfig): AwsIAMCreateLoginProfileOutput
  createOpenIDConnectProvider(input: AwsIAMCreateOpenIDConnectProviderInput!, config: AwsConfig): AwsIAMCreateOpenIDConnectProviderOutput
  createPolicy(input: AwsIAMCreatePolicyInput!, config: AwsConfig): AwsIAMCreatePolicyOutput
  createPolicyVersion(input: AwsIAMCreatePolicyVersionInput!, config: AwsConfig): AwsIAMCreatePolicyVersionOutput
  createRole(input: AwsIAMCreateRoleInput!, config: AwsConfig): AwsIAMCreateRoleOutput
  createSAMLProvider(input: AwsIAMCreateSAMLProviderInput!, config: AwsConfig): AwsIAMCreateSAMLProviderOutput
  createServiceLinkedRole(input: AwsIAMCreateServiceLinkedRoleInput!, config: AwsConfig): AwsIAMCreateServiceLinkedRoleOutput
  createServiceSpecificCredential(input: AwsIAMCreateServiceSpecificCredentialInput!, config: AwsConfig): AwsIAMCreateServiceSpecificCredentialOutput
  createUser(input: AwsIAMCreateUserInput!, config: AwsConfig): AwsIAMCreateUserOutput
  createVirtualMFADevice(input: AwsIAMCreateVirtualMFADeviceInput!, config: AwsConfig): AwsIAMCreateVirtualMFADeviceOutput
  deactivateMFADevice(input: AwsIAMDeactivateMFADeviceInput!, config: AwsConfig): JSON
  deleteAccessKey(input: AwsIAMDeleteAccessKeyInput!, config: AwsConfig): JSON
  deleteAccountAlias(input: AwsIAMDeleteAccountAliasInput!, config: AwsConfig): JSON
  deleteAccountPasswordPolicy(config: AwsConfig): JSON
  deleteGroup(input: AwsIAMDeleteGroupInput!, config: AwsConfig): JSON
  deleteGroupPolicy(input: AwsIAMDeleteGroupPolicyInput!, config: AwsConfig): JSON
  deleteInstanceProfile(input: AwsIAMDeleteInstanceProfileInput!, config: AwsConfig): JSON
  deleteLoginProfile(input: AwsIAMDeleteLoginProfileInput!, config: AwsConfig): JSON
  deleteOpenIDConnectProvider(input: AwsIAMDeleteOpenIDConnectProviderInput!, config: AwsConfig): JSON
  deletePolicy(input: AwsIAMDeletePolicyInput!, config: AwsConfig): JSON
  deletePolicyVersion(input: AwsIAMDeletePolicyVersionInput!, config: AwsConfig): JSON
  deleteRole(input: AwsIAMDeleteRoleInput!, config: AwsConfig): JSON
  deleteRolePermissionsBoundary(input: AwsIAMDeleteRolePermissionsBoundaryInput!, config: AwsConfig): JSON
  deleteRolePolicy(input: AwsIAMDeleteRolePolicyInput!, config: AwsConfig): JSON
  deleteSAMLProvider(input: AwsIAMDeleteSAMLProviderInput!, config: AwsConfig): JSON
  deleteSSHPublicKey(input: AwsIAMDeleteSSHPublicKeyInput!, config: AwsConfig): JSON
  deleteServerCertificate(input: AwsIAMDeleteServerCertificateInput!, config: AwsConfig): JSON
  deleteServiceLinkedRole(input: AwsIAMDeleteServiceLinkedRoleInput!, config: AwsConfig): AwsIAMDeleteServiceLinkedRoleOutput
  deleteServiceSpecificCredential(input: AwsIAMDeleteServiceSpecificCredentialInput!, config: AwsConfig): JSON
  deleteSigningCertificate(input: AwsIAMDeleteSigningCertificateInput!, config: AwsConfig): JSON
  deleteUser(input: AwsIAMDeleteUserInput!, config: AwsConfig): JSON
  deleteUserPermissionsBoundary(input: AwsIAMDeleteUserPermissionsBoundaryInput!, config: AwsConfig): JSON
  deleteUserPolicy(input: AwsIAMDeleteUserPolicyInput!, config: AwsConfig): JSON
  deleteVirtualMFADevice(input: AwsIAMDeleteVirtualMFADeviceInput!, config: AwsConfig): JSON
  detachGroupPolicy(input: AwsIAMDetachGroupPolicyInput!, config: AwsConfig): JSON
  detachRolePolicy(input: AwsIAMDetachRolePolicyInput!, config: AwsConfig): JSON
  detachUserPolicy(input: AwsIAMDetachUserPolicyInput!, config: AwsConfig): JSON
  enableMFADevice(input: AwsIAMEnableMFADeviceInput!, config: AwsConfig): JSON
  generateCredentialReport(config: AwsConfig): AwsIAMGenerateCredentialReportOutput
  generateOrganizationsAccessReport(input: AwsIAMGenerateOrganizationsAccessReportInput!, config: AwsConfig): AwsIAMGenerateOrganizationsAccessReportOutput
  generateServiceLastAccessedDetails(input: AwsIAMGenerateServiceLastAccessedDetailsInput!, config: AwsConfig): AwsIAMGenerateServiceLastAccessedDetailsOutput
  getAccessKeyLastUsed(input: AwsIAMGetAccessKeyLastUsedInput!, config: AwsConfig): AwsIAMGetAccessKeyLastUsedOutput
  getAccountAuthorizationDetails(input: AwsIAMGetAccountAuthorizationDetailsInput, config: AwsConfig): AwsIAMGetAccountAuthorizationDetailsOutput
  getAccountPasswordPolicy(config: AwsConfig): AwsIAMGetAccountPasswordPolicyOutput
  getAccountSummary(config: AwsConfig): AwsIAMGetAccountSummaryOutput
  getContextKeysForCustomPolicy(input: AwsIAMGetContextKeysForCustomPolicyInput!, config: AwsConfig): JSON
  getContextKeysForPrincipalPolicy(input: AwsIAMGetContextKeysForPrincipalPolicyInput!, config: AwsConfig): JSON
  getCredentialReport(config: AwsConfig): AwsIAMGetCredentialReportOutput
  getGroup(input: AwsIAMGetGroupInput!, config: AwsConfig): AwsIAMGetGroupOutput
  getGroupPolicy(input: AwsIAMGetGroupPolicyInput!, config: AwsConfig): AwsIAMGetGroupPolicyOutput
  getInstanceProfile(input: AwsIAMGetInstanceProfileInput!, config: AwsConfig): AwsIAMGetInstanceProfileOutput
  getLoginProfile(input: AwsIAMGetLoginProfileInput!, config: AwsConfig): AwsIAMGetLoginProfileOutput
  getOpenIDConnectProvider(input: AwsIAMGetOpenIDConnectProviderInput!, config: AwsConfig): AwsIAMGetOpenIDConnectProviderOutput
  getOrganizationsAccessReport(input: AwsIAMGetOrganizationsAccessReportInput!, config: AwsConfig): AwsIAMGetOrganizationsAccessReportOutput
  getPolicy(input: AwsIAMGetPolicyInput!, config: AwsConfig): AwsIAMGetPolicyOutput
  getPolicyVersion(input: AwsIAMGetPolicyVersionInput!, config: AwsConfig): AwsIAMGetPolicyVersionOutput
  getRole(input: AwsIAMGetRoleInput!, config: AwsConfig): AwsIAMGetRoleOutput
  getRolePolicy(input: AwsIAMGetRolePolicyInput!, config: AwsConfig): AwsIAMGetRolePolicyOutput
  getSAMLProvider(input: AwsIAMGetSAMLProviderInput!, config: AwsConfig): AwsIAMGetSAMLProviderOutput
  getSSHPublicKey(input: AwsIAMGetSSHPublicKeyInput!, config: AwsConfig): AwsIAMGetSSHPublicKeyOutput
  getServerCertificate(input: AwsIAMGetServerCertificateInput!, config: AwsConfig): AwsIAMGetServerCertificateOutput
  getServiceLastAccessedDetails(input: AwsIAMGetServiceLastAccessedDetailsInput!, config: AwsConfig): AwsIAMGetServiceLastAccessedDetailsOutput
  getServiceLastAccessedDetailsWithEntities(input: AwsIAMGetServiceLastAccessedDetailsWithEntitiesInput!, config: AwsConfig): AwsIAMGetServiceLastAccessedDetailsWithEntitiesOutput
  getServiceLinkedRoleDeletionStatus(input: AwsIAMGetServiceLinkedRoleDeletionStatusInput!, config: AwsConfig): AwsIAMGetServiceLinkedRoleDeletionStatusOutput
  getUser(input: AwsIAMGetUserInput, config: AwsConfig): AwsIAMGetUserOutput
  getUserPolicy(input: AwsIAMGetUserPolicyInput!, config: AwsConfig): AwsIAMGetUserPolicyOutput
  listAccessKeys(input: AwsIAMListAccessKeysInput, config: AwsConfig): AwsIAMListAccessKeysOutput
  listAccountAliases(input: AwsIAMListAccountAliasesInput, config: AwsConfig): AwsIAMListAccountAliasesOutput
  listAttachedGroupPolicies(input: AwsIAMListAttachedGroupPoliciesInput!, config: AwsConfig): AwsIAMListAttachedGroupPoliciesOutput
  listAttachedRolePolicies(input: AwsIAMListAttachedRolePoliciesInput!, config: AwsConfig): AwsIAMListAttachedRolePoliciesOutput
  listAttachedUserPolicies(input: AwsIAMListAttachedUserPoliciesInput!, config: AwsConfig): AwsIAMListAttachedUserPoliciesOutput
  listEntitiesForPolicy(input: AwsIAMListEntitiesForPolicyInput!, config: AwsConfig): AwsIAMListEntitiesForPolicyOutput
  listGroupPolicies(input: AwsIAMListGroupPoliciesInput!, config: AwsConfig): AwsIAMListGroupPoliciesOutput
  listGroups(input: AwsIAMListGroupsInput, config: AwsConfig): AwsIAMListGroupsOutput
  listGroupsForUser(input: AwsIAMListGroupsForUserInput!, config: AwsConfig): AwsIAMListGroupsForUserOutput
  listInstanceProfiles(input: AwsIAMListInstanceProfilesInput, config: AwsConfig): AwsIAMListInstanceProfilesOutput
  listInstanceProfilesForRole(input: AwsIAMListInstanceProfilesForRoleInput!, config: AwsConfig): AwsIAMListInstanceProfilesForRoleOutput
  listMFADevices(input: AwsIAMListMFADevicesInput, config: AwsConfig): AwsIAMListMFADevicesOutput
  listOpenIDConnectProviders(input: JSON, config: AwsConfig): AwsIAMListOpenIDConnectProvidersOutput
  listPolicies(input: AwsIAMListPoliciesInput, config: AwsConfig): AwsIAMListPoliciesOutput
  listPoliciesGrantingServiceAccess(input: AwsIAMListPoliciesGrantingServiceAccessInput!, config: AwsConfig): AwsIAMListPoliciesGrantingServiceAccessOutput
  listPolicyVersions(input: AwsIAMListPolicyVersionsInput!, config: AwsConfig): AwsIAMListPolicyVersionsOutput
  listRolePolicies(input: AwsIAMListRolePoliciesInput!, config: AwsConfig): AwsIAMListRolePoliciesOutput
  listRoleTags(input: AwsIAMListRoleTagsInput!, config: AwsConfig): AwsIAMListRoleTagsOutput
  listRoles(input: AwsIAMListRolesInput, config: AwsConfig): AwsIAMListRolesOutput
  listSAMLProviders(input: JSON, config: AwsConfig): AwsIAMListSAMLProvidersOutput
  listSSHPublicKeys(input: AwsIAMListSSHPublicKeysInput, config: AwsConfig): AwsIAMListSSHPublicKeysOutput
  listServerCertificates(input: AwsIAMListServerCertificatesInput, config: AwsConfig): AwsIAMListServerCertificatesOutput
  listServiceSpecificCredentials(input: AwsIAMListServiceSpecificCredentialsInput, config: AwsConfig): AwsIAMListServiceSpecificCredentialsOutput
  listSigningCertificates(input: AwsIAMListSigningCertificatesInput, config: AwsConfig): AwsIAMListSigningCertificatesOutput
  listUserPolicies(input: AwsIAMListUserPoliciesInput!, config: AwsConfig): AwsIAMListUserPoliciesOutput
  listUserTags(input: AwsIAMListUserTagsInput!, config: AwsConfig): AwsIAMListUserTagsOutput
  listUsers(input: AwsIAMListUsersInput, config: AwsConfig): AwsIAMListUsersOutput
  listVirtualMFADevices(input: AwsIAMListVirtualMFADevicesInput, config: AwsConfig): AwsIAMListVirtualMFADevicesOutput
  putGroupPolicy(input: AwsIAMPutGroupPolicyInput!, config: AwsConfig): JSON
  putRolePermissionsBoundary(input: AwsIAMPutRolePermissionsBoundaryInput!, config: AwsConfig): JSON
  putRolePolicy(input: AwsIAMPutRolePolicyInput!, config: AwsConfig): JSON
  putUserPermissionsBoundary(input: AwsIAMPutUserPermissionsBoundaryInput!, config: AwsConfig): JSON
  putUserPolicy(input: AwsIAMPutUserPolicyInput!, config: AwsConfig): JSON
  removeClientIDFromOpenIDConnectProvider(input: AwsIAMRemoveClientIDFromOpenIDConnectProviderInput!, config: AwsConfig): JSON
  removeRoleFromInstanceProfile(input: AwsIAMRemoveRoleFromInstanceProfileInput!, config: AwsConfig): JSON
  removeUserFromGroup(input: AwsIAMRemoveUserFromGroupInput!, config: AwsConfig): JSON
  resetServiceSpecificCredential(input: AwsIAMResetServiceSpecificCredentialInput!, config: AwsConfig): AwsIAMResetServiceSpecificCredentialOutput
  resyncMFADevice(input: AwsIAMResyncMFADeviceInput!, config: AwsConfig): JSON
  setDefaultPolicyVersion(input: AwsIAMSetDefaultPolicyVersionInput!, config: AwsConfig): JSON
  setSecurityTokenServicePreferences(input: AwsIAMSetSecurityTokenServicePreferencesInput!, config: AwsConfig): JSON
  simulateCustomPolicy(input: AwsIAMSimulateCustomPolicyInput!, config: AwsConfig): JSON
  simulatePrincipalPolicy(input: AwsIAMSimulatePrincipalPolicyInput!, config: AwsConfig): JSON
  tagRole(input: AwsIAMTagRoleInput!, config: AwsConfig): JSON
  tagUser(input: AwsIAMTagUserInput!, config: AwsConfig): JSON
  untagRole(input: AwsIAMUntagRoleInput!, config: AwsConfig): JSON
  untagUser(input: AwsIAMUntagUserInput!, config: AwsConfig): JSON
  updateAccessKey(input: AwsIAMUpdateAccessKeyInput!, config: AwsConfig): JSON
  updateAccountPasswordPolicy(input: AwsIAMUpdateAccountPasswordPolicyInput, config: AwsConfig): JSON
  updateAssumeRolePolicy(input: AwsIAMUpdateAssumeRolePolicyInput!, config: AwsConfig): JSON
  updateGroup(input: AwsIAMUpdateGroupInput!, config: AwsConfig): JSON
  updateLoginProfile(input: AwsIAMUpdateLoginProfileInput!, config: AwsConfig): JSON
  updateOpenIDConnectProviderThumbprint(input: AwsIAMUpdateOpenIDConnectProviderThumbprintInput!, config: AwsConfig): JSON
  updateRole(input: AwsIAMUpdateRoleInput!, config: AwsConfig): JSON
  updateRoleDescription(input: AwsIAMUpdateRoleDescriptionInput!, config: AwsConfig): AwsIAMUpdateRoleDescriptionOutput
  updateSAMLProvider(input: AwsIAMUpdateSAMLProviderInput!, config: AwsConfig): AwsIAMUpdateSAMLProviderOutput
  updateSSHPublicKey(input: AwsIAMUpdateSSHPublicKeyInput!, config: AwsConfig): JSON
  updateServerCertificate(input: AwsIAMUpdateServerCertificateInput!, config: AwsConfig): JSON
  updateServiceSpecificCredential(input: AwsIAMUpdateServiceSpecificCredentialInput!, config: AwsConfig): JSON
  updateSigningCertificate(input: AwsIAMUpdateSigningCertificateInput!, config: AwsConfig): JSON
  updateUser(input: AwsIAMUpdateUserInput!, config: AwsConfig): JSON
  uploadSSHPublicKey(input: AwsIAMUploadSSHPublicKeyInput!, config: AwsConfig): AwsIAMUploadSSHPublicKeyOutput
  uploadServerCertificate(input: AwsIAMUploadServerCertificateInput!, config: AwsConfig): AwsIAMUploadServerCertificateOutput
  uploadSigningCertificate(input: AwsIAMUploadSigningCertificateInput!, config: AwsConfig): AwsIAMUploadSigningCertificateOutput
}

input AwsIAMAddClientIDToOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
  ClientID: String!
}

input AwsIAMAddRoleToInstanceProfileInput {
  InstanceProfileName: String!
  RoleName: String!
}

input AwsIAMAddUserToGroupInput {
  GroupName: String!
  UserName: String!
}

input AwsIAMAttachGroupPolicyInput {
  GroupName: String!
  PolicyArn: String!
}

input AwsIAMAttachRolePolicyInput {
  RoleName: String!
  PolicyArn: String!
}

input AwsIAMAttachUserPolicyInput {
  UserName: String!
  PolicyArn: String!
}

input AwsIAMChangePasswordInput {
  OldPassword: String!
  NewPassword: String!
}

input AwsIAMCreateAccessKeyInput {
  UserName: String
}

type AwsIAMCreateAccessKeyOutput {
  AccessKey: AwsIAMCreateAccessKeyOutputAccessKey!
}

type AwsIAMCreateAccessKeyOutputAccessKey {
  UserName: String!
  AccessKeyId: String!
  Status: String!
  SecretAccessKey: String!
  CreateDate: Date
}

input AwsIAMCreateAccountAliasInput {
  AccountAlias: String!
}

input AwsIAMCreateGroupInput {
  Path: String
  GroupName: String!
}

type AwsIAMCreateGroupOutput {
  Group: AwsIAMSs!
}

input AwsIAMCreateInstanceProfileInput {
  InstanceProfileName: String!
  Path: String
}

type AwsIAMCreateInstanceProfileOutput {
  InstanceProfile: AwsIAMSw!
}

input AwsIAMCreateLoginProfileInput {
  UserName: String!
  Password: String!
  PasswordResetRequired: Boolean
}

type AwsIAMCreateLoginProfileOutput {
  LoginProfile: AwsIAMS1b!
}

input AwsIAMCreateOpenIDConnectProviderInput {
  Url: String!
  ClientIDList: [String]
  ThumbprintList: [String]!
}

type AwsIAMCreateOpenIDConnectProviderOutput {
  OpenIDConnectProviderArn: String
}

input AwsIAMCreatePolicyInput {
  PolicyName: String!
  Path: String
  PolicyDocument: String!
  Description: String
}

type AwsIAMCreatePolicyOutput {
  Policy: AwsIAMS1n
}

input AwsIAMCreatePolicyVersionInput {
  PolicyArn: String!
  PolicyDocument: String!
  SetAsDefault: Boolean
}

type AwsIAMCreatePolicyVersionOutput {
  PolicyVersion: AwsIAMS1s
}

input AwsIAMCreateRoleInput {
  Path: String
  RoleName: String!
  AssumeRolePolicyDocument: String!
  Description: String
  MaxSessionDuration: Int
  PermissionsBoundary: String
  Tags: [AwsIAMS14Input]
}

type AwsIAMCreateRoleOutput {
  Role: AwsIAMSy!
}

input AwsIAMCreateSAMLProviderInput {
  SAMLMetadataDocument: String!
  Name: String!
}

type AwsIAMCreateSAMLProviderOutput {
  SAMLProviderArn: String
}

input AwsIAMCreateServiceLinkedRoleInput {
  AWSServiceName: String!
  Description: String
  CustomSuffix: String
}

type AwsIAMCreateServiceLinkedRoleOutput {
  Role: AwsIAMSy
}

input AwsIAMCreateServiceSpecificCredentialInput {
  UserName: String!
  ServiceName: String!
}

type AwsIAMCreateServiceSpecificCredentialOutput {
  ServiceSpecificCredential: AwsIAMS25
}

input AwsIAMCreateUserInput {
  Path: String
  UserName: String!
  PermissionsBoundary: String
  Tags: [AwsIAMS14Input]
}

type AwsIAMCreateUserOutput {
  User: AwsIAMS2b
}

input AwsIAMCreateVirtualMFADeviceInput {
  Path: String
  VirtualMFADeviceName: String!
}

type AwsIAMCreateVirtualMFADeviceOutput {
  VirtualMFADevice: AwsIAMS2f!
}

input AwsIAMDeactivateMFADeviceInput {
  UserName: String!
  SerialNumber: String!
}

input AwsIAMDeleteAccessKeyInput {
  UserName: String
  AccessKeyId: String!
}

input AwsIAMDeleteAccountAliasInput {
  AccountAlias: String!
}

input AwsIAMDeleteGroupInput {
  GroupName: String!
}

input AwsIAMDeleteGroupPolicyInput {
  GroupName: String!
  PolicyName: String!
}

input AwsIAMDeleteInstanceProfileInput {
  InstanceProfileName: String!
}

input AwsIAMDeleteLoginProfileInput {
  UserName: String!
}

input AwsIAMDeleteOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
}

input AwsIAMDeletePolicyInput {
  PolicyArn: String!
}

input AwsIAMDeletePolicyVersionInput {
  PolicyArn: String!
  VersionId: String!
}

input AwsIAMDeleteRoleInput {
  RoleName: String!
}

input AwsIAMDeleteRolePermissionsBoundaryInput {
  RoleName: String!
}

input AwsIAMDeleteRolePolicyInput {
  RoleName: String!
  PolicyName: String!
}

input AwsIAMDeleteSAMLProviderInput {
  SAMLProviderArn: String!
}

input AwsIAMDeleteServerCertificateInput {
  ServerCertificateName: String!
}

input AwsIAMDeleteServiceLinkedRoleInput {
  RoleName: String!
}

type AwsIAMDeleteServiceLinkedRoleOutput {
  DeletionTaskId: String!
}

input AwsIAMDeleteServiceSpecificCredentialInput {
  UserName: String
  ServiceSpecificCredentialId: String!
}

input AwsIAMDeleteSigningCertificateInput {
  UserName: String
  CertificateId: String!
}

input AwsIAMDeleteSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyId: String!
}

input AwsIAMDeleteUserInput {
  UserName: String!
}

input AwsIAMDeleteUserPermissionsBoundaryInput {
  UserName: String!
}

input AwsIAMDeleteUserPolicyInput {
  UserName: String!
  PolicyName: String!
}

input AwsIAMDeleteVirtualMFADeviceInput {
  SerialNumber: String!
}

input AwsIAMDetachGroupPolicyInput {
  GroupName: String!
  PolicyArn: String!
}

input AwsIAMDetachRolePolicyInput {
  RoleName: String!
  PolicyArn: String!
}

input AwsIAMDetachUserPolicyInput {
  UserName: String!
  PolicyArn: String!
}

input AwsIAMEnableMFADeviceInput {
  UserName: String!
  SerialNumber: String!
  AuthenticationCode1: String!
  AuthenticationCode2: String!
}

type AwsIAMGenerateCredentialReportOutput {
  State: String
  Description: String
}

input AwsIAMGenerateOrganizationsAccessReportInput {
  EntityPath: String!
  OrganizationsPolicyId: String
}

type AwsIAMGenerateOrganizationsAccessReportOutput {
  JobId: String
}

input AwsIAMGenerateServiceLastAccessedDetailsInput {
  Arn: String!
}

type AwsIAMGenerateServiceLastAccessedDetailsOutput {
  JobId: String
}

input AwsIAMGetAccessKeyLastUsedInput {
  AccessKeyId: String!
}

type AwsIAMGetAccessKeyLastUsedOutput {
  UserName: String
  AccessKeyLastUsed: AwsIAMGetAccessKeyLastUsedOutputAccessKeyLastUsed
}

type AwsIAMGetAccessKeyLastUsedOutputAccessKeyLastUsed {
  LastUsedDate: Date!
  ServiceName: String!
  Region: String!
}

input AwsIAMGetAccountAuthorizationDetailsInput {
  Filter: [String]
  MaxItems: Int
  Marker: String
}

type AwsIAMGetAccountAuthorizationDetailsOutput {
  UserDetailList: [AwsIAMGetAccountAuthorizationDetailsOutputUserDetailList]
  GroupDetailList: [AwsIAMGetAccountAuthorizationDetailsOutputGroupDetailList]
  RoleDetailList: [AwsIAMGetAccountAuthorizationDetailsOutputRoleDetailList]
  Policies: [AwsIAMGetAccountAuthorizationDetailsOutputPolicies]
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMGetAccountAuthorizationDetailsOutputGroupDetailList {
  Path: String
  GroupName: String
  GroupId: String
  Arn: String
  CreateDate: Date
  GroupPolicyList: [AwsIAMS41]
  AttachedManagedPolicies: [AwsIAMS44]
}

type AwsIAMGetAccountAuthorizationDetailsOutputPolicies {
  PolicyName: String
  PolicyId: String
  Arn: String
  Path: String
  DefaultVersionId: String
  AttachmentCount: Int
  PermissionsBoundaryUsageCount: Int
  IsAttachable: Boolean
  Description: String
  CreateDate: Date
  UpdateDate: Date
  PolicyVersionList: [AwsIAMS1s]
}

type AwsIAMGetAccountAuthorizationDetailsOutputRoleDetailList {
  Path: String
  RoleName: String
  RoleId: String
  Arn: String
  CreateDate: Date
  AssumeRolePolicyDocument: String
  InstanceProfileList: [AwsIAMSw]
  RolePolicyList: [AwsIAMS41]
  AttachedManagedPolicies: [AwsIAMS44]
  PermissionsBoundary: AwsIAMS12
  Tags: [AwsIAMS14]
}

type AwsIAMGetAccountAuthorizationDetailsOutputUserDetailList {
  Path: String
  UserName: String
  UserId: String
  Arn: String
  CreateDate: Date
  UserPolicyList: [AwsIAMS41]
  GroupList: [String]
  AttachedManagedPolicies: [AwsIAMS44]
  PermissionsBoundary: AwsIAMS12
  Tags: [AwsIAMS14]
}

type AwsIAMGetAccountPasswordPolicyOutput {
  PasswordPolicy: AwsIAMGetAccountPasswordPolicyOutputPasswordPolicy!
}

type AwsIAMGetAccountPasswordPolicyOutputPasswordPolicy {
  MinimumPasswordLength: Int
  RequireSymbols: Boolean
  RequireNumbers: Boolean
  RequireUppercaseCharacters: Boolean
  RequireLowercaseCharacters: Boolean
  AllowUsersToChangePassword: Boolean
  ExpirePasswords: Boolean
  MaxPasswordAge: Int
  PasswordReusePrevention: Int
  HardExpiry: Boolean
}

type AwsIAMGetAccountSummaryOutput {
  SummaryMap: JSON
}

input AwsIAMGetContextKeysForCustomPolicyInput {
  PolicyInputList: [String]!
}

input AwsIAMGetContextKeysForPrincipalPolicyInput {
  PolicySourceArn: String!
  PolicyInputList: [String]
}

type AwsIAMGetCredentialReportOutput {
  Content: JSON
  ReportFormat: String
  GeneratedTime: Date
}

input AwsIAMGetGroupInput {
  GroupName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMGetGroupOutput {
  Group: AwsIAMSs!
  Users: [AwsIAMS2b]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMGetGroupPolicyInput {
  GroupName: String!
  PolicyName: String!
}

type AwsIAMGetGroupPolicyOutput {
  GroupName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMGetInstanceProfileInput {
  InstanceProfileName: String!
}

type AwsIAMGetInstanceProfileOutput {
  InstanceProfile: AwsIAMSw!
}

input AwsIAMGetLoginProfileInput {
  UserName: String!
}

type AwsIAMGetLoginProfileOutput {
  LoginProfile: AwsIAMS1b!
}

input AwsIAMGetOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
}

type AwsIAMGetOpenIDConnectProviderOutput {
  Url: String
  ClientIDList: [String]
  ThumbprintList: [String]
  CreateDate: Date
}

input AwsIAMGetOrganizationsAccessReportInput {
  JobId: String!
  MaxItems: Int
  Marker: String
  SortKey: String
}

type AwsIAMGetOrganizationsAccessReportOutput {
  JobStatus: String!
  JobCreationDate: Date!
  JobCompletionDate: Date
  NumberOfServicesAccessible: Int
  NumberOfServicesNotAccessed: Int
  AccessDetails: [AwsIAMGetOrganizationsAccessReportOutputAccessDetails]
  IsTruncated: Boolean
  Marker: String
  ErrorDetails: AwsIAMS5i
}

type AwsIAMGetOrganizationsAccessReportOutputAccessDetails {
  ServiceName: String!
  ServiceNamespace: String!
  Region: String
  EntityPath: String
  LastAuthenticatedTime: Date
  TotalAuthenticatedEntities: Int
}

input AwsIAMGetPolicyInput {
  PolicyArn: String!
}

type AwsIAMGetPolicyOutput {
  Policy: AwsIAMS1n
}

input AwsIAMGetPolicyVersionInput {
  PolicyArn: String!
  VersionId: String!
}

type AwsIAMGetPolicyVersionOutput {
  PolicyVersion: AwsIAMS1s
}

input AwsIAMGetRoleInput {
  RoleName: String!
}

type AwsIAMGetRoleOutput {
  Role: AwsIAMSy!
}

input AwsIAMGetRolePolicyInput {
  RoleName: String!
  PolicyName: String!
}

type AwsIAMGetRolePolicyOutput {
  RoleName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMGetSAMLProviderInput {
  SAMLProviderArn: String!
}

type AwsIAMGetSAMLProviderOutput {
  SAMLMetadataDocument: String
  CreateDate: Date
  ValidUntil: Date
}

input AwsIAMGetServerCertificateInput {
  ServerCertificateName: String!
}

type AwsIAMGetServerCertificateOutput {
  ServerCertificate: AwsIAMGetServerCertificateOutputServerCertificate!
}

type AwsIAMGetServerCertificateOutputServerCertificate {
  ServerCertificateMetadata: AwsIAMS62!
  CertificateBody: String!
  CertificateChain: String
}

input AwsIAMGetServiceLastAccessedDetailsInput {
  JobId: String!
  MaxItems: Int
  Marker: String
}

type AwsIAMGetServiceLastAccessedDetailsOutput {
  JobStatus: String!
  JobCreationDate: Date!
  ServicesLastAccessed: [AwsIAMGetServiceLastAccessedDetailsOutputServicesLastAccessed]!
  JobCompletionDate: Date!
  IsTruncated: Boolean
  Marker: String
  Error: AwsIAMS5i
}

type AwsIAMGetServiceLastAccessedDetailsOutputServicesLastAccessed {
  ServiceName: String!
  LastAuthenticated: Date
  ServiceNamespace: String!
  LastAuthenticatedEntity: String
  TotalAuthenticatedEntities: Int
}

input AwsIAMGetServiceLastAccessedDetailsWithEntitiesInput {
  JobId: String!
  ServiceNamespace: String!
  MaxItems: Int
  Marker: String
}

type AwsIAMGetServiceLastAccessedDetailsWithEntitiesOutput {
  JobStatus: String!
  JobCreationDate: Date!
  JobCompletionDate: Date!
  EntityDetailsList: [AwsIAMGetServiceLastAccessedDetailsWithEntitiesOutputEntityDetailsList]!
  IsTruncated: Boolean
  Marker: String
  Error: AwsIAMS5i
}

type AwsIAMGetServiceLastAccessedDetailsWithEntitiesOutputEntityDetailsList {
  EntityInfo: AwsIAMGetServiceLastAccessedDetailsWithEntitiesOutputEntityDetailsListEntityInfo!
  LastAuthenticated: Date
}

type AwsIAMGetServiceLastAccessedDetailsWithEntitiesOutputEntityDetailsListEntityInfo {
  Arn: String!
  Name: String!
  Type: String!
  Id: String!
  Path: String
}

input AwsIAMGetServiceLinkedRoleDeletionStatusInput {
  DeletionTaskId: String!
}

type AwsIAMGetServiceLinkedRoleDeletionStatusOutput {
  Status: String!
  Reason: AwsIAMGetServiceLinkedRoleDeletionStatusOutputReason
}

type AwsIAMGetServiceLinkedRoleDeletionStatusOutputReason {
  Reason: String
  RoleUsageList: [AwsIAMGetServiceLinkedRoleDeletionStatusOutputReasonRoleUsageList]
}

type AwsIAMGetServiceLinkedRoleDeletionStatusOutputReasonRoleUsageList {
  Region: String
  Resources: [String]
}

input AwsIAMGetSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyId: String!
  Encoding: String!
}

type AwsIAMGetSSHPublicKeyOutput {
  SSHPublicKey: AwsIAMS5w
}

input AwsIAMGetUserInput {
  UserName: String
}

type AwsIAMGetUserOutput {
  User: AwsIAMS2b!
}

input AwsIAMGetUserPolicyInput {
  UserName: String!
  PolicyName: String!
}

type AwsIAMGetUserPolicyOutput {
  UserName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMListAccessKeysInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListAccessKeysOutput {
  AccessKeyMetadata: [AwsIAMListAccessKeysOutputAccessKeyMetadata]!
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListAccessKeysOutputAccessKeyMetadata {
  UserName: String
  AccessKeyId: String
  Status: String
  CreateDate: Date
}

input AwsIAMListAccountAliasesInput {
  Marker: String
  MaxItems: Int
}

type AwsIAMListAccountAliasesOutput {
  AccountAliases: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListAttachedGroupPoliciesInput {
  GroupName: String!
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListAttachedGroupPoliciesOutput {
  AttachedPolicies: [AwsIAMS44]
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListAttachedRolePoliciesInput {
  RoleName: String!
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListAttachedRolePoliciesOutput {
  AttachedPolicies: [AwsIAMS44]
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListAttachedUserPoliciesInput {
  UserName: String!
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListAttachedUserPoliciesOutput {
  AttachedPolicies: [AwsIAMS44]
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListEntitiesForPolicyInput {
  PolicyArn: String!
  EntityFilter: String
  PathPrefix: String
  PolicyUsageFilter: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListEntitiesForPolicyOutput {
  PolicyGroups: [AwsIAMListEntitiesForPolicyOutputPolicyGroups]
  PolicyUsers: [AwsIAMListEntitiesForPolicyOutputPolicyUsers]
  PolicyRoles: [AwsIAMListEntitiesForPolicyOutputPolicyRoles]
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListEntitiesForPolicyOutputPolicyGroups {
  GroupName: String
  GroupId: String
}

type AwsIAMListEntitiesForPolicyOutputPolicyRoles {
  RoleName: String
  RoleId: String
}

type AwsIAMListEntitiesForPolicyOutputPolicyUsers {
  UserName: String
  UserId: String
}

input AwsIAMListGroupPoliciesInput {
  GroupName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListGroupPoliciesOutput {
  PolicyNames: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListGroupsForUserInput {
  UserName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListGroupsForUserOutput {
  Groups: [AwsIAMSs]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListGroupsInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListGroupsOutput {
  Groups: [AwsIAMSs]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListInstanceProfilesForRoleInput {
  RoleName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListInstanceProfilesForRoleOutput {
  InstanceProfiles: [AwsIAMSw]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListInstanceProfilesInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListInstanceProfilesOutput {
  InstanceProfiles: [AwsIAMSw]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListMFADevicesInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListMFADevicesOutput {
  MFADevices: [AwsIAMListMFADevicesOutputMFADevices]!
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListMFADevicesOutputMFADevices {
  UserName: String!
  SerialNumber: String!
  EnableDate: Date!
}

type AwsIAMListOpenIDConnectProvidersOutput {
  OpenIDConnectProviderList: [AwsIAMListOpenIDConnectProvidersOutputOpenIDConnectProviderList]
}

type AwsIAMListOpenIDConnectProvidersOutputOpenIDConnectProviderList {
  Arn: String
}

input AwsIAMListPoliciesGrantingServiceAccessInput {
  Marker: String
  Arn: String!
  ServiceNamespaces: [String]!
}

type AwsIAMListPoliciesGrantingServiceAccessOutput {
  PoliciesGrantingServiceAccess: [AwsIAMListPoliciesGrantingServiceAccessOutputPoliciesGrantingServiceAccess]!
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListPoliciesGrantingServiceAccessOutputPoliciesGrantingServiceAccess {
  ServiceNamespace: String
  Policies: [AwsIAMListPoliciesGrantingServiceAccessOutputPoliciesGrantingServiceAccessPolicies]
}

type AwsIAMListPoliciesGrantingServiceAccessOutputPoliciesGrantingServiceAccessPolicies {
  PolicyName: String!
  PolicyType: String!
  PolicyArn: String
  EntityType: String
  EntityName: String
}

input AwsIAMListPoliciesInput {
  Scope: String
  OnlyAttached: Boolean
  PathPrefix: String
  PolicyUsageFilter: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListPoliciesOutput {
  Policies: [AwsIAMS1n]
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListPolicyVersionsInput {
  PolicyArn: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListPolicyVersionsOutput {
  Versions: [AwsIAMS1s]
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListRolePoliciesInput {
  RoleName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListRolePoliciesOutput {
  PolicyNames: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListRolesInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListRolesOutput {
  Roles: [AwsIAMSy]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListRoleTagsInput {
  RoleName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListRoleTagsOutput {
  Tags: [AwsIAMS14]!
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListSAMLProvidersOutput {
  SAMLProviderList: [AwsIAMListSAMLProvidersOutputSAMLProviderList]
}

type AwsIAMListSAMLProvidersOutputSAMLProviderList {
  Arn: String
  ValidUntil: Date
  CreateDate: Date
}

input AwsIAMListServerCertificatesInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListServerCertificatesOutput {
  ServerCertificateMetadataList: [AwsIAMS62]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListServiceSpecificCredentialsInput {
  UserName: String
  ServiceName: String
}

type AwsIAMListServiceSpecificCredentialsOutput {
  ServiceSpecificCredentials: [AwsIAMListServiceSpecificCredentialsOutputServiceSpecificCredentials]
}

type AwsIAMListServiceSpecificCredentialsOutputServiceSpecificCredentials {
  UserName: String!
  Status: String!
  ServiceUserName: String!
  CreateDate: Date!
  ServiceSpecificCredentialId: String!
  ServiceName: String!
}

input AwsIAMListSigningCertificatesInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListSigningCertificatesOutput {
  Certificates: [AwsIAMS92]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListSSHPublicKeysInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListSSHPublicKeysOutput {
  SSHPublicKeys: [AwsIAMListSSHPublicKeysOutputSSHPublicKeys]
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListSSHPublicKeysOutputSSHPublicKeys {
  UserName: String!
  SSHPublicKeyId: String!
  Status: String!
  UploadDate: Date!
}

input AwsIAMListUserPoliciesInput {
  UserName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListUserPoliciesOutput {
  PolicyNames: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListUsersInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListUsersOutput {
  Users: [AwsIAMS2b]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListUserTagsInput {
  UserName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListUserTagsOutput {
  Tags: [AwsIAMS14]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListVirtualMFADevicesInput {
  AssignmentStatus: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListVirtualMFADevicesOutput {
  VirtualMFADevices: [AwsIAMS2f]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMPutGroupPolicyInput {
  GroupName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMPutRolePermissionsBoundaryInput {
  RoleName: String!
  PermissionsBoundary: String!
}

input AwsIAMPutRolePolicyInput {
  RoleName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMPutUserPermissionsBoundaryInput {
  UserName: String!
  PermissionsBoundary: String!
}

input AwsIAMPutUserPolicyInput {
  UserName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMRemoveClientIDFromOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
  ClientID: String!
}

input AwsIAMRemoveRoleFromInstanceProfileInput {
  InstanceProfileName: String!
  RoleName: String!
}

input AwsIAMRemoveUserFromGroupInput {
  GroupName: String!
  UserName: String!
}

input AwsIAMResetServiceSpecificCredentialInput {
  UserName: String
  ServiceSpecificCredentialId: String!
}

type AwsIAMResetServiceSpecificCredentialOutput {
  ServiceSpecificCredential: AwsIAMS25
}

input AwsIAMResyncMFADeviceInput {
  UserName: String!
  SerialNumber: String!
  AuthenticationCode1: String!
  AuthenticationCode2: String!
}

type AwsIAMS12 {
  PermissionsBoundaryType: String
  PermissionsBoundaryArn: String
}

type AwsIAMS14 {
  Key: String!
  Value: String!
}

input AwsIAMS14Input {
  Key: String!
  Value: String!
}

type AwsIAMS1b {
  UserName: String!
  CreateDate: Date!
  PasswordResetRequired: Boolean
}

type AwsIAMS1n {
  PolicyName: String
  PolicyId: String
  Arn: String
  Path: String
  DefaultVersionId: String
  AttachmentCount: Int
  PermissionsBoundaryUsageCount: Int
  IsAttachable: Boolean
  Description: String
  CreateDate: Date
  UpdateDate: Date
}

type AwsIAMS1s {
  Document: String
  VersionId: String
  IsDefaultVersion: Boolean
  CreateDate: Date
}

type AwsIAMS25 {
  CreateDate: Date!
  ServiceName: String!
  ServiceUserName: String!
  ServicePassword: String!
  ServiceSpecificCredentialId: String!
  UserName: String!
  Status: String!
}

type AwsIAMS2b {
  Path: String!
  UserName: String!
  UserId: String!
  Arn: String!
  CreateDate: Date!
  PasswordLastUsed: Date
  PermissionsBoundary: AwsIAMS12
  Tags: [AwsIAMS14]
}

type AwsIAMS2f {
  SerialNumber: String!
  Base32StringSeed: JSON
  QRCodePNG: JSON
  User: AwsIAMS2b
  EnableDate: Date
}

type AwsIAMS41 {
  PolicyName: String
  PolicyDocument: String
}

type AwsIAMS44 {
  PolicyName: String
  PolicyArn: String
}

type AwsIAMS5i {
  Message: String!
  Code: String!
}

type AwsIAMS5w {
  UserName: String!
  SSHPublicKeyId: String!
  Fingerprint: String!
  SSHPublicKeyBody: String!
  Status: String!
  UploadDate: Date
}

type AwsIAMS62 {
  Path: String!
  ServerCertificateName: String!
  ServerCertificateId: String!
  Arn: String!
  UploadDate: Date
  Expiration: Date
}

type AwsIAMS92 {
  UserName: String!
  CertificateId: String!
  CertificateBody: String!
  Status: String!
  UploadDate: Date
}

input AwsIAMS9wInput {
  ContextKeyName: String
  ContextKeyValues: [String]
  ContextKeyType: String
}

input AwsIAMSetDefaultPolicyVersionInput {
  PolicyArn: String!
  VersionId: String!
}

input AwsIAMSetSecurityTokenServicePreferencesInput {
  GlobalEndpointTokenVersion: String!
}

input AwsIAMSimulateCustomPolicyInput {
  PolicyInputList: [String]!
  ActionNames: [String]!
  ResourceArns: [String]
  ResourcePolicy: String
  ResourceOwner: String
  CallerArn: String
  ContextEntries: [AwsIAMS9wInput]
  ResourceHandlingOption: String
  MaxItems: Int
  Marker: String
}

input AwsIAMSimulatePrincipalPolicyInput {
  PolicySourceArn: String!
  PolicyInputList: [String]
  ActionNames: [String]!
  ResourceArns: [String]
  ResourcePolicy: String
  ResourceOwner: String
  CallerArn: String
  ContextEntries: [AwsIAMS9wInput]
  ResourceHandlingOption: String
  MaxItems: Int
  Marker: String
}

type AwsIAMSs {
  Path: String!
  GroupName: String!
  GroupId: String!
  Arn: String!
  CreateDate: Date!
}

type AwsIAMSw {
  Path: String!
  InstanceProfileName: String!
  InstanceProfileId: String!
  Arn: String!
  CreateDate: Date!
  Roles: [AwsIAMSy]!
}

type AwsIAMSy {
  Path: String!
  RoleName: String!
  RoleId: String!
  Arn: String!
  CreateDate: Date!
  AssumeRolePolicyDocument: String
  Description: String
  MaxSessionDuration: Int
  PermissionsBoundary: AwsIAMS12
  Tags: [AwsIAMS14]
}

input AwsIAMTagRoleInput {
  RoleName: String!
  Tags: [AwsIAMS14Input]!
}

input AwsIAMTagUserInput {
  UserName: String!
  Tags: [AwsIAMS14Input]!
}

input AwsIAMUntagRoleInput {
  RoleName: String!
  TagKeys: [String]!
}

input AwsIAMUntagUserInput {
  UserName: String!
  TagKeys: [String]!
}

input AwsIAMUpdateAccessKeyInput {
  UserName: String
  AccessKeyId: String!
  Status: String!
}

input AwsIAMUpdateAccountPasswordPolicyInput {
  MinimumPasswordLength: Int
  RequireSymbols: Boolean
  RequireNumbers: Boolean
  RequireUppercaseCharacters: Boolean
  RequireLowercaseCharacters: Boolean
  AllowUsersToChangePassword: Boolean
  MaxPasswordAge: Int
  PasswordReusePrevention: Int
  HardExpiry: Boolean
}

input AwsIAMUpdateAssumeRolePolicyInput {
  RoleName: String!
  PolicyDocument: String!
}

input AwsIAMUpdateGroupInput {
  GroupName: String!
  NewPath: String
  NewGroupName: String
}

input AwsIAMUpdateLoginProfileInput {
  UserName: String!
  Password: String
  PasswordResetRequired: Boolean
}

input AwsIAMUpdateOpenIDConnectProviderThumbprintInput {
  OpenIDConnectProviderArn: String!
  ThumbprintList: [String]!
}

input AwsIAMUpdateRoleDescriptionInput {
  RoleName: String!
  Description: String!
}

type AwsIAMUpdateRoleDescriptionOutput {
  Role: AwsIAMSy
}

input AwsIAMUpdateRoleInput {
  RoleName: String!
  Description: String
  MaxSessionDuration: Int
}

input AwsIAMUpdateSAMLProviderInput {
  SAMLMetadataDocument: String!
  SAMLProviderArn: String!
}

type AwsIAMUpdateSAMLProviderOutput {
  SAMLProviderArn: String
}

input AwsIAMUpdateServerCertificateInput {
  ServerCertificateName: String!
  NewPath: String
  NewServerCertificateName: String
}

input AwsIAMUpdateServiceSpecificCredentialInput {
  UserName: String
  ServiceSpecificCredentialId: String!
  Status: String!
}

input AwsIAMUpdateSigningCertificateInput {
  UserName: String
  CertificateId: String!
  Status: String!
}

input AwsIAMUpdateSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyId: String!
  Status: String!
}

input AwsIAMUpdateUserInput {
  UserName: String!
  NewPath: String
  NewUserName: String
}

input AwsIAMUploadServerCertificateInput {
  Path: String
  ServerCertificateName: String!
  CertificateBody: String!
  PrivateKey: String!
  CertificateChain: String
}

type AwsIAMUploadServerCertificateOutput {
  ServerCertificateMetadata: AwsIAMS62
}

input AwsIAMUploadSigningCertificateInput {
  UserName: String
  CertificateBody: String!
}

type AwsIAMUploadSigningCertificateOutput {
  Certificate: AwsIAMS92!
}

input AwsIAMUploadSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyBody: String!
}

type AwsIAMUploadSSHPublicKeyOutput {
  SSHPublicKey: AwsIAMS5w
}

"""AWS Import/Export (2010-06-01)"""
type AwsImportExport {
  cancelJob(input: AwsImportExportCancelJobInput!, config: AwsConfig): AwsImportExportCancelJobOutput
  createJob(input: AwsImportExportCreateJobInput!, config: AwsConfig): AwsImportExportCreateJobOutput
  getShippingLabel(input: AwsImportExportGetShippingLabelInput!, config: AwsConfig): AwsImportExportGetShippingLabelOutput
  getStatus(input: AwsImportExportGetStatusInput!, config: AwsConfig): AwsImportExportGetStatusOutput
  listJobs(input: AwsImportExportListJobsInput, config: AwsConfig): AwsImportExportListJobsOutput
  updateJob(input: AwsImportExportUpdateJobInput!, config: AwsConfig): AwsImportExportUpdateJobOutput
}

input AwsImportExportCancelJobInput {
  JobId: String!
  APIVersion: String
}

type AwsImportExportCancelJobOutput {
  Success: Boolean
}

input AwsImportExportCreateJobInput {
  JobType: String!
  Manifest: String!
  ManifestAddendum: String
  ValidateOnly: Boolean!
  APIVersion: String
}

type AwsImportExportCreateJobOutput {
  JobId: String
  JobType: String
  Signature: String
  SignatureFileContents: String
  WarningMessage: String
  ArtifactList: [AwsImportExportSf]
}

input AwsImportExportGetShippingLabelInput {
  jobIds: [String]!
  name: String
  company: String
  phoneNumber: String
  country: String
  stateOrProvince: String
  city: String
  postalCode: String
  street1: String
  street2: String
  street3: String
  APIVersion: String
}

type AwsImportExportGetShippingLabelOutput {
  ShippingLabelURL: String
  Warning: String
}

input AwsImportExportGetStatusInput {
  JobId: String!
  APIVersion: String
}

type AwsImportExportGetStatusOutput {
  JobId: String
  JobType: String
  LocationCode: String
  LocationMessage: String
  ProgressCode: String
  ProgressMessage: String
  Carrier: String
  TrackingNumber: String
  LogBucket: String
  LogKey: String
  ErrorCount: Int
  Signature: String
  SignatureFileContents: String
  CurrentManifest: String
  CreationDate: Date
  ArtifactList: [AwsImportExportSf]
}

input AwsImportExportListJobsInput {
  MaxJobs: Int
  Marker: String
  APIVersion: String
}

type AwsImportExportListJobsOutput {
  Jobs: [AwsImportExportListJobsOutputJobs]
  IsTruncated: Boolean
}

type AwsImportExportListJobsOutputJobs {
  JobId: String
  CreationDate: Date
  IsCanceled: Boolean
  JobType: String
}

type AwsImportExportSf {
  Description: String
  URL: String
}

input AwsImportExportUpdateJobInput {
  JobId: String!
  Manifest: String!
  JobType: String!
  ValidateOnly: Boolean!
  APIVersion: String
}

type AwsImportExportUpdateJobOutput {
  Success: Boolean
  WarningMessage: String
  ArtifactList: [AwsImportExportSf]
}

"""Amazon Inspector (2016-02-16)"""
type AwsInspector {
  addAttributesToFindings(input: AwsInspectorAddAttributesToFindingsInput!, config: AwsConfig): AwsInspectorAddAttributesToFindingsOutput
  createAssessmentTarget(input: AwsInspectorCreateAssessmentTargetInput!, config: AwsConfig): AwsInspectorCreateAssessmentTargetOutput
  createAssessmentTemplate(input: AwsInspectorCreateAssessmentTemplateInput!, config: AwsConfig): AwsInspectorCreateAssessmentTemplateOutput
  createExclusionsPreview(input: AwsInspectorCreateExclusionsPreviewInput!, config: AwsConfig): AwsInspectorCreateExclusionsPreviewOutput
  createResourceGroup(input: AwsInspectorCreateResourceGroupInput!, config: AwsConfig): AwsInspectorCreateResourceGroupOutput
  deleteAssessmentRun(input: AwsInspectorDeleteAssessmentRunInput!, config: AwsConfig): JSON
  deleteAssessmentTarget(input: AwsInspectorDeleteAssessmentTargetInput!, config: AwsConfig): JSON
  deleteAssessmentTemplate(input: AwsInspectorDeleteAssessmentTemplateInput!, config: AwsConfig): JSON
  describeAssessmentRuns(input: AwsInspectorDescribeAssessmentRunsInput!, config: AwsConfig): AwsInspectorDescribeAssessmentRunsOutput
  describeAssessmentTargets(input: AwsInspectorDescribeAssessmentTargetsInput!, config: AwsConfig): AwsInspectorDescribeAssessmentTargetsOutput
  describeAssessmentTemplates(input: AwsInspectorDescribeAssessmentTemplatesInput!, config: AwsConfig): AwsInspectorDescribeAssessmentTemplatesOutput
  describeCrossAccountAccessRole(config: AwsConfig): AwsInspectorDescribeCrossAccountAccessRoleOutput
  describeExclusions(input: AwsInspectorDescribeExclusionsInput!, config: AwsConfig): AwsInspectorDescribeExclusionsOutput
  describeFindings(input: AwsInspectorDescribeFindingsInput!, config: AwsConfig): AwsInspectorDescribeFindingsOutput
  describeResourceGroups(input: AwsInspectorDescribeResourceGroupsInput!, config: AwsConfig): AwsInspectorDescribeResourceGroupsOutput
  describeRulesPackages(input: AwsInspectorDescribeRulesPackagesInput!, config: AwsConfig): AwsInspectorDescribeRulesPackagesOutput
  getAssessmentReport(input: AwsInspectorGetAssessmentReportInput!, config: AwsConfig): AwsInspectorGetAssessmentReportOutput
  getExclusionsPreview(input: AwsInspectorGetExclusionsPreviewInput!, config: AwsConfig): AwsInspectorGetExclusionsPreviewOutput
  getTelemetryMetadata(input: AwsInspectorGetTelemetryMetadataInput!, config: AwsConfig): AwsInspectorGetTelemetryMetadataOutput
  listAssessmentRunAgents(input: AwsInspectorListAssessmentRunAgentsInput!, config: AwsConfig): AwsInspectorListAssessmentRunAgentsOutput
  listAssessmentRuns(input: AwsInspectorListAssessmentRunsInput, config: AwsConfig): AwsInspectorListAssessmentRunsOutput
  listAssessmentTargets(input: AwsInspectorListAssessmentTargetsInput, config: AwsConfig): AwsInspectorListAssessmentTargetsOutput
  listAssessmentTemplates(input: AwsInspectorListAssessmentTemplatesInput, config: AwsConfig): AwsInspectorListAssessmentTemplatesOutput
  listEventSubscriptions(input: AwsInspectorListEventSubscriptionsInput, config: AwsConfig): AwsInspectorListEventSubscriptionsOutput
  listExclusions(input: AwsInspectorListExclusionsInput!, config: AwsConfig): AwsInspectorListExclusionsOutput
  listFindings(input: AwsInspectorListFindingsInput, config: AwsConfig): AwsInspectorListFindingsOutput
  listRulesPackages(input: AwsInspectorListRulesPackagesInput, config: AwsConfig): AwsInspectorListRulesPackagesOutput
  listTagsForResource(input: AwsInspectorListTagsForResourceInput!, config: AwsConfig): AwsInspectorListTagsForResourceOutput
  previewAgents(input: AwsInspectorPreviewAgentsInput!, config: AwsConfig): AwsInspectorPreviewAgentsOutput
  registerCrossAccountAccessRole(input: AwsInspectorRegisterCrossAccountAccessRoleInput!, config: AwsConfig): JSON
  removeAttributesFromFindings(input: AwsInspectorRemoveAttributesFromFindingsInput!, config: AwsConfig): AwsInspectorRemoveAttributesFromFindingsOutput
  setTagsForResource(input: AwsInspectorSetTagsForResourceInput!, config: AwsConfig): JSON
  startAssessmentRun(input: AwsInspectorStartAssessmentRunInput!, config: AwsConfig): AwsInspectorStartAssessmentRunOutput
  stopAssessmentRun(input: AwsInspectorStopAssessmentRunInput!, config: AwsConfig): JSON
  subscribeToEvent(input: AwsInspectorSubscribeToEventInput!, config: AwsConfig): JSON
  unsubscribeFromEvent(input: AwsInspectorUnsubscribeFromEventInput!, config: AwsConfig): JSON
  updateAssessmentTarget(input: AwsInspectorUpdateAssessmentTargetInput!, config: AwsConfig): JSON
}

input AwsInspectorAddAttributesToFindingsInput {
  findingArns: [String]!
  attributes: [AwsInspectorS5Input]!
}

type AwsInspectorAddAttributesToFindingsOutput {
  failedItems: JSON!
}

input AwsInspectorCreateAssessmentTargetInput {
  assessmentTargetName: String!
  resourceGroupArn: String
}

type AwsInspectorCreateAssessmentTargetOutput {
  assessmentTargetArn: String!
}

input AwsInspectorCreateAssessmentTemplateInput {
  assessmentTargetArn: String!
  assessmentTemplateName: String!
  durationInSeconds: Int!
  rulesPackageArns: [String]!
  userAttributesForFindings: [AwsInspectorS5Input]
}

type AwsInspectorCreateAssessmentTemplateOutput {
  assessmentTemplateArn: String!
}

input AwsInspectorCreateExclusionsPreviewInput {
  assessmentTemplateArn: String!
}

type AwsInspectorCreateExclusionsPreviewOutput {
  previewToken: String!
}

input AwsInspectorCreateResourceGroupInput {
  resourceGroupTags: [AwsInspectorSpInput]!
}

type AwsInspectorCreateResourceGroupOutput {
  resourceGroupArn: String!
}

input AwsInspectorDeleteAssessmentRunInput {
  assessmentRunArn: String!
}

input AwsInspectorDeleteAssessmentTargetInput {
  assessmentTargetArn: String!
}

input AwsInspectorDeleteAssessmentTemplateInput {
  assessmentTemplateArn: String!
}

input AwsInspectorDescribeAssessmentRunsInput {
  assessmentRunArns: [String]!
}

type AwsInspectorDescribeAssessmentRunsOutput {
  assessmentRuns: [AwsInspectorDescribeAssessmentRunsOutputAssessmentRuns]!
  failedItems: JSON!
}

type AwsInspectorDescribeAssessmentRunsOutputAssessmentRuns {
  arn: String!
  name: String!
  assessmentTemplateArn: String!
  state: String!
  durationInSeconds: Int!
  rulesPackageArns: [String]!
  userAttributesForFindings: [AwsInspectorS5]!
  createdAt: Date!
  startedAt: Date
  completedAt: Date
  stateChangedAt: Date!
  dataCollected: Boolean!
  stateChanges: [AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsStateChanges]!
  notifications: [AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsNotifications]!
  findingCounts: JSON!
}

type AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsNotifications {
  date: Date!
  event: String!
  message: String
  error: Boolean!
  snsTopicArn: String
  snsPublishStatusCode: String
}

type AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsStateChanges {
  stateChangedAt: Date!
  state: String!
}

input AwsInspectorDescribeAssessmentTargetsInput {
  assessmentTargetArns: [String]!
}

type AwsInspectorDescribeAssessmentTargetsOutput {
  assessmentTargets: [AwsInspectorDescribeAssessmentTargetsOutputAssessmentTargets]!
  failedItems: JSON!
}

type AwsInspectorDescribeAssessmentTargetsOutputAssessmentTargets {
  arn: String!
  name: String!
  resourceGroupArn: String
  createdAt: Date!
  updatedAt: Date!
}

input AwsInspectorDescribeAssessmentTemplatesInput {
  assessmentTemplateArns: [String]!
}

type AwsInspectorDescribeAssessmentTemplatesOutput {
  assessmentTemplates: [AwsInspectorDescribeAssessmentTemplatesOutputAssessmentTemplates]!
  failedItems: JSON!
}

type AwsInspectorDescribeAssessmentTemplatesOutputAssessmentTemplates {
  arn: String!
  name: String!
  assessmentTargetArn: String!
  durationInSeconds: Int!
  rulesPackageArns: [String]!
  userAttributesForFindings: [AwsInspectorS5]!
  lastAssessmentRunArn: String
  assessmentRunCount: Int!
  createdAt: Date!
}

type AwsInspectorDescribeCrossAccountAccessRoleOutput {
  roleArn: String!
  valid: Boolean!
  registeredAt: Date!
}

input AwsInspectorDescribeExclusionsInput {
  exclusionArns: [String]!
  locale: String
}

type AwsInspectorDescribeExclusionsOutput {
  exclusions: JSON!
  failedItems: JSON!
}

input AwsInspectorDescribeFindingsInput {
  findingArns: [String]!
  locale: String
}

type AwsInspectorDescribeFindingsOutput {
  findings: [AwsInspectorDescribeFindingsOutputFindings]!
  failedItems: JSON!
}

type AwsInspectorDescribeFindingsOutputFindings {
  arn: String!
  schemaVersion: Int
  service: String
  serviceAttributes: AwsInspectorDescribeFindingsOutputFindingsServiceAttributes
  assetType: String
  assetAttributes: AwsInspectorDescribeFindingsOutputFindingsAssetAttributes
  id: String
  title: String
  description: String
  recommendation: String
  severity: String
  numericSeverity: JSON
  confidence: Int
  indicatorOfCompromise: Boolean
  attributes: [AwsInspectorS5]!
  userAttributes: [AwsInspectorS5]!
  createdAt: Date!
  updatedAt: Date!
}

type AwsInspectorDescribeFindingsOutputFindingsAssetAttributes {
  schemaVersion: Int!
  agentId: String
  autoScalingGroup: String
  amiId: String
  hostname: String
  ipv4Addresses: [String]
  tags: [AwsInspectorS2i]
  networkInterfaces: [AwsInspectorDescribeFindingsOutputFindingsAssetAttributesNetworkInterfaces]
}

type AwsInspectorDescribeFindingsOutputFindingsAssetAttributesNetworkInterfaces {
  networkInterfaceId: String
  subnetId: String
  vpcId: String
  privateDnsName: String
  privateIpAddress: String
  privateIpAddresses: [AwsInspectorDescribeFindingsOutputFindingsAssetAttributesNetworkInterfacesPrivateIpAddresses]
  publicDnsName: String
  publicIp: String
  ipv6Addresses: [String]
  securityGroups: [AwsInspectorDescribeFindingsOutputFindingsAssetAttributesNetworkInterfacesSecurityGroups]
}

type AwsInspectorDescribeFindingsOutputFindingsAssetAttributesNetworkInterfacesPrivateIpAddresses {
  privateDnsName: String
  privateIpAddress: String
}

type AwsInspectorDescribeFindingsOutputFindingsAssetAttributesNetworkInterfacesSecurityGroups {
  groupName: String
  groupId: String
}

type AwsInspectorDescribeFindingsOutputFindingsServiceAttributes {
  schemaVersion: Int!
  assessmentRunArn: String
  rulesPackageArn: String
}

input AwsInspectorDescribeResourceGroupsInput {
  resourceGroupArns: [String]!
}

type AwsInspectorDescribeResourceGroupsOutput {
  resourceGroups: [AwsInspectorDescribeResourceGroupsOutputResourceGroups]!
  failedItems: JSON!
}

type AwsInspectorDescribeResourceGroupsOutputResourceGroups {
  arn: String!
  tags: [AwsInspectorSp]!
  createdAt: Date!
}

input AwsInspectorDescribeRulesPackagesInput {
  rulesPackageArns: [String]!
  locale: String
}

type AwsInspectorDescribeRulesPackagesOutput {
  rulesPackages: [AwsInspectorDescribeRulesPackagesOutputRulesPackages]!
  failedItems: JSON!
}

type AwsInspectorDescribeRulesPackagesOutputRulesPackages {
  arn: String!
  name: String!
  version: String!
  provider: String!
  description: String
}

input AwsInspectorGetAssessmentReportInput {
  assessmentRunArn: String!
  reportFileFormat: String!
  reportType: String!
}

type AwsInspectorGetAssessmentReportOutput {
  status: String!
  url: String
}

input AwsInspectorGetExclusionsPreviewInput {
  assessmentTemplateArn: String!
  previewToken: String!
  nextToken: String
  maxResults: Int
  locale: String
}

type AwsInspectorGetExclusionsPreviewOutput {
  previewStatus: String!
  exclusionPreviews: [AwsInspectorGetExclusionsPreviewOutputExclusionPreviews]
  nextToken: String
}

type AwsInspectorGetExclusionsPreviewOutputExclusionPreviews {
  title: String!
  description: String!
  recommendation: String!
  scopes: [AwsInspectorS1x]!
  attributes: [AwsInspectorS5]
}

input AwsInspectorGetTelemetryMetadataInput {
  assessmentRunArn: String!
}

type AwsInspectorGetTelemetryMetadataOutput {
  telemetryMetadata: [AwsInspectorS3j]!
}

input AwsInspectorListAssessmentRunAgentsFilterInput {
  agentHealths: [String]!
  agentHealthCodes: [String]!
}

input AwsInspectorListAssessmentRunAgentsInput {
  assessmentRunArn: String!
  filter: AwsInspectorListAssessmentRunAgentsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentRunAgentsOutput {
  assessmentRunAgents: [AwsInspectorListAssessmentRunAgentsOutputAssessmentRunAgents]!
  nextToken: String
}

type AwsInspectorListAssessmentRunAgentsOutputAssessmentRunAgents {
  agentId: String!
  assessmentRunArn: String!
  agentHealth: String!
  agentHealthCode: String!
  agentHealthDetails: String
  autoScalingGroup: String
  telemetryMetadata: [AwsInspectorS3j]!
}

input AwsInspectorListAssessmentRunsFilterInput {
  namePattern: String
  states: [String]
  durationRange: AwsInspectorS41Input
  rulesPackageArns: [String]
  startTimeRange: AwsInspectorS43Input
  completionTimeRange: AwsInspectorS43Input
  stateChangeTimeRange: AwsInspectorS43Input
}

input AwsInspectorListAssessmentRunsInput {
  assessmentTemplateArns: [String]
  filter: AwsInspectorListAssessmentRunsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentRunsOutput {
  assessmentRunArns: [String]!
  nextToken: String
}

input AwsInspectorListAssessmentTargetsFilterInput {
  assessmentTargetNamePattern: String
}

input AwsInspectorListAssessmentTargetsInput {
  filter: AwsInspectorListAssessmentTargetsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentTargetsOutput {
  assessmentTargetArns: [String]!
  nextToken: String
}

input AwsInspectorListAssessmentTemplatesFilterInput {
  namePattern: String
  durationRange: AwsInspectorS41Input
  rulesPackageArns: [String]
}

input AwsInspectorListAssessmentTemplatesInput {
  assessmentTargetArns: [String]
  filter: AwsInspectorListAssessmentTemplatesFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentTemplatesOutput {
  assessmentTemplateArns: [String]!
  nextToken: String
}

input AwsInspectorListEventSubscriptionsInput {
  resourceArn: String
  nextToken: String
  maxResults: Int
}

type AwsInspectorListEventSubscriptionsOutput {
  subscriptions: [AwsInspectorListEventSubscriptionsOutputSubscriptions]!
  nextToken: String
}

type AwsInspectorListEventSubscriptionsOutputSubscriptions {
  resourceArn: String!
  topicArn: String!
  eventSubscriptions: [AwsInspectorListEventSubscriptionsOutputSubscriptionsEventSubscriptions]!
}

type AwsInspectorListEventSubscriptionsOutputSubscriptionsEventSubscriptions {
  event: String!
  subscribedAt: Date!
}

input AwsInspectorListExclusionsInput {
  assessmentRunArn: String!
  nextToken: String
  maxResults: Int
}

type AwsInspectorListExclusionsOutput {
  exclusionArns: [String]!
  nextToken: String
}

input AwsInspectorListFindingsFilterInput {
  agentIds: [String]
  autoScalingGroups: [String]
  ruleNames: [String]
  severities: [String]
  rulesPackageArns: [String]
  attributes: [AwsInspectorS5Input]
  userAttributes: [AwsInspectorS5Input]
  creationTimeRange: AwsInspectorS43Input
}

input AwsInspectorListFindingsInput {
  assessmentRunArns: [String]
  filter: AwsInspectorListFindingsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListFindingsOutput {
  findingArns: [String]!
  nextToken: String
}

input AwsInspectorListRulesPackagesInput {
  nextToken: String
  maxResults: Int
}

type AwsInspectorListRulesPackagesOutput {
  rulesPackageArns: [String]!
  nextToken: String
}

input AwsInspectorListTagsForResourceInput {
  resourceArn: String!
}

type AwsInspectorListTagsForResourceOutput {
  tags: [AwsInspectorS2i]!
}

input AwsInspectorPreviewAgentsInput {
  previewAgentsArn: String!
  nextToken: String
  maxResults: Int
}

type AwsInspectorPreviewAgentsOutput {
  agentPreviews: [AwsInspectorPreviewAgentsOutputAgentPreviews]!
  nextToken: String
}

type AwsInspectorPreviewAgentsOutputAgentPreviews {
  hostname: String
  agentId: String!
  autoScalingGroup: String
  agentHealth: String
  agentVersion: String
  operatingSystem: String
  kernelVersion: String
  ipv4Address: String
}

input AwsInspectorRegisterCrossAccountAccessRoleInput {
  roleArn: String!
}

input AwsInspectorRemoveAttributesFromFindingsInput {
  findingArns: [String]!
  attributeKeys: [String]!
}

type AwsInspectorRemoveAttributesFromFindingsOutput {
  failedItems: JSON!
}

type AwsInspectorS1x {
  key: String
  value: String
}

type AwsInspectorS2i {
  key: String!
  value: String
}

input AwsInspectorS2iInput {
  key: String!
  value: String
}

type AwsInspectorS3j {
  messageType: String!
  count: JSON!
  dataSize: JSON
}

input AwsInspectorS41Input {
  minSeconds: Int
  maxSeconds: Int
}

input AwsInspectorS43Input {
  beginDate: Date
  endDate: Date
}

type AwsInspectorS5 {
  key: String!
  value: String
}

input AwsInspectorS5Input {
  key: String!
  value: String
}

input AwsInspectorSetTagsForResourceInput {
  resourceArn: String!
  tags: [AwsInspectorS2iInput]
}

type AwsInspectorSp {
  key: String!
  value: String
}

input AwsInspectorSpInput {
  key: String!
  value: String
}

input AwsInspectorStartAssessmentRunInput {
  assessmentTemplateArn: String!
  assessmentRunName: String
}

type AwsInspectorStartAssessmentRunOutput {
  assessmentRunArn: String!
}

input AwsInspectorStopAssessmentRunInput {
  assessmentRunArn: String!
  stopAction: String
}

input AwsInspectorSubscribeToEventInput {
  resourceArn: String!
  event: String!
  topicArn: String!
}

input AwsInspectorUnsubscribeFromEventInput {
  resourceArn: String!
  event: String!
  topicArn: String!
}

input AwsInspectorUpdateAssessmentTargetInput {
  assessmentTargetArn: String!
  assessmentTargetName: String!
  resourceGroupArn: String
}

"""AWS IoT (2015-05-28)"""
type AwsIot {
  acceptCertificateTransfer(input: AwsIotAcceptCertificateTransferInput!, config: AwsConfig): JSON
  addThingToBillingGroup(input: AwsIotAddThingToBillingGroupInput, config: AwsConfig): JSON
  addThingToThingGroup(input: AwsIotAddThingToThingGroupInput, config: AwsConfig): JSON
  associateTargetsWithJob(input: AwsIotAssociateTargetsWithJobInput!, config: AwsConfig): AwsIotAssociateTargetsWithJobOutput
  attachPolicy(input: AwsIotAttachPolicyInput!, config: AwsConfig): JSON
  attachPrincipalPolicy(input: AwsIotAttachPrincipalPolicyInput!, config: AwsConfig): JSON
  attachSecurityProfile(input: AwsIotAttachSecurityProfileInput!, config: AwsConfig): JSON
  attachThingPrincipal(input: AwsIotAttachThingPrincipalInput!, config: AwsConfig): JSON
  cancelAuditTask(input: AwsIotCancelAuditTaskInput!, config: AwsConfig): JSON
  cancelCertificateTransfer(input: AwsIotCancelCertificateTransferInput!, config: AwsConfig): JSON
  cancelJob(input: AwsIotCancelJobInput!, config: AwsConfig): AwsIotCancelJobOutput
  cancelJobExecution(input: AwsIotCancelJobExecutionInput!, config: AwsConfig): JSON
  clearDefaultAuthorizer(input: JSON, config: AwsConfig): JSON
  createAuthorizer(input: AwsIotCreateAuthorizerInput!, config: AwsConfig): AwsIotCreateAuthorizerOutput
  createBillingGroup(input: AwsIotCreateBillingGroupInput!, config: AwsConfig): AwsIotCreateBillingGroupOutput
  createCertificateFromCsr(input: AwsIotCreateCertificateFromCsrInput!, config: AwsConfig): AwsIotCreateCertificateFromCsrOutput
  createDynamicThingGroup(input: AwsIotCreateDynamicThingGroupInput!, config: AwsConfig): AwsIotCreateDynamicThingGroupOutput
  createJob(input: AwsIotCreateJobInput!, config: AwsConfig): AwsIotCreateJobOutput
  createKeysAndCertificate(input: AwsIotCreateKeysAndCertificateInput, config: AwsConfig): AwsIotCreateKeysAndCertificateOutput
  createOTAUpdate(input: AwsIotCreateOTAUpdateInput!, config: AwsConfig): AwsIotCreateOTAUpdateOutput
  createPolicy(input: AwsIotCreatePolicyInput!, config: AwsConfig): AwsIotCreatePolicyOutput
  createPolicyVersion(input: AwsIotCreatePolicyVersionInput!, config: AwsConfig): AwsIotCreatePolicyVersionOutput
  createRoleAlias(input: AwsIotCreateRoleAliasInput!, config: AwsConfig): AwsIotCreateRoleAliasOutput
  createScheduledAudit(input: AwsIotCreateScheduledAuditInput!, config: AwsConfig): AwsIotCreateScheduledAuditOutput
  createSecurityProfile(input: AwsIotCreateSecurityProfileInput!, config: AwsConfig): AwsIotCreateSecurityProfileOutput
  createStream(input: AwsIotCreateStreamInput!, config: AwsConfig): AwsIotCreateStreamOutput
  createThing(input: AwsIotCreateThingInput!, config: AwsConfig): AwsIotCreateThingOutput
  createThingGroup(input: AwsIotCreateThingGroupInput!, config: AwsConfig): AwsIotCreateThingGroupOutput
  createThingType(input: AwsIotCreateThingTypeInput!, config: AwsConfig): AwsIotCreateThingTypeOutput
  createTopicRule(input: AwsIotCreateTopicRuleInput!, config: AwsConfig): JSON
  deleteAccountAuditConfiguration(input: AwsIotDeleteAccountAuditConfigurationInput, config: AwsConfig): JSON
  deleteAuthorizer(input: AwsIotDeleteAuthorizerInput!, config: AwsConfig): JSON
  deleteBillingGroup(input: AwsIotDeleteBillingGroupInput!, config: AwsConfig): JSON
  deleteCACertificate(input: AwsIotDeleteCACertificateInput!, config: AwsConfig): JSON
  deleteCertificate(input: AwsIotDeleteCertificateInput!, config: AwsConfig): JSON
  deleteDynamicThingGroup(input: AwsIotDeleteDynamicThingGroupInput!, config: AwsConfig): JSON
  deleteJob(input: AwsIotDeleteJobInput!, config: AwsConfig): JSON
  deleteJobExecution(input: AwsIotDeleteJobExecutionInput!, config: AwsConfig): JSON
  deleteOTAUpdate(input: AwsIotDeleteOTAUpdateInput!, config: AwsConfig): JSON
  deletePolicy(input: AwsIotDeletePolicyInput!, config: AwsConfig): JSON
  deletePolicyVersion(input: AwsIotDeletePolicyVersionInput!, config: AwsConfig): JSON
  deleteRegistrationCode(input: JSON, config: AwsConfig): JSON
  deleteRoleAlias(input: AwsIotDeleteRoleAliasInput!, config: AwsConfig): JSON
  deleteScheduledAudit(input: AwsIotDeleteScheduledAuditInput!, config: AwsConfig): JSON
  deleteSecurityProfile(input: AwsIotDeleteSecurityProfileInput!, config: AwsConfig): JSON
  deleteStream(input: AwsIotDeleteStreamInput!, config: AwsConfig): JSON
  deleteThing(input: AwsIotDeleteThingInput!, config: AwsConfig): JSON
  deleteThingGroup(input: AwsIotDeleteThingGroupInput!, config: AwsConfig): JSON
  deleteThingType(input: AwsIotDeleteThingTypeInput!, config: AwsConfig): JSON
  deleteTopicRule(input: AwsIotDeleteTopicRuleInput!, config: AwsConfig): JSON
  deleteV2LoggingLevel(input: AwsIotDeleteV2LoggingLevelInput!, config: AwsConfig): JSON
  deprecateThingType(input: AwsIotDeprecateThingTypeInput!, config: AwsConfig): JSON
  describeAccountAuditConfiguration(input: JSON, config: AwsConfig): AwsIotDescribeAccountAuditConfigurationOutput
  describeAuditTask(input: AwsIotDescribeAuditTaskInput!, config: AwsConfig): AwsIotDescribeAuditTaskOutput
  describeAuthorizer(input: AwsIotDescribeAuthorizerInput!, config: AwsConfig): AwsIotDescribeAuthorizerOutput
  describeBillingGroup(input: AwsIotDescribeBillingGroupInput!, config: AwsConfig): AwsIotDescribeBillingGroupOutput
  describeCACertificate(input: AwsIotDescribeCACertificateInput!, config: AwsConfig): AwsIotDescribeCACertificateOutput
  describeCertificate(input: AwsIotDescribeCertificateInput!, config: AwsConfig): AwsIotDescribeCertificateOutput
  describeDefaultAuthorizer(input: JSON, config: AwsConfig): AwsIotDescribeDefaultAuthorizerOutput
  describeEndpoint(input: AwsIotDescribeEndpointInput, config: AwsConfig): AwsIotDescribeEndpointOutput
  describeEventConfigurations(input: JSON, config: AwsConfig): AwsIotDescribeEventConfigurationsOutput
  describeIndex(input: AwsIotDescribeIndexInput!, config: AwsConfig): AwsIotDescribeIndexOutput
  describeJob(input: AwsIotDescribeJobInput!, config: AwsConfig): AwsIotDescribeJobOutput
  describeJobExecution(input: AwsIotDescribeJobExecutionInput!, config: AwsConfig): AwsIotDescribeJobExecutionOutput
  describeRoleAlias(input: AwsIotDescribeRoleAliasInput!, config: AwsConfig): AwsIotDescribeRoleAliasOutput
  describeScheduledAudit(input: AwsIotDescribeScheduledAuditInput!, config: AwsConfig): AwsIotDescribeScheduledAuditOutput
  describeSecurityProfile(input: AwsIotDescribeSecurityProfileInput!, config: AwsConfig): AwsIotDescribeSecurityProfileOutput
  describeStream(input: AwsIotDescribeStreamInput!, config: AwsConfig): AwsIotDescribeStreamOutput
  describeThing(input: AwsIotDescribeThingInput!, config: AwsConfig): AwsIotDescribeThingOutput
  describeThingGroup(input: AwsIotDescribeThingGroupInput!, config: AwsConfig): AwsIotDescribeThingGroupOutput
  describeThingRegistrationTask(input: AwsIotDescribeThingRegistrationTaskInput!, config: AwsConfig): AwsIotDescribeThingRegistrationTaskOutput
  describeThingType(input: AwsIotDescribeThingTypeInput!, config: AwsConfig): AwsIotDescribeThingTypeOutput
  detachPolicy(input: AwsIotDetachPolicyInput!, config: AwsConfig): JSON
  detachPrincipalPolicy(input: AwsIotDetachPrincipalPolicyInput!, config: AwsConfig): JSON
  detachSecurityProfile(input: AwsIotDetachSecurityProfileInput!, config: AwsConfig): JSON
  detachThingPrincipal(input: AwsIotDetachThingPrincipalInput!, config: AwsConfig): JSON
  disableTopicRule(input: AwsIotDisableTopicRuleInput!, config: AwsConfig): JSON
  enableTopicRule(input: AwsIotEnableTopicRuleInput!, config: AwsConfig): JSON
  getEffectivePolicies(input: AwsIotGetEffectivePoliciesInput, config: AwsConfig): AwsIotGetEffectivePoliciesOutput
  getIndexingConfiguration(input: JSON, config: AwsConfig): AwsIotGetIndexingConfigurationOutput
  getJobDocument(input: AwsIotGetJobDocumentInput!, config: AwsConfig): AwsIotGetJobDocumentOutput
  getLoggingOptions(input: JSON, config: AwsConfig): AwsIotGetLoggingOptionsOutput
  getOTAUpdate(input: AwsIotGetOTAUpdateInput!, config: AwsConfig): AwsIotGetOTAUpdateOutput
  getPolicy(input: AwsIotGetPolicyInput!, config: AwsConfig): AwsIotGetPolicyOutput
  getPolicyVersion(input: AwsIotGetPolicyVersionInput!, config: AwsConfig): AwsIotGetPolicyVersionOutput
  getRegistrationCode(input: JSON, config: AwsConfig): AwsIotGetRegistrationCodeOutput
  getStatistics(input: AwsIotGetStatisticsInput!, config: AwsConfig): AwsIotGetStatisticsOutput
  getTopicRule(input: AwsIotGetTopicRuleInput!, config: AwsConfig): AwsIotGetTopicRuleOutput
  getV2LoggingOptions(input: JSON, config: AwsConfig): AwsIotGetV2LoggingOptionsOutput
  listActiveViolations(input: AwsIotListActiveViolationsInput, config: AwsConfig): AwsIotListActiveViolationsOutput
  listAttachedPolicies(input: AwsIotListAttachedPoliciesInput!, config: AwsConfig): AwsIotListAttachedPoliciesOutput
  listAuditFindings(input: AwsIotListAuditFindingsInput, config: AwsConfig): AwsIotListAuditFindingsOutput
  listAuditTasks(input: AwsIotListAuditTasksInput!, config: AwsConfig): AwsIotListAuditTasksOutput
  listAuthorizers(input: AwsIotListAuthorizersInput, config: AwsConfig): AwsIotListAuthorizersOutput
  listBillingGroups(input: AwsIotListBillingGroupsInput, config: AwsConfig): AwsIotListBillingGroupsOutput
  listCACertificates(input: AwsIotListCACertificatesInput, config: AwsConfig): AwsIotListCACertificatesOutput
  listCertificates(input: AwsIotListCertificatesInput, config: AwsConfig): AwsIotListCertificatesOutput
  listCertificatesByCA(input: AwsIotListCertificatesByCAInput!, config: AwsConfig): AwsIotListCertificatesByCAOutput
  listIndices(input: AwsIotListIndicesInput, config: AwsConfig): AwsIotListIndicesOutput
  listJobExecutionsForJob(input: AwsIotListJobExecutionsForJobInput!, config: AwsConfig): AwsIotListJobExecutionsForJobOutput
  listJobExecutionsForThing(input: AwsIotListJobExecutionsForThingInput!, config: AwsConfig): AwsIotListJobExecutionsForThingOutput
  listJobs(input: AwsIotListJobsInput, config: AwsConfig): AwsIotListJobsOutput
  listOTAUpdates(input: AwsIotListOTAUpdatesInput, config: AwsConfig): AwsIotListOTAUpdatesOutput
  listOutgoingCertificates(input: AwsIotListOutgoingCertificatesInput, config: AwsConfig): AwsIotListOutgoingCertificatesOutput
  listPolicies(input: AwsIotListPoliciesInput, config: AwsConfig): AwsIotListPoliciesOutput
  listPolicyPrincipals(input: AwsIotListPolicyPrincipalsInput!, config: AwsConfig): AwsIotListPolicyPrincipalsOutput
  listPolicyVersions(input: AwsIotListPolicyVersionsInput!, config: AwsConfig): AwsIotListPolicyVersionsOutput
  listPrincipalPolicies(input: AwsIotListPrincipalPoliciesInput!, config: AwsConfig): AwsIotListPrincipalPoliciesOutput
  listPrincipalThings(input: AwsIotListPrincipalThingsInput!, config: AwsConfig): AwsIotListPrincipalThingsOutput
  listRoleAliases(input: AwsIotListRoleAliasesInput, config: AwsConfig): AwsIotListRoleAliasesOutput
  listScheduledAudits(input: AwsIotListScheduledAuditsInput, config: AwsConfig): AwsIotListScheduledAuditsOutput
  listSecurityProfiles(input: AwsIotListSecurityProfilesInput, config: AwsConfig): AwsIotListSecurityProfilesOutput
  listSecurityProfilesForTarget(input: AwsIotListSecurityProfilesForTargetInput!, config: AwsConfig): AwsIotListSecurityProfilesForTargetOutput
  listStreams(input: AwsIotListStreamsInput, config: AwsConfig): AwsIotListStreamsOutput
  listTagsForResource(input: AwsIotListTagsForResourceInput!, config: AwsConfig): AwsIotListTagsForResourceOutput
  listTargetsForPolicy(input: AwsIotListTargetsForPolicyInput!, config: AwsConfig): AwsIotListTargetsForPolicyOutput
  listTargetsForSecurityProfile(input: AwsIotListTargetsForSecurityProfileInput!, config: AwsConfig): AwsIotListTargetsForSecurityProfileOutput
  listThingGroups(input: AwsIotListThingGroupsInput, config: AwsConfig): AwsIotListThingGroupsOutput
  listThingGroupsForThing(input: AwsIotListThingGroupsForThingInput!, config: AwsConfig): AwsIotListThingGroupsForThingOutput
  listThingPrincipals(input: AwsIotListThingPrincipalsInput!, config: AwsConfig): AwsIotListThingPrincipalsOutput
  listThingRegistrationTaskReports(input: AwsIotListThingRegistrationTaskReportsInput!, config: AwsConfig): AwsIotListThingRegistrationTaskReportsOutput
  listThingRegistrationTasks(input: AwsIotListThingRegistrationTasksInput, config: AwsConfig): AwsIotListThingRegistrationTasksOutput
  listThingTypes(input: AwsIotListThingTypesInput, config: AwsConfig): AwsIotListThingTypesOutput
  listThings(input: AwsIotListThingsInput, config: AwsConfig): AwsIotListThingsOutput
  listThingsInBillingGroup(input: AwsIotListThingsInBillingGroupInput!, config: AwsConfig): AwsIotListThingsInBillingGroupOutput
  listThingsInThingGroup(input: AwsIotListThingsInThingGroupInput!, config: AwsConfig): AwsIotListThingsInThingGroupOutput
  listTopicRules(input: AwsIotListTopicRulesInput, config: AwsConfig): AwsIotListTopicRulesOutput
  listV2LoggingLevels(input: AwsIotListV2LoggingLevelsInput, config: AwsConfig): AwsIotListV2LoggingLevelsOutput
  listViolationEvents(input: AwsIotListViolationEventsInput!, config: AwsConfig): AwsIotListViolationEventsOutput
  registerCACertificate(input: AwsIotRegisterCACertificateInput!, config: AwsConfig): AwsIotRegisterCACertificateOutput
  registerCertificate(input: AwsIotRegisterCertificateInput!, config: AwsConfig): AwsIotRegisterCertificateOutput
  registerThing(input: AwsIotRegisterThingInput!, config: AwsConfig): AwsIotRegisterThingOutput
  rejectCertificateTransfer(input: AwsIotRejectCertificateTransferInput!, config: AwsConfig): JSON
  removeThingFromBillingGroup(input: AwsIotRemoveThingFromBillingGroupInput, config: AwsConfig): JSON
  removeThingFromThingGroup(input: AwsIotRemoveThingFromThingGroupInput, config: AwsConfig): JSON
  replaceTopicRule(input: AwsIotReplaceTopicRuleInput!, config: AwsConfig): JSON
  searchIndex(input: AwsIotSearchIndexInput!, config: AwsConfig): AwsIotSearchIndexOutput
  setDefaultAuthorizer(input: AwsIotSetDefaultAuthorizerInput!, config: AwsConfig): AwsIotSetDefaultAuthorizerOutput
  setDefaultPolicyVersion(input: AwsIotSetDefaultPolicyVersionInput!, config: AwsConfig): JSON
  setLoggingOptions(input: AwsIotSetLoggingOptionsInput!, config: AwsConfig): JSON
  setV2LoggingLevel(input: AwsIotSetV2LoggingLevelInput!, config: AwsConfig): JSON
  setV2LoggingOptions(input: AwsIotSetV2LoggingOptionsInput, config: AwsConfig): JSON
  startOnDemandAuditTask(input: AwsIotStartOnDemandAuditTaskInput!, config: AwsConfig): AwsIotStartOnDemandAuditTaskOutput
  startThingRegistrationTask(input: AwsIotStartThingRegistrationTaskInput!, config: AwsConfig): AwsIotStartThingRegistrationTaskOutput
  stopThingRegistrationTask(input: AwsIotStopThingRegistrationTaskInput!, config: AwsConfig): JSON
  tagResource(input: AwsIotTagResourceInput!, config: AwsConfig): JSON
  testAuthorization(input: AwsIotTestAuthorizationInput!, config: AwsConfig): AwsIotTestAuthorizationOutput
  testInvokeAuthorizer(input: AwsIotTestInvokeAuthorizerInput!, config: AwsConfig): AwsIotTestInvokeAuthorizerOutput
  transferCertificate(input: AwsIotTransferCertificateInput!, config: AwsConfig): AwsIotTransferCertificateOutput
  untagResource(input: AwsIotUntagResourceInput!, config: AwsConfig): JSON
  updateAccountAuditConfiguration(input: AwsIotUpdateAccountAuditConfigurationInput, config: AwsConfig): JSON
  updateAuthorizer(input: AwsIotUpdateAuthorizerInput!, config: AwsConfig): AwsIotUpdateAuthorizerOutput
  updateBillingGroup(input: AwsIotUpdateBillingGroupInput!, config: AwsConfig): AwsIotUpdateBillingGroupOutput
  updateCACertificate(input: AwsIotUpdateCACertificateInput!, config: AwsConfig): JSON
  updateCertificate(input: AwsIotUpdateCertificateInput!, config: AwsConfig): JSON
  updateDynamicThingGroup(input: AwsIotUpdateDynamicThingGroupInput!, config: AwsConfig): AwsIotUpdateDynamicThingGroupOutput
  updateEventConfigurations(input: AwsIotUpdateEventConfigurationsInput, config: AwsConfig): JSON
  updateIndexingConfiguration(input: AwsIotUpdateIndexingConfigurationInput, config: AwsConfig): JSON
  updateJob(input: AwsIotUpdateJobInput!, config: AwsConfig): JSON
  updateRoleAlias(input: AwsIotUpdateRoleAliasInput!, config: AwsConfig): AwsIotUpdateRoleAliasOutput
  updateScheduledAudit(input: AwsIotUpdateScheduledAuditInput!, config: AwsConfig): AwsIotUpdateScheduledAuditOutput
  updateSecurityProfile(input: AwsIotUpdateSecurityProfileInput!, config: AwsConfig): AwsIotUpdateSecurityProfileOutput
  updateStream(input: AwsIotUpdateStreamInput!, config: AwsConfig): AwsIotUpdateStreamOutput
  updateThing(input: AwsIotUpdateThingInput!, config: AwsConfig): JSON
  updateThingGroup(input: AwsIotUpdateThingGroupInput!, config: AwsConfig): AwsIotUpdateThingGroupOutput
  updateThingGroupsForThing(input: AwsIotUpdateThingGroupsForThingInput, config: AwsConfig): JSON
  validateSecurityProfileBehaviors(input: AwsIotValidateSecurityProfileBehaviorsInput!, config: AwsConfig): AwsIotValidateSecurityProfileBehaviorsOutput
}

"""AWS IoT 1-Click Devices Service (2018-05-14)"""
type AwsIoT1ClickDevicesService {
  claimDevicesByClaimCode(input: AwsIoT1ClickDevicesServiceClaimDevicesByClaimCodeInput!, config: AwsConfig): AwsIoT1ClickDevicesServiceClaimDevicesByClaimCodeOutput
  describeDevice(input: AwsIoT1ClickDevicesServiceDescribeDeviceInput!, config: AwsConfig): AwsIoT1ClickDevicesServiceDescribeDeviceOutput
  finalizeDeviceClaim(input: AwsIoT1ClickDevicesServiceFinalizeDeviceClaimInput!, config: AwsConfig): AwsIoT1ClickDevicesServiceFinalizeDeviceClaimOutput
  getDeviceMethods(input: AwsIoT1ClickDevicesServiceGetDeviceMethodsInput!, config: AwsConfig): AwsIoT1ClickDevicesServiceGetDeviceMethodsOutput
  initiateDeviceClaim(input: AwsIoT1ClickDevicesServiceInitiateDeviceClaimInput!, config: AwsConfig): AwsIoT1ClickDevicesServiceInitiateDeviceClaimOutput
  invokeDeviceMethod(input: AwsIoT1ClickDevicesServiceInvokeDeviceMethodInput!, config: AwsConfig): AwsIoT1ClickDevicesServiceInvokeDeviceMethodOutput
  listDeviceEvents(input: AwsIoT1ClickDevicesServiceListDeviceEventsInput!, config: AwsConfig): AwsIoT1ClickDevicesServiceListDeviceEventsOutput
  listDevices(input: AwsIoT1ClickDevicesServiceListDevicesInput, config: AwsConfig): AwsIoT1ClickDevicesServiceListDevicesOutput
  listTagsForResource(input: AwsIoT1ClickDevicesServiceListTagsForResourceInput!, config: AwsConfig): AwsIoT1ClickDevicesServiceListTagsForResourceOutput
  tagResource(input: AwsIoT1ClickDevicesServiceTagResourceInput!, config: AwsConfig): JSON
  unclaimDevice(input: AwsIoT1ClickDevicesServiceUnclaimDeviceInput!, config: AwsConfig): AwsIoT1ClickDevicesServiceUnclaimDeviceOutput
  untagResource(input: AwsIoT1ClickDevicesServiceUntagResourceInput!, config: AwsConfig): JSON
  updateDeviceState(input: AwsIoT1ClickDevicesServiceUpdateDeviceStateInput!, config: AwsConfig): JSON
}

input AwsIoT1ClickDevicesServiceClaimDevicesByClaimCodeInput {
  ClaimCode: String!
}

type AwsIoT1ClickDevicesServiceClaimDevicesByClaimCodeOutput {
  ClaimCode: String
  Total: Int
}

input AwsIoT1ClickDevicesServiceDescribeDeviceInput {
  DeviceId: String!
}

type AwsIoT1ClickDevicesServiceDescribeDeviceOutput {
  DeviceDescription: AwsIoT1ClickDevicesServiceS8
}

input AwsIoT1ClickDevicesServiceFinalizeDeviceClaimInput {
  DeviceId: String!
  Tags: JSON
}

type AwsIoT1ClickDevicesServiceFinalizeDeviceClaimOutput {
  State: String
}

input AwsIoT1ClickDevicesServiceGetDeviceMethodsInput {
  DeviceId: String!
}

type AwsIoT1ClickDevicesServiceGetDeviceMethodsOutput {
  DeviceMethods: [AwsIoT1ClickDevicesServiceSi]
}

input AwsIoT1ClickDevicesServiceInitiateDeviceClaimInput {
  DeviceId: String!
}

type AwsIoT1ClickDevicesServiceInitiateDeviceClaimOutput {
  State: String
}

input AwsIoT1ClickDevicesServiceInvokeDeviceMethodInput {
  DeviceId: String!
  DeviceMethod: AwsIoT1ClickDevicesServiceSiInput
  DeviceMethodParameters: String
}

type AwsIoT1ClickDevicesServiceInvokeDeviceMethodOutput {
  DeviceMethodResponse: String
}

input AwsIoT1ClickDevicesServiceListDeviceEventsInput {
  DeviceId: String!
  FromTimeStamp: Date!
  MaxResults: Int
  NextToken: String
  ToTimeStamp: Date!
}

type AwsIoT1ClickDevicesServiceListDeviceEventsOutput {
  Events: [AwsIoT1ClickDevicesServiceListDeviceEventsOutputEvents]
  NextToken: String
}

type AwsIoT1ClickDevicesServiceListDeviceEventsOutputEvents {
  Device: AwsIoT1ClickDevicesServiceListDeviceEventsOutputEventsDevice
  StdEvent: String
}

type AwsIoT1ClickDevicesServiceListDeviceEventsOutputEventsDevice {
  Attributes: JSON
  DeviceId: String
  Type: String
}

input AwsIoT1ClickDevicesServiceListDevicesInput {
  DeviceType: String
  MaxResults: Int
  NextToken: String
}

type AwsIoT1ClickDevicesServiceListDevicesOutput {
  Devices: [AwsIoT1ClickDevicesServiceS8]
  NextToken: String
}

input AwsIoT1ClickDevicesServiceListTagsForResourceInput {
  ResourceArn: String!
}

type AwsIoT1ClickDevicesServiceListTagsForResourceOutput {
  Tags: JSON
}

type AwsIoT1ClickDevicesServiceS8 {
  Arn: String
  Attributes: JSON
  DeviceId: String
  Enabled: Boolean
  RemainingLife: JSON
  Type: String
  Tags: JSON
}

type AwsIoT1ClickDevicesServiceSi {
  DeviceType: String
  MethodName: String
}

input AwsIoT1ClickDevicesServiceSiInput {
  DeviceType: String
  MethodName: String
}

input AwsIoT1ClickDevicesServiceTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsIoT1ClickDevicesServiceUnclaimDeviceInput {
  DeviceId: String!
}

type AwsIoT1ClickDevicesServiceUnclaimDeviceOutput {
  State: String
}

input AwsIoT1ClickDevicesServiceUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsIoT1ClickDevicesServiceUpdateDeviceStateInput {
  DeviceId: String!
  Enabled: Boolean
}

"""AWS IoT 1-Click Projects Service (2018-05-14)"""
type AwsIoT1ClickProjects {
  associateDeviceWithPlacement(input: AwsIoT1ClickProjectsAssociateDeviceWithPlacementInput!, config: AwsConfig): JSON
  createPlacement(input: AwsIoT1ClickProjectsCreatePlacementInput!, config: AwsConfig): JSON
  createProject(input: AwsIoT1ClickProjectsCreateProjectInput!, config: AwsConfig): JSON
  deletePlacement(input: AwsIoT1ClickProjectsDeletePlacementInput!, config: AwsConfig): JSON
  deleteProject(input: AwsIoT1ClickProjectsDeleteProjectInput!, config: AwsConfig): JSON
  describePlacement(input: AwsIoT1ClickProjectsDescribePlacementInput!, config: AwsConfig): AwsIoT1ClickProjectsDescribePlacementOutput
  describeProject(input: AwsIoT1ClickProjectsDescribeProjectInput!, config: AwsConfig): AwsIoT1ClickProjectsDescribeProjectOutput
  disassociateDeviceFromPlacement(input: AwsIoT1ClickProjectsDisassociateDeviceFromPlacementInput!, config: AwsConfig): JSON
  getDevicesInPlacement(input: AwsIoT1ClickProjectsGetDevicesInPlacementInput!, config: AwsConfig): AwsIoT1ClickProjectsGetDevicesInPlacementOutput
  listPlacements(input: AwsIoT1ClickProjectsListPlacementsInput!, config: AwsConfig): AwsIoT1ClickProjectsListPlacementsOutput
  listProjects(input: AwsIoT1ClickProjectsListProjectsInput, config: AwsConfig): AwsIoT1ClickProjectsListProjectsOutput
  listTagsForResource(input: AwsIoT1ClickProjectsListTagsForResourceInput!, config: AwsConfig): AwsIoT1ClickProjectsListTagsForResourceOutput
  tagResource(input: AwsIoT1ClickProjectsTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsIoT1ClickProjectsUntagResourceInput!, config: AwsConfig): JSON
  updatePlacement(input: AwsIoT1ClickProjectsUpdatePlacementInput!, config: AwsConfig): JSON
  updateProject(input: AwsIoT1ClickProjectsUpdateProjectInput!, config: AwsConfig): JSON
}

input AwsIoT1ClickProjectsAssociateDeviceWithPlacementInput {
  projectName: String!
  placementName: String!
  deviceId: String!
  deviceTemplateName: String!
}

input AwsIoT1ClickProjectsCreatePlacementInput {
  placementName: String!
  projectName: String!
  attributes: JSON
}

input AwsIoT1ClickProjectsCreateProjectInput {
  projectName: String!
  description: String
  placementTemplate: AwsIoT1ClickProjectsSeInput
  tags: JSON
}

input AwsIoT1ClickProjectsDeletePlacementInput {
  placementName: String!
  projectName: String!
}

input AwsIoT1ClickProjectsDeleteProjectInput {
  projectName: String!
}

input AwsIoT1ClickProjectsDescribePlacementInput {
  placementName: String!
  projectName: String!
}

type AwsIoT1ClickProjectsDescribePlacementOutput {
  placement: AwsIoT1ClickProjectsDescribePlacementOutputPlacement!
}

type AwsIoT1ClickProjectsDescribePlacementOutputPlacement {
  projectName: String!
  placementName: String!
  attributes: JSON!
  createdDate: Date!
  updatedDate: Date!
}

input AwsIoT1ClickProjectsDescribeProjectInput {
  projectName: String!
}

type AwsIoT1ClickProjectsDescribeProjectOutput {
  project: AwsIoT1ClickProjectsDescribeProjectOutputProject!
}

type AwsIoT1ClickProjectsDescribeProjectOutputProject {
  arn: String
  projectName: String!
  description: String
  createdDate: Date!
  updatedDate: Date!
  placementTemplate: AwsIoT1ClickProjectsSe
  tags: JSON
}

input AwsIoT1ClickProjectsDisassociateDeviceFromPlacementInput {
  projectName: String!
  placementName: String!
  deviceTemplateName: String!
}

input AwsIoT1ClickProjectsGetDevicesInPlacementInput {
  projectName: String!
  placementName: String!
}

type AwsIoT1ClickProjectsGetDevicesInPlacementOutput {
  devices: JSON!
}

input AwsIoT1ClickProjectsListPlacementsInput {
  projectName: String!
  nextToken: String
  maxResults: Int
}

type AwsIoT1ClickProjectsListPlacementsOutput {
  placements: [AwsIoT1ClickProjectsListPlacementsOutputPlacements]!
  nextToken: String
}

type AwsIoT1ClickProjectsListPlacementsOutputPlacements {
  projectName: String!
  placementName: String!
  createdDate: Date!
  updatedDate: Date!
}

input AwsIoT1ClickProjectsListProjectsInput {
  nextToken: String
  maxResults: Int
}

type AwsIoT1ClickProjectsListProjectsOutput {
  projects: [AwsIoT1ClickProjectsListProjectsOutputProjects]!
  nextToken: String
}

type AwsIoT1ClickProjectsListProjectsOutputProjects {
  arn: String
  projectName: String!
  createdDate: Date!
  updatedDate: Date!
  tags: JSON
}

input AwsIoT1ClickProjectsListTagsForResourceInput {
  resourceArn: String!
}

type AwsIoT1ClickProjectsListTagsForResourceOutput {
  tags: JSON
}

type AwsIoT1ClickProjectsSe {
  defaultAttributes: JSON
  deviceTemplates: JSON
}

input AwsIoT1ClickProjectsSeInput {
  defaultAttributes: JSON
  deviceTemplates: JSON
}

input AwsIoT1ClickProjectsTagResourceInput {
  resourceArn: String!
  tags: JSON!
}

input AwsIoT1ClickProjectsUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsIoT1ClickProjectsUpdatePlacementInput {
  placementName: String!
  projectName: String!
  attributes: JSON
}

input AwsIoT1ClickProjectsUpdateProjectInput {
  projectName: String!
  description: String
  placementTemplate: AwsIoT1ClickProjectsSeInput
}

input AwsIotAcceptCertificateTransferInput {
  certificateId: String!
  setAsActive: Boolean
}

input AwsIotAddThingToBillingGroupInput {
  billingGroupName: String
  billingGroupArn: String
  thingName: String
  thingArn: String
}

input AwsIotAddThingToThingGroupInput {
  thingGroupName: String
  thingGroupArn: String
  thingName: String
  thingArn: String
  overrideDynamicGroups: Boolean
}

"""AWS IoT Analytics (2017-11-27)"""
type AwsIoTAnalytics {
  batchPutMessage(input: AwsIoTAnalyticsBatchPutMessageInput!, config: AwsConfig): AwsIoTAnalyticsBatchPutMessageOutput
  cancelPipelineReprocessing(input: AwsIoTAnalyticsCancelPipelineReprocessingInput!, config: AwsConfig): JSON
  createChannel(input: AwsIoTAnalyticsCreateChannelInput!, config: AwsConfig): AwsIoTAnalyticsCreateChannelOutput
  createDataset(input: AwsIoTAnalyticsCreateDatasetInput!, config: AwsConfig): AwsIoTAnalyticsCreateDatasetOutput
  createDatasetContent(input: AwsIoTAnalyticsCreateDatasetContentInput!, config: AwsConfig): AwsIoTAnalyticsCreateDatasetContentOutput
  createDatastore(input: AwsIoTAnalyticsCreateDatastoreInput!, config: AwsConfig): AwsIoTAnalyticsCreateDatastoreOutput
  createPipeline(input: AwsIoTAnalyticsCreatePipelineInput!, config: AwsConfig): AwsIoTAnalyticsCreatePipelineOutput
  deleteChannel(input: AwsIoTAnalyticsDeleteChannelInput!, config: AwsConfig): JSON
  deleteDataset(input: AwsIoTAnalyticsDeleteDatasetInput!, config: AwsConfig): JSON
  deleteDatasetContent(input: AwsIoTAnalyticsDeleteDatasetContentInput!, config: AwsConfig): JSON
  deleteDatastore(input: AwsIoTAnalyticsDeleteDatastoreInput!, config: AwsConfig): JSON
  deletePipeline(input: AwsIoTAnalyticsDeletePipelineInput!, config: AwsConfig): JSON
  describeChannel(input: AwsIoTAnalyticsDescribeChannelInput!, config: AwsConfig): AwsIoTAnalyticsDescribeChannelOutput
  describeDataset(input: AwsIoTAnalyticsDescribeDatasetInput!, config: AwsConfig): AwsIoTAnalyticsDescribeDatasetOutput
  describeDatastore(input: AwsIoTAnalyticsDescribeDatastoreInput!, config: AwsConfig): AwsIoTAnalyticsDescribeDatastoreOutput
  describeLoggingOptions(input: JSON, config: AwsConfig): AwsIoTAnalyticsDescribeLoggingOptionsOutput
  describePipeline(input: AwsIoTAnalyticsDescribePipelineInput!, config: AwsConfig): AwsIoTAnalyticsDescribePipelineOutput
  getDatasetContent(input: AwsIoTAnalyticsGetDatasetContentInput!, config: AwsConfig): AwsIoTAnalyticsGetDatasetContentOutput
  listChannels(input: AwsIoTAnalyticsListChannelsInput, config: AwsConfig): AwsIoTAnalyticsListChannelsOutput
  listDatasetContents(input: AwsIoTAnalyticsListDatasetContentsInput!, config: AwsConfig): AwsIoTAnalyticsListDatasetContentsOutput
  listDatasets(input: AwsIoTAnalyticsListDatasetsInput, config: AwsConfig): AwsIoTAnalyticsListDatasetsOutput
  listDatastores(input: AwsIoTAnalyticsListDatastoresInput, config: AwsConfig): AwsIoTAnalyticsListDatastoresOutput
  listPipelines(input: AwsIoTAnalyticsListPipelinesInput, config: AwsConfig): AwsIoTAnalyticsListPipelinesOutput
  listTagsForResource(input: AwsIoTAnalyticsListTagsForResourceInput!, config: AwsConfig): AwsIoTAnalyticsListTagsForResourceOutput
  putLoggingOptions(input: AwsIoTAnalyticsPutLoggingOptionsInput!, config: AwsConfig): JSON
  runPipelineActivity(input: AwsIoTAnalyticsRunPipelineActivityInput!, config: AwsConfig): AwsIoTAnalyticsRunPipelineActivityOutput
  sampleChannelData(input: AwsIoTAnalyticsSampleChannelDataInput!, config: AwsConfig): AwsIoTAnalyticsSampleChannelDataOutput
  startPipelineReprocessing(input: AwsIoTAnalyticsStartPipelineReprocessingInput!, config: AwsConfig): AwsIoTAnalyticsStartPipelineReprocessingOutput
  tagResource(input: AwsIoTAnalyticsTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsIoTAnalyticsUntagResourceInput!, config: AwsConfig): JSON
  updateChannel(input: AwsIoTAnalyticsUpdateChannelInput!, config: AwsConfig): JSON
  updateDataset(input: AwsIoTAnalyticsUpdateDatasetInput!, config: AwsConfig): JSON
  updateDatastore(input: AwsIoTAnalyticsUpdateDatastoreInput!, config: AwsConfig): JSON
  updatePipeline(input: AwsIoTAnalyticsUpdatePipelineInput!, config: AwsConfig): JSON
}

input AwsIoTAnalyticsBatchPutMessageInput {
  channelName: String!
  messages: [AwsIoTAnalyticsBatchPutMessageMessagesInput]!
}

input AwsIoTAnalyticsBatchPutMessageMessagesInput {
  messageId: String!
  payload: JSON!
}

type AwsIoTAnalyticsBatchPutMessageOutput {
  batchPutMessageErrorEntries: [AwsIoTAnalyticsBatchPutMessageOutputBatchPutMessageErrorEntries]
}

type AwsIoTAnalyticsBatchPutMessageOutputBatchPutMessageErrorEntries {
  messageId: String
  errorCode: String
  errorMessage: String
}

input AwsIoTAnalyticsCancelPipelineReprocessingInput {
  pipelineName: String!
  reprocessingId: String!
}

input AwsIoTAnalyticsCreateChannelInput {
  channelName: String!
  channelStorage: AwsIoTAnalyticsShInput
  retentionPeriod: AwsIoTAnalyticsSnInput
  tags: [AwsIoTAnalyticsSqInput]
}

type AwsIoTAnalyticsCreateChannelOutput {
  channelName: String
  channelArn: String
  retentionPeriod: AwsIoTAnalyticsSn
}

input AwsIoTAnalyticsCreateDatasetContentInput {
  datasetName: String!
}

type AwsIoTAnalyticsCreateDatasetContentOutput {
  versionId: String
}

input AwsIoTAnalyticsCreateDatasetInput {
  datasetName: String!
  actions: [AwsIoTAnalyticsSyInput]!
  triggers: [AwsIoTAnalyticsS1lInput]
  contentDeliveryRules: [AwsIoTAnalyticsS1qInput]
  retentionPeriod: AwsIoTAnalyticsSnInput
  versioningConfiguration: AwsIoTAnalyticsS21Input
  tags: [AwsIoTAnalyticsSqInput]
}

type AwsIoTAnalyticsCreateDatasetOutput {
  datasetName: String
  datasetArn: String
  retentionPeriod: AwsIoTAnalyticsSn
}

input AwsIoTAnalyticsCreateDatastoreInput {
  datastoreName: String!
  datastoreStorage: AwsIoTAnalyticsS2bInput
  retentionPeriod: AwsIoTAnalyticsSnInput
  tags: [AwsIoTAnalyticsSqInput]
}

type AwsIoTAnalyticsCreateDatastoreOutput {
  datastoreName: String
  datastoreArn: String
  retentionPeriod: AwsIoTAnalyticsSn
}

input AwsIoTAnalyticsCreatePipelineInput {
  pipelineName: String!
  pipelineActivities: [AwsIoTAnalyticsS2iInput]!
  tags: [AwsIoTAnalyticsSqInput]
}

type AwsIoTAnalyticsCreatePipelineOutput {
  pipelineName: String
  pipelineArn: String
}

input AwsIoTAnalyticsDeleteChannelInput {
  channelName: String!
}

input AwsIoTAnalyticsDeleteDatasetContentInput {
  datasetName: String!
  versionId: String
}

input AwsIoTAnalyticsDeleteDatasetInput {
  datasetName: String!
}

input AwsIoTAnalyticsDeleteDatastoreInput {
  datastoreName: String!
}

input AwsIoTAnalyticsDeletePipelineInput {
  pipelineName: String!
}

input AwsIoTAnalyticsDescribeChannelInput {
  channelName: String!
  includeStatistics: Boolean
}

type AwsIoTAnalyticsDescribeChannelOutput {
  channel: AwsIoTAnalyticsDescribeChannelOutputChannel
  statistics: AwsIoTAnalyticsDescribeChannelOutputStatistics
}

type AwsIoTAnalyticsDescribeChannelOutputChannel {
  name: String
  storage: AwsIoTAnalyticsSh
  arn: String
  status: String
  retentionPeriod: AwsIoTAnalyticsSn
  creationTime: Date
  lastUpdateTime: Date
}

type AwsIoTAnalyticsDescribeChannelOutputStatistics {
  size: AwsIoTAnalyticsS3f
}

input AwsIoTAnalyticsDescribeDatasetInput {
  datasetName: String!
}

type AwsIoTAnalyticsDescribeDatasetOutput {
  dataset: AwsIoTAnalyticsDescribeDatasetOutputDataset
}

type AwsIoTAnalyticsDescribeDatasetOutputDataset {
  name: String
  arn: String
  actions: [AwsIoTAnalyticsSy]
  triggers: [AwsIoTAnalyticsS1l]
  contentDeliveryRules: [AwsIoTAnalyticsS1q]
  status: String
  creationTime: Date
  lastUpdateTime: Date
  retentionPeriod: AwsIoTAnalyticsSn
  versioningConfiguration: AwsIoTAnalyticsS21
}

input AwsIoTAnalyticsDescribeDatastoreInput {
  datastoreName: String!
  includeStatistics: Boolean
}

type AwsIoTAnalyticsDescribeDatastoreOutput {
  datastore: AwsIoTAnalyticsDescribeDatastoreOutputDatastore
  statistics: AwsIoTAnalyticsDescribeDatastoreOutputStatistics
}

type AwsIoTAnalyticsDescribeDatastoreOutputDatastore {
  name: String
  storage: AwsIoTAnalyticsS2b
  arn: String
  status: String
  retentionPeriod: AwsIoTAnalyticsSn
  creationTime: Date
  lastUpdateTime: Date
}

type AwsIoTAnalyticsDescribeDatastoreOutputStatistics {
  size: AwsIoTAnalyticsS3f
}

type AwsIoTAnalyticsDescribeLoggingOptionsOutput {
  loggingOptions: AwsIoTAnalyticsS3s
}

input AwsIoTAnalyticsDescribePipelineInput {
  pipelineName: String!
}

type AwsIoTAnalyticsDescribePipelineOutput {
  pipeline: AwsIoTAnalyticsDescribePipelineOutputPipeline
}

type AwsIoTAnalyticsDescribePipelineOutputPipeline {
  name: String
  arn: String
  activities: [AwsIoTAnalyticsS2i]
  reprocessingSummaries: [AwsIoTAnalyticsS3y]
  creationTime: Date
  lastUpdateTime: Date
}

input AwsIoTAnalyticsGetDatasetContentInput {
  datasetName: String!
  versionId: String
}

type AwsIoTAnalyticsGetDatasetContentOutput {
  entries: [AwsIoTAnalyticsGetDatasetContentOutputEntries]
  timestamp: Date
  status: AwsIoTAnalyticsS46
}

type AwsIoTAnalyticsGetDatasetContentOutputEntries {
  entryName: String
  dataURI: String
}

input AwsIoTAnalyticsListChannelsInput {
  nextToken: String
  maxResults: Int
}

type AwsIoTAnalyticsListChannelsOutput {
  channelSummaries: [AwsIoTAnalyticsListChannelsOutputChannelSummaries]
  nextToken: String
}

type AwsIoTAnalyticsListChannelsOutputChannelSummaries {
  channelName: String
  channelStorage: AwsIoTAnalyticsListChannelsOutputChannelSummariesChannelStorage
  status: String
  creationTime: Date
  lastUpdateTime: Date
}

type AwsIoTAnalyticsListChannelsOutputChannelSummariesChannelStorage {
  serviceManagedS3: JSON
  customerManagedS3: AwsIoTAnalyticsListChannelsOutputChannelSummariesChannelStorageCustomerManagedS3
}

type AwsIoTAnalyticsListChannelsOutputChannelSummariesChannelStorageCustomerManagedS3 {
  bucket: String
  keyPrefix: String
  roleArn: String
}

input AwsIoTAnalyticsListDatasetContentsInput {
  datasetName: String!
  nextToken: String
  maxResults: Int
  scheduledOnOrAfter: Date
  scheduledBefore: Date
}

type AwsIoTAnalyticsListDatasetContentsOutput {
  datasetContentSummaries: [AwsIoTAnalyticsListDatasetContentsOutputDatasetContentSummaries]
  nextToken: String
}

type AwsIoTAnalyticsListDatasetContentsOutputDatasetContentSummaries {
  version: String
  status: AwsIoTAnalyticsS46
  creationTime: Date
  scheduleTime: Date
}

input AwsIoTAnalyticsListDatasetsInput {
  nextToken: String
  maxResults: Int
}

type AwsIoTAnalyticsListDatasetsOutput {
  datasetSummaries: [AwsIoTAnalyticsListDatasetsOutputDatasetSummaries]
  nextToken: String
}

type AwsIoTAnalyticsListDatasetsOutputDatasetSummaries {
  datasetName: String
  status: String
  creationTime: Date
  lastUpdateTime: Date
  triggers: [AwsIoTAnalyticsS1l]
  actions: [AwsIoTAnalyticsListDatasetsOutputDatasetSummariesActions]
}

type AwsIoTAnalyticsListDatasetsOutputDatasetSummariesActions {
  actionName: String
  actionType: String
}

input AwsIoTAnalyticsListDatastoresInput {
  nextToken: String
  maxResults: Int
}

type AwsIoTAnalyticsListDatastoresOutput {
  datastoreSummaries: [AwsIoTAnalyticsListDatastoresOutputDatastoreSummaries]
  nextToken: String
}

type AwsIoTAnalyticsListDatastoresOutputDatastoreSummaries {
  datastoreName: String
  datastoreStorage: AwsIoTAnalyticsListDatastoresOutputDatastoreSummariesDatastoreStorage
  status: String
  creationTime: Date
  lastUpdateTime: Date
}

type AwsIoTAnalyticsListDatastoresOutputDatastoreSummariesDatastoreStorage {
  serviceManagedS3: JSON
  customerManagedS3: AwsIoTAnalyticsListDatastoresOutputDatastoreSummariesDatastoreStorageCustomerManagedS3
}

type AwsIoTAnalyticsListDatastoresOutputDatastoreSummariesDatastoreStorageCustomerManagedS3 {
  bucket: String
  keyPrefix: String
  roleArn: String
}

input AwsIoTAnalyticsListPipelinesInput {
  nextToken: String
  maxResults: Int
}

type AwsIoTAnalyticsListPipelinesOutput {
  pipelineSummaries: [AwsIoTAnalyticsListPipelinesOutputPipelineSummaries]
  nextToken: String
}

type AwsIoTAnalyticsListPipelinesOutputPipelineSummaries {
  pipelineName: String
  reprocessingSummaries: [AwsIoTAnalyticsS3y]
  creationTime: Date
  lastUpdateTime: Date
}

input AwsIoTAnalyticsListTagsForResourceInput {
  resourceArn: String!
}

type AwsIoTAnalyticsListTagsForResourceOutput {
  tags: [AwsIoTAnalyticsSq]
}

input AwsIoTAnalyticsPutLoggingOptionsInput {
  loggingOptions: AwsIoTAnalyticsS3sInput!
}

input AwsIoTAnalyticsRunPipelineActivityInput {
  pipelineActivity: AwsIoTAnalyticsS2iInput!
  payloads: [JSON]!
}

type AwsIoTAnalyticsRunPipelineActivityOutput {
  payloads: [JSON]
  logResult: String
}

type AwsIoTAnalyticsS1l {
  schedule: AwsIoTAnalyticsS1lSchedule
  dataset: AwsIoTAnalyticsS1lDataset
}

type AwsIoTAnalyticsS1lDataset {
  name: String!
}

input AwsIoTAnalyticsS1lDatasetInput {
  name: String!
}

input AwsIoTAnalyticsS1lInput {
  schedule: AwsIoTAnalyticsS1lScheduleInput
  dataset: AwsIoTAnalyticsS1lDatasetInput
}

type AwsIoTAnalyticsS1lSchedule {
  expression: String
}

input AwsIoTAnalyticsS1lScheduleInput {
  expression: String
}

type AwsIoTAnalyticsS1q {
  entryName: String
  destination: AwsIoTAnalyticsS1qDestination!
}

type AwsIoTAnalyticsS1qDestination {
  iotEventsDestinationConfiguration: AwsIoTAnalyticsS1qDestinationIotEventsDestinationConfiguration
  s3DestinationConfiguration: AwsIoTAnalyticsS1qDestinationS3DestinationConfiguration
}

input AwsIoTAnalyticsS1qDestinationInput {
  iotEventsDestinationConfiguration: AwsIoTAnalyticsS1qDestinationIotEventsDestinationConfigurationInput
  s3DestinationConfiguration: AwsIoTAnalyticsS1qDestinationS3DestinationConfigurationInput
}

type AwsIoTAnalyticsS1qDestinationIotEventsDestinationConfiguration {
  inputName: String!
  roleArn: String!
}

input AwsIoTAnalyticsS1qDestinationIotEventsDestinationConfigurationInput {
  inputName: String!
  roleArn: String!
}

type AwsIoTAnalyticsS1qDestinationS3DestinationConfiguration {
  bucket: String!
  key: String!
  glueConfiguration: AwsIoTAnalyticsS1qDestinationS3DestinationConfigurationGlueConfiguration
  roleArn: String!
}

type AwsIoTAnalyticsS1qDestinationS3DestinationConfigurationGlueConfiguration {
  tableName: String!
  databaseName: String!
}

input AwsIoTAnalyticsS1qDestinationS3DestinationConfigurationGlueConfigurationInput {
  tableName: String!
  databaseName: String!
}

input AwsIoTAnalyticsS1qDestinationS3DestinationConfigurationInput {
  bucket: String!
  key: String!
  glueConfiguration: AwsIoTAnalyticsS1qDestinationS3DestinationConfigurationGlueConfigurationInput
  roleArn: String!
}

input AwsIoTAnalyticsS1qInput {
  entryName: String
  destination: AwsIoTAnalyticsS1qDestinationInput!
}

type AwsIoTAnalyticsS21 {
  unlimited: Boolean
  maxVersions: Int
}

input AwsIoTAnalyticsS21Input {
  unlimited: Boolean
  maxVersions: Int
}

type AwsIoTAnalyticsS2b {
  serviceManagedS3: JSON
  customerManagedS3: AwsIoTAnalyticsS2bCustomerManagedS3
}

type AwsIoTAnalyticsS2bCustomerManagedS3 {
  bucket: String!
  keyPrefix: String
  roleArn: String!
}

input AwsIoTAnalyticsS2bCustomerManagedS3Input {
  bucket: String!
  keyPrefix: String
  roleArn: String!
}

input AwsIoTAnalyticsS2bInput {
  serviceManagedS3: JSON
  customerManagedS3: AwsIoTAnalyticsS2bCustomerManagedS3Input
}

type AwsIoTAnalyticsS2i {
  channel: AwsIoTAnalyticsS2iChannel
  lambda: AwsIoTAnalyticsS2iLambda
  datastore: AwsIoTAnalyticsS2iDatastore
  addAttributes: AwsIoTAnalyticsS2iAddAttributes
  removeAttributes: AwsIoTAnalyticsS2iRemoveAttributes
  selectAttributes: AwsIoTAnalyticsS2iSelectAttributes
  filter: AwsIoTAnalyticsS2iFilter
  math: AwsIoTAnalyticsS2iMath
  deviceRegistryEnrich: AwsIoTAnalyticsS2iDeviceRegistryEnrich
  deviceShadowEnrich: AwsIoTAnalyticsS2iDeviceShadowEnrich
}

type AwsIoTAnalyticsS2iAddAttributes {
  name: String!
  attributes: JSON!
  next: String
}

input AwsIoTAnalyticsS2iAddAttributesInput {
  name: String!
  attributes: JSON!
  next: String
}

type AwsIoTAnalyticsS2iChannel {
  name: String!
  channelName: String!
  next: String
}

input AwsIoTAnalyticsS2iChannelInput {
  name: String!
  channelName: String!
  next: String
}

type AwsIoTAnalyticsS2iDatastore {
  name: String!
  datastoreName: String!
}

input AwsIoTAnalyticsS2iDatastoreInput {
  name: String!
  datastoreName: String!
}

type AwsIoTAnalyticsS2iDeviceRegistryEnrich {
  name: String!
  attribute: String!
  thingName: String!
  roleArn: String!
  next: String
}

input AwsIoTAnalyticsS2iDeviceRegistryEnrichInput {
  name: String!
  attribute: String!
  thingName: String!
  roleArn: String!
  next: String
}

type AwsIoTAnalyticsS2iDeviceShadowEnrich {
  name: String!
  attribute: String!
  thingName: String!
  roleArn: String!
  next: String
}

input AwsIoTAnalyticsS2iDeviceShadowEnrichInput {
  name: String!
  attribute: String!
  thingName: String!
  roleArn: String!
  next: String
}

type AwsIoTAnalyticsS2iFilter {
  name: String!
  filter: String!
  next: String
}

input AwsIoTAnalyticsS2iFilterInput {
  name: String!
  filter: String!
  next: String
}

input AwsIoTAnalyticsS2iInput {
  channel: AwsIoTAnalyticsS2iChannelInput
  lambda: AwsIoTAnalyticsS2iLambdaInput
  datastore: AwsIoTAnalyticsS2iDatastoreInput
  addAttributes: AwsIoTAnalyticsS2iAddAttributesInput
  removeAttributes: AwsIoTAnalyticsS2iRemoveAttributesInput
  selectAttributes: AwsIoTAnalyticsS2iSelectAttributesInput
  filter: AwsIoTAnalyticsS2iFilterInput
  math: AwsIoTAnalyticsS2iMathInput
  deviceRegistryEnrich: AwsIoTAnalyticsS2iDeviceRegistryEnrichInput
  deviceShadowEnrich: AwsIoTAnalyticsS2iDeviceShadowEnrichInput
}

type AwsIoTAnalyticsS2iLambda {
  name: String!
  lambdaName: String!
  batchSize: Int!
  next: String
}

input AwsIoTAnalyticsS2iLambdaInput {
  name: String!
  lambdaName: String!
  batchSize: Int!
  next: String
}

type AwsIoTAnalyticsS2iMath {
  name: String!
  attribute: String!
  math: String!
  next: String
}

input AwsIoTAnalyticsS2iMathInput {
  name: String!
  attribute: String!
  math: String!
  next: String
}

type AwsIoTAnalyticsS2iRemoveAttributes {
  name: String!
  attributes: [String]!
  next: String
}

input AwsIoTAnalyticsS2iRemoveAttributesInput {
  name: String!
  attributes: [String]!
  next: String
}

type AwsIoTAnalyticsS2iSelectAttributes {
  name: String!
  attributes: [String]!
  next: String
}

input AwsIoTAnalyticsS2iSelectAttributesInput {
  name: String!
  attributes: [String]!
  next: String
}

type AwsIoTAnalyticsS3f {
  estimatedSizeInBytes: JSON
  estimatedOn: Date
}

type AwsIoTAnalyticsS3s {
  roleArn: String!
  level: String!
  enabled: Boolean!
}

input AwsIoTAnalyticsS3sInput {
  roleArn: String!
  level: String!
  enabled: Boolean!
}

type AwsIoTAnalyticsS3y {
  id: String
  status: String
  creationTime: Date
}

type AwsIoTAnalyticsS46 {
  state: String
  reason: String
}

input AwsIoTAnalyticsSampleChannelDataInput {
  channelName: String!
  maxMessages: Int
  startTime: Date
  endTime: Date
}

type AwsIoTAnalyticsSampleChannelDataOutput {
  payloads: [JSON]
}

type AwsIoTAnalyticsSh {
  serviceManagedS3: JSON
  customerManagedS3: AwsIoTAnalyticsShCustomerManagedS3
}

type AwsIoTAnalyticsShCustomerManagedS3 {
  bucket: String!
  keyPrefix: String
  roleArn: String!
}

input AwsIoTAnalyticsShCustomerManagedS3Input {
  bucket: String!
  keyPrefix: String
  roleArn: String!
}

input AwsIoTAnalyticsShInput {
  serviceManagedS3: JSON
  customerManagedS3: AwsIoTAnalyticsShCustomerManagedS3Input
}

type AwsIoTAnalyticsSn {
  unlimited: Boolean
  numberOfDays: Int
}

input AwsIoTAnalyticsSnInput {
  unlimited: Boolean
  numberOfDays: Int
}

type AwsIoTAnalyticsSq {
  key: String!
  value: String!
}

input AwsIoTAnalyticsSqInput {
  key: String!
  value: String!
}

input AwsIoTAnalyticsStartPipelineReprocessingInput {
  pipelineName: String!
  startTime: Date
  endTime: Date
}

type AwsIoTAnalyticsStartPipelineReprocessingOutput {
  reprocessingId: String
}

type AwsIoTAnalyticsSy {
  actionName: String
  queryAction: AwsIoTAnalyticsSyQueryAction
  containerAction: AwsIoTAnalyticsSyContainerAction
}

type AwsIoTAnalyticsSyContainerAction {
  image: String!
  executionRoleArn: String!
  resourceConfiguration: AwsIoTAnalyticsSyContainerActionResourceConfiguration!
  variables: [AwsIoTAnalyticsSyContainerActionVariables]
}

input AwsIoTAnalyticsSyContainerActionInput {
  image: String!
  executionRoleArn: String!
  resourceConfiguration: AwsIoTAnalyticsSyContainerActionResourceConfigurationInput!
  variables: [AwsIoTAnalyticsSyContainerActionVariablesInput]
}

type AwsIoTAnalyticsSyContainerActionResourceConfiguration {
  computeType: String!
  volumeSizeInGB: Int!
}

input AwsIoTAnalyticsSyContainerActionResourceConfigurationInput {
  computeType: String!
  volumeSizeInGB: Int!
}

type AwsIoTAnalyticsSyContainerActionVariables {
  name: String!
  stringValue: String
  doubleValue: JSON
  datasetContentVersionValue: AwsIoTAnalyticsSyContainerActionVariablesDatasetContentVersionValue
  outputFileUriValue: AwsIoTAnalyticsSyContainerActionVariablesOutputFileUriValue
}

type AwsIoTAnalyticsSyContainerActionVariablesDatasetContentVersionValue {
  datasetName: String!
}

input AwsIoTAnalyticsSyContainerActionVariablesDatasetContentVersionValueInput {
  datasetName: String!
}

input AwsIoTAnalyticsSyContainerActionVariablesInput {
  name: String!
  stringValue: String
  doubleValue: JSON
  datasetContentVersionValue: AwsIoTAnalyticsSyContainerActionVariablesDatasetContentVersionValueInput
  outputFileUriValue: AwsIoTAnalyticsSyContainerActionVariablesOutputFileUriValueInput
}

type AwsIoTAnalyticsSyContainerActionVariablesOutputFileUriValue {
  fileName: String!
}

input AwsIoTAnalyticsSyContainerActionVariablesOutputFileUriValueInput {
  fileName: String!
}

input AwsIoTAnalyticsSyInput {
  actionName: String
  queryAction: AwsIoTAnalyticsSyQueryActionInput
  containerAction: AwsIoTAnalyticsSyContainerActionInput
}

type AwsIoTAnalyticsSyQueryAction {
  sqlQuery: String!
  filters: [AwsIoTAnalyticsSyQueryActionFilters]
}

type AwsIoTAnalyticsSyQueryActionFilters {
  deltaTime: AwsIoTAnalyticsSyQueryActionFiltersDeltaTime
}

type AwsIoTAnalyticsSyQueryActionFiltersDeltaTime {
  offsetSeconds: Int!
  timeExpression: String!
}

input AwsIoTAnalyticsSyQueryActionFiltersDeltaTimeInput {
  offsetSeconds: Int!
  timeExpression: String!
}

input AwsIoTAnalyticsSyQueryActionFiltersInput {
  deltaTime: AwsIoTAnalyticsSyQueryActionFiltersDeltaTimeInput
}

input AwsIoTAnalyticsSyQueryActionInput {
  sqlQuery: String!
  filters: [AwsIoTAnalyticsSyQueryActionFiltersInput]
}

input AwsIoTAnalyticsTagResourceInput {
  resourceArn: String!
  tags: [AwsIoTAnalyticsSqInput]!
}

input AwsIoTAnalyticsUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsIoTAnalyticsUpdateChannelInput {
  channelName: String!
  channelStorage: AwsIoTAnalyticsShInput
  retentionPeriod: AwsIoTAnalyticsSnInput
}

input AwsIoTAnalyticsUpdateDatasetInput {
  datasetName: String!
  actions: [AwsIoTAnalyticsSyInput]!
  triggers: [AwsIoTAnalyticsS1lInput]
  contentDeliveryRules: [AwsIoTAnalyticsS1qInput]
  retentionPeriod: AwsIoTAnalyticsSnInput
  versioningConfiguration: AwsIoTAnalyticsS21Input
}

input AwsIoTAnalyticsUpdateDatastoreInput {
  datastoreName: String!
  retentionPeriod: AwsIoTAnalyticsSnInput
  datastoreStorage: AwsIoTAnalyticsS2bInput
}

input AwsIoTAnalyticsUpdatePipelineInput {
  pipelineName: String!
  pipelineActivities: [AwsIoTAnalyticsS2iInput]!
}

input AwsIotAssociateTargetsWithJobInput {
  targets: [String]!
  jobId: String!
  comment: String
}

type AwsIotAssociateTargetsWithJobOutput {
  jobArn: String
  jobId: String
  description: String
}

input AwsIotAttachPolicyInput {
  policyName: String!
  target: String!
}

input AwsIotAttachPrincipalPolicyInput {
  policyName: String!
  principal: String!
}

input AwsIotAttachSecurityProfileInput {
  securityProfileName: String!
  securityProfileTargetArn: String!
}

input AwsIotAttachThingPrincipalInput {
  thingName: String!
  principal: String!
}

input AwsIotCancelAuditTaskInput {
  taskId: String!
}

input AwsIotCancelCertificateTransferInput {
  certificateId: String!
}

input AwsIotCancelJobExecutionInput {
  jobId: String!
  thingName: String!
  force: Boolean
  expectedVersion: JSON
  statusDetails: JSON
}

input AwsIotCancelJobInput {
  jobId: String!
  reasonCode: String
  comment: String
  force: Boolean
}

type AwsIotCancelJobOutput {
  jobArn: String
  jobId: String
  description: String
}

input AwsIotCreateAuthorizerInput {
  authorizerName: String!
  authorizerFunctionArn: String!
  tokenKeyName: String!
  tokenSigningPublicKeys: JSON!
  status: String
}

type AwsIotCreateAuthorizerOutput {
  authorizerName: String
  authorizerArn: String
}

input AwsIotCreateBillingGroupInput {
  billingGroupName: String!
  billingGroupProperties: AwsIotS1oInput
  tags: [AwsIotS1qInput]
}

type AwsIotCreateBillingGroupOutput {
  billingGroupName: String
  billingGroupArn: String
  billingGroupId: String
}

input AwsIotCreateCertificateFromCsrInput {
  certificateSigningRequest: String!
  setAsActive: Boolean
}

type AwsIotCreateCertificateFromCsrOutput {
  certificateArn: String
  certificateId: String
  certificatePem: String
}

input AwsIotCreateDynamicThingGroupInput {
  thingGroupName: String!
  thingGroupProperties: AwsIotS22Input
  indexName: String
  queryString: String!
  queryVersion: String
  tags: [AwsIotS1qInput]
}

type AwsIotCreateDynamicThingGroupOutput {
  thingGroupName: String
  thingGroupArn: String
  thingGroupId: String
  indexName: String
  queryString: String
  queryVersion: String
}

input AwsIotCreateJobInput {
  jobId: String!
  targets: [String]!
  documentSource: String
  document: String
  description: String
  presignedUrlConfig: AwsIotS2hInput
  targetSelection: String
  jobExecutionsRolloutConfig: AwsIotS2lInput
  abortConfig: AwsIotS2sInput
  timeoutConfig: AwsIotS2zInput
  tags: [AwsIotS1qInput]
}

type AwsIotCreateJobOutput {
  jobArn: String
  jobId: String
  description: String
}

input AwsIotCreateKeysAndCertificateInput {
  setAsActive: Boolean
}

type AwsIotCreateKeysAndCertificateOutput {
  certificateArn: String
  certificateId: String
  certificatePem: String
  keyPair: AwsIotCreateKeysAndCertificateOutputKeyPair
}

type AwsIotCreateKeysAndCertificateOutputKeyPair {
  PublicKey: String
  PrivateKey: String
}

input AwsIotCreateOTAUpdateInput {
  otaUpdateId: String!
  description: String
  targets: [String]!
  targetSelection: String
  awsJobExecutionsRolloutConfig: AwsIotS3cInput
  files: [AwsIotS3eInput]!
  roleArn: String!
  additionalParameters: JSON
  tags: [AwsIotS1qInput]
}

type AwsIotCreateOTAUpdateOutput {
  otaUpdateId: String
  awsIotJobId: String
  otaUpdateArn: String
  awsIotJobArn: String
  otaUpdateStatus: String
}

input AwsIotCreatePolicyInput {
  policyName: String!
  policyDocument: String!
}

type AwsIotCreatePolicyOutput {
  policyName: String
  policyArn: String
  policyDocument: String
  policyVersionId: String
}

input AwsIotCreatePolicyVersionInput {
  policyName: String!
  policyDocument: String!
  setAsDefault: Boolean
}

type AwsIotCreatePolicyVersionOutput {
  policyArn: String
  policyDocument: String
  policyVersionId: String
  isDefaultVersion: Boolean
}

input AwsIotCreateRoleAliasInput {
  roleAlias: String!
  roleArn: String!
  credentialDurationSeconds: Int
}

type AwsIotCreateRoleAliasOutput {
  roleAlias: String
  roleAliasArn: String
}

input AwsIotCreateScheduledAuditInput {
  frequency: String!
  dayOfMonth: String
  dayOfWeek: String
  targetCheckNames: [String]!
  tags: [AwsIotS1qInput]
  scheduledAuditName: String!
}

type AwsIotCreateScheduledAuditOutput {
  scheduledAuditArn: String
}

input AwsIotCreateSecurityProfileInput {
  securityProfileName: String!
  securityProfileDescription: String
  behaviors: [AwsIotS57Input]
  alertTargets: JSON
  additionalMetricsToRetain: [String]
  tags: [AwsIotS1qInput]
}

type AwsIotCreateSecurityProfileOutput {
  securityProfileName: String
  securityProfileArn: String
}

input AwsIotCreateStreamInput {
  streamId: String!
  description: String
  files: [AwsIotS5wInput]!
  roleArn: String!
  tags: [AwsIotS1qInput]
}

type AwsIotCreateStreamOutput {
  streamId: String
  streamArn: String
  description: String
  streamVersion: Int
}

input AwsIotCreateThingGroupInput {
  thingGroupName: String!
  parentGroupName: String
  thingGroupProperties: AwsIotS22Input
  tags: [AwsIotS1qInput]
}

type AwsIotCreateThingGroupOutput {
  thingGroupName: String
  thingGroupArn: String
  thingGroupId: String
}

input AwsIotCreateThingInput {
  thingName: String!
  thingTypeName: String
  attributePayload: AwsIotS24Input
  billingGroupName: String
}

type AwsIotCreateThingOutput {
  thingName: String
  thingArn: String
  thingId: String
}

input AwsIotCreateThingTypeInput {
  thingTypeName: String!
  thingTypeProperties: AwsIotS68Input
  tags: [AwsIotS1qInput]
}

type AwsIotCreateThingTypeOutput {
  thingTypeName: String
  thingTypeArn: String
  thingTypeId: String
}

input AwsIotCreateTopicRuleInput {
  ruleName: String!
  topicRulePayload: AwsIotS6gInput!
  tags: String
}

"""AWS IoT Data Plane (2015-05-28)"""
type AwsIotData {
  deleteThingShadow(input: AwsIotDataDeleteThingShadowInput!, config: AwsConfig): AwsIotDataDeleteThingShadowOutput
  getThingShadow(input: AwsIotDataGetThingShadowInput!, config: AwsConfig): AwsIotDataGetThingShadowOutput
  publish(input: AwsIotDataPublishInput!, config: AwsConfig): JSON
  updateThingShadow(input: AwsIotDataUpdateThingShadowInput!, config: AwsConfig): AwsIotDataUpdateThingShadowOutput
}

input AwsIotDataDeleteThingShadowInput {
  thingName: String!
}

type AwsIotDataDeleteThingShadowOutput {
  payload: JSON!
}

input AwsIotDataGetThingShadowInput {
  thingName: String!
}

type AwsIotDataGetThingShadowOutput {
  payload: JSON
}

input AwsIotDataPublishInput {
  topic: String!
  qos: Int
  payload: JSON
}

input AwsIotDataUpdateThingShadowInput {
  thingName: String!
  payload: JSON!
}

type AwsIotDataUpdateThingShadowOutput {
  payload: JSON
}

input AwsIotDeleteAccountAuditConfigurationInput {
  deleteScheduledAudits: Boolean
}

input AwsIotDeleteAuthorizerInput {
  authorizerName: String!
}

input AwsIotDeleteBillingGroupInput {
  billingGroupName: String!
  expectedVersion: JSON
}

input AwsIotDeleteCACertificateInput {
  certificateId: String!
}

input AwsIotDeleteCertificateInput {
  certificateId: String!
  forceDelete: Boolean
}

input AwsIotDeleteDynamicThingGroupInput {
  thingGroupName: String!
  expectedVersion: JSON
}

input AwsIotDeleteJobExecutionInput {
  jobId: String!
  thingName: String!
  executionNumber: JSON!
  force: Boolean
}

input AwsIotDeleteJobInput {
  jobId: String!
  force: Boolean
}

input AwsIotDeleteOTAUpdateInput {
  otaUpdateId: String!
  deleteStream: Boolean
  forceDeleteAWSJob: Boolean
}

input AwsIotDeletePolicyInput {
  policyName: String!
}

input AwsIotDeletePolicyVersionInput {
  policyName: String!
  policyVersionId: String!
}

input AwsIotDeleteRoleAliasInput {
  roleAlias: String!
}

input AwsIotDeleteScheduledAuditInput {
  scheduledAuditName: String!
}

input AwsIotDeleteSecurityProfileInput {
  securityProfileName: String!
  expectedVersion: JSON
}

input AwsIotDeleteStreamInput {
  streamId: String!
}

input AwsIotDeleteThingGroupInput {
  thingGroupName: String!
  expectedVersion: JSON
}

input AwsIotDeleteThingInput {
  thingName: String!
  expectedVersion: JSON
}

input AwsIotDeleteThingTypeInput {
  thingTypeName: String!
}

input AwsIotDeleteTopicRuleInput {
  ruleName: String!
}

input AwsIotDeleteV2LoggingLevelInput {
  targetType: String!
  targetName: String!
}

input AwsIotDeprecateThingTypeInput {
  thingTypeName: String!
  undoDeprecate: Boolean
}

type AwsIotDescribeAccountAuditConfigurationOutput {
  roleArn: String
  auditNotificationTargetConfigurations: JSON
  auditCheckConfigurations: JSON
}

input AwsIotDescribeAuditTaskInput {
  taskId: String!
}

type AwsIotDescribeAuditTaskOutput {
  taskStatus: String
  taskType: String
  taskStartTime: Date
  taskStatistics: AwsIotDescribeAuditTaskOutputTaskStatistics
  scheduledAuditName: String
  auditDetails: JSON
}

type AwsIotDescribeAuditTaskOutputTaskStatistics {
  totalChecks: Int
  inProgressChecks: Int
  waitingForDataCollectionChecks: Int
  compliantChecks: Int
  nonCompliantChecks: Int
  failedChecks: Int
  canceledChecks: Int
}

input AwsIotDescribeAuthorizerInput {
  authorizerName: String!
}

type AwsIotDescribeAuthorizerOutput {
  authorizerDescription: AwsIotSa9
}

input AwsIotDescribeBillingGroupInput {
  billingGroupName: String!
}

type AwsIotDescribeBillingGroupOutput {
  billingGroupName: String
  billingGroupId: String
  billingGroupArn: String
  version: JSON
  billingGroupProperties: AwsIotS1o
  billingGroupMetadata: AwsIotDescribeBillingGroupOutputBillingGroupMetadata
}

type AwsIotDescribeBillingGroupOutputBillingGroupMetadata {
  creationDate: Date
}

input AwsIotDescribeCACertificateInput {
  certificateId: String!
}

type AwsIotDescribeCACertificateOutput {
  certificateDescription: AwsIotDescribeCACertificateOutputCertificateDescription
  registrationConfig: AwsIotSap
}

type AwsIotDescribeCACertificateOutputCertificateDescription {
  certificateArn: String
  certificateId: String
  status: String
  certificatePem: String
  ownedBy: String
  creationDate: Date
  autoRegistrationStatus: String
  lastModifiedDate: Date
  customerVersion: Int
  generationId: String
  validity: AwsIotSao
}

input AwsIotDescribeCertificateInput {
  certificateId: String!
}

type AwsIotDescribeCertificateOutput {
  certificateDescription: AwsIotDescribeCertificateOutputCertificateDescription
}

type AwsIotDescribeCertificateOutputCertificateDescription {
  certificateArn: String
  certificateId: String
  caCertificateId: String
  status: String
  certificatePem: String
  ownedBy: String
  previousOwnedBy: String
  creationDate: Date
  lastModifiedDate: Date
  customerVersion: Int
  transferData: AwsIotDescribeCertificateOutputCertificateDescriptionTransferData
  generationId: String
  validity: AwsIotSao
}

type AwsIotDescribeCertificateOutputCertificateDescriptionTransferData {
  transferMessage: String
  rejectReason: String
  transferDate: Date
  acceptDate: Date
  rejectDate: Date
}

type AwsIotDescribeDefaultAuthorizerOutput {
  authorizerDescription: AwsIotSa9
}

input AwsIotDescribeEndpointInput {
  endpointType: String
}

type AwsIotDescribeEndpointOutput {
  endpointAddress: String
}

type AwsIotDescribeEventConfigurationsOutput {
  eventConfigurations: JSON
  creationDate: Date
  lastModifiedDate: Date
}

input AwsIotDescribeIndexInput {
  indexName: String!
}

type AwsIotDescribeIndexOutput {
  indexName: String
  indexStatus: String
  schema: String
}

input AwsIotDescribeJobExecutionInput {
  jobId: String!
  thingName: String!
  executionNumber: JSON
}

type AwsIotDescribeJobExecutionOutput {
  execution: AwsIotDescribeJobExecutionOutputExecution
}

type AwsIotDescribeJobExecutionOutputExecution {
  jobId: String
  status: String
  forceCanceled: Boolean
  statusDetails: AwsIotDescribeJobExecutionOutputExecutionStatusDetails
  thingArn: String
  queuedAt: Date
  startedAt: Date
  lastUpdatedAt: Date
  executionNumber: JSON
  versionNumber: JSON
  approximateSecondsBeforeTimedOut: JSON
}

type AwsIotDescribeJobExecutionOutputExecutionStatusDetails {
  detailsMap: JSON
}

input AwsIotDescribeJobInput {
  jobId: String!
}

type AwsIotDescribeJobOutput {
  documentSource: String
  job: AwsIotDescribeJobOutputJob
}

type AwsIotDescribeJobOutputJob {
  jobArn: String
  jobId: String
  targetSelection: String
  status: String
  forceCanceled: Boolean
  reasonCode: String
  comment: String
  targets: [String]
  description: String
  presignedUrlConfig: AwsIotS2h
  jobExecutionsRolloutConfig: AwsIotS2l
  abortConfig: AwsIotS2s
  createdAt: Date
  lastUpdatedAt: Date
  completedAt: Date
  jobProcessDetails: AwsIotDescribeJobOutputJobJobProcessDetails
  timeoutConfig: AwsIotS2z
}

type AwsIotDescribeJobOutputJobJobProcessDetails {
  processingTargets: [String]
  numberOfCanceledThings: Int
  numberOfSucceededThings: Int
  numberOfFailedThings: Int
  numberOfRejectedThings: Int
  numberOfQueuedThings: Int
  numberOfInProgressThings: Int
  numberOfRemovedThings: Int
  numberOfTimedOutThings: Int
}

input AwsIotDescribeRoleAliasInput {
  roleAlias: String!
}

type AwsIotDescribeRoleAliasOutput {
  roleAliasDescription: AwsIotDescribeRoleAliasOutputRoleAliasDescription
}

type AwsIotDescribeRoleAliasOutputRoleAliasDescription {
  roleAlias: String
  roleAliasArn: String
  roleArn: String
  owner: String
  credentialDurationSeconds: Int
  creationDate: Date
  lastModifiedDate: Date
}

input AwsIotDescribeScheduledAuditInput {
  scheduledAuditName: String!
}

type AwsIotDescribeScheduledAuditOutput {
  frequency: String
  dayOfMonth: String
  dayOfWeek: String
  targetCheckNames: [String]
  scheduledAuditName: String
  scheduledAuditArn: String
}

input AwsIotDescribeSecurityProfileInput {
  securityProfileName: String!
}

type AwsIotDescribeSecurityProfileOutput {
  securityProfileName: String
  securityProfileArn: String
  securityProfileDescription: String
  behaviors: [AwsIotS57]
  alertTargets: JSON
  additionalMetricsToRetain: [String]
  version: JSON
  creationDate: Date
  lastModifiedDate: Date
}

input AwsIotDescribeStreamInput {
  streamId: String!
}

type AwsIotDescribeStreamOutput {
  streamInfo: AwsIotDescribeStreamOutputStreamInfo
}

type AwsIotDescribeStreamOutputStreamInfo {
  streamId: String
  streamArn: String
  streamVersion: Int
  description: String
  files: [AwsIotS5w]
  createdAt: Date
  lastUpdatedAt: Date
  roleArn: String
}

input AwsIotDescribeThingGroupInput {
  thingGroupName: String!
}

type AwsIotDescribeThingGroupOutput {
  thingGroupName: String
  thingGroupId: String
  thingGroupArn: String
  version: JSON
  thingGroupProperties: AwsIotS22
  thingGroupMetadata: AwsIotDescribeThingGroupOutputThingGroupMetadata
  indexName: String
  queryString: String
  queryVersion: String
  status: String
}

type AwsIotDescribeThingGroupOutputThingGroupMetadata {
  parentGroupName: String
  rootToParentThingGroups: [AwsIotSch]
  creationDate: Date
}

input AwsIotDescribeThingInput {
  thingName: String!
}

type AwsIotDescribeThingOutput {
  defaultClientId: String
  thingName: String
  thingId: String
  thingArn: String
  thingTypeName: String
  attributes: JSON
  version: JSON
  billingGroupName: String
}

input AwsIotDescribeThingRegistrationTaskInput {
  taskId: String!
}

type AwsIotDescribeThingRegistrationTaskOutput {
  taskId: String
  creationDate: Date
  lastModifiedDate: Date
  templateBody: String
  inputFileBucket: String
  inputFileKey: String
  roleArn: String
  status: String
  message: String
  successCount: Int
  failureCount: Int
  percentageProgress: Int
}

input AwsIotDescribeThingTypeInput {
  thingTypeName: String!
}

type AwsIotDescribeThingTypeOutput {
  thingTypeName: String
  thingTypeId: String
  thingTypeArn: String
  thingTypeProperties: AwsIotS68
  thingTypeMetadata: AwsIotSct
}

input AwsIotDetachPolicyInput {
  policyName: String!
  target: String!
}

input AwsIotDetachPrincipalPolicyInput {
  policyName: String!
  principal: String!
}

input AwsIotDetachSecurityProfileInput {
  securityProfileName: String!
  securityProfileTargetArn: String!
}

input AwsIotDetachThingPrincipalInput {
  thingName: String!
  principal: String!
}

input AwsIotDisableTopicRuleInput {
  ruleName: String!
}

input AwsIotEnableTopicRuleInput {
  ruleName: String!
}

"""AWS IoT Events (2018-07-27)"""
type AwsIoTEvents {
  createDetectorModel(input: AwsIoTEventsCreateDetectorModelInput!, config: AwsConfig): AwsIoTEventsCreateDetectorModelOutput
  createInput(input: AwsIoTEventsCreateInputInput!, config: AwsConfig): AwsIoTEventsCreateInputOutput
  deleteDetectorModel(input: AwsIoTEventsDeleteDetectorModelInput!, config: AwsConfig): JSON
  deleteInput(input: AwsIoTEventsDeleteInputInput!, config: AwsConfig): JSON
  describeDetectorModel(input: AwsIoTEventsDescribeDetectorModelInput!, config: AwsConfig): AwsIoTEventsDescribeDetectorModelOutput
  describeInput(input: AwsIoTEventsDescribeInputInput!, config: AwsConfig): AwsIoTEventsDescribeInputOutput
  describeLoggingOptions(input: JSON, config: AwsConfig): AwsIoTEventsDescribeLoggingOptionsOutput
  listDetectorModelVersions(input: AwsIoTEventsListDetectorModelVersionsInput!, config: AwsConfig): AwsIoTEventsListDetectorModelVersionsOutput
  listDetectorModels(input: AwsIoTEventsListDetectorModelsInput, config: AwsConfig): AwsIoTEventsListDetectorModelsOutput
  listInputs(input: AwsIoTEventsListInputsInput, config: AwsConfig): AwsIoTEventsListInputsOutput
  listTagsForResource(input: AwsIoTEventsListTagsForResourceInput!, config: AwsConfig): AwsIoTEventsListTagsForResourceOutput
  putLoggingOptions(input: AwsIoTEventsPutLoggingOptionsInput!, config: AwsConfig): JSON
  tagResource(input: AwsIoTEventsTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsIoTEventsUntagResourceInput!, config: AwsConfig): JSON
  updateDetectorModel(input: AwsIoTEventsUpdateDetectorModelInput!, config: AwsConfig): AwsIoTEventsUpdateDetectorModelOutput
  updateInput(input: AwsIoTEventsUpdateInputInput!, config: AwsConfig): AwsIoTEventsUpdateInputOutput
}

input AwsIoTEventsCreateDetectorModelInput {
  detectorModelName: String!
  detectorModelDefinition: AwsIoTEventsS3Input!
  detectorModelDescription: String
  key: String
  roleArn: String!
  tags: [AwsIoTEventsSwInput]
}

type AwsIoTEventsCreateDetectorModelOutput {
  detectorModelConfiguration: AwsIoTEventsS11
}

input AwsIoTEventsCreateInputInput {
  inputName: String!
  inputDescription: String
  inputDefinition: AwsIoTEventsS19Input!
  tags: [AwsIoTEventsSwInput]
}

type AwsIoTEventsCreateInputOutput {
  inputConfiguration: AwsIoTEventsS1d
}

"""AWS IoT Events Data (2018-10-23)"""
type AwsIoTEventsData {
  batchPutMessage(input: AwsIoTEventsDataBatchPutMessageInput!, config: AwsConfig): AwsIoTEventsDataBatchPutMessageOutput
  batchUpdateDetector(input: AwsIoTEventsDataBatchUpdateDetectorInput!, config: AwsConfig): AwsIoTEventsDataBatchUpdateDetectorOutput
  describeDetector(input: AwsIoTEventsDataDescribeDetectorInput!, config: AwsConfig): AwsIoTEventsDataDescribeDetectorOutput
  listDetectors(input: AwsIoTEventsDataListDetectorsInput!, config: AwsConfig): AwsIoTEventsDataListDetectorsOutput
}

input AwsIoTEventsDataBatchPutMessageInput {
  messages: [AwsIoTEventsDataBatchPutMessageMessagesInput]!
}

input AwsIoTEventsDataBatchPutMessageMessagesInput {
  messageId: String!
  inputName: String!
  payload: JSON!
}

type AwsIoTEventsDataBatchPutMessageOutput {
  BatchPutMessageErrorEntries: [AwsIoTEventsDataBatchPutMessageOutputBatchPutMessageErrorEntries]
}

type AwsIoTEventsDataBatchPutMessageOutputBatchPutMessageErrorEntries {
  messageId: String
  errorCode: String
  errorMessage: String
}

input AwsIoTEventsDataBatchUpdateDetectorDetectorsInput {
  messageId: String!
  detectorModelName: String!
  keyValue: String
  state: AwsIoTEventsDataBatchUpdateDetectorDetectorsStateInput!
}

input AwsIoTEventsDataBatchUpdateDetectorDetectorsStateInput {
  stateName: String!
  variables: [AwsIoTEventsDataBatchUpdateDetectorDetectorsStateVariablesInput]!
  timers: [AwsIoTEventsDataBatchUpdateDetectorDetectorsStateTimersInput]!
}

input AwsIoTEventsDataBatchUpdateDetectorDetectorsStateTimersInput {
  name: String!
  seconds: Int!
}

input AwsIoTEventsDataBatchUpdateDetectorDetectorsStateVariablesInput {
  name: String!
  value: String!
}

input AwsIoTEventsDataBatchUpdateDetectorInput {
  detectors: [AwsIoTEventsDataBatchUpdateDetectorDetectorsInput]!
}

type AwsIoTEventsDataBatchUpdateDetectorOutput {
  batchUpdateDetectorErrorEntries: [AwsIoTEventsDataBatchUpdateDetectorOutputBatchUpdateDetectorErrorEntries]
}

type AwsIoTEventsDataBatchUpdateDetectorOutputBatchUpdateDetectorErrorEntries {
  messageId: String
  errorCode: String
  errorMessage: String
}

input AwsIoTEventsDataDescribeDetectorInput {
  detectorModelName: String!
  keyValue: String
}

type AwsIoTEventsDataDescribeDetectorOutput {
  detector: AwsIoTEventsDataDescribeDetectorOutputDetector
}

type AwsIoTEventsDataDescribeDetectorOutputDetector {
  detectorModelName: String
  keyValue: String
  detectorModelVersion: String
  state: AwsIoTEventsDataDescribeDetectorOutputDetectorState
  creationTime: Date
  lastUpdateTime: Date
}

type AwsIoTEventsDataDescribeDetectorOutputDetectorState {
  stateName: String!
  variables: [AwsIoTEventsDataDescribeDetectorOutputDetectorStateVariables]!
  timers: [AwsIoTEventsDataDescribeDetectorOutputDetectorStateTimers]!
}

type AwsIoTEventsDataDescribeDetectorOutputDetectorStateTimers {
  name: String!
  timestamp: Date!
}

type AwsIoTEventsDataDescribeDetectorOutputDetectorStateVariables {
  name: String!
  value: String!
}

input AwsIoTEventsDataListDetectorsInput {
  detectorModelName: String!
  stateName: String
  nextToken: String
  maxResults: Int
}

type AwsIoTEventsDataListDetectorsOutput {
  detectorSummaries: [AwsIoTEventsDataListDetectorsOutputDetectorSummaries]
  nextToken: String
}

type AwsIoTEventsDataListDetectorsOutputDetectorSummaries {
  detectorModelName: String
  keyValue: String
  detectorModelVersion: String
  state: AwsIoTEventsDataListDetectorsOutputDetectorSummariesState
  creationTime: Date
  lastUpdateTime: Date
}

type AwsIoTEventsDataListDetectorsOutputDetectorSummariesState {
  stateName: String
}

input AwsIoTEventsDeleteDetectorModelInput {
  detectorModelName: String!
}

input AwsIoTEventsDeleteInputInput {
  inputName: String!
}

input AwsIoTEventsDescribeDetectorModelInput {
  detectorModelName: String!
  detectorModelVersion: String
}

type AwsIoTEventsDescribeDetectorModelOutput {
  detectorModel: AwsIoTEventsDescribeDetectorModelOutputDetectorModel
}

type AwsIoTEventsDescribeDetectorModelOutputDetectorModel {
  detectorModelDefinition: AwsIoTEventsS3
  detectorModelConfiguration: AwsIoTEventsS11
}

input AwsIoTEventsDescribeInputInput {
  inputName: String!
}

type AwsIoTEventsDescribeInputOutput {
  input: AwsIoTEventsDescribeInputOutputInput
}

type AwsIoTEventsDescribeInputOutputInput {
  inputConfiguration: AwsIoTEventsS1d
  inputDefinition: AwsIoTEventsS19
}

type AwsIoTEventsDescribeLoggingOptionsOutput {
  loggingOptions: AwsIoTEventsS1s
}

input AwsIoTEventsListDetectorModelsInput {
  nextToken: String
  maxResults: Int
}

type AwsIoTEventsListDetectorModelsOutput {
  detectorModelSummaries: [AwsIoTEventsListDetectorModelsOutputDetectorModelSummaries]
  nextToken: String
}

type AwsIoTEventsListDetectorModelsOutputDetectorModelSummaries {
  detectorModelName: String
  detectorModelDescription: String
  creationTime: Date
}

input AwsIoTEventsListDetectorModelVersionsInput {
  detectorModelName: String!
  nextToken: String
  maxResults: Int
}

type AwsIoTEventsListDetectorModelVersionsOutput {
  detectorModelVersionSummaries: [AwsIoTEventsListDetectorModelVersionsOutputDetectorModelVersionSummaries]
  nextToken: String
}

type AwsIoTEventsListDetectorModelVersionsOutputDetectorModelVersionSummaries {
  detectorModelName: String
  detectorModelVersion: String
  detectorModelArn: String
  roleArn: String
  creationTime: Date
  lastUpdateTime: Date
  status: String
}

input AwsIoTEventsListInputsInput {
  nextToken: String
  maxResults: Int
}

type AwsIoTEventsListInputsOutput {
  inputSummaries: [AwsIoTEventsListInputsOutputInputSummaries]
  nextToken: String
}

type AwsIoTEventsListInputsOutputInputSummaries {
  inputName: String
  inputDescription: String
  inputArn: String
  creationTime: Date
  lastUpdateTime: Date
  status: String
}

input AwsIoTEventsListTagsForResourceInput {
  resourceArn: String!
}

type AwsIoTEventsListTagsForResourceOutput {
  tags: [AwsIoTEventsSw]
}

input AwsIoTEventsPutLoggingOptionsInput {
  loggingOptions: AwsIoTEventsS1sInput!
}

type AwsIoTEventsS11 {
  detectorModelName: String
  detectorModelVersion: String
  detectorModelDescription: String
  detectorModelArn: String
  roleArn: String
  creationTime: Date
  lastUpdateTime: Date
  status: String
  key: String
}

type AwsIoTEventsS19 {
  attributes: [AwsIoTEventsS19Attributes]!
}

type AwsIoTEventsS19Attributes {
  jsonPath: String!
}

input AwsIoTEventsS19AttributesInput {
  jsonPath: String!
}

input AwsIoTEventsS19Input {
  attributes: [AwsIoTEventsS19AttributesInput]!
}

type AwsIoTEventsS1d {
  inputName: String!
  inputDescription: String
  inputArn: String!
  creationTime: Date!
  lastUpdateTime: Date!
  status: String!
}

type AwsIoTEventsS1s {
  roleArn: String!
  level: String!
  enabled: Boolean!
  detectorDebugOptions: [AwsIoTEventsS1sDetectorDebugOptions]
}

type AwsIoTEventsS1sDetectorDebugOptions {
  detectorModelName: String!
  keyValue: String
}

input AwsIoTEventsS1sDetectorDebugOptionsInput {
  detectorModelName: String!
  keyValue: String
}

input AwsIoTEventsS1sInput {
  roleArn: String!
  level: String!
  enabled: Boolean!
  detectorDebugOptions: [AwsIoTEventsS1sDetectorDebugOptionsInput]
}

type AwsIoTEventsS3 {
  states: [AwsIoTEventsS3States]!
  initialStateName: String!
}

input AwsIoTEventsS3Input {
  states: [AwsIoTEventsS3StatesInput]!
  initialStateName: String!
}

type AwsIoTEventsS3States {
  stateName: String!
  onInput: AwsIoTEventsS3StatesOnInput
  onEnter: AwsIoTEventsS3StatesOnEnter
  onExit: AwsIoTEventsS3StatesOnExit
}

input AwsIoTEventsS3StatesInput {
  stateName: String!
  onInput: AwsIoTEventsS3StatesOnInputInput
  onEnter: AwsIoTEventsS3StatesOnEnterInput
  onExit: AwsIoTEventsS3StatesOnExitInput
}

type AwsIoTEventsS3StatesOnEnter {
  events: [AwsIoTEventsS8]
}

input AwsIoTEventsS3StatesOnEnterInput {
  events: [AwsIoTEventsS8Input]
}

type AwsIoTEventsS3StatesOnExit {
  events: [AwsIoTEventsS8]
}

input AwsIoTEventsS3StatesOnExitInput {
  events: [AwsIoTEventsS8Input]
}

type AwsIoTEventsS3StatesOnInput {
  events: [AwsIoTEventsS8]
  transitionEvents: [AwsIoTEventsS3StatesOnInputTransitionEvents]
}

input AwsIoTEventsS3StatesOnInputInput {
  events: [AwsIoTEventsS8Input]
  transitionEvents: [AwsIoTEventsS3StatesOnInputTransitionEventsInput]
}

type AwsIoTEventsS3StatesOnInputTransitionEvents {
  eventName: String!
  condition: String!
  actions: [AwsIoTEventsSc]
  nextState: String!
}

input AwsIoTEventsS3StatesOnInputTransitionEventsInput {
  eventName: String!
  condition: String!
  actions: [AwsIoTEventsScInput]
  nextState: String!
}

type AwsIoTEventsS8 {
  eventName: String!
  condition: String
  actions: [AwsIoTEventsSc]
}

input AwsIoTEventsS8Input {
  eventName: String!
  condition: String
  actions: [AwsIoTEventsScInput]
}

type AwsIoTEventsSc {
  setVariable: AwsIoTEventsScSetVariable
  sns: AwsIoTEventsScSns
  iotTopicPublish: AwsIoTEventsScIotTopicPublish
  setTimer: AwsIoTEventsScSetTimer
  clearTimer: AwsIoTEventsScClearTimer
  resetTimer: AwsIoTEventsScResetTimer
}

type AwsIoTEventsScClearTimer {
  timerName: String!
}

input AwsIoTEventsScClearTimerInput {
  timerName: String!
}

input AwsIoTEventsScInput {
  setVariable: AwsIoTEventsScSetVariableInput
  sns: AwsIoTEventsScSnsInput
  iotTopicPublish: AwsIoTEventsScIotTopicPublishInput
  setTimer: AwsIoTEventsScSetTimerInput
  clearTimer: AwsIoTEventsScClearTimerInput
  resetTimer: AwsIoTEventsScResetTimerInput
}

type AwsIoTEventsScIotTopicPublish {
  mqttTopic: String!
}

input AwsIoTEventsScIotTopicPublishInput {
  mqttTopic: String!
}

type AwsIoTEventsScResetTimer {
  timerName: String!
}

input AwsIoTEventsScResetTimerInput {
  timerName: String!
}

type AwsIoTEventsScSetTimer {
  timerName: String!
  seconds: Int!
}

input AwsIoTEventsScSetTimerInput {
  timerName: String!
  seconds: Int!
}

type AwsIoTEventsScSetVariable {
  variableName: String!
  value: String!
}

input AwsIoTEventsScSetVariableInput {
  variableName: String!
  value: String!
}

type AwsIoTEventsScSns {
  targetArn: String!
}

input AwsIoTEventsScSnsInput {
  targetArn: String!
}

type AwsIoTEventsSw {
  key: String!
  value: String!
}

input AwsIoTEventsSwInput {
  key: String!
  value: String!
}

input AwsIoTEventsTagResourceInput {
  resourceArn: String!
  tags: [AwsIoTEventsSwInput]!
}

input AwsIoTEventsUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsIoTEventsUpdateDetectorModelInput {
  detectorModelName: String!
  detectorModelDefinition: AwsIoTEventsS3Input!
  detectorModelDescription: String
  roleArn: String!
}

type AwsIoTEventsUpdateDetectorModelOutput {
  detectorModelConfiguration: AwsIoTEventsS11
}

input AwsIoTEventsUpdateInputInput {
  inputName: String!
  inputDescription: String
  inputDefinition: AwsIoTEventsS19Input!
}

type AwsIoTEventsUpdateInputOutput {
  inputConfiguration: AwsIoTEventsS1d
}

input AwsIotGetEffectivePoliciesInput {
  principal: String
  cognitoIdentityPoolId: String
  thingName: String
}

type AwsIotGetEffectivePoliciesOutput {
  effectivePolicies: [AwsIotGetEffectivePoliciesOutputEffectivePolicies]
}

type AwsIotGetEffectivePoliciesOutputEffectivePolicies {
  policyName: String
  policyArn: String
  policyDocument: String
}

type AwsIotGetIndexingConfigurationOutput {
  thingIndexingConfiguration: AwsIotSdb
  thingGroupIndexingConfiguration: AwsIotSde
}

input AwsIotGetJobDocumentInput {
  jobId: String!
}

type AwsIotGetJobDocumentOutput {
  document: String
}

type AwsIotGetLoggingOptionsOutput {
  roleArn: String
  logLevel: String
}

input AwsIotGetOTAUpdateInput {
  otaUpdateId: String!
}

type AwsIotGetOTAUpdateOutput {
  otaUpdateInfo: AwsIotGetOTAUpdateOutputOtaUpdateInfo
}

type AwsIotGetOTAUpdateOutputOtaUpdateInfo {
  otaUpdateId: String
  otaUpdateArn: String
  creationDate: Date
  lastModifiedDate: Date
  description: String
  targets: [String]
  awsJobExecutionsRolloutConfig: AwsIotS3c
  targetSelection: String
  otaUpdateFiles: [AwsIotS3e]
  otaUpdateStatus: String
  awsIotJobId: String
  awsIotJobArn: String
  errorInfo: AwsIotGetOTAUpdateOutputOtaUpdateInfoErrorInfo
  additionalParameters: JSON
}

type AwsIotGetOTAUpdateOutputOtaUpdateInfoErrorInfo {
  code: String
  message: String
}

input AwsIotGetPolicyInput {
  policyName: String!
}

type AwsIotGetPolicyOutput {
  policyName: String
  policyArn: String
  policyDocument: String
  defaultVersionId: String
  creationDate: Date
  lastModifiedDate: Date
  generationId: String
}

input AwsIotGetPolicyVersionInput {
  policyName: String!
  policyVersionId: String!
}

type AwsIotGetPolicyVersionOutput {
  policyArn: String
  policyName: String
  policyDocument: String
  policyVersionId: String
  isDefaultVersion: Boolean
  creationDate: Date
  lastModifiedDate: Date
  generationId: String
}

type AwsIotGetRegistrationCodeOutput {
  registrationCode: String
}

input AwsIotGetStatisticsInput {
  indexName: String
  queryString: String!
  aggregationField: String
  queryVersion: String
}

type AwsIotGetStatisticsOutput {
  statistics: AwsIotGetStatisticsOutputStatistics
}

type AwsIotGetStatisticsOutputStatistics {
  count: Int
}

input AwsIotGetTopicRuleInput {
  ruleName: String!
}

type AwsIotGetTopicRuleOutput {
  ruleArn: String
  rule: AwsIotGetTopicRuleOutputRule
}

type AwsIotGetTopicRuleOutputRule {
  ruleName: String
  sql: String
  description: String
  createdAt: Date
  actions: [AwsIotS6k]
  ruleDisabled: Boolean
  awsIotSqlVersion: String
  errorAction: AwsIotS6k
}

type AwsIotGetV2LoggingOptionsOutput {
  roleArn: String
  defaultLogLevel: String
  disableAllLogs: Boolean
}

"""AWS IoT Jobs Data Plane (2017-09-29)"""
type AwsIoTJobsDataPlane {
  describeJobExecution(input: AwsIoTJobsDataPlaneDescribeJobExecutionInput!, config: AwsConfig): AwsIoTJobsDataPlaneDescribeJobExecutionOutput
  getPendingJobExecutions(input: AwsIoTJobsDataPlaneGetPendingJobExecutionsInput!, config: AwsConfig): AwsIoTJobsDataPlaneGetPendingJobExecutionsOutput
  startNextPendingJobExecution(input: AwsIoTJobsDataPlaneStartNextPendingJobExecutionInput!, config: AwsConfig): AwsIoTJobsDataPlaneStartNextPendingJobExecutionOutput
  updateJobExecution(input: AwsIoTJobsDataPlaneUpdateJobExecutionInput!, config: AwsConfig): AwsIoTJobsDataPlaneUpdateJobExecutionOutput
}

input AwsIoTJobsDataPlaneDescribeJobExecutionInput {
  jobId: String!
  thingName: String!
  includeJobDocument: Boolean
  executionNumber: JSON
}

type AwsIoTJobsDataPlaneDescribeJobExecutionOutput {
  execution: AwsIoTJobsDataPlaneS7
}

input AwsIoTJobsDataPlaneGetPendingJobExecutionsInput {
  thingName: String!
}

type AwsIoTJobsDataPlaneGetPendingJobExecutionsOutput {
  inProgressJobs: [AwsIoTJobsDataPlaneSl]
  queuedJobs: [AwsIoTJobsDataPlaneSl]
}

type AwsIoTJobsDataPlaneS7 {
  jobId: String
  thingName: String
  status: String
  statusDetails: JSON
  queuedAt: JSON
  startedAt: JSON
  lastUpdatedAt: JSON
  approximateSecondsBeforeTimedOut: JSON
  versionNumber: JSON
  executionNumber: JSON
  jobDocument: String
}

type AwsIoTJobsDataPlaneSl {
  jobId: String
  queuedAt: JSON
  startedAt: JSON
  lastUpdatedAt: JSON
  versionNumber: JSON
  executionNumber: JSON
}

input AwsIoTJobsDataPlaneStartNextPendingJobExecutionInput {
  thingName: String!
  statusDetails: JSON
  stepTimeoutInMinutes: JSON
}

type AwsIoTJobsDataPlaneStartNextPendingJobExecutionOutput {
  execution: AwsIoTJobsDataPlaneS7
}

input AwsIoTJobsDataPlaneUpdateJobExecutionInput {
  jobId: String!
  thingName: String!
  status: String!
  statusDetails: JSON
  stepTimeoutInMinutes: JSON
  expectedVersion: JSON
  includeJobExecutionState: Boolean
  includeJobDocument: Boolean
  executionNumber: JSON
}

type AwsIoTJobsDataPlaneUpdateJobExecutionOutput {
  executionState: AwsIoTJobsDataPlaneUpdateJobExecutionOutputExecutionState
  jobDocument: String
}

type AwsIoTJobsDataPlaneUpdateJobExecutionOutputExecutionState {
  status: String
  statusDetails: JSON
  versionNumber: JSON
}

input AwsIotListActiveViolationsInput {
  thingName: String
  securityProfileName: String
  nextToken: String
  maxResults: Int
}

type AwsIotListActiveViolationsOutput {
  activeViolations: [AwsIotListActiveViolationsOutputActiveViolations]
  nextToken: String
}

type AwsIotListActiveViolationsOutputActiveViolations {
  violationId: String
  thingName: String
  securityProfileName: String
  behavior: AwsIotS57
  lastViolationValue: AwsIotS5c
  lastViolationTime: Date
  violationStartTime: Date
}

input AwsIotListAttachedPoliciesInput {
  target: String!
  recursive: Boolean
  marker: String
  pageSize: Int
}

type AwsIotListAttachedPoliciesOutput {
  policies: [AwsIotSem]
  nextMarker: String
}

input AwsIotListAuditFindingsInput {
  taskId: String
  checkName: String
  resourceIdentifier: AwsIotSepInput
  maxResults: Int
  nextToken: String
  startTime: Date
  endTime: Date
}

type AwsIotListAuditFindingsOutput {
  findings: [AwsIotListAuditFindingsOutputFindings]
  nextToken: String
}

type AwsIotListAuditFindingsOutputFindings {
  taskId: String
  checkName: String
  taskStartTime: Date
  findingTime: Date
  severity: String
  nonCompliantResource: AwsIotListAuditFindingsOutputFindingsNonCompliantResource
  relatedResources: [AwsIotListAuditFindingsOutputFindingsRelatedResources]
  reasonForNonCompliance: String
  reasonForNonComplianceCode: String
}

type AwsIotListAuditFindingsOutputFindingsNonCompliantResource {
  resourceType: String
  resourceIdentifier: AwsIotSep
  additionalInfo: JSON
}

type AwsIotListAuditFindingsOutputFindingsRelatedResources {
  resourceType: String
  resourceIdentifier: AwsIotSep
  additionalInfo: JSON
}

input AwsIotListAuditTasksInput {
  startTime: Date!
  endTime: Date!
  taskType: String
  taskStatus: String
  nextToken: String
  maxResults: Int
}

type AwsIotListAuditTasksOutput {
  tasks: [AwsIotListAuditTasksOutputTasks]
  nextToken: String
}

type AwsIotListAuditTasksOutputTasks {
  taskId: String
  taskStatus: String
  taskType: String
}

input AwsIotListAuthorizersInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
  status: String
}

type AwsIotListAuthorizersOutput {
  authorizers: [AwsIotListAuthorizersOutputAuthorizers]
  nextMarker: String
}

type AwsIotListAuthorizersOutputAuthorizers {
  authorizerName: String
  authorizerArn: String
}

input AwsIotListBillingGroupsInput {
  nextToken: String
  maxResults: Int
  namePrefixFilter: String
}

type AwsIotListBillingGroupsOutput {
  billingGroups: [AwsIotSch]
  nextToken: String
}

input AwsIotListCACertificatesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListCACertificatesOutput {
  certificates: [AwsIotListCACertificatesOutputCertificates]
  nextMarker: String
}

type AwsIotListCACertificatesOutputCertificates {
  certificateArn: String
  certificateId: String
  status: String
  creationDate: Date
}

input AwsIotListCertificatesByCAInput {
  caCertificateId: String!
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListCertificatesByCAOutput {
  certificates: [AwsIotSfl]
  nextMarker: String
}

input AwsIotListCertificatesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListCertificatesOutput {
  certificates: [AwsIotSfl]
  nextMarker: String
}

input AwsIotListIndicesInput {
  nextToken: String
  maxResults: Int
}

type AwsIotListIndicesOutput {
  indexNames: [String]
  nextToken: String
}

input AwsIotListJobExecutionsForJobInput {
  jobId: String!
  status: String
  maxResults: Int
  nextToken: String
}

type AwsIotListJobExecutionsForJobOutput {
  executionSummaries: [AwsIotListJobExecutionsForJobOutputExecutionSummaries]
  nextToken: String
}

type AwsIotListJobExecutionsForJobOutputExecutionSummaries {
  thingArn: String
  jobExecutionSummary: AwsIotSfy
}

input AwsIotListJobExecutionsForThingInput {
  thingName: String!
  status: String
  maxResults: Int
  nextToken: String
}

type AwsIotListJobExecutionsForThingOutput {
  executionSummaries: [AwsIotListJobExecutionsForThingOutputExecutionSummaries]
  nextToken: String
}

type AwsIotListJobExecutionsForThingOutputExecutionSummaries {
  jobId: String
  jobExecutionSummary: AwsIotSfy
}

input AwsIotListJobsInput {
  status: String
  targetSelection: String
  maxResults: Int
  nextToken: String
  thingGroupName: String
  thingGroupId: String
}

type AwsIotListJobsOutput {
  jobs: [AwsIotListJobsOutputJobs]
  nextToken: String
}

type AwsIotListJobsOutputJobs {
  jobArn: String
  jobId: String
  thingGroupId: String
  targetSelection: String
  status: String
  createdAt: Date
  lastUpdatedAt: Date
  completedAt: Date
}

input AwsIotListOTAUpdatesInput {
  maxResults: Int
  nextToken: String
  otaUpdateStatus: String
}

type AwsIotListOTAUpdatesOutput {
  otaUpdates: [AwsIotListOTAUpdatesOutputOtaUpdates]
  nextToken: String
}

type AwsIotListOTAUpdatesOutputOtaUpdates {
  otaUpdateId: String
  otaUpdateArn: String
  creationDate: Date
}

input AwsIotListOutgoingCertificatesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListOutgoingCertificatesOutput {
  outgoingCertificates: [AwsIotListOutgoingCertificatesOutputOutgoingCertificates]
  nextMarker: String
}

type AwsIotListOutgoingCertificatesOutputOutgoingCertificates {
  certificateArn: String
  certificateId: String
  transferredTo: String
  transferDate: Date
  transferMessage: String
  creationDate: Date
}

input AwsIotListPoliciesInput {
  marker: String
  pageSize: Int
  ascendingOrder: Boolean
}

type AwsIotListPoliciesOutput {
  policies: [AwsIotSem]
  nextMarker: String
}

input AwsIotListPolicyPrincipalsInput {
  policyName: String!
  marker: String
  pageSize: Int
  ascendingOrder: Boolean
}

type AwsIotListPolicyPrincipalsOutput {
  principals: [String]
  nextMarker: String
}

input AwsIotListPolicyVersionsInput {
  policyName: String!
}

type AwsIotListPolicyVersionsOutput {
  policyVersions: [AwsIotListPolicyVersionsOutputPolicyVersions]
}

type AwsIotListPolicyVersionsOutputPolicyVersions {
  versionId: String
  isDefaultVersion: Boolean
  createDate: Date
}

input AwsIotListPrincipalPoliciesInput {
  principal: String!
  marker: String
  pageSize: Int
  ascendingOrder: Boolean
}

type AwsIotListPrincipalPoliciesOutput {
  policies: [AwsIotSem]
  nextMarker: String
}

input AwsIotListPrincipalThingsInput {
  nextToken: String
  maxResults: Int
  principal: String!
}

type AwsIotListPrincipalThingsOutput {
  things: [String]
  nextToken: String
}

input AwsIotListRoleAliasesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListRoleAliasesOutput {
  roleAliases: [String]
  nextMarker: String
}

input AwsIotListScheduledAuditsInput {
  nextToken: String
  maxResults: Int
}

type AwsIotListScheduledAuditsOutput {
  scheduledAudits: [AwsIotListScheduledAuditsOutputScheduledAudits]
  nextToken: String
}

type AwsIotListScheduledAuditsOutputScheduledAudits {
  scheduledAuditName: String
  scheduledAuditArn: String
  frequency: String
  dayOfMonth: String
  dayOfWeek: String
}

input AwsIotListSecurityProfilesForTargetInput {
  nextToken: String
  maxResults: Int
  recursive: Boolean
  securityProfileTargetArn: String!
}

type AwsIotListSecurityProfilesForTargetOutput {
  securityProfileTargetMappings: [AwsIotListSecurityProfilesForTargetOutputSecurityProfileTargetMappings]
  nextToken: String
}

type AwsIotListSecurityProfilesForTargetOutputSecurityProfileTargetMappings {
  securityProfileIdentifier: AwsIotSh4
  target: AwsIotSh9
}

input AwsIotListSecurityProfilesInput {
  nextToken: String
  maxResults: Int
}

type AwsIotListSecurityProfilesOutput {
  securityProfileIdentifiers: [AwsIotSh4]
  nextToken: String
}

input AwsIotListStreamsInput {
  maxResults: Int
  nextToken: String
  ascendingOrder: Boolean
}

type AwsIotListStreamsOutput {
  streams: [AwsIotListStreamsOutputStreams]
  nextToken: String
}

type AwsIotListStreamsOutputStreams {
  streamId: String
  streamArn: String
  streamVersion: Int
  description: String
}

input AwsIotListTagsForResourceInput {
  resourceArn: String!
  nextToken: String
}

type AwsIotListTagsForResourceOutput {
  tags: [AwsIotS1q]
  nextToken: String
}

input AwsIotListTargetsForPolicyInput {
  policyName: String!
  marker: String
  pageSize: Int
}

type AwsIotListTargetsForPolicyOutput {
  targets: [String]
  nextMarker: String
}

input AwsIotListTargetsForSecurityProfileInput {
  securityProfileName: String!
  nextToken: String
  maxResults: Int
}

type AwsIotListTargetsForSecurityProfileOutput {
  securityProfileTargets: [AwsIotSh9]
  nextToken: String
}

input AwsIotListThingGroupsForThingInput {
  thingName: String!
  nextToken: String
  maxResults: Int
}

type AwsIotListThingGroupsForThingOutput {
  thingGroups: [AwsIotSch]
  nextToken: String
}

input AwsIotListThingGroupsInput {
  nextToken: String
  maxResults: Int
  parentGroup: String
  namePrefixFilter: String
  recursive: Boolean
}

type AwsIotListThingGroupsOutput {
  thingGroups: [AwsIotSch]
  nextToken: String
}

input AwsIotListThingPrincipalsInput {
  thingName: String!
}

type AwsIotListThingPrincipalsOutput {
  principals: [String]
}

input AwsIotListThingRegistrationTaskReportsInput {
  taskId: String!
  reportType: String!
  nextToken: String
  maxResults: Int
}

type AwsIotListThingRegistrationTaskReportsOutput {
  resourceLinks: [String]
  reportType: String
  nextToken: String
}

input AwsIotListThingRegistrationTasksInput {
  nextToken: String
  maxResults: Int
  status: String
}

type AwsIotListThingRegistrationTasksOutput {
  taskIds: [String]
  nextToken: String
}

input AwsIotListThingsInBillingGroupInput {
  billingGroupName: String!
  nextToken: String
  maxResults: Int
}

type AwsIotListThingsInBillingGroupOutput {
  things: [String]
  nextToken: String
}

input AwsIotListThingsInput {
  nextToken: String
  maxResults: Int
  attributeName: String
  attributeValue: String
  thingTypeName: String
}

input AwsIotListThingsInThingGroupInput {
  thingGroupName: String!
  recursive: Boolean
  nextToken: String
  maxResults: Int
}

type AwsIotListThingsInThingGroupOutput {
  things: [String]
  nextToken: String
}

type AwsIotListThingsOutput {
  things: [AwsIotListThingsOutputThings]
  nextToken: String
}

type AwsIotListThingsOutputThings {
  thingName: String
  thingTypeName: String
  thingArn: String
  attributes: JSON
  version: JSON
}

input AwsIotListThingTypesInput {
  nextToken: String
  maxResults: Int
  thingTypeName: String
}

type AwsIotListThingTypesOutput {
  thingTypes: [AwsIotListThingTypesOutputThingTypes]
  nextToken: String
}

type AwsIotListThingTypesOutputThingTypes {
  thingTypeName: String
  thingTypeArn: String
  thingTypeProperties: AwsIotS68
  thingTypeMetadata: AwsIotSct
}

input AwsIotListTopicRulesInput {
  topic: String
  maxResults: Int
  nextToken: String
  ruleDisabled: Boolean
}

type AwsIotListTopicRulesOutput {
  rules: [AwsIotListTopicRulesOutputRules]
  nextToken: String
}

type AwsIotListTopicRulesOutputRules {
  ruleArn: String
  ruleName: String
  topicPattern: String
  createdAt: Date
  ruleDisabled: Boolean
}

input AwsIotListV2LoggingLevelsInput {
  targetType: String
  nextToken: String
  maxResults: Int
}

type AwsIotListV2LoggingLevelsOutput {
  logTargetConfigurations: [AwsIotListV2LoggingLevelsOutputLogTargetConfigurations]
  nextToken: String
}

type AwsIotListV2LoggingLevelsOutputLogTargetConfigurations {
  logTarget: AwsIotSip
  logLevel: String
}

input AwsIotListViolationEventsInput {
  startTime: Date!
  endTime: Date!
  thingName: String
  securityProfileName: String
  nextToken: String
  maxResults: Int
}

type AwsIotListViolationEventsOutput {
  violationEvents: [AwsIotListViolationEventsOutputViolationEvents]
  nextToken: String
}

type AwsIotListViolationEventsOutputViolationEvents {
  violationId: String
  thingName: String
  securityProfileName: String
  behavior: AwsIotS57
  metricValue: AwsIotS5c
  violationEventType: String
  violationEventTime: Date
}

input AwsIotRegisterCACertificateInput {
  caCertificate: String!
  verificationCertificate: String!
  setAsActive: Boolean
  allowAutoRegistration: Boolean
  registrationConfig: AwsIotSapInput
}

type AwsIotRegisterCACertificateOutput {
  certificateArn: String
  certificateId: String
}

input AwsIotRegisterCertificateInput {
  certificatePem: String!
  caCertificatePem: String
  setAsActive: Boolean
  status: String
}

type AwsIotRegisterCertificateOutput {
  certificateArn: String
  certificateId: String
}

input AwsIotRegisterThingInput {
  templateBody: String!
  parameters: JSON
}

type AwsIotRegisterThingOutput {
  certificatePem: String
  resourceArns: JSON
}

input AwsIotRejectCertificateTransferInput {
  certificateId: String!
  rejectReason: String
}

input AwsIotRemoveThingFromBillingGroupInput {
  billingGroupName: String
  billingGroupArn: String
  thingName: String
  thingArn: String
}

input AwsIotRemoveThingFromThingGroupInput {
  thingGroupName: String
  thingGroupArn: String
  thingName: String
  thingArn: String
}

input AwsIotReplaceTopicRuleInput {
  ruleName: String!
  topicRulePayload: AwsIotS6gInput!
}

type AwsIotS1o {
  billingGroupDescription: String
}

input AwsIotS1oInput {
  billingGroupDescription: String
}

type AwsIotS1q {
  Key: String
  Value: String
}

input AwsIotS1qInput {
  Key: String
  Value: String
}

type AwsIotS22 {
  thingGroupDescription: String
  attributePayload: AwsIotS24
}

input AwsIotS22Input {
  thingGroupDescription: String
  attributePayload: AwsIotS24Input
}

type AwsIotS24 {
  attributes: JSON
  merge: Boolean
}

input AwsIotS24Input {
  attributes: JSON
  merge: Boolean
}

type AwsIotS2h {
  roleArn: String
  expiresInSec: JSON
}

input AwsIotS2hInput {
  roleArn: String
  expiresInSec: JSON
}

type AwsIotS2l {
  maximumPerMinute: Int
  exponentialRate: AwsIotS2lExponentialRate
}

type AwsIotS2lExponentialRate {
  baseRatePerMinute: Int!
  incrementFactor: JSON!
  rateIncreaseCriteria: AwsIotS2lExponentialRateRateIncreaseCriteria!
}

input AwsIotS2lExponentialRateInput {
  baseRatePerMinute: Int!
  incrementFactor: JSON!
  rateIncreaseCriteria: AwsIotS2lExponentialRateRateIncreaseCriteriaInput!
}

type AwsIotS2lExponentialRateRateIncreaseCriteria {
  numberOfNotifiedThings: Int
  numberOfSucceededThings: Int
}

input AwsIotS2lExponentialRateRateIncreaseCriteriaInput {
  numberOfNotifiedThings: Int
  numberOfSucceededThings: Int
}

input AwsIotS2lInput {
  maximumPerMinute: Int
  exponentialRate: AwsIotS2lExponentialRateInput
}

type AwsIotS2s {
  criteriaList: [AwsIotS2sCriteriaList]!
}

type AwsIotS2sCriteriaList {
  failureType: String!
  action: String!
  thresholdPercentage: JSON!
  minNumberOfExecutedThings: Int!
}

input AwsIotS2sCriteriaListInput {
  failureType: String!
  action: String!
  thresholdPercentage: JSON!
  minNumberOfExecutedThings: Int!
}

input AwsIotS2sInput {
  criteriaList: [AwsIotS2sCriteriaListInput]!
}

type AwsIotS2z {
  inProgressTimeoutInMinutes: JSON
}

input AwsIotS2zInput {
  inProgressTimeoutInMinutes: JSON
}

type AwsIotS3c {
  maximumPerMinute: Int
}

input AwsIotS3cInput {
  maximumPerMinute: Int
}

type AwsIotS3e {
  fileName: String
  fileVersion: String
  fileLocation: AwsIotS3eFileLocation
  codeSigning: AwsIotS3eCodeSigning
  attributes: JSON
}

type AwsIotS3eCodeSigning {
  awsSignerJobId: String
  startSigningJobParameter: AwsIotS3eCodeSigningStartSigningJobParameter
  customCodeSigning: AwsIotS3eCodeSigningCustomCodeSigning
}

type AwsIotS3eCodeSigningCustomCodeSigning {
  signature: AwsIotS3eCodeSigningCustomCodeSigningSignature
  certificateChain: AwsIotS3eCodeSigningCustomCodeSigningCertificateChain
  hashAlgorithm: String
  signatureAlgorithm: String
}

type AwsIotS3eCodeSigningCustomCodeSigningCertificateChain {
  certificateName: String
  inlineDocument: String
}

input AwsIotS3eCodeSigningCustomCodeSigningCertificateChainInput {
  certificateName: String
  inlineDocument: String
}

input AwsIotS3eCodeSigningCustomCodeSigningInput {
  signature: AwsIotS3eCodeSigningCustomCodeSigningSignatureInput
  certificateChain: AwsIotS3eCodeSigningCustomCodeSigningCertificateChainInput
  hashAlgorithm: String
  signatureAlgorithm: String
}

type AwsIotS3eCodeSigningCustomCodeSigningSignature {
  inlineDocument: JSON
}

input AwsIotS3eCodeSigningCustomCodeSigningSignatureInput {
  inlineDocument: JSON
}

input AwsIotS3eCodeSigningInput {
  awsSignerJobId: String
  startSigningJobParameter: AwsIotS3eCodeSigningStartSigningJobParameterInput
  customCodeSigning: AwsIotS3eCodeSigningCustomCodeSigningInput
}

type AwsIotS3eCodeSigningStartSigningJobParameter {
  signingProfileParameter: AwsIotS3eCodeSigningStartSigningJobParameterSigningProfileParameter
  signingProfileName: String
  destination: AwsIotS3eCodeSigningStartSigningJobParameterDestination
}

type AwsIotS3eCodeSigningStartSigningJobParameterDestination {
  s3Destination: AwsIotS3eCodeSigningStartSigningJobParameterDestinationS3Destination
}

input AwsIotS3eCodeSigningStartSigningJobParameterDestinationInput {
  s3Destination: AwsIotS3eCodeSigningStartSigningJobParameterDestinationS3DestinationInput
}

type AwsIotS3eCodeSigningStartSigningJobParameterDestinationS3Destination {
  bucket: String
  prefix: String
}

input AwsIotS3eCodeSigningStartSigningJobParameterDestinationS3DestinationInput {
  bucket: String
  prefix: String
}

input AwsIotS3eCodeSigningStartSigningJobParameterInput {
  signingProfileParameter: AwsIotS3eCodeSigningStartSigningJobParameterSigningProfileParameterInput
  signingProfileName: String
  destination: AwsIotS3eCodeSigningStartSigningJobParameterDestinationInput
}

type AwsIotS3eCodeSigningStartSigningJobParameterSigningProfileParameter {
  certificateArn: String
  platform: String
  certificatePathOnDevice: String
}

input AwsIotS3eCodeSigningStartSigningJobParameterSigningProfileParameterInput {
  certificateArn: String
  platform: String
  certificatePathOnDevice: String
}

type AwsIotS3eFileLocation {
  stream: AwsIotS3eFileLocationStream
  s3Location: AwsIotS3m
}

input AwsIotS3eFileLocationInput {
  stream: AwsIotS3eFileLocationStreamInput
  s3Location: AwsIotS3mInput
}

type AwsIotS3eFileLocationStream {
  streamId: String
  fileId: Int
}

input AwsIotS3eFileLocationStreamInput {
  streamId: String
  fileId: Int
}

input AwsIotS3eInput {
  fileName: String
  fileVersion: String
  fileLocation: AwsIotS3eFileLocationInput
  codeSigning: AwsIotS3eCodeSigningInput
  attributes: JSON
}

type AwsIotS3m {
  bucket: String
  key: String
  version: String
}

input AwsIotS3mInput {
  bucket: String
  key: String
  version: String
}

type AwsIotS57 {
  name: String!
  metric: String
  criteria: AwsIotS57Criteria
}

type AwsIotS57Criteria {
  comparisonOperator: String
  value: AwsIotS5c
  durationSeconds: Int
  consecutiveDatapointsToAlarm: Int
  consecutiveDatapointsToClear: Int
  statisticalThreshold: AwsIotS57CriteriaStatisticalThreshold
}

input AwsIotS57CriteriaInput {
  comparisonOperator: String
  value: AwsIotS5cInput
  durationSeconds: Int
  consecutiveDatapointsToAlarm: Int
  consecutiveDatapointsToClear: Int
  statisticalThreshold: AwsIotS57CriteriaStatisticalThresholdInput
}

type AwsIotS57CriteriaStatisticalThreshold {
  statistic: String
}

input AwsIotS57CriteriaStatisticalThresholdInput {
  statistic: String
}

input AwsIotS57Input {
  name: String!
  metric: String
  criteria: AwsIotS57CriteriaInput
}

type AwsIotS5c {
  count: JSON
  cidrs: [String]
  ports: [Int]
}

input AwsIotS5cInput {
  count: JSON
  cidrs: [String]
  ports: [Int]
}

type AwsIotS5w {
  fileId: Int
  s3Location: AwsIotS3m
}

input AwsIotS5wInput {
  fileId: Int
  s3Location: AwsIotS3mInput
}

type AwsIotS68 {
  thingTypeDescription: String
  searchableAttributes: [String]
}

input AwsIotS68Input {
  thingTypeDescription: String
  searchableAttributes: [String]
}

input AwsIotS6gInput {
  sql: String!
  description: String
  actions: [AwsIotS6kInput]!
  ruleDisabled: Boolean
  awsIotSqlVersion: String
  errorAction: AwsIotS6kInput
}

type AwsIotS6k {
  dynamoDB: AwsIotS6kDynamoDB
  dynamoDBv2: AwsIotS6kDynamoDBv2
  lambda: AwsIotS6kLambda
  sns: AwsIotS6kSns
  sqs: AwsIotS6kSqs
  kinesis: AwsIotS6kKinesis
  republish: AwsIotS6kRepublish
  s3: AwsIotS6kS3
  firehose: AwsIotS6kFirehose
  cloudwatchMetric: AwsIotS6kCloudwatchMetric
  cloudwatchAlarm: AwsIotS6kCloudwatchAlarm
  elasticsearch: AwsIotS6kElasticsearch
  salesforce: AwsIotS6kSalesforce
  iotAnalytics: AwsIotS6kIotAnalytics
  iotEvents: AwsIotS6kIotEvents
  stepFunctions: AwsIotS6kStepFunctions
}

type AwsIotS6kCloudwatchAlarm {
  roleArn: String!
  alarmName: String!
  stateReason: String!
  stateValue: String!
}

input AwsIotS6kCloudwatchAlarmInput {
  roleArn: String!
  alarmName: String!
  stateReason: String!
  stateValue: String!
}

type AwsIotS6kCloudwatchMetric {
  roleArn: String!
  metricNamespace: String!
  metricName: String!
  metricValue: String!
  metricUnit: String!
  metricTimestamp: String
}

input AwsIotS6kCloudwatchMetricInput {
  roleArn: String!
  metricNamespace: String!
  metricName: String!
  metricValue: String!
  metricUnit: String!
  metricTimestamp: String
}

type AwsIotS6kDynamoDB {
  tableName: String!
  roleArn: String!
  operation: String
  hashKeyField: String!
  hashKeyValue: String!
  hashKeyType: String
  rangeKeyField: String
  rangeKeyValue: String
  rangeKeyType: String
  payloadField: String
}

input AwsIotS6kDynamoDBInput {
  tableName: String!
  roleArn: String!
  operation: String
  hashKeyField: String!
  hashKeyValue: String!
  hashKeyType: String
  rangeKeyField: String
  rangeKeyValue: String
  rangeKeyType: String
  payloadField: String
}

type AwsIotS6kDynamoDBv2 {
  roleArn: String!
  putItem: AwsIotS6kDynamoDBv2PutItem!
}

input AwsIotS6kDynamoDBv2Input {
  roleArn: String!
  putItem: AwsIotS6kDynamoDBv2PutItemInput!
}

type AwsIotS6kDynamoDBv2PutItem {
  tableName: String!
}

input AwsIotS6kDynamoDBv2PutItemInput {
  tableName: String!
}

type AwsIotS6kElasticsearch {
  roleArn: String!
  endpoint: String!
  index: String!
  type: String!
  id: String!
}

input AwsIotS6kElasticsearchInput {
  roleArn: String!
  endpoint: String!
  index: String!
  type: String!
  id: String!
}

type AwsIotS6kFirehose {
  roleArn: String!
  deliveryStreamName: String!
  separator: String
}

input AwsIotS6kFirehoseInput {
  roleArn: String!
  deliveryStreamName: String!
  separator: String
}

input AwsIotS6kInput {
  dynamoDB: AwsIotS6kDynamoDBInput
  dynamoDBv2: AwsIotS6kDynamoDBv2Input
  lambda: AwsIotS6kLambdaInput
  sns: AwsIotS6kSnsInput
  sqs: AwsIotS6kSqsInput
  kinesis: AwsIotS6kKinesisInput
  republish: AwsIotS6kRepublishInput
  s3: AwsIotS6kS3Input
  firehose: AwsIotS6kFirehoseInput
  cloudwatchMetric: AwsIotS6kCloudwatchMetricInput
  cloudwatchAlarm: AwsIotS6kCloudwatchAlarmInput
  elasticsearch: AwsIotS6kElasticsearchInput
  salesforce: AwsIotS6kSalesforceInput
  iotAnalytics: AwsIotS6kIotAnalyticsInput
  iotEvents: AwsIotS6kIotEventsInput
  stepFunctions: AwsIotS6kStepFunctionsInput
}

type AwsIotS6kIotAnalytics {
  channelArn: String
  channelName: String
  roleArn: String
}

input AwsIotS6kIotAnalyticsInput {
  channelArn: String
  channelName: String
  roleArn: String
}

type AwsIotS6kIotEvents {
  inputName: String!
  messageId: String
  roleArn: String!
}

input AwsIotS6kIotEventsInput {
  inputName: String!
  messageId: String
  roleArn: String!
}

type AwsIotS6kKinesis {
  roleArn: String!
  streamName: String!
  partitionKey: String
}

input AwsIotS6kKinesisInput {
  roleArn: String!
  streamName: String!
  partitionKey: String
}

type AwsIotS6kLambda {
  functionArn: String!
}

input AwsIotS6kLambdaInput {
  functionArn: String!
}

type AwsIotS6kRepublish {
  roleArn: String!
  topic: String!
}

input AwsIotS6kRepublishInput {
  roleArn: String!
  topic: String!
}

type AwsIotS6kS3 {
  roleArn: String!
  bucketName: String!
  key: String!
  cannedAcl: String
}

input AwsIotS6kS3Input {
  roleArn: String!
  bucketName: String!
  key: String!
  cannedAcl: String
}

type AwsIotS6kSalesforce {
  token: String!
  url: String!
}

input AwsIotS6kSalesforceInput {
  token: String!
  url: String!
}

type AwsIotS6kSns {
  targetArn: String!
  roleArn: String!
  messageFormat: String
}

input AwsIotS6kSnsInput {
  targetArn: String!
  roleArn: String!
  messageFormat: String
}

type AwsIotS6kSqs {
  roleArn: String!
  queueUrl: String!
  useBase64: Boolean
}

input AwsIotS6kSqsInput {
  roleArn: String!
  queueUrl: String!
  useBase64: Boolean
}

type AwsIotS6kStepFunctions {
  executionNamePrefix: String
  stateMachineName: String!
  roleArn: String!
}

input AwsIotS6kStepFunctionsInput {
  executionNamePrefix: String
  stateMachineName: String!
  roleArn: String!
}

type AwsIotSa9 {
  authorizerName: String
  authorizerArn: String
  authorizerFunctionArn: String
  tokenKeyName: String
  tokenSigningPublicKeys: JSON
  status: String
  creationDate: Date
  lastModifiedDate: Date
}

type AwsIotSao {
  notBefore: Date
  notAfter: Date
}

type AwsIotSap {
  templateBody: String
  roleArn: String
}

input AwsIotSapInput {
  templateBody: String
  roleArn: String
}

type AwsIotSch {
  groupName: String
  groupArn: String
}

type AwsIotSct {
  deprecated: Boolean
  deprecationDate: Date
  creationDate: Date
}

type AwsIotSdb {
  thingIndexingMode: String!
  thingConnectivityIndexingMode: String
}

input AwsIotSdbInput {
  thingIndexingMode: String!
  thingConnectivityIndexingMode: String
}

type AwsIotSde {
  thingGroupIndexingMode: String!
}

input AwsIotSdeInput {
  thingGroupIndexingMode: String!
}

input AwsIotSearchIndexInput {
  indexName: String
  queryString: String!
  nextToken: String
  maxResults: Int
  queryVersion: String
}

type AwsIotSearchIndexOutput {
  nextToken: String
  things: [AwsIotSearchIndexOutputThings]
  thingGroups: [AwsIotSearchIndexOutputThingGroups]
}

type AwsIotSearchIndexOutputThingGroups {
  thingGroupName: String
  thingGroupId: String
  thingGroupDescription: String
  attributes: JSON
  parentGroupNames: [String]
}

type AwsIotSearchIndexOutputThings {
  thingName: String
  thingId: String
  thingTypeName: String
  thingGroupNames: [String]
  attributes: JSON
  shadow: String
  connectivity: AwsIotSearchIndexOutputThingsConnectivity
}

type AwsIotSearchIndexOutputThingsConnectivity {
  connected: Boolean
  timestamp: JSON
}

type AwsIotSem {
  policyName: String
  policyArn: String
}

type AwsIotSep {
  deviceCertificateId: String
  caCertificateId: String
  cognitoIdentityPoolId: String
  clientId: String
  policyVersionIdentifier: AwsIotSepPolicyVersionIdentifier
  account: String
}

input AwsIotSepInput {
  deviceCertificateId: String
  caCertificateId: String
  cognitoIdentityPoolId: String
  clientId: String
  policyVersionIdentifier: AwsIotSepPolicyVersionIdentifierInput
  account: String
}

type AwsIotSepPolicyVersionIdentifier {
  policyName: String
  policyVersionId: String
}

input AwsIotSepPolicyVersionIdentifierInput {
  policyName: String
  policyVersionId: String
}

input AwsIotSetDefaultAuthorizerInput {
  authorizerName: String!
}

type AwsIotSetDefaultAuthorizerOutput {
  authorizerName: String
  authorizerArn: String
}

input AwsIotSetDefaultPolicyVersionInput {
  policyName: String!
  policyVersionId: String!
}

input AwsIotSetLoggingOptionsInput {
  loggingOptionsPayload: AwsIotSetLoggingOptionsLoggingOptionsPayloadInput!
}

input AwsIotSetLoggingOptionsLoggingOptionsPayloadInput {
  roleArn: String!
  logLevel: String
}

input AwsIotSetV2LoggingLevelInput {
  logTarget: AwsIotSipInput!
  logLevel: String!
}

input AwsIotSetV2LoggingOptionsInput {
  roleArn: String
  defaultLogLevel: String
  disableAllLogs: Boolean
}

type AwsIotSfl {
  certificateArn: String
  certificateId: String
  status: String
  creationDate: Date
}

type AwsIotSfy {
  status: String
  queuedAt: Date
  startedAt: Date
  lastUpdatedAt: Date
  executionNumber: JSON
}

type AwsIotSh4 {
  name: String!
  arn: String!
}

type AwsIotSh9 {
  arn: String!
}

type AwsIotSip {
  targetType: String!
  targetName: String
}

input AwsIotSipInput {
  targetType: String!
  targetName: String
}

type AwsIotSk4 {
  actionType: String
  resources: [String]
}

input AwsIotSk4Input {
  actionType: String
  resources: [String]
}

input AwsIotStartOnDemandAuditTaskInput {
  targetCheckNames: [String]!
}

type AwsIotStartOnDemandAuditTaskOutput {
  taskId: String
}

input AwsIotStartThingRegistrationTaskInput {
  templateBody: String!
  inputFileBucket: String!
  inputFileKey: String!
  roleArn: String!
}

type AwsIotStartThingRegistrationTaskOutput {
  taskId: String
}

input AwsIotStopThingRegistrationTaskInput {
  taskId: String!
}

input AwsIotTagResourceInput {
  resourceArn: String!
  tags: [AwsIotS1qInput]!
}

input AwsIotTestAuthorizationInput {
  principal: String
  cognitoIdentityPoolId: String
  authInfos: [AwsIotSk4Input]!
  clientId: String
  policyNamesToAdd: [String]
  policyNamesToSkip: [String]
}

type AwsIotTestAuthorizationOutput {
  authResults: [AwsIotTestAuthorizationOutputAuthResults]
}

type AwsIotTestAuthorizationOutputAuthResults {
  authInfo: AwsIotSk4
  allowed: AwsIotTestAuthorizationOutputAuthResultsAllowed
  denied: AwsIotTestAuthorizationOutputAuthResultsDenied
  authDecision: String
  missingContextValues: [String]
}

type AwsIotTestAuthorizationOutputAuthResultsAllowed {
  policies: [AwsIotSem]
}

type AwsIotTestAuthorizationOutputAuthResultsDenied {
  implicitDeny: AwsIotTestAuthorizationOutputAuthResultsDeniedImplicitDeny
  explicitDeny: AwsIotTestAuthorizationOutputAuthResultsDeniedExplicitDeny
}

type AwsIotTestAuthorizationOutputAuthResultsDeniedExplicitDeny {
  policies: [AwsIotSem]
}

type AwsIotTestAuthorizationOutputAuthResultsDeniedImplicitDeny {
  policies: [AwsIotSem]
}

input AwsIotTestInvokeAuthorizerInput {
  authorizerName: String!
  token: String!
  tokenSignature: String!
}

type AwsIotTestInvokeAuthorizerOutput {
  isAuthenticated: Boolean
  principalId: String
  policyDocuments: [String]
  refreshAfterInSeconds: Int
  disconnectAfterInSeconds: Int
}

"""AWS IoT Things Graph (2018-09-06)"""
type AwsIoTThingsGraph {
  associateEntityToThing(input: AwsIoTThingsGraphAssociateEntityToThingInput!, config: AwsConfig): JSON
  createFlowTemplate(input: AwsIoTThingsGraphCreateFlowTemplateInput!, config: AwsConfig): AwsIoTThingsGraphCreateFlowTemplateOutput
  createSystemInstance(input: AwsIoTThingsGraphCreateSystemInstanceInput!, config: AwsConfig): AwsIoTThingsGraphCreateSystemInstanceOutput
  createSystemTemplate(input: AwsIoTThingsGraphCreateSystemTemplateInput!, config: AwsConfig): AwsIoTThingsGraphCreateSystemTemplateOutput
  deleteFlowTemplate(input: AwsIoTThingsGraphDeleteFlowTemplateInput!, config: AwsConfig): JSON
  deleteNamespace(input: JSON, config: AwsConfig): AwsIoTThingsGraphDeleteNamespaceOutput
  deleteSystemInstance(input: AwsIoTThingsGraphDeleteSystemInstanceInput, config: AwsConfig): JSON
  deleteSystemTemplate(input: AwsIoTThingsGraphDeleteSystemTemplateInput!, config: AwsConfig): JSON
  deploySystemInstance(input: AwsIoTThingsGraphDeploySystemInstanceInput, config: AwsConfig): AwsIoTThingsGraphDeploySystemInstanceOutput
  deprecateFlowTemplate(input: AwsIoTThingsGraphDeprecateFlowTemplateInput!, config: AwsConfig): JSON
  deprecateSystemTemplate(input: AwsIoTThingsGraphDeprecateSystemTemplateInput!, config: AwsConfig): JSON
  describeNamespace(input: AwsIoTThingsGraphDescribeNamespaceInput, config: AwsConfig): AwsIoTThingsGraphDescribeNamespaceOutput
  dissociateEntityFromThing(input: AwsIoTThingsGraphDissociateEntityFromThingInput!, config: AwsConfig): JSON
  getEntities(input: AwsIoTThingsGraphGetEntitiesInput!, config: AwsConfig): AwsIoTThingsGraphGetEntitiesOutput
  getFlowTemplate(input: AwsIoTThingsGraphGetFlowTemplateInput!, config: AwsConfig): AwsIoTThingsGraphGetFlowTemplateOutput
  getFlowTemplateRevisions(input: AwsIoTThingsGraphGetFlowTemplateRevisionsInput!, config: AwsConfig): AwsIoTThingsGraphGetFlowTemplateRevisionsOutput
  getNamespaceDeletionStatus(input: JSON, config: AwsConfig): AwsIoTThingsGraphGetNamespaceDeletionStatusOutput
  getSystemInstance(input: AwsIoTThingsGraphGetSystemInstanceInput!, config: AwsConfig): AwsIoTThingsGraphGetSystemInstanceOutput
  getSystemTemplate(input: AwsIoTThingsGraphGetSystemTemplateInput!, config: AwsConfig): AwsIoTThingsGraphGetSystemTemplateOutput
  getSystemTemplateRevisions(input: AwsIoTThingsGraphGetSystemTemplateRevisionsInput!, config: AwsConfig): AwsIoTThingsGraphGetSystemTemplateRevisionsOutput
  getUploadStatus(input: AwsIoTThingsGraphGetUploadStatusInput!, config: AwsConfig): AwsIoTThingsGraphGetUploadStatusOutput
  listFlowExecutionMessages(input: AwsIoTThingsGraphListFlowExecutionMessagesInput!, config: AwsConfig): AwsIoTThingsGraphListFlowExecutionMessagesOutput
  listTagsForResource(input: AwsIoTThingsGraphListTagsForResourceInput!, config: AwsConfig): AwsIoTThingsGraphListTagsForResourceOutput
  searchEntities(input: AwsIoTThingsGraphSearchEntitiesInput!, config: AwsConfig): AwsIoTThingsGraphSearchEntitiesOutput
  searchFlowExecutions(input: AwsIoTThingsGraphSearchFlowExecutionsInput!, config: AwsConfig): AwsIoTThingsGraphSearchFlowExecutionsOutput
  searchFlowTemplates(input: AwsIoTThingsGraphSearchFlowTemplatesInput, config: AwsConfig): AwsIoTThingsGraphSearchFlowTemplatesOutput
  searchSystemInstances(input: AwsIoTThingsGraphSearchSystemInstancesInput, config: AwsConfig): AwsIoTThingsGraphSearchSystemInstancesOutput
  searchSystemTemplates(input: AwsIoTThingsGraphSearchSystemTemplatesInput, config: AwsConfig): AwsIoTThingsGraphSearchSystemTemplatesOutput
  searchThings(input: AwsIoTThingsGraphSearchThingsInput!, config: AwsConfig): AwsIoTThingsGraphSearchThingsOutput
  tagResource(input: AwsIoTThingsGraphTagResourceInput!, config: AwsConfig): JSON
  undeploySystemInstance(input: AwsIoTThingsGraphUndeploySystemInstanceInput, config: AwsConfig): AwsIoTThingsGraphUndeploySystemInstanceOutput
  untagResource(input: AwsIoTThingsGraphUntagResourceInput!, config: AwsConfig): JSON
  updateFlowTemplate(input: AwsIoTThingsGraphUpdateFlowTemplateInput!, config: AwsConfig): AwsIoTThingsGraphUpdateFlowTemplateOutput
  updateSystemTemplate(input: AwsIoTThingsGraphUpdateSystemTemplateInput!, config: AwsConfig): AwsIoTThingsGraphUpdateSystemTemplateOutput
  uploadEntityDefinitions(input: AwsIoTThingsGraphUploadEntityDefinitionsInput, config: AwsConfig): AwsIoTThingsGraphUploadEntityDefinitionsOutput
}

input AwsIoTThingsGraphAssociateEntityToThingInput {
  thingName: String!
  entityId: String!
  namespaceVersion: JSON
}

input AwsIoTThingsGraphCreateFlowTemplateInput {
  definition: AwsIoTThingsGraphS7Input!
  compatibleNamespaceVersion: JSON
}

type AwsIoTThingsGraphCreateFlowTemplateOutput {
  summary: AwsIoTThingsGraphSb
}

input AwsIoTThingsGraphCreateSystemInstanceInput {
  tags: [AwsIoTThingsGraphSfInput]
  definition: AwsIoTThingsGraphS7Input!
  target: String!
  greengrassGroupName: String
  s3BucketName: String
  metricsConfiguration: AwsIoTThingsGraphSmInput
  flowActionsRoleArn: String
}

type AwsIoTThingsGraphCreateSystemInstanceOutput {
  summary: AwsIoTThingsGraphSq
}

input AwsIoTThingsGraphCreateSystemTemplateInput {
  definition: AwsIoTThingsGraphS7Input!
  compatibleNamespaceVersion: JSON
}

type AwsIoTThingsGraphCreateSystemTemplateOutput {
  summary: AwsIoTThingsGraphSw
}

input AwsIoTThingsGraphDeleteFlowTemplateInput {
  id: String!
}

type AwsIoTThingsGraphDeleteNamespaceOutput {
  namespaceArn: String
  namespaceName: String
}

input AwsIoTThingsGraphDeleteSystemInstanceInput {
  id: String
}

input AwsIoTThingsGraphDeleteSystemTemplateInput {
  id: String!
}

input AwsIoTThingsGraphDeploySystemInstanceInput {
  id: String
}

type AwsIoTThingsGraphDeploySystemInstanceOutput {
  summary: AwsIoTThingsGraphSq!
  greengrassDeploymentId: String
}

input AwsIoTThingsGraphDeprecateFlowTemplateInput {
  id: String!
}

input AwsIoTThingsGraphDeprecateSystemTemplateInput {
  id: String!
}

input AwsIoTThingsGraphDescribeNamespaceInput {
  namespaceName: String
}

type AwsIoTThingsGraphDescribeNamespaceOutput {
  namespaceArn: String
  namespaceName: String
  trackingNamespaceName: String
  trackingNamespaceVersion: JSON
  namespaceVersion: JSON
}

input AwsIoTThingsGraphDissociateEntityFromThingInput {
  thingName: String!
  entityType: String!
}

input AwsIoTThingsGraphGetEntitiesInput {
  ids: [String]!
  namespaceVersion: JSON
}

type AwsIoTThingsGraphGetEntitiesOutput {
  descriptions: [AwsIoTThingsGraphS1l]
}

input AwsIoTThingsGraphGetFlowTemplateInput {
  id: String!
  revisionNumber: JSON
}

type AwsIoTThingsGraphGetFlowTemplateOutput {
  description: AwsIoTThingsGraphGetFlowTemplateOutputDescription
}

type AwsIoTThingsGraphGetFlowTemplateOutputDescription {
  summary: AwsIoTThingsGraphSb
  definition: AwsIoTThingsGraphS7
  validatedNamespaceVersion: JSON
}

input AwsIoTThingsGraphGetFlowTemplateRevisionsInput {
  id: String!
  nextToken: String
  maxResults: Int
}

type AwsIoTThingsGraphGetFlowTemplateRevisionsOutput {
  summaries: [AwsIoTThingsGraphSb]
  nextToken: String
}

type AwsIoTThingsGraphGetNamespaceDeletionStatusOutput {
  namespaceArn: String
  namespaceName: String
  status: String
  errorCode: String
  errorMessage: String
}

input AwsIoTThingsGraphGetSystemInstanceInput {
  id: String!
}

type AwsIoTThingsGraphGetSystemInstanceOutput {
  description: AwsIoTThingsGraphGetSystemInstanceOutputDescription
}

type AwsIoTThingsGraphGetSystemInstanceOutputDescription {
  summary: AwsIoTThingsGraphSq
  definition: AwsIoTThingsGraphS7
  s3BucketName: String
  metricsConfiguration: AwsIoTThingsGraphSm
  validatedNamespaceVersion: JSON
  validatedDependencyRevisions: [AwsIoTThingsGraphGetSystemInstanceOutputDescriptionValidatedDependencyRevisions]
  flowActionsRoleArn: String
}

type AwsIoTThingsGraphGetSystemInstanceOutputDescriptionValidatedDependencyRevisions {
  id: String
  revisionNumber: JSON
}

input AwsIoTThingsGraphGetSystemTemplateInput {
  id: String!
  revisionNumber: JSON
}

type AwsIoTThingsGraphGetSystemTemplateOutput {
  description: AwsIoTThingsGraphGetSystemTemplateOutputDescription
}

type AwsIoTThingsGraphGetSystemTemplateOutputDescription {
  summary: AwsIoTThingsGraphSw
  definition: AwsIoTThingsGraphS7
  validatedNamespaceVersion: JSON
}

input AwsIoTThingsGraphGetSystemTemplateRevisionsInput {
  id: String!
  nextToken: String
  maxResults: Int
}

type AwsIoTThingsGraphGetSystemTemplateRevisionsOutput {
  summaries: [AwsIoTThingsGraphSw]
  nextToken: String
}

input AwsIoTThingsGraphGetUploadStatusInput {
  uploadId: String!
}

type AwsIoTThingsGraphGetUploadStatusOutput {
  uploadId: String!
  uploadStatus: String!
  namespaceArn: String
  namespaceName: String
  namespaceVersion: JSON
  failureReason: [String]
  createdDate: Date!
}

input AwsIoTThingsGraphListFlowExecutionMessagesInput {
  flowExecutionId: String!
  nextToken: String
  maxResults: Int
}

type AwsIoTThingsGraphListFlowExecutionMessagesOutput {
  messages: [AwsIoTThingsGraphListFlowExecutionMessagesOutputMessages]
  nextToken: String
}

type AwsIoTThingsGraphListFlowExecutionMessagesOutputMessages {
  messageId: String
  eventType: String
  timestamp: Date
  payload: String
}

input AwsIoTThingsGraphListTagsForResourceInput {
  maxResults: Int
  resourceArn: String!
  nextToken: String
}

type AwsIoTThingsGraphListTagsForResourceOutput {
  tags: [AwsIoTThingsGraphSf]
  nextToken: String
}

type AwsIoTThingsGraphS1l {
  id: String
  arn: String
  type: String
  createdAt: Date
  definition: AwsIoTThingsGraphS7
}

type AwsIoTThingsGraphS7 {
  language: String!
  text: String!
}

input AwsIoTThingsGraphS7Input {
  language: String!
  text: String!
}

type AwsIoTThingsGraphSb {
  id: String
  arn: String
  revisionNumber: JSON
  createdAt: Date
}

input AwsIoTThingsGraphSearchEntitiesFiltersInput {
  name: String
  value: [String]
}

input AwsIoTThingsGraphSearchEntitiesInput {
  entityTypes: [String]!
  filters: [AwsIoTThingsGraphSearchEntitiesFiltersInput]
  nextToken: String
  maxResults: Int
  namespaceVersion: JSON
}

type AwsIoTThingsGraphSearchEntitiesOutput {
  descriptions: [AwsIoTThingsGraphS1l]
  nextToken: String
}

input AwsIoTThingsGraphSearchFlowExecutionsInput {
  systemInstanceId: String!
  flowExecutionId: String
  startTime: Date
  endTime: Date
  nextToken: String
  maxResults: Int
}

type AwsIoTThingsGraphSearchFlowExecutionsOutput {
  summaries: [AwsIoTThingsGraphSearchFlowExecutionsOutputSummaries]
  nextToken: String
}

type AwsIoTThingsGraphSearchFlowExecutionsOutputSummaries {
  flowExecutionId: String
  status: String
  systemInstanceId: String
  flowTemplateId: String
  createdAt: Date
  updatedAt: Date
}

input AwsIoTThingsGraphSearchFlowTemplatesFiltersInput {
  name: String!
  value: [String]!
}

input AwsIoTThingsGraphSearchFlowTemplatesInput {
  filters: [AwsIoTThingsGraphSearchFlowTemplatesFiltersInput]
  nextToken: String
  maxResults: Int
}

type AwsIoTThingsGraphSearchFlowTemplatesOutput {
  summaries: [AwsIoTThingsGraphSb]
  nextToken: String
}

input AwsIoTThingsGraphSearchSystemInstancesFiltersInput {
  name: String
  value: [String]
}

input AwsIoTThingsGraphSearchSystemInstancesInput {
  filters: [AwsIoTThingsGraphSearchSystemInstancesFiltersInput]
  nextToken: String
  maxResults: Int
}

type AwsIoTThingsGraphSearchSystemInstancesOutput {
  summaries: [AwsIoTThingsGraphSq]
  nextToken: String
}

input AwsIoTThingsGraphSearchSystemTemplatesFiltersInput {
  name: String!
  value: [String]!
}

input AwsIoTThingsGraphSearchSystemTemplatesInput {
  filters: [AwsIoTThingsGraphSearchSystemTemplatesFiltersInput]
  nextToken: String
  maxResults: Int
}

type AwsIoTThingsGraphSearchSystemTemplatesOutput {
  summaries: [AwsIoTThingsGraphSw]
  nextToken: String
}

input AwsIoTThingsGraphSearchThingsInput {
  entityId: String!
  nextToken: String
  maxResults: Int
  namespaceVersion: JSON
}

type AwsIoTThingsGraphSearchThingsOutput {
  things: [AwsIoTThingsGraphSearchThingsOutputThings]
  nextToken: String
}

type AwsIoTThingsGraphSearchThingsOutputThings {
  thingArn: String
  thingName: String
}

type AwsIoTThingsGraphSf {
  key: String!
  value: String!
}

input AwsIoTThingsGraphSfInput {
  key: String!
  value: String!
}

type AwsIoTThingsGraphSm {
  cloudMetricEnabled: Boolean
  metricRuleRoleArn: String
}

input AwsIoTThingsGraphSmInput {
  cloudMetricEnabled: Boolean
  metricRuleRoleArn: String
}

type AwsIoTThingsGraphSq {
  id: String
  arn: String
  status: String
  target: String
  greengrassGroupName: String
  createdAt: Date
  updatedAt: Date
  greengrassGroupId: String
  greengrassGroupVersionId: String
}

type AwsIoTThingsGraphSw {
  id: String
  arn: String
  revisionNumber: JSON
  createdAt: Date
}

input AwsIoTThingsGraphTagResourceInput {
  resourceArn: String!
  tags: [AwsIoTThingsGraphSfInput]!
}

input AwsIoTThingsGraphUndeploySystemInstanceInput {
  id: String
}

type AwsIoTThingsGraphUndeploySystemInstanceOutput {
  summary: AwsIoTThingsGraphSq
}

input AwsIoTThingsGraphUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsIoTThingsGraphUpdateFlowTemplateInput {
  id: String!
  definition: AwsIoTThingsGraphS7Input!
  compatibleNamespaceVersion: JSON
}

type AwsIoTThingsGraphUpdateFlowTemplateOutput {
  summary: AwsIoTThingsGraphSb
}

input AwsIoTThingsGraphUpdateSystemTemplateInput {
  id: String!
  definition: AwsIoTThingsGraphS7Input!
  compatibleNamespaceVersion: JSON
}

type AwsIoTThingsGraphUpdateSystemTemplateOutput {
  summary: AwsIoTThingsGraphSw
}

input AwsIoTThingsGraphUploadEntityDefinitionsInput {
  document: AwsIoTThingsGraphS7Input
  syncWithPublicNamespace: Boolean
  deprecateExistingEntities: Boolean
}

type AwsIoTThingsGraphUploadEntityDefinitionsOutput {
  uploadId: String!
}

input AwsIotTransferCertificateInput {
  certificateId: String!
  targetAwsAccount: String!
  transferMessage: String
}

type AwsIotTransferCertificateOutput {
  transferredCertificateArn: String
}

input AwsIotUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsIotUpdateAccountAuditConfigurationInput {
  roleArn: String
  auditNotificationTargetConfigurations: JSON
  auditCheckConfigurations: JSON
}

input AwsIotUpdateAuthorizerInput {
  authorizerName: String!
  authorizerFunctionArn: String
  tokenKeyName: String
  tokenSigningPublicKeys: JSON
  status: String
}

type AwsIotUpdateAuthorizerOutput {
  authorizerName: String
  authorizerArn: String
}

input AwsIotUpdateBillingGroupInput {
  billingGroupName: String!
  billingGroupProperties: AwsIotS1oInput!
  expectedVersion: JSON
}

type AwsIotUpdateBillingGroupOutput {
  version: JSON
}

input AwsIotUpdateCACertificateInput {
  certificateId: String!
  newStatus: String
  newAutoRegistrationStatus: String
  registrationConfig: AwsIotSapInput
  removeAutoRegistration: Boolean
}

input AwsIotUpdateCertificateInput {
  certificateId: String!
  newStatus: String!
}

input AwsIotUpdateDynamicThingGroupInput {
  thingGroupName: String!
  thingGroupProperties: AwsIotS22Input!
  expectedVersion: JSON
  indexName: String
  queryString: String
  queryVersion: String
}

type AwsIotUpdateDynamicThingGroupOutput {
  version: JSON
}

input AwsIotUpdateEventConfigurationsInput {
  eventConfigurations: JSON
}

input AwsIotUpdateIndexingConfigurationInput {
  thingIndexingConfiguration: AwsIotSdbInput
  thingGroupIndexingConfiguration: AwsIotSdeInput
}

input AwsIotUpdateJobInput {
  jobId: String!
  description: String
  presignedUrlConfig: AwsIotS2hInput
  jobExecutionsRolloutConfig: AwsIotS2lInput
  abortConfig: AwsIotS2sInput
  timeoutConfig: AwsIotS2zInput
}

input AwsIotUpdateRoleAliasInput {
  roleAlias: String!
  roleArn: String
  credentialDurationSeconds: Int
}

type AwsIotUpdateRoleAliasOutput {
  roleAlias: String
  roleAliasArn: String
}

input AwsIotUpdateScheduledAuditInput {
  frequency: String
  dayOfMonth: String
  dayOfWeek: String
  targetCheckNames: [String]
  scheduledAuditName: String!
}

type AwsIotUpdateScheduledAuditOutput {
  scheduledAuditArn: String
}

input AwsIotUpdateSecurityProfileInput {
  securityProfileName: String!
  securityProfileDescription: String
  behaviors: [AwsIotS57Input]
  alertTargets: JSON
  additionalMetricsToRetain: [String]
  deleteBehaviors: Boolean
  deleteAlertTargets: Boolean
  deleteAdditionalMetricsToRetain: Boolean
  expectedVersion: JSON
}

type AwsIotUpdateSecurityProfileOutput {
  securityProfileName: String
  securityProfileArn: String
  securityProfileDescription: String
  behaviors: [AwsIotS57]
  alertTargets: JSON
  additionalMetricsToRetain: [String]
  version: JSON
  creationDate: Date
  lastModifiedDate: Date
}

input AwsIotUpdateStreamInput {
  streamId: String!
  description: String
  files: [AwsIotS5wInput]
  roleArn: String
}

type AwsIotUpdateStreamOutput {
  streamId: String
  streamArn: String
  description: String
  streamVersion: Int
}

input AwsIotUpdateThingGroupInput {
  thingGroupName: String!
  thingGroupProperties: AwsIotS22Input!
  expectedVersion: JSON
}

type AwsIotUpdateThingGroupOutput {
  version: JSON
}

input AwsIotUpdateThingGroupsForThingInput {
  thingName: String
  thingGroupsToAdd: [String]
  thingGroupsToRemove: [String]
  overrideDynamicGroups: Boolean
}

input AwsIotUpdateThingInput {
  thingName: String!
  thingTypeName: String
  attributePayload: AwsIotS24Input
  expectedVersion: JSON
  removeThingType: Boolean
}

input AwsIotValidateSecurityProfileBehaviorsInput {
  behaviors: [AwsIotS57Input]!
}

type AwsIotValidateSecurityProfileBehaviorsOutput {
  valid: Boolean
  validationErrors: [AwsIotValidateSecurityProfileBehaviorsOutputValidationErrors]
}

type AwsIotValidateSecurityProfileBehaviorsOutputValidationErrors {
  errorMessage: String
}

"""Managed Streaming for Kafka (2018-11-14)"""
type AwsKafka {
  createCluster(input: AwsKafkaCreateClusterInput!, config: AwsConfig): AwsKafkaCreateClusterOutput
  createConfiguration(input: AwsKafkaCreateConfigurationInput!, config: AwsConfig): AwsKafkaCreateConfigurationOutput
  deleteCluster(input: AwsKafkaDeleteClusterInput!, config: AwsConfig): AwsKafkaDeleteClusterOutput
  describeCluster(input: AwsKafkaDescribeClusterInput!, config: AwsConfig): AwsKafkaDescribeClusterOutput
  describeClusterOperation(input: AwsKafkaDescribeClusterOperationInput!, config: AwsConfig): AwsKafkaDescribeClusterOperationOutput
  describeConfiguration(input: AwsKafkaDescribeConfigurationInput!, config: AwsConfig): AwsKafkaDescribeConfigurationOutput
  describeConfigurationRevision(input: AwsKafkaDescribeConfigurationRevisionInput!, config: AwsConfig): AwsKafkaDescribeConfigurationRevisionOutput
  getBootstrapBrokers(input: AwsKafkaGetBootstrapBrokersInput!, config: AwsConfig): AwsKafkaGetBootstrapBrokersOutput
  listClusterOperations(input: AwsKafkaListClusterOperationsInput!, config: AwsConfig): AwsKafkaListClusterOperationsOutput
  listClusters(input: AwsKafkaListClustersInput, config: AwsConfig): AwsKafkaListClustersOutput
  listConfigurationRevisions(input: AwsKafkaListConfigurationRevisionsInput!, config: AwsConfig): AwsKafkaListConfigurationRevisionsOutput
  listConfigurations(input: AwsKafkaListConfigurationsInput, config: AwsConfig): AwsKafkaListConfigurationsOutput
  listNodes(input: AwsKafkaListNodesInput!, config: AwsConfig): AwsKafkaListNodesOutput
  listTagsForResource(input: AwsKafkaListTagsForResourceInput!, config: AwsConfig): AwsKafkaListTagsForResourceOutput
  tagResource(input: AwsKafkaTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsKafkaUntagResourceInput!, config: AwsConfig): JSON
  updateBrokerStorage(input: AwsKafkaUpdateBrokerStorageInput!, config: AwsConfig): AwsKafkaUpdateBrokerStorageOutput
  updateClusterConfiguration(input: AwsKafkaUpdateClusterConfigurationInput!, config: AwsConfig): AwsKafkaUpdateClusterConfigurationOutput
}

input AwsKafkaCreateClusterInput {
  BrokerNodeGroupInfo: AwsKafkaS2Input!
  ClientAuthentication: AwsKafkaSaInput
  ClusterName: String!
  ConfigurationInfo: AwsKafkaSdInput
  EncryptionInfo: AwsKafkaSfInput
  EnhancedMonitoring: String
  KafkaVersion: String!
  NumberOfBrokerNodes: Int!
  Tags: JSON
}

type AwsKafkaCreateClusterOutput {
  ClusterArn: String
  ClusterName: String
  State: String
}

input AwsKafkaCreateConfigurationInput {
  Description: String
  KafkaVersions: [String]!
  Name: String!
  ServerProperties: JSON!
}

type AwsKafkaCreateConfigurationOutput {
  Arn: String
  CreationTime: Date
  LatestRevision: AwsKafkaSu
  Name: String
}

input AwsKafkaDeleteClusterInput {
  ClusterArn: String!
  CurrentVersion: String
}

type AwsKafkaDeleteClusterOutput {
  ClusterArn: String
  State: String
}

input AwsKafkaDescribeClusterInput {
  ClusterArn: String!
}

input AwsKafkaDescribeClusterOperationInput {
  ClusterOperationArn: String!
}

type AwsKafkaDescribeClusterOperationOutput {
  ClusterOperationInfo: AwsKafkaS14
}

type AwsKafkaDescribeClusterOutput {
  ClusterInfo: AwsKafkaSz
}

input AwsKafkaDescribeConfigurationInput {
  Arn: String!
}

type AwsKafkaDescribeConfigurationOutput {
  Arn: String
  CreationTime: Date
  Description: String
  KafkaVersions: [String]
  LatestRevision: AwsKafkaSu
  Name: String
}

input AwsKafkaDescribeConfigurationRevisionInput {
  Arn: String!
  Revision: JSON!
}

type AwsKafkaDescribeConfigurationRevisionOutput {
  Arn: String
  CreationTime: Date
  Description: String
  Revision: JSON
  ServerProperties: JSON
}

input AwsKafkaGetBootstrapBrokersInput {
  ClusterArn: String!
}

type AwsKafkaGetBootstrapBrokersOutput {
  BootstrapBrokerString: String
  BootstrapBrokerStringTls: String
}

input AwsKafkaListClusterOperationsInput {
  ClusterArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsKafkaListClusterOperationsOutput {
  ClusterOperationInfoList: [AwsKafkaS14]
  NextToken: String
}

input AwsKafkaListClustersInput {
  ClusterNameFilter: String
  MaxResults: Int
  NextToken: String
}

type AwsKafkaListClustersOutput {
  ClusterInfoList: [AwsKafkaSz]
  NextToken: String
}

input AwsKafkaListConfigurationRevisionsInput {
  Arn: String!
  MaxResults: Int
  NextToken: String
}

type AwsKafkaListConfigurationRevisionsOutput {
  NextToken: String
  Revisions: [AwsKafkaSu]
}

input AwsKafkaListConfigurationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsKafkaListConfigurationsOutput {
  Configurations: [AwsKafkaListConfigurationsOutputConfigurations]
  NextToken: String
}

type AwsKafkaListConfigurationsOutputConfigurations {
  Arn: String!
  CreationTime: Date!
  Description: String!
  KafkaVersions: [String]!
  LatestRevision: AwsKafkaSu!
  Name: String!
}

input AwsKafkaListNodesInput {
  ClusterArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsKafkaListNodesOutput {
  NextToken: String
  NodeInfoList: [AwsKafkaListNodesOutputNodeInfoList]
}

type AwsKafkaListNodesOutputNodeInfoList {
  AddedToClusterTime: String
  BrokerNodeInfo: AwsKafkaListNodesOutputNodeInfoListBrokerNodeInfo
  InstanceType: String
  NodeARN: String
  NodeType: String
  ZookeeperNodeInfo: AwsKafkaListNodesOutputNodeInfoListZookeeperNodeInfo
}

type AwsKafkaListNodesOutputNodeInfoListBrokerNodeInfo {
  AttachedENIId: String
  BrokerId: JSON
  ClientSubnet: String
  ClientVpcIpAddress: String
  CurrentBrokerSoftwareInfo: AwsKafkaS10
  Endpoints: [String]
}

type AwsKafkaListNodesOutputNodeInfoListZookeeperNodeInfo {
  AttachedENIId: String
  ClientVpcIpAddress: String
  Endpoints: [String]
  ZookeeperId: JSON
  ZookeeperVersion: String
}

input AwsKafkaListTagsForResourceInput {
  ResourceArn: String!
}

type AwsKafkaListTagsForResourceOutput {
  Tags: JSON
}

type AwsKafkaS10 {
  ConfigurationArn: String
  ConfigurationRevision: JSON
  KafkaVersion: String
}

type AwsKafkaS14 {
  ClientRequestId: String
  ClusterArn: String
  CreationTime: Date
  EndTime: Date
  ErrorInfo: AwsKafkaS14ErrorInfo
  OperationArn: String
  OperationState: String
  OperationType: String
  SourceClusterInfo: AwsKafkaS16
  TargetClusterInfo: AwsKafkaS16
}

type AwsKafkaS14ErrorInfo {
  ErrorCode: String
  ErrorString: String
}

type AwsKafkaS16 {
  BrokerEBSVolumeInfo: [AwsKafkaS17]
  ConfigurationInfo: AwsKafkaSd
  NumberOfBrokerNodes: Int
}

type AwsKafkaS17 {
  KafkaBrokerNodeId: String!
  VolumeSizeGB: Int!
}

input AwsKafkaS17Input {
  KafkaBrokerNodeId: String!
  VolumeSizeGB: Int!
}

type AwsKafkaS2 {
  BrokerAZDistribution: String
  ClientSubnets: [String]!
  InstanceType: String!
  SecurityGroups: [String]
  StorageInfo: AwsKafkaS2StorageInfo
}

input AwsKafkaS2Input {
  BrokerAZDistribution: String
  ClientSubnets: [String]!
  InstanceType: String!
  SecurityGroups: [String]
  StorageInfo: AwsKafkaS2StorageInfoInput
}

type AwsKafkaS2StorageInfo {
  EbsStorageInfo: AwsKafkaS2StorageInfoEbsStorageInfo
}

type AwsKafkaS2StorageInfoEbsStorageInfo {
  VolumeSize: Int
}

input AwsKafkaS2StorageInfoEbsStorageInfoInput {
  VolumeSize: Int
}

input AwsKafkaS2StorageInfoInput {
  EbsStorageInfo: AwsKafkaS2StorageInfoEbsStorageInfoInput
}

type AwsKafkaSa {
  Tls: AwsKafkaSaTls
}

input AwsKafkaSaInput {
  Tls: AwsKafkaSaTlsInput
}

type AwsKafkaSaTls {
  CertificateAuthorityArnList: [String]
}

input AwsKafkaSaTlsInput {
  CertificateAuthorityArnList: [String]
}

type AwsKafkaSd {
  Arn: String!
  Revision: JSON!
}

input AwsKafkaSdInput {
  Arn: String!
  Revision: JSON!
}

type AwsKafkaSf {
  EncryptionAtRest: AwsKafkaSfEncryptionAtRest
  EncryptionInTransit: AwsKafkaSfEncryptionInTransit
}

type AwsKafkaSfEncryptionAtRest {
  DataVolumeKMSKeyId: String!
}

input AwsKafkaSfEncryptionAtRestInput {
  DataVolumeKMSKeyId: String!
}

type AwsKafkaSfEncryptionInTransit {
  ClientBroker: String
  InCluster: Boolean
}

input AwsKafkaSfEncryptionInTransitInput {
  ClientBroker: String
  InCluster: Boolean
}

input AwsKafkaSfInput {
  EncryptionAtRest: AwsKafkaSfEncryptionAtRestInput
  EncryptionInTransit: AwsKafkaSfEncryptionInTransitInput
}

type AwsKafkaSu {
  CreationTime: Date!
  Description: String
  Revision: JSON!
}

type AwsKafkaSz {
  ActiveOperationArn: String
  BrokerNodeGroupInfo: AwsKafkaS2
  ClientAuthentication: AwsKafkaSa
  ClusterArn: String
  ClusterName: String
  CreationTime: Date
  CurrentBrokerSoftwareInfo: AwsKafkaS10
  CurrentVersion: String
  EncryptionInfo: AwsKafkaSf
  EnhancedMonitoring: String
  NumberOfBrokerNodes: Int
  State: String
  Tags: JSON
  ZookeeperConnectString: String
}

input AwsKafkaTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsKafkaUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsKafkaUpdateBrokerStorageInput {
  ClusterArn: String!
  CurrentVersion: String!
  TargetBrokerEBSVolumeInfo: [AwsKafkaS17Input]!
}

type AwsKafkaUpdateBrokerStorageOutput {
  ClusterArn: String
  ClusterOperationArn: String
}

input AwsKafkaUpdateClusterConfigurationInput {
  ClusterArn: String!
  ConfigurationInfo: AwsKafkaSdInput!
  CurrentVersion: String!
}

type AwsKafkaUpdateClusterConfigurationOutput {
  ClusterArn: String
  ClusterOperationArn: String
}

"""Amazon Kinesis (2013-12-02)"""
type AwsKinesis {
  addTagsToStream(input: AwsKinesisAddTagsToStreamInput!, config: AwsConfig): JSON
  createStream(input: AwsKinesisCreateStreamInput!, config: AwsConfig): JSON
  decreaseStreamRetentionPeriod(input: AwsKinesisDecreaseStreamRetentionPeriodInput!, config: AwsConfig): JSON
  deleteStream(input: AwsKinesisDeleteStreamInput!, config: AwsConfig): JSON
  deregisterStreamConsumer(input: AwsKinesisDeregisterStreamConsumerInput, config: AwsConfig): JSON
  describeLimits(input: JSON, config: AwsConfig): AwsKinesisDescribeLimitsOutput
  describeStream(input: AwsKinesisDescribeStreamInput!, config: AwsConfig): AwsKinesisDescribeStreamOutput
  describeStreamConsumer(input: AwsKinesisDescribeStreamConsumerInput, config: AwsConfig): AwsKinesisDescribeStreamConsumerOutput
  describeStreamSummary(input: AwsKinesisDescribeStreamSummaryInput!, config: AwsConfig): AwsKinesisDescribeStreamSummaryOutput
  disableEnhancedMonitoring(input: AwsKinesisDisableEnhancedMonitoringInput!, config: AwsConfig): JSON
  enableEnhancedMonitoring(input: AwsKinesisEnableEnhancedMonitoringInput!, config: AwsConfig): JSON
  getRecords(input: AwsKinesisGetRecordsInput!, config: AwsConfig): AwsKinesisGetRecordsOutput
  getShardIterator(input: AwsKinesisGetShardIteratorInput!, config: AwsConfig): AwsKinesisGetShardIteratorOutput
  increaseStreamRetentionPeriod(input: AwsKinesisIncreaseStreamRetentionPeriodInput!, config: AwsConfig): JSON
  listShards(input: AwsKinesisListShardsInput, config: AwsConfig): AwsKinesisListShardsOutput
  listStreamConsumers(input: AwsKinesisListStreamConsumersInput!, config: AwsConfig): AwsKinesisListStreamConsumersOutput
  listStreams(input: AwsKinesisListStreamsInput, config: AwsConfig): AwsKinesisListStreamsOutput
  listTagsForStream(input: AwsKinesisListTagsForStreamInput!, config: AwsConfig): AwsKinesisListTagsForStreamOutput
  mergeShards(input: AwsKinesisMergeShardsInput!, config: AwsConfig): JSON
  putRecord(input: AwsKinesisPutRecordInput!, config: AwsConfig): AwsKinesisPutRecordOutput
  putRecords(input: AwsKinesisPutRecordsInput!, config: AwsConfig): AwsKinesisPutRecordsOutput
  registerStreamConsumer(input: AwsKinesisRegisterStreamConsumerInput!, config: AwsConfig): AwsKinesisRegisterStreamConsumerOutput
  removeTagsFromStream(input: AwsKinesisRemoveTagsFromStreamInput!, config: AwsConfig): JSON
  splitShard(input: AwsKinesisSplitShardInput!, config: AwsConfig): JSON
  startStreamEncryption(input: AwsKinesisStartStreamEncryptionInput!, config: AwsConfig): JSON
  stopStreamEncryption(input: AwsKinesisStopStreamEncryptionInput!, config: AwsConfig): JSON
  updateShardCount(input: AwsKinesisUpdateShardCountInput!, config: AwsConfig): AwsKinesisUpdateShardCountOutput
}

input AwsKinesisAddTagsToStreamInput {
  StreamName: String!
  Tags: JSON!
}

"""Amazon Kinesis Analytics (2015-08-14)"""
type AwsKinesisAnalytics {
  addApplicationCloudWatchLoggingOption(input: AwsKinesisAnalyticsAddApplicationCloudWatchLoggingOptionInput!, config: AwsConfig): JSON
  addApplicationInput(input: AwsKinesisAnalyticsAddApplicationInputInput!, config: AwsConfig): JSON
  addApplicationInputProcessingConfiguration(input: AwsKinesisAnalyticsAddApplicationInputProcessingConfigurationInput!, config: AwsConfig): JSON
  addApplicationOutput(input: AwsKinesisAnalyticsAddApplicationOutputInput!, config: AwsConfig): JSON
  addApplicationReferenceDataSource(input: AwsKinesisAnalyticsAddApplicationReferenceDataSourceInput!, config: AwsConfig): JSON
  createApplication(input: AwsKinesisAnalyticsCreateApplicationInput!, config: AwsConfig): AwsKinesisAnalyticsCreateApplicationOutput
  deleteApplication(input: AwsKinesisAnalyticsDeleteApplicationInput!, config: AwsConfig): JSON
  deleteApplicationCloudWatchLoggingOption(input: AwsKinesisAnalyticsDeleteApplicationCloudWatchLoggingOptionInput!, config: AwsConfig): JSON
  deleteApplicationInputProcessingConfiguration(input: AwsKinesisAnalyticsDeleteApplicationInputProcessingConfigurationInput!, config: AwsConfig): JSON
  deleteApplicationOutput(input: AwsKinesisAnalyticsDeleteApplicationOutputInput!, config: AwsConfig): JSON
  deleteApplicationReferenceDataSource(input: AwsKinesisAnalyticsDeleteApplicationReferenceDataSourceInput!, config: AwsConfig): JSON
  describeApplication(input: AwsKinesisAnalyticsDescribeApplicationInput!, config: AwsConfig): AwsKinesisAnalyticsDescribeApplicationOutput
  discoverInputSchema(input: AwsKinesisAnalyticsDiscoverInputSchemaInput, config: AwsConfig): AwsKinesisAnalyticsDiscoverInputSchemaOutput
  listApplications(input: AwsKinesisAnalyticsListApplicationsInput, config: AwsConfig): AwsKinesisAnalyticsListApplicationsOutput
  listTagsForResource(input: AwsKinesisAnalyticsListTagsForResourceInput!, config: AwsConfig): AwsKinesisAnalyticsListTagsForResourceOutput
  startApplication(input: AwsKinesisAnalyticsStartApplicationInput!, config: AwsConfig): JSON
  stopApplication(input: AwsKinesisAnalyticsStopApplicationInput!, config: AwsConfig): JSON
  tagResource(input: AwsKinesisAnalyticsTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsKinesisAnalyticsUntagResourceInput!, config: AwsConfig): JSON
  updateApplication(input: AwsKinesisAnalyticsUpdateApplicationInput!, config: AwsConfig): JSON
}

input AwsKinesisAnalyticsAddApplicationCloudWatchLoggingOptionInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  CloudWatchLoggingOption: AwsKinesisAnalyticsS4Input!
}

input AwsKinesisAnalyticsAddApplicationInputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  Input: AwsKinesisAnalyticsS9Input!
}

input AwsKinesisAnalyticsAddApplicationInputProcessingConfigurationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  InputId: String!
  InputProcessingConfiguration: AwsKinesisAnalyticsSbInput!
}

input AwsKinesisAnalyticsAddApplicationOutputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  Output: AwsKinesisAnalyticsS12Input!
}

input AwsKinesisAnalyticsAddApplicationReferenceDataSourceInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ReferenceDataSource: AwsKinesisAnalyticsAddApplicationReferenceDataSourceReferenceDataSourceInput!
}

input AwsKinesisAnalyticsAddApplicationReferenceDataSourceReferenceDataSourceInput {
  TableName: String!
  S3ReferenceDataSource: AwsKinesisAnalyticsAddApplicationReferenceDataSourceReferenceDataSourceS3ReferenceDataSourceInput
  ReferenceSchema: AwsKinesisAnalyticsSiInput!
}

input AwsKinesisAnalyticsAddApplicationReferenceDataSourceReferenceDataSourceS3ReferenceDataSourceInput {
  BucketARN: String!
  FileKey: String!
  ReferenceRoleARN: String!
}

input AwsKinesisAnalyticsCreateApplicationInput {
  ApplicationName: String!
  ApplicationDescription: String
  Inputs: [AwsKinesisAnalyticsS9Input]
  Outputs: [AwsKinesisAnalyticsS12Input]
  CloudWatchLoggingOptions: [AwsKinesisAnalyticsS4Input]
  ApplicationCode: String
  Tags: [AwsKinesisAnalyticsS1lInput]
}

type AwsKinesisAnalyticsCreateApplicationOutput {
  ApplicationSummary: AwsKinesisAnalyticsS1q!
}

input AwsKinesisAnalyticsDeleteApplicationCloudWatchLoggingOptionInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  CloudWatchLoggingOptionId: String!
}

input AwsKinesisAnalyticsDeleteApplicationInput {
  ApplicationName: String!
  CreateTimestamp: Date!
}

input AwsKinesisAnalyticsDeleteApplicationInputProcessingConfigurationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  InputId: String!
}

input AwsKinesisAnalyticsDeleteApplicationOutputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  OutputId: String!
}

input AwsKinesisAnalyticsDeleteApplicationReferenceDataSourceInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ReferenceId: String!
}

input AwsKinesisAnalyticsDescribeApplicationInput {
  ApplicationName: String!
}

type AwsKinesisAnalyticsDescribeApplicationOutput {
  ApplicationDetail: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetail!
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetail {
  ApplicationName: String!
  ApplicationDescription: String
  ApplicationARN: String!
  ApplicationStatus: String!
  CreateTimestamp: Date
  LastUpdateTimestamp: Date
  InputDescriptions: [AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptions]
  OutputDescriptions: [AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptions]
  ReferenceDataSourceDescriptions: [AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptions]
  CloudWatchLoggingOptionDescriptions: [AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailCloudWatchLoggingOptionDescriptions]
  ApplicationCode: String
  ApplicationVersionId: JSON!
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailCloudWatchLoggingOptionDescriptions {
  CloudWatchLoggingOptionId: String
  LogStreamARN: String!
  RoleARN: String!
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptions {
  InputId: String
  NamePrefix: String
  InAppStreamNames: [String]
  InputProcessingConfigurationDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescription
  KinesisStreamsInputDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisStreamsInputDescription
  KinesisFirehoseInputDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisFirehoseInputDescription
  InputSchema: AwsKinesisAnalyticsSi
  InputParallelism: AwsKinesisAnalyticsSg
  InputStartingPositionConfiguration: AwsKinesisAnalyticsS2d
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescription {
  InputLambdaProcessorDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescriptionInputLambdaProcessorDescription
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescriptionInputLambdaProcessorDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisFirehoseInputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisStreamsInputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptions {
  OutputId: String
  Name: String
  KinesisStreamsOutputDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisStreamsOutputDescription
  KinesisFirehoseOutputDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisFirehoseOutputDescription
  LambdaOutputDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsLambdaOutputDescription
  DestinationSchema: AwsKinesisAnalyticsS16
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisFirehoseOutputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisStreamsOutputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsLambdaOutputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptions {
  ReferenceId: String!
  TableName: String!
  S3ReferenceDataSourceDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptionsS3ReferenceDataSourceDescription!
  ReferenceSchema: AwsKinesisAnalyticsSi
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptionsS3ReferenceDataSourceDescription {
  BucketARN: String!
  FileKey: String!
  ReferenceRoleARN: String!
}

input AwsKinesisAnalyticsDiscoverInputSchemaInput {
  ResourceARN: String
  RoleARN: String
  InputStartingPositionConfiguration: AwsKinesisAnalyticsS2dInput
  S3Configuration: AwsKinesisAnalyticsDiscoverInputSchemaS3ConfigurationInput
  InputProcessingConfiguration: AwsKinesisAnalyticsSbInput
}

type AwsKinesisAnalyticsDiscoverInputSchemaOutput {
  InputSchema: AwsKinesisAnalyticsSi
  ParsedInputRecords: [[String]]
  ProcessedInputRecords: [String]
  RawInputRecords: [String]
}

input AwsKinesisAnalyticsDiscoverInputSchemaS3ConfigurationInput {
  RoleARN: String!
  BucketARN: String!
  FileKey: String!
}

input AwsKinesisAnalyticsListApplicationsInput {
  Limit: Int
  ExclusiveStartApplicationName: String
}

type AwsKinesisAnalyticsListApplicationsOutput {
  ApplicationSummaries: [AwsKinesisAnalyticsS1q]!
  HasMoreApplications: Boolean!
}

input AwsKinesisAnalyticsListTagsForResourceInput {
  ResourceARN: String!
}

type AwsKinesisAnalyticsListTagsForResourceOutput {
  Tags: [AwsKinesisAnalyticsS1l]
}

input AwsKinesisAnalyticsS12Input {
  Name: String!
  KinesisStreamsOutput: AwsKinesisAnalyticsS12KinesisStreamsOutputInput
  KinesisFirehoseOutput: AwsKinesisAnalyticsS12KinesisFirehoseOutputInput
  LambdaOutput: AwsKinesisAnalyticsS12LambdaOutputInput
  DestinationSchema: AwsKinesisAnalyticsS16Input!
}

input AwsKinesisAnalyticsS12KinesisFirehoseOutputInput {
  ResourceARN: String!
  RoleARN: String!
}

input AwsKinesisAnalyticsS12KinesisStreamsOutputInput {
  ResourceARN: String!
  RoleARN: String!
}

input AwsKinesisAnalyticsS12LambdaOutputInput {
  ResourceARN: String!
  RoleARN: String!
}

type AwsKinesisAnalyticsS16 {
  RecordFormatType: String!
}

input AwsKinesisAnalyticsS16Input {
  RecordFormatType: String!
}

type AwsKinesisAnalyticsS1l {
  Key: String!
  Value: String
}

input AwsKinesisAnalyticsS1lInput {
  Key: String!
  Value: String
}

type AwsKinesisAnalyticsS1q {
  ApplicationName: String!
  ApplicationARN: String!
  ApplicationStatus: String!
}

type AwsKinesisAnalyticsS2d {
  InputStartingPosition: String
}

input AwsKinesisAnalyticsS2dInput {
  InputStartingPosition: String
}

input AwsKinesisAnalyticsS4Input {
  LogStreamARN: String!
  RoleARN: String!
}

input AwsKinesisAnalyticsS9Input {
  NamePrefix: String!
  InputProcessingConfiguration: AwsKinesisAnalyticsSbInput
  KinesisStreamsInput: AwsKinesisAnalyticsS9KinesisStreamsInputInput
  KinesisFirehoseInput: AwsKinesisAnalyticsS9KinesisFirehoseInputInput
  InputParallelism: AwsKinesisAnalyticsSgInput
  InputSchema: AwsKinesisAnalyticsSiInput!
}

input AwsKinesisAnalyticsS9KinesisFirehoseInputInput {
  ResourceARN: String!
  RoleARN: String!
}

input AwsKinesisAnalyticsS9KinesisStreamsInputInput {
  ResourceARN: String!
  RoleARN: String!
}

input AwsKinesisAnalyticsSbInput {
  InputLambdaProcessor: AwsKinesisAnalyticsSbInputLambdaProcessorInput!
}

input AwsKinesisAnalyticsSbInputLambdaProcessorInput {
  ResourceARN: String!
  RoleARN: String!
}

type AwsKinesisAnalyticsSg {
  Count: Int
}

input AwsKinesisAnalyticsSgInput {
  Count: Int
}

type AwsKinesisAnalyticsSi {
  RecordFormat: AwsKinesisAnalyticsSj!
  RecordEncoding: String
  RecordColumns: [AwsKinesisAnalyticsSs]!
}

input AwsKinesisAnalyticsSiInput {
  RecordFormat: AwsKinesisAnalyticsSjInput!
  RecordEncoding: String
  RecordColumns: [AwsKinesisAnalyticsSsInput]!
}

type AwsKinesisAnalyticsSj {
  RecordFormatType: String!
  MappingParameters: AwsKinesisAnalyticsSjMappingParameters
}

input AwsKinesisAnalyticsSjInput {
  RecordFormatType: String!
  MappingParameters: AwsKinesisAnalyticsSjMappingParametersInput
}

type AwsKinesisAnalyticsSjMappingParameters {
  JSONMappingParameters: AwsKinesisAnalyticsSjMappingParametersJSONMappingParameters
  CSVMappingParameters: AwsKinesisAnalyticsSjMappingParametersCSVMappingParameters
}

type AwsKinesisAnalyticsSjMappingParametersCSVMappingParameters {
  RecordRowDelimiter: String!
  RecordColumnDelimiter: String!
}

input AwsKinesisAnalyticsSjMappingParametersCSVMappingParametersInput {
  RecordRowDelimiter: String!
  RecordColumnDelimiter: String!
}

input AwsKinesisAnalyticsSjMappingParametersInput {
  JSONMappingParameters: AwsKinesisAnalyticsSjMappingParametersJSONMappingParametersInput
  CSVMappingParameters: AwsKinesisAnalyticsSjMappingParametersCSVMappingParametersInput
}

type AwsKinesisAnalyticsSjMappingParametersJSONMappingParameters {
  RecordRowPath: String!
}

input AwsKinesisAnalyticsSjMappingParametersJSONMappingParametersInput {
  RecordRowPath: String!
}

type AwsKinesisAnalyticsSs {
  Name: String!
  Mapping: String
  SqlType: String!
}

input AwsKinesisAnalyticsSsInput {
  Name: String!
  Mapping: String
  SqlType: String!
}

input AwsKinesisAnalyticsStartApplicationInput {
  ApplicationName: String!
  InputConfigurations: [AwsKinesisAnalyticsStartApplicationInputConfigurationsInput]!
}

input AwsKinesisAnalyticsStartApplicationInputConfigurationsInput {
  Id: String!
  InputStartingPositionConfiguration: AwsKinesisAnalyticsS2dInput!
}

input AwsKinesisAnalyticsStopApplicationInput {
  ApplicationName: String!
}

input AwsKinesisAnalyticsTagResourceInput {
  ResourceARN: String!
  Tags: [AwsKinesisAnalyticsS1lInput]!
}

input AwsKinesisAnalyticsUntagResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateCloudWatchLoggingOptionUpdatesInput {
  CloudWatchLoggingOptionId: String!
  LogStreamARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInput {
  InputUpdates: [AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInput]
  ApplicationCodeUpdate: String
  OutputUpdates: [AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesInput]
  ReferenceDataSourceUpdates: [AwsKinesisAnalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesInput]
  CloudWatchLoggingOptionUpdates: [AwsKinesisAnalyticsUpdateApplicationApplicationUpdateCloudWatchLoggingOptionUpdatesInput]
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInput {
  InputId: String!
  NamePrefixUpdate: String
  InputProcessingConfigurationUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInput
  KinesisStreamsInputUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisStreamsInputUpdateInput
  KinesisFirehoseInputUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisFirehoseInputUpdateInput
  InputSchemaUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputSchemaUpdateInput
  InputParallelismUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputParallelismUpdateInput
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputParallelismUpdateInput {
  CountUpdate: Int
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInput {
  InputLambdaProcessorUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInputLambdaProcessorUpdateInput!
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInputLambdaProcessorUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputSchemaUpdateInput {
  RecordFormatUpdate: AwsKinesisAnalyticsSjInput
  RecordEncodingUpdate: String
  RecordColumnUpdates: [AwsKinesisAnalyticsSsInput]
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisFirehoseInputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisStreamsInputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesInput {
  OutputId: String!
  NameUpdate: String
  KinesisStreamsOutputUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisStreamsOutputUpdateInput
  KinesisFirehoseOutputUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisFirehoseOutputUpdateInput
  LambdaOutputUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesLambdaOutputUpdateInput
  DestinationSchemaUpdate: AwsKinesisAnalyticsS16Input
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisFirehoseOutputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisStreamsOutputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesLambdaOutputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesInput {
  ReferenceId: String!
  TableNameUpdate: String
  S3ReferenceDataSourceUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesS3ReferenceDataSourceUpdateInput
  ReferenceSchemaUpdate: AwsKinesisAnalyticsSiInput
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesS3ReferenceDataSourceUpdateInput {
  BucketARNUpdate: String
  FileKeyUpdate: String
  ReferenceRoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ApplicationUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInput!
}

"""Amazon Kinesis Analytics (2018-05-23)"""
type AwsKinesisAnalyticsV2 {
  addApplicationCloudWatchLoggingOption(input: AwsKinesisAnalyticsV2AddApplicationCloudWatchLoggingOptionInput!, config: AwsConfig): AwsKinesisAnalyticsV2AddApplicationCloudWatchLoggingOptionOutput
  addApplicationInput(input: AwsKinesisAnalyticsV2AddApplicationInputInput!, config: AwsConfig): AwsKinesisAnalyticsV2AddApplicationInputOutput
  addApplicationInputProcessingConfiguration(input: AwsKinesisAnalyticsV2AddApplicationInputProcessingConfigurationInput!, config: AwsConfig): AwsKinesisAnalyticsV2AddApplicationInputProcessingConfigurationOutput
  addApplicationOutput(input: AwsKinesisAnalyticsV2AddApplicationOutputInput!, config: AwsConfig): AwsKinesisAnalyticsV2AddApplicationOutputOutput
  addApplicationReferenceDataSource(input: AwsKinesisAnalyticsV2AddApplicationReferenceDataSourceInput!, config: AwsConfig): AwsKinesisAnalyticsV2AddApplicationReferenceDataSourceOutput
  createApplication(input: AwsKinesisAnalyticsV2CreateApplicationInput!, config: AwsConfig): AwsKinesisAnalyticsV2CreateApplicationOutput
  createApplicationSnapshot(input: AwsKinesisAnalyticsV2CreateApplicationSnapshotInput!, config: AwsConfig): JSON
  deleteApplication(input: AwsKinesisAnalyticsV2DeleteApplicationInput!, config: AwsConfig): JSON
  deleteApplicationCloudWatchLoggingOption(input: AwsKinesisAnalyticsV2DeleteApplicationCloudWatchLoggingOptionInput!, config: AwsConfig): AwsKinesisAnalyticsV2DeleteApplicationCloudWatchLoggingOptionOutput
  deleteApplicationInputProcessingConfiguration(input: AwsKinesisAnalyticsV2DeleteApplicationInputProcessingConfigurationInput!, config: AwsConfig): AwsKinesisAnalyticsV2DeleteApplicationInputProcessingConfigurationOutput
  deleteApplicationOutput(input: AwsKinesisAnalyticsV2DeleteApplicationOutputInput!, config: AwsConfig): AwsKinesisAnalyticsV2DeleteApplicationOutputOutput
  deleteApplicationReferenceDataSource(input: AwsKinesisAnalyticsV2DeleteApplicationReferenceDataSourceInput!, config: AwsConfig): AwsKinesisAnalyticsV2DeleteApplicationReferenceDataSourceOutput
  deleteApplicationSnapshot(input: AwsKinesisAnalyticsV2DeleteApplicationSnapshotInput!, config: AwsConfig): JSON
  describeApplication(input: AwsKinesisAnalyticsV2DescribeApplicationInput!, config: AwsConfig): AwsKinesisAnalyticsV2DescribeApplicationOutput
  describeApplicationSnapshot(input: AwsKinesisAnalyticsV2DescribeApplicationSnapshotInput!, config: AwsConfig): AwsKinesisAnalyticsV2DescribeApplicationSnapshotOutput
  discoverInputSchema(input: AwsKinesisAnalyticsV2DiscoverInputSchemaInput!, config: AwsConfig): AwsKinesisAnalyticsV2DiscoverInputSchemaOutput
  listApplicationSnapshots(input: AwsKinesisAnalyticsV2ListApplicationSnapshotsInput!, config: AwsConfig): AwsKinesisAnalyticsV2ListApplicationSnapshotsOutput
  listApplications(input: AwsKinesisAnalyticsV2ListApplicationsInput, config: AwsConfig): AwsKinesisAnalyticsV2ListApplicationsOutput
  listTagsForResource(input: AwsKinesisAnalyticsV2ListTagsForResourceInput!, config: AwsConfig): AwsKinesisAnalyticsV2ListTagsForResourceOutput
  startApplication(input: AwsKinesisAnalyticsV2StartApplicationInput!, config: AwsConfig): JSON
  stopApplication(input: AwsKinesisAnalyticsV2StopApplicationInput!, config: AwsConfig): JSON
  tagResource(input: AwsKinesisAnalyticsV2TagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsKinesisAnalyticsV2UntagResourceInput!, config: AwsConfig): JSON
  updateApplication(input: AwsKinesisAnalyticsV2UpdateApplicationInput!, config: AwsConfig): AwsKinesisAnalyticsV2UpdateApplicationOutput
}

input AwsKinesisAnalyticsV2AddApplicationCloudWatchLoggingOptionInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  CloudWatchLoggingOption: AwsKinesisAnalyticsV2S4Input!
}

type AwsKinesisAnalyticsV2AddApplicationCloudWatchLoggingOptionOutput {
  ApplicationARN: String
  ApplicationVersionId: JSON
  CloudWatchLoggingOptionDescriptions: [AwsKinesisAnalyticsV2S8]
}

input AwsKinesisAnalyticsV2AddApplicationInputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  Input: AwsKinesisAnalyticsV2SdInput!
}

type AwsKinesisAnalyticsV2AddApplicationInputOutput {
  ApplicationARN: String
  ApplicationVersionId: JSON
  InputDescriptions: [AwsKinesisAnalyticsV2S11]
}

input AwsKinesisAnalyticsV2AddApplicationInputProcessingConfigurationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  InputId: String!
  InputProcessingConfiguration: AwsKinesisAnalyticsV2SfInput!
}

type AwsKinesisAnalyticsV2AddApplicationInputProcessingConfigurationOutput {
  ApplicationARN: String
  ApplicationVersionId: JSON
  InputId: String
  InputProcessingConfigurationDescription: AwsKinesisAnalyticsV2S14
}

input AwsKinesisAnalyticsV2AddApplicationOutputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  Output: AwsKinesisAnalyticsV2S1dInput!
}

type AwsKinesisAnalyticsV2AddApplicationOutputOutput {
  ApplicationARN: String
  ApplicationVersionId: JSON
  OutputDescriptions: [AwsKinesisAnalyticsV2S1j]
}

input AwsKinesisAnalyticsV2AddApplicationReferenceDataSourceInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ReferenceDataSource: AwsKinesisAnalyticsV2S1pInput!
}

type AwsKinesisAnalyticsV2AddApplicationReferenceDataSourceOutput {
  ApplicationARN: String
  ApplicationVersionId: JSON
  ReferenceDataSourceDescriptions: [AwsKinesisAnalyticsV2S1v]
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentInput {
  TextContent: String
  ZipFileContent: JSON
  S3ContentLocation: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationInput
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationInput {
  BucketARN: String!
  FileKey: String!
  ObjectVersion: String
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationApplicationCodeConfigurationInput {
  CodeContent: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentInput
  CodeContentType: String!
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationApplicationSnapshotConfigurationInput {
  SnapshotsEnabled: Boolean!
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationEnvironmentPropertiesInput {
  PropertyGroups: [AwsKinesisAnalyticsV2S2jInput]!
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationInput {
  ConfigurationType: String!
  CheckpointingEnabled: Boolean
  CheckpointInterval: JSON
  MinPauseBetweenCheckpoints: JSON
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationFlinkApplicationConfigurationInput {
  CheckpointConfiguration: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationInput
  MonitoringConfiguration: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationInput
  ParallelismConfiguration: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationInput
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationInput {
  ConfigurationType: String!
  MetricsLevel: String
  LogLevel: String
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationInput {
  ConfigurationType: String!
  Parallelism: Int
  ParallelismPerKPU: Int
  AutoScalingEnabled: Boolean
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationInput {
  SqlApplicationConfiguration: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationSqlApplicationConfigurationInput
  FlinkApplicationConfiguration: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationFlinkApplicationConfigurationInput
  EnvironmentProperties: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationEnvironmentPropertiesInput
  ApplicationCodeConfiguration: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationApplicationCodeConfigurationInput!
  ApplicationSnapshotConfiguration: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationApplicationSnapshotConfigurationInput
}

input AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationSqlApplicationConfigurationInput {
  Inputs: [AwsKinesisAnalyticsV2SdInput]
  Outputs: [AwsKinesisAnalyticsV2S1dInput]
  ReferenceDataSources: [AwsKinesisAnalyticsV2S1pInput]
}

input AwsKinesisAnalyticsV2CreateApplicationInput {
  ApplicationName: String!
  ApplicationDescription: String
  RuntimeEnvironment: String!
  ServiceExecutionRole: String!
  ApplicationConfiguration: AwsKinesisAnalyticsV2CreateApplicationApplicationConfigurationInput
  CloudWatchLoggingOptions: [AwsKinesisAnalyticsV2S4Input]
  Tags: [AwsKinesisAnalyticsV2S2xInput]
}

type AwsKinesisAnalyticsV2CreateApplicationOutput {
  ApplicationDetail: AwsKinesisAnalyticsV2S32!
}

input AwsKinesisAnalyticsV2CreateApplicationSnapshotInput {
  ApplicationName: String!
  SnapshotName: String!
}

input AwsKinesisAnalyticsV2DeleteApplicationCloudWatchLoggingOptionInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  CloudWatchLoggingOptionId: String!
}

type AwsKinesisAnalyticsV2DeleteApplicationCloudWatchLoggingOptionOutput {
  ApplicationARN: String
  ApplicationVersionId: JSON
  CloudWatchLoggingOptionDescriptions: [AwsKinesisAnalyticsV2S8]
}

input AwsKinesisAnalyticsV2DeleteApplicationInput {
  ApplicationName: String!
  CreateTimestamp: Date!
}

input AwsKinesisAnalyticsV2DeleteApplicationInputProcessingConfigurationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  InputId: String!
}

type AwsKinesisAnalyticsV2DeleteApplicationInputProcessingConfigurationOutput {
  ApplicationARN: String
  ApplicationVersionId: JSON
}

input AwsKinesisAnalyticsV2DeleteApplicationOutputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  OutputId: String!
}

type AwsKinesisAnalyticsV2DeleteApplicationOutputOutput {
  ApplicationARN: String
  ApplicationVersionId: JSON
}

input AwsKinesisAnalyticsV2DeleteApplicationReferenceDataSourceInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ReferenceId: String!
}

type AwsKinesisAnalyticsV2DeleteApplicationReferenceDataSourceOutput {
  ApplicationARN: String
  ApplicationVersionId: JSON
}

input AwsKinesisAnalyticsV2DeleteApplicationSnapshotInput {
  ApplicationName: String!
  SnapshotName: String!
  SnapshotCreationTimestamp: Date!
}

input AwsKinesisAnalyticsV2DescribeApplicationInput {
  ApplicationName: String!
  IncludeAdditionalDetails: Boolean
}

type AwsKinesisAnalyticsV2DescribeApplicationOutput {
  ApplicationDetail: AwsKinesisAnalyticsV2S32!
}

input AwsKinesisAnalyticsV2DescribeApplicationSnapshotInput {
  ApplicationName: String!
  SnapshotName: String!
}

type AwsKinesisAnalyticsV2DescribeApplicationSnapshotOutput {
  SnapshotDetails: AwsKinesisAnalyticsV2S45!
}

input AwsKinesisAnalyticsV2DiscoverInputSchemaInput {
  ResourceARN: String
  ServiceExecutionRole: String!
  InputStartingPositionConfiguration: AwsKinesisAnalyticsV2S18Input
  S3Configuration: AwsKinesisAnalyticsV2DiscoverInputSchemaS3ConfigurationInput
  InputProcessingConfiguration: AwsKinesisAnalyticsV2SfInput
}

type AwsKinesisAnalyticsV2DiscoverInputSchemaOutput {
  InputSchema: AwsKinesisAnalyticsV2Sl
  ParsedInputRecords: [[String]]
  ProcessedInputRecords: [String]
  RawInputRecords: [String]
}

input AwsKinesisAnalyticsV2DiscoverInputSchemaS3ConfigurationInput {
  BucketARN: String!
  FileKey: String!
}

input AwsKinesisAnalyticsV2ListApplicationsInput {
  Limit: Int
  NextToken: String
}

input AwsKinesisAnalyticsV2ListApplicationSnapshotsInput {
  ApplicationName: String!
  Limit: Int
  NextToken: String
}

type AwsKinesisAnalyticsV2ListApplicationSnapshotsOutput {
  SnapshotSummaries: [AwsKinesisAnalyticsV2S45]
  NextToken: String
}

type AwsKinesisAnalyticsV2ListApplicationsOutput {
  ApplicationSummaries: [AwsKinesisAnalyticsV2ListApplicationsOutputApplicationSummaries]!
  NextToken: String
}

type AwsKinesisAnalyticsV2ListApplicationsOutputApplicationSummaries {
  ApplicationName: String!
  ApplicationARN: String!
  ApplicationStatus: String!
  ApplicationVersionId: JSON!
  RuntimeEnvironment: String!
}

input AwsKinesisAnalyticsV2ListTagsForResourceInput {
  ResourceARN: String!
}

type AwsKinesisAnalyticsV2ListTagsForResourceOutput {
  Tags: [AwsKinesisAnalyticsV2S2x]
}

type AwsKinesisAnalyticsV2S11 {
  InputId: String
  NamePrefix: String
  InAppStreamNames: [String]
  InputProcessingConfigurationDescription: AwsKinesisAnalyticsV2S14
  KinesisStreamsInputDescription: AwsKinesisAnalyticsV2S11KinesisStreamsInputDescription
  KinesisFirehoseInputDescription: AwsKinesisAnalyticsV2S11KinesisFirehoseInputDescription
  InputSchema: AwsKinesisAnalyticsV2Sl
  InputParallelism: AwsKinesisAnalyticsV2Sj
  InputStartingPositionConfiguration: AwsKinesisAnalyticsV2S18
}

type AwsKinesisAnalyticsV2S11KinesisFirehoseInputDescription {
  ResourceARN: String!
  RoleARN: String
}

type AwsKinesisAnalyticsV2S11KinesisStreamsInputDescription {
  ResourceARN: String!
  RoleARN: String
}

type AwsKinesisAnalyticsV2S14 {
  InputLambdaProcessorDescription: AwsKinesisAnalyticsV2S14InputLambdaProcessorDescription
}

type AwsKinesisAnalyticsV2S14InputLambdaProcessorDescription {
  ResourceARN: String!
  RoleARN: String
}

type AwsKinesisAnalyticsV2S18 {
  InputStartingPosition: String
}

input AwsKinesisAnalyticsV2S18Input {
  InputStartingPosition: String
}

input AwsKinesisAnalyticsV2S1dInput {
  Name: String!
  KinesisStreamsOutput: AwsKinesisAnalyticsV2S1dKinesisStreamsOutputInput
  KinesisFirehoseOutput: AwsKinesisAnalyticsV2S1dKinesisFirehoseOutputInput
  LambdaOutput: AwsKinesisAnalyticsV2S1dLambdaOutputInput
  DestinationSchema: AwsKinesisAnalyticsV2S1hInput!
}

input AwsKinesisAnalyticsV2S1dKinesisFirehoseOutputInput {
  ResourceARN: String!
}

input AwsKinesisAnalyticsV2S1dKinesisStreamsOutputInput {
  ResourceARN: String!
}

input AwsKinesisAnalyticsV2S1dLambdaOutputInput {
  ResourceARN: String!
}

type AwsKinesisAnalyticsV2S1h {
  RecordFormatType: String!
}

input AwsKinesisAnalyticsV2S1hInput {
  RecordFormatType: String!
}

type AwsKinesisAnalyticsV2S1j {
  OutputId: String
  Name: String
  KinesisStreamsOutputDescription: AwsKinesisAnalyticsV2S1jKinesisStreamsOutputDescription
  KinesisFirehoseOutputDescription: AwsKinesisAnalyticsV2S1jKinesisFirehoseOutputDescription
  LambdaOutputDescription: AwsKinesisAnalyticsV2S1jLambdaOutputDescription
  DestinationSchema: AwsKinesisAnalyticsV2S1h
}

type AwsKinesisAnalyticsV2S1jKinesisFirehoseOutputDescription {
  ResourceARN: String!
  RoleARN: String
}

type AwsKinesisAnalyticsV2S1jKinesisStreamsOutputDescription {
  ResourceARN: String!
  RoleARN: String
}

type AwsKinesisAnalyticsV2S1jLambdaOutputDescription {
  ResourceARN: String!
  RoleARN: String
}

input AwsKinesisAnalyticsV2S1pInput {
  TableName: String!
  S3ReferenceDataSource: AwsKinesisAnalyticsV2S1pS3ReferenceDataSourceInput
  ReferenceSchema: AwsKinesisAnalyticsV2SlInput!
}

input AwsKinesisAnalyticsV2S1pS3ReferenceDataSourceInput {
  BucketARN: String
  FileKey: String
}

type AwsKinesisAnalyticsV2S1v {
  ReferenceId: String!
  TableName: String!
  S3ReferenceDataSourceDescription: AwsKinesisAnalyticsV2S1vS3ReferenceDataSourceDescription!
  ReferenceSchema: AwsKinesisAnalyticsV2Sl
}

type AwsKinesisAnalyticsV2S1vS3ReferenceDataSourceDescription {
  BucketARN: String!
  FileKey: String!
  ReferenceRoleARN: String
}

type AwsKinesisAnalyticsV2S2j {
  PropertyGroupId: String!
  PropertyMap: JSON!
}

input AwsKinesisAnalyticsV2S2jInput {
  PropertyGroupId: String!
  PropertyMap: JSON!
}

type AwsKinesisAnalyticsV2S2x {
  Key: String!
  Value: String
}

input AwsKinesisAnalyticsV2S2xInput {
  Key: String!
  Value: String
}

type AwsKinesisAnalyticsV2S32 {
  ApplicationARN: String!
  ApplicationDescription: String
  ApplicationName: String!
  RuntimeEnvironment: String!
  ServiceExecutionRole: String
  ApplicationStatus: String!
  ApplicationVersionId: JSON!
  CreateTimestamp: Date
  LastUpdateTimestamp: Date
  ApplicationConfigurationDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescription
  CloudWatchLoggingOptionDescriptions: [AwsKinesisAnalyticsV2S8]
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescription {
  SqlApplicationConfigurationDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionSqlApplicationConfigurationDescription
  ApplicationCodeConfigurationDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription
  RunConfigurationDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionRunConfigurationDescription
  FlinkApplicationConfigurationDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescription
  EnvironmentPropertyDescriptions: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionEnvironmentPropertyDescriptions
  ApplicationSnapshotConfigurationDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionApplicationSnapshotConfigurationDescription
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionApplicationCodeConfigurationDescription {
  CodeContentType: String!
  CodeContentDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionApplicationCodeConfigurationDescriptionCodeContentDescription
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionApplicationCodeConfigurationDescriptionCodeContentDescription {
  TextContent: String
  CodeMD5: String
  CodeSize: JSON
  S3ApplicationCodeLocationDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionApplicationCodeConfigurationDescriptionCodeContentDescriptionS3ApplicationCodeLocationDescription
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionApplicationCodeConfigurationDescriptionCodeContentDescriptionS3ApplicationCodeLocationDescription {
  BucketARN: String!
  FileKey: String!
  ObjectVersion: String
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionApplicationSnapshotConfigurationDescription {
  SnapshotsEnabled: Boolean!
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionEnvironmentPropertyDescriptions {
  PropertyGroupDescriptions: [AwsKinesisAnalyticsV2S2j]
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescription {
  CheckpointConfigurationDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescriptionCheckpointConfigurationDescription
  MonitoringConfigurationDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescriptionMonitoringConfigurationDescription
  ParallelismConfigurationDescription: AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescriptionParallelismConfigurationDescription
  JobPlanDescription: String
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescriptionCheckpointConfigurationDescription {
  ConfigurationType: String
  CheckpointingEnabled: Boolean
  CheckpointInterval: JSON
  MinPauseBetweenCheckpoints: JSON
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescriptionMonitoringConfigurationDescription {
  ConfigurationType: String
  MetricsLevel: String
  LogLevel: String
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionFlinkApplicationConfigurationDescriptionParallelismConfigurationDescription {
  ConfigurationType: String
  Parallelism: Int
  ParallelismPerKPU: Int
  CurrentParallelism: Int
  AutoScalingEnabled: Boolean
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionRunConfigurationDescription {
  ApplicationRestoreConfigurationDescription: AwsKinesisAnalyticsV2S3d
}

type AwsKinesisAnalyticsV2S32ApplicationConfigurationDescriptionSqlApplicationConfigurationDescription {
  InputDescriptions: [AwsKinesisAnalyticsV2S11]
  OutputDescriptions: [AwsKinesisAnalyticsV2S1j]
  ReferenceDataSourceDescriptions: [AwsKinesisAnalyticsV2S1v]
}

type AwsKinesisAnalyticsV2S3d {
  ApplicationRestoreType: String!
  SnapshotName: String
}

input AwsKinesisAnalyticsV2S3dInput {
  ApplicationRestoreType: String!
  SnapshotName: String
}

type AwsKinesisAnalyticsV2S45 {
  SnapshotName: String!
  SnapshotStatus: String!
  ApplicationVersionId: JSON!
  SnapshotCreationTimestamp: Date
}

input AwsKinesisAnalyticsV2S4Input {
  LogStreamARN: String!
}

type AwsKinesisAnalyticsV2S8 {
  CloudWatchLoggingOptionId: String
  LogStreamARN: String!
  RoleARN: String
}

input AwsKinesisAnalyticsV2SdInput {
  NamePrefix: String!
  InputProcessingConfiguration: AwsKinesisAnalyticsV2SfInput
  KinesisStreamsInput: AwsKinesisAnalyticsV2SdKinesisStreamsInputInput
  KinesisFirehoseInput: AwsKinesisAnalyticsV2SdKinesisFirehoseInputInput
  InputParallelism: AwsKinesisAnalyticsV2SjInput
  InputSchema: AwsKinesisAnalyticsV2SlInput!
}

input AwsKinesisAnalyticsV2SdKinesisFirehoseInputInput {
  ResourceARN: String!
}

input AwsKinesisAnalyticsV2SdKinesisStreamsInputInput {
  ResourceARN: String!
}

input AwsKinesisAnalyticsV2SfInput {
  InputLambdaProcessor: AwsKinesisAnalyticsV2SfInputLambdaProcessorInput!
}

input AwsKinesisAnalyticsV2SfInputLambdaProcessorInput {
  ResourceARN: String!
}

type AwsKinesisAnalyticsV2Sj {
  Count: Int
}

input AwsKinesisAnalyticsV2SjInput {
  Count: Int
}

type AwsKinesisAnalyticsV2Sl {
  RecordFormat: AwsKinesisAnalyticsV2Sm!
  RecordEncoding: String
  RecordColumns: [AwsKinesisAnalyticsV2Sv]!
}

input AwsKinesisAnalyticsV2SlInput {
  RecordFormat: AwsKinesisAnalyticsV2SmInput!
  RecordEncoding: String
  RecordColumns: [AwsKinesisAnalyticsV2SvInput]!
}

type AwsKinesisAnalyticsV2Sm {
  RecordFormatType: String!
  MappingParameters: AwsKinesisAnalyticsV2SmMappingParameters
}

input AwsKinesisAnalyticsV2SmInput {
  RecordFormatType: String!
  MappingParameters: AwsKinesisAnalyticsV2SmMappingParametersInput
}

type AwsKinesisAnalyticsV2SmMappingParameters {
  JSONMappingParameters: AwsKinesisAnalyticsV2SmMappingParametersJSONMappingParameters
  CSVMappingParameters: AwsKinesisAnalyticsV2SmMappingParametersCSVMappingParameters
}

type AwsKinesisAnalyticsV2SmMappingParametersCSVMappingParameters {
  RecordRowDelimiter: String!
  RecordColumnDelimiter: String!
}

input AwsKinesisAnalyticsV2SmMappingParametersCSVMappingParametersInput {
  RecordRowDelimiter: String!
  RecordColumnDelimiter: String!
}

input AwsKinesisAnalyticsV2SmMappingParametersInput {
  JSONMappingParameters: AwsKinesisAnalyticsV2SmMappingParametersJSONMappingParametersInput
  CSVMappingParameters: AwsKinesisAnalyticsV2SmMappingParametersCSVMappingParametersInput
}

type AwsKinesisAnalyticsV2SmMappingParametersJSONMappingParameters {
  RecordRowPath: String!
}

input AwsKinesisAnalyticsV2SmMappingParametersJSONMappingParametersInput {
  RecordRowPath: String!
}

input AwsKinesisAnalyticsV2StartApplicationInput {
  ApplicationName: String!
  RunConfiguration: AwsKinesisAnalyticsV2StartApplicationRunConfigurationInput!
}

input AwsKinesisAnalyticsV2StartApplicationRunConfigurationInput {
  SqlRunConfigurations: [AwsKinesisAnalyticsV2StartApplicationRunConfigurationSqlRunConfigurationsInput]
  ApplicationRestoreConfiguration: AwsKinesisAnalyticsV2S3dInput
}

input AwsKinesisAnalyticsV2StartApplicationRunConfigurationSqlRunConfigurationsInput {
  InputId: String!
  InputStartingPositionConfiguration: AwsKinesisAnalyticsV2S18Input!
}

input AwsKinesisAnalyticsV2StopApplicationInput {
  ApplicationName: String!
}

type AwsKinesisAnalyticsV2Sv {
  Name: String!
  Mapping: String
  SqlType: String!
}

input AwsKinesisAnalyticsV2SvInput {
  Name: String!
  Mapping: String
  SqlType: String!
}

input AwsKinesisAnalyticsV2TagResourceInput {
  ResourceARN: String!
  Tags: [AwsKinesisAnalyticsV2S2xInput]!
}

input AwsKinesisAnalyticsV2UntagResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateApplicationCodeConfigurationUpdateCodeContentUpdateInput {
  TextContentUpdate: String
  ZipFileContentUpdate: JSON
  S3ContentLocationUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateApplicationCodeConfigurationUpdateCodeContentUpdateS3ContentLocationUpdateInput
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateApplicationCodeConfigurationUpdateCodeContentUpdateS3ContentLocationUpdateInput {
  BucketARNUpdate: String
  FileKeyUpdate: String
  ObjectVersionUpdate: String
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateApplicationCodeConfigurationUpdateInput {
  CodeContentTypeUpdate: String
  CodeContentUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateApplicationCodeConfigurationUpdateCodeContentUpdateInput
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateApplicationSnapshotConfigurationUpdateInput {
  SnapshotsEnabledUpdate: Boolean!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateEnvironmentPropertyUpdatesInput {
  PropertyGroups: [AwsKinesisAnalyticsV2S2jInput]!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateFlinkApplicationConfigurationUpdateCheckpointConfigurationUpdateInput {
  ConfigurationTypeUpdate: String
  CheckpointingEnabledUpdate: Boolean
  CheckpointIntervalUpdate: JSON
  MinPauseBetweenCheckpointsUpdate: JSON
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateFlinkApplicationConfigurationUpdateInput {
  CheckpointConfigurationUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateFlinkApplicationConfigurationUpdateCheckpointConfigurationUpdateInput
  MonitoringConfigurationUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateFlinkApplicationConfigurationUpdateMonitoringConfigurationUpdateInput
  ParallelismConfigurationUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateFlinkApplicationConfigurationUpdateParallelismConfigurationUpdateInput
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateFlinkApplicationConfigurationUpdateMonitoringConfigurationUpdateInput {
  ConfigurationTypeUpdate: String
  MetricsLevelUpdate: String
  LogLevelUpdate: String
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateFlinkApplicationConfigurationUpdateParallelismConfigurationUpdateInput {
  ConfigurationTypeUpdate: String
  ParallelismUpdate: Int
  ParallelismPerKPUUpdate: Int
  AutoScalingEnabledUpdate: Boolean
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateInput {
  SqlApplicationConfigurationUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInput
  ApplicationCodeConfigurationUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateApplicationCodeConfigurationUpdateInput
  FlinkApplicationConfigurationUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateFlinkApplicationConfigurationUpdateInput
  EnvironmentPropertyUpdates: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateEnvironmentPropertyUpdatesInput
  ApplicationSnapshotConfigurationUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateApplicationSnapshotConfigurationUpdateInput
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInput {
  InputUpdates: [AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesInput]
  OutputUpdates: [AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateOutputUpdatesInput]
  ReferenceDataSourceUpdates: [AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateReferenceDataSourceUpdatesInput]
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesInput {
  InputId: String!
  NamePrefixUpdate: String
  InputProcessingConfigurationUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesInputProcessingConfigurationUpdateInput
  KinesisStreamsInputUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesKinesisStreamsInputUpdateInput
  KinesisFirehoseInputUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesKinesisFirehoseInputUpdateInput
  InputSchemaUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesInputSchemaUpdateInput
  InputParallelismUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesInputParallelismUpdateInput
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesInputParallelismUpdateInput {
  CountUpdate: Int!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesInputProcessingConfigurationUpdateInput {
  InputLambdaProcessorUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesInputProcessingConfigurationUpdateInputLambdaProcessorUpdateInput!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesInputProcessingConfigurationUpdateInputLambdaProcessorUpdateInput {
  ResourceARNUpdate: String!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesInputSchemaUpdateInput {
  RecordFormatUpdate: AwsKinesisAnalyticsV2SmInput
  RecordEncodingUpdate: String
  RecordColumnUpdates: [AwsKinesisAnalyticsV2SvInput]
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesKinesisFirehoseInputUpdateInput {
  ResourceARNUpdate: String!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateInputUpdatesKinesisStreamsInputUpdateInput {
  ResourceARNUpdate: String!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateOutputUpdatesInput {
  OutputId: String!
  NameUpdate: String
  KinesisStreamsOutputUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateOutputUpdatesKinesisStreamsOutputUpdateInput
  KinesisFirehoseOutputUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateOutputUpdatesKinesisFirehoseOutputUpdateInput
  LambdaOutputUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateOutputUpdatesLambdaOutputUpdateInput
  DestinationSchemaUpdate: AwsKinesisAnalyticsV2S1hInput
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateOutputUpdatesKinesisFirehoseOutputUpdateInput {
  ResourceARNUpdate: String!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateOutputUpdatesKinesisStreamsOutputUpdateInput {
  ResourceARNUpdate: String!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateOutputUpdatesLambdaOutputUpdateInput {
  ResourceARNUpdate: String!
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateReferenceDataSourceUpdatesInput {
  ReferenceId: String!
  TableNameUpdate: String
  S3ReferenceDataSourceUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateReferenceDataSourceUpdatesS3ReferenceDataSourceUpdateInput
  ReferenceSchemaUpdate: AwsKinesisAnalyticsV2SlInput
}

input AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateSqlApplicationConfigurationUpdateReferenceDataSourceUpdatesS3ReferenceDataSourceUpdateInput {
  BucketARNUpdate: String
  FileKeyUpdate: String
}

input AwsKinesisAnalyticsV2UpdateApplicationCloudWatchLoggingOptionUpdatesInput {
  CloudWatchLoggingOptionId: String!
  LogStreamARNUpdate: String
}

input AwsKinesisAnalyticsV2UpdateApplicationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ApplicationConfigurationUpdate: AwsKinesisAnalyticsV2UpdateApplicationApplicationConfigurationUpdateInput
  ServiceExecutionRoleUpdate: String
  RunConfigurationUpdate: AwsKinesisAnalyticsV2UpdateApplicationRunConfigurationUpdateInput
  CloudWatchLoggingOptionUpdates: [AwsKinesisAnalyticsV2UpdateApplicationCloudWatchLoggingOptionUpdatesInput]
}

type AwsKinesisAnalyticsV2UpdateApplicationOutput {
  ApplicationDetail: AwsKinesisAnalyticsV2S32!
}

input AwsKinesisAnalyticsV2UpdateApplicationRunConfigurationUpdateInput {
  ApplicationRestoreConfiguration: AwsKinesisAnalyticsV2S3dInput
}

input AwsKinesisCreateStreamInput {
  StreamName: String!
  ShardCount: Int!
}

input AwsKinesisDecreaseStreamRetentionPeriodInput {
  StreamName: String!
  RetentionPeriodHours: Int!
}

input AwsKinesisDeleteStreamInput {
  StreamName: String!
  EnforceConsumerDeletion: Boolean
}

input AwsKinesisDeregisterStreamConsumerInput {
  StreamARN: String
  ConsumerName: String
  ConsumerARN: String
}

type AwsKinesisDescribeLimitsOutput {
  ShardLimit: Int!
  OpenShardCount: Int!
}

input AwsKinesisDescribeStreamConsumerInput {
  StreamARN: String
  ConsumerName: String
  ConsumerARN: String
}

type AwsKinesisDescribeStreamConsumerOutput {
  ConsumerDescription: AwsKinesisDescribeStreamConsumerOutputConsumerDescription!
}

type AwsKinesisDescribeStreamConsumerOutputConsumerDescription {
  ConsumerName: String!
  ConsumerARN: String!
  ConsumerStatus: String!
  ConsumerCreationTimestamp: Date!
  StreamARN: String!
}

input AwsKinesisDescribeStreamInput {
  StreamName: String!
  Limit: Int
  ExclusiveStartShardId: String
}

type AwsKinesisDescribeStreamOutput {
  StreamDescription: AwsKinesisDescribeStreamOutputStreamDescription!
}

type AwsKinesisDescribeStreamOutputStreamDescription {
  StreamName: String!
  StreamARN: String!
  StreamStatus: String!
  Shards: [AwsKinesisSp]!
  HasMoreShards: Boolean!
  RetentionPeriodHours: Int!
  StreamCreationTimestamp: Date!
  EnhancedMonitoring: [AwsKinesisSw]!
  EncryptionType: String
  KeyId: String
}

input AwsKinesisDescribeStreamSummaryInput {
  StreamName: String!
}

type AwsKinesisDescribeStreamSummaryOutput {
  StreamDescriptionSummary: AwsKinesisDescribeStreamSummaryOutputStreamDescriptionSummary!
}

type AwsKinesisDescribeStreamSummaryOutputStreamDescriptionSummary {
  StreamName: String!
  StreamARN: String!
  StreamStatus: String!
  RetentionPeriodHours: Int!
  StreamCreationTimestamp: Date!
  EnhancedMonitoring: [AwsKinesisSw]!
  EncryptionType: String
  KeyId: String
  OpenShardCount: Int!
  ConsumerCount: Int
}

input AwsKinesisDisableEnhancedMonitoringInput {
  StreamName: String!
  ShardLevelMetrics: [String]!
}

input AwsKinesisEnableEnhancedMonitoringInput {
  StreamName: String!
  ShardLevelMetrics: [String]!
}

input AwsKinesisGetRecordsInput {
  ShardIterator: String!
  Limit: Int
}

type AwsKinesisGetRecordsOutput {
  Records: [AwsKinesisGetRecordsOutputRecords]!
  NextShardIterator: String
  MillisBehindLatest: JSON
}

type AwsKinesisGetRecordsOutputRecords {
  SequenceNumber: String!
  ApproximateArrivalTimestamp: Date
  Data: JSON!
  PartitionKey: String!
  EncryptionType: String
}

input AwsKinesisGetShardIteratorInput {
  StreamName: String!
  ShardId: String!
  ShardIteratorType: String!
  StartingSequenceNumber: String
  Timestamp: Date
}

type AwsKinesisGetShardIteratorOutput {
  ShardIterator: String
}

input AwsKinesisIncreaseStreamRetentionPeriodInput {
  StreamName: String!
  RetentionPeriodHours: Int!
}

input AwsKinesisListShardsInput {
  StreamName: String
  NextToken: String
  ExclusiveStartShardId: String
  MaxResults: Int
  StreamCreationTimestamp: Date
}

type AwsKinesisListShardsOutput {
  Shards: [AwsKinesisSp]
  NextToken: String
}

input AwsKinesisListStreamConsumersInput {
  StreamARN: String!
  NextToken: String
  MaxResults: Int
  StreamCreationTimestamp: Date
}

type AwsKinesisListStreamConsumersOutput {
  Consumers: [AwsKinesisS1y]
  NextToken: String
}

input AwsKinesisListStreamsInput {
  Limit: Int
  ExclusiveStartStreamName: String
}

type AwsKinesisListStreamsOutput {
  StreamNames: [String]!
  HasMoreStreams: Boolean!
}

input AwsKinesisListTagsForStreamInput {
  StreamName: String!
  ExclusiveStartTagKey: String
  Limit: Int
}

type AwsKinesisListTagsForStreamOutput {
  Tags: [AwsKinesisListTagsForStreamOutputTags]!
  HasMoreTags: Boolean!
}

type AwsKinesisListTagsForStreamOutputTags {
  Key: String!
  Value: String
}

input AwsKinesisMergeShardsInput {
  StreamName: String!
  ShardToMerge: String!
  AdjacentShardToMerge: String!
}

input AwsKinesisPutRecordInput {
  StreamName: String!
  Data: JSON!
  PartitionKey: String!
  ExplicitHashKey: String
  SequenceNumberForOrdering: String
}

type AwsKinesisPutRecordOutput {
  ShardId: String!
  SequenceNumber: String!
  EncryptionType: String
}

input AwsKinesisPutRecordsInput {
  Records: [AwsKinesisPutRecordsRecordsInput]!
  StreamName: String!
}

type AwsKinesisPutRecordsOutput {
  FailedRecordCount: Int
  Records: [AwsKinesisPutRecordsOutputRecords]!
  EncryptionType: String
}

type AwsKinesisPutRecordsOutputRecords {
  SequenceNumber: String
  ShardId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsKinesisPutRecordsRecordsInput {
  Data: JSON!
  ExplicitHashKey: String
  PartitionKey: String!
}

input AwsKinesisRegisterStreamConsumerInput {
  StreamARN: String!
  ConsumerName: String!
}

type AwsKinesisRegisterStreamConsumerOutput {
  Consumer: AwsKinesisS1y!
}

input AwsKinesisRemoveTagsFromStreamInput {
  StreamName: String!
  TagKeys: [String]!
}

type AwsKinesisS1y {
  ConsumerName: String!
  ConsumerARN: String!
  ConsumerStatus: String!
  ConsumerCreationTimestamp: Date!
}

type AwsKinesisSp {
  ShardId: String!
  ParentShardId: String
  AdjacentParentShardId: String
  HashKeyRange: AwsKinesisSpHashKeyRange!
  SequenceNumberRange: AwsKinesisSpSequenceNumberRange!
}

type AwsKinesisSpHashKeyRange {
  StartingHashKey: String!
  EndingHashKey: String!
}

input AwsKinesisSplitShardInput {
  StreamName: String!
  ShardToSplit: String!
  NewStartingHashKey: String!
}

type AwsKinesisSpSequenceNumberRange {
  StartingSequenceNumber: String!
  EndingSequenceNumber: String
}

input AwsKinesisStartStreamEncryptionInput {
  StreamName: String!
  EncryptionType: String!
  KeyId: String!
}

input AwsKinesisStopStreamEncryptionInput {
  StreamName: String!
  EncryptionType: String!
  KeyId: String!
}

type AwsKinesisSw {
  ShardLevelMetrics: [String]
}

input AwsKinesisUpdateShardCountInput {
  StreamName: String!
  TargetShardCount: Int!
  ScalingType: String!
}

type AwsKinesisUpdateShardCountOutput {
  StreamName: String
  CurrentShardCount: Int
  TargetShardCount: Int
}

"""Amazon Kinesis Video Streams (2017-09-30)"""
type AwsKinesisVideo {
  createStream(input: AwsKinesisVideoCreateStreamInput!, config: AwsConfig): AwsKinesisVideoCreateStreamOutput
  deleteStream(input: AwsKinesisVideoDeleteStreamInput!, config: AwsConfig): JSON
  describeStream(input: AwsKinesisVideoDescribeStreamInput, config: AwsConfig): AwsKinesisVideoDescribeStreamOutput
  getDataEndpoint(input: AwsKinesisVideoGetDataEndpointInput!, config: AwsConfig): AwsKinesisVideoGetDataEndpointOutput
  listStreams(input: AwsKinesisVideoListStreamsInput, config: AwsConfig): AwsKinesisVideoListStreamsOutput
  listTagsForStream(input: AwsKinesisVideoListTagsForStreamInput, config: AwsConfig): AwsKinesisVideoListTagsForStreamOutput
  tagStream(input: AwsKinesisVideoTagStreamInput!, config: AwsConfig): JSON
  untagStream(input: AwsKinesisVideoUntagStreamInput!, config: AwsConfig): JSON
  updateDataRetention(input: AwsKinesisVideoUpdateDataRetentionInput!, config: AwsConfig): JSON
  updateStream(input: AwsKinesisVideoUpdateStreamInput!, config: AwsConfig): JSON
}

"""Amazon Kinesis Video Streams Archived Media (2017-09-30)"""
type AwsKinesisVideoArchivedMedia {
  getDASHStreamingSessionURL(input: AwsKinesisVideoArchivedMediaGetDASHStreamingSessionURLInput, config: AwsConfig): AwsKinesisVideoArchivedMediaGetDASHStreamingSessionURLOutput
  getHLSStreamingSessionURL(input: AwsKinesisVideoArchivedMediaGetHLSStreamingSessionURLInput, config: AwsConfig): AwsKinesisVideoArchivedMediaGetHLSStreamingSessionURLOutput
  getMediaForFragmentList(input: AwsKinesisVideoArchivedMediaGetMediaForFragmentListInput!, config: AwsConfig): AwsKinesisVideoArchivedMediaGetMediaForFragmentListOutput
  listFragments(input: AwsKinesisVideoArchivedMediaListFragmentsInput!, config: AwsConfig): AwsKinesisVideoArchivedMediaListFragmentsOutput
}

input AwsKinesisVideoArchivedMediaGetDASHStreamingSessionURLDASHFragmentSelectorInput {
  FragmentSelectorType: String
  TimestampRange: AwsKinesisVideoArchivedMediaGetDASHStreamingSessionURLDASHFragmentSelectorTimestampRangeInput
}

input AwsKinesisVideoArchivedMediaGetDASHStreamingSessionURLDASHFragmentSelectorTimestampRangeInput {
  StartTimestamp: Date
  EndTimestamp: Date
}

input AwsKinesisVideoArchivedMediaGetDASHStreamingSessionURLInput {
  StreamName: String
  StreamARN: String
  PlaybackMode: String
  DisplayFragmentTimestamp: String
  DisplayFragmentNumber: String
  DASHFragmentSelector: AwsKinesisVideoArchivedMediaGetDASHStreamingSessionURLDASHFragmentSelectorInput
  Expires: Int
  MaxManifestFragmentResults: JSON
}

type AwsKinesisVideoArchivedMediaGetDASHStreamingSessionURLOutput {
  DASHStreamingSessionURL: String
}

input AwsKinesisVideoArchivedMediaGetHLSStreamingSessionURLHLSFragmentSelectorInput {
  FragmentSelectorType: String
  TimestampRange: AwsKinesisVideoArchivedMediaGetHLSStreamingSessionURLHLSFragmentSelectorTimestampRangeInput
}

input AwsKinesisVideoArchivedMediaGetHLSStreamingSessionURLHLSFragmentSelectorTimestampRangeInput {
  StartTimestamp: Date
  EndTimestamp: Date
}

input AwsKinesisVideoArchivedMediaGetHLSStreamingSessionURLInput {
  StreamName: String
  StreamARN: String
  PlaybackMode: String
  HLSFragmentSelector: AwsKinesisVideoArchivedMediaGetHLSStreamingSessionURLHLSFragmentSelectorInput
  ContainerFormat: String
  DiscontinuityMode: String
  DisplayFragmentTimestamp: String
  Expires: Int
  MaxMediaPlaylistFragmentResults: JSON
}

type AwsKinesisVideoArchivedMediaGetHLSStreamingSessionURLOutput {
  HLSStreamingSessionURL: String
}

input AwsKinesisVideoArchivedMediaGetMediaForFragmentListInput {
  StreamName: String!
  Fragments: [String]!
}

type AwsKinesisVideoArchivedMediaGetMediaForFragmentListOutput {
  ContentType: String
  Payload: JSON
}

input AwsKinesisVideoArchivedMediaListFragmentsFragmentSelectorInput {
  FragmentSelectorType: String!
  TimestampRange: AwsKinesisVideoArchivedMediaListFragmentsFragmentSelectorTimestampRangeInput!
}

input AwsKinesisVideoArchivedMediaListFragmentsFragmentSelectorTimestampRangeInput {
  StartTimestamp: Date!
  EndTimestamp: Date!
}

input AwsKinesisVideoArchivedMediaListFragmentsInput {
  StreamName: String!
  MaxResults: JSON
  NextToken: String
  FragmentSelector: AwsKinesisVideoArchivedMediaListFragmentsFragmentSelectorInput
}

type AwsKinesisVideoArchivedMediaListFragmentsOutput {
  Fragments: [AwsKinesisVideoArchivedMediaListFragmentsOutputFragments]
  NextToken: String
}

type AwsKinesisVideoArchivedMediaListFragmentsOutputFragments {
  FragmentNumber: String
  FragmentSizeInBytes: JSON
  ProducerTimestamp: Date
  ServerTimestamp: Date
  FragmentLengthInMilliseconds: JSON
}

input AwsKinesisVideoCreateStreamInput {
  DeviceName: String
  StreamName: String!
  MediaType: String
  KmsKeyId: String
  DataRetentionInHours: Int
  Tags: JSON
}

type AwsKinesisVideoCreateStreamOutput {
  StreamARN: String
}

input AwsKinesisVideoDeleteStreamInput {
  StreamARN: String!
  CurrentVersion: String
}

input AwsKinesisVideoDescribeStreamInput {
  StreamName: String
  StreamARN: String
}

type AwsKinesisVideoDescribeStreamOutput {
  StreamInfo: AwsKinesisVideoSh
}

input AwsKinesisVideoGetDataEndpointInput {
  StreamName: String
  StreamARN: String
  APIName: String!
}

type AwsKinesisVideoGetDataEndpointOutput {
  DataEndpoint: String
}

input AwsKinesisVideoListStreamsInput {
  MaxResults: Int
  NextToken: String
  StreamNameCondition: AwsKinesisVideoListStreamsStreamNameConditionInput
}

type AwsKinesisVideoListStreamsOutput {
  StreamInfoList: [AwsKinesisVideoSh]
  NextToken: String
}

input AwsKinesisVideoListStreamsStreamNameConditionInput {
  ComparisonOperator: String
  ComparisonValue: String
}

input AwsKinesisVideoListTagsForStreamInput {
  NextToken: String
  StreamARN: String
  StreamName: String
}

type AwsKinesisVideoListTagsForStreamOutput {
  NextToken: String
  Tags: JSON
}

"""Amazon Kinesis Video Streams Media (2017-09-30)"""
type AwsKinesisVideoMedia {
  getMedia(input: AwsKinesisVideoMediaGetMediaInput!, config: AwsConfig): AwsKinesisVideoMediaGetMediaOutput
}

input AwsKinesisVideoMediaGetMediaInput {
  StreamName: String
  StreamARN: String
  StartSelector: AwsKinesisVideoMediaGetMediaStartSelectorInput!
}

type AwsKinesisVideoMediaGetMediaOutput {
  ContentType: String
  Payload: JSON
}

input AwsKinesisVideoMediaGetMediaStartSelectorInput {
  StartSelectorType: String!
  AfterFragmentNumber: String
  StartTimestamp: Date
  ContinuationToken: String
}

type AwsKinesisVideoSh {
  DeviceName: String
  StreamName: String
  StreamARN: String
  MediaType: String
  KmsKeyId: String
  Version: String
  Status: String
  CreationTime: Date
  DataRetentionInHours: Int
}

input AwsKinesisVideoTagStreamInput {
  StreamARN: String
  StreamName: String
  Tags: JSON!
}

input AwsKinesisVideoUntagStreamInput {
  StreamARN: String
  StreamName: String
  TagKeyList: [String]!
}

input AwsKinesisVideoUpdateDataRetentionInput {
  StreamName: String
  StreamARN: String
  CurrentVersion: String!
  Operation: String!
  DataRetentionChangeInHours: Int!
}

input AwsKinesisVideoUpdateStreamInput {
  StreamName: String
  StreamARN: String
  CurrentVersion: String!
  DeviceName: String
  MediaType: String
}

"""AWS Key Management Service (2014-11-01)"""
type AwsKMS {
  cancelKeyDeletion(input: AwsKMSCancelKeyDeletionInput!, config: AwsConfig): AwsKMSCancelKeyDeletionOutput
  connectCustomKeyStore(input: AwsKMSConnectCustomKeyStoreInput!, config: AwsConfig): JSON
  createAlias(input: AwsKMSCreateAliasInput!, config: AwsConfig): JSON
  createCustomKeyStore(input: AwsKMSCreateCustomKeyStoreInput!, config: AwsConfig): AwsKMSCreateCustomKeyStoreOutput
  createGrant(input: AwsKMSCreateGrantInput!, config: AwsConfig): AwsKMSCreateGrantOutput
  createKey(input: AwsKMSCreateKeyInput, config: AwsConfig): AwsKMSCreateKeyOutput
  decrypt(input: AwsKMSDecryptInput!, config: AwsConfig): AwsKMSDecryptOutput
  deleteAlias(input: AwsKMSDeleteAliasInput!, config: AwsConfig): JSON
  deleteCustomKeyStore(input: AwsKMSDeleteCustomKeyStoreInput!, config: AwsConfig): JSON
  deleteImportedKeyMaterial(input: AwsKMSDeleteImportedKeyMaterialInput!, config: AwsConfig): JSON
  describeCustomKeyStores(input: AwsKMSDescribeCustomKeyStoresInput, config: AwsConfig): AwsKMSDescribeCustomKeyStoresOutput
  describeKey(input: AwsKMSDescribeKeyInput!, config: AwsConfig): AwsKMSDescribeKeyOutput
  disableKey(input: AwsKMSDisableKeyInput!, config: AwsConfig): JSON
  disableKeyRotation(input: AwsKMSDisableKeyRotationInput!, config: AwsConfig): JSON
  disconnectCustomKeyStore(input: AwsKMSDisconnectCustomKeyStoreInput!, config: AwsConfig): JSON
  enableKey(input: AwsKMSEnableKeyInput!, config: AwsConfig): JSON
  enableKeyRotation(input: AwsKMSEnableKeyRotationInput!, config: AwsConfig): JSON
  encrypt(input: AwsKMSEncryptInput!, config: AwsConfig): AwsKMSEncryptOutput
  generateDataKey(input: AwsKMSGenerateDataKeyInput!, config: AwsConfig): AwsKMSGenerateDataKeyOutput
  generateDataKeyWithoutPlaintext(input: AwsKMSGenerateDataKeyWithoutPlaintextInput!, config: AwsConfig): AwsKMSGenerateDataKeyWithoutPlaintextOutput
  generateRandom(input: AwsKMSGenerateRandomInput, config: AwsConfig): AwsKMSGenerateRandomOutput
  getKeyPolicy(input: AwsKMSGetKeyPolicyInput!, config: AwsConfig): AwsKMSGetKeyPolicyOutput
  getKeyRotationStatus(input: AwsKMSGetKeyRotationStatusInput!, config: AwsConfig): AwsKMSGetKeyRotationStatusOutput
  getParametersForImport(input: AwsKMSGetParametersForImportInput!, config: AwsConfig): AwsKMSGetParametersForImportOutput
  importKeyMaterial(input: AwsKMSImportKeyMaterialInput!, config: AwsConfig): JSON
  listAliases(input: AwsKMSListAliasesInput, config: AwsConfig): AwsKMSListAliasesOutput
  listGrants(input: AwsKMSListGrantsInput!, config: AwsConfig): JSON
  listKeyPolicies(input: AwsKMSListKeyPoliciesInput!, config: AwsConfig): AwsKMSListKeyPoliciesOutput
  listKeys(input: AwsKMSListKeysInput, config: AwsConfig): AwsKMSListKeysOutput
  listResourceTags(input: AwsKMSListResourceTagsInput!, config: AwsConfig): AwsKMSListResourceTagsOutput
  listRetirableGrants(input: AwsKMSListRetirableGrantsInput!, config: AwsConfig): JSON
  putKeyPolicy(input: AwsKMSPutKeyPolicyInput!, config: AwsConfig): JSON
  reEncrypt(input: AwsKMSReEncryptInput!, config: AwsConfig): AwsKMSReEncryptOutput
  retireGrant(input: AwsKMSRetireGrantInput, config: AwsConfig): JSON
  revokeGrant(input: AwsKMSRevokeGrantInput!, config: AwsConfig): JSON
  scheduleKeyDeletion(input: AwsKMSScheduleKeyDeletionInput!, config: AwsConfig): AwsKMSScheduleKeyDeletionOutput
  tagResource(input: AwsKMSTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsKMSUntagResourceInput!, config: AwsConfig): JSON
  updateAlias(input: AwsKMSUpdateAliasInput!, config: AwsConfig): JSON
  updateCustomKeyStore(input: AwsKMSUpdateCustomKeyStoreInput!, config: AwsConfig): JSON
  updateKeyDescription(input: AwsKMSUpdateKeyDescriptionInput!, config: AwsConfig): JSON
}

input AwsKMSCancelKeyDeletionInput {
  KeyId: String!
}

type AwsKMSCancelKeyDeletionOutput {
  KeyId: String
}

input AwsKMSConnectCustomKeyStoreInput {
  CustomKeyStoreId: String!
}

input AwsKMSCreateAliasInput {
  AliasName: String!
  TargetKeyId: String!
}

input AwsKMSCreateCustomKeyStoreInput {
  CustomKeyStoreName: String!
  CloudHsmClusterId: String!
  TrustAnchorCertificate: String!
  KeyStorePassword: String!
}

type AwsKMSCreateCustomKeyStoreOutput {
  CustomKeyStoreId: String
}

input AwsKMSCreateGrantInput {
  KeyId: String!
  GranteePrincipal: String!
  RetiringPrincipal: String
  Operations: [String]!
  Constraints: AwsKMSSjInput
  GrantTokens: [String]
  Name: String
}

type AwsKMSCreateGrantOutput {
  GrantToken: String
  GrantId: String
}

input AwsKMSCreateKeyInput {
  Policy: String
  Description: String
  KeyUsage: String
  Origin: String
  CustomKeyStoreId: String
  BypassPolicyLockoutSafetyCheck: Boolean
  Tags: [AwsKMSSyInput]
}

type AwsKMSCreateKeyOutput {
  KeyMetadata: AwsKMSS13
}

input AwsKMSDecryptInput {
  CiphertextBlob: JSON!
  EncryptionContext: JSON
  GrantTokens: [String]
}

type AwsKMSDecryptOutput {
  KeyId: String
  Plaintext: JSON
}

input AwsKMSDeleteAliasInput {
  AliasName: String!
}

input AwsKMSDeleteCustomKeyStoreInput {
  CustomKeyStoreId: String!
}

input AwsKMSDeleteImportedKeyMaterialInput {
  KeyId: String!
}

input AwsKMSDescribeCustomKeyStoresInput {
  CustomKeyStoreId: String
  CustomKeyStoreName: String
  Limit: Int
  Marker: String
}

type AwsKMSDescribeCustomKeyStoresOutput {
  CustomKeyStores: [AwsKMSDescribeCustomKeyStoresOutputCustomKeyStores]
  NextMarker: String
  Truncated: Boolean
}

type AwsKMSDescribeCustomKeyStoresOutputCustomKeyStores {
  CustomKeyStoreId: String
  CustomKeyStoreName: String
  CloudHsmClusterId: String
  TrustAnchorCertificate: String
  ConnectionState: String
  ConnectionErrorCode: String
  CreationDate: Date
}

input AwsKMSDescribeKeyInput {
  KeyId: String!
  GrantTokens: [String]
}

type AwsKMSDescribeKeyOutput {
  KeyMetadata: AwsKMSS13
}

input AwsKMSDisableKeyInput {
  KeyId: String!
}

input AwsKMSDisableKeyRotationInput {
  KeyId: String!
}

input AwsKMSDisconnectCustomKeyStoreInput {
  CustomKeyStoreId: String!
}

input AwsKMSEnableKeyInput {
  KeyId: String!
}

input AwsKMSEnableKeyRotationInput {
  KeyId: String!
}

input AwsKMSEncryptInput {
  KeyId: String!
  Plaintext: JSON!
  EncryptionContext: JSON
  GrantTokens: [String]
}

type AwsKMSEncryptOutput {
  CiphertextBlob: JSON
  KeyId: String
}

input AwsKMSGenerateDataKeyInput {
  KeyId: String!
  EncryptionContext: JSON
  NumberOfBytes: Int
  KeySpec: String
  GrantTokens: [String]
}

type AwsKMSGenerateDataKeyOutput {
  CiphertextBlob: JSON
  Plaintext: JSON
  KeyId: String
}

input AwsKMSGenerateDataKeyWithoutPlaintextInput {
  KeyId: String!
  EncryptionContext: JSON
  KeySpec: String
  NumberOfBytes: Int
  GrantTokens: [String]
}

type AwsKMSGenerateDataKeyWithoutPlaintextOutput {
  CiphertextBlob: JSON
  KeyId: String
}

input AwsKMSGenerateRandomInput {
  NumberOfBytes: Int
  CustomKeyStoreId: String
}

type AwsKMSGenerateRandomOutput {
  Plaintext: JSON
}

input AwsKMSGetKeyPolicyInput {
  KeyId: String!
  PolicyName: String!
}

type AwsKMSGetKeyPolicyOutput {
  Policy: String
}

input AwsKMSGetKeyRotationStatusInput {
  KeyId: String!
}

type AwsKMSGetKeyRotationStatusOutput {
  KeyRotationEnabled: Boolean
}

input AwsKMSGetParametersForImportInput {
  KeyId: String!
  WrappingAlgorithm: String!
  WrappingKeySpec: String!
}

type AwsKMSGetParametersForImportOutput {
  KeyId: String
  ImportToken: JSON
  PublicKey: JSON
  ParametersValidTo: Date
}

input AwsKMSImportKeyMaterialInput {
  KeyId: String!
  ImportToken: JSON!
  EncryptedKeyMaterial: JSON!
  ValidTo: Date
  ExpirationModel: String
}

input AwsKMSListAliasesInput {
  KeyId: String
  Limit: Int
  Marker: String
}

type AwsKMSListAliasesOutput {
  Aliases: [AwsKMSListAliasesOutputAliases]
  NextMarker: String
  Truncated: Boolean
}

type AwsKMSListAliasesOutputAliases {
  AliasName: String
  AliasArn: String
  TargetKeyId: String
}

input AwsKMSListGrantsInput {
  Limit: Int
  Marker: String
  KeyId: String!
}

input AwsKMSListKeyPoliciesInput {
  KeyId: String!
  Limit: Int
  Marker: String
}

type AwsKMSListKeyPoliciesOutput {
  PolicyNames: [String]
  NextMarker: String
  Truncated: Boolean
}

input AwsKMSListKeysInput {
  Limit: Int
  Marker: String
}

type AwsKMSListKeysOutput {
  Keys: [AwsKMSListKeysOutputKeys]
  NextMarker: String
  Truncated: Boolean
}

type AwsKMSListKeysOutputKeys {
  KeyId: String
  KeyArn: String
}

input AwsKMSListResourceTagsInput {
  KeyId: String!
  Limit: Int
  Marker: String
}

type AwsKMSListResourceTagsOutput {
  Tags: [AwsKMSSy]
  NextMarker: String
  Truncated: Boolean
}

input AwsKMSListRetirableGrantsInput {
  Limit: Int
  Marker: String
  RetiringPrincipal: String!
}

input AwsKMSPutKeyPolicyInput {
  KeyId: String!
  PolicyName: String!
  Policy: String!
  BypassPolicyLockoutSafetyCheck: Boolean
}

input AwsKMSReEncryptInput {
  CiphertextBlob: JSON!
  SourceEncryptionContext: JSON
  DestinationKeyId: String!
  DestinationEncryptionContext: JSON
  GrantTokens: [String]
}

type AwsKMSReEncryptOutput {
  CiphertextBlob: JSON
  SourceKeyId: String
  KeyId: String
}

input AwsKMSRetireGrantInput {
  GrantToken: String
  KeyId: String
  GrantId: String
}

input AwsKMSRevokeGrantInput {
  KeyId: String!
  GrantId: String!
}

type AwsKMSS13 {
  AWSAccountId: String
  KeyId: String!
  Arn: String
  CreationDate: Date
  Enabled: Boolean
  Description: String
  KeyUsage: String
  KeyState: String
  DeletionDate: Date
  ValidTo: Date
  Origin: String
  CustomKeyStoreId: String
  CloudHsmClusterId: String
  ExpirationModel: String
  KeyManager: String
}

input AwsKMSScheduleKeyDeletionInput {
  KeyId: String!
  PendingWindowInDays: Int
}

type AwsKMSScheduleKeyDeletionOutput {
  KeyId: String
  DeletionDate: Date
}

input AwsKMSSjInput {
  EncryptionContextSubset: JSON
  EncryptionContextEquals: JSON
}

type AwsKMSSy {
  TagKey: String!
  TagValue: String!
}

input AwsKMSSyInput {
  TagKey: String!
  TagValue: String!
}

input AwsKMSTagResourceInput {
  KeyId: String!
  Tags: [AwsKMSSyInput]!
}

input AwsKMSUntagResourceInput {
  KeyId: String!
  TagKeys: [String]!
}

input AwsKMSUpdateAliasInput {
  AliasName: String!
  TargetKeyId: String!
}

input AwsKMSUpdateCustomKeyStoreInput {
  CustomKeyStoreId: String!
  NewCustomKeyStoreName: String
  KeyStorePassword: String
  CloudHsmClusterId: String
}

input AwsKMSUpdateKeyDescriptionInput {
  KeyId: String!
  Description: String!
}

"""AWS Lambda (2015-03-31)"""
type AwsLambda {
  addLayerVersionPermission(input: AwsLambdaAddLayerVersionPermissionInput!, config: AwsConfig): AwsLambdaAddLayerVersionPermissionOutput
  addPermission(input: AwsLambdaAddPermissionInput!, config: AwsConfig): AwsLambdaAddPermissionOutput
  createAlias(input: AwsLambdaCreateAliasInput!, config: AwsConfig): JSON
  createEventSourceMapping(input: AwsLambdaCreateEventSourceMappingInput!, config: AwsConfig): JSON
  createFunction(input: AwsLambdaCreateFunctionInput!, config: AwsConfig): JSON
  deleteAlias(input: AwsLambdaDeleteAliasInput!, config: AwsConfig): JSON
  deleteEventSourceMapping(input: AwsLambdaDeleteEventSourceMappingInput!, config: AwsConfig): JSON
  deleteFunction(input: AwsLambdaDeleteFunctionInput!, config: AwsConfig): JSON
  deleteFunctionConcurrency(input: AwsLambdaDeleteFunctionConcurrencyInput!, config: AwsConfig): JSON
  deleteLayerVersion(input: AwsLambdaDeleteLayerVersionInput!, config: AwsConfig): JSON
  getAccountSettings(input: JSON, config: AwsConfig): AwsLambdaGetAccountSettingsOutput
  getAlias(input: AwsLambdaGetAliasInput!, config: AwsConfig): JSON
  getEventSourceMapping(input: AwsLambdaGetEventSourceMappingInput!, config: AwsConfig): JSON
  getFunction(input: AwsLambdaGetFunctionInput!, config: AwsConfig): AwsLambdaGetFunctionOutput
  getFunctionConfiguration(input: AwsLambdaGetFunctionConfigurationInput!, config: AwsConfig): JSON
  getLayerVersion(input: AwsLambdaGetLayerVersionInput!, config: AwsConfig): JSON
  getLayerVersionByArn(input: AwsLambdaGetLayerVersionByArnInput!, config: AwsConfig): JSON
  getLayerVersionPolicy(input: AwsLambdaGetLayerVersionPolicyInput!, config: AwsConfig): AwsLambdaGetLayerVersionPolicyOutput
  getPolicy(input: AwsLambdaGetPolicyInput!, config: AwsConfig): AwsLambdaGetPolicyOutput
  invoke(input: AwsLambdaInvokeInput!, config: AwsConfig): AwsLambdaInvokeOutput
  invokeAsync(input: AwsLambdaInvokeAsyncInput!, config: AwsConfig): AwsLambdaInvokeAsyncOutput
  listAliases(input: AwsLambdaListAliasesInput!, config: AwsConfig): AwsLambdaListAliasesOutput
  listEventSourceMappings(input: AwsLambdaListEventSourceMappingsInput, config: AwsConfig): AwsLambdaListEventSourceMappingsOutput
  listFunctions(input: AwsLambdaListFunctionsInput, config: AwsConfig): AwsLambdaListFunctionsOutput
  listLayerVersions(input: AwsLambdaListLayerVersionsInput!, config: AwsConfig): AwsLambdaListLayerVersionsOutput
  listLayers(input: AwsLambdaListLayersInput, config: AwsConfig): AwsLambdaListLayersOutput
  listTags(input: AwsLambdaListTagsInput!, config: AwsConfig): AwsLambdaListTagsOutput
  listVersionsByFunction(input: AwsLambdaListVersionsByFunctionInput!, config: AwsConfig): AwsLambdaListVersionsByFunctionOutput
  publishLayerVersion(input: AwsLambdaPublishLayerVersionInput!, config: AwsConfig): AwsLambdaPublishLayerVersionOutput
  publishVersion(input: AwsLambdaPublishVersionInput!, config: AwsConfig): JSON
  putFunctionConcurrency(input: AwsLambdaPutFunctionConcurrencyInput!, config: AwsConfig): JSON
  removeLayerVersionPermission(input: AwsLambdaRemoveLayerVersionPermissionInput!, config: AwsConfig): JSON
  removePermission(input: AwsLambdaRemovePermissionInput!, config: AwsConfig): JSON
  tagResource(input: AwsLambdaTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsLambdaUntagResourceInput!, config: AwsConfig): JSON
  updateAlias(input: AwsLambdaUpdateAliasInput!, config: AwsConfig): JSON
  updateEventSourceMapping(input: AwsLambdaUpdateEventSourceMappingInput!, config: AwsConfig): JSON
  updateFunctionCode(input: AwsLambdaUpdateFunctionCodeInput!, config: AwsConfig): JSON
  updateFunctionConfiguration(input: AwsLambdaUpdateFunctionConfigurationInput!, config: AwsConfig): JSON
}

input AwsLambdaAddLayerVersionPermissionInput {
  LayerName: String!
  VersionNumber: JSON!
  StatementId: String!
  Action: String!
  Principal: String!
  OrganizationId: String
  RevisionId: String
}

type AwsLambdaAddLayerVersionPermissionOutput {
  Statement: String
  RevisionId: String
}

input AwsLambdaAddPermissionInput {
  FunctionName: String!
  StatementId: String!
  Action: String!
  Principal: String!
  SourceArn: String
  SourceAccount: String
  EventSourceToken: String
  Qualifier: String
  RevisionId: String
}

type AwsLambdaAddPermissionOutput {
  Statement: String
}

input AwsLambdaCreateAliasInput {
  FunctionName: String!
  Name: String!
  FunctionVersion: String!
  Description: String
  RoutingConfig: AwsLambdaSnInput
}

input AwsLambdaCreateEventSourceMappingInput {
  EventSourceArn: String!
  FunctionName: String!
  Enabled: Boolean
  BatchSize: Int
  StartingPosition: String
  StartingPositionTimestamp: Date
}

input AwsLambdaCreateFunctionCodeInput {
  ZipFile: JSON
  S3Bucket: String
  S3Key: String
  S3ObjectVersion: String
}

input AwsLambdaCreateFunctionInput {
  FunctionName: String!
  Runtime: String!
  Role: String!
  Handler: String!
  Code: AwsLambdaCreateFunctionCodeInput!
  Description: String
  Timeout: Int
  MemorySize: Int
  Publish: Boolean
  VpcConfig: AwsLambdaS1bInput
  DeadLetterConfig: AwsLambdaS1gInput
  Environment: AwsLambdaS1iInput
  KMSKeyArn: String
  TracingConfig: AwsLambdaS1nInput
  Tags: JSON
  Layers: [String]
}

input AwsLambdaDeleteAliasInput {
  FunctionName: String!
  Name: String!
}

input AwsLambdaDeleteEventSourceMappingInput {
  UUID: String!
}

input AwsLambdaDeleteFunctionConcurrencyInput {
  FunctionName: String!
}

input AwsLambdaDeleteFunctionInput {
  FunctionName: String!
  Qualifier: String
}

input AwsLambdaDeleteLayerVersionInput {
  LayerName: String!
  VersionNumber: JSON!
}

type AwsLambdaGetAccountSettingsOutput {
  AccountLimit: AwsLambdaGetAccountSettingsOutputAccountLimit
  AccountUsage: AwsLambdaGetAccountSettingsOutputAccountUsage
}

type AwsLambdaGetAccountSettingsOutputAccountLimit {
  TotalCodeSize: JSON
  CodeSizeUnzipped: JSON
  CodeSizeZipped: JSON
  ConcurrentExecutions: Int
  UnreservedConcurrentExecutions: Int
}

type AwsLambdaGetAccountSettingsOutputAccountUsage {
  TotalCodeSize: JSON
  FunctionCount: JSON
}

input AwsLambdaGetAliasInput {
  FunctionName: String!
  Name: String!
}

input AwsLambdaGetEventSourceMappingInput {
  UUID: String!
}

input AwsLambdaGetFunctionConfigurationInput {
  FunctionName: String!
  Qualifier: String
}

input AwsLambdaGetFunctionInput {
  FunctionName: String!
  Qualifier: String
}

type AwsLambdaGetFunctionOutput {
  Configuration: AwsLambdaS1u
  Code: AwsLambdaGetFunctionOutputCode
  Tags: JSON
  Concurrency: AwsLambdaS2n
}

type AwsLambdaGetFunctionOutputCode {
  RepositoryType: String
  Location: String
}

input AwsLambdaGetLayerVersionByArnInput {
  Arn: String!
}

input AwsLambdaGetLayerVersionInput {
  LayerName: String!
  VersionNumber: JSON!
}

input AwsLambdaGetLayerVersionPolicyInput {
  LayerName: String!
  VersionNumber: JSON!
}

type AwsLambdaGetLayerVersionPolicyOutput {
  Policy: String
  RevisionId: String
}

input AwsLambdaGetPolicyInput {
  FunctionName: String!
  Qualifier: String
}

type AwsLambdaGetPolicyOutput {
  Policy: String
  RevisionId: String
}

input AwsLambdaInvokeAsyncInput {
  FunctionName: String!
  InvokeArgs: JSON!
}

type AwsLambdaInvokeAsyncOutput {
  Status: Int
}

input AwsLambdaInvokeInput {
  FunctionName: String!
  InvocationType: String
  LogType: String
  ClientContext: String
  Payload: JSON
  Qualifier: String
}

type AwsLambdaInvokeOutput {
  StatusCode: Int
  FunctionError: String
  LogResult: String
  Payload: JSON
  ExecutedVersion: String
}

input AwsLambdaListAliasesInput {
  FunctionName: String!
  FunctionVersion: String
  Marker: String
  MaxItems: Int
}

type AwsLambdaListAliasesOutput {
  NextMarker: String
  Aliases: [AwsLambdaSr]
}

input AwsLambdaListEventSourceMappingsInput {
  EventSourceArn: String
  FunctionName: String
  Marker: String
  MaxItems: Int
}

type AwsLambdaListEventSourceMappingsOutput {
  NextMarker: String
  EventSourceMappings: [AwsLambdaSy]
}

input AwsLambdaListFunctionsInput {
  MasterRegion: String
  FunctionVersion: String
  Marker: String
  MaxItems: Int
}

type AwsLambdaListFunctionsOutput {
  NextMarker: String
  Functions: [AwsLambdaS1u]
}

input AwsLambdaListLayersInput {
  CompatibleRuntime: String
  Marker: String
  MaxItems: Int
}

type AwsLambdaListLayersOutput {
  NextMarker: String
  Layers: [AwsLambdaListLayersOutputLayers]
}

type AwsLambdaListLayersOutputLayers {
  LayerName: String
  LayerArn: String
  LatestMatchingVersion: AwsLambdaS3p
}

input AwsLambdaListLayerVersionsInput {
  CompatibleRuntime: String
  LayerName: String!
  Marker: String
  MaxItems: Int
}

type AwsLambdaListLayerVersionsOutput {
  NextMarker: String
  LayerVersions: [AwsLambdaS3p]
}

input AwsLambdaListTagsInput {
  Resource: String!
}

type AwsLambdaListTagsOutput {
  Tags: JSON
}

input AwsLambdaListVersionsByFunctionInput {
  FunctionName: String!
  Marker: String
  MaxItems: Int
}

type AwsLambdaListVersionsByFunctionOutput {
  NextMarker: String
  Versions: [AwsLambdaS1u]
}

input AwsLambdaPublishLayerVersionContentInput {
  S3Bucket: String
  S3Key: String
  S3ObjectVersion: String
  ZipFile: JSON
}

input AwsLambdaPublishLayerVersionInput {
  LayerName: String!
  Description: String
  Content: AwsLambdaPublishLayerVersionContentInput!
  CompatibleRuntimes: [String]
  LicenseInfo: String
}

type AwsLambdaPublishLayerVersionOutput {
  Content: AwsLambdaS2s
  LayerArn: String
  LayerVersionArn: String
  Description: String
  CreatedDate: String
  Version: JSON
  CompatibleRuntimes: [String]
  LicenseInfo: String
}

input AwsLambdaPublishVersionInput {
  FunctionName: String!
  CodeSha256: String
  Description: String
  RevisionId: String
}

input AwsLambdaPutFunctionConcurrencyInput {
  FunctionName: String!
  ReservedConcurrentExecutions: Int!
}

input AwsLambdaRemoveLayerVersionPermissionInput {
  LayerName: String!
  VersionNumber: JSON!
  StatementId: String!
  RevisionId: String
}

input AwsLambdaRemovePermissionInput {
  FunctionName: String!
  StatementId: String!
  Qualifier: String
  RevisionId: String
}

input AwsLambdaS1bInput {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

type AwsLambdaS1g {
  TargetArn: String
}

input AwsLambdaS1gInput {
  TargetArn: String
}

input AwsLambdaS1iInput {
  Variables: JSON
}

input AwsLambdaS1nInput {
  Mode: String
}

type AwsLambdaS1u {
  FunctionName: String
  FunctionArn: String
  Runtime: String
  Role: String
  Handler: String
  CodeSize: JSON
  Description: String
  Timeout: Int
  MemorySize: Int
  LastModified: String
  CodeSha256: String
  Version: String
  VpcConfig: AwsLambdaS1uVpcConfig
  DeadLetterConfig: AwsLambdaS1g
  Environment: AwsLambdaS1uEnvironment
  KMSKeyArn: String
  TracingConfig: AwsLambdaS1uTracingConfig
  MasterArn: String
  RevisionId: String
  Layers: [AwsLambdaS1uLayers]
}

type AwsLambdaS1uEnvironment {
  Variables: JSON
  Error: AwsLambdaS1uEnvironmentError
}

type AwsLambdaS1uEnvironmentError {
  ErrorCode: String
  Message: String
}

type AwsLambdaS1uLayers {
  Arn: String
  CodeSize: JSON
}

type AwsLambdaS1uTracingConfig {
  Mode: String
}

type AwsLambdaS1uVpcConfig {
  SubnetIds: [String]
  SecurityGroupIds: [String]
  VpcId: String
}

type AwsLambdaS2n {
  ReservedConcurrentExecutions: Int
}

type AwsLambdaS2s {
  Location: String
  CodeSha256: String
  CodeSize: JSON
}

type AwsLambdaS3p {
  LayerVersionArn: String
  Version: JSON
  Description: String
  CreatedDate: String
  CompatibleRuntimes: [String]
  LicenseInfo: String
}

type AwsLambdaSn {
  AdditionalVersionWeights: JSON
}

input AwsLambdaSnInput {
  AdditionalVersionWeights: JSON
}

type AwsLambdaSr {
  AliasArn: String
  Name: String
  FunctionVersion: String
  Description: String
  RoutingConfig: AwsLambdaSn
  RevisionId: String
}

type AwsLambdaSy {
  UUID: String
  BatchSize: Int
  EventSourceArn: String
  FunctionArn: String
  LastModified: Date
  LastProcessingResult: String
  State: String
  StateTransitionReason: String
}

input AwsLambdaTagResourceInput {
  Resource: String!
  Tags: JSON!
}

input AwsLambdaUntagResourceInput {
  Resource: String!
  TagKeys: [String]!
}

input AwsLambdaUpdateAliasInput {
  FunctionName: String!
  Name: String!
  FunctionVersion: String
  Description: String
  RoutingConfig: AwsLambdaSnInput
  RevisionId: String
}

input AwsLambdaUpdateEventSourceMappingInput {
  UUID: String!
  FunctionName: String
  Enabled: Boolean
  BatchSize: Int
}

input AwsLambdaUpdateFunctionCodeInput {
  FunctionName: String!
  ZipFile: JSON
  S3Bucket: String
  S3Key: String
  S3ObjectVersion: String
  Publish: Boolean
  DryRun: Boolean
  RevisionId: String
}

input AwsLambdaUpdateFunctionConfigurationInput {
  FunctionName: String!
  Role: String
  Handler: String
  Description: String
  Timeout: Int
  MemorySize: Int
  VpcConfig: AwsLambdaS1bInput
  Environment: AwsLambdaS1iInput
  Runtime: String
  DeadLetterConfig: AwsLambdaS1gInput
  KMSKeyArn: String
  TracingConfig: AwsLambdaS1nInput
  RevisionId: String
  Layers: [String]
}

"""Amazon Lex Model Building Service (2017-04-19)"""
type AwsLexModelBuildingService {
  createBotVersion(input: AwsLexModelBuildingServiceCreateBotVersionInput!, config: AwsConfig): AwsLexModelBuildingServiceCreateBotVersionOutput
  createIntentVersion(input: AwsLexModelBuildingServiceCreateIntentVersionInput!, config: AwsConfig): AwsLexModelBuildingServiceCreateIntentVersionOutput
  createSlotTypeVersion(input: AwsLexModelBuildingServiceCreateSlotTypeVersionInput!, config: AwsConfig): AwsLexModelBuildingServiceCreateSlotTypeVersionOutput
  deleteBot(input: AwsLexModelBuildingServiceDeleteBotInput!, config: AwsConfig): JSON
  deleteBotAlias(input: AwsLexModelBuildingServiceDeleteBotAliasInput!, config: AwsConfig): JSON
  deleteBotChannelAssociation(input: AwsLexModelBuildingServiceDeleteBotChannelAssociationInput!, config: AwsConfig): JSON
  deleteBotVersion(input: AwsLexModelBuildingServiceDeleteBotVersionInput!, config: AwsConfig): JSON
  deleteIntent(input: AwsLexModelBuildingServiceDeleteIntentInput!, config: AwsConfig): JSON
  deleteIntentVersion(input: AwsLexModelBuildingServiceDeleteIntentVersionInput!, config: AwsConfig): JSON
  deleteSlotType(input: AwsLexModelBuildingServiceDeleteSlotTypeInput!, config: AwsConfig): JSON
  deleteSlotTypeVersion(input: AwsLexModelBuildingServiceDeleteSlotTypeVersionInput!, config: AwsConfig): JSON
  deleteUtterances(input: AwsLexModelBuildingServiceDeleteUtterancesInput!, config: AwsConfig): JSON
  getBot(input: AwsLexModelBuildingServiceGetBotInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotOutput
  getBotAlias(input: AwsLexModelBuildingServiceGetBotAliasInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotAliasOutput
  getBotAliases(input: AwsLexModelBuildingServiceGetBotAliasesInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotAliasesOutput
  getBotChannelAssociation(input: AwsLexModelBuildingServiceGetBotChannelAssociationInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotChannelAssociationOutput
  getBotChannelAssociations(input: AwsLexModelBuildingServiceGetBotChannelAssociationsInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotChannelAssociationsOutput
  getBotVersions(input: AwsLexModelBuildingServiceGetBotVersionsInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotVersionsOutput
  getBots(input: AwsLexModelBuildingServiceGetBotsInput, config: AwsConfig): AwsLexModelBuildingServiceGetBotsOutput
  getBuiltinIntent(input: AwsLexModelBuildingServiceGetBuiltinIntentInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBuiltinIntentOutput
  getBuiltinIntents(input: AwsLexModelBuildingServiceGetBuiltinIntentsInput, config: AwsConfig): AwsLexModelBuildingServiceGetBuiltinIntentsOutput
  getBuiltinSlotTypes(input: AwsLexModelBuildingServiceGetBuiltinSlotTypesInput, config: AwsConfig): AwsLexModelBuildingServiceGetBuiltinSlotTypesOutput
  getExport(input: AwsLexModelBuildingServiceGetExportInput!, config: AwsConfig): AwsLexModelBuildingServiceGetExportOutput
  getImport(input: AwsLexModelBuildingServiceGetImportInput!, config: AwsConfig): AwsLexModelBuildingServiceGetImportOutput
  getIntent(input: AwsLexModelBuildingServiceGetIntentInput!, config: AwsConfig): AwsLexModelBuildingServiceGetIntentOutput
  getIntentVersions(input: AwsLexModelBuildingServiceGetIntentVersionsInput!, config: AwsConfig): AwsLexModelBuildingServiceGetIntentVersionsOutput
  getIntents(input: AwsLexModelBuildingServiceGetIntentsInput, config: AwsConfig): AwsLexModelBuildingServiceGetIntentsOutput
  getSlotType(input: AwsLexModelBuildingServiceGetSlotTypeInput!, config: AwsConfig): AwsLexModelBuildingServiceGetSlotTypeOutput
  getSlotTypeVersions(input: AwsLexModelBuildingServiceGetSlotTypeVersionsInput!, config: AwsConfig): AwsLexModelBuildingServiceGetSlotTypeVersionsOutput
  getSlotTypes(input: AwsLexModelBuildingServiceGetSlotTypesInput, config: AwsConfig): AwsLexModelBuildingServiceGetSlotTypesOutput
  getUtterancesView(input: AwsLexModelBuildingServiceGetUtterancesViewInput!, config: AwsConfig): AwsLexModelBuildingServiceGetUtterancesViewOutput
  putBot(input: AwsLexModelBuildingServicePutBotInput!, config: AwsConfig): AwsLexModelBuildingServicePutBotOutput
  putBotAlias(input: AwsLexModelBuildingServicePutBotAliasInput!, config: AwsConfig): AwsLexModelBuildingServicePutBotAliasOutput
  putIntent(input: AwsLexModelBuildingServicePutIntentInput!, config: AwsConfig): AwsLexModelBuildingServicePutIntentOutput
  putSlotType(input: AwsLexModelBuildingServicePutSlotTypeInput!, config: AwsConfig): AwsLexModelBuildingServicePutSlotTypeOutput
  startImport(input: AwsLexModelBuildingServiceStartImportInput!, config: AwsConfig): AwsLexModelBuildingServiceStartImportOutput
}

input AwsLexModelBuildingServiceCreateBotVersionInput {
  name: String!
  checksum: String
}

type AwsLexModelBuildingServiceCreateBotVersionOutput {
  name: String
  description: String
  intents: [AwsLexModelBuildingServiceS6]
  clarificationPrompt: AwsLexModelBuildingServiceSa
  abortStatement: AwsLexModelBuildingServiceSi
  status: String
  failureReason: String
  lastUpdatedDate: Date
  createdDate: Date
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  version: String
  locale: String
  childDirected: Boolean
}

input AwsLexModelBuildingServiceCreateIntentVersionInput {
  name: String!
  checksum: String
}

type AwsLexModelBuildingServiceCreateIntentVersionOutput {
  name: String
  description: String
  slots: [AwsLexModelBuildingServiceSq]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexModelBuildingServiceSa
  rejectionStatement: AwsLexModelBuildingServiceSi
  followUpPrompt: AwsLexModelBuildingServiceSz
  conclusionStatement: AwsLexModelBuildingServiceSi
  dialogCodeHook: AwsLexModelBuildingServiceS10
  fulfillmentActivity: AwsLexModelBuildingServiceS13
  parentIntentSignature: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
}

input AwsLexModelBuildingServiceCreateSlotTypeVersionInput {
  name: String!
  checksum: String
}

type AwsLexModelBuildingServiceCreateSlotTypeVersionOutput {
  name: String
  description: String
  enumerationValues: [AwsLexModelBuildingServiceS19]
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
  valueSelectionStrategy: String
}

input AwsLexModelBuildingServiceDeleteBotAliasInput {
  name: String!
  botName: String!
}

input AwsLexModelBuildingServiceDeleteBotChannelAssociationInput {
  name: String!
  botName: String!
  botAlias: String!
}

input AwsLexModelBuildingServiceDeleteBotInput {
  name: String!
}

input AwsLexModelBuildingServiceDeleteBotVersionInput {
  name: String!
  version: String!
}

input AwsLexModelBuildingServiceDeleteIntentInput {
  name: String!
}

input AwsLexModelBuildingServiceDeleteIntentVersionInput {
  name: String!
  version: String!
}

input AwsLexModelBuildingServiceDeleteSlotTypeInput {
  name: String!
}

input AwsLexModelBuildingServiceDeleteSlotTypeVersionInput {
  name: String!
  version: String!
}

input AwsLexModelBuildingServiceDeleteUtterancesInput {
  botName: String!
  userId: String!
}

input AwsLexModelBuildingServiceGetBotAliasesInput {
  botName: String!
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexModelBuildingServiceGetBotAliasesOutput {
  BotAliases: [AwsLexModelBuildingServiceGetBotAliasesOutputBotAliases]
  nextToken: String
}

type AwsLexModelBuildingServiceGetBotAliasesOutputBotAliases {
  name: String
  description: String
  botVersion: String
  botName: String
  lastUpdatedDate: Date
  createdDate: Date
  checksum: String
}

input AwsLexModelBuildingServiceGetBotAliasInput {
  name: String!
  botName: String!
}

type AwsLexModelBuildingServiceGetBotAliasOutput {
  name: String
  description: String
  botVersion: String
  botName: String
  lastUpdatedDate: Date
  createdDate: Date
  checksum: String
}

input AwsLexModelBuildingServiceGetBotChannelAssociationInput {
  name: String!
  botName: String!
  botAlias: String!
}

type AwsLexModelBuildingServiceGetBotChannelAssociationOutput {
  name: String
  description: String
  botAlias: String
  botName: String
  createdDate: Date
  type: String
  botConfiguration: JSON
  status: String
  failureReason: String
}

input AwsLexModelBuildingServiceGetBotChannelAssociationsInput {
  botName: String!
  botAlias: String!
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexModelBuildingServiceGetBotChannelAssociationsOutput {
  botChannelAssociations: [AwsLexModelBuildingServiceGetBotChannelAssociationsOutputBotChannelAssociations]
  nextToken: String
}

type AwsLexModelBuildingServiceGetBotChannelAssociationsOutputBotChannelAssociations {
  name: String
  description: String
  botAlias: String
  botName: String
  createdDate: Date
  type: String
  botConfiguration: JSON
  status: String
  failureReason: String
}

input AwsLexModelBuildingServiceGetBotInput {
  name: String!
  versionOrAlias: String!
}

type AwsLexModelBuildingServiceGetBotOutput {
  name: String
  description: String
  intents: [AwsLexModelBuildingServiceS6]
  clarificationPrompt: AwsLexModelBuildingServiceSa
  abortStatement: AwsLexModelBuildingServiceSi
  status: String
  failureReason: String
  lastUpdatedDate: Date
  createdDate: Date
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  version: String
  locale: String
  childDirected: Boolean
}

input AwsLexModelBuildingServiceGetBotsInput {
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexModelBuildingServiceGetBotsOutput {
  bots: [AwsLexModelBuildingServiceS2d]
  nextToken: String
}

input AwsLexModelBuildingServiceGetBotVersionsInput {
  name: String!
  nextToken: String
  maxResults: Int
}

type AwsLexModelBuildingServiceGetBotVersionsOutput {
  bots: [AwsLexModelBuildingServiceS2d]
  nextToken: String
}

input AwsLexModelBuildingServiceGetBuiltinIntentInput {
  signature: String!
}

type AwsLexModelBuildingServiceGetBuiltinIntentOutput {
  signature: String
  supportedLocales: [String]
  slots: [AwsLexModelBuildingServiceGetBuiltinIntentOutputSlots]
}

type AwsLexModelBuildingServiceGetBuiltinIntentOutputSlots {
  name: String
}

input AwsLexModelBuildingServiceGetBuiltinIntentsInput {
  locale: String
  signatureContains: String
  nextToken: String
  maxResults: Int
}

type AwsLexModelBuildingServiceGetBuiltinIntentsOutput {
  intents: [AwsLexModelBuildingServiceGetBuiltinIntentsOutputIntents]
  nextToken: String
}

type AwsLexModelBuildingServiceGetBuiltinIntentsOutputIntents {
  signature: String
  supportedLocales: [String]
}

input AwsLexModelBuildingServiceGetBuiltinSlotTypesInput {
  locale: String
  signatureContains: String
  nextToken: String
  maxResults: Int
}

type AwsLexModelBuildingServiceGetBuiltinSlotTypesOutput {
  slotTypes: [AwsLexModelBuildingServiceGetBuiltinSlotTypesOutputSlotTypes]
  nextToken: String
}

type AwsLexModelBuildingServiceGetBuiltinSlotTypesOutputSlotTypes {
  signature: String
  supportedLocales: [String]
}

input AwsLexModelBuildingServiceGetExportInput {
  name: String!
  version: String!
  resourceType: String!
  exportType: String!
}

type AwsLexModelBuildingServiceGetExportOutput {
  name: String
  version: String
  resourceType: String
  exportType: String
  exportStatus: String
  failureReason: String
  url: String
}

input AwsLexModelBuildingServiceGetImportInput {
  importId: String!
}

type AwsLexModelBuildingServiceGetImportOutput {
  name: String
  resourceType: String
  mergeStrategy: String
  importId: String
  importStatus: String
  failureReason: [String]
  createdDate: Date
}

input AwsLexModelBuildingServiceGetIntentInput {
  name: String!
  version: String!
}

type AwsLexModelBuildingServiceGetIntentOutput {
  name: String
  description: String
  slots: [AwsLexModelBuildingServiceSq]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexModelBuildingServiceSa
  rejectionStatement: AwsLexModelBuildingServiceSi
  followUpPrompt: AwsLexModelBuildingServiceSz
  conclusionStatement: AwsLexModelBuildingServiceSi
  dialogCodeHook: AwsLexModelBuildingServiceS10
  fulfillmentActivity: AwsLexModelBuildingServiceS13
  parentIntentSignature: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
}

input AwsLexModelBuildingServiceGetIntentsInput {
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexModelBuildingServiceGetIntentsOutput {
  intents: [AwsLexModelBuildingServiceS3a]
  nextToken: String
}

input AwsLexModelBuildingServiceGetIntentVersionsInput {
  name: String!
  nextToken: String
  maxResults: Int
}

type AwsLexModelBuildingServiceGetIntentVersionsOutput {
  intents: [AwsLexModelBuildingServiceS3a]
  nextToken: String
}

input AwsLexModelBuildingServiceGetSlotTypeInput {
  name: String!
  version: String!
}

type AwsLexModelBuildingServiceGetSlotTypeOutput {
  name: String
  description: String
  enumerationValues: [AwsLexModelBuildingServiceS19]
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
  valueSelectionStrategy: String
}

input AwsLexModelBuildingServiceGetSlotTypesInput {
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexModelBuildingServiceGetSlotTypesOutput {
  slotTypes: [AwsLexModelBuildingServiceS3i]
  nextToken: String
}

input AwsLexModelBuildingServiceGetSlotTypeVersionsInput {
  name: String!
  nextToken: String
  maxResults: Int
}

type AwsLexModelBuildingServiceGetSlotTypeVersionsOutput {
  slotTypes: [AwsLexModelBuildingServiceS3i]
  nextToken: String
}

input AwsLexModelBuildingServiceGetUtterancesViewInput {
  botName: String!
  botVersions: [String]!
  statusType: String!
}

type AwsLexModelBuildingServiceGetUtterancesViewOutput {
  botName: String
  utterances: [AwsLexModelBuildingServiceGetUtterancesViewOutputUtterances]
}

type AwsLexModelBuildingServiceGetUtterancesViewOutputUtterances {
  botVersion: String
  utterances: [AwsLexModelBuildingServiceGetUtterancesViewOutputUtterancesUtterances]
}

type AwsLexModelBuildingServiceGetUtterancesViewOutputUtterancesUtterances {
  utteranceString: String
  count: Int
  distinctUsers: Int
  firstUtteredDate: Date
  lastUtteredDate: Date
}

input AwsLexModelBuildingServicePutBotAliasInput {
  name: String!
  description: String
  botVersion: String!
  botName: String!
  checksum: String
}

type AwsLexModelBuildingServicePutBotAliasOutput {
  name: String
  description: String
  botVersion: String
  botName: String
  lastUpdatedDate: Date
  createdDate: Date
  checksum: String
}

input AwsLexModelBuildingServicePutBotInput {
  name: String!
  description: String
  intents: [AwsLexModelBuildingServiceS6Input]
  clarificationPrompt: AwsLexModelBuildingServiceSaInput
  abortStatement: AwsLexModelBuildingServiceSiInput
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  processBehavior: String
  locale: String!
  childDirected: Boolean!
  createVersion: Boolean
}

type AwsLexModelBuildingServicePutBotOutput {
  name: String
  description: String
  intents: [AwsLexModelBuildingServiceS6]
  clarificationPrompt: AwsLexModelBuildingServiceSa
  abortStatement: AwsLexModelBuildingServiceSi
  status: String
  failureReason: String
  lastUpdatedDate: Date
  createdDate: Date
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  version: String
  locale: String
  childDirected: Boolean
  createVersion: Boolean
}

input AwsLexModelBuildingServicePutIntentInput {
  name: String!
  description: String
  slots: [AwsLexModelBuildingServiceSqInput]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexModelBuildingServiceSaInput
  rejectionStatement: AwsLexModelBuildingServiceSiInput
  followUpPrompt: AwsLexModelBuildingServiceSzInput
  conclusionStatement: AwsLexModelBuildingServiceSiInput
  dialogCodeHook: AwsLexModelBuildingServiceS10Input
  fulfillmentActivity: AwsLexModelBuildingServiceS13Input
  parentIntentSignature: String
  checksum: String
  createVersion: Boolean
}

type AwsLexModelBuildingServicePutIntentOutput {
  name: String
  description: String
  slots: [AwsLexModelBuildingServiceSq]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexModelBuildingServiceSa
  rejectionStatement: AwsLexModelBuildingServiceSi
  followUpPrompt: AwsLexModelBuildingServiceSz
  conclusionStatement: AwsLexModelBuildingServiceSi
  dialogCodeHook: AwsLexModelBuildingServiceS10
  fulfillmentActivity: AwsLexModelBuildingServiceS13
  parentIntentSignature: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
  createVersion: Boolean
}

input AwsLexModelBuildingServicePutSlotTypeInput {
  name: String!
  description: String
  enumerationValues: [AwsLexModelBuildingServiceS19Input]
  checksum: String
  valueSelectionStrategy: String
  createVersion: Boolean
}

type AwsLexModelBuildingServicePutSlotTypeOutput {
  name: String
  description: String
  enumerationValues: [AwsLexModelBuildingServiceS19]
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
  valueSelectionStrategy: String
  createVersion: Boolean
}

type AwsLexModelBuildingServiceS10 {
  uri: String!
  messageVersion: String!
}

input AwsLexModelBuildingServiceS10Input {
  uri: String!
  messageVersion: String!
}

type AwsLexModelBuildingServiceS13 {
  type: String!
  codeHook: AwsLexModelBuildingServiceS10
}

input AwsLexModelBuildingServiceS13Input {
  type: String!
  codeHook: AwsLexModelBuildingServiceS10Input
}

type AwsLexModelBuildingServiceS19 {
  value: String!
  synonyms: [String]
}

input AwsLexModelBuildingServiceS19Input {
  value: String!
  synonyms: [String]
}

type AwsLexModelBuildingServiceS2d {
  name: String
  description: String
  status: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
}

type AwsLexModelBuildingServiceS3a {
  name: String
  description: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
}

type AwsLexModelBuildingServiceS3i {
  name: String
  description: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
}

type AwsLexModelBuildingServiceS6 {
  intentName: String!
  intentVersion: String!
}

input AwsLexModelBuildingServiceS6Input {
  intentName: String!
  intentVersion: String!
}

type AwsLexModelBuildingServiceSa {
  messages: [AwsLexModelBuildingServiceSb]!
  maxAttempts: Int!
  responseCard: String
}

input AwsLexModelBuildingServiceSaInput {
  messages: [AwsLexModelBuildingServiceSbInput]!
  maxAttempts: Int!
  responseCard: String
}

type AwsLexModelBuildingServiceSb {
  contentType: String!
  content: String!
  groupNumber: Int
}

input AwsLexModelBuildingServiceSbInput {
  contentType: String!
  content: String!
  groupNumber: Int
}

type AwsLexModelBuildingServiceSi {
  messages: [AwsLexModelBuildingServiceSb]!
  responseCard: String
}

input AwsLexModelBuildingServiceSiInput {
  messages: [AwsLexModelBuildingServiceSbInput]!
  responseCard: String
}

type AwsLexModelBuildingServiceSq {
  name: String!
  description: String
  slotConstraint: String!
  slotType: String
  slotTypeVersion: String
  valueElicitationPrompt: AwsLexModelBuildingServiceSa
  priority: Int
  sampleUtterances: [String]
  responseCard: String
}

input AwsLexModelBuildingServiceSqInput {
  name: String!
  description: String
  slotConstraint: String!
  slotType: String
  slotTypeVersion: String
  valueElicitationPrompt: AwsLexModelBuildingServiceSaInput
  priority: Int
  sampleUtterances: [String]
  responseCard: String
}

input AwsLexModelBuildingServiceStartImportInput {
  payload: JSON!
  resourceType: String!
  mergeStrategy: String!
}

type AwsLexModelBuildingServiceStartImportOutput {
  name: String
  resourceType: String
  mergeStrategy: String
  importId: String
  importStatus: String
  createdDate: Date
}

type AwsLexModelBuildingServiceSz {
  prompt: AwsLexModelBuildingServiceSa!
  rejectionStatement: AwsLexModelBuildingServiceSi!
}

input AwsLexModelBuildingServiceSzInput {
  prompt: AwsLexModelBuildingServiceSaInput!
  rejectionStatement: AwsLexModelBuildingServiceSiInput!
}

"""Amazon Lex Runtime Service (2016-11-28)"""
type AwsLexRuntime {
  postContent(input: AwsLexRuntimePostContentInput!, config: AwsConfig): AwsLexRuntimePostContentOutput
  postText(input: AwsLexRuntimePostTextInput!, config: AwsConfig): AwsLexRuntimePostTextOutput
}

input AwsLexRuntimePostContentInput {
  botName: String!
  botAlias: String!
  userId: String!
  sessionAttributes: String
  requestAttributes: String
  contentType: String!
  accept: String
  inputStream: JSON!
}

type AwsLexRuntimePostContentOutput {
  contentType: String
  intentName: String
  slots: String
  sessionAttributes: String
  message: String
  messageFormat: String
  dialogState: String
  slotToElicit: String
  inputTranscript: String
  audioStream: JSON
}

input AwsLexRuntimePostTextInput {
  botName: String!
  botAlias: String!
  userId: String!
  sessionAttributes: JSON
  requestAttributes: JSON
  inputText: String!
}

type AwsLexRuntimePostTextOutput {
  intentName: String
  slots: JSON
  sessionAttributes: JSON
  message: String
  messageFormat: String
  dialogState: String
  slotToElicit: String
  responseCard: AwsLexRuntimePostTextOutputResponseCard
}

type AwsLexRuntimePostTextOutputResponseCard {
  version: String
  contentType: String
  genericAttachments: [AwsLexRuntimePostTextOutputResponseCardGenericAttachments]
}

type AwsLexRuntimePostTextOutputResponseCardGenericAttachments {
  title: String
  subTitle: String
  attachmentLinkUrl: String
  imageUrl: String
  buttons: [AwsLexRuntimePostTextOutputResponseCardGenericAttachmentsButtons]
}

type AwsLexRuntimePostTextOutputResponseCardGenericAttachmentsButtons {
  text: String!
  value: String!
}

"""AWS License Manager (2018-08-01)"""
type AwsLicenseManager {
  createLicenseConfiguration(input: AwsLicenseManagerCreateLicenseConfigurationInput!, config: AwsConfig): AwsLicenseManagerCreateLicenseConfigurationOutput
  deleteLicenseConfiguration(input: AwsLicenseManagerDeleteLicenseConfigurationInput!, config: AwsConfig): JSON
  getLicenseConfiguration(input: AwsLicenseManagerGetLicenseConfigurationInput!, config: AwsConfig): AwsLicenseManagerGetLicenseConfigurationOutput
  getServiceSettings(input: JSON, config: AwsConfig): AwsLicenseManagerGetServiceSettingsOutput
  listAssociationsForLicenseConfiguration(input: AwsLicenseManagerListAssociationsForLicenseConfigurationInput!, config: AwsConfig): AwsLicenseManagerListAssociationsForLicenseConfigurationOutput
  listLicenseConfigurations(input: AwsLicenseManagerListLicenseConfigurationsInput, config: AwsConfig): AwsLicenseManagerListLicenseConfigurationsOutput
  listLicenseSpecificationsForResource(input: AwsLicenseManagerListLicenseSpecificationsForResourceInput!, config: AwsConfig): AwsLicenseManagerListLicenseSpecificationsForResourceOutput
  listResourceInventory(input: AwsLicenseManagerListResourceInventoryInput, config: AwsConfig): AwsLicenseManagerListResourceInventoryOutput
  listTagsForResource(input: AwsLicenseManagerListTagsForResourceInput!, config: AwsConfig): AwsLicenseManagerListTagsForResourceOutput
  listUsageForLicenseConfiguration(input: AwsLicenseManagerListUsageForLicenseConfigurationInput!, config: AwsConfig): AwsLicenseManagerListUsageForLicenseConfigurationOutput
  tagResource(input: AwsLicenseManagerTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsLicenseManagerUntagResourceInput!, config: AwsConfig): JSON
  updateLicenseConfiguration(input: AwsLicenseManagerUpdateLicenseConfigurationInput!, config: AwsConfig): JSON
  updateLicenseSpecificationsForResource(input: AwsLicenseManagerUpdateLicenseSpecificationsForResourceInput!, config: AwsConfig): JSON
  updateServiceSettings(input: AwsLicenseManagerUpdateServiceSettingsInput, config: AwsConfig): JSON
}

input AwsLicenseManagerCreateLicenseConfigurationInput {
  Name: String!
  Description: String
  LicenseCountingType: String!
  LicenseCount: JSON
  LicenseCountHardLimit: Boolean
  LicenseRules: [String]
  Tags: [AwsLicenseManagerS7Input]
}

type AwsLicenseManagerCreateLicenseConfigurationOutput {
  LicenseConfigurationArn: String
}

input AwsLicenseManagerDeleteLicenseConfigurationInput {
  LicenseConfigurationArn: String!
}

input AwsLicenseManagerGetLicenseConfigurationInput {
  LicenseConfigurationArn: String!
}

type AwsLicenseManagerGetLicenseConfigurationOutput {
  LicenseConfigurationId: String
  LicenseConfigurationArn: String
  Name: String
  Description: String
  LicenseCountingType: String
  LicenseRules: [String]
  LicenseCount: JSON
  LicenseCountHardLimit: Boolean
  ConsumedLicenses: JSON
  Status: String
  OwnerAccountId: String
  ConsumedLicenseSummaryList: [AwsLicenseManagerSe]
  ManagedResourceSummaryList: [AwsLicenseManagerSh]
  Tags: [AwsLicenseManagerS7]
}

type AwsLicenseManagerGetServiceSettingsOutput {
  S3BucketArn: String
  SnsTopicArn: String
  OrganizationConfiguration: AwsLicenseManagerSl
  EnableCrossAccountsDiscovery: Boolean
}

input AwsLicenseManagerListAssociationsForLicenseConfigurationInput {
  LicenseConfigurationArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsLicenseManagerListAssociationsForLicenseConfigurationOutput {
  LicenseConfigurationAssociations: [AwsLicenseManagerListAssociationsForLicenseConfigurationOutputLicenseConfigurationAssociations]
  NextToken: String
}

type AwsLicenseManagerListAssociationsForLicenseConfigurationOutputLicenseConfigurationAssociations {
  ResourceArn: String
  ResourceType: String
  ResourceOwnerId: String
  AssociationTime: Date
}

input AwsLicenseManagerListLicenseConfigurationsInput {
  LicenseConfigurationArns: [String]
  MaxResults: Int
  NextToken: String
  Filters: [AwsLicenseManagerSuInput]
}

type AwsLicenseManagerListLicenseConfigurationsOutput {
  LicenseConfigurations: [AwsLicenseManagerListLicenseConfigurationsOutputLicenseConfigurations]
  NextToken: String
}

type AwsLicenseManagerListLicenseConfigurationsOutputLicenseConfigurations {
  LicenseConfigurationId: String
  LicenseConfigurationArn: String
  Name: String
  Description: String
  LicenseCountingType: String
  LicenseRules: [String]
  LicenseCount: JSON
  LicenseCountHardLimit: Boolean
  ConsumedLicenses: JSON
  Status: String
  OwnerAccountId: String
  ConsumedLicenseSummaryList: [AwsLicenseManagerSe]
  ManagedResourceSummaryList: [AwsLicenseManagerSh]
}

input AwsLicenseManagerListLicenseSpecificationsForResourceInput {
  ResourceArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsLicenseManagerListLicenseSpecificationsForResourceOutput {
  LicenseSpecifications: [AwsLicenseManagerS14]
  NextToken: String
}

input AwsLicenseManagerListResourceInventoryFiltersInput {
  Name: String!
  Condition: String!
  Value: String
}

input AwsLicenseManagerListResourceInventoryInput {
  MaxResults: Int
  NextToken: String
  Filters: [AwsLicenseManagerListResourceInventoryFiltersInput]
}

type AwsLicenseManagerListResourceInventoryOutput {
  ResourceInventoryList: [AwsLicenseManagerListResourceInventoryOutputResourceInventoryList]
  NextToken: String
}

type AwsLicenseManagerListResourceInventoryOutputResourceInventoryList {
  ResourceId: String
  ResourceType: String
  ResourceArn: String
  Platform: String
  PlatformVersion: String
  ResourceOwningAccountId: String
}

input AwsLicenseManagerListTagsForResourceInput {
  ResourceArn: String!
}

type AwsLicenseManagerListTagsForResourceOutput {
  Tags: [AwsLicenseManagerS7]
}

input AwsLicenseManagerListUsageForLicenseConfigurationInput {
  LicenseConfigurationArn: String!
  MaxResults: Int
  NextToken: String
  Filters: [AwsLicenseManagerSuInput]
}

type AwsLicenseManagerListUsageForLicenseConfigurationOutput {
  LicenseConfigurationUsageList: [AwsLicenseManagerListUsageForLicenseConfigurationOutputLicenseConfigurationUsageList]
  NextToken: String
}

type AwsLicenseManagerListUsageForLicenseConfigurationOutputLicenseConfigurationUsageList {
  ResourceArn: String
  ResourceType: String
  ResourceStatus: String
  ResourceOwnerId: String
  AssociationTime: Date
  ConsumedLicenses: JSON
}

type AwsLicenseManagerS14 {
  LicenseConfigurationArn: String!
}

input AwsLicenseManagerS14Input {
  LicenseConfigurationArn: String!
}

type AwsLicenseManagerS7 {
  Key: String
  Value: String
}

input AwsLicenseManagerS7Input {
  Key: String
  Value: String
}

type AwsLicenseManagerSe {
  ResourceType: String
  ConsumedLicenses: JSON
}

type AwsLicenseManagerSh {
  ResourceType: String
  AssociationCount: JSON
}

type AwsLicenseManagerSl {
  EnableIntegration: Boolean!
}

input AwsLicenseManagerSlInput {
  EnableIntegration: Boolean!
}

input AwsLicenseManagerSuInput {
  Name: String
  Values: [String]
}

input AwsLicenseManagerTagResourceInput {
  ResourceArn: String!
  Tags: [AwsLicenseManagerS7Input]!
}

input AwsLicenseManagerUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsLicenseManagerUpdateLicenseConfigurationInput {
  LicenseConfigurationArn: String!
  LicenseConfigurationStatus: String
  LicenseRules: [String]
  LicenseCount: JSON
  LicenseCountHardLimit: Boolean
  Name: String
  Description: String
}

input AwsLicenseManagerUpdateLicenseSpecificationsForResourceInput {
  ResourceArn: String!
  AddLicenseSpecifications: [AwsLicenseManagerS14Input]
  RemoveLicenseSpecifications: [AwsLicenseManagerS14Input]
}

input AwsLicenseManagerUpdateServiceSettingsInput {
  S3BucketArn: String
  SnsTopicArn: String
  OrganizationConfiguration: AwsLicenseManagerSlInput
  EnableCrossAccountsDiscovery: Boolean
}

"""Amazon Lightsail (2016-11-28)"""
type AwsLightsail {
  allocateStaticIp(input: AwsLightsailAllocateStaticIpInput!, config: AwsConfig): AwsLightsailAllocateStaticIpOutput
  attachDisk(input: AwsLightsailAttachDiskInput!, config: AwsConfig): AwsLightsailAttachDiskOutput
  attachInstancesToLoadBalancer(input: AwsLightsailAttachInstancesToLoadBalancerInput!, config: AwsConfig): AwsLightsailAttachInstancesToLoadBalancerOutput
  attachLoadBalancerTlsCertificate(input: AwsLightsailAttachLoadBalancerTlsCertificateInput!, config: AwsConfig): AwsLightsailAttachLoadBalancerTlsCertificateOutput
  attachStaticIp(input: AwsLightsailAttachStaticIpInput!, config: AwsConfig): AwsLightsailAttachStaticIpOutput
  closeInstancePublicPorts(input: AwsLightsailCloseInstancePublicPortsInput!, config: AwsConfig): AwsLightsailCloseInstancePublicPortsOutput
  copySnapshot(input: AwsLightsailCopySnapshotInput!, config: AwsConfig): AwsLightsailCopySnapshotOutput
  createCloudFormationStack(input: AwsLightsailCreateCloudFormationStackInput!, config: AwsConfig): AwsLightsailCreateCloudFormationStackOutput
  createDisk(input: AwsLightsailCreateDiskInput!, config: AwsConfig): AwsLightsailCreateDiskOutput
  createDiskFromSnapshot(input: AwsLightsailCreateDiskFromSnapshotInput!, config: AwsConfig): AwsLightsailCreateDiskFromSnapshotOutput
  createDiskSnapshot(input: AwsLightsailCreateDiskSnapshotInput!, config: AwsConfig): AwsLightsailCreateDiskSnapshotOutput
  createDomain(input: AwsLightsailCreateDomainInput!, config: AwsConfig): AwsLightsailCreateDomainOutput
  createDomainEntry(input: AwsLightsailCreateDomainEntryInput!, config: AwsConfig): AwsLightsailCreateDomainEntryOutput
  createInstanceSnapshot(input: AwsLightsailCreateInstanceSnapshotInput!, config: AwsConfig): AwsLightsailCreateInstanceSnapshotOutput
  createInstances(input: AwsLightsailCreateInstancesInput!, config: AwsConfig): AwsLightsailCreateInstancesOutput
  createInstancesFromSnapshot(input: AwsLightsailCreateInstancesFromSnapshotInput!, config: AwsConfig): AwsLightsailCreateInstancesFromSnapshotOutput
  createKeyPair(input: AwsLightsailCreateKeyPairInput!, config: AwsConfig): AwsLightsailCreateKeyPairOutput
  createLoadBalancer(input: AwsLightsailCreateLoadBalancerInput!, config: AwsConfig): AwsLightsailCreateLoadBalancerOutput
  createLoadBalancerTlsCertificate(input: AwsLightsailCreateLoadBalancerTlsCertificateInput!, config: AwsConfig): AwsLightsailCreateLoadBalancerTlsCertificateOutput
  createRelationalDatabase(input: AwsLightsailCreateRelationalDatabaseInput!, config: AwsConfig): AwsLightsailCreateRelationalDatabaseOutput
  createRelationalDatabaseFromSnapshot(input: AwsLightsailCreateRelationalDatabaseFromSnapshotInput!, config: AwsConfig): AwsLightsailCreateRelationalDatabaseFromSnapshotOutput
  createRelationalDatabaseSnapshot(input: AwsLightsailCreateRelationalDatabaseSnapshotInput!, config: AwsConfig): AwsLightsailCreateRelationalDatabaseSnapshotOutput
  deleteDisk(input: AwsLightsailDeleteDiskInput!, config: AwsConfig): AwsLightsailDeleteDiskOutput
  deleteDiskSnapshot(input: AwsLightsailDeleteDiskSnapshotInput!, config: AwsConfig): AwsLightsailDeleteDiskSnapshotOutput
  deleteDomain(input: AwsLightsailDeleteDomainInput!, config: AwsConfig): AwsLightsailDeleteDomainOutput
  deleteDomainEntry(input: AwsLightsailDeleteDomainEntryInput!, config: AwsConfig): AwsLightsailDeleteDomainEntryOutput
  deleteInstance(input: AwsLightsailDeleteInstanceInput!, config: AwsConfig): AwsLightsailDeleteInstanceOutput
  deleteInstanceSnapshot(input: AwsLightsailDeleteInstanceSnapshotInput!, config: AwsConfig): AwsLightsailDeleteInstanceSnapshotOutput
  deleteKeyPair(input: AwsLightsailDeleteKeyPairInput!, config: AwsConfig): AwsLightsailDeleteKeyPairOutput
  deleteKnownHostKeys(input: AwsLightsailDeleteKnownHostKeysInput!, config: AwsConfig): AwsLightsailDeleteKnownHostKeysOutput
  deleteLoadBalancer(input: AwsLightsailDeleteLoadBalancerInput!, config: AwsConfig): AwsLightsailDeleteLoadBalancerOutput
  deleteLoadBalancerTlsCertificate(input: AwsLightsailDeleteLoadBalancerTlsCertificateInput!, config: AwsConfig): AwsLightsailDeleteLoadBalancerTlsCertificateOutput
  deleteRelationalDatabase(input: AwsLightsailDeleteRelationalDatabaseInput!, config: AwsConfig): AwsLightsailDeleteRelationalDatabaseOutput
  deleteRelationalDatabaseSnapshot(input: AwsLightsailDeleteRelationalDatabaseSnapshotInput!, config: AwsConfig): AwsLightsailDeleteRelationalDatabaseSnapshotOutput
  detachDisk(input: AwsLightsailDetachDiskInput!, config: AwsConfig): AwsLightsailDetachDiskOutput
  detachInstancesFromLoadBalancer(input: AwsLightsailDetachInstancesFromLoadBalancerInput!, config: AwsConfig): AwsLightsailDetachInstancesFromLoadBalancerOutput
  detachStaticIp(input: AwsLightsailDetachStaticIpInput!, config: AwsConfig): AwsLightsailDetachStaticIpOutput
  downloadDefaultKeyPair(input: JSON, config: AwsConfig): AwsLightsailDownloadDefaultKeyPairOutput
  exportSnapshot(input: AwsLightsailExportSnapshotInput!, config: AwsConfig): AwsLightsailExportSnapshotOutput
  getActiveNames(input: AwsLightsailGetActiveNamesInput, config: AwsConfig): AwsLightsailGetActiveNamesOutput
  getBlueprints(input: AwsLightsailGetBlueprintsInput, config: AwsConfig): AwsLightsailGetBlueprintsOutput
  getBundles(input: AwsLightsailGetBundlesInput, config: AwsConfig): AwsLightsailGetBundlesOutput
  getCloudFormationStackRecords(input: AwsLightsailGetCloudFormationStackRecordsInput, config: AwsConfig): AwsLightsailGetCloudFormationStackRecordsOutput
  getDisk(input: AwsLightsailGetDiskInput!, config: AwsConfig): AwsLightsailGetDiskOutput
  getDiskSnapshot(input: AwsLightsailGetDiskSnapshotInput!, config: AwsConfig): AwsLightsailGetDiskSnapshotOutput
  getDiskSnapshots(input: AwsLightsailGetDiskSnapshotsInput, config: AwsConfig): AwsLightsailGetDiskSnapshotsOutput
  getDisks(input: AwsLightsailGetDisksInput, config: AwsConfig): AwsLightsailGetDisksOutput
  getDomain(input: AwsLightsailGetDomainInput!, config: AwsConfig): AwsLightsailGetDomainOutput
  getDomains(input: AwsLightsailGetDomainsInput, config: AwsConfig): AwsLightsailGetDomainsOutput
  getExportSnapshotRecords(input: AwsLightsailGetExportSnapshotRecordsInput, config: AwsConfig): AwsLightsailGetExportSnapshotRecordsOutput
  getInstance(input: AwsLightsailGetInstanceInput!, config: AwsConfig): AwsLightsailGetInstanceOutput
  getInstanceAccessDetails(input: AwsLightsailGetInstanceAccessDetailsInput!, config: AwsConfig): AwsLightsailGetInstanceAccessDetailsOutput
  getInstanceMetricData(input: AwsLightsailGetInstanceMetricDataInput!, config: AwsConfig): AwsLightsailGetInstanceMetricDataOutput
  getInstancePortStates(input: AwsLightsailGetInstancePortStatesInput!, config: AwsConfig): AwsLightsailGetInstancePortStatesOutput
  getInstanceSnapshot(input: AwsLightsailGetInstanceSnapshotInput!, config: AwsConfig): AwsLightsailGetInstanceSnapshotOutput
  getInstanceSnapshots(input: AwsLightsailGetInstanceSnapshotsInput, config: AwsConfig): AwsLightsailGetInstanceSnapshotsOutput
  getInstanceState(input: AwsLightsailGetInstanceStateInput!, config: AwsConfig): AwsLightsailGetInstanceStateOutput
  getInstances(input: AwsLightsailGetInstancesInput, config: AwsConfig): AwsLightsailGetInstancesOutput
  getKeyPair(input: AwsLightsailGetKeyPairInput!, config: AwsConfig): AwsLightsailGetKeyPairOutput
  getKeyPairs(input: AwsLightsailGetKeyPairsInput, config: AwsConfig): AwsLightsailGetKeyPairsOutput
  getLoadBalancer(input: AwsLightsailGetLoadBalancerInput!, config: AwsConfig): AwsLightsailGetLoadBalancerOutput
  getLoadBalancerMetricData(input: AwsLightsailGetLoadBalancerMetricDataInput!, config: AwsConfig): AwsLightsailGetLoadBalancerMetricDataOutput
  getLoadBalancerTlsCertificates(input: AwsLightsailGetLoadBalancerTlsCertificatesInput!, config: AwsConfig): AwsLightsailGetLoadBalancerTlsCertificatesOutput
  getLoadBalancers(input: AwsLightsailGetLoadBalancersInput, config: AwsConfig): AwsLightsailGetLoadBalancersOutput
  getOperation(input: AwsLightsailGetOperationInput!, config: AwsConfig): AwsLightsailGetOperationOutput
  getOperations(input: AwsLightsailGetOperationsInput, config: AwsConfig): AwsLightsailGetOperationsOutput
  getOperationsForResource(input: AwsLightsailGetOperationsForResourceInput!, config: AwsConfig): AwsLightsailGetOperationsForResourceOutput
  getRegions(input: AwsLightsailGetRegionsInput, config: AwsConfig): AwsLightsailGetRegionsOutput
  getRelationalDatabase(input: AwsLightsailGetRelationalDatabaseInput!, config: AwsConfig): AwsLightsailGetRelationalDatabaseOutput
  getRelationalDatabaseBlueprints(input: AwsLightsailGetRelationalDatabaseBlueprintsInput, config: AwsConfig): AwsLightsailGetRelationalDatabaseBlueprintsOutput
  getRelationalDatabaseBundles(input: AwsLightsailGetRelationalDatabaseBundlesInput, config: AwsConfig): AwsLightsailGetRelationalDatabaseBundlesOutput
  getRelationalDatabaseEvents(input: AwsLightsailGetRelationalDatabaseEventsInput!, config: AwsConfig): AwsLightsailGetRelationalDatabaseEventsOutput
  getRelationalDatabaseLogEvents(input: AwsLightsailGetRelationalDatabaseLogEventsInput!, config: AwsConfig): AwsLightsailGetRelationalDatabaseLogEventsOutput
  getRelationalDatabaseLogStreams(input: AwsLightsailGetRelationalDatabaseLogStreamsInput!, config: AwsConfig): AwsLightsailGetRelationalDatabaseLogStreamsOutput
  getRelationalDatabaseMasterUserPassword(input: AwsLightsailGetRelationalDatabaseMasterUserPasswordInput!, config: AwsConfig): AwsLightsailGetRelationalDatabaseMasterUserPasswordOutput
  getRelationalDatabaseMetricData(input: AwsLightsailGetRelationalDatabaseMetricDataInput!, config: AwsConfig): AwsLightsailGetRelationalDatabaseMetricDataOutput
  getRelationalDatabaseParameters(input: AwsLightsailGetRelationalDatabaseParametersInput!, config: AwsConfig): AwsLightsailGetRelationalDatabaseParametersOutput
  getRelationalDatabaseSnapshot(input: AwsLightsailGetRelationalDatabaseSnapshotInput!, config: AwsConfig): AwsLightsailGetRelationalDatabaseSnapshotOutput
  getRelationalDatabaseSnapshots(input: AwsLightsailGetRelationalDatabaseSnapshotsInput, config: AwsConfig): AwsLightsailGetRelationalDatabaseSnapshotsOutput
  getRelationalDatabases(input: AwsLightsailGetRelationalDatabasesInput, config: AwsConfig): AwsLightsailGetRelationalDatabasesOutput
  getStaticIp(input: AwsLightsailGetStaticIpInput!, config: AwsConfig): AwsLightsailGetStaticIpOutput
  getStaticIps(input: AwsLightsailGetStaticIpsInput, config: AwsConfig): AwsLightsailGetStaticIpsOutput
  importKeyPair(input: AwsLightsailImportKeyPairInput!, config: AwsConfig): AwsLightsailImportKeyPairOutput
  isVpcPeered(input: JSON, config: AwsConfig): AwsLightsailIsVpcPeeredOutput
  openInstancePublicPorts(input: AwsLightsailOpenInstancePublicPortsInput!, config: AwsConfig): AwsLightsailOpenInstancePublicPortsOutput
  peerVpc(input: JSON, config: AwsConfig): AwsLightsailPeerVpcOutput
  putInstancePublicPorts(input: AwsLightsailPutInstancePublicPortsInput!, config: AwsConfig): AwsLightsailPutInstancePublicPortsOutput
  rebootInstance(input: AwsLightsailRebootInstanceInput!, config: AwsConfig): AwsLightsailRebootInstanceOutput
  rebootRelationalDatabase(input: AwsLightsailRebootRelationalDatabaseInput!, config: AwsConfig): AwsLightsailRebootRelationalDatabaseOutput
  releaseStaticIp(input: AwsLightsailReleaseStaticIpInput!, config: AwsConfig): AwsLightsailReleaseStaticIpOutput
  startInstance(input: AwsLightsailStartInstanceInput!, config: AwsConfig): AwsLightsailStartInstanceOutput
  startRelationalDatabase(input: AwsLightsailStartRelationalDatabaseInput!, config: AwsConfig): AwsLightsailStartRelationalDatabaseOutput
  stopInstance(input: AwsLightsailStopInstanceInput!, config: AwsConfig): AwsLightsailStopInstanceOutput
  stopRelationalDatabase(input: AwsLightsailStopRelationalDatabaseInput!, config: AwsConfig): AwsLightsailStopRelationalDatabaseOutput
  tagResource(input: AwsLightsailTagResourceInput!, config: AwsConfig): AwsLightsailTagResourceOutput
  unpeerVpc(input: JSON, config: AwsConfig): AwsLightsailUnpeerVpcOutput
  untagResource(input: AwsLightsailUntagResourceInput!, config: AwsConfig): AwsLightsailUntagResourceOutput
  updateDomainEntry(input: AwsLightsailUpdateDomainEntryInput!, config: AwsConfig): AwsLightsailUpdateDomainEntryOutput
  updateLoadBalancerAttribute(input: AwsLightsailUpdateLoadBalancerAttributeInput!, config: AwsConfig): AwsLightsailUpdateLoadBalancerAttributeOutput
  updateRelationalDatabase(input: AwsLightsailUpdateRelationalDatabaseInput!, config: AwsConfig): AwsLightsailUpdateRelationalDatabaseOutput
  updateRelationalDatabaseParameters(input: AwsLightsailUpdateRelationalDatabaseParametersInput!, config: AwsConfig): AwsLightsailUpdateRelationalDatabaseParametersOutput
}

input AwsLightsailAllocateStaticIpInput {
  staticIpName: String!
}

type AwsLightsailAllocateStaticIpOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachDiskInput {
  diskName: String!
  instanceName: String!
  diskPath: String!
}

type AwsLightsailAttachDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachInstancesToLoadBalancerInput {
  loadBalancerName: String!
  instanceNames: [String]!
}

type AwsLightsailAttachInstancesToLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachLoadBalancerTlsCertificateInput {
  loadBalancerName: String!
  certificateName: String!
}

type AwsLightsailAttachLoadBalancerTlsCertificateOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachStaticIpInput {
  staticIpName: String!
  instanceName: String!
}

type AwsLightsailAttachStaticIpOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCloseInstancePublicPortsInput {
  portInfo: AwsLightsailSpInput!
  instanceName: String!
}

type AwsLightsailCloseInstancePublicPortsOutput {
  operation: AwsLightsailS5
}

input AwsLightsailCopySnapshotInput {
  sourceSnapshotName: String!
  targetSnapshotName: String!
  sourceRegion: String!
}

type AwsLightsailCopySnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateCloudFormationStackInput {
  instances: [AwsLightsailCreateCloudFormationStackInstancesInput]!
}

input AwsLightsailCreateCloudFormationStackInstancesInput {
  sourceName: String!
  instanceType: String!
  portInfoSource: String!
  userData: String
  availabilityZone: String!
}

type AwsLightsailCreateCloudFormationStackOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateDiskFromSnapshotInput {
  diskName: String!
  diskSnapshotName: String!
  availabilityZone: String!
  sizeInGb: Int!
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateDiskFromSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateDiskInput {
  diskName: String!
  availabilityZone: String!
  sizeInGb: Int!
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateDiskSnapshotInput {
  diskName: String
  diskSnapshotName: String!
  instanceName: String
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateDiskSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateDomainEntryInput {
  domainName: String!
  domainEntry: AwsLightsailS1fInput!
}

type AwsLightsailCreateDomainEntryOutput {
  operation: AwsLightsailS5
}

input AwsLightsailCreateDomainInput {
  domainName: String!
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateDomainOutput {
  operation: AwsLightsailS5
}

input AwsLightsailCreateInstancesFromSnapshotInput {
  instanceNames: [String]!
  attachedDiskMapping: JSON
  availabilityZone: String!
  instanceSnapshotName: String!
  bundleId: String!
  userData: String
  keyPairName: String
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateInstancesFromSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateInstancesInput {
  instanceNames: [String]!
  availabilityZone: String!
  customImageName: String
  blueprintId: String!
  bundleId: String!
  userData: String
  keyPairName: String
  tags: [AwsLightsailS12Input]
}

input AwsLightsailCreateInstanceSnapshotInput {
  instanceSnapshotName: String!
  instanceName: String!
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateInstanceSnapshotOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailCreateInstancesOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateKeyPairInput {
  keyPairName: String!
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateKeyPairOutput {
  keyPair: AwsLightsailS1w
  publicKeyBase64: String
  privateKeyBase64: String
  operation: AwsLightsailS5
}

input AwsLightsailCreateLoadBalancerInput {
  loadBalancerName: String!
  instancePort: Int!
  healthCheckPath: String
  certificateName: String
  certificateDomainName: String
  certificateAlternativeNames: [String]
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateLoadBalancerTlsCertificateInput {
  loadBalancerName: String!
  certificateName: String!
  certificateDomainName: String!
  certificateAlternativeNames: [String]
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateLoadBalancerTlsCertificateOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateRelationalDatabaseFromSnapshotInput {
  relationalDatabaseName: String!
  availabilityZone: String
  publiclyAccessible: Boolean
  relationalDatabaseSnapshotName: String
  relationalDatabaseBundleId: String
  sourceRelationalDatabaseName: String
  restoreTime: Date
  useLatestRestorableTime: Boolean
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateRelationalDatabaseFromSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateRelationalDatabaseInput {
  relationalDatabaseName: String!
  availabilityZone: String
  relationalDatabaseBlueprintId: String!
  relationalDatabaseBundleId: String!
  masterDatabaseName: String!
  masterUsername: String!
  masterUserPassword: String
  preferredBackupWindow: String
  preferredMaintenanceWindow: String
  publiclyAccessible: Boolean
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateRelationalDatabaseOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateRelationalDatabaseSnapshotInput {
  relationalDatabaseName: String!
  relationalDatabaseSnapshotName: String!
  tags: [AwsLightsailS12Input]
}

type AwsLightsailCreateRelationalDatabaseSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteDiskInput {
  diskName: String!
}

type AwsLightsailDeleteDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteDiskSnapshotInput {
  diskSnapshotName: String!
}

type AwsLightsailDeleteDiskSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteDomainEntryInput {
  domainName: String!
  domainEntry: AwsLightsailS1fInput!
}

type AwsLightsailDeleteDomainEntryOutput {
  operation: AwsLightsailS5
}

input AwsLightsailDeleteDomainInput {
  domainName: String!
}

type AwsLightsailDeleteDomainOutput {
  operation: AwsLightsailS5
}

input AwsLightsailDeleteInstanceInput {
  instanceName: String!
}

type AwsLightsailDeleteInstanceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteInstanceSnapshotInput {
  instanceSnapshotName: String!
}

type AwsLightsailDeleteInstanceSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteKeyPairInput {
  keyPairName: String!
}

type AwsLightsailDeleteKeyPairOutput {
  operation: AwsLightsailS5
}

input AwsLightsailDeleteKnownHostKeysInput {
  instanceName: String!
}

type AwsLightsailDeleteKnownHostKeysOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteLoadBalancerInput {
  loadBalancerName: String!
}

type AwsLightsailDeleteLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteLoadBalancerTlsCertificateInput {
  loadBalancerName: String!
  certificateName: String!
  force: Boolean
}

type AwsLightsailDeleteLoadBalancerTlsCertificateOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteRelationalDatabaseInput {
  relationalDatabaseName: String!
  skipFinalSnapshot: Boolean
  finalRelationalDatabaseSnapshotName: String
}

type AwsLightsailDeleteRelationalDatabaseOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteRelationalDatabaseSnapshotInput {
  relationalDatabaseSnapshotName: String!
}

type AwsLightsailDeleteRelationalDatabaseSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDetachDiskInput {
  diskName: String!
}

type AwsLightsailDetachDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDetachInstancesFromLoadBalancerInput {
  loadBalancerName: String!
  instanceNames: [String]!
}

type AwsLightsailDetachInstancesFromLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDetachStaticIpInput {
  staticIpName: String!
}

type AwsLightsailDetachStaticIpOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailDownloadDefaultKeyPairOutput {
  publicKeyBase64: String
  privateKeyBase64: String
}

input AwsLightsailExportSnapshotInput {
  sourceSnapshotName: String!
}

type AwsLightsailExportSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailGetActiveNamesInput {
  pageToken: String
}

type AwsLightsailGetActiveNamesOutput {
  activeNames: [String]
  nextPageToken: String
}

input AwsLightsailGetBlueprintsInput {
  includeInactive: Boolean
  pageToken: String
}

type AwsLightsailGetBlueprintsOutput {
  blueprints: [AwsLightsailGetBlueprintsOutputBlueprints]
  nextPageToken: String
}

type AwsLightsailGetBlueprintsOutputBlueprints {
  blueprintId: String
  name: String
  group: String
  type: String
  description: String
  isActive: Boolean
  minPower: Int
  version: String
  versionCode: String
  productUrl: String
  licenseUrl: String
  platform: String
}

input AwsLightsailGetBundlesInput {
  includeInactive: Boolean
  pageToken: String
}

type AwsLightsailGetBundlesOutput {
  bundles: [AwsLightsailGetBundlesOutputBundles]
  nextPageToken: String
}

type AwsLightsailGetBundlesOutputBundles {
  price: Float
  cpuCount: Int
  diskSizeInGb: Int
  bundleId: String
  instanceType: String
  isActive: Boolean
  name: String
  power: Int
  ramSizeInGb: Float
  transferPerMonthInGb: Int
  supportedPlatforms: [String]
}

input AwsLightsailGetCloudFormationStackRecordsInput {
  pageToken: String
}

type AwsLightsailGetCloudFormationStackRecordsOutput {
  cloudFormationStackRecords: [AwsLightsailGetCloudFormationStackRecordsOutputCloudFormationStackRecords]
  nextPageToken: String
}

type AwsLightsailGetCloudFormationStackRecordsOutputCloudFormationStackRecords {
  name: String
  arn: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  state: String
  sourceInfo: [AwsLightsailGetCloudFormationStackRecordsOutputCloudFormationStackRecordsSourceInfo]
  destinationInfo: AwsLightsailS3u
}

type AwsLightsailGetCloudFormationStackRecordsOutputCloudFormationStackRecordsSourceInfo {
  resourceType: String
  name: String
  arn: String
}

input AwsLightsailGetDiskInput {
  diskName: String!
}

type AwsLightsailGetDiskOutput {
  disk: AwsLightsailS3x
}

input AwsLightsailGetDisksInput {
  pageToken: String
}

input AwsLightsailGetDiskSnapshotInput {
  diskSnapshotName: String!
}

type AwsLightsailGetDiskSnapshotOutput {
  diskSnapshot: AwsLightsailS41
}

input AwsLightsailGetDiskSnapshotsInput {
  pageToken: String
}

type AwsLightsailGetDiskSnapshotsOutput {
  diskSnapshots: [AwsLightsailS41]
  nextPageToken: String
}

type AwsLightsailGetDisksOutput {
  disks: [AwsLightsailS3x]
  nextPageToken: String
}

input AwsLightsailGetDomainInput {
  domainName: String!
}

type AwsLightsailGetDomainOutput {
  domain: AwsLightsailS4b
}

input AwsLightsailGetDomainsInput {
  pageToken: String
}

type AwsLightsailGetDomainsOutput {
  domains: [AwsLightsailS4b]
  nextPageToken: String
}

input AwsLightsailGetExportSnapshotRecordsInput {
  pageToken: String
}

type AwsLightsailGetExportSnapshotRecordsOutput {
  exportSnapshotRecords: [AwsLightsailGetExportSnapshotRecordsOutputExportSnapshotRecords]
  nextPageToken: String
}

type AwsLightsailGetExportSnapshotRecordsOutputExportSnapshotRecords {
  name: String
  arn: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  state: String
  sourceInfo: AwsLightsailGetExportSnapshotRecordsOutputExportSnapshotRecordsSourceInfo
  destinationInfo: AwsLightsailS3u
}

type AwsLightsailGetExportSnapshotRecordsOutputExportSnapshotRecordsSourceInfo {
  resourceType: String
  createdAt: Date
  name: String
  arn: String
  fromResourceName: String
  fromResourceArn: String
  instanceSnapshotInfo: AwsLightsailGetExportSnapshotRecordsOutputExportSnapshotRecordsSourceInfoInstanceSnapshotInfo
  diskSnapshotInfo: AwsLightsailGetExportSnapshotRecordsOutputExportSnapshotRecordsSourceInfoDiskSnapshotInfo
}

type AwsLightsailGetExportSnapshotRecordsOutputExportSnapshotRecordsSourceInfoDiskSnapshotInfo {
  sizeInGb: Int
}

type AwsLightsailGetExportSnapshotRecordsOutputExportSnapshotRecordsSourceInfoInstanceSnapshotInfo {
  fromBundleId: String
  fromBlueprintId: String
  fromDiskInfo: [AwsLightsailGetExportSnapshotRecordsOutputExportSnapshotRecordsSourceInfoInstanceSnapshotInfoFromDiskInfo]
}

type AwsLightsailGetExportSnapshotRecordsOutputExportSnapshotRecordsSourceInfoInstanceSnapshotInfoFromDiskInfo {
  name: String
  path: String
  sizeInGb: Int
  isSystemDisk: Boolean
}

input AwsLightsailGetInstanceAccessDetailsInput {
  instanceName: String!
  protocol: String
}

type AwsLightsailGetInstanceAccessDetailsOutput {
  accessDetails: AwsLightsailGetInstanceAccessDetailsOutputAccessDetails
}

type AwsLightsailGetInstanceAccessDetailsOutputAccessDetails {
  certKey: String
  expiresAt: Date
  ipAddress: String
  password: String
  passwordData: AwsLightsailGetInstanceAccessDetailsOutputAccessDetailsPasswordData
  privateKey: String
  protocol: String
  instanceName: String
  username: String
  hostKeys: [AwsLightsailGetInstanceAccessDetailsOutputAccessDetailsHostKeys]
}

type AwsLightsailGetInstanceAccessDetailsOutputAccessDetailsHostKeys {
  algorithm: String
  publicKey: String
  witnessedAt: Date
  fingerprintSHA1: String
  fingerprintSHA256: String
  notValidBefore: Date
  notValidAfter: Date
}

type AwsLightsailGetInstanceAccessDetailsOutputAccessDetailsPasswordData {
  ciphertext: String
  keyPairName: String
}

input AwsLightsailGetInstanceInput {
  instanceName: String!
}

input AwsLightsailGetInstanceMetricDataInput {
  instanceName: String!
  metricName: String!
  period: Int!
  startTime: Date!
  endTime: Date!
  unit: String!
  statistics: [String]!
}

type AwsLightsailGetInstanceMetricDataOutput {
  metricName: String
  metricData: [AwsLightsailS5i]
}

type AwsLightsailGetInstanceOutput {
  instance: AwsLightsailS4s
}

input AwsLightsailGetInstancePortStatesInput {
  instanceName: String!
}

type AwsLightsailGetInstancePortStatesOutput {
  portStates: [AwsLightsailGetInstancePortStatesOutputPortStates]
}

type AwsLightsailGetInstancePortStatesOutputPortStates {
  fromPort: Int
  toPort: Int
  protocol: String
  state: String
}

input AwsLightsailGetInstancesInput {
  pageToken: String
}

input AwsLightsailGetInstanceSnapshotInput {
  instanceSnapshotName: String!
}

type AwsLightsailGetInstanceSnapshotOutput {
  instanceSnapshot: AwsLightsailS5s
}

input AwsLightsailGetInstanceSnapshotsInput {
  pageToken: String
}

type AwsLightsailGetInstanceSnapshotsOutput {
  instanceSnapshots: [AwsLightsailS5s]
  nextPageToken: String
}

type AwsLightsailGetInstancesOutput {
  instances: [AwsLightsailS4s]
  nextPageToken: String
}

input AwsLightsailGetInstanceStateInput {
  instanceName: String!
}

type AwsLightsailGetInstanceStateOutput {
  state: AwsLightsailS52
}

input AwsLightsailGetKeyPairInput {
  keyPairName: String!
}

type AwsLightsailGetKeyPairOutput {
  keyPair: AwsLightsailS1w
}

input AwsLightsailGetKeyPairsInput {
  pageToken: String
}

type AwsLightsailGetKeyPairsOutput {
  keyPairs: [AwsLightsailS1w]
  nextPageToken: String
}

input AwsLightsailGetLoadBalancerInput {
  loadBalancerName: String!
}

input AwsLightsailGetLoadBalancerMetricDataInput {
  loadBalancerName: String!
  metricName: String!
  period: Int!
  startTime: Date!
  endTime: Date!
  unit: String!
  statistics: [String]!
}

type AwsLightsailGetLoadBalancerMetricDataOutput {
  metricName: String
  metricData: [AwsLightsailS5i]
}

type AwsLightsailGetLoadBalancerOutput {
  loadBalancer: AwsLightsailS69
}

input AwsLightsailGetLoadBalancersInput {
  pageToken: String
}

type AwsLightsailGetLoadBalancersOutput {
  loadBalancers: [AwsLightsailS69]
  nextPageToken: String
}

input AwsLightsailGetLoadBalancerTlsCertificatesInput {
  loadBalancerName: String!
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutput {
  tlsCertificates: [AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificates]
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificates {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  tags: [AwsLightsailS12]
  loadBalancerName: String
  isAttached: Boolean
  status: String
  domainName: String
  domainValidationRecords: [AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesDomainValidationRecords]
  failureReason: String
  issuedAt: Date
  issuer: String
  keyAlgorithm: String
  notAfter: Date
  notBefore: Date
  renewalSummary: AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummary
  revocationReason: String
  revokedAt: Date
  serial: String
  signatureAlgorithm: String
  subject: String
  subjectAlternativeNames: [String]
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesDomainValidationRecords {
  name: String
  type: String
  value: String
  validationStatus: String
  domainName: String
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummary {
  renewalStatus: String
  domainValidationOptions: [AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummaryDomainValidationOptions]
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummaryDomainValidationOptions {
  domainName: String
  validationStatus: String
}

input AwsLightsailGetOperationInput {
  operationId: String!
}

type AwsLightsailGetOperationOutput {
  operation: AwsLightsailS5
}

input AwsLightsailGetOperationsForResourceInput {
  resourceName: String!
  pageToken: String
}

type AwsLightsailGetOperationsForResourceOutput {
  operations: [AwsLightsailS5]
  nextPageCount: String
  nextPageToken: String
}

input AwsLightsailGetOperationsInput {
  pageToken: String
}

type AwsLightsailGetOperationsOutput {
  operations: [AwsLightsailS5]
  nextPageToken: String
}

input AwsLightsailGetRegionsInput {
  includeAvailabilityZones: Boolean
  includeRelationalDatabaseAvailabilityZones: Boolean
}

type AwsLightsailGetRegionsOutput {
  regions: [AwsLightsailGetRegionsOutputRegions]
}

type AwsLightsailGetRegionsOutputRegions {
  continentCode: String
  description: String
  displayName: String
  name: String
  availabilityZones: [AwsLightsailS7f]
  relationalDatabaseAvailabilityZones: [AwsLightsailS7f]
}

input AwsLightsailGetRelationalDatabaseBlueprintsInput {
  pageToken: String
}

type AwsLightsailGetRelationalDatabaseBlueprintsOutput {
  blueprints: [AwsLightsailGetRelationalDatabaseBlueprintsOutputBlueprints]
  nextPageToken: String
}

type AwsLightsailGetRelationalDatabaseBlueprintsOutputBlueprints {
  blueprintId: String
  engine: String
  engineVersion: String
  engineDescription: String
  engineVersionDescription: String
  isEngineDefault: Boolean
}

input AwsLightsailGetRelationalDatabaseBundlesInput {
  pageToken: String
}

type AwsLightsailGetRelationalDatabaseBundlesOutput {
  bundles: [AwsLightsailGetRelationalDatabaseBundlesOutputBundles]
  nextPageToken: String
}

type AwsLightsailGetRelationalDatabaseBundlesOutputBundles {
  bundleId: String
  name: String
  price: Float
  ramSizeInGb: Float
  diskSizeInGb: Int
  transferPerMonthInGb: Int
  cpuCount: Int
  isEncrypted: Boolean
  isActive: Boolean
}

input AwsLightsailGetRelationalDatabaseEventsInput {
  relationalDatabaseName: String!
  durationInMinutes: Int
  pageToken: String
}

type AwsLightsailGetRelationalDatabaseEventsOutput {
  relationalDatabaseEvents: [AwsLightsailGetRelationalDatabaseEventsOutputRelationalDatabaseEvents]
  nextPageToken: String
}

type AwsLightsailGetRelationalDatabaseEventsOutputRelationalDatabaseEvents {
  resource: String
  createdAt: Date
  message: String
  eventCategories: [String]
}

input AwsLightsailGetRelationalDatabaseInput {
  relationalDatabaseName: String!
}

input AwsLightsailGetRelationalDatabaseLogEventsInput {
  relationalDatabaseName: String!
  logStreamName: String!
  startTime: Date
  endTime: Date
  startFromHead: Boolean
  pageToken: String
}

type AwsLightsailGetRelationalDatabaseLogEventsOutput {
  resourceLogEvents: [AwsLightsailGetRelationalDatabaseLogEventsOutputResourceLogEvents]
  nextBackwardToken: String
  nextForwardToken: String
}

type AwsLightsailGetRelationalDatabaseLogEventsOutputResourceLogEvents {
  createdAt: Date
  message: String
}

input AwsLightsailGetRelationalDatabaseLogStreamsInput {
  relationalDatabaseName: String!
}

type AwsLightsailGetRelationalDatabaseLogStreamsOutput {
  logStreams: [String]
}

input AwsLightsailGetRelationalDatabaseMasterUserPasswordInput {
  relationalDatabaseName: String!
  passwordVersion: String
}

type AwsLightsailGetRelationalDatabaseMasterUserPasswordOutput {
  masterUserPassword: String
  createdAt: Date
}

input AwsLightsailGetRelationalDatabaseMetricDataInput {
  relationalDatabaseName: String!
  metricName: String!
  period: Int!
  startTime: Date!
  endTime: Date!
  unit: String!
  statistics: [String]!
}

type AwsLightsailGetRelationalDatabaseMetricDataOutput {
  metricName: String
  metricData: [AwsLightsailS5i]
}

type AwsLightsailGetRelationalDatabaseOutput {
  relationalDatabase: AwsLightsailS7j
}

input AwsLightsailGetRelationalDatabaseParametersInput {
  relationalDatabaseName: String!
  pageToken: String
}

type AwsLightsailGetRelationalDatabaseParametersOutput {
  parameters: [AwsLightsailS8g]
  nextPageToken: String
}

input AwsLightsailGetRelationalDatabasesInput {
  pageToken: String
}

input AwsLightsailGetRelationalDatabaseSnapshotInput {
  relationalDatabaseSnapshotName: String!
}

type AwsLightsailGetRelationalDatabaseSnapshotOutput {
  relationalDatabaseSnapshot: AwsLightsailS8k
}

input AwsLightsailGetRelationalDatabaseSnapshotsInput {
  pageToken: String
}

type AwsLightsailGetRelationalDatabaseSnapshotsOutput {
  relationalDatabaseSnapshots: [AwsLightsailS8k]
  nextPageToken: String
}

type AwsLightsailGetRelationalDatabasesOutput {
  relationalDatabases: [AwsLightsailS7j]
  nextPageToken: String
}

input AwsLightsailGetStaticIpInput {
  staticIpName: String!
}

type AwsLightsailGetStaticIpOutput {
  staticIp: AwsLightsailS8t
}

input AwsLightsailGetStaticIpsInput {
  pageToken: String
}

type AwsLightsailGetStaticIpsOutput {
  staticIps: [AwsLightsailS8t]
  nextPageToken: String
}

input AwsLightsailImportKeyPairInput {
  keyPairName: String!
  publicKeyBase64: String!
}

type AwsLightsailImportKeyPairOutput {
  operation: AwsLightsailS5
}

type AwsLightsailIsVpcPeeredOutput {
  isPeered: Boolean
}

input AwsLightsailOpenInstancePublicPortsInput {
  portInfo: AwsLightsailSpInput!
  instanceName: String!
}

type AwsLightsailOpenInstancePublicPortsOutput {
  operation: AwsLightsailS5
}

type AwsLightsailPeerVpcOutput {
  operation: AwsLightsailS5
}

input AwsLightsailPutInstancePublicPortsInput {
  portInfos: [AwsLightsailSpInput]!
  instanceName: String!
}

type AwsLightsailPutInstancePublicPortsOutput {
  operation: AwsLightsailS5
}

input AwsLightsailRebootInstanceInput {
  instanceName: String!
}

type AwsLightsailRebootInstanceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailRebootRelationalDatabaseInput {
  relationalDatabaseName: String!
}

type AwsLightsailRebootRelationalDatabaseOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailReleaseStaticIpInput {
  staticIpName: String!
}

type AwsLightsailReleaseStaticIpOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailS12 {
  key: String
  value: String
}

input AwsLightsailS12Input {
  key: String
  value: String
}

type AwsLightsailS1f {
  id: String
  name: String
  target: String
  isAlias: Boolean
  type: String
  options: JSON
}

input AwsLightsailS1fInput {
  id: String
  name: String
  target: String
  isAlias: Boolean
  type: String
  options: JSON
}

type AwsLightsailS1w {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  tags: [AwsLightsailS12]
  fingerprint: String
}

type AwsLightsailS3u {
  id: String
  service: String
}

type AwsLightsailS3x {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  tags: [AwsLightsailS12]
  sizeInGb: Int
  isSystemDisk: Boolean
  iops: Int
  path: String
  state: String
  attachedTo: String
  isAttached: Boolean
  attachmentState: String
  gbInUse: Int
}

type AwsLightsailS41 {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  tags: [AwsLightsailS12]
  sizeInGb: Int
  state: String
  progress: String
  fromDiskName: String
  fromDiskArn: String
  fromInstanceName: String
  fromInstanceArn: String
}

type AwsLightsailS4b {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  tags: [AwsLightsailS12]
  domainEntries: [AwsLightsailS1f]
}

type AwsLightsailS4s {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  tags: [AwsLightsailS12]
  blueprintId: String
  blueprintName: String
  bundleId: String
  isStaticIp: Boolean
  privateIpAddress: String
  publicIpAddress: String
  ipv6Address: String
  hardware: AwsLightsailS4sHardware
  networking: AwsLightsailS4sNetworking
  state: AwsLightsailS52
  username: String
  sshKeyName: String
}

type AwsLightsailS4sHardware {
  cpuCount: Int
  disks: [AwsLightsailS3x]
  ramSizeInGb: Float
}

type AwsLightsailS4sNetworking {
  monthlyTransfer: AwsLightsailS4sNetworkingMonthlyTransfer
  ports: [AwsLightsailS4sNetworkingPorts]
}

type AwsLightsailS4sNetworkingMonthlyTransfer {
  gbPerMonthAllocated: Int
}

type AwsLightsailS4sNetworkingPorts {
  fromPort: Int
  toPort: Int
  protocol: String
  accessFrom: String
  accessType: String
  commonName: String
  accessDirection: String
}

type AwsLightsailS5 {
  id: String
  resourceName: String
  resourceType: String
  createdAt: Date
  location: AwsLightsailS9
  isTerminal: Boolean
  operationDetails: String
  operationType: String
  status: String
  statusChangedAt: Date
  errorCode: String
  errorDetails: String
}

type AwsLightsailS52 {
  code: Int
  name: String
}

type AwsLightsailS5i {
  average: JSON
  maximum: JSON
  minimum: JSON
  sampleCount: JSON
  sum: JSON
  timestamp: Date
  unit: String
}

type AwsLightsailS5s {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  tags: [AwsLightsailS12]
  state: String
  progress: String
  fromAttachedDisks: [AwsLightsailS3x]
  fromInstanceName: String
  fromInstanceArn: String
  fromBlueprintId: String
  fromBundleId: String
  sizeInGb: Int
}

type AwsLightsailS69 {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  tags: [AwsLightsailS12]
  dnsName: String
  state: String
  protocol: String
  publicPorts: [Int]
  healthCheckPath: String
  instancePort: Int
  instanceHealthSummary: [AwsLightsailS69InstanceHealthSummary]
  tlsCertificateSummaries: [AwsLightsailS69TlsCertificateSummaries]
  configurationOptions: JSON
}

type AwsLightsailS69InstanceHealthSummary {
  instanceName: String
  instanceHealth: String
  instanceHealthReason: String
}

type AwsLightsailS69TlsCertificateSummaries {
  name: String
  isAttached: Boolean
}

type AwsLightsailS7f {
  zoneName: String
  state: String
}

type AwsLightsailS7j {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  tags: [AwsLightsailS12]
  relationalDatabaseBlueprintId: String
  relationalDatabaseBundleId: String
  masterDatabaseName: String
  hardware: AwsLightsailS7jHardware
  state: String
  secondaryAvailabilityZone: String
  backupRetentionEnabled: Boolean
  pendingModifiedValues: AwsLightsailS7jPendingModifiedValues
  engine: String
  engineVersion: String
  latestRestorableTime: Date
  masterUsername: String
  parameterApplyStatus: String
  preferredBackupWindow: String
  preferredMaintenanceWindow: String
  publiclyAccessible: Boolean
  masterEndpoint: AwsLightsailS7jMasterEndpoint
  pendingMaintenanceActions: [AwsLightsailS7jPendingMaintenanceActions]
}

type AwsLightsailS7jHardware {
  cpuCount: Int
  diskSizeInGb: Int
  ramSizeInGb: Float
}

type AwsLightsailS7jMasterEndpoint {
  port: Int
  address: String
}

type AwsLightsailS7jPendingMaintenanceActions {
  action: String
  description: String
  currentApplyDate: Date
}

type AwsLightsailS7jPendingModifiedValues {
  masterUserPassword: String
  engineVersion: String
  backupRetentionEnabled: Boolean
}

type AwsLightsailS8g {
  allowedValues: String
  applyMethod: String
  applyType: String
  dataType: String
  description: String
  isModifiable: Boolean
  parameterName: String
  parameterValue: String
}

input AwsLightsailS8gInput {
  allowedValues: String
  applyMethod: String
  applyType: String
  dataType: String
  description: String
  isModifiable: Boolean
  parameterName: String
  parameterValue: String
}

type AwsLightsailS8k {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  tags: [AwsLightsailS12]
  engine: String
  engineVersion: String
  sizeInGb: Int
  state: String
  fromRelationalDatabaseName: String
  fromRelationalDatabaseArn: String
  fromRelationalDatabaseBundleId: String
  fromRelationalDatabaseBlueprintId: String
}

type AwsLightsailS8t {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  ipAddress: String
  attachedTo: String
  isAttached: Boolean
}

type AwsLightsailS9 {
  availabilityZone: String
  regionName: String
}

input AwsLightsailSpInput {
  fromPort: Int
  toPort: Int
  protocol: String
}

input AwsLightsailStartInstanceInput {
  instanceName: String!
}

type AwsLightsailStartInstanceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailStartRelationalDatabaseInput {
  relationalDatabaseName: String!
}

type AwsLightsailStartRelationalDatabaseOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailStopInstanceInput {
  instanceName: String!
  force: Boolean
}

type AwsLightsailStopInstanceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailStopRelationalDatabaseInput {
  relationalDatabaseName: String!
  relationalDatabaseSnapshotName: String
}

type AwsLightsailStopRelationalDatabaseOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailTagResourceInput {
  resourceName: String!
  tags: [AwsLightsailS12Input]!
}

type AwsLightsailTagResourceOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailUnpeerVpcOutput {
  operation: AwsLightsailS5
}

input AwsLightsailUntagResourceInput {
  resourceName: String!
  tagKeys: [String]!
}

type AwsLightsailUntagResourceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailUpdateDomainEntryInput {
  domainName: String!
  domainEntry: AwsLightsailS1fInput!
}

type AwsLightsailUpdateDomainEntryOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailUpdateLoadBalancerAttributeInput {
  loadBalancerName: String!
  attributeName: String!
  attributeValue: String!
}

type AwsLightsailUpdateLoadBalancerAttributeOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailUpdateRelationalDatabaseInput {
  relationalDatabaseName: String!
  masterUserPassword: String
  rotateMasterUserPassword: Boolean
  preferredBackupWindow: String
  preferredMaintenanceWindow: String
  enableBackupRetention: Boolean
  disableBackupRetention: Boolean
  publiclyAccessible: Boolean
  applyImmediately: Boolean
}

type AwsLightsailUpdateRelationalDatabaseOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailUpdateRelationalDatabaseParametersInput {
  relationalDatabaseName: String!
  parameters: [AwsLightsailS8gInput]!
}

type AwsLightsailUpdateRelationalDatabaseParametersOutput {
  operations: [AwsLightsailS5]
}

"""Amazon Machine Learning (2014-12-12)"""
type AwsMachineLearning {
  addTags(input: AwsMachineLearningAddTagsInput!, config: AwsConfig): AwsMachineLearningAddTagsOutput
  createBatchPrediction(input: AwsMachineLearningCreateBatchPredictionInput!, config: AwsConfig): AwsMachineLearningCreateBatchPredictionOutput
  createDataSourceFromRDS(input: AwsMachineLearningCreateDataSourceFromRDSInput!, config: AwsConfig): AwsMachineLearningCreateDataSourceFromRDSOutput
  createDataSourceFromRedshift(input: AwsMachineLearningCreateDataSourceFromRedshiftInput!, config: AwsConfig): AwsMachineLearningCreateDataSourceFromRedshiftOutput
  createDataSourceFromS3(input: AwsMachineLearningCreateDataSourceFromS3Input!, config: AwsConfig): AwsMachineLearningCreateDataSourceFromS3Output
  createEvaluation(input: AwsMachineLearningCreateEvaluationInput!, config: AwsConfig): AwsMachineLearningCreateEvaluationOutput
  createMLModel(input: AwsMachineLearningCreateMLModelInput!, config: AwsConfig): AwsMachineLearningCreateMLModelOutput
  createRealtimeEndpoint(input: AwsMachineLearningCreateRealtimeEndpointInput!, config: AwsConfig): AwsMachineLearningCreateRealtimeEndpointOutput
  deleteBatchPrediction(input: AwsMachineLearningDeleteBatchPredictionInput!, config: AwsConfig): AwsMachineLearningDeleteBatchPredictionOutput
  deleteDataSource(input: AwsMachineLearningDeleteDataSourceInput!, config: AwsConfig): AwsMachineLearningDeleteDataSourceOutput
  deleteEvaluation(input: AwsMachineLearningDeleteEvaluationInput!, config: AwsConfig): AwsMachineLearningDeleteEvaluationOutput
  deleteMLModel(input: AwsMachineLearningDeleteMLModelInput!, config: AwsConfig): AwsMachineLearningDeleteMLModelOutput
  deleteRealtimeEndpoint(input: AwsMachineLearningDeleteRealtimeEndpointInput!, config: AwsConfig): AwsMachineLearningDeleteRealtimeEndpointOutput
  deleteTags(input: AwsMachineLearningDeleteTagsInput!, config: AwsConfig): AwsMachineLearningDeleteTagsOutput
  describeBatchPredictions(input: AwsMachineLearningDescribeBatchPredictionsInput, config: AwsConfig): AwsMachineLearningDescribeBatchPredictionsOutput
  describeDataSources(input: AwsMachineLearningDescribeDataSourcesInput, config: AwsConfig): AwsMachineLearningDescribeDataSourcesOutput
  describeEvaluations(input: AwsMachineLearningDescribeEvaluationsInput, config: AwsConfig): AwsMachineLearningDescribeEvaluationsOutput
  describeMLModels(input: AwsMachineLearningDescribeMLModelsInput, config: AwsConfig): AwsMachineLearningDescribeMLModelsOutput
  describeTags(input: AwsMachineLearningDescribeTagsInput!, config: AwsConfig): AwsMachineLearningDescribeTagsOutput
  getBatchPrediction(input: AwsMachineLearningGetBatchPredictionInput!, config: AwsConfig): AwsMachineLearningGetBatchPredictionOutput
  getDataSource(input: AwsMachineLearningGetDataSourceInput!, config: AwsConfig): AwsMachineLearningGetDataSourceOutput
  getEvaluation(input: AwsMachineLearningGetEvaluationInput!, config: AwsConfig): AwsMachineLearningGetEvaluationOutput
  getMLModel(input: AwsMachineLearningGetMLModelInput!, config: AwsConfig): AwsMachineLearningGetMLModelOutput
  predict(input: AwsMachineLearningPredictInput!, config: AwsConfig): AwsMachineLearningPredictOutput
  updateBatchPrediction(input: AwsMachineLearningUpdateBatchPredictionInput!, config: AwsConfig): AwsMachineLearningUpdateBatchPredictionOutput
  updateDataSource(input: AwsMachineLearningUpdateDataSourceInput!, config: AwsConfig): AwsMachineLearningUpdateDataSourceOutput
  updateEvaluation(input: AwsMachineLearningUpdateEvaluationInput!, config: AwsConfig): AwsMachineLearningUpdateEvaluationOutput
  updateMLModel(input: AwsMachineLearningUpdateMLModelInput!, config: AwsConfig): AwsMachineLearningUpdateMLModelOutput
}

input AwsMachineLearningAddTagsInput {
  Tags: [AwsMachineLearningS2Input]!
  ResourceId: String!
  ResourceType: String!
}

type AwsMachineLearningAddTagsOutput {
  ResourceId: String
  ResourceType: String
}

input AwsMachineLearningCreateBatchPredictionInput {
  BatchPredictionId: String!
  BatchPredictionName: String
  MLModelId: String!
  BatchPredictionDataSourceId: String!
  OutputUri: String!
}

type AwsMachineLearningCreateBatchPredictionOutput {
  BatchPredictionId: String
}

input AwsMachineLearningCreateDataSourceFromRDSInput {
  DataSourceId: String!
  DataSourceName: String
  RDSData: AwsMachineLearningCreateDataSourceFromRDSRDSDataInput!
  RoleARN: String!
  ComputeStatistics: Boolean
}

type AwsMachineLearningCreateDataSourceFromRDSOutput {
  DataSourceId: String
}

input AwsMachineLearningCreateDataSourceFromRDSRDSDataDatabaseCredentialsInput {
  Username: String!
  Password: String!
}

input AwsMachineLearningCreateDataSourceFromRDSRDSDataInput {
  DatabaseInformation: AwsMachineLearningSfInput!
  SelectSqlQuery: String!
  DatabaseCredentials: AwsMachineLearningCreateDataSourceFromRDSRDSDataDatabaseCredentialsInput!
  S3StagingLocation: String!
  DataRearrangement: String
  DataSchema: String
  DataSchemaUri: String
  ResourceRole: String!
  ServiceRole: String!
  SubnetId: String!
  SecurityGroupIds: [String]!
}

input AwsMachineLearningCreateDataSourceFromRedshiftDataSpecDatabaseCredentialsInput {
  Username: String!
  Password: String!
}

input AwsMachineLearningCreateDataSourceFromRedshiftDataSpecInput {
  DatabaseInformation: AwsMachineLearningSyInput!
  SelectSqlQuery: String!
  DatabaseCredentials: AwsMachineLearningCreateDataSourceFromRedshiftDataSpecDatabaseCredentialsInput!
  S3StagingLocation: String!
  DataRearrangement: String
  DataSchema: String
  DataSchemaUri: String
}

input AwsMachineLearningCreateDataSourceFromRedshiftInput {
  DataSourceId: String!
  DataSourceName: String
  DataSpec: AwsMachineLearningCreateDataSourceFromRedshiftDataSpecInput!
  RoleARN: String!
  ComputeStatistics: Boolean
}

type AwsMachineLearningCreateDataSourceFromRedshiftOutput {
  DataSourceId: String
}

input AwsMachineLearningCreateDataSourceFromS3DataSpecInput {
  DataLocationS3: String!
  DataRearrangement: String
  DataSchema: String
  DataSchemaLocationS3: String
}

input AwsMachineLearningCreateDataSourceFromS3Input {
  DataSourceId: String!
  DataSourceName: String
  DataSpec: AwsMachineLearningCreateDataSourceFromS3DataSpecInput!
  ComputeStatistics: Boolean
}

type AwsMachineLearningCreateDataSourceFromS3Output {
  DataSourceId: String
}

input AwsMachineLearningCreateEvaluationInput {
  EvaluationId: String!
  EvaluationName: String
  MLModelId: String!
  EvaluationDataSourceId: String!
}

type AwsMachineLearningCreateEvaluationOutput {
  EvaluationId: String
}

input AwsMachineLearningCreateMLModelInput {
  MLModelId: String!
  MLModelName: String
  MLModelType: String!
  Parameters: JSON
  TrainingDataSourceId: String!
  Recipe: String
  RecipeUri: String
}

type AwsMachineLearningCreateMLModelOutput {
  MLModelId: String
}

input AwsMachineLearningCreateRealtimeEndpointInput {
  MLModelId: String!
}

type AwsMachineLearningCreateRealtimeEndpointOutput {
  MLModelId: String
  RealtimeEndpointInfo: AwsMachineLearningS1j
}

input AwsMachineLearningDeleteBatchPredictionInput {
  BatchPredictionId: String!
}

type AwsMachineLearningDeleteBatchPredictionOutput {
  BatchPredictionId: String
}

input AwsMachineLearningDeleteDataSourceInput {
  DataSourceId: String!
}

type AwsMachineLearningDeleteDataSourceOutput {
  DataSourceId: String
}

input AwsMachineLearningDeleteEvaluationInput {
  EvaluationId: String!
}

type AwsMachineLearningDeleteEvaluationOutput {
  EvaluationId: String
}

input AwsMachineLearningDeleteMLModelInput {
  MLModelId: String!
}

type AwsMachineLearningDeleteMLModelOutput {
  MLModelId: String
}

input AwsMachineLearningDeleteRealtimeEndpointInput {
  MLModelId: String!
}

type AwsMachineLearningDeleteRealtimeEndpointOutput {
  MLModelId: String
  RealtimeEndpointInfo: AwsMachineLearningS1j
}

input AwsMachineLearningDeleteTagsInput {
  TagKeys: [String]!
  ResourceId: String!
  ResourceType: String!
}

type AwsMachineLearningDeleteTagsOutput {
  ResourceId: String
  ResourceType: String
}

input AwsMachineLearningDescribeBatchPredictionsInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachineLearningDescribeBatchPredictionsOutput {
  Results: [AwsMachineLearningDescribeBatchPredictionsOutputResults]
  NextToken: String
}

type AwsMachineLearningDescribeBatchPredictionsOutputResults {
  BatchPredictionId: String
  MLModelId: String
  BatchPredictionDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  OutputUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  TotalRecordCount: JSON
  InvalidRecordCount: JSON
}

input AwsMachineLearningDescribeDataSourcesInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachineLearningDescribeDataSourcesOutput {
  Results: [AwsMachineLearningDescribeDataSourcesOutputResults]
  NextToken: String
}

type AwsMachineLearningDescribeDataSourcesOutputResults {
  DataSourceId: String
  DataLocationS3: String
  DataRearrangement: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  DataSizeInBytes: JSON
  NumberOfFiles: JSON
  Name: String
  Status: String
  Message: String
  RedshiftMetadata: AwsMachineLearningS2i
  RDSMetadata: AwsMachineLearningS2j
  RoleARN: String
  ComputeStatistics: Boolean
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachineLearningDescribeEvaluationsInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachineLearningDescribeEvaluationsOutput {
  Results: [AwsMachineLearningDescribeEvaluationsOutputResults]
  NextToken: String
}

type AwsMachineLearningDescribeEvaluationsOutputResults {
  EvaluationId: String
  MLModelId: String
  EvaluationDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  PerformanceMetrics: AwsMachineLearningS2q
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachineLearningDescribeMLModelsInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachineLearningDescribeMLModelsOutput {
  Results: [AwsMachineLearningDescribeMLModelsOutputResults]
  NextToken: String
}

type AwsMachineLearningDescribeMLModelsOutputResults {
  MLModelId: String
  TrainingDataSourceId: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  SizeInBytes: JSON
  EndpointInfo: AwsMachineLearningS1j
  TrainingParameters: JSON
  InputDataLocationS3: String
  Algorithm: String
  MLModelType: String
  ScoreThreshold: Float
  ScoreThresholdLastUpdatedAt: Date
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachineLearningDescribeTagsInput {
  ResourceId: String!
  ResourceType: String!
}

type AwsMachineLearningDescribeTagsOutput {
  ResourceId: String
  ResourceType: String
  Tags: [AwsMachineLearningS2]
}

input AwsMachineLearningGetBatchPredictionInput {
  BatchPredictionId: String!
}

type AwsMachineLearningGetBatchPredictionOutput {
  BatchPredictionId: String
  MLModelId: String
  BatchPredictionDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  OutputUri: String
  LogUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  TotalRecordCount: JSON
  InvalidRecordCount: JSON
}

input AwsMachineLearningGetDataSourceInput {
  DataSourceId: String!
  Verbose: Boolean
}

type AwsMachineLearningGetDataSourceOutput {
  DataSourceId: String
  DataLocationS3: String
  DataRearrangement: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  DataSizeInBytes: JSON
  NumberOfFiles: JSON
  Name: String
  Status: String
  LogUri: String
  Message: String
  RedshiftMetadata: AwsMachineLearningS2i
  RDSMetadata: AwsMachineLearningS2j
  RoleARN: String
  ComputeStatistics: Boolean
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  DataSourceSchema: String
}

input AwsMachineLearningGetEvaluationInput {
  EvaluationId: String!
}

type AwsMachineLearningGetEvaluationOutput {
  EvaluationId: String
  MLModelId: String
  EvaluationDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  PerformanceMetrics: AwsMachineLearningS2q
  LogUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachineLearningGetMLModelInput {
  MLModelId: String!
  Verbose: Boolean
}

type AwsMachineLearningGetMLModelOutput {
  MLModelId: String
  TrainingDataSourceId: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  SizeInBytes: JSON
  EndpointInfo: AwsMachineLearningS1j
  TrainingParameters: JSON
  InputDataLocationS3: String
  MLModelType: String
  ScoreThreshold: Float
  ScoreThresholdLastUpdatedAt: Date
  LogUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  Recipe: String
  Schema: String
}

input AwsMachineLearningPredictInput {
  MLModelId: String!
  Record: JSON!
  PredictEndpoint: String!
}

type AwsMachineLearningPredictOutput {
  Prediction: AwsMachineLearningPredictOutputPrediction
}

type AwsMachineLearningPredictOutputPrediction {
  predictedLabel: String
  predictedValue: Float
  predictedScores: JSON
  details: JSON
}

type AwsMachineLearningS1j {
  PeakRequestsPerSecond: Int
  CreatedAt: Date
  EndpointUrl: String
  EndpointStatus: String
}

type AwsMachineLearningS2 {
  Key: String
  Value: String
}

type AwsMachineLearningS2i {
  RedshiftDatabase: AwsMachineLearningSy
  DatabaseUserName: String
  SelectSqlQuery: String
}

input AwsMachineLearningS2Input {
  Key: String
  Value: String
}

type AwsMachineLearningS2j {
  Database: AwsMachineLearningSf
  DatabaseUserName: String
  SelectSqlQuery: String
  ResourceRole: String
  ServiceRole: String
  DataPipelineId: String
}

type AwsMachineLearningS2q {
  Properties: JSON
}

type AwsMachineLearningSf {
  InstanceIdentifier: String!
  DatabaseName: String!
}

input AwsMachineLearningSfInput {
  InstanceIdentifier: String!
  DatabaseName: String!
}

type AwsMachineLearningSy {
  DatabaseName: String!
  ClusterIdentifier: String!
}

input AwsMachineLearningSyInput {
  DatabaseName: String!
  ClusterIdentifier: String!
}

input AwsMachineLearningUpdateBatchPredictionInput {
  BatchPredictionId: String!
  BatchPredictionName: String!
}

type AwsMachineLearningUpdateBatchPredictionOutput {
  BatchPredictionId: String
}

input AwsMachineLearningUpdateDataSourceInput {
  DataSourceId: String!
  DataSourceName: String!
}

type AwsMachineLearningUpdateDataSourceOutput {
  DataSourceId: String
}

input AwsMachineLearningUpdateEvaluationInput {
  EvaluationId: String!
  EvaluationName: String!
}

type AwsMachineLearningUpdateEvaluationOutput {
  EvaluationId: String
}

input AwsMachineLearningUpdateMLModelInput {
  MLModelId: String!
  MLModelName: String
  ScoreThreshold: Float
}

type AwsMachineLearningUpdateMLModelOutput {
  MLModelId: String
}

"""Amazon Macie (2017-12-19)"""
type AwsMacie {
  associateMemberAccount(input: AwsMacieAssociateMemberAccountInput!, config: AwsConfig): JSON
  associateS3Resources(input: AwsMacieAssociateS3ResourcesInput!, config: AwsConfig): AwsMacieAssociateS3ResourcesOutput
  disassociateMemberAccount(input: AwsMacieDisassociateMemberAccountInput!, config: AwsConfig): JSON
  disassociateS3Resources(input: AwsMacieDisassociateS3ResourcesInput!, config: AwsConfig): AwsMacieDisassociateS3ResourcesOutput
  listMemberAccounts(input: AwsMacieListMemberAccountsInput, config: AwsConfig): AwsMacieListMemberAccountsOutput
  listS3Resources(input: AwsMacieListS3ResourcesInput, config: AwsConfig): AwsMacieListS3ResourcesOutput
  updateS3Resources(input: AwsMacieUpdateS3ResourcesInput!, config: AwsConfig): AwsMacieUpdateS3ResourcesOutput
}

input AwsMacieAssociateMemberAccountInput {
  memberAccountId: String!
}

input AwsMacieAssociateS3ResourcesInput {
  memberAccountId: String
  s3Resources: [AwsMacieS4Input]!
}

type AwsMacieAssociateS3ResourcesOutput {
  failedS3Resources: [AwsMacieSc]
}

input AwsMacieDisassociateMemberAccountInput {
  memberAccountId: String!
}

input AwsMacieDisassociateS3ResourcesInput {
  memberAccountId: String
  associatedS3Resources: [AwsMacieSeInput]!
}

type AwsMacieDisassociateS3ResourcesOutput {
  failedS3Resources: [AwsMacieSc]
}

input AwsMacieListMemberAccountsInput {
  nextToken: String
  maxResults: Int
}

type AwsMacieListMemberAccountsOutput {
  memberAccounts: [AwsMacieListMemberAccountsOutputMemberAccounts]
  nextToken: String
}

type AwsMacieListMemberAccountsOutputMemberAccounts {
  accountId: String
}

input AwsMacieListS3ResourcesInput {
  memberAccountId: String
  nextToken: String
  maxResults: Int
}

type AwsMacieListS3ResourcesOutput {
  s3Resources: [AwsMacieS4]
  nextToken: String
}

type AwsMacieS4 {
  bucketName: String!
  prefix: String
  classificationType: AwsMacieS4ClassificationType!
}

type AwsMacieS4ClassificationType {
  oneTime: String!
  continuous: String!
}

input AwsMacieS4ClassificationTypeInput {
  oneTime: String!
  continuous: String!
}

input AwsMacieS4Input {
  bucketName: String!
  prefix: String
  classificationType: AwsMacieS4ClassificationTypeInput!
}

type AwsMacieSc {
  failedItem: AwsMacieSe
  errorCode: String
  errorMessage: String
}

type AwsMacieSe {
  bucketName: String!
  prefix: String
}

input AwsMacieSeInput {
  bucketName: String!
  prefix: String
}

input AwsMacieUpdateS3ResourcesInput {
  memberAccountId: String
  s3ResourcesUpdate: [AwsMacieUpdateS3ResourcesS3ResourcesUpdateInput]!
}

type AwsMacieUpdateS3ResourcesOutput {
  failedS3Resources: [AwsMacieSc]
}

input AwsMacieUpdateS3ResourcesS3ResourcesUpdateClassificationTypeUpdateInput {
  oneTime: String
  continuous: String
}

input AwsMacieUpdateS3ResourcesS3ResourcesUpdateInput {
  bucketName: String!
  prefix: String
  classificationTypeUpdate: AwsMacieUpdateS3ResourcesS3ResourcesUpdateClassificationTypeUpdateInput!
}

"""Amazon Managed Blockchain (2018-09-24)"""
type AwsManagedBlockchain {
  createMember(input: AwsManagedBlockchainCreateMemberInput!, config: AwsConfig): AwsManagedBlockchainCreateMemberOutput
  createNetwork(input: AwsManagedBlockchainCreateNetworkInput!, config: AwsConfig): AwsManagedBlockchainCreateNetworkOutput
  createNode(input: AwsManagedBlockchainCreateNodeInput!, config: AwsConfig): AwsManagedBlockchainCreateNodeOutput
  createProposal(input: AwsManagedBlockchainCreateProposalInput!, config: AwsConfig): AwsManagedBlockchainCreateProposalOutput
  deleteMember(input: AwsManagedBlockchainDeleteMemberInput!, config: AwsConfig): JSON
  deleteNode(input: AwsManagedBlockchainDeleteNodeInput!, config: AwsConfig): JSON
  getMember(input: AwsManagedBlockchainGetMemberInput!, config: AwsConfig): AwsManagedBlockchainGetMemberOutput
  getNetwork(input: AwsManagedBlockchainGetNetworkInput!, config: AwsConfig): AwsManagedBlockchainGetNetworkOutput
  getNode(input: AwsManagedBlockchainGetNodeInput!, config: AwsConfig): AwsManagedBlockchainGetNodeOutput
  getProposal(input: AwsManagedBlockchainGetProposalInput!, config: AwsConfig): AwsManagedBlockchainGetProposalOutput
  listInvitations(input: AwsManagedBlockchainListInvitationsInput, config: AwsConfig): AwsManagedBlockchainListInvitationsOutput
  listMembers(input: AwsManagedBlockchainListMembersInput!, config: AwsConfig): AwsManagedBlockchainListMembersOutput
  listNetworks(input: AwsManagedBlockchainListNetworksInput, config: AwsConfig): AwsManagedBlockchainListNetworksOutput
  listNodes(input: AwsManagedBlockchainListNodesInput!, config: AwsConfig): AwsManagedBlockchainListNodesOutput
  listProposalVotes(input: AwsManagedBlockchainListProposalVotesInput!, config: AwsConfig): AwsManagedBlockchainListProposalVotesOutput
  listProposals(input: AwsManagedBlockchainListProposalsInput!, config: AwsConfig): AwsManagedBlockchainListProposalsOutput
  rejectInvitation(input: AwsManagedBlockchainRejectInvitationInput!, config: AwsConfig): JSON
  voteOnProposal(input: AwsManagedBlockchainVoteOnProposalInput!, config: AwsConfig): JSON
}

input AwsManagedBlockchainCreateMemberInput {
  ClientRequestToken: String!
  InvitationId: String!
  NetworkId: String!
  MemberConfiguration: AwsManagedBlockchainS4Input!
}

type AwsManagedBlockchainCreateMemberOutput {
  MemberId: String
}

input AwsManagedBlockchainCreateNetworkFrameworkConfigurationFabricInput {
  Edition: String!
}

input AwsManagedBlockchainCreateNetworkFrameworkConfigurationInput {
  Fabric: AwsManagedBlockchainCreateNetworkFrameworkConfigurationFabricInput
}

input AwsManagedBlockchainCreateNetworkInput {
  ClientRequestToken: String!
  Name: String!
  Description: String
  Framework: String!
  FrameworkVersion: String!
  FrameworkConfiguration: AwsManagedBlockchainCreateNetworkFrameworkConfigurationInput
  VotingPolicy: AwsManagedBlockchainSjInput!
  MemberConfiguration: AwsManagedBlockchainS4Input!
}

type AwsManagedBlockchainCreateNetworkOutput {
  NetworkId: String
  MemberId: String
}

input AwsManagedBlockchainCreateNodeInput {
  ClientRequestToken: String!
  NetworkId: String!
  MemberId: String!
  NodeConfiguration: AwsManagedBlockchainCreateNodeNodeConfigurationInput!
}

input AwsManagedBlockchainCreateNodeNodeConfigurationInput {
  InstanceType: String!
  AvailabilityZone: String!
}

type AwsManagedBlockchainCreateNodeOutput {
  NodeId: String
}

input AwsManagedBlockchainCreateProposalInput {
  ClientRequestToken: String!
  NetworkId: String!
  MemberId: String!
  Actions: AwsManagedBlockchainSvInput!
  Description: String
}

type AwsManagedBlockchainCreateProposalOutput {
  ProposalId: String
}

input AwsManagedBlockchainDeleteMemberInput {
  NetworkId: String!
  MemberId: String!
}

input AwsManagedBlockchainDeleteNodeInput {
  NetworkId: String!
  MemberId: String!
  NodeId: String!
}

input AwsManagedBlockchainGetMemberInput {
  NetworkId: String!
  MemberId: String!
}

type AwsManagedBlockchainGetMemberOutput {
  Member: AwsManagedBlockchainGetMemberOutputMember
}

type AwsManagedBlockchainGetMemberOutputMember {
  NetworkId: String
  Id: String
  Name: String
  Description: String
  FrameworkAttributes: AwsManagedBlockchainGetMemberOutputMemberFrameworkAttributes
  Status: String
  CreationDate: Date
}

type AwsManagedBlockchainGetMemberOutputMemberFrameworkAttributes {
  Fabric: AwsManagedBlockchainGetMemberOutputMemberFrameworkAttributesFabric
}

type AwsManagedBlockchainGetMemberOutputMemberFrameworkAttributesFabric {
  AdminUsername: String
  CaEndpoint: String
}

input AwsManagedBlockchainGetNetworkInput {
  NetworkId: String!
}

type AwsManagedBlockchainGetNetworkOutput {
  Network: AwsManagedBlockchainGetNetworkOutputNetwork
}

type AwsManagedBlockchainGetNetworkOutputNetwork {
  Id: String
  Name: String
  Description: String
  Framework: String
  FrameworkVersion: String
  FrameworkAttributes: AwsManagedBlockchainGetNetworkOutputNetworkFrameworkAttributes
  VpcEndpointServiceName: String
  VotingPolicy: AwsManagedBlockchainSj
  Status: String
  CreationDate: Date
}

type AwsManagedBlockchainGetNetworkOutputNetworkFrameworkAttributes {
  Fabric: AwsManagedBlockchainGetNetworkOutputNetworkFrameworkAttributesFabric
}

type AwsManagedBlockchainGetNetworkOutputNetworkFrameworkAttributesFabric {
  OrderingServiceEndpoint: String
  Edition: String
}

input AwsManagedBlockchainGetNodeInput {
  NetworkId: String!
  MemberId: String!
  NodeId: String!
}

type AwsManagedBlockchainGetNodeOutput {
  Node: AwsManagedBlockchainGetNodeOutputNode
}

type AwsManagedBlockchainGetNodeOutputNode {
  NetworkId: String
  MemberId: String
  Id: String
  InstanceType: String
  AvailabilityZone: String
  FrameworkAttributes: AwsManagedBlockchainGetNodeOutputNodeFrameworkAttributes
  Status: String
  CreationDate: Date
}

type AwsManagedBlockchainGetNodeOutputNodeFrameworkAttributes {
  Fabric: AwsManagedBlockchainGetNodeOutputNodeFrameworkAttributesFabric
}

type AwsManagedBlockchainGetNodeOutputNodeFrameworkAttributesFabric {
  PeerEndpoint: String
  PeerEventEndpoint: String
}

input AwsManagedBlockchainGetProposalInput {
  NetworkId: String!
  ProposalId: String!
}

type AwsManagedBlockchainGetProposalOutput {
  Proposal: AwsManagedBlockchainGetProposalOutputProposal
}

type AwsManagedBlockchainGetProposalOutputProposal {
  ProposalId: String
  NetworkId: String
  Description: String
  Actions: AwsManagedBlockchainSv
  ProposedByMemberId: String
  ProposedByMemberName: String
  Status: String
  CreationDate: Date
  ExpirationDate: Date
  YesVoteCount: Int
  NoVoteCount: Int
  OutstandingVoteCount: Int
}

input AwsManagedBlockchainListInvitationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsManagedBlockchainListInvitationsOutput {
  Invitations: [AwsManagedBlockchainListInvitationsOutputInvitations]
  NextToken: String
}

type AwsManagedBlockchainListInvitationsOutputInvitations {
  InvitationId: String
  CreationDate: Date
  ExpirationDate: Date
  Status: String
  NetworkSummary: AwsManagedBlockchainS22
}

input AwsManagedBlockchainListMembersInput {
  NetworkId: String!
  Name: String
  Status: String
  IsOwned: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsManagedBlockchainListMembersOutput {
  Members: [AwsManagedBlockchainListMembersOutputMembers]
  NextToken: String
}

type AwsManagedBlockchainListMembersOutputMembers {
  Id: String
  Name: String
  Description: String
  Status: String
  CreationDate: Date
  IsOwned: Boolean
}

input AwsManagedBlockchainListNetworksInput {
  Name: String
  Framework: String
  Status: String
  MaxResults: Int
  NextToken: String
}

type AwsManagedBlockchainListNetworksOutput {
  Networks: [AwsManagedBlockchainS22]
  NextToken: String
}

input AwsManagedBlockchainListNodesInput {
  NetworkId: String!
  MemberId: String!
  Status: String
  MaxResults: Int
  NextToken: String
}

type AwsManagedBlockchainListNodesOutput {
  Nodes: [AwsManagedBlockchainListNodesOutputNodes]
  NextToken: String
}

type AwsManagedBlockchainListNodesOutputNodes {
  Id: String
  Status: String
  CreationDate: Date
  AvailabilityZone: String
  InstanceType: String
}

input AwsManagedBlockchainListProposalsInput {
  NetworkId: String!
  MaxResults: Int
  NextToken: String
}

type AwsManagedBlockchainListProposalsOutput {
  Proposals: [AwsManagedBlockchainListProposalsOutputProposals]
  NextToken: String
}

type AwsManagedBlockchainListProposalsOutputProposals {
  ProposalId: String
  Description: String
  ProposedByMemberId: String
  ProposedByMemberName: String
  Status: String
  CreationDate: Date
  ExpirationDate: Date
}

input AwsManagedBlockchainListProposalVotesInput {
  NetworkId: String!
  ProposalId: String!
  MaxResults: Int
  NextToken: String
}

type AwsManagedBlockchainListProposalVotesOutput {
  ProposalVotes: [AwsManagedBlockchainListProposalVotesOutputProposalVotes]
  NextToken: String
}

type AwsManagedBlockchainListProposalVotesOutputProposalVotes {
  Vote: String
  MemberName: String
  MemberId: String
}

input AwsManagedBlockchainRejectInvitationInput {
  InvitationId: String!
}

type AwsManagedBlockchainS22 {
  Id: String
  Name: String
  Description: String
  Framework: String
  FrameworkVersion: String
  Status: String
  CreationDate: Date
}

input AwsManagedBlockchainS4FrameworkConfigurationFabricInput {
  AdminUsername: String!
  AdminPassword: String!
}

input AwsManagedBlockchainS4FrameworkConfigurationInput {
  Fabric: AwsManagedBlockchainS4FrameworkConfigurationFabricInput
}

input AwsManagedBlockchainS4Input {
  Name: String!
  Description: String
  FrameworkConfiguration: AwsManagedBlockchainS4FrameworkConfigurationInput!
}

type AwsManagedBlockchainSj {
  ApprovalThresholdPolicy: AwsManagedBlockchainSjApprovalThresholdPolicy
}

type AwsManagedBlockchainSjApprovalThresholdPolicy {
  ThresholdPercentage: Int
  ProposalDurationInHours: Int
  ThresholdComparator: String
}

input AwsManagedBlockchainSjApprovalThresholdPolicyInput {
  ThresholdPercentage: Int
  ProposalDurationInHours: Int
  ThresholdComparator: String
}

input AwsManagedBlockchainSjInput {
  ApprovalThresholdPolicy: AwsManagedBlockchainSjApprovalThresholdPolicyInput
}

type AwsManagedBlockchainSv {
  Invitations: [AwsManagedBlockchainSvInvitations]
  Removals: [AwsManagedBlockchainSvRemovals]
}

input AwsManagedBlockchainSvInput {
  Invitations: [AwsManagedBlockchainSvInvitationsInput]
  Removals: [AwsManagedBlockchainSvRemovalsInput]
}

type AwsManagedBlockchainSvInvitations {
  Principal: String!
}

input AwsManagedBlockchainSvInvitationsInput {
  Principal: String!
}

type AwsManagedBlockchainSvRemovals {
  MemberId: String!
}

input AwsManagedBlockchainSvRemovalsInput {
  MemberId: String!
}

input AwsManagedBlockchainVoteOnProposalInput {
  NetworkId: String!
  ProposalId: String!
  VoterMemberId: String!
  Vote: String!
}

"""AWS Marketplace Commerce Analytics (2015-07-01)"""
type AwsMarketplaceCommerceAnalytics {
  generateDataSet(input: AwsMarketplaceCommerceAnalyticsGenerateDataSetInput!, config: AwsConfig): AwsMarketplaceCommerceAnalyticsGenerateDataSetOutput
  startSupportDataExport(input: AwsMarketplaceCommerceAnalyticsStartSupportDataExportInput!, config: AwsConfig): AwsMarketplaceCommerceAnalyticsStartSupportDataExportOutput
}

input AwsMarketplaceCommerceAnalyticsGenerateDataSetInput {
  dataSetType: String!
  dataSetPublicationDate: Date!
  roleNameArn: String!
  destinationS3BucketName: String!
  destinationS3Prefix: String
  snsTopicArn: String!
  customerDefinedValues: JSON
}

type AwsMarketplaceCommerceAnalyticsGenerateDataSetOutput {
  dataSetRequestId: String
}

input AwsMarketplaceCommerceAnalyticsStartSupportDataExportInput {
  dataSetType: String!
  fromDate: Date!
  roleNameArn: String!
  destinationS3BucketName: String!
  destinationS3Prefix: String
  snsTopicArn: String!
  customerDefinedValues: JSON
}

type AwsMarketplaceCommerceAnalyticsStartSupportDataExportOutput {
  dataSetRequestId: String
}

"""AWS Marketplace Entitlement Service (2017-01-11)"""
type AwsMarketplaceEntitlementService {
  getEntitlements(input: AwsMarketplaceEntitlementServiceGetEntitlementsInput!, config: AwsConfig): AwsMarketplaceEntitlementServiceGetEntitlementsOutput
}

input AwsMarketplaceEntitlementServiceGetEntitlementsInput {
  ProductCode: String!
  Filter: JSON
  NextToken: String
  MaxResults: Int
}

type AwsMarketplaceEntitlementServiceGetEntitlementsOutput {
  Entitlements: [AwsMarketplaceEntitlementServiceGetEntitlementsOutputEntitlements]
  NextToken: String
}

type AwsMarketplaceEntitlementServiceGetEntitlementsOutputEntitlements {
  ProductCode: String
  Dimension: String
  CustomerIdentifier: String
  Value: AwsMarketplaceEntitlementServiceGetEntitlementsOutputEntitlementsValue
  ExpirationDate: Date
}

type AwsMarketplaceEntitlementServiceGetEntitlementsOutputEntitlementsValue {
  IntegerValue: Int
  DoubleValue: JSON
  BooleanValue: Boolean
  StringValue: String
}

"""AWSMarketplace Metering (2016-01-14)"""
type AwsMarketplaceMetering {
  batchMeterUsage(input: AwsMarketplaceMeteringBatchMeterUsageInput!, config: AwsConfig): AwsMarketplaceMeteringBatchMeterUsageOutput
  meterUsage(input: AwsMarketplaceMeteringMeterUsageInput!, config: AwsConfig): AwsMarketplaceMeteringMeterUsageOutput
  registerUsage(input: AwsMarketplaceMeteringRegisterUsageInput!, config: AwsConfig): AwsMarketplaceMeteringRegisterUsageOutput
  resolveCustomer(input: AwsMarketplaceMeteringResolveCustomerInput!, config: AwsConfig): AwsMarketplaceMeteringResolveCustomerOutput
}

input AwsMarketplaceMeteringBatchMeterUsageInput {
  UsageRecords: [AwsMarketplaceMeteringS3Input]!
  ProductCode: String!
}

type AwsMarketplaceMeteringBatchMeterUsageOutput {
  Results: [AwsMarketplaceMeteringBatchMeterUsageOutputResults]
  UnprocessedRecords: [AwsMarketplaceMeteringS3]
}

type AwsMarketplaceMeteringBatchMeterUsageOutputResults {
  UsageRecord: AwsMarketplaceMeteringS3
  MeteringRecordId: String
  Status: String
}

input AwsMarketplaceMeteringMeterUsageInput {
  ProductCode: String!
  Timestamp: Date!
  UsageDimension: String!
  UsageQuantity: Int
  DryRun: Boolean
}

type AwsMarketplaceMeteringMeterUsageOutput {
  MeteringRecordId: String
}

input AwsMarketplaceMeteringRegisterUsageInput {
  ProductCode: String!
  PublicKeyVersion: Int!
  Nonce: String
}

type AwsMarketplaceMeteringRegisterUsageOutput {
  PublicKeyRotationTimestamp: Date
  Signature: String
}

input AwsMarketplaceMeteringResolveCustomerInput {
  RegistrationToken: String!
}

type AwsMarketplaceMeteringResolveCustomerOutput {
  CustomerIdentifier: String
  ProductCode: String
}

type AwsMarketplaceMeteringS3 {
  Timestamp: Date!
  CustomerIdentifier: String!
  Dimension: String!
  Quantity: Int
}

input AwsMarketplaceMeteringS3Input {
  Timestamp: Date!
  CustomerIdentifier: String!
  Dimension: String!
  Quantity: Int
}

"""AWS MediaConnect (2018-11-14)"""
type AwsMediaConnect {
  addFlowOutputs(input: AwsMediaConnectAddFlowOutputsInput!, config: AwsConfig): AwsMediaConnectAddFlowOutputsOutput
  createFlow(input: AwsMediaConnectCreateFlowInput!, config: AwsConfig): AwsMediaConnectCreateFlowOutput
  deleteFlow(input: AwsMediaConnectDeleteFlowInput!, config: AwsConfig): AwsMediaConnectDeleteFlowOutput
  describeFlow(input: AwsMediaConnectDescribeFlowInput!, config: AwsConfig): AwsMediaConnectDescribeFlowOutput
  grantFlowEntitlements(input: AwsMediaConnectGrantFlowEntitlementsInput!, config: AwsConfig): AwsMediaConnectGrantFlowEntitlementsOutput
  listEntitlements(input: AwsMediaConnectListEntitlementsInput, config: AwsConfig): AwsMediaConnectListEntitlementsOutput
  listFlows(input: AwsMediaConnectListFlowsInput, config: AwsConfig): AwsMediaConnectListFlowsOutput
  listTagsForResource(input: AwsMediaConnectListTagsForResourceInput!, config: AwsConfig): AwsMediaConnectListTagsForResourceOutput
  removeFlowOutput(input: AwsMediaConnectRemoveFlowOutputInput!, config: AwsConfig): AwsMediaConnectRemoveFlowOutputOutput
  revokeFlowEntitlement(input: AwsMediaConnectRevokeFlowEntitlementInput!, config: AwsConfig): AwsMediaConnectRevokeFlowEntitlementOutput
  startFlow(input: AwsMediaConnectStartFlowInput!, config: AwsConfig): AwsMediaConnectStartFlowOutput
  stopFlow(input: AwsMediaConnectStopFlowInput!, config: AwsConfig): AwsMediaConnectStopFlowOutput
  tagResource(input: AwsMediaConnectTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsMediaConnectUntagResourceInput!, config: AwsConfig): JSON
  updateFlowEntitlement(input: AwsMediaConnectUpdateFlowEntitlementInput!, config: AwsConfig): AwsMediaConnectUpdateFlowEntitlementOutput
  updateFlowOutput(input: AwsMediaConnectUpdateFlowOutputInput!, config: AwsConfig): AwsMediaConnectUpdateFlowOutputOutput
  updateFlowSource(input: AwsMediaConnectUpdateFlowSourceInput!, config: AwsConfig): AwsMediaConnectUpdateFlowSourceOutput
}

input AwsMediaConnectAddFlowOutputsInput {
  FlowArn: String!
  Outputs: [AwsMediaConnectS3Input]!
}

type AwsMediaConnectAddFlowOutputsOutput {
  FlowArn: String
  Outputs: [AwsMediaConnectSc]
}

input AwsMediaConnectCreateFlowInput {
  AvailabilityZone: String
  Entitlements: [AwsMediaConnectSfInput]
  Name: String!
  Outputs: [AwsMediaConnectS3Input]
  Source: AwsMediaConnectCreateFlowSourceInput!
}

type AwsMediaConnectCreateFlowOutput {
  Flow: AwsMediaConnectSk
}

input AwsMediaConnectCreateFlowSourceInput {
  Decryption: AwsMediaConnectS5Input
  Description: String
  EntitlementArn: String
  IngestPort: Int
  MaxBitrate: Int
  MaxLatency: Int
  Name: String
  Protocol: String
  StreamId: String
  WhitelistCidr: String
}

input AwsMediaConnectDeleteFlowInput {
  FlowArn: String!
}

type AwsMediaConnectDeleteFlowOutput {
  FlowArn: String
  Status: String
}

input AwsMediaConnectDescribeFlowInput {
  FlowArn: String!
}

type AwsMediaConnectDescribeFlowOutput {
  Flow: AwsMediaConnectSk
  Messages: AwsMediaConnectDescribeFlowOutputMessages
}

type AwsMediaConnectDescribeFlowOutputMessages {
  Errors: [String]!
}

input AwsMediaConnectGrantFlowEntitlementsInput {
  Entitlements: [AwsMediaConnectSfInput]!
  FlowArn: String!
}

type AwsMediaConnectGrantFlowEntitlementsOutput {
  Entitlements: [AwsMediaConnectSm]
  FlowArn: String
}

input AwsMediaConnectListEntitlementsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaConnectListEntitlementsOutput {
  Entitlements: [AwsMediaConnectListEntitlementsOutputEntitlements]
  NextToken: String
}

type AwsMediaConnectListEntitlementsOutputEntitlements {
  EntitlementArn: String!
  EntitlementName: String!
}

input AwsMediaConnectListFlowsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaConnectListFlowsOutput {
  Flows: [AwsMediaConnectListFlowsOutputFlows]
  NextToken: String
}

type AwsMediaConnectListFlowsOutputFlows {
  AvailabilityZone: String!
  Description: String!
  FlowArn: String!
  Name: String!
  SourceType: String!
  Status: String!
}

input AwsMediaConnectListTagsForResourceInput {
  ResourceArn: String!
}

type AwsMediaConnectListTagsForResourceOutput {
  Tags: JSON
}

input AwsMediaConnectRemoveFlowOutputInput {
  FlowArn: String!
  OutputArn: String!
}

type AwsMediaConnectRemoveFlowOutputOutput {
  FlowArn: String
  OutputArn: String
}

input AwsMediaConnectRevokeFlowEntitlementInput {
  EntitlementArn: String!
  FlowArn: String!
}

type AwsMediaConnectRevokeFlowEntitlementOutput {
  EntitlementArn: String
  FlowArn: String
}

input AwsMediaConnectS1kInput {
  Algorithm: String
  ConstantInitializationVector: String
  DeviceId: String
  KeyType: String
  Region: String
  ResourceId: String
  RoleArn: String
  SecretArn: String
  Url: String
}

input AwsMediaConnectS3Input {
  Description: String
  Destination: String!
  Encryption: AwsMediaConnectS5Input
  MaxLatency: Int
  Name: String
  Port: Int!
  Protocol: String!
  SmoothingLatency: Int
  StreamId: String
}

type AwsMediaConnectS5 {
  Algorithm: String!
  ConstantInitializationVector: String
  DeviceId: String
  KeyType: String
  Region: String
  ResourceId: String
  RoleArn: String!
  SecretArn: String
  Url: String
}

input AwsMediaConnectS5Input {
  Algorithm: String!
  ConstantInitializationVector: String
  DeviceId: String
  KeyType: String
  Region: String
  ResourceId: String
  RoleArn: String!
  SecretArn: String
  Url: String
}

type AwsMediaConnectSc {
  Description: String
  Destination: String
  Encryption: AwsMediaConnectS5
  EntitlementArn: String
  MediaLiveInputArn: String
  Name: String!
  OutputArn: String!
  Port: Int
  Transport: AwsMediaConnectSd
}

type AwsMediaConnectSd {
  MaxBitrate: Int
  MaxLatency: Int
  Protocol: String!
  SmoothingLatency: Int
  StreamId: String
}

input AwsMediaConnectSfInput {
  Description: String
  Encryption: AwsMediaConnectS5Input
  Name: String
  Subscribers: [String]!
}

type AwsMediaConnectSk {
  AvailabilityZone: String!
  Description: String
  EgressIp: String
  Entitlements: [AwsMediaConnectSm]!
  FlowArn: String!
  Name: String!
  Outputs: [AwsMediaConnectSc]!
  Source: AwsMediaConnectSn!
  Status: String!
}

type AwsMediaConnectSm {
  Description: String
  Encryption: AwsMediaConnectS5
  EntitlementArn: String!
  Name: String!
  Subscribers: [String]!
}

type AwsMediaConnectSn {
  Decryption: AwsMediaConnectS5
  Description: String
  EntitlementArn: String
  IngestIp: String
  IngestPort: Int
  Name: String!
  SourceArn: String!
  Transport: AwsMediaConnectSd
  WhitelistCidr: String
}

input AwsMediaConnectStartFlowInput {
  FlowArn: String!
}

type AwsMediaConnectStartFlowOutput {
  FlowArn: String
  Status: String
}

input AwsMediaConnectStopFlowInput {
  FlowArn: String!
}

type AwsMediaConnectStopFlowOutput {
  FlowArn: String
  Status: String
}

input AwsMediaConnectTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsMediaConnectUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsMediaConnectUpdateFlowEntitlementInput {
  Description: String
  Encryption: AwsMediaConnectS1kInput
  EntitlementArn: String!
  FlowArn: String!
  Subscribers: [String]
}

type AwsMediaConnectUpdateFlowEntitlementOutput {
  Entitlement: AwsMediaConnectSm
  FlowArn: String
}

input AwsMediaConnectUpdateFlowOutputInput {
  Description: String
  Destination: String
  Encryption: AwsMediaConnectS1kInput
  FlowArn: String!
  MaxLatency: Int
  OutputArn: String!
  Port: Int
  Protocol: String
  SmoothingLatency: Int
  StreamId: String
}

type AwsMediaConnectUpdateFlowOutputOutput {
  FlowArn: String
  Output: AwsMediaConnectSc
}

input AwsMediaConnectUpdateFlowSourceInput {
  Decryption: AwsMediaConnectS1kInput
  Description: String
  EntitlementArn: String
  FlowArn: String!
  IngestPort: Int
  MaxBitrate: Int
  MaxLatency: Int
  Protocol: String
  SourceArn: String!
  StreamId: String
  WhitelistCidr: String
}

type AwsMediaConnectUpdateFlowSourceOutput {
  FlowArn: String
  Source: AwsMediaConnectSn
}

"""AWS Elemental MediaConvert (2017-08-29)"""
type AwsMediaConvert {
  associateCertificate(input: AwsMediaConvertAssociateCertificateInput!, config: AwsConfig): JSON
  cancelJob(input: AwsMediaConvertCancelJobInput!, config: AwsConfig): JSON
  createJob(input: AwsMediaConvertCreateJobInput!, config: AwsConfig): AwsMediaConvertCreateJobOutput
  createJobTemplate(input: AwsMediaConvertCreateJobTemplateInput!, config: AwsConfig): AwsMediaConvertCreateJobTemplateOutput
  createPreset(input: AwsMediaConvertCreatePresetInput!, config: AwsConfig): AwsMediaConvertCreatePresetOutput
  createQueue(input: AwsMediaConvertCreateQueueInput!, config: AwsConfig): AwsMediaConvertCreateQueueOutput
  deleteJobTemplate(input: AwsMediaConvertDeleteJobTemplateInput!, config: AwsConfig): JSON
  deletePreset(input: AwsMediaConvertDeletePresetInput!, config: AwsConfig): JSON
  deleteQueue(input: AwsMediaConvertDeleteQueueInput!, config: AwsConfig): JSON
  describeEndpoints(input: AwsMediaConvertDescribeEndpointsInput, config: AwsConfig): AwsMediaConvertDescribeEndpointsOutput
  disassociateCertificate(input: AwsMediaConvertDisassociateCertificateInput!, config: AwsConfig): JSON
  getJob(input: AwsMediaConvertGetJobInput!, config: AwsConfig): AwsMediaConvertGetJobOutput
  getJobTemplate(input: AwsMediaConvertGetJobTemplateInput!, config: AwsConfig): AwsMediaConvertGetJobTemplateOutput
  getPreset(input: AwsMediaConvertGetPresetInput!, config: AwsConfig): AwsMediaConvertGetPresetOutput
  getQueue(input: AwsMediaConvertGetQueueInput!, config: AwsConfig): AwsMediaConvertGetQueueOutput
  listJobTemplates(input: AwsMediaConvertListJobTemplatesInput, config: AwsConfig): AwsMediaConvertListJobTemplatesOutput
  listJobs(input: AwsMediaConvertListJobsInput, config: AwsConfig): AwsMediaConvertListJobsOutput
  listPresets(input: AwsMediaConvertListPresetsInput, config: AwsConfig): AwsMediaConvertListPresetsOutput
  listQueues(input: AwsMediaConvertListQueuesInput, config: AwsConfig): AwsMediaConvertListQueuesOutput
  listTagsForResource(input: AwsMediaConvertListTagsForResourceInput!, config: AwsConfig): AwsMediaConvertListTagsForResourceOutput
  tagResource(input: AwsMediaConvertTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsMediaConvertUntagResourceInput!, config: AwsConfig): JSON
  updateJobTemplate(input: AwsMediaConvertUpdateJobTemplateInput!, config: AwsConfig): AwsMediaConvertUpdateJobTemplateOutput
  updatePreset(input: AwsMediaConvertUpdatePresetInput!, config: AwsConfig): AwsMediaConvertUpdatePresetOutput
  updateQueue(input: AwsMediaConvertUpdateQueueInput!, config: AwsConfig): AwsMediaConvertUpdateQueueOutput
}

input AwsMediaConvertAssociateCertificateInput {
  Arn: String!
}

input AwsMediaConvertCancelJobInput {
  Id: String!
}

input AwsMediaConvertCreateJobInput {
  AccelerationSettings: AwsMediaConvertS7Input
  BillingTagsSource: String
  ClientRequestToken: String
  JobTemplate: String
  Queue: String
  Role: String!
  Settings: AwsMediaConvertSaInput!
  StatusUpdateInterval: String
  UserMetadata: JSON
}

type AwsMediaConvertCreateJobOutput {
  Job: AwsMediaConvertScl
}

input AwsMediaConvertCreateJobTemplateInput {
  AccelerationSettings: AwsMediaConvertS7Input
  Category: String
  Description: String
  Name: String!
  Queue: String
  Settings: AwsMediaConvertScxInput!
  StatusUpdateInterval: String
  Tags: JSON
}

type AwsMediaConvertCreateJobTemplateOutput {
  JobTemplate: AwsMediaConvertSd1
}

input AwsMediaConvertCreatePresetInput {
  Category: String
  Description: String
  Name: String!
  Settings: AwsMediaConvertSd4Input!
  Tags: JSON
}

type AwsMediaConvertCreatePresetOutput {
  Preset: AwsMediaConvertSd8
}

input AwsMediaConvertCreateQueueInput {
  Description: String
  Name: String!
  PricingPlan: String
  ReservationPlanSettings: AwsMediaConvertSdbInput
  Tags: JSON
}

type AwsMediaConvertCreateQueueOutput {
  Queue: AwsMediaConvertSdf
}

input AwsMediaConvertDeleteJobTemplateInput {
  Name: String!
}

input AwsMediaConvertDeletePresetInput {
  Name: String!
}

input AwsMediaConvertDeleteQueueInput {
  Name: String!
}

input AwsMediaConvertDescribeEndpointsInput {
  MaxResults: Int
  Mode: String
  NextToken: String
}

type AwsMediaConvertDescribeEndpointsOutput {
  Endpoints: [AwsMediaConvertDescribeEndpointsOutputEndpoints]
  NextToken: String
}

type AwsMediaConvertDescribeEndpointsOutputEndpoints {
  Url: String
}

input AwsMediaConvertDisassociateCertificateInput {
  Arn: String!
}

input AwsMediaConvertGetJobInput {
  Id: String!
}

type AwsMediaConvertGetJobOutput {
  Job: AwsMediaConvertScl
}

input AwsMediaConvertGetJobTemplateInput {
  Name: String!
}

type AwsMediaConvertGetJobTemplateOutput {
  JobTemplate: AwsMediaConvertSd1
}

input AwsMediaConvertGetPresetInput {
  Name: String!
}

type AwsMediaConvertGetPresetOutput {
  Preset: AwsMediaConvertSd8
}

input AwsMediaConvertGetQueueInput {
  Name: String!
}

type AwsMediaConvertGetQueueOutput {
  Queue: AwsMediaConvertSdf
}

input AwsMediaConvertListJobsInput {
  MaxResults: Int
  NextToken: String
  Order: String
  Queue: String
  Status: String
}

type AwsMediaConvertListJobsOutput {
  Jobs: [AwsMediaConvertScl]
  NextToken: String
}

input AwsMediaConvertListJobTemplatesInput {
  Category: String
  ListBy: String
  MaxResults: Int
  NextToken: String
  Order: String
}

type AwsMediaConvertListJobTemplatesOutput {
  JobTemplates: [AwsMediaConvertSd1]
  NextToken: String
}

input AwsMediaConvertListPresetsInput {
  Category: String
  ListBy: String
  MaxResults: Int
  NextToken: String
  Order: String
}

type AwsMediaConvertListPresetsOutput {
  NextToken: String
  Presets: [AwsMediaConvertSd8]
}

input AwsMediaConvertListQueuesInput {
  ListBy: String
  MaxResults: Int
  NextToken: String
  Order: String
}

type AwsMediaConvertListQueuesOutput {
  NextToken: String
  Queues: [AwsMediaConvertSdf]
}

input AwsMediaConvertListTagsForResourceInput {
  Arn: String!
}

type AwsMediaConvertListTagsForResourceOutput {
  ResourceTags: AwsMediaConvertListTagsForResourceOutputResourceTags
}

type AwsMediaConvertListTagsForResourceOutputResourceTags {
  Arn: String
  Tags: JSON
}

type AwsMediaConvertS10 {
  ChannelMapping: AwsMediaConvertS10ChannelMapping
  ChannelsIn: Int
  ChannelsOut: Int
}

type AwsMediaConvertS10ChannelMapping {
  OutputChannels: [AwsMediaConvertS10ChannelMappingOutputChannels]
}

input AwsMediaConvertS10ChannelMappingInput {
  OutputChannels: [AwsMediaConvertS10ChannelMappingOutputChannelsInput]
}

type AwsMediaConvertS10ChannelMappingOutputChannels {
  InputChannels: [Int]
}

input AwsMediaConvertS10ChannelMappingOutputChannelsInput {
  InputChannels: [Int]
}

input AwsMediaConvertS10Input {
  ChannelMapping: AwsMediaConvertS10ChannelMappingInput
  ChannelsIn: Int
  ChannelsOut: Int
}

type AwsMediaConvertS1z {
  InsertableImages: [AwsMediaConvertS1zInsertableImages]
}

input AwsMediaConvertS1zInput {
  InsertableImages: [AwsMediaConvertS1zInsertableImagesInput]
}

type AwsMediaConvertS1zInsertableImages {
  Duration: Int
  FadeIn: Int
  FadeOut: Int
  Height: Int
  ImageInserterInput: String
  ImageX: Int
  ImageY: Int
  Layer: Int
  Opacity: Int
  StartTime: String
  Width: Int
}

input AwsMediaConvertS1zInsertableImagesInput {
  Duration: Int
  FadeIn: Int
  FadeOut: Int
  Height: Int
  ImageInserterInput: String
  ImageX: Int
  ImageY: Int
  Layer: Int
  Opacity: Int
  StartTime: String
  Width: Int
}

type AwsMediaConvertS27 {
  EndTimecode: String
  StartTimecode: String
}

input AwsMediaConvertS27Input {
  EndTimecode: String
  StartTimecode: String
}

type AwsMediaConvertS2e {
  ColorSpace: String
  ColorSpaceUsage: String
  Hdr10Metadata: AwsMediaConvertS2h
  Pid: Int
  ProgramNumber: Int
  Rotate: String
}

input AwsMediaConvertS2eInput {
  ColorSpace: String
  ColorSpaceUsage: String
  Hdr10Metadata: AwsMediaConvertS2hInput
  Pid: Int
  ProgramNumber: Int
  Rotate: String
}

type AwsMediaConvertS2h {
  BluePrimaryX: Int
  BluePrimaryY: Int
  GreenPrimaryX: Int
  GreenPrimaryY: Int
  MaxContentLightLevel: Int
  MaxFrameAverageLightLevel: Int
  MaxLuminance: Int
  MinLuminance: Int
  RedPrimaryX: Int
  RedPrimaryY: Int
  WhitePointX: Int
  WhitePointY: Int
}

input AwsMediaConvertS2hInput {
  BluePrimaryX: Int
  BluePrimaryY: Int
  GreenPrimaryX: Int
  GreenPrimaryY: Int
  MaxContentLightLevel: Int
  MaxFrameAverageLightLevel: Int
  MaxLuminance: Int
  MinLuminance: Int
  RedPrimaryX: Int
  RedPrimaryY: Int
  WhitePointX: Int
  WhitePointY: Int
}

type AwsMediaConvertS2l {
  Framerate: AwsMediaConvertS2lFramerate
  Input: String
  InsertionMode: String
  Offset: AwsMediaConvertS2lOffset
  Playback: String
  StartTime: String
}

type AwsMediaConvertS2lFramerate {
  FramerateDenominator: Int
  FramerateNumerator: Int
}

input AwsMediaConvertS2lFramerateInput {
  FramerateDenominator: Int
  FramerateNumerator: Int
}

input AwsMediaConvertS2lInput {
  Framerate: AwsMediaConvertS2lFramerateInput
  Input: String
  InsertionMode: String
  Offset: AwsMediaConvertS2lOffsetInput
  Playback: String
  StartTime: String
}

type AwsMediaConvertS2lOffset {
  ImageX: Int
  ImageY: Int
}

input AwsMediaConvertS2lOffsetInput {
  ImageX: Int
  ImageY: Int
}

type AwsMediaConvertS2u {
  BreakoutCode: Int
  DistributorId: String
}

input AwsMediaConvertS2uInput {
  BreakoutCode: Int
  DistributorId: String
}

type AwsMediaConvertS2w {
  CustomName: String
  Name: String
  OutputGroupSettings: AwsMediaConvertS2wOutputGroupSettings
  Outputs: [AwsMediaConvertS2wOutputs]
}

input AwsMediaConvertS2wInput {
  CustomName: String
  Name: String
  OutputGroupSettings: AwsMediaConvertS2wOutputGroupSettingsInput
  Outputs: [AwsMediaConvertS2wOutputsInput]
}

type AwsMediaConvertS2wOutputGroupSettings {
  CmafGroupSettings: AwsMediaConvertS2wOutputGroupSettingsCmafGroupSettings
  DashIsoGroupSettings: AwsMediaConvertS2wOutputGroupSettingsDashIsoGroupSettings
  FileGroupSettings: AwsMediaConvertS2wOutputGroupSettingsFileGroupSettings
  HlsGroupSettings: AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettings
  MsSmoothGroupSettings: AwsMediaConvertS2wOutputGroupSettingsMsSmoothGroupSettings
  Type: String
}

type AwsMediaConvertS2wOutputGroupSettingsCmafGroupSettings {
  BaseUrl: String
  ClientCache: String
  CodecSpecification: String
  Destination: String
  DestinationSettings: AwsMediaConvertS33
  Encryption: AwsMediaConvertS2wOutputGroupSettingsCmafGroupSettingsEncryption
  FragmentLength: Int
  ManifestCompression: String
  ManifestDurationFormat: String
  MinBufferTime: Int
  MinFinalSegmentLength: JSON
  SegmentControl: String
  SegmentLength: Int
  StreamInfResolution: String
  WriteDashManifest: String
  WriteHlsManifest: String
}

type AwsMediaConvertS2wOutputGroupSettingsCmafGroupSettingsEncryption {
  ConstantInitializationVector: String
  EncryptionMethod: String
  InitializationVectorInManifest: String
  StaticKeyProvider: AwsMediaConvertS3c
  Type: String
}

input AwsMediaConvertS2wOutputGroupSettingsCmafGroupSettingsEncryptionInput {
  ConstantInitializationVector: String
  EncryptionMethod: String
  InitializationVectorInManifest: String
  StaticKeyProvider: AwsMediaConvertS3cInput
  Type: String
}

input AwsMediaConvertS2wOutputGroupSettingsCmafGroupSettingsInput {
  BaseUrl: String
  ClientCache: String
  CodecSpecification: String
  Destination: String
  DestinationSettings: AwsMediaConvertS33Input
  Encryption: AwsMediaConvertS2wOutputGroupSettingsCmafGroupSettingsEncryptionInput
  FragmentLength: Int
  ManifestCompression: String
  ManifestDurationFormat: String
  MinBufferTime: Int
  MinFinalSegmentLength: JSON
  SegmentControl: String
  SegmentLength: Int
  StreamInfResolution: String
  WriteDashManifest: String
  WriteHlsManifest: String
}

type AwsMediaConvertS2wOutputGroupSettingsDashIsoGroupSettings {
  BaseUrl: String
  Destination: String
  DestinationSettings: AwsMediaConvertS33
  Encryption: AwsMediaConvertS2wOutputGroupSettingsDashIsoGroupSettingsEncryption
  FragmentLength: Int
  HbbtvCompliance: String
  MinBufferTime: Int
  SegmentControl: String
  SegmentLength: Int
  WriteSegmentTimelineInRepresentation: String
}

type AwsMediaConvertS2wOutputGroupSettingsDashIsoGroupSettingsEncryption {
  PlaybackDeviceCompatibility: String
  SpekeKeyProvider: AwsMediaConvertS3r
}

input AwsMediaConvertS2wOutputGroupSettingsDashIsoGroupSettingsEncryptionInput {
  PlaybackDeviceCompatibility: String
  SpekeKeyProvider: AwsMediaConvertS3rInput
}

input AwsMediaConvertS2wOutputGroupSettingsDashIsoGroupSettingsInput {
  BaseUrl: String
  Destination: String
  DestinationSettings: AwsMediaConvertS33Input
  Encryption: AwsMediaConvertS2wOutputGroupSettingsDashIsoGroupSettingsEncryptionInput
  FragmentLength: Int
  HbbtvCompliance: String
  MinBufferTime: Int
  SegmentControl: String
  SegmentLength: Int
  WriteSegmentTimelineInRepresentation: String
}

type AwsMediaConvertS2wOutputGroupSettingsFileGroupSettings {
  Destination: String
  DestinationSettings: AwsMediaConvertS33
}

input AwsMediaConvertS2wOutputGroupSettingsFileGroupSettingsInput {
  Destination: String
  DestinationSettings: AwsMediaConvertS33Input
}

type AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettings {
  AdMarkers: [String]
  BaseUrl: String
  CaptionLanguageMappings: [AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  Destination: String
  DestinationSettings: AwsMediaConvertS33
  DirectoryStructure: String
  Encryption: AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettingsEncryption
  ManifestCompression: String
  ManifestDurationFormat: String
  MinFinalSegmentLength: JSON
  MinSegmentLength: Int
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  SegmentControl: String
  SegmentLength: Int
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
}

type AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings {
  CaptionChannel: Int
  CustomLanguageCode: String
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput {
  CaptionChannel: Int
  CustomLanguageCode: String
  LanguageCode: String
  LanguageDescription: String
}

type AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettingsEncryption {
  ConstantInitializationVector: String
  EncryptionMethod: String
  InitializationVectorInManifest: String
  OfflineEncrypted: String
  SpekeKeyProvider: AwsMediaConvertS3r
  StaticKeyProvider: AwsMediaConvertS3c
  Type: String
}

input AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettingsEncryptionInput {
  ConstantInitializationVector: String
  EncryptionMethod: String
  InitializationVectorInManifest: String
  OfflineEncrypted: String
  SpekeKeyProvider: AwsMediaConvertS3rInput
  StaticKeyProvider: AwsMediaConvertS3cInput
  Type: String
}

input AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettingsInput {
  AdMarkers: [String]
  BaseUrl: String
  CaptionLanguageMappings: [AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  Destination: String
  DestinationSettings: AwsMediaConvertS33Input
  DirectoryStructure: String
  Encryption: AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettingsEncryptionInput
  ManifestCompression: String
  ManifestDurationFormat: String
  MinFinalSegmentLength: JSON
  MinSegmentLength: Int
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  SegmentControl: String
  SegmentLength: Int
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
}

input AwsMediaConvertS2wOutputGroupSettingsInput {
  CmafGroupSettings: AwsMediaConvertS2wOutputGroupSettingsCmafGroupSettingsInput
  DashIsoGroupSettings: AwsMediaConvertS2wOutputGroupSettingsDashIsoGroupSettingsInput
  FileGroupSettings: AwsMediaConvertS2wOutputGroupSettingsFileGroupSettingsInput
  HlsGroupSettings: AwsMediaConvertS2wOutputGroupSettingsHlsGroupSettingsInput
  MsSmoothGroupSettings: AwsMediaConvertS2wOutputGroupSettingsMsSmoothGroupSettingsInput
  Type: String
}

type AwsMediaConvertS2wOutputGroupSettingsMsSmoothGroupSettings {
  AudioDeduplication: String
  Destination: String
  DestinationSettings: AwsMediaConvertS33
  Encryption: AwsMediaConvertS2wOutputGroupSettingsMsSmoothGroupSettingsEncryption
  FragmentLength: Int
  ManifestEncoding: String
}

type AwsMediaConvertS2wOutputGroupSettingsMsSmoothGroupSettingsEncryption {
  SpekeKeyProvider: AwsMediaConvertS3r
}

input AwsMediaConvertS2wOutputGroupSettingsMsSmoothGroupSettingsEncryptionInput {
  SpekeKeyProvider: AwsMediaConvertS3rInput
}

input AwsMediaConvertS2wOutputGroupSettingsMsSmoothGroupSettingsInput {
  AudioDeduplication: String
  Destination: String
  DestinationSettings: AwsMediaConvertS33Input
  Encryption: AwsMediaConvertS2wOutputGroupSettingsMsSmoothGroupSettingsEncryptionInput
  FragmentLength: Int
  ManifestEncoding: String
}

type AwsMediaConvertS2wOutputs {
  AudioDescriptions: [AwsMediaConvertS4t]
  CaptionDescriptions: [AwsMediaConvertS2wOutputsCaptionDescriptions]
  ContainerSettings: AwsMediaConvertS79
  Extension: String
  NameModifier: String
  OutputSettings: AwsMediaConvertS2wOutputsOutputSettings
  Preset: String
  VideoDescription: AwsMediaConvertS8p
}

type AwsMediaConvertS2wOutputsCaptionDescriptions {
  CaptionSelectorName: String
  CustomLanguageCode: String
  DestinationSettings: AwsMediaConvertS6j
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaConvertS2wOutputsCaptionDescriptionsInput {
  CaptionSelectorName: String
  CustomLanguageCode: String
  DestinationSettings: AwsMediaConvertS6jInput
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaConvertS2wOutputsInput {
  AudioDescriptions: [AwsMediaConvertS4tInput]
  CaptionDescriptions: [AwsMediaConvertS2wOutputsCaptionDescriptionsInput]
  ContainerSettings: AwsMediaConvertS79Input
  Extension: String
  NameModifier: String
  OutputSettings: AwsMediaConvertS2wOutputsOutputSettingsInput
  Preset: String
  VideoDescription: AwsMediaConvertS8pInput
}

type AwsMediaConvertS2wOutputsOutputSettings {
  HlsSettings: AwsMediaConvertS2wOutputsOutputSettingsHlsSettings
}

type AwsMediaConvertS2wOutputsOutputSettingsHlsSettings {
  AudioGroupId: String
  AudioRenditionSets: String
  AudioTrackType: String
  IFrameOnlyManifest: String
  SegmentModifier: String
}

input AwsMediaConvertS2wOutputsOutputSettingsHlsSettingsInput {
  AudioGroupId: String
  AudioRenditionSets: String
  AudioTrackType: String
  IFrameOnlyManifest: String
  SegmentModifier: String
}

input AwsMediaConvertS2wOutputsOutputSettingsInput {
  HlsSettings: AwsMediaConvertS2wOutputsOutputSettingsHlsSettingsInput
}

type AwsMediaConvertS33 {
  S3Settings: AwsMediaConvertS33S3Settings
}

input AwsMediaConvertS33Input {
  S3Settings: AwsMediaConvertS33S3SettingsInput
}

type AwsMediaConvertS33S3Settings {
  Encryption: AwsMediaConvertS33S3SettingsEncryption
}

type AwsMediaConvertS33S3SettingsEncryption {
  EncryptionType: String
  KmsKeyArn: String
}

input AwsMediaConvertS33S3SettingsEncryptionInput {
  EncryptionType: String
  KmsKeyArn: String
}

input AwsMediaConvertS33S3SettingsInput {
  Encryption: AwsMediaConvertS33S3SettingsEncryptionInput
}

type AwsMediaConvertS3c {
  KeyFormat: String
  KeyFormatVersions: String
  StaticKeyValue: String
  Url: String
}

input AwsMediaConvertS3cInput {
  KeyFormat: String
  KeyFormatVersions: String
  StaticKeyValue: String
  Url: String
}

type AwsMediaConvertS3r {
  CertificateArn: String
  ResourceId: String
  SystemIds: [String]
  Url: String
}

input AwsMediaConvertS3rInput {
  CertificateArn: String
  ResourceId: String
  SystemIds: [String]
  Url: String
}

type AwsMediaConvertS4t {
  AudioNormalizationSettings: AwsMediaConvertS4tAudioNormalizationSettings
  AudioSourceName: String
  AudioType: Int
  AudioTypeControl: String
  CodecSettings: AwsMediaConvertS4tCodecSettings
  CustomLanguageCode: String
  LanguageCode: String
  LanguageCodeControl: String
  RemixSettings: AwsMediaConvertS10
  StreamName: String
}

type AwsMediaConvertS4tAudioNormalizationSettings {
  Algorithm: String
  AlgorithmControl: String
  CorrectionGateLevel: Int
  LoudnessLogging: String
  PeakCalculation: String
  TargetLkfs: JSON
}

input AwsMediaConvertS4tAudioNormalizationSettingsInput {
  Algorithm: String
  AlgorithmControl: String
  CorrectionGateLevel: Int
  LoudnessLogging: String
  PeakCalculation: String
  TargetLkfs: JSON
}

type AwsMediaConvertS4tCodecSettings {
  AacSettings: AwsMediaConvertS4tCodecSettingsAacSettings
  Ac3Settings: AwsMediaConvertS4tCodecSettingsAc3Settings
  AiffSettings: AwsMediaConvertS4tCodecSettingsAiffSettings
  Codec: String
  Eac3Settings: AwsMediaConvertS4tCodecSettingsEac3Settings
  Mp2Settings: AwsMediaConvertS4tCodecSettingsMp2Settings
  WavSettings: AwsMediaConvertS4tCodecSettingsWavSettings
}

type AwsMediaConvertS4tCodecSettingsAacSettings {
  AudioDescriptionBroadcasterMix: String
  Bitrate: Int
  CodecProfile: String
  CodingMode: String
  RateControlMode: String
  RawFormat: String
  SampleRate: Int
  Specification: String
  VbrQuality: String
}

input AwsMediaConvertS4tCodecSettingsAacSettingsInput {
  AudioDescriptionBroadcasterMix: String
  Bitrate: Int
  CodecProfile: String
  CodingMode: String
  RateControlMode: String
  RawFormat: String
  SampleRate: Int
  Specification: String
  VbrQuality: String
}

type AwsMediaConvertS4tCodecSettingsAc3Settings {
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DynamicRangeCompressionProfile: String
  LfeFilter: String
  MetadataControl: String
  SampleRate: Int
}

input AwsMediaConvertS4tCodecSettingsAc3SettingsInput {
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DynamicRangeCompressionProfile: String
  LfeFilter: String
  MetadataControl: String
  SampleRate: Int
}

type AwsMediaConvertS4tCodecSettingsAiffSettings {
  BitDepth: Int
  Channels: Int
  SampleRate: Int
}

input AwsMediaConvertS4tCodecSettingsAiffSettingsInput {
  BitDepth: Int
  Channels: Int
  SampleRate: Int
}

type AwsMediaConvertS4tCodecSettingsEac3Settings {
  AttenuationControl: String
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DynamicRangeCompressionLine: String
  DynamicRangeCompressionRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  SampleRate: Int
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMediaConvertS4tCodecSettingsEac3SettingsInput {
  AttenuationControl: String
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DynamicRangeCompressionLine: String
  DynamicRangeCompressionRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  SampleRate: Int
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMediaConvertS4tCodecSettingsInput {
  AacSettings: AwsMediaConvertS4tCodecSettingsAacSettingsInput
  Ac3Settings: AwsMediaConvertS4tCodecSettingsAc3SettingsInput
  AiffSettings: AwsMediaConvertS4tCodecSettingsAiffSettingsInput
  Codec: String
  Eac3Settings: AwsMediaConvertS4tCodecSettingsEac3SettingsInput
  Mp2Settings: AwsMediaConvertS4tCodecSettingsMp2SettingsInput
  WavSettings: AwsMediaConvertS4tCodecSettingsWavSettingsInput
}

type AwsMediaConvertS4tCodecSettingsMp2Settings {
  Bitrate: Int
  Channels: Int
  SampleRate: Int
}

input AwsMediaConvertS4tCodecSettingsMp2SettingsInput {
  Bitrate: Int
  Channels: Int
  SampleRate: Int
}

type AwsMediaConvertS4tCodecSettingsWavSettings {
  BitDepth: Int
  Channels: Int
  Format: String
  SampleRate: Int
}

input AwsMediaConvertS4tCodecSettingsWavSettingsInput {
  BitDepth: Int
  Channels: Int
  Format: String
  SampleRate: Int
}

input AwsMediaConvertS4tInput {
  AudioNormalizationSettings: AwsMediaConvertS4tAudioNormalizationSettingsInput
  AudioSourceName: String
  AudioType: Int
  AudioTypeControl: String
  CodecSettings: AwsMediaConvertS4tCodecSettingsInput
  CustomLanguageCode: String
  LanguageCode: String
  LanguageCodeControl: String
  RemixSettings: AwsMediaConvertS10Input
  StreamName: String
}

type AwsMediaConvertS6j {
  BurninDestinationSettings: AwsMediaConvertS6jBurninDestinationSettings
  DestinationType: String
  DvbSubDestinationSettings: AwsMediaConvertS6jDvbSubDestinationSettings
  EmbeddedDestinationSettings: AwsMediaConvertS6jEmbeddedDestinationSettings
  SccDestinationSettings: AwsMediaConvertS6jSccDestinationSettings
  TeletextDestinationSettings: AwsMediaConvertS6jTeletextDestinationSettings
  TtmlDestinationSettings: AwsMediaConvertS6jTtmlDestinationSettings
}

type AwsMediaConvertS6jBurninDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontScript: String
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaConvertS6jBurninDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontScript: String
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

type AwsMediaConvertS6jDvbSubDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontScript: String
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaConvertS6jDvbSubDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontScript: String
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

type AwsMediaConvertS6jEmbeddedDestinationSettings {
  Destination608ChannelNumber: Int
}

input AwsMediaConvertS6jEmbeddedDestinationSettingsInput {
  Destination608ChannelNumber: Int
}

input AwsMediaConvertS6jInput {
  BurninDestinationSettings: AwsMediaConvertS6jBurninDestinationSettingsInput
  DestinationType: String
  DvbSubDestinationSettings: AwsMediaConvertS6jDvbSubDestinationSettingsInput
  EmbeddedDestinationSettings: AwsMediaConvertS6jEmbeddedDestinationSettingsInput
  SccDestinationSettings: AwsMediaConvertS6jSccDestinationSettingsInput
  TeletextDestinationSettings: AwsMediaConvertS6jTeletextDestinationSettingsInput
  TtmlDestinationSettings: AwsMediaConvertS6jTtmlDestinationSettingsInput
}

type AwsMediaConvertS6jSccDestinationSettings {
  Framerate: String
}

input AwsMediaConvertS6jSccDestinationSettingsInput {
  Framerate: String
}

type AwsMediaConvertS6jTeletextDestinationSettings {
  PageNumber: String
}

input AwsMediaConvertS6jTeletextDestinationSettingsInput {
  PageNumber: String
}

type AwsMediaConvertS6jTtmlDestinationSettings {
  StylePassthrough: String
}

input AwsMediaConvertS6jTtmlDestinationSettingsInput {
  StylePassthrough: String
}

type AwsMediaConvertS7 {
  Mode: String!
}

type AwsMediaConvertS79 {
  Container: String
  F4vSettings: AwsMediaConvertS79F4vSettings
  M2tsSettings: AwsMediaConvertS79M2tsSettings
  M3u8Settings: AwsMediaConvertS79M3u8Settings
  MovSettings: AwsMediaConvertS79MovSettings
  Mp4Settings: AwsMediaConvertS79Mp4Settings
}

type AwsMediaConvertS79F4vSettings {
  MoovPlacement: String
}

input AwsMediaConvertS79F4vSettingsInput {
  MoovPlacement: String
}

input AwsMediaConvertS79Input {
  Container: String
  F4vSettings: AwsMediaConvertS79F4vSettingsInput
  M2tsSettings: AwsMediaConvertS79M2tsSettingsInput
  M3u8Settings: AwsMediaConvertS79M3u8SettingsInput
  MovSettings: AwsMediaConvertS79MovSettingsInput
  Mp4Settings: AwsMediaConvertS79Mp4SettingsInput
}

type AwsMediaConvertS79M2tsSettings {
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: [Int]
  Bitrate: Int
  BufferModel: String
  DvbNitSettings: AwsMediaConvertS79M2tsSettingsDvbNitSettings
  DvbSdtSettings: AwsMediaConvertS79M2tsSettingsDvbSdtSettings
  DvbSubPids: [Int]
  DvbTdtSettings: AwsMediaConvertS79M2tsSettingsDvbTdtSettings
  DvbTeletextPid: Int
  EbpAudioInterval: String
  EbpPlacement: String
  EsRateInPes: String
  ForceTsVideoEbpOrder: String
  FragmentTime: JSON
  MaxPcrInterval: Int
  MinEbpInterval: Int
  NielsenId3: String
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  RateMode: String
  Scte35Esam: AwsMediaConvertS79M2tsSettingsScte35Esam
  Scte35Pid: Int
  Scte35Source: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TimedMetadataPid: Int
  TransportStreamId: Int
  VideoPid: Int
}

type AwsMediaConvertS79M2tsSettingsDvbNitSettings {
  NetworkId: Int
  NetworkName: String
  NitInterval: Int
}

input AwsMediaConvertS79M2tsSettingsDvbNitSettingsInput {
  NetworkId: Int
  NetworkName: String
  NitInterval: Int
}

type AwsMediaConvertS79M2tsSettingsDvbSdtSettings {
  OutputSdt: String
  SdtInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

input AwsMediaConvertS79M2tsSettingsDvbSdtSettingsInput {
  OutputSdt: String
  SdtInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

type AwsMediaConvertS79M2tsSettingsDvbTdtSettings {
  TdtInterval: Int
}

input AwsMediaConvertS79M2tsSettingsDvbTdtSettingsInput {
  TdtInterval: Int
}

input AwsMediaConvertS79M2tsSettingsInput {
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: [Int]
  Bitrate: Int
  BufferModel: String
  DvbNitSettings: AwsMediaConvertS79M2tsSettingsDvbNitSettingsInput
  DvbSdtSettings: AwsMediaConvertS79M2tsSettingsDvbSdtSettingsInput
  DvbSubPids: [Int]
  DvbTdtSettings: AwsMediaConvertS79M2tsSettingsDvbTdtSettingsInput
  DvbTeletextPid: Int
  EbpAudioInterval: String
  EbpPlacement: String
  EsRateInPes: String
  ForceTsVideoEbpOrder: String
  FragmentTime: JSON
  MaxPcrInterval: Int
  MinEbpInterval: Int
  NielsenId3: String
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  RateMode: String
  Scte35Esam: AwsMediaConvertS79M2tsSettingsScte35EsamInput
  Scte35Pid: Int
  Scte35Source: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TimedMetadataPid: Int
  TransportStreamId: Int
  VideoPid: Int
}

type AwsMediaConvertS79M2tsSettingsScte35Esam {
  Scte35EsamPid: Int
}

input AwsMediaConvertS79M2tsSettingsScte35EsamInput {
  Scte35EsamPid: Int
}

type AwsMediaConvertS79M3u8Settings {
  AudioFramesPerPes: Int
  AudioPids: [Int]
  NielsenId3: String
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  Scte35Pid: Int
  Scte35Source: String
  TimedMetadata: String
  TimedMetadataPid: Int
  TransportStreamId: Int
  VideoPid: Int
}

input AwsMediaConvertS79M3u8SettingsInput {
  AudioFramesPerPes: Int
  AudioPids: [Int]
  NielsenId3: String
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  Scte35Pid: Int
  Scte35Source: String
  TimedMetadata: String
  TimedMetadataPid: Int
  TransportStreamId: Int
  VideoPid: Int
}

type AwsMediaConvertS79MovSettings {
  ClapAtom: String
  CslgAtom: String
  Mpeg2FourCCControl: String
  PaddingControl: String
  Reference: String
}

input AwsMediaConvertS79MovSettingsInput {
  ClapAtom: String
  CslgAtom: String
  Mpeg2FourCCControl: String
  PaddingControl: String
  Reference: String
}

type AwsMediaConvertS79Mp4Settings {
  CslgAtom: String
  FreeSpaceBox: String
  MoovPlacement: String
  Mp4MajorBrand: String
}

input AwsMediaConvertS79Mp4SettingsInput {
  CslgAtom: String
  FreeSpaceBox: String
  MoovPlacement: String
  Mp4MajorBrand: String
}

input AwsMediaConvertS7Input {
  Mode: String!
}

type AwsMediaConvertS8p {
  AfdSignaling: String
  AntiAlias: String
  CodecSettings: AwsMediaConvertS8pCodecSettings
  ColorMetadata: String
  Crop: AwsMediaConvertSbj
  DropFrameTimecode: String
  FixedAfd: Int
  Height: Int
  Position: AwsMediaConvertSbj
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  TimecodeInsertion: String
  VideoPreprocessors: AwsMediaConvertS8pVideoPreprocessors
  Width: Int
}

type AwsMediaConvertS8pCodecSettings {
  Codec: String
  FrameCaptureSettings: AwsMediaConvertS8pCodecSettingsFrameCaptureSettings
  H264Settings: AwsMediaConvertS8pCodecSettingsH264Settings
  H265Settings: AwsMediaConvertS8pCodecSettingsH265Settings
  Mpeg2Settings: AwsMediaConvertS8pCodecSettingsMpeg2Settings
  ProresSettings: AwsMediaConvertS8pCodecSettingsProresSettings
}

type AwsMediaConvertS8pCodecSettingsFrameCaptureSettings {
  FramerateDenominator: Int
  FramerateNumerator: Int
  MaxCaptures: Int
  Quality: Int
}

input AwsMediaConvertS8pCodecSettingsFrameCaptureSettingsInput {
  FramerateDenominator: Int
  FramerateNumerator: Int
  MaxCaptures: Int
  Quality: Int
}

type AwsMediaConvertS8pCodecSettingsH264Settings {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  DynamicSubGop: String
  EntropyEncoding: String
  FieldEncoding: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  QvbrSettings: AwsMediaConvertS8pCodecSettingsH264SettingsQvbrSettings
  RateControlMode: String
  RepeatPps: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  UnregisteredSeiTimecode: String
}

input AwsMediaConvertS8pCodecSettingsH264SettingsInput {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  DynamicSubGop: String
  EntropyEncoding: String
  FieldEncoding: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  QvbrSettings: AwsMediaConvertS8pCodecSettingsH264SettingsQvbrSettingsInput
  RateControlMode: String
  RepeatPps: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  UnregisteredSeiTimecode: String
}

type AwsMediaConvertS8pCodecSettingsH264SettingsQvbrSettings {
  MaxAverageBitrate: Int
  QvbrQualityLevel: Int
}

input AwsMediaConvertS8pCodecSettingsH264SettingsQvbrSettingsInput {
  MaxAverageBitrate: Int
  QvbrQualityLevel: Int
}

type AwsMediaConvertS8pCodecSettingsH265Settings {
  AdaptiveQuantization: String
  AlternateTransferFunctionSei: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  DynamicSubGop: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  QvbrSettings: AwsMediaConvertS8pCodecSettingsH265SettingsQvbrSettings
  RateControlMode: String
  SampleAdaptiveOffsetFilterMode: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  SpatialAdaptiveQuantization: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  TemporalIds: String
  Tiles: String
  UnregisteredSeiTimecode: String
  WriteMp4PackagingType: String
}

input AwsMediaConvertS8pCodecSettingsH265SettingsInput {
  AdaptiveQuantization: String
  AlternateTransferFunctionSei: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  DynamicSubGop: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  QvbrSettings: AwsMediaConvertS8pCodecSettingsH265SettingsQvbrSettingsInput
  RateControlMode: String
  SampleAdaptiveOffsetFilterMode: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  SpatialAdaptiveQuantization: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  TemporalIds: String
  Tiles: String
  UnregisteredSeiTimecode: String
  WriteMp4PackagingType: String
}

type AwsMediaConvertS8pCodecSettingsH265SettingsQvbrSettings {
  MaxAverageBitrate: Int
  QvbrQualityLevel: Int
}

input AwsMediaConvertS8pCodecSettingsH265SettingsQvbrSettingsInput {
  MaxAverageBitrate: Int
  QvbrQualityLevel: Int
}

input AwsMediaConvertS8pCodecSettingsInput {
  Codec: String
  FrameCaptureSettings: AwsMediaConvertS8pCodecSettingsFrameCaptureSettingsInput
  H264Settings: AwsMediaConvertS8pCodecSettingsH264SettingsInput
  H265Settings: AwsMediaConvertS8pCodecSettingsH265SettingsInput
  Mpeg2Settings: AwsMediaConvertS8pCodecSettingsMpeg2SettingsInput
  ProresSettings: AwsMediaConvertS8pCodecSettingsProresSettingsInput
}

type AwsMediaConvertS8pCodecSettingsMpeg2Settings {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  DynamicSubGop: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  IntraDcPrecision: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  SceneChangeDetect: String
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
}

input AwsMediaConvertS8pCodecSettingsMpeg2SettingsInput {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  DynamicSubGop: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  IntraDcPrecision: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  SceneChangeDetect: String
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
}

type AwsMediaConvertS8pCodecSettingsProresSettings {
  CodecProfile: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  InterlaceMode: String
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  SlowPal: String
  Telecine: String
}

input AwsMediaConvertS8pCodecSettingsProresSettingsInput {
  CodecProfile: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  InterlaceMode: String
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  SlowPal: String
  Telecine: String
}

input AwsMediaConvertS8pInput {
  AfdSignaling: String
  AntiAlias: String
  CodecSettings: AwsMediaConvertS8pCodecSettingsInput
  ColorMetadata: String
  Crop: AwsMediaConvertSbjInput
  DropFrameTimecode: String
  FixedAfd: Int
  Height: Int
  Position: AwsMediaConvertSbjInput
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  TimecodeInsertion: String
  VideoPreprocessors: AwsMediaConvertS8pVideoPreprocessorsInput
  Width: Int
}

type AwsMediaConvertS8pVideoPreprocessors {
  ColorCorrector: AwsMediaConvertS8pVideoPreprocessorsColorCorrector
  Deinterlacer: AwsMediaConvertS8pVideoPreprocessorsDeinterlacer
  ImageInserter: AwsMediaConvertS1z
  NoiseReducer: AwsMediaConvertS8pVideoPreprocessorsNoiseReducer
  TimecodeBurnin: AwsMediaConvertS8pVideoPreprocessorsTimecodeBurnin
}

type AwsMediaConvertS8pVideoPreprocessorsColorCorrector {
  Brightness: Int
  ColorSpaceConversion: String
  Contrast: Int
  Hdr10Metadata: AwsMediaConvertS2h
  Hue: Int
  Saturation: Int
}

input AwsMediaConvertS8pVideoPreprocessorsColorCorrectorInput {
  Brightness: Int
  ColorSpaceConversion: String
  Contrast: Int
  Hdr10Metadata: AwsMediaConvertS2hInput
  Hue: Int
  Saturation: Int
}

type AwsMediaConvertS8pVideoPreprocessorsDeinterlacer {
  Algorithm: String
  Control: String
  Mode: String
}

input AwsMediaConvertS8pVideoPreprocessorsDeinterlacerInput {
  Algorithm: String
  Control: String
  Mode: String
}

input AwsMediaConvertS8pVideoPreprocessorsInput {
  ColorCorrector: AwsMediaConvertS8pVideoPreprocessorsColorCorrectorInput
  Deinterlacer: AwsMediaConvertS8pVideoPreprocessorsDeinterlacerInput
  ImageInserter: AwsMediaConvertS1zInput
  NoiseReducer: AwsMediaConvertS8pVideoPreprocessorsNoiseReducerInput
  TimecodeBurnin: AwsMediaConvertS8pVideoPreprocessorsTimecodeBurninInput
}

type AwsMediaConvertS8pVideoPreprocessorsNoiseReducer {
  Filter: String
  FilterSettings: AwsMediaConvertS8pVideoPreprocessorsNoiseReducerFilterSettings
  SpatialFilterSettings: AwsMediaConvertS8pVideoPreprocessorsNoiseReducerSpatialFilterSettings
}

type AwsMediaConvertS8pVideoPreprocessorsNoiseReducerFilterSettings {
  Strength: Int
}

input AwsMediaConvertS8pVideoPreprocessorsNoiseReducerFilterSettingsInput {
  Strength: Int
}

input AwsMediaConvertS8pVideoPreprocessorsNoiseReducerInput {
  Filter: String
  FilterSettings: AwsMediaConvertS8pVideoPreprocessorsNoiseReducerFilterSettingsInput
  SpatialFilterSettings: AwsMediaConvertS8pVideoPreprocessorsNoiseReducerSpatialFilterSettingsInput
}

type AwsMediaConvertS8pVideoPreprocessorsNoiseReducerSpatialFilterSettings {
  PostFilterSharpenStrength: Int
  Speed: Int
  Strength: Int
}

input AwsMediaConvertS8pVideoPreprocessorsNoiseReducerSpatialFilterSettingsInput {
  PostFilterSharpenStrength: Int
  Speed: Int
  Strength: Int
}

type AwsMediaConvertS8pVideoPreprocessorsTimecodeBurnin {
  FontSize: Int
  Position: String
  Prefix: String
}

input AwsMediaConvertS8pVideoPreprocessorsTimecodeBurninInput {
  FontSize: Int
  Position: String
  Prefix: String
}

type AwsMediaConvertSa {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaConvertSc
  Esam: AwsMediaConvertSe
  Inputs: [AwsMediaConvertSaInputs]
  MotionImageInserter: AwsMediaConvertS2l
  NielsenConfiguration: AwsMediaConvertS2u
  OutputGroups: [AwsMediaConvertS2w]
  TimecodeConfig: AwsMediaConvertScb
  TimedMetadataInsertion: AwsMediaConvertSce
}

input AwsMediaConvertSaInput {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaConvertScInput
  Esam: AwsMediaConvertSeInput
  Inputs: [AwsMediaConvertSaInputsInput]
  MotionImageInserter: AwsMediaConvertS2lInput
  NielsenConfiguration: AwsMediaConvertS2uInput
  OutputGroups: [AwsMediaConvertS2wInput]
  TimecodeConfig: AwsMediaConvertScbInput
  TimedMetadataInsertion: AwsMediaConvertSceInput
}

type AwsMediaConvertSaInputs {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DecryptionSettings: AwsMediaConvertSaInputsDecryptionSettings
  DenoiseFilter: String
  FileInput: String
  FilterEnable: String
  FilterStrength: Int
  ImageInserter: AwsMediaConvertS1z
  InputClippings: [AwsMediaConvertS27]
  ProgramNumber: Int
  PsiControl: String
  SupplementalImps: [String]
  TimecodeSource: String
  VideoSelector: AwsMediaConvertS2e
}

type AwsMediaConvertSaInputsDecryptionSettings {
  DecryptionMode: String
  EncryptedDecryptionKey: String
  InitializationVector: String
  KmsKeyRegion: String
}

input AwsMediaConvertSaInputsDecryptionSettingsInput {
  DecryptionMode: String
  EncryptedDecryptionKey: String
  InitializationVector: String
  KmsKeyRegion: String
}

input AwsMediaConvertSaInputsInput {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DecryptionSettings: AwsMediaConvertSaInputsDecryptionSettingsInput
  DenoiseFilter: String
  FileInput: String
  FilterEnable: String
  FilterStrength: Int
  ImageInserter: AwsMediaConvertS1zInput
  InputClippings: [AwsMediaConvertS27Input]
  ProgramNumber: Int
  PsiControl: String
  SupplementalImps: [String]
  TimecodeSource: String
  VideoSelector: AwsMediaConvertS2eInput
}

type AwsMediaConvertSbj {
  Height: Int
  Width: Int
  X: Int
  Y: Int
}

input AwsMediaConvertSbjInput {
  Height: Int
  Width: Int
  X: Int
  Y: Int
}

type AwsMediaConvertSc {
  AvailBlankingImage: String
}

type AwsMediaConvertScb {
  Anchor: String
  Source: String
  Start: String
  TimestampOffset: String
}

input AwsMediaConvertScbInput {
  Anchor: String
  Source: String
  Start: String
  TimestampOffset: String
}

type AwsMediaConvertSce {
  Id3Insertions: [AwsMediaConvertSceId3Insertions]
}

type AwsMediaConvertSceId3Insertions {
  Id3: String
  Timecode: String
}

input AwsMediaConvertSceId3InsertionsInput {
  Id3: String
  Timecode: String
}

input AwsMediaConvertSceInput {
  Id3Insertions: [AwsMediaConvertSceId3InsertionsInput]
}

input AwsMediaConvertScInput {
  AvailBlankingImage: String
}

type AwsMediaConvertScl {
  AccelerationSettings: AwsMediaConvertS7
  Arn: String
  BillingTagsSource: String
  CreatedAt: Date
  CurrentPhase: String
  ErrorCode: Int
  ErrorMessage: String
  Id: String
  JobPercentComplete: Int
  JobTemplate: String
  OutputGroupDetails: [AwsMediaConvertSclOutputGroupDetails]
  Queue: String
  RetryCount: Int
  Role: String!
  Settings: AwsMediaConvertSa!
  Status: String
  StatusUpdateInterval: String
  Timing: AwsMediaConvertSclTiming
  UserMetadata: JSON
}

type AwsMediaConvertSclOutputGroupDetails {
  OutputDetails: [AwsMediaConvertSclOutputGroupDetailsOutputDetails]
}

type AwsMediaConvertSclOutputGroupDetailsOutputDetails {
  DurationInMs: Int
  VideoDetails: AwsMediaConvertSclOutputGroupDetailsOutputDetailsVideoDetails
}

type AwsMediaConvertSclOutputGroupDetailsOutputDetailsVideoDetails {
  HeightInPx: Int
  WidthInPx: Int
}

type AwsMediaConvertSclTiming {
  FinishTime: Date
  StartTime: Date
  SubmitTime: Date
}

type AwsMediaConvertScx {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaConvertSc
  Esam: AwsMediaConvertSe
  Inputs: [AwsMediaConvertScxInputs]
  MotionImageInserter: AwsMediaConvertS2l
  NielsenConfiguration: AwsMediaConvertS2u
  OutputGroups: [AwsMediaConvertS2w]
  TimecodeConfig: AwsMediaConvertScb
  TimedMetadataInsertion: AwsMediaConvertSce
}

input AwsMediaConvertScxInput {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaConvertScInput
  Esam: AwsMediaConvertSeInput
  Inputs: [AwsMediaConvertScxInputsInput]
  MotionImageInserter: AwsMediaConvertS2lInput
  NielsenConfiguration: AwsMediaConvertS2uInput
  OutputGroups: [AwsMediaConvertS2wInput]
  TimecodeConfig: AwsMediaConvertScbInput
  TimedMetadataInsertion: AwsMediaConvertSceInput
}

type AwsMediaConvertScxInputs {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DenoiseFilter: String
  FilterEnable: String
  FilterStrength: Int
  ImageInserter: AwsMediaConvertS1z
  InputClippings: [AwsMediaConvertS27]
  ProgramNumber: Int
  PsiControl: String
  TimecodeSource: String
  VideoSelector: AwsMediaConvertS2e
}

input AwsMediaConvertScxInputsInput {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DenoiseFilter: String
  FilterEnable: String
  FilterStrength: Int
  ImageInserter: AwsMediaConvertS1zInput
  InputClippings: [AwsMediaConvertS27Input]
  ProgramNumber: Int
  PsiControl: String
  TimecodeSource: String
  VideoSelector: AwsMediaConvertS2eInput
}

type AwsMediaConvertSd1 {
  AccelerationSettings: AwsMediaConvertS7
  Arn: String
  Category: String
  CreatedAt: Date
  Description: String
  LastUpdated: Date
  Name: String!
  Queue: String
  Settings: AwsMediaConvertScx!
  StatusUpdateInterval: String
  Type: String
}

type AwsMediaConvertSd4 {
  AudioDescriptions: [AwsMediaConvertS4t]
  CaptionDescriptions: [AwsMediaConvertSd4CaptionDescriptions]
  ContainerSettings: AwsMediaConvertS79
  VideoDescription: AwsMediaConvertS8p
}

type AwsMediaConvertSd4CaptionDescriptions {
  CustomLanguageCode: String
  DestinationSettings: AwsMediaConvertS6j
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaConvertSd4CaptionDescriptionsInput {
  CustomLanguageCode: String
  DestinationSettings: AwsMediaConvertS6jInput
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaConvertSd4Input {
  AudioDescriptions: [AwsMediaConvertS4tInput]
  CaptionDescriptions: [AwsMediaConvertSd4CaptionDescriptionsInput]
  ContainerSettings: AwsMediaConvertS79Input
  VideoDescription: AwsMediaConvertS8pInput
}

type AwsMediaConvertSd8 {
  Arn: String
  Category: String
  CreatedAt: Date
  Description: String
  LastUpdated: Date
  Name: String!
  Settings: AwsMediaConvertSd4!
  Type: String
}

input AwsMediaConvertSdbInput {
  Commitment: String!
  RenewalType: String!
  ReservedSlots: Int!
}

type AwsMediaConvertSdf {
  Arn: String
  CreatedAt: Date
  Description: String
  LastUpdated: Date
  Name: String!
  PricingPlan: String
  ProgressingJobsCount: Int
  ReservationPlan: AwsMediaConvertSdfReservationPlan
  Status: String
  SubmittedJobsCount: Int
  Type: String
}

type AwsMediaConvertSdfReservationPlan {
  Commitment: String
  ExpiresAt: Date
  PurchasedAt: Date
  RenewalType: String
  ReservedSlots: Int
  Status: String
}

type AwsMediaConvertSe {
  ManifestConfirmConditionNotification: AwsMediaConvertSeManifestConfirmConditionNotification
  ResponseSignalPreroll: Int
  SignalProcessingNotification: AwsMediaConvertSeSignalProcessingNotification
}

input AwsMediaConvertSeInput {
  ManifestConfirmConditionNotification: AwsMediaConvertSeManifestConfirmConditionNotificationInput
  ResponseSignalPreroll: Int
  SignalProcessingNotification: AwsMediaConvertSeSignalProcessingNotificationInput
}

type AwsMediaConvertSeManifestConfirmConditionNotification {
  MccXml: String
}

input AwsMediaConvertSeManifestConfirmConditionNotificationInput {
  MccXml: String
}

type AwsMediaConvertSeSignalProcessingNotification {
  SccXml: String
}

input AwsMediaConvertSeSignalProcessingNotificationInput {
  SccXml: String
}

input AwsMediaConvertTagResourceInput {
  Arn: String!
  Tags: JSON!
}

input AwsMediaConvertUntagResourceInput {
  Arn: String!
  TagKeys: [String]
}

input AwsMediaConvertUpdateJobTemplateInput {
  AccelerationSettings: AwsMediaConvertS7Input
  Category: String
  Description: String
  Name: String!
  Queue: String
  Settings: AwsMediaConvertScxInput
  StatusUpdateInterval: String
}

type AwsMediaConvertUpdateJobTemplateOutput {
  JobTemplate: AwsMediaConvertSd1
}

input AwsMediaConvertUpdatePresetInput {
  Category: String
  Description: String
  Name: String!
  Settings: AwsMediaConvertSd4Input
}

type AwsMediaConvertUpdatePresetOutput {
  Preset: AwsMediaConvertSd8
}

input AwsMediaConvertUpdateQueueInput {
  Description: String
  Name: String!
  ReservationPlanSettings: AwsMediaConvertSdbInput
  Status: String
}

type AwsMediaConvertUpdateQueueOutput {
  Queue: AwsMediaConvertSdf
}

"""AWS Elemental MediaLive (2017-10-14)"""
type AwsMediaLive {
  batchUpdateSchedule(input: AwsMediaLiveBatchUpdateScheduleInput!, config: AwsConfig): AwsMediaLiveBatchUpdateScheduleOutput
  createChannel(input: AwsMediaLiveCreateChannelInput, config: AwsConfig): AwsMediaLiveCreateChannelOutput
  createInput(input: AwsMediaLiveCreateInputInput, config: AwsConfig): AwsMediaLiveCreateInputOutput
  createInputSecurityGroup(input: AwsMediaLiveCreateInputSecurityGroupInput, config: AwsConfig): AwsMediaLiveCreateInputSecurityGroupOutput
  createTags(input: AwsMediaLiveCreateTagsInput!, config: AwsConfig): JSON
  deleteChannel(input: AwsMediaLiveDeleteChannelInput!, config: AwsConfig): AwsMediaLiveDeleteChannelOutput
  deleteInput(input: AwsMediaLiveDeleteInputInput!, config: AwsConfig): JSON
  deleteInputSecurityGroup(input: AwsMediaLiveDeleteInputSecurityGroupInput!, config: AwsConfig): JSON
  deleteReservation(input: AwsMediaLiveDeleteReservationInput!, config: AwsConfig): AwsMediaLiveDeleteReservationOutput
  deleteSchedule(input: AwsMediaLiveDeleteScheduleInput!, config: AwsConfig): JSON
  deleteTags(input: AwsMediaLiveDeleteTagsInput!, config: AwsConfig): JSON
  describeChannel(input: AwsMediaLiveDescribeChannelInput!, config: AwsConfig): AwsMediaLiveDescribeChannelOutput
  describeInput(input: AwsMediaLiveDescribeInputInput!, config: AwsConfig): AwsMediaLiveDescribeInputOutput
  describeInputSecurityGroup(input: AwsMediaLiveDescribeInputSecurityGroupInput!, config: AwsConfig): AwsMediaLiveDescribeInputSecurityGroupOutput
  describeOffering(input: AwsMediaLiveDescribeOfferingInput!, config: AwsConfig): AwsMediaLiveDescribeOfferingOutput
  describeReservation(input: AwsMediaLiveDescribeReservationInput!, config: AwsConfig): AwsMediaLiveDescribeReservationOutput
  describeSchedule(input: AwsMediaLiveDescribeScheduleInput!, config: AwsConfig): AwsMediaLiveDescribeScheduleOutput
  listChannels(input: AwsMediaLiveListChannelsInput, config: AwsConfig): AwsMediaLiveListChannelsOutput
  listInputSecurityGroups(input: AwsMediaLiveListInputSecurityGroupsInput, config: AwsConfig): AwsMediaLiveListInputSecurityGroupsOutput
  listInputs(input: AwsMediaLiveListInputsInput, config: AwsConfig): AwsMediaLiveListInputsOutput
  listOfferings(input: AwsMediaLiveListOfferingsInput, config: AwsConfig): AwsMediaLiveListOfferingsOutput
  listReservations(input: AwsMediaLiveListReservationsInput, config: AwsConfig): AwsMediaLiveListReservationsOutput
  listTagsForResource(input: AwsMediaLiveListTagsForResourceInput!, config: AwsConfig): AwsMediaLiveListTagsForResourceOutput
  purchaseOffering(input: AwsMediaLivePurchaseOfferingInput!, config: AwsConfig): AwsMediaLivePurchaseOfferingOutput
  startChannel(input: AwsMediaLiveStartChannelInput!, config: AwsConfig): AwsMediaLiveStartChannelOutput
  stopChannel(input: AwsMediaLiveStopChannelInput!, config: AwsConfig): AwsMediaLiveStopChannelOutput
  updateChannel(input: AwsMediaLiveUpdateChannelInput!, config: AwsConfig): AwsMediaLiveUpdateChannelOutput
  updateChannelClass(input: AwsMediaLiveUpdateChannelClassInput!, config: AwsConfig): AwsMediaLiveUpdateChannelClassOutput
  updateInput(input: AwsMediaLiveUpdateInputInput!, config: AwsConfig): AwsMediaLiveUpdateInputOutput
  updateInputSecurityGroup(input: AwsMediaLiveUpdateInputSecurityGroupInput!, config: AwsConfig): AwsMediaLiveUpdateInputSecurityGroupOutput
  updateReservation(input: AwsMediaLiveUpdateReservationInput!, config: AwsConfig): AwsMediaLiveUpdateReservationOutput
}

input AwsMediaLiveBatchUpdateScheduleCreatesInput {
  ScheduleActions: [AwsMediaLiveS4Input]!
}

input AwsMediaLiveBatchUpdateScheduleDeletesInput {
  ActionNames: [String]!
}

input AwsMediaLiveBatchUpdateScheduleInput {
  ChannelId: String!
  Creates: AwsMediaLiveBatchUpdateScheduleCreatesInput
  Deletes: AwsMediaLiveBatchUpdateScheduleDeletesInput
}

type AwsMediaLiveBatchUpdateScheduleOutput {
  Creates: AwsMediaLiveBatchUpdateScheduleOutputCreates
  Deletes: AwsMediaLiveBatchUpdateScheduleOutputDeletes
}

type AwsMediaLiveBatchUpdateScheduleOutputCreates {
  ScheduleActions: [AwsMediaLiveS4]!
}

type AwsMediaLiveBatchUpdateScheduleOutputDeletes {
  ScheduleActions: [AwsMediaLiveS4]!
}

input AwsMediaLiveCreateChannelInput {
  ChannelClass: String
  Destinations: [AwsMediaLiveS1cInput]
  EncoderSettings: AwsMediaLiveS1jInput
  InputAttachments: [AwsMediaLiveS96Input]
  InputSpecification: AwsMediaLiveSa6Input
  LogLevel: String
  Name: String
  RequestId: String
  Reserved: String
  RoleArn: String
  Tags: JSON
}

type AwsMediaLiveCreateChannelOutput {
  Channel: AwsMediaLiveSad
}

input AwsMediaLiveCreateInputInput {
  Destinations: [AwsMediaLiveSaiInput]
  InputSecurityGroups: [String]
  MediaConnectFlows: [AwsMediaLiveSakInput]
  Name: String
  RequestId: String
  RoleArn: String
  Sources: [AwsMediaLiveSamInput]
  Tags: JSON
  Type: String
  Vpc: AwsMediaLiveCreateInputVpcInput
}

type AwsMediaLiveCreateInputOutput {
  Input: AwsMediaLiveSar
}

input AwsMediaLiveCreateInputSecurityGroupInput {
  Tags: JSON
  WhitelistRules: [AwsMediaLiveSb2Input]
}

type AwsMediaLiveCreateInputSecurityGroupOutput {
  SecurityGroup: AwsMediaLiveSb5
}

input AwsMediaLiveCreateInputVpcInput {
  SecurityGroupIds: [String]
  SubnetIds: [String]!
}

input AwsMediaLiveCreateTagsInput {
  ResourceArn: String!
  Tags: JSON
}

input AwsMediaLiveDeleteChannelInput {
  ChannelId: String!
}

type AwsMediaLiveDeleteChannelOutput {
  Arn: String
  ChannelClass: String
  Destinations: [AwsMediaLiveS1c]
  EgressEndpoints: [AwsMediaLiveSae]
  EncoderSettings: AwsMediaLiveS1j
  Id: String
  InputAttachments: [AwsMediaLiveS96]
  InputSpecification: AwsMediaLiveSa6
  LogLevel: String
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
  Tags: JSON
}

input AwsMediaLiveDeleteInputInput {
  InputId: String!
}

input AwsMediaLiveDeleteInputSecurityGroupInput {
  InputSecurityGroupId: String!
}

input AwsMediaLiveDeleteReservationInput {
  ReservationId: String!
}

type AwsMediaLiveDeleteReservationOutput {
  Arn: String
  Count: Int
  CurrencyCode: String
  Duration: Int
  DurationUnits: String
  End: String
  FixedPrice: JSON
  Name: String
  OfferingDescription: String
  OfferingId: String
  OfferingType: String
  Region: String
  ReservationId: String
  ResourceSpecification: AwsMediaLiveSbk
  Start: String
  State: String
  Tags: JSON
  UsagePrice: JSON
}

input AwsMediaLiveDeleteScheduleInput {
  ChannelId: String!
}

input AwsMediaLiveDeleteTagsInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsMediaLiveDescribeChannelInput {
  ChannelId: String!
}

type AwsMediaLiveDescribeChannelOutput {
  Arn: String
  ChannelClass: String
  Destinations: [AwsMediaLiveS1c]
  EgressEndpoints: [AwsMediaLiveSae]
  EncoderSettings: AwsMediaLiveS1j
  Id: String
  InputAttachments: [AwsMediaLiveS96]
  InputSpecification: AwsMediaLiveSa6
  LogLevel: String
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
  Tags: JSON
}

input AwsMediaLiveDescribeInputInput {
  InputId: String!
}

type AwsMediaLiveDescribeInputOutput {
  Arn: String
  AttachedChannels: [String]
  Destinations: [AwsMediaLiveSas]
  Id: String
  InputClass: String
  MediaConnectFlows: [AwsMediaLiveSaw]
  Name: String
  RoleArn: String
  SecurityGroups: [String]
  Sources: [AwsMediaLiveSay]
  State: String
  Tags: JSON
  Type: String
}

input AwsMediaLiveDescribeInputSecurityGroupInput {
  InputSecurityGroupId: String!
}

type AwsMediaLiveDescribeInputSecurityGroupOutput {
  Arn: String
  Id: String
  Inputs: [String]
  State: String
  Tags: JSON
  WhitelistRules: [AwsMediaLiveSb7]
}

input AwsMediaLiveDescribeOfferingInput {
  OfferingId: String!
}

type AwsMediaLiveDescribeOfferingOutput {
  Arn: String
  CurrencyCode: String
  Duration: Int
  DurationUnits: String
  FixedPrice: JSON
  OfferingDescription: String
  OfferingId: String
  OfferingType: String
  Region: String
  ResourceSpecification: AwsMediaLiveSbk
  UsagePrice: JSON
}

input AwsMediaLiveDescribeReservationInput {
  ReservationId: String!
}

type AwsMediaLiveDescribeReservationOutput {
  Arn: String
  Count: Int
  CurrencyCode: String
  Duration: Int
  DurationUnits: String
  End: String
  FixedPrice: JSON
  Name: String
  OfferingDescription: String
  OfferingId: String
  OfferingType: String
  Region: String
  ReservationId: String
  ResourceSpecification: AwsMediaLiveSbk
  Start: String
  State: String
  Tags: JSON
  UsagePrice: JSON
}

input AwsMediaLiveDescribeScheduleInput {
  ChannelId: String!
  MaxResults: Int
  NextToken: String
}

type AwsMediaLiveDescribeScheduleOutput {
  NextToken: String
  ScheduleActions: [AwsMediaLiveS4]
}

input AwsMediaLiveListChannelsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaLiveListChannelsOutput {
  Channels: [AwsMediaLiveListChannelsOutputChannels]
  NextToken: String
}

type AwsMediaLiveListChannelsOutputChannels {
  Arn: String
  ChannelClass: String
  Destinations: [AwsMediaLiveS1c]
  EgressEndpoints: [AwsMediaLiveSae]
  Id: String
  InputAttachments: [AwsMediaLiveS96]
  InputSpecification: AwsMediaLiveSa6
  LogLevel: String
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
  Tags: JSON
}

input AwsMediaLiveListInputSecurityGroupsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaLiveListInputSecurityGroupsOutput {
  InputSecurityGroups: [AwsMediaLiveSb5]
  NextToken: String
}

input AwsMediaLiveListInputsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaLiveListInputsOutput {
  Inputs: [AwsMediaLiveSar]
  NextToken: String
}

input AwsMediaLiveListOfferingsInput {
  ChannelClass: String
  ChannelConfiguration: String
  Codec: String
  MaxResults: Int
  MaximumBitrate: String
  MaximumFramerate: String
  NextToken: String
  Resolution: String
  ResourceType: String
  SpecialFeature: String
  VideoQuality: String
}

type AwsMediaLiveListOfferingsOutput {
  NextToken: String
  Offerings: [AwsMediaLiveListOfferingsOutputOfferings]
}

type AwsMediaLiveListOfferingsOutputOfferings {
  Arn: String
  CurrencyCode: String
  Duration: Int
  DurationUnits: String
  FixedPrice: JSON
  OfferingDescription: String
  OfferingId: String
  OfferingType: String
  Region: String
  ResourceSpecification: AwsMediaLiveSbk
  UsagePrice: JSON
}

input AwsMediaLiveListReservationsInput {
  ChannelClass: String
  Codec: String
  MaxResults: Int
  MaximumBitrate: String
  MaximumFramerate: String
  NextToken: String
  Resolution: String
  ResourceType: String
  SpecialFeature: String
  VideoQuality: String
}

type AwsMediaLiveListReservationsOutput {
  NextToken: String
  Reservations: [AwsMediaLiveScq]
}

input AwsMediaLiveListTagsForResourceInput {
  ResourceArn: String!
}

type AwsMediaLiveListTagsForResourceOutput {
  Tags: JSON
}

input AwsMediaLivePurchaseOfferingInput {
  Count: Int!
  Name: String
  OfferingId: String!
  RequestId: String
  Start: String
  Tags: JSON
}

type AwsMediaLivePurchaseOfferingOutput {
  Reservation: AwsMediaLiveScq
}

type AwsMediaLiveS1c {
  Id: String
  MediaPackageSettings: [AwsMediaLiveS1cMediaPackageSettings]
  Settings: [AwsMediaLiveS1cSettings]
}

input AwsMediaLiveS1cInput {
  Id: String
  MediaPackageSettings: [AwsMediaLiveS1cMediaPackageSettingsInput]
  Settings: [AwsMediaLiveS1cSettingsInput]
}

type AwsMediaLiveS1cMediaPackageSettings {
  ChannelId: String
}

input AwsMediaLiveS1cMediaPackageSettingsInput {
  ChannelId: String
}

type AwsMediaLiveS1cSettings {
  PasswordParam: String
  StreamName: String
  Url: String
  Username: String
}

input AwsMediaLiveS1cSettingsInput {
  PasswordParam: String
  StreamName: String
  Url: String
  Username: String
}

type AwsMediaLiveS1j {
  AudioDescriptions: [AwsMediaLiveS1jAudioDescriptions]!
  AvailBlanking: AwsMediaLiveS1jAvailBlanking
  AvailConfiguration: AwsMediaLiveS1jAvailConfiguration
  BlackoutSlate: AwsMediaLiveS1jBlackoutSlate
  CaptionDescriptions: [AwsMediaLiveS1jCaptionDescriptions]
  GlobalConfiguration: AwsMediaLiveS1jGlobalConfiguration
  OutputGroups: [AwsMediaLiveS1jOutputGroups]!
  TimecodeConfig: AwsMediaLiveS1jTimecodeConfig!
  VideoDescriptions: [AwsMediaLiveS1jVideoDescriptions]!
}

type AwsMediaLiveS1jAudioDescriptions {
  AudioNormalizationSettings: AwsMediaLiveS1jAudioDescriptionsAudioNormalizationSettings
  AudioSelectorName: String!
  AudioType: String
  AudioTypeControl: String
  CodecSettings: AwsMediaLiveS1jAudioDescriptionsCodecSettings
  LanguageCode: String
  LanguageCodeControl: String
  Name: String!
  RemixSettings: AwsMediaLiveS1jAudioDescriptionsRemixSettings
  StreamName: String
}

type AwsMediaLiveS1jAudioDescriptionsAudioNormalizationSettings {
  Algorithm: String
  AlgorithmControl: String
  TargetLkfs: JSON
}

input AwsMediaLiveS1jAudioDescriptionsAudioNormalizationSettingsInput {
  Algorithm: String
  AlgorithmControl: String
  TargetLkfs: JSON
}

type AwsMediaLiveS1jAudioDescriptionsCodecSettings {
  AacSettings: AwsMediaLiveS1jAudioDescriptionsCodecSettingsAacSettings
  Ac3Settings: AwsMediaLiveS1jAudioDescriptionsCodecSettingsAc3Settings
  Eac3Settings: AwsMediaLiveS1jAudioDescriptionsCodecSettingsEac3Settings
  Mp2Settings: AwsMediaLiveS1jAudioDescriptionsCodecSettingsMp2Settings
  PassThroughSettings: JSON
}

type AwsMediaLiveS1jAudioDescriptionsCodecSettingsAacSettings {
  Bitrate: JSON
  CodingMode: String
  InputType: String
  Profile: String
  RateControlMode: String
  RawFormat: String
  SampleRate: JSON
  Spec: String
  VbrQuality: String
}

input AwsMediaLiveS1jAudioDescriptionsCodecSettingsAacSettingsInput {
  Bitrate: JSON
  CodingMode: String
  InputType: String
  Profile: String
  RateControlMode: String
  RawFormat: String
  SampleRate: JSON
  Spec: String
  VbrQuality: String
}

type AwsMediaLiveS1jAudioDescriptionsCodecSettingsAc3Settings {
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DrcProfile: String
  LfeFilter: String
  MetadataControl: String
}

input AwsMediaLiveS1jAudioDescriptionsCodecSettingsAc3SettingsInput {
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DrcProfile: String
  LfeFilter: String
  MetadataControl: String
}

type AwsMediaLiveS1jAudioDescriptionsCodecSettingsEac3Settings {
  AttenuationControl: String
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DrcLine: String
  DrcRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMediaLiveS1jAudioDescriptionsCodecSettingsEac3SettingsInput {
  AttenuationControl: String
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DrcLine: String
  DrcRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMediaLiveS1jAudioDescriptionsCodecSettingsInput {
  AacSettings: AwsMediaLiveS1jAudioDescriptionsCodecSettingsAacSettingsInput
  Ac3Settings: AwsMediaLiveS1jAudioDescriptionsCodecSettingsAc3SettingsInput
  Eac3Settings: AwsMediaLiveS1jAudioDescriptionsCodecSettingsEac3SettingsInput
  Mp2Settings: AwsMediaLiveS1jAudioDescriptionsCodecSettingsMp2SettingsInput
  PassThroughSettings: JSON
}

type AwsMediaLiveS1jAudioDescriptionsCodecSettingsMp2Settings {
  Bitrate: JSON
  CodingMode: String
  SampleRate: JSON
}

input AwsMediaLiveS1jAudioDescriptionsCodecSettingsMp2SettingsInput {
  Bitrate: JSON
  CodingMode: String
  SampleRate: JSON
}

input AwsMediaLiveS1jAudioDescriptionsInput {
  AudioNormalizationSettings: AwsMediaLiveS1jAudioDescriptionsAudioNormalizationSettingsInput
  AudioSelectorName: String!
  AudioType: String
  AudioTypeControl: String
  CodecSettings: AwsMediaLiveS1jAudioDescriptionsCodecSettingsInput
  LanguageCode: String
  LanguageCodeControl: String
  Name: String!
  RemixSettings: AwsMediaLiveS1jAudioDescriptionsRemixSettingsInput
  StreamName: String
}

type AwsMediaLiveS1jAudioDescriptionsRemixSettings {
  ChannelMappings: [AwsMediaLiveS1jAudioDescriptionsRemixSettingsChannelMappings]!
  ChannelsIn: Int
  ChannelsOut: Int
}

type AwsMediaLiveS1jAudioDescriptionsRemixSettingsChannelMappings {
  InputChannelLevels: [AwsMediaLiveS1jAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevels]!
  OutputChannel: Int!
}

input AwsMediaLiveS1jAudioDescriptionsRemixSettingsChannelMappingsInput {
  InputChannelLevels: [AwsMediaLiveS1jAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsInput]!
  OutputChannel: Int!
}

type AwsMediaLiveS1jAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevels {
  Gain: Int!
  InputChannel: Int!
}

input AwsMediaLiveS1jAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsInput {
  Gain: Int!
  InputChannel: Int!
}

input AwsMediaLiveS1jAudioDescriptionsRemixSettingsInput {
  ChannelMappings: [AwsMediaLiveS1jAudioDescriptionsRemixSettingsChannelMappingsInput]!
  ChannelsIn: Int
  ChannelsOut: Int
}

type AwsMediaLiveS1jAvailBlanking {
  AvailBlankingImage: AwsMediaLiveSx
  State: String
}

input AwsMediaLiveS1jAvailBlankingInput {
  AvailBlankingImage: AwsMediaLiveSxInput
  State: String
}

type AwsMediaLiveS1jAvailConfiguration {
  AvailSettings: AwsMediaLiveS1jAvailConfigurationAvailSettings
}

type AwsMediaLiveS1jAvailConfigurationAvailSettings {
  Scte35SpliceInsert: AwsMediaLiveS1jAvailConfigurationAvailSettingsScte35SpliceInsert
  Scte35TimeSignalApos: AwsMediaLiveS1jAvailConfigurationAvailSettingsScte35TimeSignalApos
}

input AwsMediaLiveS1jAvailConfigurationAvailSettingsInput {
  Scte35SpliceInsert: AwsMediaLiveS1jAvailConfigurationAvailSettingsScte35SpliceInsertInput
  Scte35TimeSignalApos: AwsMediaLiveS1jAvailConfigurationAvailSettingsScte35TimeSignalAposInput
}

type AwsMediaLiveS1jAvailConfigurationAvailSettingsScte35SpliceInsert {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

input AwsMediaLiveS1jAvailConfigurationAvailSettingsScte35SpliceInsertInput {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

type AwsMediaLiveS1jAvailConfigurationAvailSettingsScte35TimeSignalApos {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

input AwsMediaLiveS1jAvailConfigurationAvailSettingsScte35TimeSignalAposInput {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

input AwsMediaLiveS1jAvailConfigurationInput {
  AvailSettings: AwsMediaLiveS1jAvailConfigurationAvailSettingsInput
}

type AwsMediaLiveS1jBlackoutSlate {
  BlackoutSlateImage: AwsMediaLiveSx
  NetworkEndBlackout: String
  NetworkEndBlackoutImage: AwsMediaLiveSx
  NetworkId: String
  State: String
}

input AwsMediaLiveS1jBlackoutSlateInput {
  BlackoutSlateImage: AwsMediaLiveSxInput
  NetworkEndBlackout: String
  NetworkEndBlackoutImage: AwsMediaLiveSxInput
  NetworkId: String
  State: String
}

type AwsMediaLiveS1jCaptionDescriptions {
  CaptionSelectorName: String!
  DestinationSettings: AwsMediaLiveS1jCaptionDescriptionsDestinationSettings
  LanguageCode: String
  LanguageDescription: String
  Name: String!
}

type AwsMediaLiveS1jCaptionDescriptionsDestinationSettings {
  AribDestinationSettings: JSON
  BurnInDestinationSettings: AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsBurnInDestinationSettings
  DvbSubDestinationSettings: AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsDvbSubDestinationSettings
  EmbeddedDestinationSettings: JSON
  EmbeddedPlusScte20DestinationSettings: JSON
  RtmpCaptionInfoDestinationSettings: JSON
  Scte20PlusEmbeddedDestinationSettings: JSON
  Scte27DestinationSettings: JSON
  SmpteTtDestinationSettings: JSON
  TeletextDestinationSettings: JSON
  TtmlDestinationSettings: AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsTtmlDestinationSettings
  WebvttDestinationSettings: JSON
}

type AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsBurnInDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMediaLiveSx
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMediaLiveSxInput
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

type AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsDvbSubDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMediaLiveSx
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMediaLiveSxInput
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsInput {
  AribDestinationSettings: JSON
  BurnInDestinationSettings: AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsInput
  DvbSubDestinationSettings: AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsInput
  EmbeddedDestinationSettings: JSON
  EmbeddedPlusScte20DestinationSettings: JSON
  RtmpCaptionInfoDestinationSettings: JSON
  Scte20PlusEmbeddedDestinationSettings: JSON
  Scte27DestinationSettings: JSON
  SmpteTtDestinationSettings: JSON
  TeletextDestinationSettings: JSON
  TtmlDestinationSettings: AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsInput
  WebvttDestinationSettings: JSON
}

type AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsTtmlDestinationSettings {
  StyleControl: String
}

input AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsInput {
  StyleControl: String
}

input AwsMediaLiveS1jCaptionDescriptionsInput {
  CaptionSelectorName: String!
  DestinationSettings: AwsMediaLiveS1jCaptionDescriptionsDestinationSettingsInput
  LanguageCode: String
  LanguageDescription: String
  Name: String!
}

type AwsMediaLiveS1jGlobalConfiguration {
  InitialAudioGain: Int
  InputEndAction: String
  InputLossBehavior: AwsMediaLiveS1jGlobalConfigurationInputLossBehavior
  OutputLockingMode: String
  OutputTimingSource: String
  SupportLowFramerateInputs: String
}

input AwsMediaLiveS1jGlobalConfigurationInput {
  InitialAudioGain: Int
  InputEndAction: String
  InputLossBehavior: AwsMediaLiveS1jGlobalConfigurationInputLossBehaviorInput
  OutputLockingMode: String
  OutputTimingSource: String
  SupportLowFramerateInputs: String
}

type AwsMediaLiveS1jGlobalConfigurationInputLossBehavior {
  BlackFrameMsec: Int
  InputLossImageColor: String
  InputLossImageSlate: AwsMediaLiveSx
  InputLossImageType: String
  RepeatFrameMsec: Int
}

input AwsMediaLiveS1jGlobalConfigurationInputLossBehaviorInput {
  BlackFrameMsec: Int
  InputLossImageColor: String
  InputLossImageSlate: AwsMediaLiveSxInput
  InputLossImageType: String
  RepeatFrameMsec: Int
}

input AwsMediaLiveS1jInput {
  AudioDescriptions: [AwsMediaLiveS1jAudioDescriptionsInput]!
  AvailBlanking: AwsMediaLiveS1jAvailBlankingInput
  AvailConfiguration: AwsMediaLiveS1jAvailConfigurationInput
  BlackoutSlate: AwsMediaLiveS1jBlackoutSlateInput
  CaptionDescriptions: [AwsMediaLiveS1jCaptionDescriptionsInput]
  GlobalConfiguration: AwsMediaLiveS1jGlobalConfigurationInput
  OutputGroups: [AwsMediaLiveS1jOutputGroupsInput]!
  TimecodeConfig: AwsMediaLiveS1jTimecodeConfigInput!
  VideoDescriptions: [AwsMediaLiveS1jVideoDescriptionsInput]!
}

type AwsMediaLiveS1jOutputGroups {
  Name: String
  OutputGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettings!
  Outputs: [AwsMediaLiveS1jOutputGroupsOutputs]!
}

input AwsMediaLiveS1jOutputGroupsInput {
  Name: String
  OutputGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsInput!
  Outputs: [AwsMediaLiveS1jOutputGroupsOutputsInput]!
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettings {
  ArchiveGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsArchiveGroupSettings
  FrameCaptureGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsFrameCaptureGroupSettings
  HlsGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettings
  MediaPackageGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsMediaPackageGroupSettings
  MsSmoothGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsMsSmoothGroupSettings
  RtmpGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsRtmpGroupSettings
  UdpGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsUdpGroupSettings
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsArchiveGroupSettings {
  Destination: AwsMediaLiveS4r!
  RolloverInterval: Int
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsArchiveGroupSettingsInput {
  Destination: AwsMediaLiveS4rInput!
  RolloverInterval: Int
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsFrameCaptureGroupSettings {
  Destination: AwsMediaLiveS4r!
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsInput {
  Destination: AwsMediaLiveS4rInput!
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettings {
  AdMarkers: [String]
  BaseUrlContent: String
  BaseUrlManifest: String
  CaptionLanguageMappings: [AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  ConstantIv: String
  Destination: AwsMediaLiveS4r!
  DirectoryStructure: String
  EncryptionType: String
  HlsCdnSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettings
  IFrameOnlyPlaylists: String
  IndexNSegments: Int
  InputLossAction: String
  IvInManifest: String
  IvSource: String
  KeepSegments: Int
  KeyFormat: String
  KeyFormatVersions: String
  KeyProviderSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettings
  ManifestCompression: String
  ManifestDurationFormat: String
  MinSegmentLength: Int
  Mode: String
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  RedundantManifest: String
  SegmentLength: Int
  SegmentationMode: String
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
  TsFileMode: String
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings {
  CaptionChannel: Int!
  LanguageCode: String!
  LanguageDescription: String!
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput {
  CaptionChannel: Int!
  LanguageCode: String!
  LanguageDescription: String!
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettings {
  HlsAkamaiSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettings
  HlsBasicPutSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettings
  HlsMediaStoreSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettings
  HlsWebdavSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettings
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
  Salt: String
  Token: String
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
  Salt: String
  Token: String
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  NumRetries: Int
  RestartDelay: Int
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  NumRetries: Int
  RestartDelay: Int
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  MediaStoreStorageClass: String
  NumRetries: Int
  RestartDelay: Int
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  MediaStoreStorageClass: String
  NumRetries: Int
  RestartDelay: Int
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsInput {
  HlsAkamaiSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsInput
  HlsBasicPutSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsInput
  HlsMediaStoreSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsInput
  HlsWebdavSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsInput
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsInput {
  AdMarkers: [String]
  BaseUrlContent: String
  BaseUrlManifest: String
  CaptionLanguageMappings: [AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  ConstantIv: String
  Destination: AwsMediaLiveS4rInput!
  DirectoryStructure: String
  EncryptionType: String
  HlsCdnSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsInput
  IFrameOnlyPlaylists: String
  IndexNSegments: Int
  InputLossAction: String
  IvInManifest: String
  IvSource: String
  KeepSegments: Int
  KeyFormat: String
  KeyFormatVersions: String
  KeyProviderSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsInput
  ManifestCompression: String
  ManifestDurationFormat: String
  MinSegmentLength: Int
  Mode: String
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  RedundantManifest: String
  SegmentLength: Int
  SegmentationMode: String
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
  TsFileMode: String
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettings {
  StaticKeySettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettings
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsInput {
  StaticKeySettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsInput
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettings {
  KeyProviderServer: AwsMediaLiveSx
  StaticKeyValue: String!
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsInput {
  KeyProviderServer: AwsMediaLiveSxInput
  StaticKeyValue: String!
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsInput {
  ArchiveGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsArchiveGroupSettingsInput
  FrameCaptureGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsInput
  HlsGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsHlsGroupSettingsInput
  MediaPackageGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsInput
  MsSmoothGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsInput
  RtmpGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsRtmpGroupSettingsInput
  UdpGroupSettings: AwsMediaLiveS1jOutputGroupsOutputGroupSettingsUdpGroupSettingsInput
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsMediaPackageGroupSettings {
  Destination: AwsMediaLiveS4r!
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsInput {
  Destination: AwsMediaLiveS4rInput!
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsMsSmoothGroupSettings {
  AcquisitionPointId: String
  AudioOnlyTimecodeControl: String
  CertificateMode: String
  ConnectionRetryInterval: Int
  Destination: AwsMediaLiveS4r!
  EventId: String
  EventIdMode: String
  EventStopBehavior: String
  FilecacheDuration: Int
  FragmentLength: Int
  InputLossAction: String
  NumRetries: Int
  RestartDelay: Int
  SegmentationMode: String
  SendDelayMs: Int
  SparseTrackType: String
  StreamManifestBehavior: String
  TimestampOffset: String
  TimestampOffsetMode: String
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsInput {
  AcquisitionPointId: String
  AudioOnlyTimecodeControl: String
  CertificateMode: String
  ConnectionRetryInterval: Int
  Destination: AwsMediaLiveS4rInput!
  EventId: String
  EventIdMode: String
  EventStopBehavior: String
  FilecacheDuration: Int
  FragmentLength: Int
  InputLossAction: String
  NumRetries: Int
  RestartDelay: Int
  SegmentationMode: String
  SendDelayMs: Int
  SparseTrackType: String
  StreamManifestBehavior: String
  TimestampOffset: String
  TimestampOffsetMode: String
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsRtmpGroupSettings {
  AuthenticationScheme: String
  CacheFullBehavior: String
  CacheLength: Int
  CaptionData: String
  InputLossAction: String
  RestartDelay: Int
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsRtmpGroupSettingsInput {
  AuthenticationScheme: String
  CacheFullBehavior: String
  CacheLength: Int
  CaptionData: String
  InputLossAction: String
  RestartDelay: Int
}

type AwsMediaLiveS1jOutputGroupsOutputGroupSettingsUdpGroupSettings {
  InputLossAction: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
}

input AwsMediaLiveS1jOutputGroupsOutputGroupSettingsUdpGroupSettingsInput {
  InputLossAction: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
}

type AwsMediaLiveS1jOutputGroupsOutputs {
  AudioDescriptionNames: [String]
  CaptionDescriptionNames: [String]
  OutputName: String
  OutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettings!
  VideoDescriptionName: String
}

input AwsMediaLiveS1jOutputGroupsOutputsInput {
  AudioDescriptionNames: [String]
  CaptionDescriptionNames: [String]
  OutputName: String
  OutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsInput!
  VideoDescriptionName: String
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettings {
  ArchiveOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsArchiveOutputSettings
  FrameCaptureOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettings
  HlsOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettings
  MediaPackageOutputSettings: JSON
  MsSmoothOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsMsSmoothOutputSettings
  RtmpOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsRtmpOutputSettings
  UdpOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettings
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsArchiveOutputSettings {
  ContainerSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettings!
  Extension: String
  NameModifier: String
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettings {
  M2tsSettings: AwsMediaLiveS6n
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsInput {
  M2tsSettings: AwsMediaLiveS6nInput
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsArchiveOutputSettingsInput {
  ContainerSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsInput!
  Extension: String
  NameModifier: String
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettings {
  NameModifier: String
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsInput {
  NameModifier: String
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettings {
  HlsSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettings!
  NameModifier: String
  SegmentModifier: String
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettings {
  AudioOnlyHlsSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettings
  StandardHlsSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettings
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettings {
  AudioGroupId: String
  AudioOnlyImage: AwsMediaLiveSx
  AudioTrackType: String
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsInput {
  AudioGroupId: String
  AudioOnlyImage: AwsMediaLiveSxInput
  AudioTrackType: String
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsInput {
  AudioOnlyHlsSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsInput
  StandardHlsSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsInput
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettings {
  AudioRenditionSets: String
  M3u8Settings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8Settings!
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsInput {
  AudioRenditionSets: String
  M3u8Settings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsInput!
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8Settings {
  AudioFramesPerPes: Int
  AudioPids: String
  EcmPid: String
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  Scte35Behavior: String
  Scte35Pid: String
  TimedMetadataBehavior: String
  TimedMetadataPid: String
  TransportStreamId: Int
  VideoPid: String
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsInput {
  AudioFramesPerPes: Int
  AudioPids: String
  EcmPid: String
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  Scte35Behavior: String
  Scte35Pid: String
  TimedMetadataBehavior: String
  TimedMetadataPid: String
  TransportStreamId: Int
  VideoPid: String
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsInput {
  HlsSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsInput!
  NameModifier: String
  SegmentModifier: String
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsInput {
  ArchiveOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsArchiveOutputSettingsInput
  FrameCaptureOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsInput
  HlsOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsHlsOutputSettingsInput
  MediaPackageOutputSettings: JSON
  MsSmoothOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsInput
  RtmpOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsRtmpOutputSettingsInput
  UdpOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettingsInput
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsMsSmoothOutputSettings {
  NameModifier: String
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsInput {
  NameModifier: String
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsRtmpOutputSettings {
  CertificateMode: String
  ConnectionRetryInterval: Int
  Destination: AwsMediaLiveS4r!
  NumRetries: Int
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsRtmpOutputSettingsInput {
  CertificateMode: String
  ConnectionRetryInterval: Int
  Destination: AwsMediaLiveS4rInput!
  NumRetries: Int
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettings {
  BufferMsec: Int
  ContainerSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettings!
  Destination: AwsMediaLiveS4r!
  FecOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettings
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettings {
  M2tsSettings: AwsMediaLiveS6n
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsInput {
  M2tsSettings: AwsMediaLiveS6nInput
}

type AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettings {
  ColumnDepth: Int
  IncludeFec: String
  RowLength: Int
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsInput {
  ColumnDepth: Int
  IncludeFec: String
  RowLength: Int
}

input AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettingsInput {
  BufferMsec: Int
  ContainerSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsInput!
  Destination: AwsMediaLiveS4rInput!
  FecOutputSettings: AwsMediaLiveS1jOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsInput
}

type AwsMediaLiveS1jTimecodeConfig {
  Source: String!
  SyncThreshold: Int
}

input AwsMediaLiveS1jTimecodeConfigInput {
  Source: String!
  SyncThreshold: Int
}

type AwsMediaLiveS1jVideoDescriptions {
  CodecSettings: AwsMediaLiveS1jVideoDescriptionsCodecSettings
  Height: Int
  Name: String!
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  Width: Int
}

type AwsMediaLiveS1jVideoDescriptionsCodecSettings {
  FrameCaptureSettings: AwsMediaLiveS1jVideoDescriptionsCodecSettingsFrameCaptureSettings
  H264Settings: AwsMediaLiveS1jVideoDescriptionsCodecSettingsH264Settings
}

type AwsMediaLiveS1jVideoDescriptionsCodecSettingsFrameCaptureSettings {
  CaptureInterval: Int!
}

input AwsMediaLiveS1jVideoDescriptionsCodecSettingsFrameCaptureSettingsInput {
  CaptureInterval: Int!
}

type AwsMediaLiveS1jVideoDescriptionsCodecSettingsH264Settings {
  AdaptiveQuantization: String
  AfdSignaling: String
  Bitrate: Int
  BufFillPct: Int
  BufSize: Int
  ColorMetadata: String
  EntropyEncoding: String
  FixedAfd: String
  FlickerAq: String
  FramerateControl: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopNumBFrames: Int
  GopSize: JSON
  GopSizeUnits: String
  Level: String
  LookAheadRateControl: String
  MaxBitrate: Int
  MinIInterval: Int
  NumRefFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  Profile: String
  QvbrQualityLevel: Int
  RateControlMode: String
  ScanType: String
  SceneChangeDetect: String
  Slices: Int
  Softness: Int
  SpatialAq: String
  SubgopLength: String
  Syntax: String
  TemporalAq: String
  TimecodeInsertion: String
}

input AwsMediaLiveS1jVideoDescriptionsCodecSettingsH264SettingsInput {
  AdaptiveQuantization: String
  AfdSignaling: String
  Bitrate: Int
  BufFillPct: Int
  BufSize: Int
  ColorMetadata: String
  EntropyEncoding: String
  FixedAfd: String
  FlickerAq: String
  FramerateControl: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopNumBFrames: Int
  GopSize: JSON
  GopSizeUnits: String
  Level: String
  LookAheadRateControl: String
  MaxBitrate: Int
  MinIInterval: Int
  NumRefFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  Profile: String
  QvbrQualityLevel: Int
  RateControlMode: String
  ScanType: String
  SceneChangeDetect: String
  Slices: Int
  Softness: Int
  SpatialAq: String
  SubgopLength: String
  Syntax: String
  TemporalAq: String
  TimecodeInsertion: String
}

input AwsMediaLiveS1jVideoDescriptionsCodecSettingsInput {
  FrameCaptureSettings: AwsMediaLiveS1jVideoDescriptionsCodecSettingsFrameCaptureSettingsInput
  H264Settings: AwsMediaLiveS1jVideoDescriptionsCodecSettingsH264SettingsInput
}

input AwsMediaLiveS1jVideoDescriptionsInput {
  CodecSettings: AwsMediaLiveS1jVideoDescriptionsCodecSettingsInput
  Height: Int
  Name: String!
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  Width: Int
}

type AwsMediaLiveS4 {
  ActionName: String!
  ScheduleActionSettings: AwsMediaLiveS4ScheduleActionSettings!
  ScheduleActionStartSettings: AwsMediaLiveS4ScheduleActionStartSettings!
}

input AwsMediaLiveS4Input {
  ActionName: String!
  ScheduleActionSettings: AwsMediaLiveS4ScheduleActionSettingsInput!
  ScheduleActionStartSettings: AwsMediaLiveS4ScheduleActionStartSettingsInput!
}

type AwsMediaLiveS4r {
  DestinationRefId: String
}

input AwsMediaLiveS4rInput {
  DestinationRefId: String
}

type AwsMediaLiveS4ScheduleActionSettings {
  HlsTimedMetadataSettings: AwsMediaLiveS4ScheduleActionSettingsHlsTimedMetadataSettings
  InputSwitchSettings: AwsMediaLiveS4ScheduleActionSettingsInputSwitchSettings
  PauseStateSettings: AwsMediaLiveS4ScheduleActionSettingsPauseStateSettings
  Scte35ReturnToNetworkSettings: AwsMediaLiveS4ScheduleActionSettingsScte35ReturnToNetworkSettings
  Scte35SpliceInsertSettings: AwsMediaLiveS4ScheduleActionSettingsScte35SpliceInsertSettings
  Scte35TimeSignalSettings: AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettings
  StaticImageActivateSettings: AwsMediaLiveS4ScheduleActionSettingsStaticImageActivateSettings
  StaticImageDeactivateSettings: AwsMediaLiveS4ScheduleActionSettingsStaticImageDeactivateSettings
}

type AwsMediaLiveS4ScheduleActionSettingsHlsTimedMetadataSettings {
  Id3: String!
}

input AwsMediaLiveS4ScheduleActionSettingsHlsTimedMetadataSettingsInput {
  Id3: String!
}

input AwsMediaLiveS4ScheduleActionSettingsInput {
  HlsTimedMetadataSettings: AwsMediaLiveS4ScheduleActionSettingsHlsTimedMetadataSettingsInput
  InputSwitchSettings: AwsMediaLiveS4ScheduleActionSettingsInputSwitchSettingsInput
  PauseStateSettings: AwsMediaLiveS4ScheduleActionSettingsPauseStateSettingsInput
  Scte35ReturnToNetworkSettings: AwsMediaLiveS4ScheduleActionSettingsScte35ReturnToNetworkSettingsInput
  Scte35SpliceInsertSettings: AwsMediaLiveS4ScheduleActionSettingsScte35SpliceInsertSettingsInput
  Scte35TimeSignalSettings: AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsInput
  StaticImageActivateSettings: AwsMediaLiveS4ScheduleActionSettingsStaticImageActivateSettingsInput
  StaticImageDeactivateSettings: AwsMediaLiveS4ScheduleActionSettingsStaticImageDeactivateSettingsInput
}

type AwsMediaLiveS4ScheduleActionSettingsInputSwitchSettings {
  InputAttachmentNameReference: String!
}

input AwsMediaLiveS4ScheduleActionSettingsInputSwitchSettingsInput {
  InputAttachmentNameReference: String!
}

type AwsMediaLiveS4ScheduleActionSettingsPauseStateSettings {
  Pipelines: [AwsMediaLiveS4ScheduleActionSettingsPauseStateSettingsPipelines]
}

input AwsMediaLiveS4ScheduleActionSettingsPauseStateSettingsInput {
  Pipelines: [AwsMediaLiveS4ScheduleActionSettingsPauseStateSettingsPipelinesInput]
}

type AwsMediaLiveS4ScheduleActionSettingsPauseStateSettingsPipelines {
  PipelineId: String!
}

input AwsMediaLiveS4ScheduleActionSettingsPauseStateSettingsPipelinesInput {
  PipelineId: String!
}

type AwsMediaLiveS4ScheduleActionSettingsScte35ReturnToNetworkSettings {
  SpliceEventId: JSON!
}

input AwsMediaLiveS4ScheduleActionSettingsScte35ReturnToNetworkSettingsInput {
  SpliceEventId: JSON!
}

type AwsMediaLiveS4ScheduleActionSettingsScte35SpliceInsertSettings {
  Duration: JSON
  SpliceEventId: JSON!
}

input AwsMediaLiveS4ScheduleActionSettingsScte35SpliceInsertSettingsInput {
  Duration: JSON
  SpliceEventId: JSON!
}

type AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettings {
  Scte35Descriptors: [AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35Descriptors]!
}

input AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsInput {
  Scte35Descriptors: [AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsInput]!
}

type AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35Descriptors {
  Scte35DescriptorSettings: AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettings!
}

input AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsInput {
  Scte35DescriptorSettings: AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsInput!
}

type AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettings {
  SegmentationDescriptorScte35DescriptorSettings: AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings!
}

input AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsInput {
  SegmentationDescriptorScte35DescriptorSettings: AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsInput!
}

type AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettings {
  DeliveryRestrictions: AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictions
  SegmentNum: Int
  SegmentationCancelIndicator: String!
  SegmentationDuration: JSON
  SegmentationEventId: JSON!
  SegmentationTypeId: Int
  SegmentationUpid: String
  SegmentationUpidType: Int
  SegmentsExpected: Int
  SubSegmentNum: Int
  SubSegmentsExpected: Int
}

type AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictions {
  ArchiveAllowedFlag: String!
  DeviceRestrictions: String!
  NoRegionalBlackoutFlag: String!
  WebDeliveryAllowedFlag: String!
}

input AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsInput {
  ArchiveAllowedFlag: String!
  DeviceRestrictions: String!
  NoRegionalBlackoutFlag: String!
  WebDeliveryAllowedFlag: String!
}

input AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsInput {
  DeliveryRestrictions: AwsMediaLiveS4ScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsInput
  SegmentNum: Int
  SegmentationCancelIndicator: String!
  SegmentationDuration: JSON
  SegmentationEventId: JSON!
  SegmentationTypeId: Int
  SegmentationUpid: String
  SegmentationUpidType: Int
  SegmentsExpected: Int
  SubSegmentNum: Int
  SubSegmentsExpected: Int
}

type AwsMediaLiveS4ScheduleActionSettingsStaticImageActivateSettings {
  Duration: Int
  FadeIn: Int
  FadeOut: Int
  Height: Int
  Image: AwsMediaLiveSx!
  ImageX: Int
  ImageY: Int
  Layer: Int
  Opacity: Int
  Width: Int
}

input AwsMediaLiveS4ScheduleActionSettingsStaticImageActivateSettingsInput {
  Duration: Int
  FadeIn: Int
  FadeOut: Int
  Height: Int
  Image: AwsMediaLiveSxInput!
  ImageX: Int
  ImageY: Int
  Layer: Int
  Opacity: Int
  Width: Int
}

type AwsMediaLiveS4ScheduleActionSettingsStaticImageDeactivateSettings {
  FadeOut: Int
  Layer: Int
}

input AwsMediaLiveS4ScheduleActionSettingsStaticImageDeactivateSettingsInput {
  FadeOut: Int
  Layer: Int
}

type AwsMediaLiveS4ScheduleActionStartSettings {
  FixedModeScheduleActionStartSettings: AwsMediaLiveS4ScheduleActionStartSettingsFixedModeScheduleActionStartSettings
  FollowModeScheduleActionStartSettings: AwsMediaLiveS4ScheduleActionStartSettingsFollowModeScheduleActionStartSettings
}

type AwsMediaLiveS4ScheduleActionStartSettingsFixedModeScheduleActionStartSettings {
  Time: String!
}

input AwsMediaLiveS4ScheduleActionStartSettingsFixedModeScheduleActionStartSettingsInput {
  Time: String!
}

type AwsMediaLiveS4ScheduleActionStartSettingsFollowModeScheduleActionStartSettings {
  FollowPoint: String!
  ReferenceActionName: String!
}

input AwsMediaLiveS4ScheduleActionStartSettingsFollowModeScheduleActionStartSettingsInput {
  FollowPoint: String!
  ReferenceActionName: String!
}

input AwsMediaLiveS4ScheduleActionStartSettingsInput {
  FixedModeScheduleActionStartSettings: AwsMediaLiveS4ScheduleActionStartSettingsFixedModeScheduleActionStartSettingsInput
  FollowModeScheduleActionStartSettings: AwsMediaLiveS4ScheduleActionStartSettingsFollowModeScheduleActionStartSettingsInput
}

type AwsMediaLiveS6n {
  AbsentInputAudioBehavior: String
  Arib: String
  AribCaptionsPid: String
  AribCaptionsPidControl: String
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: String
  AudioStreamType: String
  Bitrate: Int
  BufferModel: String
  CcDescriptor: String
  DvbNitSettings: AwsMediaLiveS6nDvbNitSettings
  DvbSdtSettings: AwsMediaLiveS6nDvbSdtSettings
  DvbSubPids: String
  DvbTdtSettings: AwsMediaLiveS6nDvbTdtSettings
  DvbTeletextPid: String
  Ebif: String
  EbpAudioInterval: String
  EbpLookaheadMs: Int
  EbpPlacement: String
  EcmPid: String
  EsRateInPes: String
  EtvPlatformPid: String
  EtvSignalPid: String
  FragmentTime: JSON
  Klv: String
  KlvDataPids: String
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  RateMode: String
  Scte27Pids: String
  Scte35Control: String
  Scte35Pid: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TimedMetadataBehavior: String
  TimedMetadataPid: String
  TransportStreamId: Int
  VideoPid: String
}

type AwsMediaLiveS6nDvbNitSettings {
  NetworkId: Int!
  NetworkName: String!
  RepInterval: Int
}

input AwsMediaLiveS6nDvbNitSettingsInput {
  NetworkId: Int!
  NetworkName: String!
  RepInterval: Int
}

type AwsMediaLiveS6nDvbSdtSettings {
  OutputSdt: String
  RepInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

input AwsMediaLiveS6nDvbSdtSettingsInput {
  OutputSdt: String
  RepInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

type AwsMediaLiveS6nDvbTdtSettings {
  RepInterval: Int
}

input AwsMediaLiveS6nDvbTdtSettingsInput {
  RepInterval: Int
}

input AwsMediaLiveS6nInput {
  AbsentInputAudioBehavior: String
  Arib: String
  AribCaptionsPid: String
  AribCaptionsPidControl: String
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: String
  AudioStreamType: String
  Bitrate: Int
  BufferModel: String
  CcDescriptor: String
  DvbNitSettings: AwsMediaLiveS6nDvbNitSettingsInput
  DvbSdtSettings: AwsMediaLiveS6nDvbSdtSettingsInput
  DvbSubPids: String
  DvbTdtSettings: AwsMediaLiveS6nDvbTdtSettingsInput
  DvbTeletextPid: String
  Ebif: String
  EbpAudioInterval: String
  EbpLookaheadMs: Int
  EbpPlacement: String
  EcmPid: String
  EsRateInPes: String
  EtvPlatformPid: String
  EtvSignalPid: String
  FragmentTime: JSON
  Klv: String
  KlvDataPids: String
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  RateMode: String
  Scte27Pids: String
  Scte35Control: String
  Scte35Pid: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TimedMetadataBehavior: String
  TimedMetadataPid: String
  TransportStreamId: Int
  VideoPid: String
}

type AwsMediaLiveS96 {
  InputAttachmentName: String
  InputId: String
  InputSettings: AwsMediaLiveS96InputSettings
}

input AwsMediaLiveS96Input {
  InputAttachmentName: String
  InputId: String
  InputSettings: AwsMediaLiveS96InputSettingsInput
}

type AwsMediaLiveS96InputSettings {
  AudioSelectors: [AwsMediaLiveS96InputSettingsAudioSelectors]
  CaptionSelectors: [AwsMediaLiveS96InputSettingsCaptionSelectors]
  DeblockFilter: String
  DenoiseFilter: String
  FilterStrength: Int
  InputFilter: String
  NetworkInputSettings: AwsMediaLiveS96InputSettingsNetworkInputSettings
  SourceEndBehavior: String
  VideoSelector: AwsMediaLiveS96InputSettingsVideoSelector
}

type AwsMediaLiveS96InputSettingsAudioSelectors {
  Name: String!
  SelectorSettings: AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettings
}

input AwsMediaLiveS96InputSettingsAudioSelectorsInput {
  Name: String!
  SelectorSettings: AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettingsInput
}

type AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettings {
  AudioLanguageSelection: AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelection
  AudioPidSelection: AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettingsAudioPidSelection
}

type AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelection {
  LanguageCode: String!
  LanguageSelectionPolicy: String
}

input AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionInput {
  LanguageCode: String!
  LanguageSelectionPolicy: String
}

type AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettingsAudioPidSelection {
  Pid: Int!
}

input AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionInput {
  Pid: Int!
}

input AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettingsInput {
  AudioLanguageSelection: AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionInput
  AudioPidSelection: AwsMediaLiveS96InputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionInput
}

type AwsMediaLiveS96InputSettingsCaptionSelectors {
  LanguageCode: String
  Name: String!
  SelectorSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettings
}

input AwsMediaLiveS96InputSettingsCaptionSelectorsInput {
  LanguageCode: String
  Name: String!
  SelectorSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsInput
}

type AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettings {
  AribSourceSettings: JSON
  DvbSubSourceSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettings
  EmbeddedSourceSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettings
  Scte20SourceSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettings
  Scte27SourceSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettings
  TeletextSourceSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettings
}

type AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettings {
  Pid: Int
}

input AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsInput {
  Pid: Int
}

type AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettings {
  Convert608To708: String
  Scte20Detection: String
  Source608ChannelNumber: Int
  Source608TrackNumber: Int
}

input AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsInput {
  Convert608To708: String
  Scte20Detection: String
  Source608ChannelNumber: Int
  Source608TrackNumber: Int
}

input AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsInput {
  AribSourceSettings: JSON
  DvbSubSourceSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsInput
  EmbeddedSourceSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsInput
  Scte20SourceSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsInput
  Scte27SourceSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsInput
  TeletextSourceSettings: AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsInput
}

type AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettings {
  Convert608To708: String
  Source608ChannelNumber: Int
}

input AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsInput {
  Convert608To708: String
  Source608ChannelNumber: Int
}

type AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettings {
  Pid: Int
}

input AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsInput {
  Pid: Int
}

type AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettings {
  PageNumber: String
}

input AwsMediaLiveS96InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsInput {
  PageNumber: String
}

input AwsMediaLiveS96InputSettingsInput {
  AudioSelectors: [AwsMediaLiveS96InputSettingsAudioSelectorsInput]
  CaptionSelectors: [AwsMediaLiveS96InputSettingsCaptionSelectorsInput]
  DeblockFilter: String
  DenoiseFilter: String
  FilterStrength: Int
  InputFilter: String
  NetworkInputSettings: AwsMediaLiveS96InputSettingsNetworkInputSettingsInput
  SourceEndBehavior: String
  VideoSelector: AwsMediaLiveS96InputSettingsVideoSelectorInput
}

type AwsMediaLiveS96InputSettingsNetworkInputSettings {
  HlsInputSettings: AwsMediaLiveS96InputSettingsNetworkInputSettingsHlsInputSettings
  ServerValidation: String
}

type AwsMediaLiveS96InputSettingsNetworkInputSettingsHlsInputSettings {
  Bandwidth: Int
  BufferSegments: Int
  Retries: Int
  RetryInterval: Int
}

input AwsMediaLiveS96InputSettingsNetworkInputSettingsHlsInputSettingsInput {
  Bandwidth: Int
  BufferSegments: Int
  Retries: Int
  RetryInterval: Int
}

input AwsMediaLiveS96InputSettingsNetworkInputSettingsInput {
  HlsInputSettings: AwsMediaLiveS96InputSettingsNetworkInputSettingsHlsInputSettingsInput
  ServerValidation: String
}

type AwsMediaLiveS96InputSettingsVideoSelector {
  ColorSpace: String
  ColorSpaceUsage: String
  SelectorSettings: AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettings
}

input AwsMediaLiveS96InputSettingsVideoSelectorInput {
  ColorSpace: String
  ColorSpaceUsage: String
  SelectorSettings: AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettingsInput
}

type AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettings {
  VideoSelectorPid: AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettingsVideoSelectorPid
  VideoSelectorProgramId: AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramId
}

input AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettingsInput {
  VideoSelectorPid: AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettingsVideoSelectorPidInput
  VideoSelectorProgramId: AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdInput
}

type AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettingsVideoSelectorPid {
  Pid: Int
}

input AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettingsVideoSelectorPidInput {
  Pid: Int
}

type AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramId {
  ProgramId: Int
}

input AwsMediaLiveS96InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdInput {
  ProgramId: Int
}

type AwsMediaLiveSa6 {
  Codec: String
  MaximumBitrate: String
  Resolution: String
}

input AwsMediaLiveSa6Input {
  Codec: String
  MaximumBitrate: String
  Resolution: String
}

type AwsMediaLiveSad {
  Arn: String
  ChannelClass: String
  Destinations: [AwsMediaLiveS1c]
  EgressEndpoints: [AwsMediaLiveSae]
  EncoderSettings: AwsMediaLiveS1j
  Id: String
  InputAttachments: [AwsMediaLiveS96]
  InputSpecification: AwsMediaLiveSa6
  LogLevel: String
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
  Tags: JSON
}

type AwsMediaLiveSae {
  SourceIp: String
}

input AwsMediaLiveSaiInput {
  StreamName: String
}

input AwsMediaLiveSakInput {
  FlowArn: String
}

input AwsMediaLiveSamInput {
  PasswordParam: String
  Url: String
  Username: String
}

type AwsMediaLiveSar {
  Arn: String
  AttachedChannels: [String]
  Destinations: [AwsMediaLiveSas]
  Id: String
  InputClass: String
  MediaConnectFlows: [AwsMediaLiveSaw]
  Name: String
  RoleArn: String
  SecurityGroups: [String]
  Sources: [AwsMediaLiveSay]
  State: String
  Tags: JSON
  Type: String
}

type AwsMediaLiveSas {
  Ip: String
  Port: String
  Url: String
  Vpc: AwsMediaLiveSasVpc
}

type AwsMediaLiveSasVpc {
  AvailabilityZone: String
  NetworkInterfaceId: String
}

type AwsMediaLiveSaw {
  FlowArn: String
}

type AwsMediaLiveSay {
  PasswordParam: String
  Url: String
  Username: String
}

input AwsMediaLiveSb2Input {
  Cidr: String
}

type AwsMediaLiveSb5 {
  Arn: String
  Id: String
  Inputs: [String]
  State: String
  Tags: JSON
  WhitelistRules: [AwsMediaLiveSb7]
}

type AwsMediaLiveSb7 {
  Cidr: String
}

type AwsMediaLiveSbk {
  ChannelClass: String
  Codec: String
  MaximumBitrate: String
  MaximumFramerate: String
  Resolution: String
  ResourceType: String
  SpecialFeature: String
  VideoQuality: String
}

type AwsMediaLiveScq {
  Arn: String
  Count: Int
  CurrencyCode: String
  Duration: Int
  DurationUnits: String
  End: String
  FixedPrice: JSON
  Name: String
  OfferingDescription: String
  OfferingId: String
  OfferingType: String
  Region: String
  ReservationId: String
  ResourceSpecification: AwsMediaLiveSbk
  Start: String
  State: String
  Tags: JSON
  UsagePrice: JSON
}

input AwsMediaLiveStartChannelInput {
  ChannelId: String!
}

type AwsMediaLiveStartChannelOutput {
  Arn: String
  ChannelClass: String
  Destinations: [AwsMediaLiveS1c]
  EgressEndpoints: [AwsMediaLiveSae]
  EncoderSettings: AwsMediaLiveS1j
  Id: String
  InputAttachments: [AwsMediaLiveS96]
  InputSpecification: AwsMediaLiveSa6
  LogLevel: String
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
  Tags: JSON
}

input AwsMediaLiveStopChannelInput {
  ChannelId: String!
}

type AwsMediaLiveStopChannelOutput {
  Arn: String
  ChannelClass: String
  Destinations: [AwsMediaLiveS1c]
  EgressEndpoints: [AwsMediaLiveSae]
  EncoderSettings: AwsMediaLiveS1j
  Id: String
  InputAttachments: [AwsMediaLiveS96]
  InputSpecification: AwsMediaLiveSa6
  LogLevel: String
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
  Tags: JSON
}

type AwsMediaLiveSx {
  PasswordParam: String
  Uri: String!
  Username: String
}

input AwsMediaLiveSxInput {
  PasswordParam: String
  Uri: String!
  Username: String
}

input AwsMediaLiveUpdateChannelClassInput {
  ChannelClass: String!
  ChannelId: String!
  Destinations: [AwsMediaLiveS1cInput]
}

type AwsMediaLiveUpdateChannelClassOutput {
  Channel: AwsMediaLiveSad
}

input AwsMediaLiveUpdateChannelInput {
  ChannelId: String!
  Destinations: [AwsMediaLiveS1cInput]
  EncoderSettings: AwsMediaLiveS1jInput
  InputAttachments: [AwsMediaLiveS96Input]
  InputSpecification: AwsMediaLiveSa6Input
  LogLevel: String
  Name: String
  RoleArn: String
}

type AwsMediaLiveUpdateChannelOutput {
  Channel: AwsMediaLiveSad
}

input AwsMediaLiveUpdateInputInput {
  Destinations: [AwsMediaLiveSaiInput]
  InputId: String!
  InputSecurityGroups: [String]
  MediaConnectFlows: [AwsMediaLiveSakInput]
  Name: String
  RoleArn: String
  Sources: [AwsMediaLiveSamInput]
}

type AwsMediaLiveUpdateInputOutput {
  Input: AwsMediaLiveSar
}

input AwsMediaLiveUpdateInputSecurityGroupInput {
  InputSecurityGroupId: String!
  Tags: JSON
  WhitelistRules: [AwsMediaLiveSb2Input]
}

type AwsMediaLiveUpdateInputSecurityGroupOutput {
  SecurityGroup: AwsMediaLiveSb5
}

input AwsMediaLiveUpdateReservationInput {
  Name: String
  ReservationId: String!
}

type AwsMediaLiveUpdateReservationOutput {
  Reservation: AwsMediaLiveScq
}

"""AWS Elemental MediaPackage (2017-10-12)"""
type AwsMediaPackage {
  createChannel(input: AwsMediaPackageCreateChannelInput!, config: AwsConfig): AwsMediaPackageCreateChannelOutput
  createOriginEndpoint(input: AwsMediaPackageCreateOriginEndpointInput!, config: AwsConfig): AwsMediaPackageCreateOriginEndpointOutput
  deleteChannel(input: AwsMediaPackageDeleteChannelInput!, config: AwsConfig): JSON
  deleteOriginEndpoint(input: AwsMediaPackageDeleteOriginEndpointInput!, config: AwsConfig): JSON
  describeChannel(input: AwsMediaPackageDescribeChannelInput!, config: AwsConfig): AwsMediaPackageDescribeChannelOutput
  describeOriginEndpoint(input: AwsMediaPackageDescribeOriginEndpointInput!, config: AwsConfig): AwsMediaPackageDescribeOriginEndpointOutput
  listChannels(input: AwsMediaPackageListChannelsInput, config: AwsConfig): AwsMediaPackageListChannelsOutput
  listOriginEndpoints(input: AwsMediaPackageListOriginEndpointsInput, config: AwsConfig): AwsMediaPackageListOriginEndpointsOutput
  listTagsForResource(input: AwsMediaPackageListTagsForResourceInput!, config: AwsConfig): AwsMediaPackageListTagsForResourceOutput
  rotateChannelCredentials(input: AwsMediaPackageRotateChannelCredentialsInput!, config: AwsConfig): AwsMediaPackageRotateChannelCredentialsOutput
  rotateIngestEndpointCredentials(input: AwsMediaPackageRotateIngestEndpointCredentialsInput!, config: AwsConfig): AwsMediaPackageRotateIngestEndpointCredentialsOutput
  tagResource(input: AwsMediaPackageTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsMediaPackageUntagResourceInput!, config: AwsConfig): JSON
  updateChannel(input: AwsMediaPackageUpdateChannelInput!, config: AwsConfig): AwsMediaPackageUpdateChannelOutput
  updateOriginEndpoint(input: AwsMediaPackageUpdateOriginEndpointInput!, config: AwsConfig): AwsMediaPackageUpdateOriginEndpointOutput
}

input AwsMediaPackageCreateChannelInput {
  Description: String
  Id: String!
  Tags: JSON
}

type AwsMediaPackageCreateChannelOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS5
  Id: String
  Tags: JSON
}

input AwsMediaPackageCreateOriginEndpointInput {
  ChannelId: String!
  CmafPackage: AwsMediaPackageS9Input
  DashPackage: AwsMediaPackageSoInput
  Description: String
  HlsPackage: AwsMediaPackageSvInput
  Id: String!
  ManifestName: String
  MssPackage: AwsMediaPackageSyInput
  StartoverWindowSeconds: Int
  Tags: JSON
  TimeDelaySeconds: Int
  Whitelist: [String]
}

type AwsMediaPackageCreateOriginEndpointOutput {
  Arn: String
  ChannelId: String
  CmafPackage: AwsMediaPackageS11
  DashPackage: AwsMediaPackageSo
  Description: String
  HlsPackage: AwsMediaPackageSv
  Id: String
  ManifestName: String
  MssPackage: AwsMediaPackageSy
  StartoverWindowSeconds: Int
  Tags: JSON
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

input AwsMediaPackageDeleteChannelInput {
  Id: String!
}

input AwsMediaPackageDeleteOriginEndpointInput {
  Id: String!
}

input AwsMediaPackageDescribeChannelInput {
  Id: String!
}

type AwsMediaPackageDescribeChannelOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS5
  Id: String
  Tags: JSON
}

input AwsMediaPackageDescribeOriginEndpointInput {
  Id: String!
}

type AwsMediaPackageDescribeOriginEndpointOutput {
  Arn: String
  ChannelId: String
  CmafPackage: AwsMediaPackageS11
  DashPackage: AwsMediaPackageSo
  Description: String
  HlsPackage: AwsMediaPackageSv
  Id: String
  ManifestName: String
  MssPackage: AwsMediaPackageSy
  StartoverWindowSeconds: Int
  Tags: JSON
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

input AwsMediaPackageListChannelsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaPackageListChannelsOutput {
  Channels: [AwsMediaPackageListChannelsOutputChannels]
  NextToken: String
}

type AwsMediaPackageListChannelsOutputChannels {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS5
  Id: String
  Tags: JSON
}

input AwsMediaPackageListOriginEndpointsInput {
  ChannelId: String
  MaxResults: Int
  NextToken: String
}

type AwsMediaPackageListOriginEndpointsOutput {
  NextToken: String
  OriginEndpoints: [AwsMediaPackageListOriginEndpointsOutputOriginEndpoints]
}

type AwsMediaPackageListOriginEndpointsOutputOriginEndpoints {
  Arn: String
  ChannelId: String
  CmafPackage: AwsMediaPackageS11
  DashPackage: AwsMediaPackageSo
  Description: String
  HlsPackage: AwsMediaPackageSv
  Id: String
  ManifestName: String
  MssPackage: AwsMediaPackageSy
  StartoverWindowSeconds: Int
  Tags: JSON
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

input AwsMediaPackageListTagsForResourceInput {
  ResourceArn: String!
}

type AwsMediaPackageListTagsForResourceOutput {
  Tags: JSON
}

input AwsMediaPackageRotateChannelCredentialsInput {
  Id: String!
}

type AwsMediaPackageRotateChannelCredentialsOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS5
  Id: String
  Tags: JSON
}

input AwsMediaPackageRotateIngestEndpointCredentialsInput {
  Id: String!
  IngestEndpointId: String!
}

type AwsMediaPackageRotateIngestEndpointCredentialsOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS5
  Id: String
  Tags: JSON
}

type AwsMediaPackageS11 {
  Encryption: AwsMediaPackageSa
  HlsManifests: [AwsMediaPackageS11HlsManifests]
  SegmentDurationSeconds: Int
  SegmentPrefix: String
  StreamSelection: AwsMediaPackageSm
}

type AwsMediaPackageS11HlsManifests {
  AdMarkers: String
  Id: String!
  IncludeIframeOnlyStream: Boolean
  ManifestName: String
  PlaylistType: String
  PlaylistWindowSeconds: Int
  ProgramDateTimeIntervalSeconds: Int
  Url: String
}

type AwsMediaPackageS5 {
  IngestEndpoints: [AwsMediaPackageS5IngestEndpoints]
}

type AwsMediaPackageS5IngestEndpoints {
  Id: String
  Password: String
  Url: String
  Username: String
}

input AwsMediaPackageS9HlsManifestsInput {
  AdMarkers: String
  AdTriggers: [String]
  AdsOnDeliveryRestrictions: String
  Id: String!
  IncludeIframeOnlyStream: Boolean
  ManifestName: String
  PlaylistType: String
  PlaylistWindowSeconds: Int
  ProgramDateTimeIntervalSeconds: Int
}

input AwsMediaPackageS9Input {
  Encryption: AwsMediaPackageSaInput
  HlsManifests: [AwsMediaPackageS9HlsManifestsInput]
  SegmentDurationSeconds: Int
  SegmentPrefix: String
  StreamSelection: AwsMediaPackageSmInput
}

type AwsMediaPackageSa {
  KeyRotationIntervalSeconds: Int
  SpekeKeyProvider: AwsMediaPackageSc!
}

input AwsMediaPackageSaInput {
  KeyRotationIntervalSeconds: Int
  SpekeKeyProvider: AwsMediaPackageScInput!
}

type AwsMediaPackageSc {
  CertificateArn: String
  ResourceId: String!
  RoleArn: String!
  SystemIds: [String]!
  Url: String!
}

input AwsMediaPackageScInput {
  CertificateArn: String
  ResourceId: String!
  RoleArn: String!
  SystemIds: [String]!
  Url: String!
}

type AwsMediaPackageSm {
  MaxVideoBitsPerSecond: Int
  MinVideoBitsPerSecond: Int
  StreamOrder: String
}

input AwsMediaPackageSmInput {
  MaxVideoBitsPerSecond: Int
  MinVideoBitsPerSecond: Int
  StreamOrder: String
}

type AwsMediaPackageSo {
  AdTriggers: [String]
  AdsOnDeliveryRestrictions: String
  Encryption: AwsMediaPackageSoEncryption
  ManifestLayout: String
  ManifestWindowSeconds: Int
  MinBufferTimeSeconds: Int
  MinUpdatePeriodSeconds: Int
  PeriodTriggers: [String]
  Profile: String
  SegmentDurationSeconds: Int
  SegmentTemplateFormat: String
  StreamSelection: AwsMediaPackageSm
  SuggestedPresentationDelaySeconds: Int
}

type AwsMediaPackageSoEncryption {
  KeyRotationIntervalSeconds: Int
  SpekeKeyProvider: AwsMediaPackageSc!
}

input AwsMediaPackageSoEncryptionInput {
  KeyRotationIntervalSeconds: Int
  SpekeKeyProvider: AwsMediaPackageScInput!
}

input AwsMediaPackageSoInput {
  AdTriggers: [String]
  AdsOnDeliveryRestrictions: String
  Encryption: AwsMediaPackageSoEncryptionInput
  ManifestLayout: String
  ManifestWindowSeconds: Int
  MinBufferTimeSeconds: Int
  MinUpdatePeriodSeconds: Int
  PeriodTriggers: [String]
  Profile: String
  SegmentDurationSeconds: Int
  SegmentTemplateFormat: String
  StreamSelection: AwsMediaPackageSmInput
  SuggestedPresentationDelaySeconds: Int
}

type AwsMediaPackageSv {
  AdMarkers: String
  AdTriggers: [String]
  AdsOnDeliveryRestrictions: String
  Encryption: AwsMediaPackageSvEncryption
  IncludeIframeOnlyStream: Boolean
  PlaylistType: String
  PlaylistWindowSeconds: Int
  ProgramDateTimeIntervalSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediaPackageSm
  UseAudioRenditionGroup: Boolean
}

type AwsMediaPackageSvEncryption {
  ConstantInitializationVector: String
  EncryptionMethod: String
  KeyRotationIntervalSeconds: Int
  RepeatExtXKey: Boolean
  SpekeKeyProvider: AwsMediaPackageSc!
}

input AwsMediaPackageSvEncryptionInput {
  ConstantInitializationVector: String
  EncryptionMethod: String
  KeyRotationIntervalSeconds: Int
  RepeatExtXKey: Boolean
  SpekeKeyProvider: AwsMediaPackageScInput!
}

input AwsMediaPackageSvInput {
  AdMarkers: String
  AdTriggers: [String]
  AdsOnDeliveryRestrictions: String
  Encryption: AwsMediaPackageSvEncryptionInput
  IncludeIframeOnlyStream: Boolean
  PlaylistType: String
  PlaylistWindowSeconds: Int
  ProgramDateTimeIntervalSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediaPackageSmInput
  UseAudioRenditionGroup: Boolean
}

type AwsMediaPackageSy {
  Encryption: AwsMediaPackageSyEncryption
  ManifestWindowSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediaPackageSm
}

type AwsMediaPackageSyEncryption {
  SpekeKeyProvider: AwsMediaPackageSc!
}

input AwsMediaPackageSyEncryptionInput {
  SpekeKeyProvider: AwsMediaPackageScInput!
}

input AwsMediaPackageSyInput {
  Encryption: AwsMediaPackageSyEncryptionInput
  ManifestWindowSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediaPackageSmInput
}

input AwsMediaPackageTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsMediaPackageUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsMediaPackageUpdateChannelInput {
  Description: String
  Id: String!
}

type AwsMediaPackageUpdateChannelOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS5
  Id: String
  Tags: JSON
}

input AwsMediaPackageUpdateOriginEndpointInput {
  CmafPackage: AwsMediaPackageS9Input
  DashPackage: AwsMediaPackageSoInput
  Description: String
  HlsPackage: AwsMediaPackageSvInput
  Id: String!
  ManifestName: String
  MssPackage: AwsMediaPackageSyInput
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Whitelist: [String]
}

type AwsMediaPackageUpdateOriginEndpointOutput {
  Arn: String
  ChannelId: String
  CmafPackage: AwsMediaPackageS11
  DashPackage: AwsMediaPackageSo
  Description: String
  HlsPackage: AwsMediaPackageSv
  Id: String
  ManifestName: String
  MssPackage: AwsMediaPackageSy
  StartoverWindowSeconds: Int
  Tags: JSON
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

"""AWS Elemental MediaPackage VOD (2018-11-07)"""
type AwsMediaPackageVod {
  createAsset(input: AwsMediaPackageVodCreateAssetInput!, config: AwsConfig): AwsMediaPackageVodCreateAssetOutput
  createPackagingConfiguration(input: AwsMediaPackageVodCreatePackagingConfigurationInput!, config: AwsConfig): AwsMediaPackageVodCreatePackagingConfigurationOutput
  createPackagingGroup(input: AwsMediaPackageVodCreatePackagingGroupInput!, config: AwsConfig): AwsMediaPackageVodCreatePackagingGroupOutput
  deleteAsset(input: AwsMediaPackageVodDeleteAssetInput!, config: AwsConfig): JSON
  deletePackagingConfiguration(input: AwsMediaPackageVodDeletePackagingConfigurationInput!, config: AwsConfig): JSON
  deletePackagingGroup(input: AwsMediaPackageVodDeletePackagingGroupInput!, config: AwsConfig): JSON
  describeAsset(input: AwsMediaPackageVodDescribeAssetInput!, config: AwsConfig): AwsMediaPackageVodDescribeAssetOutput
  describePackagingConfiguration(input: AwsMediaPackageVodDescribePackagingConfigurationInput!, config: AwsConfig): AwsMediaPackageVodDescribePackagingConfigurationOutput
  describePackagingGroup(input: AwsMediaPackageVodDescribePackagingGroupInput!, config: AwsConfig): AwsMediaPackageVodDescribePackagingGroupOutput
  listAssets(input: AwsMediaPackageVodListAssetsInput, config: AwsConfig): AwsMediaPackageVodListAssetsOutput
  listPackagingConfigurations(input: AwsMediaPackageVodListPackagingConfigurationsInput, config: AwsConfig): AwsMediaPackageVodListPackagingConfigurationsOutput
  listPackagingGroups(input: AwsMediaPackageVodListPackagingGroupsInput, config: AwsConfig): AwsMediaPackageVodListPackagingGroupsOutput
}

input AwsMediaPackageVodCreateAssetInput {
  Id: String!
  PackagingGroupId: String!
  ResourceId: String
  SourceArn: String!
  SourceRoleArn: String!
}

type AwsMediaPackageVodCreateAssetOutput {
  Arn: String
  EgressEndpoints: [AwsMediaPackageVodS4]
  Id: String
  PackagingGroupId: String
  ResourceId: String
  SourceArn: String
  SourceRoleArn: String
}

input AwsMediaPackageVodCreatePackagingConfigurationInput {
  CmafPackage: AwsMediaPackageVodS7Input
  DashPackage: AwsMediaPackageVodSiInput
  HlsPackage: AwsMediaPackageVodSnInput
  Id: String!
  MssPackage: AwsMediaPackageVodSqInput
  PackagingGroupId: String!
}

type AwsMediaPackageVodCreatePackagingConfigurationOutput {
  Arn: String
  CmafPackage: AwsMediaPackageVodS7
  DashPackage: AwsMediaPackageVodSi
  HlsPackage: AwsMediaPackageVodSn
  Id: String
  MssPackage: AwsMediaPackageVodSq
  PackagingGroupId: String
}

input AwsMediaPackageVodCreatePackagingGroupInput {
  Id: String!
}

type AwsMediaPackageVodCreatePackagingGroupOutput {
  Arn: String
  Id: String
}

input AwsMediaPackageVodDeleteAssetInput {
  Id: String!
}

input AwsMediaPackageVodDeletePackagingConfigurationInput {
  Id: String!
}

input AwsMediaPackageVodDeletePackagingGroupInput {
  Id: String!
}

input AwsMediaPackageVodDescribeAssetInput {
  Id: String!
}

type AwsMediaPackageVodDescribeAssetOutput {
  Arn: String
  EgressEndpoints: [AwsMediaPackageVodS4]
  Id: String
  PackagingGroupId: String
  ResourceId: String
  SourceArn: String
  SourceRoleArn: String
}

input AwsMediaPackageVodDescribePackagingConfigurationInput {
  Id: String!
}

type AwsMediaPackageVodDescribePackagingConfigurationOutput {
  Arn: String
  CmafPackage: AwsMediaPackageVodS7
  DashPackage: AwsMediaPackageVodSi
  HlsPackage: AwsMediaPackageVodSn
  Id: String
  MssPackage: AwsMediaPackageVodSq
  PackagingGroupId: String
}

input AwsMediaPackageVodDescribePackagingGroupInput {
  Id: String!
}

type AwsMediaPackageVodDescribePackagingGroupOutput {
  Arn: String
  Id: String
}

input AwsMediaPackageVodListAssetsInput {
  MaxResults: Int
  NextToken: String
  PackagingGroupId: String
}

type AwsMediaPackageVodListAssetsOutput {
  Assets: [AwsMediaPackageVodListAssetsOutputAssets]
  NextToken: String
}

type AwsMediaPackageVodListAssetsOutputAssets {
  Arn: String
  Id: String
  PackagingGroupId: String
  ResourceId: String
  SourceArn: String
  SourceRoleArn: String
}

input AwsMediaPackageVodListPackagingConfigurationsInput {
  MaxResults: Int
  NextToken: String
  PackagingGroupId: String
}

type AwsMediaPackageVodListPackagingConfigurationsOutput {
  NextToken: String
  PackagingConfigurations: [AwsMediaPackageVodListPackagingConfigurationsOutputPackagingConfigurations]
}

type AwsMediaPackageVodListPackagingConfigurationsOutputPackagingConfigurations {
  Arn: String
  CmafPackage: AwsMediaPackageVodS7
  DashPackage: AwsMediaPackageVodSi
  HlsPackage: AwsMediaPackageVodSn
  Id: String
  MssPackage: AwsMediaPackageVodSq
  PackagingGroupId: String
}

input AwsMediaPackageVodListPackagingGroupsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaPackageVodListPackagingGroupsOutput {
  NextToken: String
  PackagingGroups: [AwsMediaPackageVodListPackagingGroupsOutputPackagingGroups]
}

type AwsMediaPackageVodListPackagingGroupsOutputPackagingGroups {
  Arn: String
  Id: String
}

type AwsMediaPackageVodS4 {
  PackagingConfigurationId: String
  Url: String
}

type AwsMediaPackageVodS7 {
  Encryption: AwsMediaPackageVodS7Encryption
  HlsManifests: [AwsMediaPackageVodSb]!
  SegmentDurationSeconds: Int
}

type AwsMediaPackageVodS7Encryption {
  SpekeKeyProvider: AwsMediaPackageVodS9!
}

input AwsMediaPackageVodS7EncryptionInput {
  SpekeKeyProvider: AwsMediaPackageVodS9Input!
}

input AwsMediaPackageVodS7Input {
  Encryption: AwsMediaPackageVodS7EncryptionInput
  HlsManifests: [AwsMediaPackageVodSbInput]!
  SegmentDurationSeconds: Int
}

type AwsMediaPackageVodS9 {
  RoleArn: String!
  SystemIds: [String]!
  Url: String!
}

input AwsMediaPackageVodS9Input {
  RoleArn: String!
  SystemIds: [String]!
  Url: String!
}

type AwsMediaPackageVodSb {
  AdMarkers: String
  IncludeIframeOnlyStream: Boolean
  ManifestName: String
  ProgramDateTimeIntervalSeconds: Int
  RepeatExtXKey: Boolean
  StreamSelection: AwsMediaPackageVodSg
}

input AwsMediaPackageVodSbInput {
  AdMarkers: String
  IncludeIframeOnlyStream: Boolean
  ManifestName: String
  ProgramDateTimeIntervalSeconds: Int
  RepeatExtXKey: Boolean
  StreamSelection: AwsMediaPackageVodSgInput
}

type AwsMediaPackageVodSg {
  MaxVideoBitsPerSecond: Int
  MinVideoBitsPerSecond: Int
  StreamOrder: String
}

input AwsMediaPackageVodSgInput {
  MaxVideoBitsPerSecond: Int
  MinVideoBitsPerSecond: Int
  StreamOrder: String
}

type AwsMediaPackageVodSi {
  DashManifests: [AwsMediaPackageVodSiDashManifests]!
  Encryption: AwsMediaPackageVodSiEncryption
  SegmentDurationSeconds: Int
}

type AwsMediaPackageVodSiDashManifests {
  ManifestName: String
  MinBufferTimeSeconds: Int
  Profile: String
  StreamSelection: AwsMediaPackageVodSg
}

input AwsMediaPackageVodSiDashManifestsInput {
  ManifestName: String
  MinBufferTimeSeconds: Int
  Profile: String
  StreamSelection: AwsMediaPackageVodSgInput
}

type AwsMediaPackageVodSiEncryption {
  SpekeKeyProvider: AwsMediaPackageVodS9!
}

input AwsMediaPackageVodSiEncryptionInput {
  SpekeKeyProvider: AwsMediaPackageVodS9Input!
}

input AwsMediaPackageVodSiInput {
  DashManifests: [AwsMediaPackageVodSiDashManifestsInput]!
  Encryption: AwsMediaPackageVodSiEncryptionInput
  SegmentDurationSeconds: Int
}

type AwsMediaPackageVodSn {
  Encryption: AwsMediaPackageVodSnEncryption
  HlsManifests: [AwsMediaPackageVodSb]!
  SegmentDurationSeconds: Int
  UseAudioRenditionGroup: Boolean
}

type AwsMediaPackageVodSnEncryption {
  EncryptionMethod: String
  SpekeKeyProvider: AwsMediaPackageVodS9!
}

input AwsMediaPackageVodSnEncryptionInput {
  EncryptionMethod: String
  SpekeKeyProvider: AwsMediaPackageVodS9Input!
}

input AwsMediaPackageVodSnInput {
  Encryption: AwsMediaPackageVodSnEncryptionInput
  HlsManifests: [AwsMediaPackageVodSbInput]!
  SegmentDurationSeconds: Int
  UseAudioRenditionGroup: Boolean
}

type AwsMediaPackageVodSq {
  Encryption: AwsMediaPackageVodSqEncryption
  MssManifests: [AwsMediaPackageVodSqMssManifests]!
  SegmentDurationSeconds: Int
}

type AwsMediaPackageVodSqEncryption {
  SpekeKeyProvider: AwsMediaPackageVodS9!
}

input AwsMediaPackageVodSqEncryptionInput {
  SpekeKeyProvider: AwsMediaPackageVodS9Input!
}

input AwsMediaPackageVodSqInput {
  Encryption: AwsMediaPackageVodSqEncryptionInput
  MssManifests: [AwsMediaPackageVodSqMssManifestsInput]!
  SegmentDurationSeconds: Int
}

type AwsMediaPackageVodSqMssManifests {
  ManifestName: String
  StreamSelection: AwsMediaPackageVodSg
}

input AwsMediaPackageVodSqMssManifestsInput {
  ManifestName: String
  StreamSelection: AwsMediaPackageVodSgInput
}

"""AWS Elemental MediaStore (2017-09-01)"""
type AwsMediaStore {
  createContainer(input: AwsMediaStoreCreateContainerInput!, config: AwsConfig): AwsMediaStoreCreateContainerOutput
  deleteContainer(input: AwsMediaStoreDeleteContainerInput!, config: AwsConfig): JSON
  deleteContainerPolicy(input: AwsMediaStoreDeleteContainerPolicyInput!, config: AwsConfig): JSON
  deleteCorsPolicy(input: AwsMediaStoreDeleteCorsPolicyInput!, config: AwsConfig): JSON
  deleteLifecyclePolicy(input: AwsMediaStoreDeleteLifecyclePolicyInput!, config: AwsConfig): JSON
  describeContainer(input: AwsMediaStoreDescribeContainerInput, config: AwsConfig): AwsMediaStoreDescribeContainerOutput
  getContainerPolicy(input: AwsMediaStoreGetContainerPolicyInput!, config: AwsConfig): AwsMediaStoreGetContainerPolicyOutput
  getCorsPolicy(input: AwsMediaStoreGetCorsPolicyInput!, config: AwsConfig): AwsMediaStoreGetCorsPolicyOutput
  getLifecyclePolicy(input: AwsMediaStoreGetLifecyclePolicyInput!, config: AwsConfig): AwsMediaStoreGetLifecyclePolicyOutput
  listContainers(input: AwsMediaStoreListContainersInput, config: AwsConfig): AwsMediaStoreListContainersOutput
  listTagsForResource(input: AwsMediaStoreListTagsForResourceInput!, config: AwsConfig): AwsMediaStoreListTagsForResourceOutput
  putContainerPolicy(input: AwsMediaStorePutContainerPolicyInput!, config: AwsConfig): JSON
  putCorsPolicy(input: AwsMediaStorePutCorsPolicyInput!, config: AwsConfig): JSON
  putLifecyclePolicy(input: AwsMediaStorePutLifecyclePolicyInput!, config: AwsConfig): JSON
  startAccessLogging(input: AwsMediaStoreStartAccessLoggingInput!, config: AwsConfig): JSON
  stopAccessLogging(input: AwsMediaStoreStopAccessLoggingInput!, config: AwsConfig): JSON
  tagResource(input: AwsMediaStoreTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsMediaStoreUntagResourceInput!, config: AwsConfig): JSON
}

input AwsMediaStoreCreateContainerInput {
  ContainerName: String!
  Tags: [AwsMediaStoreS3Input]
}

type AwsMediaStoreCreateContainerOutput {
  Container: AwsMediaStoreS8!
}

"""AWS Elemental MediaStore Data Plane (2017-09-01)"""
type AwsMediaStoreData {
  deleteObject(input: AwsMediaStoreDataDeleteObjectInput!, config: AwsConfig): JSON
  describeObject(input: AwsMediaStoreDataDescribeObjectInput!, config: AwsConfig): AwsMediaStoreDataDescribeObjectOutput
  getObject(input: AwsMediaStoreDataGetObjectInput!, config: AwsConfig): AwsMediaStoreDataGetObjectOutput
  listItems(input: AwsMediaStoreDataListItemsInput, config: AwsConfig): AwsMediaStoreDataListItemsOutput
  putObject(input: AwsMediaStoreDataPutObjectInput!, config: AwsConfig): AwsMediaStoreDataPutObjectOutput
}

input AwsMediaStoreDataDeleteObjectInput {
  Path: String!
}

input AwsMediaStoreDataDescribeObjectInput {
  Path: String!
}

type AwsMediaStoreDataDescribeObjectOutput {
  ETag: String
  ContentType: String
  ContentLength: JSON
  CacheControl: String
  LastModified: Date
}

input AwsMediaStoreDataGetObjectInput {
  Path: String!
  Range: String
}

type AwsMediaStoreDataGetObjectOutput {
  Body: JSON
  CacheControl: String
  ContentRange: String
  ContentLength: JSON
  ContentType: String
  ETag: String
  LastModified: Date
  StatusCode: Int!
}

input AwsMediaStoreDataListItemsInput {
  Path: String
  MaxResults: Int
  NextToken: String
}

type AwsMediaStoreDataListItemsOutput {
  Items: [AwsMediaStoreDataListItemsOutputItems]
  NextToken: String
}

type AwsMediaStoreDataListItemsOutputItems {
  Name: String
  Type: String
  ETag: String
  LastModified: Date
  ContentType: String
  ContentLength: JSON
}

input AwsMediaStoreDataPutObjectInput {
  Body: JSON!
  Path: String!
  ContentType: String
  CacheControl: String
  StorageClass: String
  UploadAvailability: String
}

type AwsMediaStoreDataPutObjectOutput {
  ContentSHA256: String
  ETag: String
  StorageClass: String
}

input AwsMediaStoreDeleteContainerInput {
  ContainerName: String!
}

input AwsMediaStoreDeleteContainerPolicyInput {
  ContainerName: String!
}

input AwsMediaStoreDeleteCorsPolicyInput {
  ContainerName: String!
}

input AwsMediaStoreDeleteLifecyclePolicyInput {
  ContainerName: String!
}

input AwsMediaStoreDescribeContainerInput {
  ContainerName: String
}

type AwsMediaStoreDescribeContainerOutput {
  Container: AwsMediaStoreS8
}

input AwsMediaStoreGetContainerPolicyInput {
  ContainerName: String!
}

type AwsMediaStoreGetContainerPolicyOutput {
  Policy: String!
}

input AwsMediaStoreGetCorsPolicyInput {
  ContainerName: String!
}

type AwsMediaStoreGetCorsPolicyOutput {
  CorsPolicy: [AwsMediaStoreSt]!
}

input AwsMediaStoreGetLifecyclePolicyInput {
  ContainerName: String!
}

type AwsMediaStoreGetLifecyclePolicyOutput {
  LifecyclePolicy: String!
}

input AwsMediaStoreListContainersInput {
  NextToken: String
  MaxResults: Int
}

type AwsMediaStoreListContainersOutput {
  Containers: [AwsMediaStoreS8]!
  NextToken: String
}

input AwsMediaStoreListTagsForResourceInput {
  Resource: String!
}

type AwsMediaStoreListTagsForResourceOutput {
  Tags: [AwsMediaStoreS3]
}

input AwsMediaStorePutContainerPolicyInput {
  ContainerName: String!
  Policy: String!
}

input AwsMediaStorePutCorsPolicyInput {
  ContainerName: String!
  CorsPolicy: [AwsMediaStoreStInput]!
}

input AwsMediaStorePutLifecyclePolicyInput {
  ContainerName: String!
  LifecyclePolicy: String!
}

type AwsMediaStoreS3 {
  Key: String
  Value: String
}

input AwsMediaStoreS3Input {
  Key: String
  Value: String
}

type AwsMediaStoreS8 {
  Endpoint: String
  CreationTime: Date
  ARN: String
  Name: String
  Status: String
  AccessLoggingEnabled: Boolean
}

type AwsMediaStoreSt {
  AllowedOrigins: [String]!
  AllowedMethods: [String]
  AllowedHeaders: [String]!
  MaxAgeSeconds: Int
  ExposeHeaders: [String]
}

input AwsMediaStoreStartAccessLoggingInput {
  ContainerName: String!
}

input AwsMediaStoreStInput {
  AllowedOrigins: [String]!
  AllowedMethods: [String]
  AllowedHeaders: [String]!
  MaxAgeSeconds: Int
  ExposeHeaders: [String]
}

input AwsMediaStoreStopAccessLoggingInput {
  ContainerName: String!
}

input AwsMediaStoreTagResourceInput {
  Resource: String!
  Tags: [AwsMediaStoreS3Input]!
}

input AwsMediaStoreUntagResourceInput {
  Resource: String!
  TagKeys: [String]!
}

"""AWS MediaTailor (2018-04-23)"""
type AwsMediaTailor {
  deletePlaybackConfiguration(input: AwsMediaTailorDeletePlaybackConfigurationInput!, config: AwsConfig): JSON
  getPlaybackConfiguration(input: AwsMediaTailorGetPlaybackConfigurationInput!, config: AwsConfig): AwsMediaTailorGetPlaybackConfigurationOutput
  listPlaybackConfigurations(input: AwsMediaTailorListPlaybackConfigurationsInput, config: AwsConfig): AwsMediaTailorListPlaybackConfigurationsOutput
  listTagsForResource(input: AwsMediaTailorListTagsForResourceInput!, config: AwsConfig): AwsMediaTailorListTagsForResourceOutput
  putPlaybackConfiguration(input: AwsMediaTailorPutPlaybackConfigurationInput, config: AwsConfig): AwsMediaTailorPutPlaybackConfigurationOutput
  tagResource(input: AwsMediaTailorTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsMediaTailorUntagResourceInput!, config: AwsConfig): JSON
}

input AwsMediaTailorDeletePlaybackConfigurationInput {
  Name: String!
}

input AwsMediaTailorGetPlaybackConfigurationInput {
  Name: String!
}

type AwsMediaTailorGetPlaybackConfigurationOutput {
  AdDecisionServerUrl: String
  CdnConfiguration: AwsMediaTailorS6
  DashConfiguration: AwsMediaTailorS7
  HlsConfiguration: AwsMediaTailorS9
  Name: String
  PlaybackConfigurationArn: String
  PlaybackEndpointPrefix: String
  SessionInitializationEndpointPrefix: String
  SlateAdUrl: String
  Tags: JSON
  TranscodeProfileName: String
  VideoContentSourceUrl: String
}

input AwsMediaTailorListPlaybackConfigurationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaTailorListPlaybackConfigurationsOutput {
  Items: [AwsMediaTailorListPlaybackConfigurationsOutputItems]
  NextToken: String
}

type AwsMediaTailorListPlaybackConfigurationsOutputItems {
  AdDecisionServerUrl: String
  CdnConfiguration: AwsMediaTailorS6
  DashConfiguration: AwsMediaTailorS7
  HlsConfiguration: AwsMediaTailorS9
  Name: String
  PlaybackConfigurationArn: String
  PlaybackEndpointPrefix: String
  SessionInitializationEndpointPrefix: String
  SlateAdUrl: String
  Tags: JSON
  TranscodeProfileName: String
  VideoContentSourceUrl: String
}

input AwsMediaTailorListTagsForResourceInput {
  ResourceArn: String!
}

type AwsMediaTailorListTagsForResourceOutput {
  Tags: JSON
}

input AwsMediaTailorPutPlaybackConfigurationDashConfigurationInput {
  MpdLocation: String
  OriginManifestType: String
}

input AwsMediaTailorPutPlaybackConfigurationInput {
  AdDecisionServerUrl: String
  CdnConfiguration: AwsMediaTailorS6Input
  DashConfiguration: AwsMediaTailorPutPlaybackConfigurationDashConfigurationInput
  Name: String
  SlateAdUrl: String
  Tags: JSON
  TranscodeProfileName: String
  VideoContentSourceUrl: String
}

type AwsMediaTailorPutPlaybackConfigurationOutput {
  AdDecisionServerUrl: String
  CdnConfiguration: AwsMediaTailorS6
  DashConfiguration: AwsMediaTailorS7
  HlsConfiguration: AwsMediaTailorS9
  Name: String
  PlaybackConfigurationArn: String
  PlaybackEndpointPrefix: String
  SessionInitializationEndpointPrefix: String
  SlateAdUrl: String
  Tags: JSON
  TranscodeProfileName: String
  VideoContentSourceUrl: String
}

type AwsMediaTailorS6 {
  AdSegmentUrlPrefix: String
  ContentSegmentUrlPrefix: String
}

input AwsMediaTailorS6Input {
  AdSegmentUrlPrefix: String
  ContentSegmentUrlPrefix: String
}

type AwsMediaTailorS7 {
  ManifestEndpointPrefix: String
  MpdLocation: String
  OriginManifestType: String
}

type AwsMediaTailorS9 {
  ManifestEndpointPrefix: String
}

input AwsMediaTailorTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsMediaTailorUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

"""AWS Migration Hub (2017-05-31)"""
type AwsMigrationHub {
  associateCreatedArtifact(input: AwsMigrationHubAssociateCreatedArtifactInput!, config: AwsConfig): JSON
  associateDiscoveredResource(input: AwsMigrationHubAssociateDiscoveredResourceInput!, config: AwsConfig): JSON
  createProgressUpdateStream(input: AwsMigrationHubCreateProgressUpdateStreamInput!, config: AwsConfig): JSON
  deleteProgressUpdateStream(input: AwsMigrationHubDeleteProgressUpdateStreamInput!, config: AwsConfig): JSON
  describeApplicationState(input: AwsMigrationHubDescribeApplicationStateInput!, config: AwsConfig): AwsMigrationHubDescribeApplicationStateOutput
  describeMigrationTask(input: AwsMigrationHubDescribeMigrationTaskInput!, config: AwsConfig): AwsMigrationHubDescribeMigrationTaskOutput
  disassociateCreatedArtifact(input: AwsMigrationHubDisassociateCreatedArtifactInput!, config: AwsConfig): JSON
  disassociateDiscoveredResource(input: AwsMigrationHubDisassociateDiscoveredResourceInput!, config: AwsConfig): JSON
  importMigrationTask(input: AwsMigrationHubImportMigrationTaskInput!, config: AwsConfig): JSON
  listCreatedArtifacts(input: AwsMigrationHubListCreatedArtifactsInput!, config: AwsConfig): AwsMigrationHubListCreatedArtifactsOutput
  listDiscoveredResources(input: AwsMigrationHubListDiscoveredResourcesInput!, config: AwsConfig): AwsMigrationHubListDiscoveredResourcesOutput
  listMigrationTasks(input: AwsMigrationHubListMigrationTasksInput, config: AwsConfig): AwsMigrationHubListMigrationTasksOutput
  listProgressUpdateStreams(input: AwsMigrationHubListProgressUpdateStreamsInput, config: AwsConfig): AwsMigrationHubListProgressUpdateStreamsOutput
  notifyApplicationState(input: AwsMigrationHubNotifyApplicationStateInput!, config: AwsConfig): JSON
  notifyMigrationTaskState(input: AwsMigrationHubNotifyMigrationTaskStateInput!, config: AwsConfig): JSON
  putResourceAttributes(input: AwsMigrationHubPutResourceAttributesInput!, config: AwsConfig): JSON
}

input AwsMigrationHubAssociateCreatedArtifactInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  CreatedArtifact: AwsMigrationHubS4Input!
  DryRun: Boolean
}

input AwsMigrationHubAssociateDiscoveredResourceInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  DiscoveredResource: AwsMigrationHubSaInput!
  DryRun: Boolean
}

input AwsMigrationHubCreateProgressUpdateStreamInput {
  ProgressUpdateStreamName: String!
  DryRun: Boolean
}

input AwsMigrationHubDeleteProgressUpdateStreamInput {
  ProgressUpdateStreamName: String!
  DryRun: Boolean
}

input AwsMigrationHubDescribeApplicationStateInput {
  ApplicationId: String!
}

type AwsMigrationHubDescribeApplicationStateOutput {
  ApplicationStatus: String
  LastUpdatedTime: Date
}

input AwsMigrationHubDescribeMigrationTaskInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
}

type AwsMigrationHubDescribeMigrationTaskOutput {
  MigrationTask: AwsMigrationHubDescribeMigrationTaskOutputMigrationTask
}

type AwsMigrationHubDescribeMigrationTaskOutputMigrationTask {
  ProgressUpdateStream: String
  MigrationTaskName: String
  Task: AwsMigrationHubSq
  UpdateDateTime: Date
  ResourceAttributeList: [AwsMigrationHubSv]
}

input AwsMigrationHubDisassociateCreatedArtifactInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  CreatedArtifactName: String!
  DryRun: Boolean
}

input AwsMigrationHubDisassociateDiscoveredResourceInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  ConfigurationId: String!
  DryRun: Boolean
}

input AwsMigrationHubImportMigrationTaskInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  DryRun: Boolean
}

input AwsMigrationHubListCreatedArtifactsInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  NextToken: String
  MaxResults: Int
}

type AwsMigrationHubListCreatedArtifactsOutput {
  NextToken: String
  CreatedArtifactList: [AwsMigrationHubS4]
}

input AwsMigrationHubListDiscoveredResourcesInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  NextToken: String
  MaxResults: Int
}

type AwsMigrationHubListDiscoveredResourcesOutput {
  NextToken: String
  DiscoveredResourceList: [AwsMigrationHubSa]
}

input AwsMigrationHubListMigrationTasksInput {
  NextToken: String
  MaxResults: Int
  ResourceName: String
}

type AwsMigrationHubListMigrationTasksOutput {
  NextToken: String
  MigrationTaskSummaryList: [AwsMigrationHubListMigrationTasksOutputMigrationTaskSummaryList]
}

type AwsMigrationHubListMigrationTasksOutputMigrationTaskSummaryList {
  ProgressUpdateStream: String
  MigrationTaskName: String
  Status: String
  ProgressPercent: Int
  StatusDetail: String
  UpdateDateTime: Date
}

input AwsMigrationHubListProgressUpdateStreamsInput {
  NextToken: String
  MaxResults: Int
}

type AwsMigrationHubListProgressUpdateStreamsOutput {
  ProgressUpdateStreamSummaryList: [AwsMigrationHubListProgressUpdateStreamsOutputProgressUpdateStreamSummaryList]
  NextToken: String
}

type AwsMigrationHubListProgressUpdateStreamsOutputProgressUpdateStreamSummaryList {
  ProgressUpdateStreamName: String
}

input AwsMigrationHubNotifyApplicationStateInput {
  ApplicationId: String!
  Status: String!
  DryRun: Boolean
}

input AwsMigrationHubNotifyMigrationTaskStateInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  Task: AwsMigrationHubSqInput!
  UpdateDateTime: Date!
  NextUpdateSeconds: Int!
  DryRun: Boolean
}

input AwsMigrationHubPutResourceAttributesInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  ResourceAttributeList: [AwsMigrationHubSvInput]!
  DryRun: Boolean
}

type AwsMigrationHubS4 {
  Name: String!
  Description: String
}

input AwsMigrationHubS4Input {
  Name: String!
  Description: String
}

type AwsMigrationHubSa {
  ConfigurationId: String!
  Description: String
}

input AwsMigrationHubSaInput {
  ConfigurationId: String!
  Description: String
}

type AwsMigrationHubSq {
  Status: String!
  StatusDetail: String
  ProgressPercent: Int
}

input AwsMigrationHubSqInput {
  Status: String!
  StatusDetail: String
  ProgressPercent: Int
}

type AwsMigrationHubSv {
  Type: String!
  Value: String!
}

input AwsMigrationHubSvInput {
  Type: String!
  Value: String!
}

"""AWS Mobile (2017-07-01)"""
type AwsMobile {
  createProject(input: AwsMobileCreateProjectInput, config: AwsConfig): AwsMobileCreateProjectOutput
  deleteProject(input: AwsMobileDeleteProjectInput!, config: AwsConfig): AwsMobileDeleteProjectOutput
  describeBundle(input: AwsMobileDescribeBundleInput!, config: AwsConfig): AwsMobileDescribeBundleOutput
  describeProject(input: AwsMobileDescribeProjectInput!, config: AwsConfig): AwsMobileDescribeProjectOutput
  exportBundle(input: AwsMobileExportBundleInput!, config: AwsConfig): AwsMobileExportBundleOutput
  exportProject(input: AwsMobileExportProjectInput!, config: AwsConfig): AwsMobileExportProjectOutput
  listBundles(input: AwsMobileListBundlesInput, config: AwsConfig): AwsMobileListBundlesOutput
  listProjects(input: AwsMobileListProjectsInput, config: AwsConfig): AwsMobileListProjectsOutput
  updateProject(input: AwsMobileUpdateProjectInput!, config: AwsConfig): AwsMobileUpdateProjectOutput
}

"""Amazon Mobile Analytics (2014-06-05)"""
type AwsMobileAnalytics {
  putEvents(input: AwsMobileAnalyticsPutEventsInput!, config: AwsConfig): JSON
}

input AwsMobileAnalyticsPutEventsEventsInput {
  eventType: String!
  timestamp: String!
  session: AwsMobileAnalyticsPutEventsEventsSessionInput
  version: String
  attributes: JSON
  metrics: JSON
}

input AwsMobileAnalyticsPutEventsEventsSessionInput {
  id: String
  duration: JSON
  startTimestamp: String
  stopTimestamp: String
}

input AwsMobileAnalyticsPutEventsInput {
  events: [AwsMobileAnalyticsPutEventsEventsInput]!
  clientContext: String!
  clientContextEncoding: String
}

input AwsMobileCreateProjectInput {
  name: String
  region: String
  contents: JSON
  snapshotId: String
}

type AwsMobileCreateProjectOutput {
  details: AwsMobileS7
}

input AwsMobileDeleteProjectInput {
  projectId: String!
}

type AwsMobileDeleteProjectOutput {
  deletedResources: [AwsMobileSc]
  orphanedResources: [AwsMobileSc]
}

input AwsMobileDescribeBundleInput {
  bundleId: String!
}

type AwsMobileDescribeBundleOutput {
  details: AwsMobileSq
}

input AwsMobileDescribeProjectInput {
  projectId: String!
  syncFromResources: Boolean
}

type AwsMobileDescribeProjectOutput {
  details: AwsMobileS7
}

input AwsMobileExportBundleInput {
  bundleId: String!
  projectId: String
  platform: String
}

type AwsMobileExportBundleOutput {
  downloadUrl: String
}

input AwsMobileExportProjectInput {
  projectId: String!
}

type AwsMobileExportProjectOutput {
  downloadUrl: String
  shareUrl: String
  snapshotId: String
}

input AwsMobileListBundlesInput {
  maxResults: Int
  nextToken: String
}

type AwsMobileListBundlesOutput {
  bundleList: [AwsMobileSq]
  nextToken: String
}

input AwsMobileListProjectsInput {
  maxResults: Int
  nextToken: String
}

type AwsMobileListProjectsOutput {
  projects: [AwsMobileListProjectsOutputProjects]
  nextToken: String
}

type AwsMobileListProjectsOutputProjects {
  name: String
  projectId: String
}

type AwsMobileS7 {
  name: String
  projectId: String
  region: String
  state: String
  createdDate: Date
  lastUpdatedDate: Date
  consoleUrl: String
  resources: [AwsMobileSc]
}

type AwsMobileSc {
  type: String
  name: String
  arn: String
  feature: String
  attributes: JSON
}

type AwsMobileSq {
  bundleId: String
  title: String
  version: String
  description: String
  iconUrl: String
  availablePlatforms: [String]
}

input AwsMobileUpdateProjectInput {
  contents: JSON
  projectId: String!
}

type AwsMobileUpdateProjectOutput {
  details: AwsMobileS7
}

"""AmazonMQ (2017-11-27)"""
type AwsMQ {
  createBroker(input: AwsMQCreateBrokerInput, config: AwsConfig): AwsMQCreateBrokerOutput
  createConfiguration(input: AwsMQCreateConfigurationInput, config: AwsConfig): AwsMQCreateConfigurationOutput
  createTags(input: AwsMQCreateTagsInput!, config: AwsConfig): JSON
  createUser(input: AwsMQCreateUserInput!, config: AwsConfig): JSON
  deleteBroker(input: AwsMQDeleteBrokerInput!, config: AwsConfig): AwsMQDeleteBrokerOutput
  deleteTags(input: AwsMQDeleteTagsInput!, config: AwsConfig): JSON
  deleteUser(input: AwsMQDeleteUserInput!, config: AwsConfig): JSON
  describeBroker(input: AwsMQDescribeBrokerInput!, config: AwsConfig): AwsMQDescribeBrokerOutput
  describeBrokerEngineTypes(input: AwsMQDescribeBrokerEngineTypesInput, config: AwsConfig): AwsMQDescribeBrokerEngineTypesOutput
  describeBrokerInstanceOptions(input: AwsMQDescribeBrokerInstanceOptionsInput, config: AwsConfig): AwsMQDescribeBrokerInstanceOptionsOutput
  describeConfiguration(input: AwsMQDescribeConfigurationInput!, config: AwsConfig): AwsMQDescribeConfigurationOutput
  describeConfigurationRevision(input: AwsMQDescribeConfigurationRevisionInput!, config: AwsConfig): AwsMQDescribeConfigurationRevisionOutput
  describeUser(input: AwsMQDescribeUserInput!, config: AwsConfig): AwsMQDescribeUserOutput
  listBrokers(input: AwsMQListBrokersInput, config: AwsConfig): AwsMQListBrokersOutput
  listConfigurationRevisions(input: AwsMQListConfigurationRevisionsInput!, config: AwsConfig): AwsMQListConfigurationRevisionsOutput
  listConfigurations(input: AwsMQListConfigurationsInput, config: AwsConfig): AwsMQListConfigurationsOutput
  listTags(input: AwsMQListTagsInput!, config: AwsConfig): AwsMQListTagsOutput
  listUsers(input: AwsMQListUsersInput!, config: AwsConfig): AwsMQListUsersOutput
  rebootBroker(input: AwsMQRebootBrokerInput!, config: AwsConfig): JSON
  updateBroker(input: AwsMQUpdateBrokerInput!, config: AwsConfig): AwsMQUpdateBrokerOutput
  updateConfiguration(input: AwsMQUpdateConfigurationInput!, config: AwsConfig): AwsMQUpdateConfigurationOutput
  updateUser(input: AwsMQUpdateUserInput!, config: AwsConfig): JSON
}

input AwsMQCreateBrokerInput {
  AutoMinorVersionUpgrade: Boolean
  BrokerName: String
  Configuration: AwsMQS4Input
  CreatorRequestId: String
  DeploymentMode: String
  EngineType: String
  EngineVersion: String
  HostInstanceType: String
  Logs: AwsMQS8Input
  MaintenanceWindowStartTime: AwsMQS9Input
  PubliclyAccessible: Boolean
  SecurityGroups: [String]
  SubnetIds: [String]
  Tags: JSON
  Users: [AwsMQCreateBrokerUsersInput]
}

type AwsMQCreateBrokerOutput {
  BrokerArn: String
  BrokerId: String
}

input AwsMQCreateBrokerUsersInput {
  ConsoleAccess: Boolean
  Groups: [String]
  Password: String
  Username: String
}

input AwsMQCreateConfigurationInput {
  EngineType: String
  EngineVersion: String
  Name: String
  Tags: JSON
}

type AwsMQCreateConfigurationOutput {
  Arn: String
  Created: Date
  Id: String
  LatestRevision: AwsMQSj
  Name: String
}

input AwsMQCreateTagsInput {
  ResourceArn: String!
  Tags: JSON
}

input AwsMQCreateUserInput {
  BrokerId: String!
  ConsoleAccess: Boolean
  Groups: [String]
  Password: String
  Username: String!
}

input AwsMQDeleteBrokerInput {
  BrokerId: String!
}

type AwsMQDeleteBrokerOutput {
  BrokerId: String
}

input AwsMQDeleteTagsInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsMQDeleteUserInput {
  BrokerId: String!
  Username: String!
}

input AwsMQDescribeBrokerEngineTypesInput {
  EngineType: String
  MaxResults: Int
  NextToken: String
}

type AwsMQDescribeBrokerEngineTypesOutput {
  BrokerEngineTypes: [AwsMQDescribeBrokerEngineTypesOutputBrokerEngineTypes]
  MaxResults: Int
  NextToken: String
}

type AwsMQDescribeBrokerEngineTypesOutputBrokerEngineTypes {
  EngineType: String
  EngineVersions: [AwsMQDescribeBrokerEngineTypesOutputBrokerEngineTypesEngineVersions]
}

type AwsMQDescribeBrokerEngineTypesOutputBrokerEngineTypesEngineVersions {
  Name: String
}

input AwsMQDescribeBrokerInput {
  BrokerId: String!
}

input AwsMQDescribeBrokerInstanceOptionsInput {
  EngineType: String
  HostInstanceType: String
  MaxResults: Int
  NextToken: String
}

type AwsMQDescribeBrokerInstanceOptionsOutput {
  BrokerInstanceOptions: [AwsMQDescribeBrokerInstanceOptionsOutputBrokerInstanceOptions]
  MaxResults: Int
  NextToken: String
}

type AwsMQDescribeBrokerInstanceOptionsOutputBrokerInstanceOptions {
  AvailabilityZones: [AwsMQDescribeBrokerInstanceOptionsOutputBrokerInstanceOptionsAvailabilityZones]
  EngineType: String
  HostInstanceType: String
  SupportedEngineVersions: [String]
}

type AwsMQDescribeBrokerInstanceOptionsOutputBrokerInstanceOptionsAvailabilityZones {
  Name: String
}

type AwsMQDescribeBrokerOutput {
  AutoMinorVersionUpgrade: Boolean
  BrokerArn: String
  BrokerId: String
  BrokerInstances: [AwsMQDescribeBrokerOutputBrokerInstances]
  BrokerName: String
  BrokerState: String
  Configurations: AwsMQDescribeBrokerOutputConfigurations
  Created: Date
  DeploymentMode: String
  EngineType: String
  EngineVersion: String
  HostInstanceType: String
  Logs: AwsMQDescribeBrokerOutputLogs
  MaintenanceWindowStartTime: AwsMQS9
  PendingEngineVersion: String
  PubliclyAccessible: Boolean
  SecurityGroups: [String]
  SubnetIds: [String]
  Tags: JSON
  Users: [AwsMQS11]
}

type AwsMQDescribeBrokerOutputBrokerInstances {
  ConsoleURL: String
  Endpoints: [String]
  IpAddress: String
}

type AwsMQDescribeBrokerOutputConfigurations {
  Current: AwsMQS4
  History: [AwsMQS4]
  Pending: AwsMQS4
}

type AwsMQDescribeBrokerOutputLogs {
  Audit: Boolean
  AuditLogGroup: String
  General: Boolean
  GeneralLogGroup: String
  Pending: AwsMQDescribeBrokerOutputLogsPending
}

type AwsMQDescribeBrokerOutputLogsPending {
  Audit: Boolean
  General: Boolean
}

input AwsMQDescribeConfigurationInput {
  ConfigurationId: String!
}

type AwsMQDescribeConfigurationOutput {
  Arn: String
  Created: Date
  Description: String
  EngineType: String
  EngineVersion: String
  Id: String
  LatestRevision: AwsMQSj
  Name: String
  Tags: JSON
}

input AwsMQDescribeConfigurationRevisionInput {
  ConfigurationId: String!
  ConfigurationRevision: String!
}

type AwsMQDescribeConfigurationRevisionOutput {
  ConfigurationId: String
  Created: Date
  Data: String
  Description: String
}

input AwsMQDescribeUserInput {
  BrokerId: String!
  Username: String!
}

type AwsMQDescribeUserOutput {
  BrokerId: String
  ConsoleAccess: Boolean
  Groups: [String]
  Pending: AwsMQDescribeUserOutputPending
  Username: String
}

type AwsMQDescribeUserOutputPending {
  ConsoleAccess: Boolean
  Groups: [String]
  PendingChange: String
}

input AwsMQListBrokersInput {
  MaxResults: Int
  NextToken: String
}

type AwsMQListBrokersOutput {
  BrokerSummaries: [AwsMQListBrokersOutputBrokerSummaries]
  NextToken: String
}

type AwsMQListBrokersOutputBrokerSummaries {
  BrokerArn: String
  BrokerId: String
  BrokerName: String
  BrokerState: String
  Created: Date
  DeploymentMode: String
  HostInstanceType: String
}

input AwsMQListConfigurationRevisionsInput {
  ConfigurationId: String!
  MaxResults: Int
  NextToken: String
}

type AwsMQListConfigurationRevisionsOutput {
  ConfigurationId: String
  MaxResults: Int
  NextToken: String
  Revisions: [AwsMQSj]
}

input AwsMQListConfigurationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMQListConfigurationsOutput {
  Configurations: [AwsMQListConfigurationsOutputConfigurations]
  MaxResults: Int
  NextToken: String
}

type AwsMQListConfigurationsOutputConfigurations {
  Arn: String
  Created: Date
  Description: String
  EngineType: String
  EngineVersion: String
  Id: String
  LatestRevision: AwsMQSj
  Name: String
  Tags: JSON
}

input AwsMQListTagsInput {
  ResourceArn: String!
}

type AwsMQListTagsOutput {
  Tags: JSON
}

input AwsMQListUsersInput {
  BrokerId: String!
  MaxResults: Int
  NextToken: String
}

type AwsMQListUsersOutput {
  BrokerId: String
  MaxResults: Int
  NextToken: String
  Users: [AwsMQS11]
}

input AwsMQRebootBrokerInput {
  BrokerId: String!
}

type AwsMQS11 {
  PendingChange: String
  Username: String
}

type AwsMQS4 {
  Id: String
  Revision: Int
}

input AwsMQS4Input {
  Id: String
  Revision: Int
}

type AwsMQS8 {
  Audit: Boolean
  General: Boolean
}

input AwsMQS8Input {
  Audit: Boolean
  General: Boolean
}

type AwsMQS9 {
  DayOfWeek: String
  TimeOfDay: String
  TimeZone: String
}

input AwsMQS9Input {
  DayOfWeek: String
  TimeOfDay: String
  TimeZone: String
}

type AwsMQSj {
  Created: Date
  Description: String
  Revision: Int
}

input AwsMQUpdateBrokerInput {
  AutoMinorVersionUpgrade: Boolean
  BrokerId: String!
  Configuration: AwsMQS4Input
  EngineVersion: String
  Logs: AwsMQS8Input
}

type AwsMQUpdateBrokerOutput {
  AutoMinorVersionUpgrade: Boolean
  BrokerId: String
  Configuration: AwsMQS4
  EngineVersion: String
  Logs: AwsMQS8
}

input AwsMQUpdateConfigurationInput {
  ConfigurationId: String!
  Data: String
  Description: String
}

type AwsMQUpdateConfigurationOutput {
  Arn: String
  Created: Date
  Id: String
  LatestRevision: AwsMQSj
  Name: String
  Warnings: [AwsMQUpdateConfigurationOutputWarnings]
}

type AwsMQUpdateConfigurationOutputWarnings {
  AttributeName: String
  ElementName: String
  Reason: String
}

input AwsMQUpdateUserInput {
  BrokerId: String!
  ConsoleAccess: Boolean
  Groups: [String]
  Password: String
  Username: String!
}

"""Amazon Mechanical Turk (2017-01-17)"""
type AwsMTurk {
  acceptQualificationRequest(input: AwsMTurkAcceptQualificationRequestInput!, config: AwsConfig): JSON
  approveAssignment(input: AwsMTurkApproveAssignmentInput!, config: AwsConfig): JSON
  associateQualificationWithWorker(input: AwsMTurkAssociateQualificationWithWorkerInput!, config: AwsConfig): JSON
  createAdditionalAssignmentsForHIT(input: AwsMTurkCreateAdditionalAssignmentsForHITInput!, config: AwsConfig): JSON
  createHIT(input: AwsMTurkCreateHITInput!, config: AwsConfig): AwsMTurkCreateHITOutput
  createHITType(input: AwsMTurkCreateHITTypeInput!, config: AwsConfig): AwsMTurkCreateHITTypeOutput
  createHITWithHITType(input: AwsMTurkCreateHITWithHITTypeInput!, config: AwsConfig): AwsMTurkCreateHITWithHITTypeOutput
  createQualificationType(input: AwsMTurkCreateQualificationTypeInput!, config: AwsConfig): AwsMTurkCreateQualificationTypeOutput
  createWorkerBlock(input: AwsMTurkCreateWorkerBlockInput!, config: AwsConfig): JSON
  deleteHIT(input: AwsMTurkDeleteHITInput!, config: AwsConfig): JSON
  deleteQualificationType(input: AwsMTurkDeleteQualificationTypeInput!, config: AwsConfig): JSON
  deleteWorkerBlock(input: AwsMTurkDeleteWorkerBlockInput!, config: AwsConfig): JSON
  disassociateQualificationFromWorker(input: AwsMTurkDisassociateQualificationFromWorkerInput!, config: AwsConfig): JSON
  getAccountBalance(input: JSON, config: AwsConfig): AwsMTurkGetAccountBalanceOutput
  getAssignment(input: AwsMTurkGetAssignmentInput!, config: AwsConfig): AwsMTurkGetAssignmentOutput
  getFileUploadURL(input: AwsMTurkGetFileUploadURLInput!, config: AwsConfig): AwsMTurkGetFileUploadURLOutput
  getHIT(input: AwsMTurkGetHITInput!, config: AwsConfig): AwsMTurkGetHITOutput
  getQualificationScore(input: AwsMTurkGetQualificationScoreInput!, config: AwsConfig): AwsMTurkGetQualificationScoreOutput
  getQualificationType(input: AwsMTurkGetQualificationTypeInput!, config: AwsConfig): AwsMTurkGetQualificationTypeOutput
  listAssignmentsForHIT(input: AwsMTurkListAssignmentsForHITInput!, config: AwsConfig): AwsMTurkListAssignmentsForHITOutput
  listBonusPayments(input: AwsMTurkListBonusPaymentsInput, config: AwsConfig): AwsMTurkListBonusPaymentsOutput
  listHITs(input: AwsMTurkListHITsInput, config: AwsConfig): AwsMTurkListHITsOutput
  listHITsForQualificationType(input: AwsMTurkListHITsForQualificationTypeInput!, config: AwsConfig): AwsMTurkListHITsForQualificationTypeOutput
  listQualificationRequests(input: AwsMTurkListQualificationRequestsInput, config: AwsConfig): AwsMTurkListQualificationRequestsOutput
  listQualificationTypes(input: AwsMTurkListQualificationTypesInput!, config: AwsConfig): AwsMTurkListQualificationTypesOutput
  listReviewPolicyResultsForHIT(input: AwsMTurkListReviewPolicyResultsForHITInput!, config: AwsConfig): AwsMTurkListReviewPolicyResultsForHITOutput
  listReviewableHITs(input: AwsMTurkListReviewableHITsInput, config: AwsConfig): AwsMTurkListReviewableHITsOutput
  listWorkerBlocks(input: AwsMTurkListWorkerBlocksInput, config: AwsConfig): AwsMTurkListWorkerBlocksOutput
  listWorkersWithQualificationType(input: AwsMTurkListWorkersWithQualificationTypeInput!, config: AwsConfig): AwsMTurkListWorkersWithQualificationTypeOutput
  notifyWorkers(input: AwsMTurkNotifyWorkersInput!, config: AwsConfig): AwsMTurkNotifyWorkersOutput
  rejectAssignment(input: AwsMTurkRejectAssignmentInput!, config: AwsConfig): JSON
  rejectQualificationRequest(input: AwsMTurkRejectQualificationRequestInput!, config: AwsConfig): JSON
  sendBonus(input: AwsMTurkSendBonusInput!, config: AwsConfig): JSON
  sendTestEventNotification(input: AwsMTurkSendTestEventNotificationInput!, config: AwsConfig): JSON
  updateExpirationForHIT(input: AwsMTurkUpdateExpirationForHITInput!, config: AwsConfig): JSON
  updateHITReviewStatus(input: AwsMTurkUpdateHITReviewStatusInput!, config: AwsConfig): JSON
  updateHITTypeOfHIT(input: AwsMTurkUpdateHITTypeOfHITInput!, config: AwsConfig): JSON
  updateNotificationSettings(input: AwsMTurkUpdateNotificationSettingsInput!, config: AwsConfig): JSON
  updateQualificationType(input: AwsMTurkUpdateQualificationTypeInput!, config: AwsConfig): AwsMTurkUpdateQualificationTypeOutput
}

input AwsMTurkAcceptQualificationRequestInput {
  QualificationRequestId: String!
  IntegerValue: Int
}

input AwsMTurkApproveAssignmentInput {
  AssignmentId: String!
  RequesterFeedback: String
  OverrideRejection: Boolean
}

input AwsMTurkAssociateQualificationWithWorkerInput {
  QualificationTypeId: String!
  WorkerId: String!
  IntegerValue: Int
  SendNotification: Boolean
}

input AwsMTurkCreateAdditionalAssignmentsForHITInput {
  HITId: String!
  NumberOfAdditionalAssignments: Int!
  UniqueRequestToken: String
}

input AwsMTurkCreateHITInput {
  MaxAssignments: Int
  AutoApprovalDelayInSeconds: JSON
  LifetimeInSeconds: JSON!
  AssignmentDurationInSeconds: JSON!
  Reward: String!
  Title: String!
  Keywords: String
  Description: String!
  Question: String
  RequesterAnnotation: String
  QualificationRequirements: [AwsMTurkSiInput]
  UniqueRequestToken: String
  AssignmentReviewPolicy: AwsMTurkSqInput
  HITReviewPolicy: AwsMTurkSqInput
  HITLayoutId: String
  HITLayoutParameters: [AwsMTurkSwInput]
}

type AwsMTurkCreateHITOutput {
  HIT: AwsMTurkSz
}

input AwsMTurkCreateHITTypeInput {
  AutoApprovalDelayInSeconds: JSON
  AssignmentDurationInSeconds: JSON!
  Reward: String!
  Title: String!
  Keywords: String
  Description: String!
  QualificationRequirements: [AwsMTurkSiInput]
}

type AwsMTurkCreateHITTypeOutput {
  HITTypeId: String
}

input AwsMTurkCreateHITWithHITTypeInput {
  HITTypeId: String!
  MaxAssignments: Int
  LifetimeInSeconds: JSON!
  Question: String
  RequesterAnnotation: String
  UniqueRequestToken: String
  AssignmentReviewPolicy: AwsMTurkSqInput
  HITReviewPolicy: AwsMTurkSqInput
  HITLayoutId: String
  HITLayoutParameters: [AwsMTurkSwInput]
}

type AwsMTurkCreateHITWithHITTypeOutput {
  HIT: AwsMTurkSz
}

input AwsMTurkCreateQualificationTypeInput {
  Name: String!
  Keywords: String
  Description: String!
  QualificationTypeStatus: String!
  RetryDelayInSeconds: JSON
  Test: String
  AnswerKey: String
  TestDurationInSeconds: JSON
  AutoGranted: Boolean
  AutoGrantedValue: Int
}

type AwsMTurkCreateQualificationTypeOutput {
  QualificationType: AwsMTurkS1a
}

input AwsMTurkCreateWorkerBlockInput {
  WorkerId: String!
  Reason: String!
}

input AwsMTurkDeleteHITInput {
  HITId: String!
}

input AwsMTurkDeleteQualificationTypeInput {
  QualificationTypeId: String!
}

input AwsMTurkDeleteWorkerBlockInput {
  WorkerId: String!
  Reason: String
}

input AwsMTurkDisassociateQualificationFromWorkerInput {
  WorkerId: String!
  QualificationTypeId: String!
  Reason: String
}

type AwsMTurkGetAccountBalanceOutput {
  AvailableBalance: String
  OnHoldBalance: String
}

input AwsMTurkGetAssignmentInput {
  AssignmentId: String!
}

type AwsMTurkGetAssignmentOutput {
  Assignment: AwsMTurkS1p
  HIT: AwsMTurkSz
}

input AwsMTurkGetFileUploadURLInput {
  AssignmentId: String!
  QuestionIdentifier: String!
}

type AwsMTurkGetFileUploadURLOutput {
  FileUploadURL: String
}

input AwsMTurkGetHITInput {
  HITId: String!
}

type AwsMTurkGetHITOutput {
  HIT: AwsMTurkSz
}

input AwsMTurkGetQualificationScoreInput {
  QualificationTypeId: String!
  WorkerId: String!
}

type AwsMTurkGetQualificationScoreOutput {
  Qualification: AwsMTurkS1x
}

input AwsMTurkGetQualificationTypeInput {
  QualificationTypeId: String!
}

type AwsMTurkGetQualificationTypeOutput {
  QualificationType: AwsMTurkS1a
}

input AwsMTurkListAssignmentsForHITInput {
  HITId: String!
  NextToken: String
  MaxResults: Int
  AssignmentStatuses: [String]
}

type AwsMTurkListAssignmentsForHITOutput {
  NextToken: String
  NumResults: Int
  Assignments: [AwsMTurkS1p]
}

input AwsMTurkListBonusPaymentsInput {
  HITId: String
  AssignmentId: String
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListBonusPaymentsOutput {
  NumResults: Int
  NextToken: String
  BonusPayments: [AwsMTurkListBonusPaymentsOutputBonusPayments]
}

type AwsMTurkListBonusPaymentsOutputBonusPayments {
  WorkerId: String
  BonusAmount: String
  AssignmentId: String
  Reason: String
  GrantTime: Date
}

input AwsMTurkListHITsForQualificationTypeInput {
  QualificationTypeId: String!
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListHITsForQualificationTypeOutput {
  NextToken: String
  NumResults: Int
  HITs: [AwsMTurkSz]
}

input AwsMTurkListHITsInput {
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListHITsOutput {
  NextToken: String
  NumResults: Int
  HITs: [AwsMTurkSz]
}

input AwsMTurkListQualificationRequestsInput {
  QualificationTypeId: String
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListQualificationRequestsOutput {
  NumResults: Int
  NextToken: String
  QualificationRequests: [AwsMTurkListQualificationRequestsOutputQualificationRequests]
}

type AwsMTurkListQualificationRequestsOutputQualificationRequests {
  QualificationRequestId: String
  QualificationTypeId: String
  WorkerId: String
  Test: String
  Answer: String
  SubmitTime: Date
}

input AwsMTurkListQualificationTypesInput {
  Query: String
  MustBeRequestable: Boolean!
  MustBeOwnedByCaller: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListQualificationTypesOutput {
  NumResults: Int
  NextToken: String
  QualificationTypes: [AwsMTurkS1a]
}

input AwsMTurkListReviewableHITsInput {
  HITTypeId: String
  Status: String
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListReviewableHITsOutput {
  NextToken: String
  NumResults: Int
  HITs: [AwsMTurkSz]
}

input AwsMTurkListReviewPolicyResultsForHITInput {
  HITId: String!
  PolicyLevels: [String]
  RetrieveActions: Boolean
  RetrieveResults: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListReviewPolicyResultsForHITOutput {
  HITId: String
  AssignmentReviewPolicy: AwsMTurkSq
  HITReviewPolicy: AwsMTurkSq
  AssignmentReviewReport: AwsMTurkS2r
  HITReviewReport: AwsMTurkS2r
  NextToken: String
}

input AwsMTurkListWorkerBlocksInput {
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListWorkerBlocksOutput {
  NextToken: String
  NumResults: Int
  WorkerBlocks: [AwsMTurkListWorkerBlocksOutputWorkerBlocks]
}

type AwsMTurkListWorkerBlocksOutputWorkerBlocks {
  WorkerId: String
  Reason: String
}

input AwsMTurkListWorkersWithQualificationTypeInput {
  QualificationTypeId: String!
  Status: String
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListWorkersWithQualificationTypeOutput {
  NextToken: String
  NumResults: Int
  Qualifications: [AwsMTurkS1x]
}

input AwsMTurkNotifyWorkersInput {
  Subject: String!
  MessageText: String!
  WorkerIds: [String]!
}

type AwsMTurkNotifyWorkersOutput {
  NotifyWorkersFailureStatuses: [AwsMTurkNotifyWorkersOutputNotifyWorkersFailureStatuses]
}

type AwsMTurkNotifyWorkersOutputNotifyWorkersFailureStatuses {
  NotifyWorkersFailureCode: String
  NotifyWorkersFailureMessage: String
  WorkerId: String
}

input AwsMTurkRejectAssignmentInput {
  AssignmentId: String!
  RequesterFeedback: String!
}

input AwsMTurkRejectQualificationRequestInput {
  QualificationRequestId: String!
  Reason: String
}

type AwsMTurkS1a {
  QualificationTypeId: String
  CreationTime: Date
  Name: String
  Description: String
  Keywords: String
  QualificationTypeStatus: String
  Test: String
  TestDurationInSeconds: JSON
  AnswerKey: String
  RetryDelayInSeconds: JSON
  IsRequestable: Boolean
  AutoGranted: Boolean
  AutoGrantedValue: Int
}

type AwsMTurkS1p {
  AssignmentId: String
  WorkerId: String
  HITId: String
  AssignmentStatus: String
  AutoApprovalTime: Date
  AcceptTime: Date
  SubmitTime: Date
  ApprovalTime: Date
  RejectionTime: Date
  Deadline: Date
  Answer: String
  RequesterFeedback: String
}

type AwsMTurkS1x {
  QualificationTypeId: String
  WorkerId: String
  GrantTime: Date
  IntegerValue: Int
  LocaleValue: AwsMTurkSn
  Status: String
}

type AwsMTurkS2r {
  ReviewResults: [AwsMTurkS2rReviewResults]
  ReviewActions: [AwsMTurkS2rReviewActions]
}

type AwsMTurkS2rReviewActions {
  ActionId: String
  ActionName: String
  TargetId: String
  TargetType: String
  Status: String
  CompleteTime: Date
  Result: String
  ErrorCode: String
}

type AwsMTurkS2rReviewResults {
  ActionId: String
  SubjectId: String
  SubjectType: String
  QuestionId: String
  Key: String
  Value: String
}

input AwsMTurkS3kInput {
  Destination: String!
  Transport: String!
  Version: String!
  EventTypes: [String]!
}

input AwsMTurkSendBonusInput {
  WorkerId: String!
  BonusAmount: String!
  AssignmentId: String!
  Reason: String!
  UniqueRequestToken: String
}

input AwsMTurkSendTestEventNotificationInput {
  Notification: AwsMTurkS3kInput!
  TestEventType: String!
}

type AwsMTurkSi {
  QualificationTypeId: String!
  Comparator: String!
  IntegerValues: [Int]
  LocaleValues: [AwsMTurkSn]
  RequiredToPreview: Boolean
  ActionsGuarded: String
}

input AwsMTurkSiInput {
  QualificationTypeId: String!
  Comparator: String!
  IntegerValues: [Int]
  LocaleValues: [AwsMTurkSnInput]
  RequiredToPreview: Boolean
  ActionsGuarded: String
}

type AwsMTurkSn {
  Country: String!
  Subdivision: String
}

input AwsMTurkSnInput {
  Country: String!
  Subdivision: String
}

type AwsMTurkSq {
  PolicyName: String!
  Parameters: [AwsMTurkSqParameters]
}

input AwsMTurkSqInput {
  PolicyName: String!
  Parameters: [AwsMTurkSqParametersInput]
}

type AwsMTurkSqParameters {
  Key: String
  Values: [String]
  MapEntries: [AwsMTurkSqParametersMapEntries]
}

input AwsMTurkSqParametersInput {
  Key: String
  Values: [String]
  MapEntries: [AwsMTurkSqParametersMapEntriesInput]
}

type AwsMTurkSqParametersMapEntries {
  Key: String
  Values: [String]
}

input AwsMTurkSqParametersMapEntriesInput {
  Key: String
  Values: [String]
}

input AwsMTurkSwInput {
  Name: String!
  Value: String!
}

type AwsMTurkSz {
  HITId: String
  HITTypeId: String
  HITGroupId: String
  HITLayoutId: String
  CreationTime: Date
  Title: String
  Description: String
  Question: String
  Keywords: String
  HITStatus: String
  MaxAssignments: Int
  Reward: String
  AutoApprovalDelayInSeconds: JSON
  Expiration: Date
  AssignmentDurationInSeconds: JSON
  RequesterAnnotation: String
  QualificationRequirements: [AwsMTurkSi]
  HITReviewStatus: String
  NumberOfAssignmentsPending: Int
  NumberOfAssignmentsAvailable: Int
  NumberOfAssignmentsCompleted: Int
}

input AwsMTurkUpdateExpirationForHITInput {
  HITId: String!
  ExpireAt: Date!
}

input AwsMTurkUpdateHITReviewStatusInput {
  HITId: String!
  Revert: Boolean
}

input AwsMTurkUpdateHITTypeOfHITInput {
  HITId: String!
  HITTypeId: String!
}

input AwsMTurkUpdateNotificationSettingsInput {
  HITTypeId: String!
  Notification: AwsMTurkS3kInput
  Active: Boolean
}

input AwsMTurkUpdateQualificationTypeInput {
  QualificationTypeId: String!
  Description: String
  QualificationTypeStatus: String
  Test: String
  AnswerKey: String
  TestDurationInSeconds: JSON
  RetryDelayInSeconds: JSON
  AutoGranted: Boolean
  AutoGrantedValue: Int
}

type AwsMTurkUpdateQualificationTypeOutput {
  QualificationType: AwsMTurkS1a
}

"""Amazon Neptune (2014-10-31)"""
type AwsNeptune {
  addRoleToDBCluster(input: AwsNeptuneAddRoleToDBClusterInput!, config: AwsConfig): JSON
  addSourceIdentifierToSubscription(input: AwsNeptuneAddSourceIdentifierToSubscriptionInput!, config: AwsConfig): AwsNeptuneAddSourceIdentifierToSubscriptionOutput
  addTagsToResource(input: AwsNeptuneAddTagsToResourceInput!, config: AwsConfig): JSON
  applyPendingMaintenanceAction(input: AwsNeptuneApplyPendingMaintenanceActionInput!, config: AwsConfig): AwsNeptuneApplyPendingMaintenanceActionOutput
  copyDBClusterParameterGroup(input: AwsNeptuneCopyDBClusterParameterGroupInput!, config: AwsConfig): AwsNeptuneCopyDBClusterParameterGroupOutput
  copyDBClusterSnapshot(input: AwsNeptuneCopyDBClusterSnapshotInput!, config: AwsConfig): AwsNeptuneCopyDBClusterSnapshotOutput
  copyDBParameterGroup(input: AwsNeptuneCopyDBParameterGroupInput!, config: AwsConfig): AwsNeptuneCopyDBParameterGroupOutput
  createDBCluster(input: AwsNeptuneCreateDBClusterInput!, config: AwsConfig): AwsNeptuneCreateDBClusterOutput
  createDBClusterParameterGroup(input: AwsNeptuneCreateDBClusterParameterGroupInput!, config: AwsConfig): AwsNeptuneCreateDBClusterParameterGroupOutput
  createDBClusterSnapshot(input: AwsNeptuneCreateDBClusterSnapshotInput!, config: AwsConfig): AwsNeptuneCreateDBClusterSnapshotOutput
  createDBInstance(input: AwsNeptuneCreateDBInstanceInput!, config: AwsConfig): AwsNeptuneCreateDBInstanceOutput
  createDBParameterGroup(input: AwsNeptuneCreateDBParameterGroupInput!, config: AwsConfig): AwsNeptuneCreateDBParameterGroupOutput
  createDBSubnetGroup(input: AwsNeptuneCreateDBSubnetGroupInput!, config: AwsConfig): AwsNeptuneCreateDBSubnetGroupOutput
  createEventSubscription(input: AwsNeptuneCreateEventSubscriptionInput!, config: AwsConfig): AwsNeptuneCreateEventSubscriptionOutput
  deleteDBCluster(input: AwsNeptuneDeleteDBClusterInput!, config: AwsConfig): AwsNeptuneDeleteDBClusterOutput
  deleteDBClusterParameterGroup(input: AwsNeptuneDeleteDBClusterParameterGroupInput!, config: AwsConfig): JSON
  deleteDBClusterSnapshot(input: AwsNeptuneDeleteDBClusterSnapshotInput!, config: AwsConfig): AwsNeptuneDeleteDBClusterSnapshotOutput
  deleteDBInstance(input: AwsNeptuneDeleteDBInstanceInput!, config: AwsConfig): AwsNeptuneDeleteDBInstanceOutput
  deleteDBParameterGroup(input: AwsNeptuneDeleteDBParameterGroupInput!, config: AwsConfig): JSON
  deleteDBSubnetGroup(input: AwsNeptuneDeleteDBSubnetGroupInput!, config: AwsConfig): JSON
  deleteEventSubscription(input: AwsNeptuneDeleteEventSubscriptionInput!, config: AwsConfig): AwsNeptuneDeleteEventSubscriptionOutput
  describeDBClusterParameterGroups(input: AwsNeptuneDescribeDBClusterParameterGroupsInput, config: AwsConfig): AwsNeptuneDescribeDBClusterParameterGroupsOutput
  describeDBClusterParameters(input: AwsNeptuneDescribeDBClusterParametersInput!, config: AwsConfig): AwsNeptuneDescribeDBClusterParametersOutput
  describeDBClusterSnapshotAttributes(input: AwsNeptuneDescribeDBClusterSnapshotAttributesInput!, config: AwsConfig): AwsNeptuneDescribeDBClusterSnapshotAttributesOutput
  describeDBClusterSnapshots(input: AwsNeptuneDescribeDBClusterSnapshotsInput, config: AwsConfig): AwsNeptuneDescribeDBClusterSnapshotsOutput
  describeDBClusters(input: AwsNeptuneDescribeDBClustersInput, config: AwsConfig): AwsNeptuneDescribeDBClustersOutput
  describeDBEngineVersions(input: AwsNeptuneDescribeDBEngineVersionsInput, config: AwsConfig): AwsNeptuneDescribeDBEngineVersionsOutput
  describeDBInstances(input: AwsNeptuneDescribeDBInstancesInput, config: AwsConfig): AwsNeptuneDescribeDBInstancesOutput
  describeDBParameterGroups(input: AwsNeptuneDescribeDBParameterGroupsInput, config: AwsConfig): AwsNeptuneDescribeDBParameterGroupsOutput
  describeDBParameters(input: AwsNeptuneDescribeDBParametersInput!, config: AwsConfig): AwsNeptuneDescribeDBParametersOutput
  describeDBSubnetGroups(input: AwsNeptuneDescribeDBSubnetGroupsInput, config: AwsConfig): AwsNeptuneDescribeDBSubnetGroupsOutput
  describeEngineDefaultClusterParameters(input: AwsNeptuneDescribeEngineDefaultClusterParametersInput!, config: AwsConfig): AwsNeptuneDescribeEngineDefaultClusterParametersOutput
  describeEngineDefaultParameters(input: AwsNeptuneDescribeEngineDefaultParametersInput!, config: AwsConfig): AwsNeptuneDescribeEngineDefaultParametersOutput
  describeEventCategories(input: AwsNeptuneDescribeEventCategoriesInput, config: AwsConfig): AwsNeptuneDescribeEventCategoriesOutput
  describeEventSubscriptions(input: AwsNeptuneDescribeEventSubscriptionsInput, config: AwsConfig): AwsNeptuneDescribeEventSubscriptionsOutput
  describeEvents(input: AwsNeptuneDescribeEventsInput, config: AwsConfig): AwsNeptuneDescribeEventsOutput
  describeOrderableDBInstanceOptions(input: AwsNeptuneDescribeOrderableDBInstanceOptionsInput!, config: AwsConfig): AwsNeptuneDescribeOrderableDBInstanceOptionsOutput
  describePendingMaintenanceActions(input: AwsNeptuneDescribePendingMaintenanceActionsInput, config: AwsConfig): AwsNeptuneDescribePendingMaintenanceActionsOutput
  describeValidDBInstanceModifications(input: AwsNeptuneDescribeValidDBInstanceModificationsInput!, config: AwsConfig): AwsNeptuneDescribeValidDBInstanceModificationsOutput
  failoverDBCluster(input: AwsNeptuneFailoverDBClusterInput, config: AwsConfig): AwsNeptuneFailoverDBClusterOutput
  listTagsForResource(input: AwsNeptuneListTagsForResourceInput!, config: AwsConfig): AwsNeptuneListTagsForResourceOutput
  modifyDBCluster(input: AwsNeptuneModifyDBClusterInput!, config: AwsConfig): AwsNeptuneModifyDBClusterOutput
  modifyDBClusterParameterGroup(input: AwsNeptuneModifyDBClusterParameterGroupInput!, config: AwsConfig): JSON
  modifyDBClusterSnapshotAttribute(input: AwsNeptuneModifyDBClusterSnapshotAttributeInput!, config: AwsConfig): AwsNeptuneModifyDBClusterSnapshotAttributeOutput
  modifyDBInstance(input: AwsNeptuneModifyDBInstanceInput!, config: AwsConfig): AwsNeptuneModifyDBInstanceOutput
  modifyDBParameterGroup(input: AwsNeptuneModifyDBParameterGroupInput!, config: AwsConfig): JSON
  modifyDBSubnetGroup(input: AwsNeptuneModifyDBSubnetGroupInput!, config: AwsConfig): AwsNeptuneModifyDBSubnetGroupOutput
  modifyEventSubscription(input: AwsNeptuneModifyEventSubscriptionInput!, config: AwsConfig): AwsNeptuneModifyEventSubscriptionOutput
  promoteReadReplicaDBCluster(input: AwsNeptunePromoteReadReplicaDBClusterInput!, config: AwsConfig): AwsNeptunePromoteReadReplicaDBClusterOutput
  rebootDBInstance(input: AwsNeptuneRebootDBInstanceInput!, config: AwsConfig): AwsNeptuneRebootDBInstanceOutput
  removeRoleFromDBCluster(input: AwsNeptuneRemoveRoleFromDBClusterInput!, config: AwsConfig): JSON
  removeSourceIdentifierFromSubscription(input: AwsNeptuneRemoveSourceIdentifierFromSubscriptionInput!, config: AwsConfig): AwsNeptuneRemoveSourceIdentifierFromSubscriptionOutput
  removeTagsFromResource(input: AwsNeptuneRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  resetDBClusterParameterGroup(input: AwsNeptuneResetDBClusterParameterGroupInput!, config: AwsConfig): JSON
  resetDBParameterGroup(input: AwsNeptuneResetDBParameterGroupInput!, config: AwsConfig): JSON
  restoreDBClusterFromSnapshot(input: AwsNeptuneRestoreDBClusterFromSnapshotInput!, config: AwsConfig): AwsNeptuneRestoreDBClusterFromSnapshotOutput
  restoreDBClusterToPointInTime(input: AwsNeptuneRestoreDBClusterToPointInTimeInput!, config: AwsConfig): AwsNeptuneRestoreDBClusterToPointInTimeOutput
}

input AwsNeptuneAddRoleToDBClusterInput {
  DBClusterIdentifier: String!
  RoleArn: String!
}

input AwsNeptuneAddSourceIdentifierToSubscriptionInput {
  SubscriptionName: String!
  SourceIdentifier: String!
}

type AwsNeptuneAddSourceIdentifierToSubscriptionOutput {
  EventSubscription: AwsNeptuneS5
}

input AwsNeptuneAddTagsToResourceInput {
  ResourceName: String!
  Tags: [AwsNeptuneSaInput]!
}

input AwsNeptuneApplyPendingMaintenanceActionInput {
  ResourceIdentifier: String!
  ApplyAction: String!
  OptInType: String!
}

type AwsNeptuneApplyPendingMaintenanceActionOutput {
  ResourcePendingMaintenanceActions: AwsNeptuneSe
}

input AwsNeptuneCopyDBClusterParameterGroupInput {
  SourceDBClusterParameterGroupIdentifier: String!
  TargetDBClusterParameterGroupIdentifier: String!
  TargetDBClusterParameterGroupDescription: String!
  Tags: [AwsNeptuneSaInput]
}

type AwsNeptuneCopyDBClusterParameterGroupOutput {
  DBClusterParameterGroup: AwsNeptuneSk
}

input AwsNeptuneCopyDBClusterSnapshotInput {
  SourceDBClusterSnapshotIdentifier: String!
  TargetDBClusterSnapshotIdentifier: String!
  KmsKeyId: String
  PreSignedUrl: String
  CopyTags: Boolean
  Tags: [AwsNeptuneSaInput]
}

type AwsNeptuneCopyDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsNeptuneSo
}

input AwsNeptuneCopyDBParameterGroupInput {
  SourceDBParameterGroupIdentifier: String!
  TargetDBParameterGroupIdentifier: String!
  TargetDBParameterGroupDescription: String!
  Tags: [AwsNeptuneSaInput]
}

type AwsNeptuneCopyDBParameterGroupOutput {
  DBParameterGroup: AwsNeptuneSt
}

input AwsNeptuneCreateDBClusterInput {
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String!
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  DBSubnetGroupName: String
  Engine: String!
  EngineVersion: String
  Port: Int
  MasterUsername: String
  MasterUserPassword: String
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  ReplicationSourceIdentifier: String
  Tags: [AwsNeptuneSaInput]
  StorageEncrypted: Boolean
  KmsKeyId: String
  PreSignedUrl: String
  EnableIAMDatabaseAuthentication: Boolean
  EnableCloudwatchLogsExports: [String]
}

type AwsNeptuneCreateDBClusterOutput {
  DBCluster: AwsNeptuneSz
}

input AwsNeptuneCreateDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  DBParameterGroupFamily: String!
  Description: String!
  Tags: [AwsNeptuneSaInput]
}

type AwsNeptuneCreateDBClusterParameterGroupOutput {
  DBClusterParameterGroup: AwsNeptuneSk
}

input AwsNeptuneCreateDBClusterSnapshotInput {
  DBClusterSnapshotIdentifier: String!
  DBClusterIdentifier: String!
  Tags: [AwsNeptuneSaInput]
}

type AwsNeptuneCreateDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsNeptuneSo
}

input AwsNeptuneCreateDBInstanceInput {
  DBName: String
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String!
  Engine: String!
  MasterUsername: String
  MasterUserPassword: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  AvailabilityZone: String
  DBSubnetGroupName: String
  PreferredMaintenanceWindow: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  Port: Int
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  CharacterSetName: String
  PubliclyAccessible: Boolean
  Tags: [AwsNeptuneSaInput]
  DBClusterIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  Domain: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  MonitoringRoleArn: String
  DomainIAMRoleName: String
  PromotionTier: Int
  Timezone: String
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
  EnableCloudwatchLogsExports: [String]
}

type AwsNeptuneCreateDBInstanceOutput {
  DBInstance: AwsNeptuneS1g
}

input AwsNeptuneCreateDBParameterGroupInput {
  DBParameterGroupName: String!
  DBParameterGroupFamily: String!
  Description: String!
  Tags: [AwsNeptuneSaInput]
}

type AwsNeptuneCreateDBParameterGroupOutput {
  DBParameterGroup: AwsNeptuneSt
}

input AwsNeptuneCreateDBSubnetGroupInput {
  DBSubnetGroupName: String!
  DBSubnetGroupDescription: String!
  SubnetIds: [String]!
  Tags: [AwsNeptuneSaInput]
}

type AwsNeptuneCreateDBSubnetGroupOutput {
  DBSubnetGroup: AwsNeptuneS1m
}

input AwsNeptuneCreateEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String!
  SourceType: String
  EventCategories: [String]
  SourceIds: [String]
  Enabled: Boolean
  Tags: [AwsNeptuneSaInput]
}

type AwsNeptuneCreateEventSubscriptionOutput {
  EventSubscription: AwsNeptuneS5
}

input AwsNeptuneDeleteDBClusterInput {
  DBClusterIdentifier: String!
  SkipFinalSnapshot: Boolean
  FinalDBSnapshotIdentifier: String
}

type AwsNeptuneDeleteDBClusterOutput {
  DBCluster: AwsNeptuneSz
}

input AwsNeptuneDeleteDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
}

input AwsNeptuneDeleteDBClusterSnapshotInput {
  DBClusterSnapshotIdentifier: String!
}

type AwsNeptuneDeleteDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsNeptuneSo
}

input AwsNeptuneDeleteDBInstanceInput {
  DBInstanceIdentifier: String!
  SkipFinalSnapshot: Boolean
  FinalDBSnapshotIdentifier: String
}

type AwsNeptuneDeleteDBInstanceOutput {
  DBInstance: AwsNeptuneS1g
}

input AwsNeptuneDeleteDBParameterGroupInput {
  DBParameterGroupName: String!
}

input AwsNeptuneDeleteDBSubnetGroupInput {
  DBSubnetGroupName: String!
}

input AwsNeptuneDeleteEventSubscriptionInput {
  SubscriptionName: String!
}

type AwsNeptuneDeleteEventSubscriptionOutput {
  EventSubscription: AwsNeptuneS5
}

input AwsNeptuneDescribeDBClusterParameterGroupsInput {
  DBClusterParameterGroupName: String
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeDBClusterParameterGroupsOutput {
  Marker: String
  DBClusterParameterGroups: [AwsNeptuneSk]
}

input AwsNeptuneDescribeDBClusterParametersInput {
  DBClusterParameterGroupName: String!
  Source: String
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeDBClusterParametersOutput {
  Parameters: [AwsNeptuneS2q]
  Marker: String
}

input AwsNeptuneDescribeDBClustersInput {
  DBClusterIdentifier: String
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

input AwsNeptuneDescribeDBClusterSnapshotAttributesInput {
  DBClusterSnapshotIdentifier: String!
}

type AwsNeptuneDescribeDBClusterSnapshotAttributesOutput {
  DBClusterSnapshotAttributesResult: AwsNeptuneS2v
}

input AwsNeptuneDescribeDBClusterSnapshotsInput {
  DBClusterIdentifier: String
  DBClusterSnapshotIdentifier: String
  SnapshotType: String
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
  IncludeShared: Boolean
  IncludePublic: Boolean
}

type AwsNeptuneDescribeDBClusterSnapshotsOutput {
  Marker: String
  DBClusterSnapshots: [AwsNeptuneSo]
}

type AwsNeptuneDescribeDBClustersOutput {
  Marker: String
  DBClusters: [AwsNeptuneSz]
}

input AwsNeptuneDescribeDBEngineVersionsInput {
  Engine: String
  EngineVersion: String
  DBParameterGroupFamily: String
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
  DefaultOnly: Boolean
  ListSupportedCharacterSets: Boolean
  ListSupportedTimezones: Boolean
}

type AwsNeptuneDescribeDBEngineVersionsOutput {
  Marker: String
  DBEngineVersions: [AwsNeptuneDescribeDBEngineVersionsOutputDBEngineVersions]
}

type AwsNeptuneDescribeDBEngineVersionsOutputDBEngineVersions {
  Engine: String
  EngineVersion: String
  DBParameterGroupFamily: String
  DBEngineDescription: String
  DBEngineVersionDescription: String
  DefaultCharacterSet: AwsNeptuneS39
  SupportedCharacterSets: [AwsNeptuneS39]
  ValidUpgradeTarget: [AwsNeptuneDescribeDBEngineVersionsOutputDBEngineVersionsValidUpgradeTarget]
  SupportedTimezones: [AwsNeptuneDescribeDBEngineVersionsOutputDBEngineVersionsSupportedTimezones]
  ExportableLogTypes: [String]
  SupportsLogExportsToCloudwatchLogs: Boolean
  SupportsReadReplica: Boolean
}

type AwsNeptuneDescribeDBEngineVersionsOutputDBEngineVersionsSupportedTimezones {
  TimezoneName: String
}

type AwsNeptuneDescribeDBEngineVersionsOutputDBEngineVersionsValidUpgradeTarget {
  Engine: String
  EngineVersion: String
  Description: String
  AutoUpgrade: Boolean
  IsMajorVersionUpgrade: Boolean
}

input AwsNeptuneDescribeDBInstancesInput {
  DBInstanceIdentifier: String
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeDBInstancesOutput {
  Marker: String
  DBInstances: [AwsNeptuneS1g]
}

input AwsNeptuneDescribeDBParameterGroupsInput {
  DBParameterGroupName: String
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeDBParameterGroupsOutput {
  Marker: String
  DBParameterGroups: [AwsNeptuneSt]
}

input AwsNeptuneDescribeDBParametersInput {
  DBParameterGroupName: String!
  Source: String
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeDBParametersOutput {
  Parameters: [AwsNeptuneS2q]
  Marker: String
}

input AwsNeptuneDescribeDBSubnetGroupsInput {
  DBSubnetGroupName: String
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeDBSubnetGroupsOutput {
  Marker: String
  DBSubnetGroups: [AwsNeptuneS1m]
}

input AwsNeptuneDescribeEngineDefaultClusterParametersInput {
  DBParameterGroupFamily: String!
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeEngineDefaultClusterParametersOutput {
  EngineDefaults: AwsNeptuneS3s
}

input AwsNeptuneDescribeEngineDefaultParametersInput {
  DBParameterGroupFamily: String!
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeEngineDefaultParametersOutput {
  EngineDefaults: AwsNeptuneS3s
}

input AwsNeptuneDescribeEventCategoriesInput {
  SourceType: String
  Filters: [AwsNeptuneS2jInput]
}

type AwsNeptuneDescribeEventCategoriesOutput {
  EventCategoriesMapList: [AwsNeptuneDescribeEventCategoriesOutputEventCategoriesMapList]
}

type AwsNeptuneDescribeEventCategoriesOutputEventCategoriesMapList {
  SourceType: String
  EventCategories: [String]
}

input AwsNeptuneDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  EventCategories: [String]
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeEventsOutput {
  Marker: String
  Events: [AwsNeptuneDescribeEventsOutputEvents]
}

type AwsNeptuneDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Date: Date
  SourceArn: String
}

input AwsNeptuneDescribeEventSubscriptionsInput {
  SubscriptionName: String
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeEventSubscriptionsOutput {
  Marker: String
  EventSubscriptionsList: [AwsNeptuneS5]
}

input AwsNeptuneDescribeOrderableDBInstanceOptionsInput {
  Engine: String!
  EngineVersion: String
  DBInstanceClass: String
  LicenseModel: String
  Vpc: Boolean
  Filters: [AwsNeptuneS2jInput]
  MaxRecords: Int
  Marker: String
}

type AwsNeptuneDescribeOrderableDBInstanceOptionsOutput {
  OrderableDBInstanceOptions: [AwsNeptuneDescribeOrderableDBInstanceOptionsOutputOrderableDBInstanceOptions]
  Marker: String
}

type AwsNeptuneDescribeOrderableDBInstanceOptionsOutputOrderableDBInstanceOptions {
  Engine: String
  EngineVersion: String
  DBInstanceClass: String
  LicenseModel: String
  AvailabilityZones: [AwsNeptuneS1p]
  MultiAZCapable: Boolean
  ReadReplicaCapable: Boolean
  Vpc: Boolean
  SupportsStorageEncryption: Boolean
  StorageType: String
  SupportsIops: Boolean
  SupportsEnhancedMonitoring: Boolean
  SupportsIAMDatabaseAuthentication: Boolean
  SupportsPerformanceInsights: Boolean
  MinStorageSize: Int
  MaxStorageSize: Int
  MinIopsPerDbInstance: Int
  MaxIopsPerDbInstance: Int
  MinIopsPerGib: JSON
  MaxIopsPerGib: JSON
}

input AwsNeptuneDescribePendingMaintenanceActionsInput {
  ResourceIdentifier: String
  Filters: [AwsNeptuneS2jInput]
  Marker: String
  MaxRecords: Int
}

type AwsNeptuneDescribePendingMaintenanceActionsOutput {
  PendingMaintenanceActions: [AwsNeptuneSe]
  Marker: String
}

input AwsNeptuneDescribeValidDBInstanceModificationsInput {
  DBInstanceIdentifier: String!
}

type AwsNeptuneDescribeValidDBInstanceModificationsOutput {
  ValidDBInstanceModificationsMessage: AwsNeptuneDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessage
}

type AwsNeptuneDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessage {
  Storage: [AwsNeptuneDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorage]
}

type AwsNeptuneDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorage {
  StorageType: String
  StorageSize: [AwsNeptuneS4l]
  ProvisionedIops: [AwsNeptuneS4l]
  IopsToStorageRatio: [AwsNeptuneDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorageIopsToStorageRatio]
}

type AwsNeptuneDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorageIopsToStorageRatio {
  From: JSON
  To: JSON
}

input AwsNeptuneFailoverDBClusterInput {
  DBClusterIdentifier: String
  TargetDBInstanceIdentifier: String
}

type AwsNeptuneFailoverDBClusterOutput {
  DBCluster: AwsNeptuneSz
}

input AwsNeptuneListTagsForResourceInput {
  ResourceName: String!
  Filters: [AwsNeptuneS2jInput]
}

type AwsNeptuneListTagsForResourceOutput {
  TagList: [AwsNeptuneSa]
}

input AwsNeptuneModifyDBClusterInput {
  DBClusterIdentifier: String!
  NewDBClusterIdentifier: String
  ApplyImmediately: Boolean
  BackupRetentionPeriod: Int
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  Port: Int
  MasterUserPassword: String
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  EnableIAMDatabaseAuthentication: Boolean
  CloudwatchLogsExportConfiguration: AwsNeptuneS4vInput
  EngineVersion: String
}

type AwsNeptuneModifyDBClusterOutput {
  DBCluster: AwsNeptuneSz
}

input AwsNeptuneModifyDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  Parameters: [AwsNeptuneS2qInput]!
}

input AwsNeptuneModifyDBClusterSnapshotAttributeInput {
  DBClusterSnapshotIdentifier: String!
  AttributeName: String!
  ValuesToAdd: [String]
  ValuesToRemove: [String]
}

type AwsNeptuneModifyDBClusterSnapshotAttributeOutput {
  DBClusterSnapshotAttributesResult: AwsNeptuneS2v
}

input AwsNeptuneModifyDBInstanceInput {
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String
  DBSubnetGroupName: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  ApplyImmediately: Boolean
  MasterUserPassword: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  MultiAZ: Boolean
  EngineVersion: String
  AllowMajorVersionUpgrade: Boolean
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  NewDBInstanceIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  CACertificateIdentifier: String
  Domain: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  DBPortNumber: Int
  PubliclyAccessible: Boolean
  MonitoringRoleArn: String
  DomainIAMRoleName: String
  PromotionTier: Int
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
  CloudwatchLogsExportConfiguration: AwsNeptuneS4vInput
}

type AwsNeptuneModifyDBInstanceOutput {
  DBInstance: AwsNeptuneS1g
}

input AwsNeptuneModifyDBParameterGroupInput {
  DBParameterGroupName: String!
  Parameters: [AwsNeptuneS2qInput]!
}

input AwsNeptuneModifyDBSubnetGroupInput {
  DBSubnetGroupName: String!
  DBSubnetGroupDescription: String
  SubnetIds: [String]!
}

type AwsNeptuneModifyDBSubnetGroupOutput {
  DBSubnetGroup: AwsNeptuneS1m
}

input AwsNeptuneModifyEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String
  SourceType: String
  EventCategories: [String]
  Enabled: Boolean
}

type AwsNeptuneModifyEventSubscriptionOutput {
  EventSubscription: AwsNeptuneS5
}

input AwsNeptunePromoteReadReplicaDBClusterInput {
  DBClusterIdentifier: String!
}

type AwsNeptunePromoteReadReplicaDBClusterOutput {
  DBCluster: AwsNeptuneSz
}

input AwsNeptuneRebootDBInstanceInput {
  DBInstanceIdentifier: String!
  ForceFailover: Boolean
}

type AwsNeptuneRebootDBInstanceOutput {
  DBInstance: AwsNeptuneS1g
}

input AwsNeptuneRemoveRoleFromDBClusterInput {
  DBClusterIdentifier: String!
  RoleArn: String!
}

input AwsNeptuneRemoveSourceIdentifierFromSubscriptionInput {
  SubscriptionName: String!
  SourceIdentifier: String!
}

type AwsNeptuneRemoveSourceIdentifierFromSubscriptionOutput {
  EventSubscription: AwsNeptuneS5
}

input AwsNeptuneRemoveTagsFromResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsNeptuneResetDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsNeptuneS2qInput]
}

input AwsNeptuneResetDBParameterGroupInput {
  DBParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsNeptuneS2qInput]
}

input AwsNeptuneRestoreDBClusterFromSnapshotInput {
  AvailabilityZones: [String]
  DBClusterIdentifier: String!
  SnapshotIdentifier: String!
  Engine: String!
  EngineVersion: String
  Port: Int
  DBSubnetGroupName: String
  DatabaseName: String
  OptionGroupName: String
  VpcSecurityGroupIds: [String]
  Tags: [AwsNeptuneSaInput]
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
  EnableCloudwatchLogsExports: [String]
  DBClusterParameterGroupName: String
}

type AwsNeptuneRestoreDBClusterFromSnapshotOutput {
  DBCluster: AwsNeptuneSz
}

input AwsNeptuneRestoreDBClusterToPointInTimeInput {
  DBClusterIdentifier: String!
  RestoreType: String
  SourceDBClusterIdentifier: String!
  RestoreToTime: Date
  UseLatestRestorableTime: Boolean
  Port: Int
  DBSubnetGroupName: String
  OptionGroupName: String
  VpcSecurityGroupIds: [String]
  Tags: [AwsNeptuneSaInput]
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
  EnableCloudwatchLogsExports: [String]
  DBClusterParameterGroupName: String
}

type AwsNeptuneRestoreDBClusterToPointInTimeOutput {
  DBCluster: AwsNeptuneSz
}

type AwsNeptuneS15 {
  VpcSecurityGroupId: String
  Status: String
}

type AwsNeptuneS1g {
  DBInstanceIdentifier: String
  DBInstanceClass: String
  Engine: String
  DBInstanceStatus: String
  MasterUsername: String
  DBName: String
  Endpoint: AwsNeptuneS1gEndpoint
  AllocatedStorage: Int
  InstanceCreateTime: Date
  PreferredBackupWindow: String
  BackupRetentionPeriod: Int
  DBSecurityGroups: [AwsNeptuneS1gDBSecurityGroups]
  VpcSecurityGroups: [AwsNeptuneS15]
  DBParameterGroups: [AwsNeptuneS1gDBParameterGroups]
  AvailabilityZone: String
  DBSubnetGroup: AwsNeptuneS1m
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsNeptuneS1gPendingModifiedValues
  LatestRestorableTime: Date
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  ReadReplicaSourceDBInstanceIdentifier: String
  ReadReplicaDBInstanceIdentifiers: [String]
  ReadReplicaDBClusterIdentifiers: [String]
  LicenseModel: String
  Iops: Int
  OptionGroupMemberships: [AwsNeptuneS1gOptionGroupMemberships]
  CharacterSetName: String
  SecondaryAvailabilityZone: String
  PubliclyAccessible: Boolean
  StatusInfos: [AwsNeptuneS1gStatusInfos]
  StorageType: String
  TdeCredentialArn: String
  DbInstancePort: Int
  DBClusterIdentifier: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  DbiResourceId: String
  CACertificateIdentifier: String
  DomainMemberships: [AwsNeptuneS1gDomainMemberships]
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  EnhancedMonitoringResourceArn: String
  MonitoringRoleArn: String
  PromotionTier: Int
  DBInstanceArn: String
  Timezone: String
  IAMDatabaseAuthenticationEnabled: Boolean
  PerformanceInsightsEnabled: Boolean
  PerformanceInsightsKMSKeyId: String
  EnabledCloudwatchLogsExports: [String]
}

type AwsNeptuneS1gDBParameterGroups {
  DBParameterGroupName: String
  ParameterApplyStatus: String
}

type AwsNeptuneS1gDBSecurityGroups {
  DBSecurityGroupName: String
  Status: String
}

type AwsNeptuneS1gDomainMemberships {
  Domain: String
  Status: String
  FQDN: String
  IAMRoleName: String
}

type AwsNeptuneS1gEndpoint {
  Address: String
  Port: Int
  HostedZoneId: String
}

type AwsNeptuneS1gOptionGroupMemberships {
  OptionGroupName: String
  Status: String
}

type AwsNeptuneS1gPendingModifiedValues {
  DBInstanceClass: String
  AllocatedStorage: Int
  MasterUserPassword: String
  Port: Int
  BackupRetentionPeriod: Int
  MultiAZ: Boolean
  EngineVersion: String
  LicenseModel: String
  Iops: Int
  DBInstanceIdentifier: String
  StorageType: String
  CACertificateIdentifier: String
  DBSubnetGroupName: String
  PendingCloudwatchLogsExports: AwsNeptuneS1gPendingModifiedValuesPendingCloudwatchLogsExports
}

type AwsNeptuneS1gPendingModifiedValuesPendingCloudwatchLogsExports {
  LogTypesToEnable: [String]
  LogTypesToDisable: [String]
}

type AwsNeptuneS1gStatusInfos {
  StatusType: String
  Normal: Boolean
  Status: String
  Message: String
}

type AwsNeptuneS1m {
  DBSubnetGroupName: String
  DBSubnetGroupDescription: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsNeptuneS1mSubnets]
  DBSubnetGroupArn: String
}

type AwsNeptuneS1mSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsNeptuneS1p
  SubnetStatus: String
}

type AwsNeptuneS1p {
  Name: String
}

input AwsNeptuneS2jInput {
  Name: String!
  Values: [String]!
}

type AwsNeptuneS2q {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ApplyMethod: String
}

input AwsNeptuneS2qInput {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ApplyMethod: String
}

type AwsNeptuneS2v {
  DBClusterSnapshotIdentifier: String
  DBClusterSnapshotAttributes: [AwsNeptuneS2vDBClusterSnapshotAttributes]
}

type AwsNeptuneS2vDBClusterSnapshotAttributes {
  AttributeName: String
  AttributeValues: [String]
}

type AwsNeptuneS39 {
  CharacterSetName: String
  CharacterSetDescription: String
}

type AwsNeptuneS3s {
  DBParameterGroupFamily: String
  Marker: String
  Parameters: [AwsNeptuneS2q]
}

type AwsNeptuneS4l {
  From: Int
  To: Int
  Step: Int
}

input AwsNeptuneS4vInput {
  EnableLogTypes: [String]
  DisableLogTypes: [String]
}

type AwsNeptuneS5 {
  CustomerAwsId: String
  CustSubscriptionId: String
  SnsTopicArn: String
  Status: String
  SubscriptionCreationTime: String
  SourceType: String
  SourceIdsList: [String]
  EventCategoriesList: [String]
  Enabled: Boolean
  EventSubscriptionArn: String
}

type AwsNeptuneSa {
  Key: String
  Value: String
}

input AwsNeptuneSaInput {
  Key: String
  Value: String
}

type AwsNeptuneSe {
  ResourceIdentifier: String
  PendingMaintenanceActionDetails: [AwsNeptuneSePendingMaintenanceActionDetails]
}

type AwsNeptuneSePendingMaintenanceActionDetails {
  Action: String
  AutoAppliedAfterDate: Date
  ForcedApplyDate: Date
  OptInStatus: String
  CurrentApplyDate: Date
  Description: String
}

type AwsNeptuneSk {
  DBClusterParameterGroupName: String
  DBParameterGroupFamily: String
  Description: String
  DBClusterParameterGroupArn: String
}

type AwsNeptuneSo {
  AvailabilityZones: [String]
  DBClusterSnapshotIdentifier: String
  DBClusterIdentifier: String
  SnapshotCreateTime: Date
  Engine: String
  AllocatedStorage: Int
  Status: String
  Port: Int
  VpcId: String
  ClusterCreateTime: Date
  MasterUsername: String
  EngineVersion: String
  LicenseModel: String
  SnapshotType: String
  PercentProgress: Int
  StorageEncrypted: Boolean
  KmsKeyId: String
  DBClusterSnapshotArn: String
  SourceDBClusterSnapshotArn: String
  IAMDatabaseAuthenticationEnabled: Boolean
}

type AwsNeptuneSt {
  DBParameterGroupName: String
  DBParameterGroupFamily: String
  Description: String
  DBParameterGroupArn: String
}

type AwsNeptuneSz {
  AllocatedStorage: Int
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String
  DBClusterParameterGroup: String
  DBSubnetGroup: String
  Status: String
  PercentProgress: String
  EarliestRestorableTime: Date
  Endpoint: String
  ReaderEndpoint: String
  MultiAZ: Boolean
  Engine: String
  EngineVersion: String
  LatestRestorableTime: Date
  Port: Int
  MasterUsername: String
  DBClusterOptionGroupMemberships: [AwsNeptuneSzDBClusterOptionGroupMemberships]
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  ReplicationSourceIdentifier: String
  ReadReplicaIdentifiers: [String]
  DBClusterMembers: [AwsNeptuneSzDBClusterMembers]
  VpcSecurityGroups: [AwsNeptuneS15]
  HostedZoneId: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  DbClusterResourceId: String
  DBClusterArn: String
  AssociatedRoles: [AwsNeptuneSzAssociatedRoles]
  IAMDatabaseAuthenticationEnabled: Boolean
  CloneGroupId: String
  ClusterCreateTime: Date
  EnabledCloudwatchLogsExports: [String]
}

type AwsNeptuneSzAssociatedRoles {
  RoleArn: String
  Status: String
}

type AwsNeptuneSzDBClusterMembers {
  DBInstanceIdentifier: String
  IsClusterWriter: Boolean
  DBClusterParameterGroupStatus: String
  PromotionTier: Int
}

type AwsNeptuneSzDBClusterOptionGroupMemberships {
  DBClusterOptionGroupName: String
  Status: String
}

"""AWS OpsWorks (2013-02-18)"""
type AwsOpsWorks {
  assignInstance(input: AwsOpsWorksAssignInstanceInput!, config: AwsConfig): JSON
  assignVolume(input: AwsOpsWorksAssignVolumeInput!, config: AwsConfig): JSON
  associateElasticIp(input: AwsOpsWorksAssociateElasticIpInput!, config: AwsConfig): JSON
  attachElasticLoadBalancer(input: AwsOpsWorksAttachElasticLoadBalancerInput!, config: AwsConfig): JSON
  cloneStack(input: AwsOpsWorksCloneStackInput!, config: AwsConfig): AwsOpsWorksCloneStackOutput
  createApp(input: AwsOpsWorksCreateAppInput!, config: AwsConfig): AwsOpsWorksCreateAppOutput
  createDeployment(input: AwsOpsWorksCreateDeploymentInput!, config: AwsConfig): AwsOpsWorksCreateDeploymentOutput
  createInstance(input: AwsOpsWorksCreateInstanceInput!, config: AwsConfig): AwsOpsWorksCreateInstanceOutput
  createLayer(input: AwsOpsWorksCreateLayerInput!, config: AwsConfig): AwsOpsWorksCreateLayerOutput
  createStack(input: AwsOpsWorksCreateStackInput!, config: AwsConfig): AwsOpsWorksCreateStackOutput
  createUserProfile(input: AwsOpsWorksCreateUserProfileInput!, config: AwsConfig): AwsOpsWorksCreateUserProfileOutput
  deleteApp(input: AwsOpsWorksDeleteAppInput!, config: AwsConfig): JSON
  deleteInstance(input: AwsOpsWorksDeleteInstanceInput!, config: AwsConfig): JSON
  deleteLayer(input: AwsOpsWorksDeleteLayerInput!, config: AwsConfig): JSON
  deleteStack(input: AwsOpsWorksDeleteStackInput!, config: AwsConfig): JSON
  deleteUserProfile(input: AwsOpsWorksDeleteUserProfileInput!, config: AwsConfig): JSON
  deregisterEcsCluster(input: AwsOpsWorksDeregisterEcsClusterInput!, config: AwsConfig): JSON
  deregisterElasticIp(input: AwsOpsWorksDeregisterElasticIpInput!, config: AwsConfig): JSON
  deregisterInstance(input: AwsOpsWorksDeregisterInstanceInput!, config: AwsConfig): JSON
  deregisterRdsDbInstance(input: AwsOpsWorksDeregisterRdsDbInstanceInput!, config: AwsConfig): JSON
  deregisterVolume(input: AwsOpsWorksDeregisterVolumeInput!, config: AwsConfig): JSON
  describeAgentVersions(input: AwsOpsWorksDescribeAgentVersionsInput, config: AwsConfig): AwsOpsWorksDescribeAgentVersionsOutput
  describeApps(input: AwsOpsWorksDescribeAppsInput, config: AwsConfig): AwsOpsWorksDescribeAppsOutput
  describeCommands(input: AwsOpsWorksDescribeCommandsInput, config: AwsConfig): AwsOpsWorksDescribeCommandsOutput
  describeDeployments(input: AwsOpsWorksDescribeDeploymentsInput, config: AwsConfig): AwsOpsWorksDescribeDeploymentsOutput
  describeEcsClusters(input: AwsOpsWorksDescribeEcsClustersInput, config: AwsConfig): AwsOpsWorksDescribeEcsClustersOutput
  describeElasticIps(input: AwsOpsWorksDescribeElasticIpsInput, config: AwsConfig): AwsOpsWorksDescribeElasticIpsOutput
  describeElasticLoadBalancers(input: AwsOpsWorksDescribeElasticLoadBalancersInput, config: AwsConfig): AwsOpsWorksDescribeElasticLoadBalancersOutput
  describeInstances(input: AwsOpsWorksDescribeInstancesInput, config: AwsConfig): AwsOpsWorksDescribeInstancesOutput
  describeLayers(input: AwsOpsWorksDescribeLayersInput, config: AwsConfig): AwsOpsWorksDescribeLayersOutput
  describeLoadBasedAutoScaling(input: AwsOpsWorksDescribeLoadBasedAutoScalingInput!, config: AwsConfig): AwsOpsWorksDescribeLoadBasedAutoScalingOutput
  describeMyUserProfile(config: AwsConfig): AwsOpsWorksDescribeMyUserProfileOutput
  describeOperatingSystems(config: AwsConfig): AwsOpsWorksDescribeOperatingSystemsOutput
  describePermissions(input: AwsOpsWorksDescribePermissionsInput, config: AwsConfig): AwsOpsWorksDescribePermissionsOutput
  describeRaidArrays(input: AwsOpsWorksDescribeRaidArraysInput, config: AwsConfig): AwsOpsWorksDescribeRaidArraysOutput
  describeRdsDbInstances(input: AwsOpsWorksDescribeRdsDbInstancesInput!, config: AwsConfig): AwsOpsWorksDescribeRdsDbInstancesOutput
  describeServiceErrors(input: AwsOpsWorksDescribeServiceErrorsInput, config: AwsConfig): AwsOpsWorksDescribeServiceErrorsOutput
  describeStackProvisioningParameters(input: AwsOpsWorksDescribeStackProvisioningParametersInput!, config: AwsConfig): AwsOpsWorksDescribeStackProvisioningParametersOutput
  describeStackSummary(input: AwsOpsWorksDescribeStackSummaryInput!, config: AwsConfig): AwsOpsWorksDescribeStackSummaryOutput
  describeStacks(input: AwsOpsWorksDescribeStacksInput, config: AwsConfig): AwsOpsWorksDescribeStacksOutput
  describeTimeBasedAutoScaling(input: AwsOpsWorksDescribeTimeBasedAutoScalingInput!, config: AwsConfig): AwsOpsWorksDescribeTimeBasedAutoScalingOutput
  describeUserProfiles(input: AwsOpsWorksDescribeUserProfilesInput, config: AwsConfig): AwsOpsWorksDescribeUserProfilesOutput
  describeVolumes(input: AwsOpsWorksDescribeVolumesInput, config: AwsConfig): AwsOpsWorksDescribeVolumesOutput
  detachElasticLoadBalancer(input: AwsOpsWorksDetachElasticLoadBalancerInput!, config: AwsConfig): JSON
  disassociateElasticIp(input: AwsOpsWorksDisassociateElasticIpInput!, config: AwsConfig): JSON
  getHostnameSuggestion(input: AwsOpsWorksGetHostnameSuggestionInput!, config: AwsConfig): AwsOpsWorksGetHostnameSuggestionOutput
  grantAccess(input: AwsOpsWorksGrantAccessInput!, config: AwsConfig): AwsOpsWorksGrantAccessOutput
  listTags(input: AwsOpsWorksListTagsInput!, config: AwsConfig): AwsOpsWorksListTagsOutput
  rebootInstance(input: AwsOpsWorksRebootInstanceInput!, config: AwsConfig): JSON
  registerEcsCluster(input: AwsOpsWorksRegisterEcsClusterInput!, config: AwsConfig): AwsOpsWorksRegisterEcsClusterOutput
  registerElasticIp(input: AwsOpsWorksRegisterElasticIpInput!, config: AwsConfig): AwsOpsWorksRegisterElasticIpOutput
  registerInstance(input: AwsOpsWorksRegisterInstanceInput!, config: AwsConfig): AwsOpsWorksRegisterInstanceOutput
  registerRdsDbInstance(input: AwsOpsWorksRegisterRdsDbInstanceInput!, config: AwsConfig): JSON
  registerVolume(input: AwsOpsWorksRegisterVolumeInput!, config: AwsConfig): AwsOpsWorksRegisterVolumeOutput
  setLoadBasedAutoScaling(input: AwsOpsWorksSetLoadBasedAutoScalingInput!, config: AwsConfig): JSON
  setPermission(input: AwsOpsWorksSetPermissionInput!, config: AwsConfig): JSON
  setTimeBasedAutoScaling(input: AwsOpsWorksSetTimeBasedAutoScalingInput!, config: AwsConfig): JSON
  startInstance(input: AwsOpsWorksStartInstanceInput!, config: AwsConfig): JSON
  startStack(input: AwsOpsWorksStartStackInput!, config: AwsConfig): JSON
  stopInstance(input: AwsOpsWorksStopInstanceInput!, config: AwsConfig): JSON
  stopStack(input: AwsOpsWorksStopStackInput!, config: AwsConfig): JSON
  tagResource(input: AwsOpsWorksTagResourceInput!, config: AwsConfig): JSON
  unassignInstance(input: AwsOpsWorksUnassignInstanceInput!, config: AwsConfig): JSON
  unassignVolume(input: AwsOpsWorksUnassignVolumeInput!, config: AwsConfig): JSON
  untagResource(input: AwsOpsWorksUntagResourceInput!, config: AwsConfig): JSON
  updateApp(input: AwsOpsWorksUpdateAppInput!, config: AwsConfig): JSON
  updateElasticIp(input: AwsOpsWorksUpdateElasticIpInput!, config: AwsConfig): JSON
  updateInstance(input: AwsOpsWorksUpdateInstanceInput!, config: AwsConfig): JSON
  updateLayer(input: AwsOpsWorksUpdateLayerInput!, config: AwsConfig): JSON
  updateMyUserProfile(input: AwsOpsWorksUpdateMyUserProfileInput, config: AwsConfig): JSON
  updateRdsDbInstance(input: AwsOpsWorksUpdateRdsDbInstanceInput!, config: AwsConfig): JSON
  updateStack(input: AwsOpsWorksUpdateStackInput!, config: AwsConfig): JSON
  updateUserProfile(input: AwsOpsWorksUpdateUserProfileInput!, config: AwsConfig): JSON
  updateVolume(input: AwsOpsWorksUpdateVolumeInput!, config: AwsConfig): JSON
}

input AwsOpsWorksAssignInstanceInput {
  InstanceId: String!
  LayerIds: [String]!
}

input AwsOpsWorksAssignVolumeInput {
  VolumeId: String!
  InstanceId: String
}

input AwsOpsWorksAssociateElasticIpInput {
  ElasticIp: String!
  InstanceId: String
}

input AwsOpsWorksAttachElasticLoadBalancerInput {
  ElasticLoadBalancerName: String!
  LayerId: String!
}

input AwsOpsWorksCloneStackInput {
  SourceStackId: String!
  Name: String
  Region: String
  VpcId: String
  Attributes: JSON
  ServiceRoleArn: String!
  DefaultInstanceProfileArn: String
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsWorksSaInput
  ChefConfiguration: AwsOpsWorksSbInput
  UseCustomCookbooks: Boolean
  UseOpsworksSecurityGroups: Boolean
  CustomCookbooksSource: AwsOpsWorksSdInput
  DefaultSshKeyName: String
  ClonePermissions: Boolean
  CloneAppIds: [String]
  DefaultRootDeviceType: String
  AgentVersion: String
}

type AwsOpsWorksCloneStackOutput {
  StackId: String
}

"""AWS OpsWorks for Chef Automate (2016-11-01)"""
type AwsOpsWorksCM {
  associateNode(input: AwsOpsWorksCMAssociateNodeInput!, config: AwsConfig): AwsOpsWorksCMAssociateNodeOutput
  createBackup(input: AwsOpsWorksCMCreateBackupInput!, config: AwsConfig): AwsOpsWorksCMCreateBackupOutput
  createServer(input: AwsOpsWorksCMCreateServerInput!, config: AwsConfig): AwsOpsWorksCMCreateServerOutput
  deleteBackup(input: AwsOpsWorksCMDeleteBackupInput!, config: AwsConfig): JSON
  deleteServer(input: AwsOpsWorksCMDeleteServerInput!, config: AwsConfig): JSON
  describeAccountAttributes(input: JSON, config: AwsConfig): AwsOpsWorksCMDescribeAccountAttributesOutput
  describeBackups(input: AwsOpsWorksCMDescribeBackupsInput, config: AwsConfig): AwsOpsWorksCMDescribeBackupsOutput
  describeEvents(input: AwsOpsWorksCMDescribeEventsInput!, config: AwsConfig): AwsOpsWorksCMDescribeEventsOutput
  describeNodeAssociationStatus(input: AwsOpsWorksCMDescribeNodeAssociationStatusInput!, config: AwsConfig): AwsOpsWorksCMDescribeNodeAssociationStatusOutput
  describeServers(input: AwsOpsWorksCMDescribeServersInput, config: AwsConfig): AwsOpsWorksCMDescribeServersOutput
  disassociateNode(input: AwsOpsWorksCMDisassociateNodeInput!, config: AwsConfig): AwsOpsWorksCMDisassociateNodeOutput
  exportServerEngineAttribute(input: AwsOpsWorksCMExportServerEngineAttributeInput!, config: AwsConfig): AwsOpsWorksCMExportServerEngineAttributeOutput
  restoreServer(input: AwsOpsWorksCMRestoreServerInput!, config: AwsConfig): JSON
  startMaintenance(input: AwsOpsWorksCMStartMaintenanceInput!, config: AwsConfig): AwsOpsWorksCMStartMaintenanceOutput
  updateServer(input: AwsOpsWorksCMUpdateServerInput!, config: AwsConfig): AwsOpsWorksCMUpdateServerOutput
  updateServerEngineAttributes(input: AwsOpsWorksCMUpdateServerEngineAttributesInput!, config: AwsConfig): AwsOpsWorksCMUpdateServerEngineAttributesOutput
}

input AwsOpsWorksCMAssociateNodeInput {
  ServerName: String!
  NodeName: String!
  EngineAttributes: [AwsOpsWorksCMS5Input]!
}

type AwsOpsWorksCMAssociateNodeOutput {
  NodeAssociationStatusToken: String
}

input AwsOpsWorksCMCreateBackupInput {
  ServerName: String!
  Description: String
}

type AwsOpsWorksCMCreateBackupOutput {
  Backup: AwsOpsWorksCMSd
}

input AwsOpsWorksCMCreateServerInput {
  AssociatePublicIpAddress: Boolean
  DisableAutomatedBackup: Boolean
  Engine: String
  EngineModel: String
  EngineVersion: String
  EngineAttributes: [AwsOpsWorksCMS5Input]
  BackupRetentionCount: Int
  ServerName: String!
  InstanceProfileArn: String!
  InstanceType: String!
  KeyPair: String
  PreferredMaintenanceWindow: String
  PreferredBackupWindow: String
  SecurityGroupIds: [String]
  ServiceRoleArn: String!
  SubnetIds: [String]
  BackupId: String
}

type AwsOpsWorksCMCreateServerOutput {
  Server: AwsOpsWorksCMSs
}

input AwsOpsWorksCMDeleteBackupInput {
  BackupId: String!
}

input AwsOpsWorksCMDeleteServerInput {
  ServerName: String!
}

type AwsOpsWorksCMDescribeAccountAttributesOutput {
  Attributes: [AwsOpsWorksCMDescribeAccountAttributesOutputAttributes]
}

type AwsOpsWorksCMDescribeAccountAttributesOutputAttributes {
  Name: String
  Maximum: Int
  Used: Int
}

input AwsOpsWorksCMDescribeBackupsInput {
  BackupId: String
  ServerName: String
  NextToken: String
  MaxResults: Int
}

type AwsOpsWorksCMDescribeBackupsOutput {
  Backups: [AwsOpsWorksCMSd]
  NextToken: String
}

input AwsOpsWorksCMDescribeEventsInput {
  ServerName: String!
  NextToken: String
  MaxResults: Int
}

type AwsOpsWorksCMDescribeEventsOutput {
  ServerEvents: [AwsOpsWorksCMDescribeEventsOutputServerEvents]
  NextToken: String
}

type AwsOpsWorksCMDescribeEventsOutputServerEvents {
  CreatedAt: Date
  ServerName: String
  Message: String
  LogUrl: String
}

input AwsOpsWorksCMDescribeNodeAssociationStatusInput {
  NodeAssociationStatusToken: String!
  ServerName: String!
}

type AwsOpsWorksCMDescribeNodeAssociationStatusOutput {
  NodeAssociationStatus: String
  EngineAttributes: [AwsOpsWorksCMS5]
}

input AwsOpsWorksCMDescribeServersInput {
  ServerName: String
  NextToken: String
  MaxResults: Int
}

type AwsOpsWorksCMDescribeServersOutput {
  Servers: [AwsOpsWorksCMSs]
  NextToken: String
}

input AwsOpsWorksCMDisassociateNodeInput {
  ServerName: String!
  NodeName: String!
  EngineAttributes: [AwsOpsWorksCMS5Input]
}

type AwsOpsWorksCMDisassociateNodeOutput {
  NodeAssociationStatusToken: String
}

input AwsOpsWorksCMExportServerEngineAttributeInput {
  ExportAttributeName: String!
  ServerName: String!
  InputAttributes: [AwsOpsWorksCMS5Input]
}

type AwsOpsWorksCMExportServerEngineAttributeOutput {
  EngineAttribute: AwsOpsWorksCMS5
  ServerName: String
}

input AwsOpsWorksCMRestoreServerInput {
  BackupId: String!
  ServerName: String!
  InstanceType: String
  KeyPair: String
}

type AwsOpsWorksCMS5 {
  Name: String
  Value: String
}

input AwsOpsWorksCMS5Input {
  Name: String
  Value: String
}

type AwsOpsWorksCMSd {
  BackupArn: String
  BackupId: String
  BackupType: String
  CreatedAt: Date
  Description: String
  Engine: String
  EngineModel: String
  EngineVersion: String
  InstanceProfileArn: String
  InstanceType: String
  KeyPair: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  S3DataSize: Int
  S3DataUrl: String
  S3LogUrl: String
  SecurityGroupIds: [String]
  ServerName: String
  ServiceRoleArn: String
  Status: String
  StatusDescription: String
  SubnetIds: [String]
  ToolsVersion: String
  UserArn: String
}

type AwsOpsWorksCMSs {
  AssociatePublicIpAddress: Boolean
  BackupRetentionCount: Int
  ServerName: String
  CreatedAt: Date
  CloudFormationStackArn: String
  DisableAutomatedBackup: Boolean
  Endpoint: String
  Engine: String
  EngineModel: String
  EngineAttributes: [AwsOpsWorksCMS5]
  EngineVersion: String
  InstanceProfileArn: String
  InstanceType: String
  KeyPair: String
  MaintenanceStatus: String
  PreferredMaintenanceWindow: String
  PreferredBackupWindow: String
  SecurityGroupIds: [String]
  ServiceRoleArn: String
  Status: String
  StatusReason: String
  SubnetIds: [String]
  ServerArn: String
}

input AwsOpsWorksCMStartMaintenanceInput {
  ServerName: String!
  EngineAttributes: [AwsOpsWorksCMS5Input]
}

type AwsOpsWorksCMStartMaintenanceOutput {
  Server: AwsOpsWorksCMSs
}

input AwsOpsWorksCMUpdateServerEngineAttributesInput {
  ServerName: String!
  AttributeName: String!
  AttributeValue: String
}

type AwsOpsWorksCMUpdateServerEngineAttributesOutput {
  Server: AwsOpsWorksCMSs
}

input AwsOpsWorksCMUpdateServerInput {
  DisableAutomatedBackup: Boolean
  BackupRetentionCount: Int
  ServerName: String!
  PreferredMaintenanceWindow: String
  PreferredBackupWindow: String
}

type AwsOpsWorksCMUpdateServerOutput {
  Server: AwsOpsWorksCMSs
}

input AwsOpsWorksCreateAppInput {
  StackId: String!
  Shortname: String
  Name: String!
  Description: String
  DataSources: [AwsOpsWorksSiInput]
  Type: String!
  AppSource: AwsOpsWorksSdInput
  Domains: [String]
  EnableSsl: Boolean
  SslConfiguration: AwsOpsWorksSlInput
  Attributes: JSON
  Environment: [AwsOpsWorksSoInput]
}

type AwsOpsWorksCreateAppOutput {
  AppId: String
}

input AwsOpsWorksCreateDeploymentInput {
  StackId: String!
  AppId: String
  InstanceIds: [String]
  LayerIds: [String]
  Command: AwsOpsWorksSsInput!
  Comment: String
  CustomJson: String
}

type AwsOpsWorksCreateDeploymentOutput {
  DeploymentId: String
}

input AwsOpsWorksCreateInstanceInput {
  StackId: String!
  LayerIds: [String]!
  InstanceType: String!
  AutoScalingType: String
  Hostname: String
  Os: String
  AmiId: String
  SshKeyName: String
  AvailabilityZone: String
  VirtualizationType: String
  SubnetId: String
  Architecture: String
  RootDeviceType: String
  BlockDeviceMappings: [AwsOpsWorksSzInput]
  InstallUpdatesOnBoot: Boolean
  EbsOptimized: Boolean
  AgentVersion: String
  Tenancy: String
}

type AwsOpsWorksCreateInstanceOutput {
  InstanceId: String
}

input AwsOpsWorksCreateLayerInput {
  StackId: String!
  Type: String!
  Name: String!
  Shortname: String!
  Attributes: JSON
  CloudWatchLogsConfiguration: AwsOpsWorksS19Input
  CustomInstanceProfileArn: String
  CustomJson: String
  CustomSecurityGroupIds: [String]
  Packages: [String]
  VolumeConfigurations: [AwsOpsWorksS1fInput]
  EnableAutoHealing: Boolean
  AutoAssignElasticIps: Boolean
  AutoAssignPublicIps: Boolean
  CustomRecipes: AwsOpsWorksS1hInput
  InstallUpdatesOnBoot: Boolean
  UseEbsOptimizedInstances: Boolean
  LifecycleEventConfiguration: AwsOpsWorksS1iInput
}

type AwsOpsWorksCreateLayerOutput {
  LayerId: String
}

input AwsOpsWorksCreateStackInput {
  Name: String!
  Region: String!
  VpcId: String
  Attributes: JSON
  ServiceRoleArn: String!
  DefaultInstanceProfileArn: String!
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsWorksSaInput
  ChefConfiguration: AwsOpsWorksSbInput
  UseCustomCookbooks: Boolean
  UseOpsworksSecurityGroups: Boolean
  CustomCookbooksSource: AwsOpsWorksSdInput
  DefaultSshKeyName: String
  DefaultRootDeviceType: String
  AgentVersion: String
}

type AwsOpsWorksCreateStackOutput {
  StackId: String
}

input AwsOpsWorksCreateUserProfileInput {
  IamUserArn: String!
  SshUsername: String
  SshPublicKey: String
  AllowSelfManagement: Boolean
}

type AwsOpsWorksCreateUserProfileOutput {
  IamUserArn: String
}

input AwsOpsWorksDeleteAppInput {
  AppId: String!
}

input AwsOpsWorksDeleteInstanceInput {
  InstanceId: String!
  DeleteElasticIp: Boolean
  DeleteVolumes: Boolean
}

input AwsOpsWorksDeleteLayerInput {
  LayerId: String!
}

input AwsOpsWorksDeleteStackInput {
  StackId: String!
}

input AwsOpsWorksDeleteUserProfileInput {
  IamUserArn: String!
}

input AwsOpsWorksDeregisterEcsClusterInput {
  EcsClusterArn: String!
}

input AwsOpsWorksDeregisterElasticIpInput {
  ElasticIp: String!
}

input AwsOpsWorksDeregisterInstanceInput {
  InstanceId: String!
}

input AwsOpsWorksDeregisterRdsDbInstanceInput {
  RdsDbInstanceArn: String!
}

input AwsOpsWorksDeregisterVolumeInput {
  VolumeId: String!
}

input AwsOpsWorksDescribeAgentVersionsInput {
  StackId: String
  ConfigurationManager: AwsOpsWorksSaInput
}

type AwsOpsWorksDescribeAgentVersionsOutput {
  AgentVersions: [AwsOpsWorksDescribeAgentVersionsOutputAgentVersions]
}

type AwsOpsWorksDescribeAgentVersionsOutputAgentVersions {
  Version: String
  ConfigurationManager: AwsOpsWorksSa
}

input AwsOpsWorksDescribeAppsInput {
  StackId: String
  AppIds: [String]
}

type AwsOpsWorksDescribeAppsOutput {
  Apps: [AwsOpsWorksDescribeAppsOutputApps]
}

type AwsOpsWorksDescribeAppsOutputApps {
  AppId: String
  StackId: String
  Shortname: String
  Name: String
  Description: String
  DataSources: [AwsOpsWorksSi]
  Type: String
  AppSource: AwsOpsWorksSd
  Domains: [String]
  EnableSsl: Boolean
  SslConfiguration: AwsOpsWorksSl
  Attributes: JSON
  CreatedAt: String
  Environment: [AwsOpsWorksSo]
}

input AwsOpsWorksDescribeCommandsInput {
  DeploymentId: String
  InstanceId: String
  CommandIds: [String]
}

type AwsOpsWorksDescribeCommandsOutput {
  Commands: [AwsOpsWorksDescribeCommandsOutputCommands]
}

type AwsOpsWorksDescribeCommandsOutputCommands {
  CommandId: String
  InstanceId: String
  DeploymentId: String
  CreatedAt: String
  AcknowledgedAt: String
  CompletedAt: String
  Status: String
  ExitCode: Int
  LogUrl: String
  Type: String
}

input AwsOpsWorksDescribeDeploymentsInput {
  StackId: String
  AppId: String
  DeploymentIds: [String]
}

type AwsOpsWorksDescribeDeploymentsOutput {
  Deployments: [AwsOpsWorksDescribeDeploymentsOutputDeployments]
}

type AwsOpsWorksDescribeDeploymentsOutputDeployments {
  DeploymentId: String
  StackId: String
  AppId: String
  CreatedAt: String
  CompletedAt: String
  Duration: Int
  IamUserArn: String
  Comment: String
  Command: AwsOpsWorksSs
  Status: String
  CustomJson: String
  InstanceIds: [String]
}

input AwsOpsWorksDescribeEcsClustersInput {
  EcsClusterArns: [String]
  StackId: String
  NextToken: String
  MaxResults: Int
}

type AwsOpsWorksDescribeEcsClustersOutput {
  EcsClusters: [AwsOpsWorksDescribeEcsClustersOutputEcsClusters]
  NextToken: String
}

type AwsOpsWorksDescribeEcsClustersOutputEcsClusters {
  EcsClusterArn: String
  EcsClusterName: String
  StackId: String
  RegisteredAt: String
}

input AwsOpsWorksDescribeElasticIpsInput {
  InstanceId: String
  StackId: String
  Ips: [String]
}

type AwsOpsWorksDescribeElasticIpsOutput {
  ElasticIps: [AwsOpsWorksDescribeElasticIpsOutputElasticIps]
}

type AwsOpsWorksDescribeElasticIpsOutputElasticIps {
  Ip: String
  Name: String
  Domain: String
  Region: String
  InstanceId: String
}

input AwsOpsWorksDescribeElasticLoadBalancersInput {
  StackId: String
  LayerIds: [String]
}

type AwsOpsWorksDescribeElasticLoadBalancersOutput {
  ElasticLoadBalancers: [AwsOpsWorksDescribeElasticLoadBalancersOutputElasticLoadBalancers]
}

type AwsOpsWorksDescribeElasticLoadBalancersOutputElasticLoadBalancers {
  ElasticLoadBalancerName: String
  Region: String
  DnsName: String
  StackId: String
  LayerId: String
  VpcId: String
  AvailabilityZones: [String]
  SubnetIds: [String]
  Ec2InstanceIds: [String]
}

input AwsOpsWorksDescribeInstancesInput {
  StackId: String
  LayerId: String
  InstanceIds: [String]
}

type AwsOpsWorksDescribeInstancesOutput {
  Instances: [AwsOpsWorksDescribeInstancesOutputInstances]
}

type AwsOpsWorksDescribeInstancesOutputInstances {
  AgentVersion: String
  AmiId: String
  Architecture: String
  Arn: String
  AutoScalingType: String
  AvailabilityZone: String
  BlockDeviceMappings: [AwsOpsWorksSz]
  CreatedAt: String
  EbsOptimized: Boolean
  Ec2InstanceId: String
  EcsClusterArn: String
  EcsContainerInstanceArn: String
  ElasticIp: String
  Hostname: String
  InfrastructureClass: String
  InstallUpdatesOnBoot: Boolean
  InstanceId: String
  InstanceProfileArn: String
  InstanceType: String
  LastServiceErrorId: String
  LayerIds: [String]
  Os: String
  Platform: String
  PrivateDns: String
  PrivateIp: String
  PublicDns: String
  PublicIp: String
  RegisteredBy: String
  ReportedAgentVersion: String
  ReportedOs: AwsOpsWorksDescribeInstancesOutputInstancesReportedOs
  RootDeviceType: String
  RootDeviceVolumeId: String
  SecurityGroupIds: [String]
  SshHostDsaKeyFingerprint: String
  SshHostRsaKeyFingerprint: String
  SshKeyName: String
  StackId: String
  Status: String
  SubnetId: String
  Tenancy: String
  VirtualizationType: String
}

type AwsOpsWorksDescribeInstancesOutputInstancesReportedOs {
  Family: String
  Name: String
  Version: String
}

input AwsOpsWorksDescribeLayersInput {
  StackId: String
  LayerIds: [String]
}

type AwsOpsWorksDescribeLayersOutput {
  Layers: [AwsOpsWorksDescribeLayersOutputLayers]
}

type AwsOpsWorksDescribeLayersOutputLayers {
  Arn: String
  StackId: String
  LayerId: String
  Type: String
  Name: String
  Shortname: String
  Attributes: JSON
  CloudWatchLogsConfiguration: AwsOpsWorksS19
  CustomInstanceProfileArn: String
  CustomJson: String
  CustomSecurityGroupIds: [String]
  DefaultSecurityGroupNames: [String]
  Packages: [String]
  VolumeConfigurations: [AwsOpsWorksS1f]
  EnableAutoHealing: Boolean
  AutoAssignElasticIps: Boolean
  AutoAssignPublicIps: Boolean
  DefaultRecipes: AwsOpsWorksS1h
  CustomRecipes: AwsOpsWorksS1h
  CreatedAt: String
  InstallUpdatesOnBoot: Boolean
  UseEbsOptimizedInstances: Boolean
  LifecycleEventConfiguration: AwsOpsWorksS1i
}

input AwsOpsWorksDescribeLoadBasedAutoScalingInput {
  LayerIds: [String]!
}

type AwsOpsWorksDescribeLoadBasedAutoScalingOutput {
  LoadBasedAutoScalingConfigurations: [AwsOpsWorksDescribeLoadBasedAutoScalingOutputLoadBasedAutoScalingConfigurations]
}

type AwsOpsWorksDescribeLoadBasedAutoScalingOutputLoadBasedAutoScalingConfigurations {
  LayerId: String
  Enable: Boolean
  UpScaling: AwsOpsWorksS36
  DownScaling: AwsOpsWorksS36
}

type AwsOpsWorksDescribeMyUserProfileOutput {
  UserProfile: AwsOpsWorksDescribeMyUserProfileOutputUserProfile
}

type AwsOpsWorksDescribeMyUserProfileOutputUserProfile {
  IamUserArn: String
  Name: String
  SshUsername: String
  SshPublicKey: String
}

type AwsOpsWorksDescribeOperatingSystemsOutput {
  OperatingSystems: [AwsOpsWorksDescribeOperatingSystemsOutputOperatingSystems]
}

type AwsOpsWorksDescribeOperatingSystemsOutputOperatingSystems {
  Name: String
  Id: String
  Type: String
  ConfigurationManagers: [AwsOpsWorksDescribeOperatingSystemsOutputOperatingSystemsConfigurationManagers]
  ReportedName: String
  ReportedVersion: String
  Supported: Boolean
}

type AwsOpsWorksDescribeOperatingSystemsOutputOperatingSystemsConfigurationManagers {
  Name: String
  Version: String
}

input AwsOpsWorksDescribePermissionsInput {
  IamUserArn: String
  StackId: String
}

type AwsOpsWorksDescribePermissionsOutput {
  Permissions: [AwsOpsWorksDescribePermissionsOutputPermissions]
}

type AwsOpsWorksDescribePermissionsOutputPermissions {
  StackId: String
  IamUserArn: String
  AllowSsh: Boolean
  AllowSudo: Boolean
  Level: String
}

input AwsOpsWorksDescribeRaidArraysInput {
  InstanceId: String
  StackId: String
  RaidArrayIds: [String]
}

type AwsOpsWorksDescribeRaidArraysOutput {
  RaidArrays: [AwsOpsWorksDescribeRaidArraysOutputRaidArrays]
}

type AwsOpsWorksDescribeRaidArraysOutputRaidArrays {
  RaidArrayId: String
  InstanceId: String
  Name: String
  RaidLevel: Int
  NumberOfDisks: Int
  Size: Int
  Device: String
  MountPoint: String
  AvailabilityZone: String
  CreatedAt: String
  StackId: String
  VolumeType: String
  Iops: Int
}

input AwsOpsWorksDescribeRdsDbInstancesInput {
  StackId: String!
  RdsDbInstanceArns: [String]
}

type AwsOpsWorksDescribeRdsDbInstancesOutput {
  RdsDbInstances: [AwsOpsWorksDescribeRdsDbInstancesOutputRdsDbInstances]
}

type AwsOpsWorksDescribeRdsDbInstancesOutputRdsDbInstances {
  RdsDbInstanceArn: String
  DbInstanceIdentifier: String
  DbUser: String
  DbPassword: String
  Region: String
  Address: String
  Engine: String
  StackId: String
  MissingOnRds: Boolean
}

input AwsOpsWorksDescribeServiceErrorsInput {
  StackId: String
  InstanceId: String
  ServiceErrorIds: [String]
}

type AwsOpsWorksDescribeServiceErrorsOutput {
  ServiceErrors: [AwsOpsWorksDescribeServiceErrorsOutputServiceErrors]
}

type AwsOpsWorksDescribeServiceErrorsOutputServiceErrors {
  ServiceErrorId: String
  StackId: String
  InstanceId: String
  Type: String
  Message: String
  CreatedAt: String
}

input AwsOpsWorksDescribeStackProvisioningParametersInput {
  StackId: String!
}

type AwsOpsWorksDescribeStackProvisioningParametersOutput {
  AgentInstallerUrl: String
  Parameters: JSON
}

input AwsOpsWorksDescribeStacksInput {
  StackIds: [String]
}

type AwsOpsWorksDescribeStacksOutput {
  Stacks: [AwsOpsWorksDescribeStacksOutputStacks]
}

type AwsOpsWorksDescribeStacksOutputStacks {
  StackId: String
  Name: String
  Arn: String
  Region: String
  VpcId: String
  Attributes: JSON
  ServiceRoleArn: String
  DefaultInstanceProfileArn: String
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsWorksSa
  ChefConfiguration: AwsOpsWorksSb
  UseCustomCookbooks: Boolean
  UseOpsworksSecurityGroups: Boolean
  CustomCookbooksSource: AwsOpsWorksSd
  DefaultSshKeyName: String
  CreatedAt: String
  DefaultRootDeviceType: String
  AgentVersion: String
}

input AwsOpsWorksDescribeStackSummaryInput {
  StackId: String!
}

type AwsOpsWorksDescribeStackSummaryOutput {
  StackSummary: AwsOpsWorksDescribeStackSummaryOutputStackSummary
}

type AwsOpsWorksDescribeStackSummaryOutputStackSummary {
  StackId: String
  Name: String
  Arn: String
  LayersCount: Int
  AppsCount: Int
  InstancesCount: AwsOpsWorksDescribeStackSummaryOutputStackSummaryInstancesCount
}

type AwsOpsWorksDescribeStackSummaryOutputStackSummaryInstancesCount {
  Assigning: Int
  Booting: Int
  ConnectionLost: Int
  Deregistering: Int
  Online: Int
  Pending: Int
  Rebooting: Int
  Registered: Int
  Registering: Int
  Requested: Int
  RunningSetup: Int
  SetupFailed: Int
  ShuttingDown: Int
  StartFailed: Int
  StopFailed: Int
  Stopped: Int
  Stopping: Int
  Terminated: Int
  Terminating: Int
  Unassigning: Int
}

input AwsOpsWorksDescribeTimeBasedAutoScalingInput {
  InstanceIds: [String]!
}

type AwsOpsWorksDescribeTimeBasedAutoScalingOutput {
  TimeBasedAutoScalingConfigurations: [AwsOpsWorksDescribeTimeBasedAutoScalingOutputTimeBasedAutoScalingConfigurations]
}

type AwsOpsWorksDescribeTimeBasedAutoScalingOutputTimeBasedAutoScalingConfigurations {
  InstanceId: String
  AutoScalingSchedule: AwsOpsWorksS4b
}

input AwsOpsWorksDescribeUserProfilesInput {
  IamUserArns: [String]
}

type AwsOpsWorksDescribeUserProfilesOutput {
  UserProfiles: [AwsOpsWorksDescribeUserProfilesOutputUserProfiles]
}

type AwsOpsWorksDescribeUserProfilesOutputUserProfiles {
  IamUserArn: String
  Name: String
  SshUsername: String
  SshPublicKey: String
  AllowSelfManagement: Boolean
}

input AwsOpsWorksDescribeVolumesInput {
  InstanceId: String
  StackId: String
  RaidArrayId: String
  VolumeIds: [String]
}

type AwsOpsWorksDescribeVolumesOutput {
  Volumes: [AwsOpsWorksDescribeVolumesOutputVolumes]
}

type AwsOpsWorksDescribeVolumesOutputVolumes {
  VolumeId: String
  Ec2VolumeId: String
  Name: String
  RaidArrayId: String
  InstanceId: String
  Status: String
  Size: Int
  Device: String
  MountPoint: String
  Region: String
  AvailabilityZone: String
  VolumeType: String
  Iops: Int
  Encrypted: Boolean
}

input AwsOpsWorksDetachElasticLoadBalancerInput {
  ElasticLoadBalancerName: String!
  LayerId: String!
}

input AwsOpsWorksDisassociateElasticIpInput {
  ElasticIp: String!
}

input AwsOpsWorksGetHostnameSuggestionInput {
  LayerId: String!
}

type AwsOpsWorksGetHostnameSuggestionOutput {
  LayerId: String
  Hostname: String
}

input AwsOpsWorksGrantAccessInput {
  InstanceId: String!
  ValidForInMinutes: Int
}

type AwsOpsWorksGrantAccessOutput {
  TemporaryCredential: AwsOpsWorksGrantAccessOutputTemporaryCredential
}

type AwsOpsWorksGrantAccessOutputTemporaryCredential {
  Username: String
  Password: String
  ValidForInMinutes: Int
  InstanceId: String
}

input AwsOpsWorksListTagsInput {
  ResourceArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsOpsWorksListTagsOutput {
  Tags: JSON
  NextToken: String
}

input AwsOpsWorksRebootInstanceInput {
  InstanceId: String!
}

input AwsOpsWorksRegisterEcsClusterInput {
  EcsClusterArn: String!
  StackId: String!
}

type AwsOpsWorksRegisterEcsClusterOutput {
  EcsClusterArn: String
}

input AwsOpsWorksRegisterElasticIpInput {
  ElasticIp: String!
  StackId: String!
}

type AwsOpsWorksRegisterElasticIpOutput {
  ElasticIp: String
}

input AwsOpsWorksRegisterInstanceInput {
  StackId: String!
  Hostname: String
  PublicIp: String
  PrivateIp: String
  RsaPublicKey: String
  RsaPublicKeyFingerprint: String
  InstanceIdentity: AwsOpsWorksRegisterInstanceInstanceIdentityInput
}

input AwsOpsWorksRegisterInstanceInstanceIdentityInput {
  Document: String
  Signature: String
}

type AwsOpsWorksRegisterInstanceOutput {
  InstanceId: String
}

input AwsOpsWorksRegisterRdsDbInstanceInput {
  StackId: String!
  RdsDbInstanceArn: String!
  DbUser: String!
  DbPassword: String!
}

input AwsOpsWorksRegisterVolumeInput {
  Ec2VolumeId: String
  StackId: String!
}

type AwsOpsWorksRegisterVolumeOutput {
  VolumeId: String
}

type AwsOpsWorksS19 {
  Enabled: Boolean
  LogStreams: [AwsOpsWorksS19LogStreams]
}

input AwsOpsWorksS19Input {
  Enabled: Boolean
  LogStreams: [AwsOpsWorksS19LogStreamsInput]
}

type AwsOpsWorksS19LogStreams {
  LogGroupName: String
  DatetimeFormat: String
  TimeZone: String
  File: String
  FileFingerprintLines: String
  MultiLineStartPattern: String
  InitialPosition: String
  Encoding: String
  BufferDuration: Int
  BatchCount: Int
  BatchSize: Int
}

input AwsOpsWorksS19LogStreamsInput {
  LogGroupName: String
  DatetimeFormat: String
  TimeZone: String
  File: String
  FileFingerprintLines: String
  MultiLineStartPattern: String
  InitialPosition: String
  Encoding: String
  BufferDuration: Int
  BatchCount: Int
  BatchSize: Int
}

type AwsOpsWorksS1f {
  MountPoint: String!
  RaidLevel: Int
  NumberOfDisks: Int!
  Size: Int!
  VolumeType: String
  Iops: Int
  Encrypted: Boolean
}

input AwsOpsWorksS1fInput {
  MountPoint: String!
  RaidLevel: Int
  NumberOfDisks: Int!
  Size: Int!
  VolumeType: String
  Iops: Int
  Encrypted: Boolean
}

type AwsOpsWorksS1h {
  Setup: [String]
  Configure: [String]
  Deploy: [String]
  Undeploy: [String]
  Shutdown: [String]
}

input AwsOpsWorksS1hInput {
  Setup: [String]
  Configure: [String]
  Deploy: [String]
  Undeploy: [String]
  Shutdown: [String]
}

type AwsOpsWorksS1i {
  Shutdown: AwsOpsWorksS1iShutdown
}

input AwsOpsWorksS1iInput {
  Shutdown: AwsOpsWorksS1iShutdownInput
}

type AwsOpsWorksS1iShutdown {
  ExecutionTimeout: Int
  DelayUntilElbConnectionsDrained: Boolean
}

input AwsOpsWorksS1iShutdownInput {
  ExecutionTimeout: Int
  DelayUntilElbConnectionsDrained: Boolean
}

type AwsOpsWorksS36 {
  InstanceCount: Int
  ThresholdsWaitTime: Int
  IgnoreMetricsTime: Int
  CpuThreshold: JSON
  MemoryThreshold: JSON
  LoadThreshold: JSON
  Alarms: [String]
}

input AwsOpsWorksS36Input {
  InstanceCount: Int
  ThresholdsWaitTime: Int
  IgnoreMetricsTime: Int
  CpuThreshold: JSON
  MemoryThreshold: JSON
  LoadThreshold: JSON
  Alarms: [String]
}

type AwsOpsWorksS4b {
  Monday: JSON
  Tuesday: JSON
  Wednesday: JSON
  Thursday: JSON
  Friday: JSON
  Saturday: JSON
  Sunday: JSON
}

input AwsOpsWorksS4bInput {
  Monday: JSON
  Tuesday: JSON
  Wednesday: JSON
  Thursday: JSON
  Friday: JSON
  Saturday: JSON
  Sunday: JSON
}

type AwsOpsWorksSa {
  Name: String
  Version: String
}

input AwsOpsWorksSaInput {
  Name: String
  Version: String
}

type AwsOpsWorksSb {
  ManageBerkshelf: Boolean
  BerkshelfVersion: String
}

input AwsOpsWorksSbInput {
  ManageBerkshelf: Boolean
  BerkshelfVersion: String
}

type AwsOpsWorksSd {
  Type: String
  Url: String
  Username: String
  Password: String
  SshKey: String
  Revision: String
}

input AwsOpsWorksSdInput {
  Type: String
  Url: String
  Username: String
  Password: String
  SshKey: String
  Revision: String
}

input AwsOpsWorksSetLoadBasedAutoScalingInput {
  LayerId: String!
  Enable: Boolean
  UpScaling: AwsOpsWorksS36Input
  DownScaling: AwsOpsWorksS36Input
}

input AwsOpsWorksSetPermissionInput {
  StackId: String!
  IamUserArn: String!
  AllowSsh: Boolean
  AllowSudo: Boolean
  Level: String
}

input AwsOpsWorksSetTimeBasedAutoScalingInput {
  InstanceId: String!
  AutoScalingSchedule: AwsOpsWorksS4bInput
}

type AwsOpsWorksSi {
  Type: String
  Arn: String
  DatabaseName: String
}

input AwsOpsWorksSiInput {
  Type: String
  Arn: String
  DatabaseName: String
}

type AwsOpsWorksSl {
  Certificate: String!
  PrivateKey: String!
  Chain: String
}

input AwsOpsWorksSlInput {
  Certificate: String!
  PrivateKey: String!
  Chain: String
}

type AwsOpsWorksSo {
  Key: String!
  Value: String!
  Secure: Boolean
}

input AwsOpsWorksSoInput {
  Key: String!
  Value: String!
  Secure: Boolean
}

type AwsOpsWorksSs {
  Name: String!
  Args: JSON
}

input AwsOpsWorksSsInput {
  Name: String!
  Args: JSON
}

input AwsOpsWorksStartInstanceInput {
  InstanceId: String!
}

input AwsOpsWorksStartStackInput {
  StackId: String!
}

input AwsOpsWorksStopInstanceInput {
  InstanceId: String!
  Force: Boolean
}

input AwsOpsWorksStopStackInput {
  StackId: String!
}

type AwsOpsWorksSz {
  DeviceName: String
  NoDevice: String
  VirtualName: String
  Ebs: AwsOpsWorksSzEbs
}

type AwsOpsWorksSzEbs {
  SnapshotId: String
  Iops: Int
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
}

input AwsOpsWorksSzEbsInput {
  SnapshotId: String
  Iops: Int
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
}

input AwsOpsWorksSzInput {
  DeviceName: String
  NoDevice: String
  VirtualName: String
  Ebs: AwsOpsWorksSzEbsInput
}

input AwsOpsWorksTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsOpsWorksUnassignInstanceInput {
  InstanceId: String!
}

input AwsOpsWorksUnassignVolumeInput {
  VolumeId: String!
}

input AwsOpsWorksUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsOpsWorksUpdateAppInput {
  AppId: String!
  Name: String
  Description: String
  DataSources: [AwsOpsWorksSiInput]
  Type: String
  AppSource: AwsOpsWorksSdInput
  Domains: [String]
  EnableSsl: Boolean
  SslConfiguration: AwsOpsWorksSlInput
  Attributes: JSON
  Environment: [AwsOpsWorksSoInput]
}

input AwsOpsWorksUpdateElasticIpInput {
  ElasticIp: String!
  Name: String
}

input AwsOpsWorksUpdateInstanceInput {
  InstanceId: String!
  LayerIds: [String]
  InstanceType: String
  AutoScalingType: String
  Hostname: String
  Os: String
  AmiId: String
  SshKeyName: String
  Architecture: String
  InstallUpdatesOnBoot: Boolean
  EbsOptimized: Boolean
  AgentVersion: String
}

input AwsOpsWorksUpdateLayerInput {
  LayerId: String!
  Name: String
  Shortname: String
  Attributes: JSON
  CloudWatchLogsConfiguration: AwsOpsWorksS19Input
  CustomInstanceProfileArn: String
  CustomJson: String
  CustomSecurityGroupIds: [String]
  Packages: [String]
  VolumeConfigurations: [AwsOpsWorksS1fInput]
  EnableAutoHealing: Boolean
  AutoAssignElasticIps: Boolean
  AutoAssignPublicIps: Boolean
  CustomRecipes: AwsOpsWorksS1hInput
  InstallUpdatesOnBoot: Boolean
  UseEbsOptimizedInstances: Boolean
  LifecycleEventConfiguration: AwsOpsWorksS1iInput
}

input AwsOpsWorksUpdateMyUserProfileInput {
  SshPublicKey: String
}

input AwsOpsWorksUpdateRdsDbInstanceInput {
  RdsDbInstanceArn: String!
  DbUser: String
  DbPassword: String
}

input AwsOpsWorksUpdateStackInput {
  StackId: String!
  Name: String
  Attributes: JSON
  ServiceRoleArn: String
  DefaultInstanceProfileArn: String
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsWorksSaInput
  ChefConfiguration: AwsOpsWorksSbInput
  UseCustomCookbooks: Boolean
  CustomCookbooksSource: AwsOpsWorksSdInput
  DefaultSshKeyName: String
  DefaultRootDeviceType: String
  UseOpsworksSecurityGroups: Boolean
  AgentVersion: String
}

input AwsOpsWorksUpdateUserProfileInput {
  IamUserArn: String!
  SshUsername: String
  SshPublicKey: String
  AllowSelfManagement: Boolean
}

input AwsOpsWorksUpdateVolumeInput {
  VolumeId: String!
  Name: String
  MountPoint: String
}

"""AWS Organizations (2016-11-28)"""
type AwsOrganizations {
  acceptHandshake(input: AwsOrganizationsAcceptHandshakeInput!, config: AwsConfig): AwsOrganizationsAcceptHandshakeOutput
  attachPolicy(input: AwsOrganizationsAttachPolicyInput!, config: AwsConfig): JSON
  cancelHandshake(input: AwsOrganizationsCancelHandshakeInput!, config: AwsConfig): AwsOrganizationsCancelHandshakeOutput
  createAccount(input: AwsOrganizationsCreateAccountInput!, config: AwsConfig): AwsOrganizationsCreateAccountOutput
  createGovCloudAccount(input: AwsOrganizationsCreateGovCloudAccountInput!, config: AwsConfig): AwsOrganizationsCreateGovCloudAccountOutput
  createOrganization(input: AwsOrganizationsCreateOrganizationInput, config: AwsConfig): AwsOrganizationsCreateOrganizationOutput
  createOrganizationalUnit(input: AwsOrganizationsCreateOrganizationalUnitInput!, config: AwsConfig): AwsOrganizationsCreateOrganizationalUnitOutput
  createPolicy(input: AwsOrganizationsCreatePolicyInput!, config: AwsConfig): AwsOrganizationsCreatePolicyOutput
  declineHandshake(input: AwsOrganizationsDeclineHandshakeInput!, config: AwsConfig): AwsOrganizationsDeclineHandshakeOutput
  deleteOrganization(config: AwsConfig): JSON
  deleteOrganizationalUnit(input: AwsOrganizationsDeleteOrganizationalUnitInput!, config: AwsConfig): JSON
  deletePolicy(input: AwsOrganizationsDeletePolicyInput!, config: AwsConfig): JSON
  describeAccount(input: AwsOrganizationsDescribeAccountInput!, config: AwsConfig): AwsOrganizationsDescribeAccountOutput
  describeCreateAccountStatus(input: AwsOrganizationsDescribeCreateAccountStatusInput!, config: AwsConfig): AwsOrganizationsDescribeCreateAccountStatusOutput
  describeHandshake(input: AwsOrganizationsDescribeHandshakeInput!, config: AwsConfig): AwsOrganizationsDescribeHandshakeOutput
  describeOrganization(config: AwsConfig): AwsOrganizationsDescribeOrganizationOutput
  describeOrganizationalUnit(input: AwsOrganizationsDescribeOrganizationalUnitInput!, config: AwsConfig): AwsOrganizationsDescribeOrganizationalUnitOutput
  describePolicy(input: AwsOrganizationsDescribePolicyInput!, config: AwsConfig): AwsOrganizationsDescribePolicyOutput
  detachPolicy(input: AwsOrganizationsDetachPolicyInput!, config: AwsConfig): JSON
  disableAWSServiceAccess(input: AwsOrganizationsDisableAWSServiceAccessInput!, config: AwsConfig): JSON
  disablePolicyType(input: AwsOrganizationsDisablePolicyTypeInput!, config: AwsConfig): AwsOrganizationsDisablePolicyTypeOutput
  enableAWSServiceAccess(input: AwsOrganizationsEnableAWSServiceAccessInput!, config: AwsConfig): JSON
  enableAllFeatures(input: JSON, config: AwsConfig): AwsOrganizationsEnableAllFeaturesOutput
  enablePolicyType(input: AwsOrganizationsEnablePolicyTypeInput!, config: AwsConfig): AwsOrganizationsEnablePolicyTypeOutput
  inviteAccountToOrganization(input: AwsOrganizationsInviteAccountToOrganizationInput!, config: AwsConfig): AwsOrganizationsInviteAccountToOrganizationOutput
  leaveOrganization(config: AwsConfig): JSON
  listAWSServiceAccessForOrganization(input: AwsOrganizationsListAWSServiceAccessForOrganizationInput, config: AwsConfig): AwsOrganizationsListAWSServiceAccessForOrganizationOutput
  listAccounts(input: AwsOrganizationsListAccountsInput, config: AwsConfig): AwsOrganizationsListAccountsOutput
  listAccountsForParent(input: AwsOrganizationsListAccountsForParentInput!, config: AwsConfig): AwsOrganizationsListAccountsForParentOutput
  listChildren(input: AwsOrganizationsListChildrenInput!, config: AwsConfig): AwsOrganizationsListChildrenOutput
  listCreateAccountStatus(input: AwsOrganizationsListCreateAccountStatusInput, config: AwsConfig): AwsOrganizationsListCreateAccountStatusOutput
  listHandshakesForAccount(input: AwsOrganizationsListHandshakesForAccountInput, config: AwsConfig): AwsOrganizationsListHandshakesForAccountOutput
  listHandshakesForOrganization(input: AwsOrganizationsListHandshakesForOrganizationInput, config: AwsConfig): AwsOrganizationsListHandshakesForOrganizationOutput
  listOrganizationalUnitsForParent(input: AwsOrganizationsListOrganizationalUnitsForParentInput!, config: AwsConfig): AwsOrganizationsListOrganizationalUnitsForParentOutput
  listParents(input: AwsOrganizationsListParentsInput!, config: AwsConfig): AwsOrganizationsListParentsOutput
  listPolicies(input: AwsOrganizationsListPoliciesInput!, config: AwsConfig): AwsOrganizationsListPoliciesOutput
  listPoliciesForTarget(input: AwsOrganizationsListPoliciesForTargetInput!, config: AwsConfig): AwsOrganizationsListPoliciesForTargetOutput
  listRoots(input: AwsOrganizationsListRootsInput, config: AwsConfig): AwsOrganizationsListRootsOutput
  listTagsForResource(input: AwsOrganizationsListTagsForResourceInput!, config: AwsConfig): AwsOrganizationsListTagsForResourceOutput
  listTargetsForPolicy(input: AwsOrganizationsListTargetsForPolicyInput!, config: AwsConfig): AwsOrganizationsListTargetsForPolicyOutput
  moveAccount(input: AwsOrganizationsMoveAccountInput!, config: AwsConfig): JSON
  removeAccountFromOrganization(input: AwsOrganizationsRemoveAccountFromOrganizationInput!, config: AwsConfig): JSON
  tagResource(input: AwsOrganizationsTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsOrganizationsUntagResourceInput!, config: AwsConfig): JSON
  updateOrganizationalUnit(input: AwsOrganizationsUpdateOrganizationalUnitInput!, config: AwsConfig): AwsOrganizationsUpdateOrganizationalUnitOutput
  updatePolicy(input: AwsOrganizationsUpdatePolicyInput!, config: AwsConfig): AwsOrganizationsUpdatePolicyOutput
}

input AwsOrganizationsAcceptHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsAcceptHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsAttachPolicyInput {
  PolicyId: String!
  TargetId: String!
}

input AwsOrganizationsCancelHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsCancelHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsCreateAccountInput {
  Email: String!
  AccountName: String!
  RoleName: String
  IamUserAccessToBilling: String
}

type AwsOrganizationsCreateAccountOutput {
  CreateAccountStatus: AwsOrganizationsSs
}

input AwsOrganizationsCreateGovCloudAccountInput {
  Email: String!
  AccountName: String!
  RoleName: String
  IamUserAccessToBilling: String
}

type AwsOrganizationsCreateGovCloudAccountOutput {
  CreateAccountStatus: AwsOrganizationsSs
}

input AwsOrganizationsCreateOrganizationalUnitInput {
  ParentId: String!
  Name: String!
}

type AwsOrganizationsCreateOrganizationalUnitOutput {
  OrganizationalUnit: AwsOrganizationsS1e
}

input AwsOrganizationsCreateOrganizationInput {
  FeatureSet: String
}

type AwsOrganizationsCreateOrganizationOutput {
  Organization: AwsOrganizationsS12
}

input AwsOrganizationsCreatePolicyInput {
  Content: String!
  Description: String!
  Name: String!
  Type: String!
}

type AwsOrganizationsCreatePolicyOutput {
  Policy: AwsOrganizationsS1m
}

input AwsOrganizationsDeclineHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsDeclineHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsDeleteOrganizationalUnitInput {
  OrganizationalUnitId: String!
}

input AwsOrganizationsDeletePolicyInput {
  PolicyId: String!
}

input AwsOrganizationsDescribeAccountInput {
  AccountId: String!
}

type AwsOrganizationsDescribeAccountOutput {
  Account: AwsOrganizationsS1w
}

input AwsOrganizationsDescribeCreateAccountStatusInput {
  CreateAccountRequestId: String!
}

type AwsOrganizationsDescribeCreateAccountStatusOutput {
  CreateAccountStatus: AwsOrganizationsSs
}

input AwsOrganizationsDescribeHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsDescribeHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsDescribeOrganizationalUnitInput {
  OrganizationalUnitId: String!
}

type AwsOrganizationsDescribeOrganizationalUnitOutput {
  OrganizationalUnit: AwsOrganizationsS1e
}

type AwsOrganizationsDescribeOrganizationOutput {
  Organization: AwsOrganizationsS12
}

input AwsOrganizationsDescribePolicyInput {
  PolicyId: String!
}

type AwsOrganizationsDescribePolicyOutput {
  Policy: AwsOrganizationsS1m
}

input AwsOrganizationsDetachPolicyInput {
  PolicyId: String!
  TargetId: String!
}

input AwsOrganizationsDisableAWSServiceAccessInput {
  ServicePrincipal: String!
}

input AwsOrganizationsDisablePolicyTypeInput {
  RootId: String!
  PolicyType: String!
}

type AwsOrganizationsDisablePolicyTypeOutput {
  Root: AwsOrganizationsS2e
}

type AwsOrganizationsEnableAllFeaturesOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsEnableAWSServiceAccessInput {
  ServicePrincipal: String!
}

input AwsOrganizationsEnablePolicyTypeInput {
  RootId: String!
  PolicyType: String!
}

type AwsOrganizationsEnablePolicyTypeOutput {
  Root: AwsOrganizationsS2e
}

input AwsOrganizationsInviteAccountToOrganizationInput {
  Target: AwsOrganizationsS7Input!
  Notes: String
}

type AwsOrganizationsInviteAccountToOrganizationOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsListAccountsForParentInput {
  ParentId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListAccountsForParentOutput {
  Accounts: [AwsOrganizationsS1w]
  NextToken: String
}

input AwsOrganizationsListAccountsInput {
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListAccountsOutput {
  Accounts: [AwsOrganizationsS1w]
  NextToken: String
}

input AwsOrganizationsListAWSServiceAccessForOrganizationInput {
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListAWSServiceAccessForOrganizationOutput {
  EnabledServicePrincipals: [AwsOrganizationsListAWSServiceAccessForOrganizationOutputEnabledServicePrincipals]
  NextToken: String
}

type AwsOrganizationsListAWSServiceAccessForOrganizationOutputEnabledServicePrincipals {
  ServicePrincipal: String
  DateEnabled: Date
}

input AwsOrganizationsListChildrenInput {
  ParentId: String!
  ChildType: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListChildrenOutput {
  Children: [AwsOrganizationsListChildrenOutputChildren]
  NextToken: String
}

type AwsOrganizationsListChildrenOutputChildren {
  Id: String
  Type: String
}

input AwsOrganizationsListCreateAccountStatusInput {
  States: [String]
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListCreateAccountStatusOutput {
  CreateAccountStatuses: [AwsOrganizationsSs]
  NextToken: String
}

input AwsOrganizationsListHandshakesForAccountInput {
  Filter: AwsOrganizationsS3bInput
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListHandshakesForAccountOutput {
  Handshakes: [AwsOrganizationsS4]
  NextToken: String
}

input AwsOrganizationsListHandshakesForOrganizationInput {
  Filter: AwsOrganizationsS3bInput
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListHandshakesForOrganizationOutput {
  Handshakes: [AwsOrganizationsS4]
  NextToken: String
}

input AwsOrganizationsListOrganizationalUnitsForParentInput {
  ParentId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListOrganizationalUnitsForParentOutput {
  OrganizationalUnits: [AwsOrganizationsS1e]
  NextToken: String
}

input AwsOrganizationsListParentsInput {
  ChildId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListParentsOutput {
  Parents: [AwsOrganizationsListParentsOutputParents]
  NextToken: String
}

type AwsOrganizationsListParentsOutputParents {
  Id: String
  Type: String
}

input AwsOrganizationsListPoliciesForTargetInput {
  TargetId: String!
  Filter: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListPoliciesForTargetOutput {
  Policies: [AwsOrganizationsS1n]
  NextToken: String
}

input AwsOrganizationsListPoliciesInput {
  Filter: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListPoliciesOutput {
  Policies: [AwsOrganizationsS1n]
  NextToken: String
}

input AwsOrganizationsListRootsInput {
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListRootsOutput {
  Roots: [AwsOrganizationsS2e]
  NextToken: String
}

input AwsOrganizationsListTagsForResourceInput {
  ResourceId: String!
  NextToken: String
}

type AwsOrganizationsListTagsForResourceOutput {
  Tags: [AwsOrganizationsS3z]
  NextToken: String
}

input AwsOrganizationsListTargetsForPolicyInput {
  PolicyId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListTargetsForPolicyOutput {
  Targets: [AwsOrganizationsListTargetsForPolicyOutputTargets]
  NextToken: String
}

type AwsOrganizationsListTargetsForPolicyOutputTargets {
  TargetId: String
  Arn: String
  Name: String
  Type: String
}

input AwsOrganizationsMoveAccountInput {
  AccountId: String!
  SourceParentId: String!
  DestinationParentId: String!
}

input AwsOrganizationsRemoveAccountFromOrganizationInput {
  AccountId: String!
}

type AwsOrganizationsS12 {
  Id: String
  Arn: String
  FeatureSet: String
  MasterAccountArn: String
  MasterAccountId: String
  MasterAccountEmail: String
  AvailablePolicyTypes: [AwsOrganizationsS16]
}

type AwsOrganizationsS16 {
  Type: String
  Status: String
}

type AwsOrganizationsS1e {
  Id: String
  Arn: String
  Name: String
}

type AwsOrganizationsS1m {
  PolicySummary: AwsOrganizationsS1n
  Content: String
}

type AwsOrganizationsS1n {
  Id: String
  Arn: String
  Name: String
  Description: String
  Type: String
  AwsManaged: Boolean
}

type AwsOrganizationsS1w {
  Id: String
  Arn: String
  Email: String
  Name: String
  Status: String
  JoinedMethod: String
  JoinedTimestamp: Date
}

type AwsOrganizationsS2e {
  Id: String
  Arn: String
  Name: String
  PolicyTypes: [AwsOrganizationsS16]
}

input AwsOrganizationsS3bInput {
  ActionType: String
  ParentHandshakeId: String
}

type AwsOrganizationsS3z {
  Key: String!
  Value: String!
}

input AwsOrganizationsS3zInput {
  Key: String!
  Value: String!
}

type AwsOrganizationsS4 {
  Id: String
  Arn: String
  Parties: [AwsOrganizationsS7]
  State: String
  RequestedTimestamp: Date
  ExpirationTimestamp: Date
  Action: String
  Resources: [AwsOrganizationsSd]
}

type AwsOrganizationsS7 {
  Id: String!
  Type: String!
}

input AwsOrganizationsS7Input {
  Id: String!
  Type: String!
}

type AwsOrganizationsSd {
  Value: String
  Type: String
  Resources: JSON
}

type AwsOrganizationsSs {
  Id: String
  AccountName: String
  State: String
  RequestedTimestamp: Date
  CompletedTimestamp: Date
  AccountId: String
  GovCloudAccountId: String
  FailureReason: String
}

input AwsOrganizationsTagResourceInput {
  ResourceId: String!
  Tags: [AwsOrganizationsS3zInput]!
}

input AwsOrganizationsUntagResourceInput {
  ResourceId: String!
  TagKeys: [String]!
}

input AwsOrganizationsUpdateOrganizationalUnitInput {
  OrganizationalUnitId: String!
  Name: String
}

type AwsOrganizationsUpdateOrganizationalUnitOutput {
  OrganizationalUnit: AwsOrganizationsS1e
}

input AwsOrganizationsUpdatePolicyInput {
  PolicyId: String!
  Name: String
  Description: String
  Content: String
}

type AwsOrganizationsUpdatePolicyOutput {
  Policy: AwsOrganizationsS1m
}

"""Amazon Personalize (2018-05-22)"""
type AwsPersonalize {
  createCampaign(input: AwsPersonalizeCreateCampaignInput!, config: AwsConfig): AwsPersonalizeCreateCampaignOutput
  createDataset(input: AwsPersonalizeCreateDatasetInput!, config: AwsConfig): AwsPersonalizeCreateDatasetOutput
  createDatasetGroup(input: AwsPersonalizeCreateDatasetGroupInput!, config: AwsConfig): AwsPersonalizeCreateDatasetGroupOutput
  createDatasetImportJob(input: AwsPersonalizeCreateDatasetImportJobInput!, config: AwsConfig): AwsPersonalizeCreateDatasetImportJobOutput
  createEventTracker(input: AwsPersonalizeCreateEventTrackerInput!, config: AwsConfig): AwsPersonalizeCreateEventTrackerOutput
  createSchema(input: AwsPersonalizeCreateSchemaInput!, config: AwsConfig): AwsPersonalizeCreateSchemaOutput
  createSolution(input: AwsPersonalizeCreateSolutionInput!, config: AwsConfig): AwsPersonalizeCreateSolutionOutput
  createSolutionVersion(input: AwsPersonalizeCreateSolutionVersionInput!, config: AwsConfig): AwsPersonalizeCreateSolutionVersionOutput
  deleteCampaign(input: AwsPersonalizeDeleteCampaignInput!, config: AwsConfig): JSON
  deleteDataset(input: AwsPersonalizeDeleteDatasetInput!, config: AwsConfig): JSON
  deleteDatasetGroup(input: AwsPersonalizeDeleteDatasetGroupInput!, config: AwsConfig): JSON
  deleteEventTracker(input: AwsPersonalizeDeleteEventTrackerInput!, config: AwsConfig): JSON
  deleteSchema(input: AwsPersonalizeDeleteSchemaInput!, config: AwsConfig): JSON
  deleteSolution(input: AwsPersonalizeDeleteSolutionInput!, config: AwsConfig): JSON
  describeAlgorithm(input: AwsPersonalizeDescribeAlgorithmInput!, config: AwsConfig): AwsPersonalizeDescribeAlgorithmOutput
  describeCampaign(input: AwsPersonalizeDescribeCampaignInput!, config: AwsConfig): AwsPersonalizeDescribeCampaignOutput
  describeDataset(input: AwsPersonalizeDescribeDatasetInput!, config: AwsConfig): AwsPersonalizeDescribeDatasetOutput
  describeDatasetGroup(input: AwsPersonalizeDescribeDatasetGroupInput!, config: AwsConfig): AwsPersonalizeDescribeDatasetGroupOutput
  describeDatasetImportJob(input: AwsPersonalizeDescribeDatasetImportJobInput!, config: AwsConfig): AwsPersonalizeDescribeDatasetImportJobOutput
  describeEventTracker(input: AwsPersonalizeDescribeEventTrackerInput!, config: AwsConfig): AwsPersonalizeDescribeEventTrackerOutput
  describeFeatureTransformation(input: AwsPersonalizeDescribeFeatureTransformationInput!, config: AwsConfig): AwsPersonalizeDescribeFeatureTransformationOutput
  describeRecipe(input: AwsPersonalizeDescribeRecipeInput!, config: AwsConfig): AwsPersonalizeDescribeRecipeOutput
  describeSchema(input: AwsPersonalizeDescribeSchemaInput!, config: AwsConfig): AwsPersonalizeDescribeSchemaOutput
  describeSolution(input: AwsPersonalizeDescribeSolutionInput!, config: AwsConfig): AwsPersonalizeDescribeSolutionOutput
  describeSolutionVersion(input: AwsPersonalizeDescribeSolutionVersionInput!, config: AwsConfig): AwsPersonalizeDescribeSolutionVersionOutput
  getSolutionMetrics(input: AwsPersonalizeGetSolutionMetricsInput!, config: AwsConfig): AwsPersonalizeGetSolutionMetricsOutput
  listCampaigns(input: AwsPersonalizeListCampaignsInput, config: AwsConfig): AwsPersonalizeListCampaignsOutput
  listDatasetGroups(input: AwsPersonalizeListDatasetGroupsInput, config: AwsConfig): AwsPersonalizeListDatasetGroupsOutput
  listDatasetImportJobs(input: AwsPersonalizeListDatasetImportJobsInput, config: AwsConfig): AwsPersonalizeListDatasetImportJobsOutput
  listDatasets(input: AwsPersonalizeListDatasetsInput, config: AwsConfig): AwsPersonalizeListDatasetsOutput
  listEventTrackers(input: AwsPersonalizeListEventTrackersInput, config: AwsConfig): AwsPersonalizeListEventTrackersOutput
  listRecipes(input: AwsPersonalizeListRecipesInput, config: AwsConfig): AwsPersonalizeListRecipesOutput
  listSchemas(input: AwsPersonalizeListSchemasInput, config: AwsConfig): AwsPersonalizeListSchemasOutput
  listSolutionVersions(input: AwsPersonalizeListSolutionVersionsInput, config: AwsConfig): AwsPersonalizeListSolutionVersionsOutput
  listSolutions(input: AwsPersonalizeListSolutionsInput, config: AwsConfig): AwsPersonalizeListSolutionsOutput
  updateCampaign(input: AwsPersonalizeUpdateCampaignInput!, config: AwsConfig): AwsPersonalizeUpdateCampaignOutput
}

input AwsPersonalizeCreateCampaignInput {
  name: String!
  solutionVersionArn: String!
  minProvisionedTPS: Int!
}

type AwsPersonalizeCreateCampaignOutput {
  campaignArn: String
}

input AwsPersonalizeCreateDatasetGroupInput {
  name: String!
  roleArn: String
  kmsKeyArn: String
}

type AwsPersonalizeCreateDatasetGroupOutput {
  datasetGroupArn: String
}

input AwsPersonalizeCreateDatasetImportJobInput {
  jobName: String!
  datasetArn: String!
  dataSource: AwsPersonalizeSeInput!
  roleArn: String!
}

type AwsPersonalizeCreateDatasetImportJobOutput {
  datasetImportJobArn: String
}

input AwsPersonalizeCreateDatasetInput {
  name: String!
  schemaArn: String!
  datasetGroupArn: String!
  datasetType: String!
}

type AwsPersonalizeCreateDatasetOutput {
  datasetArn: String
}

input AwsPersonalizeCreateEventTrackerInput {
  name: String!
  datasetGroupArn: String!
}

type AwsPersonalizeCreateEventTrackerOutput {
  eventTrackerArn: String
  trackingId: String
}

input AwsPersonalizeCreateSchemaInput {
  name: String!
  schema: String!
}

type AwsPersonalizeCreateSchemaOutput {
  schemaArn: String
}

input AwsPersonalizeCreateSolutionInput {
  name: String!
  performHPO: Boolean
  performAutoML: Boolean
  recipeArn: String
  datasetGroupArn: String!
  eventType: String
  solutionConfig: AwsPersonalizeSrInput
}

type AwsPersonalizeCreateSolutionOutput {
  solutionArn: String
}

input AwsPersonalizeCreateSolutionVersionInput {
  solutionArn: String!
}

type AwsPersonalizeCreateSolutionVersionOutput {
  solutionVersionArn: String
}

input AwsPersonalizeDeleteCampaignInput {
  campaignArn: String!
}

input AwsPersonalizeDeleteDatasetGroupInput {
  datasetGroupArn: String!
}

input AwsPersonalizeDeleteDatasetInput {
  datasetArn: String!
}

input AwsPersonalizeDeleteEventTrackerInput {
  eventTrackerArn: String!
}

input AwsPersonalizeDeleteSchemaInput {
  schemaArn: String!
}

input AwsPersonalizeDeleteSolutionInput {
  solutionArn: String!
}

input AwsPersonalizeDescribeAlgorithmInput {
  algorithmArn: String!
}

type AwsPersonalizeDescribeAlgorithmOutput {
  algorithm: AwsPersonalizeDescribeAlgorithmOutputAlgorithm
}

type AwsPersonalizeDescribeAlgorithmOutputAlgorithm {
  name: String
  algorithmArn: String
  algorithmImage: AwsPersonalizeDescribeAlgorithmOutputAlgorithmAlgorithmImage
  defaultHyperParameters: JSON
  defaultHyperParameterRanges: AwsPersonalizeDescribeAlgorithmOutputAlgorithmDefaultHyperParameterRanges
  defaultResourceConfig: JSON
  trainingInputMode: String
  roleArn: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

type AwsPersonalizeDescribeAlgorithmOutputAlgorithmAlgorithmImage {
  name: String
  dockerURI: String!
}

type AwsPersonalizeDescribeAlgorithmOutputAlgorithmDefaultHyperParameterRanges {
  integerHyperParameterRanges: [AwsPersonalizeDescribeAlgorithmOutputAlgorithmDefaultHyperParameterRangesIntegerHyperParameterRanges]
  continuousHyperParameterRanges: [AwsPersonalizeDescribeAlgorithmOutputAlgorithmDefaultHyperParameterRangesContinuousHyperParameterRanges]
  categoricalHyperParameterRanges: [AwsPersonalizeDescribeAlgorithmOutputAlgorithmDefaultHyperParameterRangesCategoricalHyperParameterRanges]
}

type AwsPersonalizeDescribeAlgorithmOutputAlgorithmDefaultHyperParameterRangesCategoricalHyperParameterRanges {
  name: String
  values: [String]
  isTunable: Boolean
}

type AwsPersonalizeDescribeAlgorithmOutputAlgorithmDefaultHyperParameterRangesContinuousHyperParameterRanges {
  name: String
  minValue: JSON
  maxValue: JSON
  isTunable: Boolean
}

type AwsPersonalizeDescribeAlgorithmOutputAlgorithmDefaultHyperParameterRangesIntegerHyperParameterRanges {
  name: String
  minValue: Int
  maxValue: Int
  isTunable: Boolean
}

input AwsPersonalizeDescribeCampaignInput {
  campaignArn: String!
}

type AwsPersonalizeDescribeCampaignOutput {
  campaign: AwsPersonalizeDescribeCampaignOutputCampaign
}

type AwsPersonalizeDescribeCampaignOutputCampaign {
  name: String
  campaignArn: String
  solutionVersionArn: String
  minProvisionedTPS: Int
  status: String
  failureReason: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
  latestCampaignUpdate: AwsPersonalizeDescribeCampaignOutputCampaignLatestCampaignUpdate
}

type AwsPersonalizeDescribeCampaignOutputCampaignLatestCampaignUpdate {
  solutionVersionArn: String
  minProvisionedTPS: Int
  status: String
  failureReason: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

input AwsPersonalizeDescribeDatasetGroupInput {
  datasetGroupArn: String!
}

type AwsPersonalizeDescribeDatasetGroupOutput {
  datasetGroup: AwsPersonalizeDescribeDatasetGroupOutputDatasetGroup
}

type AwsPersonalizeDescribeDatasetGroupOutputDatasetGroup {
  name: String
  datasetGroupArn: String
  status: String
  roleArn: String
  kmsKeyArn: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
  failureReason: String
}

input AwsPersonalizeDescribeDatasetImportJobInput {
  datasetImportJobArn: String!
}

type AwsPersonalizeDescribeDatasetImportJobOutput {
  datasetImportJob: AwsPersonalizeDescribeDatasetImportJobOutputDatasetImportJob
}

type AwsPersonalizeDescribeDatasetImportJobOutputDatasetImportJob {
  jobName: String
  datasetImportJobArn: String
  datasetArn: String
  dataSource: AwsPersonalizeSe
  roleArn: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
  failureReason: String
}

input AwsPersonalizeDescribeDatasetInput {
  datasetArn: String!
}

type AwsPersonalizeDescribeDatasetOutput {
  dataset: AwsPersonalizeDescribeDatasetOutputDataset
}

type AwsPersonalizeDescribeDatasetOutputDataset {
  name: String
  datasetArn: String
  datasetGroupArn: String
  datasetType: String
  schemaArn: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

input AwsPersonalizeDescribeEventTrackerInput {
  eventTrackerArn: String!
}

type AwsPersonalizeDescribeEventTrackerOutput {
  eventTracker: AwsPersonalizeDescribeEventTrackerOutputEventTracker
}

type AwsPersonalizeDescribeEventTrackerOutputEventTracker {
  name: String
  eventTrackerArn: String
  accountId: String
  trackingId: String
  datasetGroupArn: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

input AwsPersonalizeDescribeFeatureTransformationInput {
  featureTransformationArn: String!
}

type AwsPersonalizeDescribeFeatureTransformationOutput {
  featureTransformation: AwsPersonalizeDescribeFeatureTransformationOutputFeatureTransformation
}

type AwsPersonalizeDescribeFeatureTransformationOutputFeatureTransformation {
  name: String
  featureTransformationArn: String
  defaultParameters: JSON
  creationDateTime: Date
  lastUpdatedDateTime: Date
  status: String
}

input AwsPersonalizeDescribeRecipeInput {
  recipeArn: String!
}

type AwsPersonalizeDescribeRecipeOutput {
  recipe: AwsPersonalizeDescribeRecipeOutputRecipe
}

type AwsPersonalizeDescribeRecipeOutputRecipe {
  name: String
  recipeArn: String
  algorithmArn: String
  featureTransformationArn: String
  status: String
  description: String
  creationDateTime: Date
  recipeType: String
  lastUpdatedDateTime: Date
}

input AwsPersonalizeDescribeSchemaInput {
  schemaArn: String!
}

type AwsPersonalizeDescribeSchemaOutput {
  schema: AwsPersonalizeDescribeSchemaOutputSchema
}

type AwsPersonalizeDescribeSchemaOutputSchema {
  name: String
  schemaArn: String
  schema: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

input AwsPersonalizeDescribeSolutionInput {
  solutionArn: String!
}

type AwsPersonalizeDescribeSolutionOutput {
  solution: AwsPersonalizeDescribeSolutionOutputSolution
}

type AwsPersonalizeDescribeSolutionOutputSolution {
  name: String
  solutionArn: String
  performHPO: Boolean
  performAutoML: Boolean
  recipeArn: String
  datasetGroupArn: String
  eventType: String
  solutionConfig: AwsPersonalizeSr
  autoMLResult: AwsPersonalizeDescribeSolutionOutputSolutionAutoMLResult
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
  latestSolutionVersion: AwsPersonalizeS37
}

type AwsPersonalizeDescribeSolutionOutputSolutionAutoMLResult {
  bestRecipeArn: String
}

input AwsPersonalizeDescribeSolutionVersionInput {
  solutionVersionArn: String!
}

type AwsPersonalizeDescribeSolutionVersionOutput {
  solutionVersion: AwsPersonalizeDescribeSolutionVersionOutputSolutionVersion
}

type AwsPersonalizeDescribeSolutionVersionOutputSolutionVersion {
  solutionVersionArn: String
  solutionArn: String
  performHPO: Boolean
  performAutoML: Boolean
  recipeArn: String
  eventType: String
  datasetGroupArn: String
  solutionConfig: AwsPersonalizeSr
  status: String
  failureReason: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

"""Amazon Personalize Events (2018-03-22)"""
type AwsPersonalizeEvents {
  putEvents(input: AwsPersonalizeEventsPutEventsInput!, config: AwsConfig): JSON
}

input AwsPersonalizeEventsPutEventsEventListInput {
  eventId: String
  eventType: String!
  properties: String!
  sentAt: Date!
}

input AwsPersonalizeEventsPutEventsInput {
  trackingId: String!
  userId: String
  sessionId: String!
  eventList: [AwsPersonalizeEventsPutEventsEventListInput]!
}

input AwsPersonalizeGetSolutionMetricsInput {
  solutionVersionArn: String!
}

type AwsPersonalizeGetSolutionMetricsOutput {
  solutionVersionArn: String
  metrics: JSON
}

input AwsPersonalizeListCampaignsInput {
  solutionArn: String
  nextToken: String
  maxResults: Int
}

type AwsPersonalizeListCampaignsOutput {
  campaigns: [AwsPersonalizeListCampaignsOutputCampaigns]
  nextToken: String
}

type AwsPersonalizeListCampaignsOutputCampaigns {
  name: String
  campaignArn: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
  failureReason: String
}

input AwsPersonalizeListDatasetGroupsInput {
  nextToken: String
  maxResults: Int
}

type AwsPersonalizeListDatasetGroupsOutput {
  datasetGroups: [AwsPersonalizeListDatasetGroupsOutputDatasetGroups]
  nextToken: String
}

type AwsPersonalizeListDatasetGroupsOutputDatasetGroups {
  name: String
  datasetGroupArn: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
  failureReason: String
}

input AwsPersonalizeListDatasetImportJobsInput {
  datasetArn: String
  nextToken: String
  maxResults: Int
}

type AwsPersonalizeListDatasetImportJobsOutput {
  datasetImportJobs: [AwsPersonalizeListDatasetImportJobsOutputDatasetImportJobs]
  nextToken: String
}

type AwsPersonalizeListDatasetImportJobsOutputDatasetImportJobs {
  datasetImportJobArn: String
  jobName: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
  failureReason: String
}

input AwsPersonalizeListDatasetsInput {
  datasetGroupArn: String
  nextToken: String
  maxResults: Int
}

type AwsPersonalizeListDatasetsOutput {
  datasets: [AwsPersonalizeListDatasetsOutputDatasets]
  nextToken: String
}

type AwsPersonalizeListDatasetsOutputDatasets {
  name: String
  datasetArn: String
  datasetType: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

input AwsPersonalizeListEventTrackersInput {
  datasetGroupArn: String
  nextToken: String
  maxResults: Int
}

type AwsPersonalizeListEventTrackersOutput {
  eventTrackers: [AwsPersonalizeListEventTrackersOutputEventTrackers]
  nextToken: String
}

type AwsPersonalizeListEventTrackersOutputEventTrackers {
  name: String
  eventTrackerArn: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

input AwsPersonalizeListRecipesInput {
  recipeProvider: String
  nextToken: String
  maxResults: Int
}

type AwsPersonalizeListRecipesOutput {
  recipes: [AwsPersonalizeListRecipesOutputRecipes]
  nextToken: String
}

type AwsPersonalizeListRecipesOutputRecipes {
  name: String
  recipeArn: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

input AwsPersonalizeListSchemasInput {
  nextToken: String
  maxResults: Int
}

type AwsPersonalizeListSchemasOutput {
  schemas: [AwsPersonalizeListSchemasOutputSchemas]
  nextToken: String
}

type AwsPersonalizeListSchemasOutputSchemas {
  name: String
  schemaArn: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

input AwsPersonalizeListSolutionsInput {
  datasetGroupArn: String
  nextToken: String
  maxResults: Int
}

type AwsPersonalizeListSolutionsOutput {
  solutions: [AwsPersonalizeListSolutionsOutputSolutions]
  nextToken: String
}

type AwsPersonalizeListSolutionsOutputSolutions {
  name: String
  solutionArn: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
}

input AwsPersonalizeListSolutionVersionsInput {
  solutionArn: String
  nextToken: String
  maxResults: Int
}

type AwsPersonalizeListSolutionVersionsOutput {
  solutionVersions: [AwsPersonalizeS37]
  nextToken: String
}

"""Amazon Personalize Runtime (2018-05-22)"""
type AwsPersonalizeRuntime {
  getPersonalizedRanking(input: AwsPersonalizeRuntimeGetPersonalizedRankingInput!, config: AwsConfig): AwsPersonalizeRuntimeGetPersonalizedRankingOutput
  getRecommendations(input: AwsPersonalizeRuntimeGetRecommendationsInput!, config: AwsConfig): AwsPersonalizeRuntimeGetRecommendationsOutput
}

input AwsPersonalizeRuntimeGetPersonalizedRankingInput {
  campaignArn: String!
  inputList: [String]!
  userId: String!
}

type AwsPersonalizeRuntimeGetPersonalizedRankingOutput {
  personalizedRanking: [AwsPersonalizeRuntimeS7]
}

input AwsPersonalizeRuntimeGetRecommendationsInput {
  campaignArn: String!
  itemId: String
  userId: String
  numResults: Int
}

type AwsPersonalizeRuntimeGetRecommendationsOutput {
  itemList: [AwsPersonalizeRuntimeS7]
}

type AwsPersonalizeRuntimeS7 {
  itemId: String
}

type AwsPersonalizeS37 {
  solutionVersionArn: String
  status: String
  creationDateTime: Date
  lastUpdatedDateTime: Date
  failureReason: String
}

type AwsPersonalizeSe {
  dataLocation: String
}

input AwsPersonalizeSeInput {
  dataLocation: String
}

type AwsPersonalizeSr {
  eventValueThreshold: String
  hpoConfig: AwsPersonalizeSrHpoConfig
  algorithmHyperParameters: JSON
  featureTransformationParameters: JSON
  autoMLConfig: AwsPersonalizeSrAutoMLConfig
}

type AwsPersonalizeSrAutoMLConfig {
  metricName: String
  recipeList: [String]
}

input AwsPersonalizeSrAutoMLConfigInput {
  metricName: String
  recipeList: [String]
}

type AwsPersonalizeSrHpoConfig {
  hpoObjective: AwsPersonalizeSrHpoConfigHpoObjective
  hpoResourceConfig: AwsPersonalizeSrHpoConfigHpoResourceConfig
  algorithmHyperParameterRanges: AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRanges
}

type AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRanges {
  integerHyperParameterRanges: [AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesIntegerHyperParameterRanges]
  continuousHyperParameterRanges: [AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesContinuousHyperParameterRanges]
  categoricalHyperParameterRanges: [AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesCategoricalHyperParameterRanges]
}

type AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesCategoricalHyperParameterRanges {
  name: String
  values: [String]
}

input AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesCategoricalHyperParameterRangesInput {
  name: String
  values: [String]
}

type AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesContinuousHyperParameterRanges {
  name: String
  minValue: JSON
  maxValue: JSON
}

input AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesContinuousHyperParameterRangesInput {
  name: String
  minValue: JSON
  maxValue: JSON
}

input AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesInput {
  integerHyperParameterRanges: [AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesIntegerHyperParameterRangesInput]
  continuousHyperParameterRanges: [AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesContinuousHyperParameterRangesInput]
  categoricalHyperParameterRanges: [AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesCategoricalHyperParameterRangesInput]
}

type AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesIntegerHyperParameterRanges {
  name: String
  minValue: Int
  maxValue: Int
}

input AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesIntegerHyperParameterRangesInput {
  name: String
  minValue: Int
  maxValue: Int
}

type AwsPersonalizeSrHpoConfigHpoObjective {
  type: String
  metricName: String
  metricRegex: String
}

input AwsPersonalizeSrHpoConfigHpoObjectiveInput {
  type: String
  metricName: String
  metricRegex: String
}

type AwsPersonalizeSrHpoConfigHpoResourceConfig {
  maxNumberOfTrainingJobs: String
  maxParallelTrainingJobs: String
}

input AwsPersonalizeSrHpoConfigHpoResourceConfigInput {
  maxNumberOfTrainingJobs: String
  maxParallelTrainingJobs: String
}

input AwsPersonalizeSrHpoConfigInput {
  hpoObjective: AwsPersonalizeSrHpoConfigHpoObjectiveInput
  hpoResourceConfig: AwsPersonalizeSrHpoConfigHpoResourceConfigInput
  algorithmHyperParameterRanges: AwsPersonalizeSrHpoConfigAlgorithmHyperParameterRangesInput
}

input AwsPersonalizeSrInput {
  eventValueThreshold: String
  hpoConfig: AwsPersonalizeSrHpoConfigInput
  algorithmHyperParameters: JSON
  featureTransformationParameters: JSON
  autoMLConfig: AwsPersonalizeSrAutoMLConfigInput
}

input AwsPersonalizeUpdateCampaignInput {
  campaignArn: String!
  solutionVersionArn: String
  minProvisionedTPS: Int
}

type AwsPersonalizeUpdateCampaignOutput {
  campaignArn: String
}

"""AWS Performance Insights (2018-02-27)"""
type AwsPI {
  describeDimensionKeys(input: AwsPIDescribeDimensionKeysInput!, config: AwsConfig): AwsPIDescribeDimensionKeysOutput
  getResourceMetrics(input: AwsPIGetResourceMetricsInput!, config: AwsConfig): AwsPIGetResourceMetricsOutput
}

input AwsPIDescribeDimensionKeysInput {
  ServiceType: String!
  Identifier: String!
  StartTime: Date!
  EndTime: Date!
  Metric: String!
  PeriodInSeconds: Int
  GroupBy: AwsPIS6Input!
  PartitionBy: AwsPIS6Input
  Filter: JSON
  MaxResults: Int
  NextToken: String
}

type AwsPIDescribeDimensionKeysOutput {
  AlignedStartTime: Date
  AlignedEndTime: Date
  PartitionKeys: [AwsPIDescribeDimensionKeysOutputPartitionKeys]
  Keys: [AwsPIDescribeDimensionKeysOutputKeys]
  NextToken: String
}

type AwsPIDescribeDimensionKeysOutputKeys {
  Dimensions: JSON
  Total: JSON
  Partitions: [JSON]
}

type AwsPIDescribeDimensionKeysOutputPartitionKeys {
  Dimensions: JSON!
}

input AwsPIGetResourceMetricsInput {
  ServiceType: String!
  Identifier: String!
  MetricQueries: [AwsPIGetResourceMetricsMetricQueriesInput]!
  StartTime: Date!
  EndTime: Date!
  PeriodInSeconds: Int
  MaxResults: Int
  NextToken: String
}

input AwsPIGetResourceMetricsMetricQueriesInput {
  Metric: String!
  GroupBy: AwsPIS6Input
  Filter: JSON
}

type AwsPIGetResourceMetricsOutput {
  AlignedStartTime: Date
  AlignedEndTime: Date
  Identifier: String
  MetricList: [AwsPIGetResourceMetricsOutputMetricList]
  NextToken: String
}

type AwsPIGetResourceMetricsOutputMetricList {
  Key: AwsPIGetResourceMetricsOutputMetricListKey
  DataPoints: [AwsPIGetResourceMetricsOutputMetricListDataPoints]
}

type AwsPIGetResourceMetricsOutputMetricListDataPoints {
  Timestamp: Date!
  Value: JSON!
}

type AwsPIGetResourceMetricsOutputMetricListKey {
  Metric: String!
  Dimensions: JSON
}

"""Amazon Pinpoint (2016-12-01)"""
type AwsPinpoint {
  createApp(input: AwsPinpointCreateAppInput!, config: AwsConfig): AwsPinpointCreateAppOutput
  createCampaign(input: AwsPinpointCreateCampaignInput!, config: AwsConfig): AwsPinpointCreateCampaignOutput
  createExportJob(input: AwsPinpointCreateExportJobInput!, config: AwsConfig): AwsPinpointCreateExportJobOutput
  createImportJob(input: AwsPinpointCreateImportJobInput!, config: AwsConfig): AwsPinpointCreateImportJobOutput
  createSegment(input: AwsPinpointCreateSegmentInput!, config: AwsConfig): AwsPinpointCreateSegmentOutput
  deleteAdmChannel(input: AwsPinpointDeleteAdmChannelInput!, config: AwsConfig): AwsPinpointDeleteAdmChannelOutput
  deleteApnsChannel(input: AwsPinpointDeleteApnsChannelInput!, config: AwsConfig): AwsPinpointDeleteApnsChannelOutput
  deleteApnsSandboxChannel(input: AwsPinpointDeleteApnsSandboxChannelInput!, config: AwsConfig): AwsPinpointDeleteApnsSandboxChannelOutput
  deleteApnsVoipChannel(input: AwsPinpointDeleteApnsVoipChannelInput!, config: AwsConfig): AwsPinpointDeleteApnsVoipChannelOutput
  deleteApnsVoipSandboxChannel(input: AwsPinpointDeleteApnsVoipSandboxChannelInput!, config: AwsConfig): AwsPinpointDeleteApnsVoipSandboxChannelOutput
  deleteApp(input: AwsPinpointDeleteAppInput!, config: AwsConfig): AwsPinpointDeleteAppOutput
  deleteBaiduChannel(input: AwsPinpointDeleteBaiduChannelInput!, config: AwsConfig): AwsPinpointDeleteBaiduChannelOutput
  deleteCampaign(input: AwsPinpointDeleteCampaignInput!, config: AwsConfig): AwsPinpointDeleteCampaignOutput
  deleteEmailChannel(input: AwsPinpointDeleteEmailChannelInput!, config: AwsConfig): AwsPinpointDeleteEmailChannelOutput
  deleteEndpoint(input: AwsPinpointDeleteEndpointInput!, config: AwsConfig): AwsPinpointDeleteEndpointOutput
  deleteEventStream(input: AwsPinpointDeleteEventStreamInput!, config: AwsConfig): AwsPinpointDeleteEventStreamOutput
  deleteGcmChannel(input: AwsPinpointDeleteGcmChannelInput!, config: AwsConfig): AwsPinpointDeleteGcmChannelOutput
  deleteSegment(input: AwsPinpointDeleteSegmentInput!, config: AwsConfig): AwsPinpointDeleteSegmentOutput
  deleteSmsChannel(input: AwsPinpointDeleteSmsChannelInput!, config: AwsConfig): AwsPinpointDeleteSmsChannelOutput
  deleteUserEndpoints(input: AwsPinpointDeleteUserEndpointsInput!, config: AwsConfig): AwsPinpointDeleteUserEndpointsOutput
  deleteVoiceChannel(input: AwsPinpointDeleteVoiceChannelInput!, config: AwsConfig): AwsPinpointDeleteVoiceChannelOutput
  getAdmChannel(input: AwsPinpointGetAdmChannelInput!, config: AwsConfig): AwsPinpointGetAdmChannelOutput
  getApnsChannel(input: AwsPinpointGetApnsChannelInput!, config: AwsConfig): AwsPinpointGetApnsChannelOutput
  getApnsSandboxChannel(input: AwsPinpointGetApnsSandboxChannelInput!, config: AwsConfig): AwsPinpointGetApnsSandboxChannelOutput
  getApnsVoipChannel(input: AwsPinpointGetApnsVoipChannelInput!, config: AwsConfig): AwsPinpointGetApnsVoipChannelOutput
  getApnsVoipSandboxChannel(input: AwsPinpointGetApnsVoipSandboxChannelInput!, config: AwsConfig): AwsPinpointGetApnsVoipSandboxChannelOutput
  getApp(input: AwsPinpointGetAppInput!, config: AwsConfig): AwsPinpointGetAppOutput
  getApplicationSettings(input: AwsPinpointGetApplicationSettingsInput!, config: AwsConfig): AwsPinpointGetApplicationSettingsOutput
  getApps(input: AwsPinpointGetAppsInput, config: AwsConfig): AwsPinpointGetAppsOutput
  getBaiduChannel(input: AwsPinpointGetBaiduChannelInput!, config: AwsConfig): AwsPinpointGetBaiduChannelOutput
  getCampaign(input: AwsPinpointGetCampaignInput!, config: AwsConfig): AwsPinpointGetCampaignOutput
  getCampaignActivities(input: AwsPinpointGetCampaignActivitiesInput!, config: AwsConfig): AwsPinpointGetCampaignActivitiesOutput
  getCampaignVersion(input: AwsPinpointGetCampaignVersionInput!, config: AwsConfig): AwsPinpointGetCampaignVersionOutput
  getCampaignVersions(input: AwsPinpointGetCampaignVersionsInput!, config: AwsConfig): AwsPinpointGetCampaignVersionsOutput
  getCampaigns(input: AwsPinpointGetCampaignsInput!, config: AwsConfig): AwsPinpointGetCampaignsOutput
  getChannels(input: AwsPinpointGetChannelsInput!, config: AwsConfig): AwsPinpointGetChannelsOutput
  getEmailChannel(input: AwsPinpointGetEmailChannelInput!, config: AwsConfig): AwsPinpointGetEmailChannelOutput
  getEndpoint(input: AwsPinpointGetEndpointInput!, config: AwsConfig): AwsPinpointGetEndpointOutput
  getEventStream(input: AwsPinpointGetEventStreamInput!, config: AwsConfig): AwsPinpointGetEventStreamOutput
  getExportJob(input: AwsPinpointGetExportJobInput!, config: AwsConfig): AwsPinpointGetExportJobOutput
  getExportJobs(input: AwsPinpointGetExportJobsInput!, config: AwsConfig): AwsPinpointGetExportJobsOutput
  getGcmChannel(input: AwsPinpointGetGcmChannelInput!, config: AwsConfig): AwsPinpointGetGcmChannelOutput
  getImportJob(input: AwsPinpointGetImportJobInput!, config: AwsConfig): AwsPinpointGetImportJobOutput
  getImportJobs(input: AwsPinpointGetImportJobsInput!, config: AwsConfig): AwsPinpointGetImportJobsOutput
  getSegment(input: AwsPinpointGetSegmentInput!, config: AwsConfig): AwsPinpointGetSegmentOutput
  getSegmentExportJobs(input: AwsPinpointGetSegmentExportJobsInput!, config: AwsConfig): AwsPinpointGetSegmentExportJobsOutput
  getSegmentImportJobs(input: AwsPinpointGetSegmentImportJobsInput!, config: AwsConfig): AwsPinpointGetSegmentImportJobsOutput
  getSegmentVersion(input: AwsPinpointGetSegmentVersionInput!, config: AwsConfig): AwsPinpointGetSegmentVersionOutput
  getSegmentVersions(input: AwsPinpointGetSegmentVersionsInput!, config: AwsConfig): AwsPinpointGetSegmentVersionsOutput
  getSegments(input: AwsPinpointGetSegmentsInput!, config: AwsConfig): AwsPinpointGetSegmentsOutput
  getSmsChannel(input: AwsPinpointGetSmsChannelInput!, config: AwsConfig): AwsPinpointGetSmsChannelOutput
  getUserEndpoints(input: AwsPinpointGetUserEndpointsInput!, config: AwsConfig): AwsPinpointGetUserEndpointsOutput
  getVoiceChannel(input: AwsPinpointGetVoiceChannelInput!, config: AwsConfig): AwsPinpointGetVoiceChannelOutput
  listTagsForResource(input: AwsPinpointListTagsForResourceInput!, config: AwsConfig): AwsPinpointListTagsForResourceOutput
  phoneNumberValidate(input: AwsPinpointPhoneNumberValidateInput!, config: AwsConfig): AwsPinpointPhoneNumberValidateOutput
  putEventStream(input: AwsPinpointPutEventStreamInput!, config: AwsConfig): AwsPinpointPutEventStreamOutput
  putEvents(input: AwsPinpointPutEventsInput!, config: AwsConfig): AwsPinpointPutEventsOutput
  removeAttributes(input: AwsPinpointRemoveAttributesInput!, config: AwsConfig): AwsPinpointRemoveAttributesOutput
  sendMessages(input: AwsPinpointSendMessagesInput!, config: AwsConfig): AwsPinpointSendMessagesOutput
  sendUsersMessages(input: AwsPinpointSendUsersMessagesInput!, config: AwsConfig): AwsPinpointSendUsersMessagesOutput
  tagResource(input: AwsPinpointTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsPinpointUntagResourceInput!, config: AwsConfig): JSON
  updateAdmChannel(input: AwsPinpointUpdateAdmChannelInput!, config: AwsConfig): AwsPinpointUpdateAdmChannelOutput
  updateApnsChannel(input: AwsPinpointUpdateApnsChannelInput!, config: AwsConfig): AwsPinpointUpdateApnsChannelOutput
  updateApnsSandboxChannel(input: AwsPinpointUpdateApnsSandboxChannelInput!, config: AwsConfig): AwsPinpointUpdateApnsSandboxChannelOutput
  updateApnsVoipChannel(input: AwsPinpointUpdateApnsVoipChannelInput!, config: AwsConfig): AwsPinpointUpdateApnsVoipChannelOutput
  updateApnsVoipSandboxChannel(input: AwsPinpointUpdateApnsVoipSandboxChannelInput!, config: AwsConfig): AwsPinpointUpdateApnsVoipSandboxChannelOutput
  updateApplicationSettings(input: AwsPinpointUpdateApplicationSettingsInput!, config: AwsConfig): AwsPinpointUpdateApplicationSettingsOutput
  updateBaiduChannel(input: AwsPinpointUpdateBaiduChannelInput!, config: AwsConfig): AwsPinpointUpdateBaiduChannelOutput
  updateCampaign(input: AwsPinpointUpdateCampaignInput!, config: AwsConfig): AwsPinpointUpdateCampaignOutput
  updateEmailChannel(input: AwsPinpointUpdateEmailChannelInput!, config: AwsConfig): AwsPinpointUpdateEmailChannelOutput
  updateEndpoint(input: AwsPinpointUpdateEndpointInput!, config: AwsConfig): AwsPinpointUpdateEndpointOutput
  updateEndpointsBatch(input: AwsPinpointUpdateEndpointsBatchInput!, config: AwsConfig): AwsPinpointUpdateEndpointsBatchOutput
  updateGcmChannel(input: AwsPinpointUpdateGcmChannelInput!, config: AwsConfig): AwsPinpointUpdateGcmChannelOutput
  updateSegment(input: AwsPinpointUpdateSegmentInput!, config: AwsConfig): AwsPinpointUpdateSegmentOutput
  updateSmsChannel(input: AwsPinpointUpdateSmsChannelInput!, config: AwsConfig): AwsPinpointUpdateSmsChannelOutput
  updateVoiceChannel(input: AwsPinpointUpdateVoiceChannelInput!, config: AwsConfig): AwsPinpointUpdateVoiceChannelOutput
}

input AwsPinpointCreateAppCreateApplicationRequestInput {
  Name: String!
  tags: JSON
}

input AwsPinpointCreateAppInput {
  CreateApplicationRequest: AwsPinpointCreateAppCreateApplicationRequestInput!
}

type AwsPinpointCreateAppOutput {
  ApplicationResponse: AwsPinpointS6!
}

input AwsPinpointCreateCampaignInput {
  ApplicationId: String!
  WriteCampaignRequest: AwsPinpointS8Input!
}

type AwsPinpointCreateCampaignOutput {
  CampaignResponse: AwsPinpointS12!
}

input AwsPinpointCreateExportJobExportJobRequestInput {
  RoleArn: String!
  S3UrlPrefix: String!
  SegmentId: String
  SegmentVersion: Int
}

input AwsPinpointCreateExportJobInput {
  ApplicationId: String!
  ExportJobRequest: AwsPinpointCreateExportJobExportJobRequestInput!
}

type AwsPinpointCreateExportJobOutput {
  ExportJobResponse: AwsPinpointS1a!
}

input AwsPinpointCreateImportJobImportJobRequestInput {
  DefineSegment: Boolean
  ExternalId: String
  Format: String!
  RegisterEndpoints: Boolean
  RoleArn: String!
  S3Url: String!
  SegmentId: String
  SegmentName: String
}

input AwsPinpointCreateImportJobInput {
  ApplicationId: String!
  ImportJobRequest: AwsPinpointCreateImportJobImportJobRequestInput!
}

type AwsPinpointCreateImportJobOutput {
  ImportJobResponse: AwsPinpointS1h!
}

input AwsPinpointCreateSegmentInput {
  ApplicationId: String!
  WriteSegmentRequest: AwsPinpointS1kInput!
}

type AwsPinpointCreateSegmentOutput {
  SegmentResponse: AwsPinpointS24!
}

input AwsPinpointDeleteAdmChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteAdmChannelOutput {
  ADMChannelResponse: AwsPinpointS2a!
}

input AwsPinpointDeleteApnsChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsChannelOutput {
  APNSChannelResponse: AwsPinpointS2d!
}

input AwsPinpointDeleteApnsSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsSandboxChannelOutput {
  APNSSandboxChannelResponse: AwsPinpointS2g!
}

input AwsPinpointDeleteApnsVoipChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsVoipChannelOutput {
  APNSVoipChannelResponse: AwsPinpointS2j!
}

input AwsPinpointDeleteApnsVoipSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsVoipSandboxChannelOutput {
  APNSVoipSandboxChannelResponse: AwsPinpointS2m!
}

input AwsPinpointDeleteAppInput {
  ApplicationId: String!
}

type AwsPinpointDeleteAppOutput {
  ApplicationResponse: AwsPinpointS6!
}

input AwsPinpointDeleteBaiduChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteBaiduChannelOutput {
  BaiduChannelResponse: AwsPinpointS2r!
}

input AwsPinpointDeleteCampaignInput {
  ApplicationId: String!
  CampaignId: String!
}

type AwsPinpointDeleteCampaignOutput {
  CampaignResponse: AwsPinpointS12!
}

input AwsPinpointDeleteEmailChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteEmailChannelOutput {
  EmailChannelResponse: AwsPinpointS2w!
}

input AwsPinpointDeleteEndpointInput {
  ApplicationId: String!
  EndpointId: String!
}

type AwsPinpointDeleteEndpointOutput {
  EndpointResponse: AwsPinpointS2z!
}

input AwsPinpointDeleteEventStreamInput {
  ApplicationId: String!
}

type AwsPinpointDeleteEventStreamOutput {
  EventStream: AwsPinpointS38!
}

input AwsPinpointDeleteGcmChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteGcmChannelOutput {
  GCMChannelResponse: AwsPinpointS3b!
}

input AwsPinpointDeleteSegmentInput {
  ApplicationId: String!
  SegmentId: String!
}

type AwsPinpointDeleteSegmentOutput {
  SegmentResponse: AwsPinpointS24!
}

input AwsPinpointDeleteSmsChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteSmsChannelOutput {
  SMSChannelResponse: AwsPinpointS3g!
}

input AwsPinpointDeleteUserEndpointsInput {
  ApplicationId: String!
  UserId: String!
}

type AwsPinpointDeleteUserEndpointsOutput {
  EndpointsResponse: AwsPinpointS3j!
}

input AwsPinpointDeleteVoiceChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteVoiceChannelOutput {
  VoiceChannelResponse: AwsPinpointS3n!
}

"""Amazon Pinpoint Email Service (2018-07-26)"""
type AwsPinpointEmail {
  createConfigurationSet(input: AwsPinpointEmailCreateConfigurationSetInput!, config: AwsConfig): JSON
  createConfigurationSetEventDestination(input: AwsPinpointEmailCreateConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
  createDedicatedIpPool(input: AwsPinpointEmailCreateDedicatedIpPoolInput!, config: AwsConfig): JSON
  createDeliverabilityTestReport(input: AwsPinpointEmailCreateDeliverabilityTestReportInput!, config: AwsConfig): AwsPinpointEmailCreateDeliverabilityTestReportOutput
  createEmailIdentity(input: AwsPinpointEmailCreateEmailIdentityInput!, config: AwsConfig): AwsPinpointEmailCreateEmailIdentityOutput
  deleteConfigurationSet(input: AwsPinpointEmailDeleteConfigurationSetInput!, config: AwsConfig): JSON
  deleteConfigurationSetEventDestination(input: AwsPinpointEmailDeleteConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
  deleteDedicatedIpPool(input: AwsPinpointEmailDeleteDedicatedIpPoolInput!, config: AwsConfig): JSON
  deleteEmailIdentity(input: AwsPinpointEmailDeleteEmailIdentityInput!, config: AwsConfig): JSON
  getAccount(input: JSON, config: AwsConfig): AwsPinpointEmailGetAccountOutput
  getBlacklistReports(input: AwsPinpointEmailGetBlacklistReportsInput!, config: AwsConfig): AwsPinpointEmailGetBlacklistReportsOutput
  getConfigurationSet(input: AwsPinpointEmailGetConfigurationSetInput!, config: AwsConfig): AwsPinpointEmailGetConfigurationSetOutput
  getConfigurationSetEventDestinations(input: AwsPinpointEmailGetConfigurationSetEventDestinationsInput!, config: AwsConfig): AwsPinpointEmailGetConfigurationSetEventDestinationsOutput
  getDedicatedIp(input: AwsPinpointEmailGetDedicatedIpInput!, config: AwsConfig): AwsPinpointEmailGetDedicatedIpOutput
  getDedicatedIps(input: AwsPinpointEmailGetDedicatedIpsInput, config: AwsConfig): AwsPinpointEmailGetDedicatedIpsOutput
  getDeliverabilityDashboardOptions(input: JSON, config: AwsConfig): AwsPinpointEmailGetDeliverabilityDashboardOptionsOutput
  getDeliverabilityTestReport(input: AwsPinpointEmailGetDeliverabilityTestReportInput!, config: AwsConfig): AwsPinpointEmailGetDeliverabilityTestReportOutput
  getDomainDeliverabilityCampaign(input: AwsPinpointEmailGetDomainDeliverabilityCampaignInput!, config: AwsConfig): AwsPinpointEmailGetDomainDeliverabilityCampaignOutput
  getDomainStatisticsReport(input: AwsPinpointEmailGetDomainStatisticsReportInput!, config: AwsConfig): AwsPinpointEmailGetDomainStatisticsReportOutput
  getEmailIdentity(input: AwsPinpointEmailGetEmailIdentityInput!, config: AwsConfig): AwsPinpointEmailGetEmailIdentityOutput
  listConfigurationSets(input: AwsPinpointEmailListConfigurationSetsInput, config: AwsConfig): AwsPinpointEmailListConfigurationSetsOutput
  listDedicatedIpPools(input: AwsPinpointEmailListDedicatedIpPoolsInput, config: AwsConfig): AwsPinpointEmailListDedicatedIpPoolsOutput
  listDeliverabilityTestReports(input: AwsPinpointEmailListDeliverabilityTestReportsInput, config: AwsConfig): AwsPinpointEmailListDeliverabilityTestReportsOutput
  listDomainDeliverabilityCampaigns(input: AwsPinpointEmailListDomainDeliverabilityCampaignsInput!, config: AwsConfig): AwsPinpointEmailListDomainDeliverabilityCampaignsOutput
  listEmailIdentities(input: AwsPinpointEmailListEmailIdentitiesInput, config: AwsConfig): AwsPinpointEmailListEmailIdentitiesOutput
  listTagsForResource(input: AwsPinpointEmailListTagsForResourceInput!, config: AwsConfig): AwsPinpointEmailListTagsForResourceOutput
  putAccountDedicatedIpWarmupAttributes(input: AwsPinpointEmailPutAccountDedicatedIpWarmupAttributesInput, config: AwsConfig): JSON
  putAccountSendingAttributes(input: AwsPinpointEmailPutAccountSendingAttributesInput, config: AwsConfig): JSON
  putConfigurationSetDeliveryOptions(input: AwsPinpointEmailPutConfigurationSetDeliveryOptionsInput!, config: AwsConfig): JSON
  putConfigurationSetReputationOptions(input: AwsPinpointEmailPutConfigurationSetReputationOptionsInput!, config: AwsConfig): JSON
  putConfigurationSetSendingOptions(input: AwsPinpointEmailPutConfigurationSetSendingOptionsInput!, config: AwsConfig): JSON
  putConfigurationSetTrackingOptions(input: AwsPinpointEmailPutConfigurationSetTrackingOptionsInput!, config: AwsConfig): JSON
  putDedicatedIpInPool(input: AwsPinpointEmailPutDedicatedIpInPoolInput!, config: AwsConfig): JSON
  putDedicatedIpWarmupAttributes(input: AwsPinpointEmailPutDedicatedIpWarmupAttributesInput!, config: AwsConfig): JSON
  putDeliverabilityDashboardOption(input: AwsPinpointEmailPutDeliverabilityDashboardOptionInput!, config: AwsConfig): JSON
  putEmailIdentityDkimAttributes(input: AwsPinpointEmailPutEmailIdentityDkimAttributesInput!, config: AwsConfig): JSON
  putEmailIdentityFeedbackAttributes(input: AwsPinpointEmailPutEmailIdentityFeedbackAttributesInput!, config: AwsConfig): JSON
  putEmailIdentityMailFromAttributes(input: AwsPinpointEmailPutEmailIdentityMailFromAttributesInput!, config: AwsConfig): JSON
  sendEmail(input: AwsPinpointEmailSendEmailInput!, config: AwsConfig): AwsPinpointEmailSendEmailOutput
  tagResource(input: AwsPinpointEmailTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsPinpointEmailUntagResourceInput!, config: AwsConfig): JSON
  updateConfigurationSetEventDestination(input: AwsPinpointEmailUpdateConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
}

input AwsPinpointEmailCreateConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestinationName: String!
  EventDestination: AwsPinpointEmailSjInput!
}

input AwsPinpointEmailCreateConfigurationSetInput {
  ConfigurationSetName: String!
  TrackingOptions: AwsPinpointEmailS3Input
  DeliveryOptions: AwsPinpointEmailS5Input
  ReputationOptions: AwsPinpointEmailS8Input
  SendingOptions: AwsPinpointEmailSbInput
  Tags: [AwsPinpointEmailScInput]
}

input AwsPinpointEmailCreateDedicatedIpPoolInput {
  PoolName: String!
  Tags: [AwsPinpointEmailScInput]
}

input AwsPinpointEmailCreateDeliverabilityTestReportInput {
  ReportName: String
  FromEmailAddress: String!
  Content: AwsPinpointEmailS12Input!
  Tags: [AwsPinpointEmailScInput]
}

type AwsPinpointEmailCreateDeliverabilityTestReportOutput {
  ReportId: String!
  DeliverabilityTestStatus: String!
}

input AwsPinpointEmailCreateEmailIdentityInput {
  EmailIdentity: String!
  Tags: [AwsPinpointEmailScInput]
}

type AwsPinpointEmailCreateEmailIdentityOutput {
  IdentityType: String
  VerifiedForSendingStatus: Boolean
  DkimAttributes: AwsPinpointEmailS1h
}

input AwsPinpointEmailDeleteConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestinationName: String!
}

input AwsPinpointEmailDeleteConfigurationSetInput {
  ConfigurationSetName: String!
}

input AwsPinpointEmailDeleteDedicatedIpPoolInput {
  PoolName: String!
}

input AwsPinpointEmailDeleteEmailIdentityInput {
  EmailIdentity: String!
}

type AwsPinpointEmailGetAccountOutput {
  SendQuota: AwsPinpointEmailGetAccountOutputSendQuota
  SendingEnabled: Boolean
  DedicatedIpAutoWarmupEnabled: Boolean
  EnforcementStatus: String
  ProductionAccessEnabled: Boolean
}

type AwsPinpointEmailGetAccountOutputSendQuota {
  Max24HourSend: JSON
  MaxSendRate: JSON
  SentLast24Hours: JSON
}

input AwsPinpointEmailGetBlacklistReportsInput {
  BlacklistItemNames: [String]!
}

type AwsPinpointEmailGetBlacklistReportsOutput {
  BlacklistReport: JSON!
}

input AwsPinpointEmailGetConfigurationSetEventDestinationsInput {
  ConfigurationSetName: String!
}

type AwsPinpointEmailGetConfigurationSetEventDestinationsOutput {
  EventDestinations: [AwsPinpointEmailGetConfigurationSetEventDestinationsOutputEventDestinations]
}

type AwsPinpointEmailGetConfigurationSetEventDestinationsOutputEventDestinations {
  Name: String!
  Enabled: Boolean
  MatchingEventTypes: [String]!
  KinesisFirehoseDestination: AwsPinpointEmailSm
  CloudWatchDestination: AwsPinpointEmailSo
  SnsDestination: AwsPinpointEmailSu
  PinpointDestination: AwsPinpointEmailSv
}

input AwsPinpointEmailGetConfigurationSetInput {
  ConfigurationSetName: String!
}

type AwsPinpointEmailGetConfigurationSetOutput {
  ConfigurationSetName: String
  TrackingOptions: AwsPinpointEmailS3
  DeliveryOptions: AwsPinpointEmailS5
  ReputationOptions: AwsPinpointEmailS8
  SendingOptions: AwsPinpointEmailSb
  Tags: [AwsPinpointEmailSc]
}

input AwsPinpointEmailGetDedicatedIpInput {
  Ip: String!
}

type AwsPinpointEmailGetDedicatedIpOutput {
  DedicatedIp: AwsPinpointEmailS2j
}

input AwsPinpointEmailGetDedicatedIpsInput {
  PoolName: String
  NextToken: String
  PageSize: Int
}

type AwsPinpointEmailGetDedicatedIpsOutput {
  DedicatedIps: [AwsPinpointEmailS2j]
  NextToken: String
}

type AwsPinpointEmailGetDeliverabilityDashboardOptionsOutput {
  DashboardEnabled: Boolean!
  SubscriptionExpiryDate: Date
  AccountStatus: String
  ActiveSubscribedDomains: [AwsPinpointEmailS2u]
  PendingExpirationSubscribedDomains: [AwsPinpointEmailS2u]
}

input AwsPinpointEmailGetDeliverabilityTestReportInput {
  ReportId: String!
}

type AwsPinpointEmailGetDeliverabilityTestReportOutput {
  DeliverabilityTestReport: AwsPinpointEmailS32!
  OverallPlacement: AwsPinpointEmailS34!
  IspPlacements: [AwsPinpointEmailGetDeliverabilityTestReportOutputIspPlacements]!
  Message: String
  Tags: [AwsPinpointEmailSc]
}

type AwsPinpointEmailGetDeliverabilityTestReportOutputIspPlacements {
  IspName: String
  PlacementStatistics: AwsPinpointEmailS34
}

input AwsPinpointEmailGetDomainDeliverabilityCampaignInput {
  CampaignId: String!
}

type AwsPinpointEmailGetDomainDeliverabilityCampaignOutput {
  DomainDeliverabilityCampaign: AwsPinpointEmailS3c!
}

input AwsPinpointEmailGetDomainStatisticsReportInput {
  Domain: String!
  StartDate: Date!
  EndDate: Date!
}

type AwsPinpointEmailGetDomainStatisticsReportOutput {
  OverallVolume: AwsPinpointEmailGetDomainStatisticsReportOutputOverallVolume!
  DailyVolumes: [AwsPinpointEmailGetDomainStatisticsReportOutputDailyVolumes]!
}

type AwsPinpointEmailGetDomainStatisticsReportOutputDailyVolumes {
  StartDate: Date
  VolumeStatistics: AwsPinpointEmailS3m
  DomainIspPlacements: [AwsPinpointEmailS3n]
}

type AwsPinpointEmailGetDomainStatisticsReportOutputOverallVolume {
  VolumeStatistics: AwsPinpointEmailS3m
  ReadRatePercent: JSON
  DomainIspPlacements: [AwsPinpointEmailS3n]
}

input AwsPinpointEmailGetEmailIdentityInput {
  EmailIdentity: String!
}

type AwsPinpointEmailGetEmailIdentityOutput {
  IdentityType: String
  FeedbackForwardingStatus: Boolean
  VerifiedForSendingStatus: Boolean
  DkimAttributes: AwsPinpointEmailS1h
  MailFromAttributes: AwsPinpointEmailGetEmailIdentityOutputMailFromAttributes
  Tags: [AwsPinpointEmailSc]
}

type AwsPinpointEmailGetEmailIdentityOutputMailFromAttributes {
  MailFromDomain: String!
  MailFromDomainStatus: String!
  BehaviorOnMxFailure: String!
}

input AwsPinpointEmailListConfigurationSetsInput {
  NextToken: String
  PageSize: Int
}

type AwsPinpointEmailListConfigurationSetsOutput {
  ConfigurationSets: [String]
  NextToken: String
}

input AwsPinpointEmailListDedicatedIpPoolsInput {
  NextToken: String
  PageSize: Int
}

type AwsPinpointEmailListDedicatedIpPoolsOutput {
  DedicatedIpPools: [String]
  NextToken: String
}

input AwsPinpointEmailListDeliverabilityTestReportsInput {
  NextToken: String
  PageSize: Int
}

type AwsPinpointEmailListDeliverabilityTestReportsOutput {
  DeliverabilityTestReports: [AwsPinpointEmailS32]!
  NextToken: String
}

input AwsPinpointEmailListDomainDeliverabilityCampaignsInput {
  StartDate: Date!
  EndDate: Date!
  SubscribedDomain: String!
  NextToken: String
  PageSize: Int
}

type AwsPinpointEmailListDomainDeliverabilityCampaignsOutput {
  DomainDeliverabilityCampaigns: [AwsPinpointEmailS3c]!
  NextToken: String
}

input AwsPinpointEmailListEmailIdentitiesInput {
  NextToken: String
  PageSize: Int
}

type AwsPinpointEmailListEmailIdentitiesOutput {
  EmailIdentities: [AwsPinpointEmailListEmailIdentitiesOutputEmailIdentities]
  NextToken: String
}

type AwsPinpointEmailListEmailIdentitiesOutputEmailIdentities {
  IdentityType: String
  IdentityName: String
  SendingEnabled: Boolean
}

input AwsPinpointEmailListTagsForResourceInput {
  ResourceArn: String!
}

type AwsPinpointEmailListTagsForResourceOutput {
  Tags: [AwsPinpointEmailSc]!
}

input AwsPinpointEmailPutAccountDedicatedIpWarmupAttributesInput {
  AutoWarmupEnabled: Boolean
}

input AwsPinpointEmailPutAccountSendingAttributesInput {
  SendingEnabled: Boolean
}

input AwsPinpointEmailPutConfigurationSetDeliveryOptionsInput {
  ConfigurationSetName: String!
  TlsPolicy: String
  SendingPoolName: String
}

input AwsPinpointEmailPutConfigurationSetReputationOptionsInput {
  ConfigurationSetName: String!
  ReputationMetricsEnabled: Boolean
}

input AwsPinpointEmailPutConfigurationSetSendingOptionsInput {
  ConfigurationSetName: String!
  SendingEnabled: Boolean
}

input AwsPinpointEmailPutConfigurationSetTrackingOptionsInput {
  ConfigurationSetName: String!
  CustomRedirectDomain: String
}

input AwsPinpointEmailPutDedicatedIpInPoolInput {
  Ip: String!
  DestinationPoolName: String!
}

input AwsPinpointEmailPutDedicatedIpWarmupAttributesInput {
  Ip: String!
  WarmupPercentage: Int!
}

input AwsPinpointEmailPutDeliverabilityDashboardOptionInput {
  DashboardEnabled: Boolean!
  SubscribedDomains: [AwsPinpointEmailS2uInput]
}

input AwsPinpointEmailPutEmailIdentityDkimAttributesInput {
  EmailIdentity: String!
  SigningEnabled: Boolean
}

input AwsPinpointEmailPutEmailIdentityFeedbackAttributesInput {
  EmailIdentity: String!
  EmailForwardingEnabled: Boolean
}

input AwsPinpointEmailPutEmailIdentityMailFromAttributesInput {
  EmailIdentity: String!
  MailFromDomain: String
  BehaviorOnMxFailure: String
}

input AwsPinpointEmailS12Input {
  Simple: AwsPinpointEmailS12SimpleInput
  Raw: AwsPinpointEmailS12RawInput
}

input AwsPinpointEmailS12RawInput {
  Data: JSON!
}

input AwsPinpointEmailS12SimpleBodyInput {
  Text: AwsPinpointEmailS14Input
  Html: AwsPinpointEmailS14Input
}

input AwsPinpointEmailS12SimpleInput {
  Subject: AwsPinpointEmailS14Input!
  Body: AwsPinpointEmailS12SimpleBodyInput!
}

input AwsPinpointEmailS14Input {
  Data: String!
  Charset: String
}

type AwsPinpointEmailS1h {
  SigningEnabled: Boolean
  Status: String
  Tokens: [String]
}

type AwsPinpointEmailS2j {
  Ip: String!
  WarmupStatus: String!
  WarmupPercentage: Int!
  PoolName: String
}

type AwsPinpointEmailS2u {
  Domain: String
  SubscriptionStartDate: Date
  InboxPlacementTrackingOption: AwsPinpointEmailS2uInboxPlacementTrackingOption
}

type AwsPinpointEmailS2uInboxPlacementTrackingOption {
  Global: Boolean
  TrackedIsps: [String]
}

input AwsPinpointEmailS2uInboxPlacementTrackingOptionInput {
  Global: Boolean
  TrackedIsps: [String]
}

input AwsPinpointEmailS2uInput {
  Domain: String
  SubscriptionStartDate: Date
  InboxPlacementTrackingOption: AwsPinpointEmailS2uInboxPlacementTrackingOptionInput
}

type AwsPinpointEmailS3 {
  CustomRedirectDomain: String!
}

type AwsPinpointEmailS32 {
  ReportId: String
  ReportName: String
  Subject: String
  FromEmailAddress: String
  CreateDate: Date
  DeliverabilityTestStatus: String
}

type AwsPinpointEmailS34 {
  InboxPercentage: JSON
  SpamPercentage: JSON
  MissingPercentage: JSON
  SpfPercentage: JSON
  DkimPercentage: JSON
}

type AwsPinpointEmailS3c {
  CampaignId: String
  ImageUrl: String
  Subject: String
  FromAddress: String
  SendingIps: [String]
  FirstSeenDateTime: Date
  LastSeenDateTime: Date
  InboxCount: JSON
  SpamCount: JSON
  ReadRate: JSON
  DeleteRate: JSON
  ReadDeleteRate: JSON
  ProjectedVolume: JSON
  Esps: [String]
}

input AwsPinpointEmailS3Input {
  CustomRedirectDomain: String!
}

type AwsPinpointEmailS3m {
  InboxRawCount: JSON
  SpamRawCount: JSON
  ProjectedInbox: JSON
  ProjectedSpam: JSON
}

type AwsPinpointEmailS3n {
  IspName: String
  InboxRawCount: JSON
  SpamRawCount: JSON
  InboxPercentage: JSON
  SpamPercentage: JSON
}

type AwsPinpointEmailS5 {
  TlsPolicy: String
  SendingPoolName: String
}

input AwsPinpointEmailS5Input {
  TlsPolicy: String
  SendingPoolName: String
}

type AwsPinpointEmailS8 {
  ReputationMetricsEnabled: Boolean
  LastFreshStart: Date
}

input AwsPinpointEmailS8Input {
  ReputationMetricsEnabled: Boolean
  LastFreshStart: Date
}

type AwsPinpointEmailSb {
  SendingEnabled: Boolean
}

input AwsPinpointEmailSbInput {
  SendingEnabled: Boolean
}

type AwsPinpointEmailSc {
  Key: String!
  Value: String!
}

input AwsPinpointEmailScInput {
  Key: String!
  Value: String!
}

input AwsPinpointEmailSendEmailDestinationInput {
  ToAddresses: [String]
  CcAddresses: [String]
  BccAddresses: [String]
}

input AwsPinpointEmailSendEmailEmailTagsInput {
  Name: String!
  Value: String!
}

input AwsPinpointEmailSendEmailInput {
  FromEmailAddress: String
  Destination: AwsPinpointEmailSendEmailDestinationInput!
  ReplyToAddresses: [String]
  FeedbackForwardingEmailAddress: String
  Content: AwsPinpointEmailS12Input!
  EmailTags: [AwsPinpointEmailSendEmailEmailTagsInput]
  ConfigurationSetName: String
}

type AwsPinpointEmailSendEmailOutput {
  MessageId: String
}

input AwsPinpointEmailSjInput {
  Enabled: Boolean
  MatchingEventTypes: [String]
  KinesisFirehoseDestination: AwsPinpointEmailSmInput
  CloudWatchDestination: AwsPinpointEmailSoInput
  SnsDestination: AwsPinpointEmailSuInput
  PinpointDestination: AwsPinpointEmailSvInput
}

type AwsPinpointEmailSm {
  IamRoleArn: String!
  DeliveryStreamArn: String!
}

input AwsPinpointEmailSmInput {
  IamRoleArn: String!
  DeliveryStreamArn: String!
}

type AwsPinpointEmailSo {
  DimensionConfigurations: [AwsPinpointEmailSoDimensionConfigurations]!
}

type AwsPinpointEmailSoDimensionConfigurations {
  DimensionName: String!
  DimensionValueSource: String!
  DefaultDimensionValue: String!
}

input AwsPinpointEmailSoDimensionConfigurationsInput {
  DimensionName: String!
  DimensionValueSource: String!
  DefaultDimensionValue: String!
}

input AwsPinpointEmailSoInput {
  DimensionConfigurations: [AwsPinpointEmailSoDimensionConfigurationsInput]!
}

type AwsPinpointEmailSu {
  TopicArn: String!
}

input AwsPinpointEmailSuInput {
  TopicArn: String!
}

type AwsPinpointEmailSv {
  ApplicationArn: String
}

input AwsPinpointEmailSvInput {
  ApplicationArn: String
}

input AwsPinpointEmailTagResourceInput {
  ResourceArn: String!
  Tags: [AwsPinpointEmailScInput]!
}

input AwsPinpointEmailUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsPinpointEmailUpdateConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestinationName: String!
  EventDestination: AwsPinpointEmailSjInput!
}

input AwsPinpointGetAdmChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetAdmChannelOutput {
  ADMChannelResponse: AwsPinpointS2a!
}

input AwsPinpointGetApnsChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsChannelOutput {
  APNSChannelResponse: AwsPinpointS2d!
}

input AwsPinpointGetApnsSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsSandboxChannelOutput {
  APNSSandboxChannelResponse: AwsPinpointS2g!
}

input AwsPinpointGetApnsVoipChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsVoipChannelOutput {
  APNSVoipChannelResponse: AwsPinpointS2j!
}

input AwsPinpointGetApnsVoipSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsVoipSandboxChannelOutput {
  APNSVoipSandboxChannelResponse: AwsPinpointS2m!
}

input AwsPinpointGetAppInput {
  ApplicationId: String!
}

input AwsPinpointGetApplicationSettingsInput {
  ApplicationId: String!
}

type AwsPinpointGetApplicationSettingsOutput {
  ApplicationSettingsResource: AwsPinpointS42!
}

type AwsPinpointGetAppOutput {
  ApplicationResponse: AwsPinpointS6!
}

input AwsPinpointGetAppsInput {
  PageSize: String
  Token: String
}

type AwsPinpointGetAppsOutput {
  ApplicationsResponse: AwsPinpointGetAppsOutputApplicationsResponse!
}

type AwsPinpointGetAppsOutputApplicationsResponse {
  Item: [AwsPinpointS6]
  NextToken: String
}

input AwsPinpointGetBaiduChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetBaiduChannelOutput {
  BaiduChannelResponse: AwsPinpointS2r!
}

input AwsPinpointGetCampaignActivitiesInput {
  ApplicationId: String!
  CampaignId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetCampaignActivitiesOutput {
  ActivitiesResponse: AwsPinpointGetCampaignActivitiesOutputActivitiesResponse!
}

type AwsPinpointGetCampaignActivitiesOutputActivitiesResponse {
  Item: [AwsPinpointGetCampaignActivitiesOutputActivitiesResponseItem]!
  NextToken: String
}

type AwsPinpointGetCampaignActivitiesOutputActivitiesResponseItem {
  ApplicationId: String!
  CampaignId: String!
  End: String
  Id: String!
  Result: String
  ScheduledStart: String
  Start: String
  State: String
  SuccessfulEndpointCount: Int
  TimezonesCompletedCount: Int
  TimezonesTotalCount: Int
  TotalEndpointCount: Int
  TreatmentId: String
}

input AwsPinpointGetCampaignInput {
  ApplicationId: String!
  CampaignId: String!
}

type AwsPinpointGetCampaignOutput {
  CampaignResponse: AwsPinpointS12!
}

input AwsPinpointGetCampaignsInput {
  ApplicationId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetCampaignsOutput {
  CampaignsResponse: AwsPinpointS4k!
}

input AwsPinpointGetCampaignVersionInput {
  ApplicationId: String!
  CampaignId: String!
  Version: String!
}

type AwsPinpointGetCampaignVersionOutput {
  CampaignResponse: AwsPinpointS12!
}

input AwsPinpointGetCampaignVersionsInput {
  ApplicationId: String!
  CampaignId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetCampaignVersionsOutput {
  CampaignsResponse: AwsPinpointS4k!
}

input AwsPinpointGetChannelsInput {
  ApplicationId: String!
}

type AwsPinpointGetChannelsOutput {
  ChannelsResponse: AwsPinpointGetChannelsOutputChannelsResponse!
}

type AwsPinpointGetChannelsOutputChannelsResponse {
  Channels: JSON!
}

input AwsPinpointGetEmailChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetEmailChannelOutput {
  EmailChannelResponse: AwsPinpointS2w!
}

input AwsPinpointGetEndpointInput {
  ApplicationId: String!
  EndpointId: String!
}

type AwsPinpointGetEndpointOutput {
  EndpointResponse: AwsPinpointS2z!
}

input AwsPinpointGetEventStreamInput {
  ApplicationId: String!
}

type AwsPinpointGetEventStreamOutput {
  EventStream: AwsPinpointS38!
}

input AwsPinpointGetExportJobInput {
  ApplicationId: String!
  JobId: String!
}

type AwsPinpointGetExportJobOutput {
  ExportJobResponse: AwsPinpointS1a!
}

input AwsPinpointGetExportJobsInput {
  ApplicationId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetExportJobsOutput {
  ExportJobsResponse: AwsPinpointS53!
}

input AwsPinpointGetGcmChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetGcmChannelOutput {
  GCMChannelResponse: AwsPinpointS3b!
}

input AwsPinpointGetImportJobInput {
  ApplicationId: String!
  JobId: String!
}

type AwsPinpointGetImportJobOutput {
  ImportJobResponse: AwsPinpointS1h!
}

input AwsPinpointGetImportJobsInput {
  ApplicationId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetImportJobsOutput {
  ImportJobsResponse: AwsPinpointS5b!
}

input AwsPinpointGetSegmentExportJobsInput {
  ApplicationId: String!
  PageSize: String
  SegmentId: String!
  Token: String
}

type AwsPinpointGetSegmentExportJobsOutput {
  ExportJobsResponse: AwsPinpointS53!
}

input AwsPinpointGetSegmentImportJobsInput {
  ApplicationId: String!
  PageSize: String
  SegmentId: String!
  Token: String
}

type AwsPinpointGetSegmentImportJobsOutput {
  ImportJobsResponse: AwsPinpointS5b!
}

input AwsPinpointGetSegmentInput {
  ApplicationId: String!
  SegmentId: String!
}

type AwsPinpointGetSegmentOutput {
  SegmentResponse: AwsPinpointS24!
}

input AwsPinpointGetSegmentsInput {
  ApplicationId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetSegmentsOutput {
  SegmentsResponse: AwsPinpointS5n!
}

input AwsPinpointGetSegmentVersionInput {
  ApplicationId: String!
  SegmentId: String!
  Version: String!
}

type AwsPinpointGetSegmentVersionOutput {
  SegmentResponse: AwsPinpointS24!
}

input AwsPinpointGetSegmentVersionsInput {
  ApplicationId: String!
  PageSize: String
  SegmentId: String!
  Token: String
}

type AwsPinpointGetSegmentVersionsOutput {
  SegmentsResponse: AwsPinpointS5n!
}

input AwsPinpointGetSmsChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetSmsChannelOutput {
  SMSChannelResponse: AwsPinpointS3g!
}

input AwsPinpointGetUserEndpointsInput {
  ApplicationId: String!
  UserId: String!
}

type AwsPinpointGetUserEndpointsOutput {
  EndpointsResponse: AwsPinpointS3j!
}

input AwsPinpointGetVoiceChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetVoiceChannelOutput {
  VoiceChannelResponse: AwsPinpointS3n!
}

input AwsPinpointListTagsForResourceInput {
  ResourceArn: String!
}

type AwsPinpointListTagsForResourceOutput {
  TagsModel: AwsPinpointS5z!
}

input AwsPinpointPhoneNumberValidateInput {
  NumberValidateRequest: AwsPinpointPhoneNumberValidateNumberValidateRequestInput!
}

input AwsPinpointPhoneNumberValidateNumberValidateRequestInput {
  IsoCountryCode: String
  PhoneNumber: String
}

type AwsPinpointPhoneNumberValidateOutput {
  NumberValidateResponse: AwsPinpointPhoneNumberValidateOutputNumberValidateResponse!
}

type AwsPinpointPhoneNumberValidateOutputNumberValidateResponse {
  Carrier: String
  City: String
  CleansedPhoneNumberE164: String
  CleansedPhoneNumberNational: String
  Country: String
  CountryCodeIso2: String
  CountryCodeNumeric: String
  County: String
  OriginalCountryCodeIso2: String
  OriginalPhoneNumber: String
  PhoneType: String
  PhoneTypeCode: Int
  Timezone: String
  ZipCode: String
}

input AwsPinpointPutEventsEventsRequestInput {
  BatchItem: JSON!
}

input AwsPinpointPutEventsInput {
  ApplicationId: String!
  EventsRequest: AwsPinpointPutEventsEventsRequestInput!
}

type AwsPinpointPutEventsOutput {
  EventsResponse: AwsPinpointPutEventsOutputEventsResponse!
}

type AwsPinpointPutEventsOutputEventsResponse {
  Results: JSON
}

input AwsPinpointPutEventStreamInput {
  ApplicationId: String!
  WriteEventStream: AwsPinpointPutEventStreamWriteEventStreamInput!
}

type AwsPinpointPutEventStreamOutput {
  EventStream: AwsPinpointS38!
}

input AwsPinpointPutEventStreamWriteEventStreamInput {
  DestinationStreamArn: String!
  RoleArn: String!
}

input AwsPinpointRemoveAttributesInput {
  ApplicationId: String!
  AttributeType: String!
  UpdateAttributesRequest: AwsPinpointRemoveAttributesUpdateAttributesRequestInput!
}

type AwsPinpointRemoveAttributesOutput {
  AttributesResource: AwsPinpointRemoveAttributesOutputAttributesResource!
}

type AwsPinpointRemoveAttributesOutputAttributesResource {
  ApplicationId: String!
  AttributeType: String!
  Attributes: [String]
}

input AwsPinpointRemoveAttributesUpdateAttributesRequestInput {
  Blacklist: [String]
}

type AwsPinpointS10 {
  Daily: Int
  MaximumDuration: Int
  MessagesPerSecond: Int
  Total: Int
}

input AwsPinpointS10Input {
  Daily: Int
  MaximumDuration: Int
  MessagesPerSecond: Int
  Total: Int
}

type AwsPinpointS12 {
  AdditionalTreatments: [AwsPinpointS12AdditionalTreatments]
  ApplicationId: String!
  Arn: String!
  CreationDate: String!
  DefaultState: AwsPinpointS15
  Description: String
  HoldoutPercent: Int
  Hook: AwsPinpointSy
  Id: String!
  IsPaused: Boolean
  LastModifiedDate: String!
  Limits: AwsPinpointS10
  MessageConfiguration: AwsPinpointSb
  Name: String
  Schedule: AwsPinpointSj
  SegmentId: String!
  SegmentVersion: Int!
  State: AwsPinpointS15
  tags: JSON
  TreatmentDescription: String
  TreatmentName: String
  Version: Int
}

type AwsPinpointS12AdditionalTreatments {
  Id: String!
  MessageConfiguration: AwsPinpointSb
  Schedule: AwsPinpointSj
  SizePercent: Int!
  State: AwsPinpointS15
  TreatmentDescription: String
  TreatmentName: String
}

type AwsPinpointS15 {
  CampaignStatus: String
}

type AwsPinpointS1a {
  ApplicationId: String!
  CompletedPieces: Int
  CompletionDate: String
  CreationDate: String!
  Definition: AwsPinpointS1aDefinition!
  FailedPieces: Int
  Failures: [String]
  Id: String!
  JobStatus: String!
  TotalFailures: Int
  TotalPieces: Int
  TotalProcessed: Int
  Type: String!
}

type AwsPinpointS1aDefinition {
  RoleArn: String!
  S3UrlPrefix: String!
  SegmentId: String
  SegmentVersion: Int
}

type AwsPinpointS1h {
  ApplicationId: String!
  CompletedPieces: Int
  CompletionDate: String
  CreationDate: String!
  Definition: AwsPinpointS1hDefinition!
  FailedPieces: Int
  Failures: [String]
  Id: String!
  JobStatus: String!
  TotalFailures: Int
  TotalPieces: Int
  TotalProcessed: Int
  Type: String!
}

type AwsPinpointS1hDefinition {
  DefineSegment: Boolean
  ExternalId: String
  Format: String!
  RegisterEndpoints: Boolean
  RoleArn: String!
  S3Url: String!
  SegmentId: String
  SegmentName: String
}

input AwsPinpointS1kInput {
  Dimensions: AwsPinpointS1lInput
  Name: String
  SegmentGroups: AwsPinpointS1uInput
  tags: JSON
}

type AwsPinpointS1l {
  Attributes: JSON
  Behavior: AwsPinpointS1lBehavior
  Demographic: AwsPinpointS1lDemographic
  Location: AwsPinpointS1lLocation
  Metrics: JSON
  UserAttributes: JSON
}

type AwsPinpointS1lBehavior {
  Recency: AwsPinpointS1lBehaviorRecency
}

input AwsPinpointS1lBehaviorInput {
  Recency: AwsPinpointS1lBehaviorRecencyInput
}

type AwsPinpointS1lBehaviorRecency {
  Duration: String!
  RecencyType: String!
}

input AwsPinpointS1lBehaviorRecencyInput {
  Duration: String!
  RecencyType: String!
}

type AwsPinpointS1lDemographic {
  AppVersion: AwsPinpointSq
  Channel: AwsPinpointSq
  DeviceType: AwsPinpointSq
  Make: AwsPinpointSq
  Model: AwsPinpointSq
  Platform: AwsPinpointSq
}

input AwsPinpointS1lDemographicInput {
  AppVersion: AwsPinpointSqInput
  Channel: AwsPinpointSqInput
  DeviceType: AwsPinpointSqInput
  Make: AwsPinpointSqInput
  Model: AwsPinpointSqInput
  Platform: AwsPinpointSqInput
}

input AwsPinpointS1lInput {
  Attributes: JSON
  Behavior: AwsPinpointS1lBehaviorInput
  Demographic: AwsPinpointS1lDemographicInput
  Location: AwsPinpointS1lLocationInput
  Metrics: JSON
  UserAttributes: JSON
}

type AwsPinpointS1lLocation {
  Country: AwsPinpointSq
  GPSPoint: AwsPinpointS1lLocationGPSPoint
}

type AwsPinpointS1lLocationGPSPoint {
  Coordinates: AwsPinpointS1lLocationGPSPointCoordinates!
  RangeInKilometers: JSON
}

type AwsPinpointS1lLocationGPSPointCoordinates {
  Latitude: JSON!
  Longitude: JSON!
}

input AwsPinpointS1lLocationGPSPointCoordinatesInput {
  Latitude: JSON!
  Longitude: JSON!
}

input AwsPinpointS1lLocationGPSPointInput {
  Coordinates: AwsPinpointS1lLocationGPSPointCoordinatesInput!
  RangeInKilometers: JSON
}

input AwsPinpointS1lLocationInput {
  Country: AwsPinpointSqInput
  GPSPoint: AwsPinpointS1lLocationGPSPointInput
}

type AwsPinpointS1u {
  Groups: [AwsPinpointS1uGroups]
  Include: String
}

type AwsPinpointS1uGroups {
  Dimensions: [AwsPinpointS1l]
  SourceSegments: [AwsPinpointS1uGroupsSourceSegments]
  SourceType: String
  Type: String
}

input AwsPinpointS1uGroupsInput {
  Dimensions: [AwsPinpointS1lInput]
  SourceSegments: [AwsPinpointS1uGroupsSourceSegmentsInput]
  SourceType: String
  Type: String
}

type AwsPinpointS1uGroupsSourceSegments {
  Id: String!
  Version: Int
}

input AwsPinpointS1uGroupsSourceSegmentsInput {
  Id: String!
  Version: Int
}

input AwsPinpointS1uInput {
  Groups: [AwsPinpointS1uGroupsInput]
  Include: String
}

type AwsPinpointS24 {
  ApplicationId: String!
  Arn: String!
  CreationDate: String!
  Dimensions: AwsPinpointS1l
  Id: String!
  ImportDefinition: AwsPinpointS24ImportDefinition
  LastModifiedDate: String
  Name: String
  SegmentGroups: AwsPinpointS1u
  SegmentType: String!
  tags: JSON
  Version: Int
}

type AwsPinpointS24ImportDefinition {
  ChannelCounts: JSON
  ExternalId: String!
  Format: String!
  RoleArn: String!
  S3Url: String!
  Size: Int!
}

type AwsPinpointS2a {
  ApplicationId: String
  CreationDate: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String!
  Version: Int
}

type AwsPinpointS2d {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String!
  Version: Int
}

type AwsPinpointS2g {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String!
  Version: Int
}

type AwsPinpointS2j {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String!
  Version: Int
}

type AwsPinpointS2m {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String!
  Version: Int
}

type AwsPinpointS2r {
  ApplicationId: String
  CreationDate: String
  Credential: String!
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String!
  Version: Int
}

type AwsPinpointS2w {
  ApplicationId: String
  ConfigurationSet: String
  CreationDate: String
  Enabled: Boolean
  FromAddress: String
  HasCredential: Boolean
  Id: String
  Identity: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  MessagesPerSecond: Int
  Platform: String!
  RoleArn: String
  Version: Int
}

type AwsPinpointS2z {
  Address: String
  ApplicationId: String
  Attributes: JSON
  ChannelType: String
  CohortId: String
  CreationDate: String
  Demographic: AwsPinpointS32
  EffectiveDate: String
  EndpointStatus: String
  Id: String
  Location: AwsPinpointS33
  Metrics: JSON
  OptOut: String
  RequestId: String
  User: AwsPinpointS35
}

type AwsPinpointS32 {
  AppVersion: String
  Locale: String
  Make: String
  Model: String
  ModelVersion: String
  Platform: String
  PlatformVersion: String
  Timezone: String
}

input AwsPinpointS32Input {
  AppVersion: String
  Locale: String
  Make: String
  Model: String
  ModelVersion: String
  Platform: String
  PlatformVersion: String
  Timezone: String
}

type AwsPinpointS33 {
  City: String
  Country: String
  Latitude: JSON
  Longitude: JSON
  PostalCode: String
  Region: String
}

input AwsPinpointS33Input {
  City: String
  Country: String
  Latitude: JSON
  Longitude: JSON
  PostalCode: String
  Region: String
}

type AwsPinpointS35 {
  UserAttributes: JSON
  UserId: String
}

input AwsPinpointS35Input {
  UserAttributes: JSON
  UserId: String
}

type AwsPinpointS38 {
  ApplicationId: String!
  DestinationStreamArn: String!
  ExternalId: String
  LastModifiedDate: String
  LastUpdatedBy: String
  RoleArn: String!
}

type AwsPinpointS3b {
  ApplicationId: String
  CreationDate: String
  Credential: String!
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String!
  Version: Int
}

type AwsPinpointS3g {
  ApplicationId: String
  CreationDate: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String!
  PromotionalMessagesPerSecond: Int
  SenderId: String
  ShortCode: String
  TransactionalMessagesPerSecond: Int
  Version: Int
}

type AwsPinpointS3j {
  Item: [AwsPinpointS2z]!
}

type AwsPinpointS3n {
  ApplicationId: String
  CreationDate: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String!
  Version: Int
}

type AwsPinpointS42 {
  ApplicationId: String!
  CampaignHook: AwsPinpointSy
  LastModifiedDate: String
  Limits: AwsPinpointS10
  QuietTime: AwsPinpointSx
}

type AwsPinpointS4k {
  Item: [AwsPinpointS12]!
  NextToken: String
}

type AwsPinpointS53 {
  Item: [AwsPinpointS1a]!
  NextToken: String
}

type AwsPinpointS5b {
  Item: [AwsPinpointS1h]!
  NextToken: String
}

type AwsPinpointS5n {
  Item: [AwsPinpointS24]!
  NextToken: String
}

type AwsPinpointS5z {
  tags: JSON!
}

input AwsPinpointS5zInput {
  tags: JSON!
}

type AwsPinpointS6 {
  Arn: String!
  Id: String!
  Name: String!
  tags: JSON
}

input AwsPinpointS6wADMMessageInput {
  Action: String
  Body: String
  ConsolidationKey: String
  Data: JSON
  ExpiresAfter: String
  IconReference: String
  ImageIconUrl: String
  ImageUrl: String
  MD5: String
  RawContent: String
  SilentPush: Boolean
  SmallImageIconUrl: String
  Sound: String
  Substitutions: JSON
  Title: String
  Url: String
}

input AwsPinpointS6wAPNSMessageInput {
  Action: String
  Badge: Int
  Body: String
  Category: String
  CollapseId: String
  Data: JSON
  MediaUrl: String
  PreferredAuthenticationMethod: String
  Priority: String
  RawContent: String
  SilentPush: Boolean
  Sound: String
  Substitutions: JSON
  ThreadId: String
  TimeToLive: Int
  Title: String
  Url: String
}

input AwsPinpointS6wBaiduMessageInput {
  Action: String
  Body: String
  Data: JSON
  IconReference: String
  ImageIconUrl: String
  ImageUrl: String
  RawContent: String
  SilentPush: Boolean
  SmallImageIconUrl: String
  Sound: String
  Substitutions: JSON
  TimeToLive: Int
  Title: String
  Url: String
}

input AwsPinpointS6wDefaultMessageInput {
  Body: String
  Substitutions: JSON
}

input AwsPinpointS6wDefaultPushNotificationMessageInput {
  Action: String
  Body: String
  Data: JSON
  SilentPush: Boolean
  Substitutions: JSON
  Title: String
  Url: String
}

input AwsPinpointS6wEmailMessageInput {
  Body: String
  FeedbackForwardingAddress: String
  FromAddress: String
  RawEmail: AwsPinpointS6wEmailMessageRawEmailInput
  ReplyToAddresses: [String]
  SimpleEmail: AwsPinpointS6wEmailMessageSimpleEmailInput
  Substitutions: JSON
}

input AwsPinpointS6wEmailMessageRawEmailInput {
  Data: JSON
}

input AwsPinpointS6wEmailMessageSimpleEmailInput {
  HtmlPart: AwsPinpointS76Input
  Subject: AwsPinpointS76Input
  TextPart: AwsPinpointS76Input
}

input AwsPinpointS6wGCMMessageInput {
  Action: String
  Body: String
  CollapseKey: String
  Data: JSON
  IconReference: String
  ImageIconUrl: String
  ImageUrl: String
  Priority: String
  RawContent: String
  RestrictedPackageName: String
  SilentPush: Boolean
  SmallImageIconUrl: String
  Sound: String
  Substitutions: JSON
  TimeToLive: Int
  Title: String
  Url: String
}

input AwsPinpointS6wInput {
  ADMMessage: AwsPinpointS6wADMMessageInput
  APNSMessage: AwsPinpointS6wAPNSMessageInput
  BaiduMessage: AwsPinpointS6wBaiduMessageInput
  DefaultMessage: AwsPinpointS6wDefaultMessageInput
  DefaultPushNotificationMessage: AwsPinpointS6wDefaultPushNotificationMessageInput
  EmailMessage: AwsPinpointS6wEmailMessageInput
  GCMMessage: AwsPinpointS6wGCMMessageInput
  SMSMessage: AwsPinpointS6wSMSMessageInput
  VoiceMessage: AwsPinpointS6wVoiceMessageInput
}

input AwsPinpointS6wSMSMessageInput {
  Body: String
  Keyword: String
  MessageType: String
  OriginationNumber: String
  SenderId: String
  Substitutions: JSON
}

input AwsPinpointS6wVoiceMessageInput {
  Body: String
  LanguageCode: String
  OriginationNumber: String
  Substitutions: JSON
  VoiceId: String
}

input AwsPinpointS76Input {
  Charset: String
  Data: String
}

input AwsPinpointS8AdditionalTreatmentsInput {
  MessageConfiguration: AwsPinpointSbInput
  Schedule: AwsPinpointSjInput
  SizePercent: Int!
  TreatmentDescription: String
  TreatmentName: String
}

type AwsPinpointS8h {
  Message: String
  RequestID: String
}

input AwsPinpointS8Input {
  AdditionalTreatments: [AwsPinpointS8AdditionalTreatmentsInput]
  Description: String
  HoldoutPercent: Int
  Hook: AwsPinpointSyInput
  IsPaused: Boolean
  Limits: AwsPinpointS10Input
  MessageConfiguration: AwsPinpointSbInput
  Name: String
  Schedule: AwsPinpointSjInput
  SegmentId: String
  SegmentVersion: Int
  tags: JSON
  TreatmentDescription: String
  TreatmentName: String
}

type AwsPinpointSb {
  ADMMessage: AwsPinpointSc
  APNSMessage: AwsPinpointSc
  BaiduMessage: AwsPinpointSc
  DefaultMessage: AwsPinpointSc
  EmailMessage: AwsPinpointSbEmailMessage
  GCMMessage: AwsPinpointSc
  SMSMessage: AwsPinpointSbSMSMessage
}

type AwsPinpointSbEmailMessage {
  Body: String
  FromAddress: String
  HtmlBody: String
  Title: String!
}

input AwsPinpointSbEmailMessageInput {
  Body: String
  FromAddress: String
  HtmlBody: String
  Title: String!
}

input AwsPinpointSbInput {
  ADMMessage: AwsPinpointScInput
  APNSMessage: AwsPinpointScInput
  BaiduMessage: AwsPinpointScInput
  DefaultMessage: AwsPinpointScInput
  EmailMessage: AwsPinpointSbEmailMessageInput
  GCMMessage: AwsPinpointScInput
  SMSMessage: AwsPinpointSbSMSMessageInput
}

type AwsPinpointSbSMSMessage {
  Body: String
  MessageType: String
  SenderId: String
}

input AwsPinpointSbSMSMessageInput {
  Body: String
  MessageType: String
  SenderId: String
}

type AwsPinpointSc {
  Action: String
  Body: String
  ImageIconUrl: String
  ImageSmallIconUrl: String
  ImageUrl: String
  JsonBody: String
  MediaUrl: String
  RawContent: String
  SilentPush: Boolean
  TimeToLive: Int
  Title: String
  Url: String
}

input AwsPinpointScInput {
  Action: String
  Body: String
  ImageIconUrl: String
  ImageSmallIconUrl: String
  ImageUrl: String
  JsonBody: String
  MediaUrl: String
  RawContent: String
  SilentPush: Boolean
  TimeToLive: Int
  Title: String
  Url: String
}

input AwsPinpointSendMessagesInput {
  ApplicationId: String!
  MessageRequest: AwsPinpointSendMessagesMessageRequestInput!
}

input AwsPinpointSendMessagesMessageRequestInput {
  Addresses: JSON
  Context: JSON
  Endpoints: JSON
  MessageConfiguration: AwsPinpointS6wInput!
  TraceId: String
}

type AwsPinpointSendMessagesOutput {
  MessageResponse: AwsPinpointSendMessagesOutputMessageResponse!
}

type AwsPinpointSendMessagesOutputMessageResponse {
  ApplicationId: String!
  EndpointResult: JSON
  RequestId: String
  Result: JSON
}

input AwsPinpointSendUsersMessagesInput {
  ApplicationId: String!
  SendUsersMessageRequest: AwsPinpointSendUsersMessagesSendUsersMessageRequestInput!
}

type AwsPinpointSendUsersMessagesOutput {
  SendUsersMessageResponse: AwsPinpointSendUsersMessagesOutputSendUsersMessageResponse!
}

type AwsPinpointSendUsersMessagesOutputSendUsersMessageResponse {
  ApplicationId: String!
  RequestId: String
  Result: JSON
}

input AwsPinpointSendUsersMessagesSendUsersMessageRequestInput {
  Context: JSON
  MessageConfiguration: AwsPinpointS6wInput!
  TraceId: String
  Users: JSON!
}

type AwsPinpointSj {
  EndTime: String
  EventFilter: AwsPinpointSjEventFilter
  Frequency: String
  IsLocalTime: Boolean
  QuietTime: AwsPinpointSx
  StartTime: String!
  Timezone: String
}

type AwsPinpointSjEventFilter {
  Dimensions: AwsPinpointSjEventFilterDimensions!
  FilterType: String!
}

type AwsPinpointSjEventFilterDimensions {
  Attributes: JSON
  EventType: AwsPinpointSq
  Metrics: JSON
}

input AwsPinpointSjEventFilterDimensionsInput {
  Attributes: JSON
  EventType: AwsPinpointSqInput
  Metrics: JSON
}

input AwsPinpointSjEventFilterInput {
  Dimensions: AwsPinpointSjEventFilterDimensionsInput!
  FilterType: String!
}

input AwsPinpointSjInput {
  EndTime: String
  EventFilter: AwsPinpointSjEventFilterInput
  Frequency: String
  IsLocalTime: Boolean
  QuietTime: AwsPinpointSxInput
  StartTime: String!
  Timezone: String
}

"""Amazon Pinpoint SMS and Voice Service (2018-09-05)"""
type AwsPinpointSMSVoice {
  createConfigurationSet(input: AwsPinpointSMSVoiceCreateConfigurationSetInput, config: AwsConfig): JSON
  createConfigurationSetEventDestination(input: AwsPinpointSMSVoiceCreateConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
  deleteConfigurationSet(input: AwsPinpointSMSVoiceDeleteConfigurationSetInput!, config: AwsConfig): JSON
  deleteConfigurationSetEventDestination(input: AwsPinpointSMSVoiceDeleteConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
  getConfigurationSetEventDestinations(input: AwsPinpointSMSVoiceGetConfigurationSetEventDestinationsInput!, config: AwsConfig): AwsPinpointSMSVoiceGetConfigurationSetEventDestinationsOutput
  listConfigurationSets(input: AwsPinpointSMSVoiceListConfigurationSetsInput, config: AwsConfig): AwsPinpointSMSVoiceListConfigurationSetsOutput
  sendVoiceMessage(input: AwsPinpointSMSVoiceSendVoiceMessageInput, config: AwsConfig): AwsPinpointSMSVoiceSendVoiceMessageOutput
  updateConfigurationSetEventDestination(input: AwsPinpointSMSVoiceUpdateConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
}

input AwsPinpointSMSVoiceCreateConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestination: AwsPinpointSMSVoiceS6Input
  EventDestinationName: String
}

input AwsPinpointSMSVoiceCreateConfigurationSetInput {
  ConfigurationSetName: String
}

input AwsPinpointSMSVoiceDeleteConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestinationName: String!
}

input AwsPinpointSMSVoiceDeleteConfigurationSetInput {
  ConfigurationSetName: String!
}

input AwsPinpointSMSVoiceGetConfigurationSetEventDestinationsInput {
  ConfigurationSetName: String!
}

type AwsPinpointSMSVoiceGetConfigurationSetEventDestinationsOutput {
  EventDestinations: [AwsPinpointSMSVoiceGetConfigurationSetEventDestinationsOutputEventDestinations]
}

type AwsPinpointSMSVoiceGetConfigurationSetEventDestinationsOutputEventDestinations {
  CloudWatchLogsDestination: AwsPinpointSMSVoiceS7
  Enabled: Boolean
  KinesisFirehoseDestination: AwsPinpointSMSVoiceSa
  MatchingEventTypes: [String]
  Name: String
  SnsDestination: AwsPinpointSMSVoiceSd
}

input AwsPinpointSMSVoiceListConfigurationSetsInput {
  NextToken: String
  PageSize: String
}

type AwsPinpointSMSVoiceListConfigurationSetsOutput {
  ConfigurationSets: [String]
  NextToken: String
}

input AwsPinpointSMSVoiceS6Input {
  CloudWatchLogsDestination: AwsPinpointSMSVoiceS7Input
  Enabled: Boolean
  KinesisFirehoseDestination: AwsPinpointSMSVoiceSaInput
  MatchingEventTypes: [String]
  SnsDestination: AwsPinpointSMSVoiceSdInput
}

type AwsPinpointSMSVoiceS7 {
  IamRoleArn: String
  LogGroupArn: String
}

input AwsPinpointSMSVoiceS7Input {
  IamRoleArn: String
  LogGroupArn: String
}

type AwsPinpointSMSVoiceSa {
  DeliveryStreamArn: String
  IamRoleArn: String
}

input AwsPinpointSMSVoiceSaInput {
  DeliveryStreamArn: String
  IamRoleArn: String
}

type AwsPinpointSMSVoiceSd {
  TopicArn: String
}

input AwsPinpointSMSVoiceSdInput {
  TopicArn: String
}

input AwsPinpointSMSVoiceSendVoiceMessageContentCallInstructionsMessageInput {
  Text: String
}

input AwsPinpointSMSVoiceSendVoiceMessageContentInput {
  CallInstructionsMessage: AwsPinpointSMSVoiceSendVoiceMessageContentCallInstructionsMessageInput
  PlainTextMessage: AwsPinpointSMSVoiceSendVoiceMessageContentPlainTextMessageInput
  SSMLMessage: AwsPinpointSMSVoiceSendVoiceMessageContentSSMLMessageInput
}

input AwsPinpointSMSVoiceSendVoiceMessageContentPlainTextMessageInput {
  LanguageCode: String
  Text: String
  VoiceId: String
}

input AwsPinpointSMSVoiceSendVoiceMessageContentSSMLMessageInput {
  LanguageCode: String
  Text: String
  VoiceId: String
}

input AwsPinpointSMSVoiceSendVoiceMessageInput {
  CallerId: String
  ConfigurationSetName: String
  Content: AwsPinpointSMSVoiceSendVoiceMessageContentInput
  DestinationPhoneNumber: String
  OriginationPhoneNumber: String
}

type AwsPinpointSMSVoiceSendVoiceMessageOutput {
  MessageId: String
}

input AwsPinpointSMSVoiceUpdateConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestination: AwsPinpointSMSVoiceS6Input
  EventDestinationName: String!
}

type AwsPinpointSq {
  DimensionType: String
  Values: [String]!
}

input AwsPinpointSqInput {
  DimensionType: String
  Values: [String]!
}

type AwsPinpointSx {
  End: String
  Start: String
}

input AwsPinpointSxInput {
  End: String
  Start: String
}

type AwsPinpointSy {
  LambdaFunctionName: String
  Mode: String
  WebUrl: String
}

input AwsPinpointSyInput {
  LambdaFunctionName: String
  Mode: String
  WebUrl: String
}

input AwsPinpointTagResourceInput {
  ResourceArn: String!
  TagsModel: AwsPinpointS5zInput!
}

input AwsPinpointUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsPinpointUpdateAdmChannelADMChannelRequestInput {
  ClientId: String!
  ClientSecret: String!
  Enabled: Boolean
}

input AwsPinpointUpdateAdmChannelInput {
  ADMChannelRequest: AwsPinpointUpdateAdmChannelADMChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateAdmChannelOutput {
  ADMChannelResponse: AwsPinpointS2a!
}

input AwsPinpointUpdateApnsChannelAPNSChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsChannelInput {
  APNSChannelRequest: AwsPinpointUpdateApnsChannelAPNSChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsChannelOutput {
  APNSChannelResponse: AwsPinpointS2d!
}

input AwsPinpointUpdateApnsSandboxChannelAPNSSandboxChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsSandboxChannelInput {
  APNSSandboxChannelRequest: AwsPinpointUpdateApnsSandboxChannelAPNSSandboxChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsSandboxChannelOutput {
  APNSSandboxChannelResponse: AwsPinpointS2g!
}

input AwsPinpointUpdateApnsVoipChannelAPNSVoipChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsVoipChannelInput {
  APNSVoipChannelRequest: AwsPinpointUpdateApnsVoipChannelAPNSVoipChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsVoipChannelOutput {
  APNSVoipChannelResponse: AwsPinpointS2j!
}

input AwsPinpointUpdateApnsVoipSandboxChannelAPNSVoipSandboxChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsVoipSandboxChannelInput {
  APNSVoipSandboxChannelRequest: AwsPinpointUpdateApnsVoipSandboxChannelAPNSVoipSandboxChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsVoipSandboxChannelOutput {
  APNSVoipSandboxChannelResponse: AwsPinpointS2m!
}

input AwsPinpointUpdateApplicationSettingsInput {
  ApplicationId: String!
  WriteApplicationSettingsRequest: AwsPinpointUpdateApplicationSettingsWriteApplicationSettingsRequestInput!
}

type AwsPinpointUpdateApplicationSettingsOutput {
  ApplicationSettingsResource: AwsPinpointS42!
}

input AwsPinpointUpdateApplicationSettingsWriteApplicationSettingsRequestInput {
  CampaignHook: AwsPinpointSyInput
  CloudWatchMetricsEnabled: Boolean
  Limits: AwsPinpointS10Input
  QuietTime: AwsPinpointSxInput
}

input AwsPinpointUpdateBaiduChannelBaiduChannelRequestInput {
  ApiKey: String!
  Enabled: Boolean
  SecretKey: String!
}

input AwsPinpointUpdateBaiduChannelInput {
  ApplicationId: String!
  BaiduChannelRequest: AwsPinpointUpdateBaiduChannelBaiduChannelRequestInput!
}

type AwsPinpointUpdateBaiduChannelOutput {
  BaiduChannelResponse: AwsPinpointS2r!
}

input AwsPinpointUpdateCampaignInput {
  ApplicationId: String!
  CampaignId: String!
  WriteCampaignRequest: AwsPinpointS8Input!
}

type AwsPinpointUpdateCampaignOutput {
  CampaignResponse: AwsPinpointS12!
}

input AwsPinpointUpdateEmailChannelEmailChannelRequestInput {
  ConfigurationSet: String
  Enabled: Boolean
  FromAddress: String!
  Identity: String!
  RoleArn: String
}

input AwsPinpointUpdateEmailChannelInput {
  ApplicationId: String!
  EmailChannelRequest: AwsPinpointUpdateEmailChannelEmailChannelRequestInput!
}

type AwsPinpointUpdateEmailChannelOutput {
  EmailChannelResponse: AwsPinpointS2w!
}

input AwsPinpointUpdateEndpointEndpointRequestInput {
  Address: String
  Attributes: JSON
  ChannelType: String
  Demographic: AwsPinpointS32Input
  EffectiveDate: String
  EndpointStatus: String
  Location: AwsPinpointS33Input
  Metrics: JSON
  OptOut: String
  RequestId: String
  User: AwsPinpointS35Input
}

input AwsPinpointUpdateEndpointInput {
  ApplicationId: String!
  EndpointId: String!
  EndpointRequest: AwsPinpointUpdateEndpointEndpointRequestInput!
}

type AwsPinpointUpdateEndpointOutput {
  MessageBody: AwsPinpointS8h!
}

input AwsPinpointUpdateEndpointsBatchEndpointBatchRequestInput {
  Item: [AwsPinpointUpdateEndpointsBatchEndpointBatchRequestItemInput]!
}

input AwsPinpointUpdateEndpointsBatchEndpointBatchRequestItemInput {
  Address: String
  Attributes: JSON
  ChannelType: String
  Demographic: AwsPinpointS32Input
  EffectiveDate: String
  EndpointStatus: String
  Id: String
  Location: AwsPinpointS33Input
  Metrics: JSON
  OptOut: String
  RequestId: String
  User: AwsPinpointS35Input
}

input AwsPinpointUpdateEndpointsBatchInput {
  ApplicationId: String!
  EndpointBatchRequest: AwsPinpointUpdateEndpointsBatchEndpointBatchRequestInput!
}

type AwsPinpointUpdateEndpointsBatchOutput {
  MessageBody: AwsPinpointS8h!
}

input AwsPinpointUpdateGcmChannelGCMChannelRequestInput {
  ApiKey: String!
  Enabled: Boolean
}

input AwsPinpointUpdateGcmChannelInput {
  ApplicationId: String!
  GCMChannelRequest: AwsPinpointUpdateGcmChannelGCMChannelRequestInput!
}

type AwsPinpointUpdateGcmChannelOutput {
  GCMChannelResponse: AwsPinpointS3b!
}

input AwsPinpointUpdateSegmentInput {
  ApplicationId: String!
  SegmentId: String!
  WriteSegmentRequest: AwsPinpointS1kInput!
}

type AwsPinpointUpdateSegmentOutput {
  SegmentResponse: AwsPinpointS24!
}

input AwsPinpointUpdateSmsChannelInput {
  ApplicationId: String!
  SMSChannelRequest: AwsPinpointUpdateSmsChannelSMSChannelRequestInput!
}

type AwsPinpointUpdateSmsChannelOutput {
  SMSChannelResponse: AwsPinpointS3g!
}

input AwsPinpointUpdateSmsChannelSMSChannelRequestInput {
  Enabled: Boolean
  SenderId: String
  ShortCode: String
}

input AwsPinpointUpdateVoiceChannelInput {
  ApplicationId: String!
  VoiceChannelRequest: AwsPinpointUpdateVoiceChannelVoiceChannelRequestInput!
}

type AwsPinpointUpdateVoiceChannelOutput {
  VoiceChannelResponse: AwsPinpointS3n!
}

input AwsPinpointUpdateVoiceChannelVoiceChannelRequestInput {
  Enabled: Boolean
}

input AwsPIS6Input {
  Group: String!
  Dimensions: [String]
  Limit: Int
}

"""Amazon Polly (2016-06-10)"""
type AwsPolly {
  deleteLexicon(input: AwsPollyDeleteLexiconInput!, config: AwsConfig): JSON
  describeVoices(input: AwsPollyDescribeVoicesInput, config: AwsConfig): AwsPollyDescribeVoicesOutput
  getLexicon(input: AwsPollyGetLexiconInput!, config: AwsConfig): AwsPollyGetLexiconOutput
  getSpeechSynthesisTask(input: AwsPollyGetSpeechSynthesisTaskInput!, config: AwsConfig): AwsPollyGetSpeechSynthesisTaskOutput
  listLexicons(input: AwsPollyListLexiconsInput, config: AwsConfig): AwsPollyListLexiconsOutput
  listSpeechSynthesisTasks(input: AwsPollyListSpeechSynthesisTasksInput, config: AwsConfig): AwsPollyListSpeechSynthesisTasksOutput
  putLexicon(input: AwsPollyPutLexiconInput!, config: AwsConfig): JSON
  startSpeechSynthesisTask(input: AwsPollyStartSpeechSynthesisTaskInput!, config: AwsConfig): AwsPollyStartSpeechSynthesisTaskOutput
  synthesizeSpeech(input: AwsPollySynthesizeSpeechInput!, config: AwsConfig): AwsPollySynthesizeSpeechOutput
}

input AwsPollyDeleteLexiconInput {
  Name: String!
}

input AwsPollyDescribeVoicesInput {
  LanguageCode: String
  IncludeAdditionalLanguageCodes: Boolean
  NextToken: String
}

type AwsPollyDescribeVoicesOutput {
  Voices: [AwsPollyDescribeVoicesOutputVoices]
  NextToken: String
}

type AwsPollyDescribeVoicesOutputVoices {
  Gender: String
  Id: String
  LanguageCode: String
  LanguageName: String
  Name: String
  AdditionalLanguageCodes: [String]
}

input AwsPollyGetLexiconInput {
  Name: String!
}

type AwsPollyGetLexiconOutput {
  Lexicon: AwsPollyGetLexiconOutputLexicon
  LexiconAttributes: AwsPollySk
}

type AwsPollyGetLexiconOutputLexicon {
  Content: String
  Name: String
}

input AwsPollyGetSpeechSynthesisTaskInput {
  TaskId: String!
}

type AwsPollyGetSpeechSynthesisTaskOutput {
  SynthesisTask: AwsPollySt
}

input AwsPollyListLexiconsInput {
  NextToken: String
}

type AwsPollyListLexiconsOutput {
  Lexicons: [AwsPollyListLexiconsOutputLexicons]
  NextToken: String
}

type AwsPollyListLexiconsOutputLexicons {
  Name: String
  Attributes: AwsPollySk
}

input AwsPollyListSpeechSynthesisTasksInput {
  MaxResults: Int
  NextToken: String
  Status: String
}

type AwsPollyListSpeechSynthesisTasksOutput {
  NextToken: String
  SynthesisTasks: [AwsPollySt]
}

input AwsPollyPutLexiconInput {
  Name: String!
  Content: String!
}

type AwsPollySk {
  Alphabet: String
  LanguageCode: String
  LastModified: Date
  LexiconArn: String
  LexemesCount: Int
  Size: Int
}

type AwsPollySt {
  TaskId: String
  TaskStatus: String
  TaskStatusReason: String
  OutputUri: String
  CreationTime: Date
  RequestCharacters: Int
  SnsTopicArn: String
  LexiconNames: [String]
  OutputFormat: String
  SampleRate: String
  SpeechMarkTypes: [String]
  TextType: String
  VoiceId: String
  LanguageCode: String
}

input AwsPollyStartSpeechSynthesisTaskInput {
  LexiconNames: [String]
  OutputFormat: String!
  OutputS3BucketName: String!
  OutputS3KeyPrefix: String
  SampleRate: String
  SnsTopicArn: String
  SpeechMarkTypes: [String]
  Text: String!
  TextType: String
  VoiceId: String!
  LanguageCode: String
}

type AwsPollyStartSpeechSynthesisTaskOutput {
  SynthesisTask: AwsPollySt
}

input AwsPollySynthesizeSpeechInput {
  LexiconNames: [String]
  OutputFormat: String!
  SampleRate: String
  SpeechMarkTypes: [String]
  Text: String!
  TextType: String
  VoiceId: String!
  LanguageCode: String
}

type AwsPollySynthesizeSpeechOutput {
  AudioStream: JSON
  ContentType: String
  RequestCharacters: Int
}

"""AWS Price List Service (2017-10-15)"""
type AwsPricing {
  describeServices(input: AwsPricingDescribeServicesInput, config: AwsConfig): AwsPricingDescribeServicesOutput
  getAttributeValues(input: AwsPricingGetAttributeValuesInput!, config: AwsConfig): AwsPricingGetAttributeValuesOutput
  getProducts(input: AwsPricingGetProductsInput, config: AwsConfig): AwsPricingGetProductsOutput
}

input AwsPricingDescribeServicesInput {
  ServiceCode: String
  FormatVersion: String
  NextToken: String
  MaxResults: Int
}

type AwsPricingDescribeServicesOutput {
  Services: [AwsPricingDescribeServicesOutputServices]
  FormatVersion: String
  NextToken: String
}

type AwsPricingDescribeServicesOutputServices {
  ServiceCode: String
  AttributeNames: [String]
}

input AwsPricingGetAttributeValuesInput {
  ServiceCode: String!
  AttributeName: String!
  NextToken: String
  MaxResults: Int
}

type AwsPricingGetAttributeValuesOutput {
  AttributeValues: [AwsPricingGetAttributeValuesOutputAttributeValues]
  NextToken: String
}

type AwsPricingGetAttributeValuesOutputAttributeValues {
  Value: String
}

input AwsPricingGetProductsFiltersInput {
  Type: String!
  Field: String!
  Value: String!
}

input AwsPricingGetProductsInput {
  ServiceCode: String
  Filters: [AwsPricingGetProductsFiltersInput]
  FormatVersion: String
  NextToken: String
  MaxResults: Int
}

type AwsPricingGetProductsOutput {
  FormatVersion: String
  PriceList: [String]
  NextToken: String
}

"""Amazon QuickSight (2018-04-01)"""
type AwsQuickSight {
  createGroup(input: AwsQuickSightCreateGroupInput!, config: AwsConfig): AwsQuickSightCreateGroupOutput
  createGroupMembership(input: AwsQuickSightCreateGroupMembershipInput!, config: AwsConfig): AwsQuickSightCreateGroupMembershipOutput
  deleteGroup(input: AwsQuickSightDeleteGroupInput!, config: AwsConfig): AwsQuickSightDeleteGroupOutput
  deleteGroupMembership(input: AwsQuickSightDeleteGroupMembershipInput!, config: AwsConfig): AwsQuickSightDeleteGroupMembershipOutput
  deleteUser(input: AwsQuickSightDeleteUserInput!, config: AwsConfig): AwsQuickSightDeleteUserOutput
  deleteUserByPrincipalId(input: AwsQuickSightDeleteUserByPrincipalIdInput!, config: AwsConfig): AwsQuickSightDeleteUserByPrincipalIdOutput
  describeGroup(input: AwsQuickSightDescribeGroupInput!, config: AwsConfig): AwsQuickSightDescribeGroupOutput
  describeUser(input: AwsQuickSightDescribeUserInput!, config: AwsConfig): AwsQuickSightDescribeUserOutput
  getDashboardEmbedUrl(input: AwsQuickSightGetDashboardEmbedUrlInput!, config: AwsConfig): AwsQuickSightGetDashboardEmbedUrlOutput
  listGroupMemberships(input: AwsQuickSightListGroupMembershipsInput!, config: AwsConfig): AwsQuickSightListGroupMembershipsOutput
  listGroups(input: AwsQuickSightListGroupsInput!, config: AwsConfig): AwsQuickSightListGroupsOutput
  listUserGroups(input: AwsQuickSightListUserGroupsInput!, config: AwsConfig): AwsQuickSightListUserGroupsOutput
  listUsers(input: AwsQuickSightListUsersInput!, config: AwsConfig): AwsQuickSightListUsersOutput
  registerUser(input: AwsQuickSightRegisterUserInput!, config: AwsConfig): AwsQuickSightRegisterUserOutput
  updateGroup(input: AwsQuickSightUpdateGroupInput!, config: AwsConfig): AwsQuickSightUpdateGroupOutput
  updateUser(input: AwsQuickSightUpdateUserInput!, config: AwsConfig): AwsQuickSightUpdateUserOutput
}

input AwsQuickSightCreateGroupInput {
  GroupName: String!
  Description: String
  AwsAccountId: String!
  Namespace: String!
}

input AwsQuickSightCreateGroupMembershipInput {
  MemberName: String!
  GroupName: String!
  AwsAccountId: String!
  Namespace: String!
}

type AwsQuickSightCreateGroupMembershipOutput {
  GroupMember: AwsQuickSightSe
  RequestId: String
  Status: Int
}

type AwsQuickSightCreateGroupOutput {
  Group: AwsQuickSightS7
  RequestId: String
  Status: Int
}

input AwsQuickSightDeleteGroupInput {
  GroupName: String!
  AwsAccountId: String!
  Namespace: String!
}

input AwsQuickSightDeleteGroupMembershipInput {
  MemberName: String!
  GroupName: String!
  AwsAccountId: String!
  Namespace: String!
}

type AwsQuickSightDeleteGroupMembershipOutput {
  RequestId: String
  Status: Int
}

type AwsQuickSightDeleteGroupOutput {
  RequestId: String
  Status: Int
}

input AwsQuickSightDeleteUserByPrincipalIdInput {
  PrincipalId: String!
  AwsAccountId: String!
  Namespace: String!
}

type AwsQuickSightDeleteUserByPrincipalIdOutput {
  RequestId: String
  Status: Int
}

input AwsQuickSightDeleteUserInput {
  UserName: String!
  AwsAccountId: String!
  Namespace: String!
}

type AwsQuickSightDeleteUserOutput {
  RequestId: String
  Status: Int
}

input AwsQuickSightDescribeGroupInput {
  GroupName: String!
  AwsAccountId: String!
  Namespace: String!
}

type AwsQuickSightDescribeGroupOutput {
  Group: AwsQuickSightS7
  RequestId: String
  Status: Int
}

input AwsQuickSightDescribeUserInput {
  UserName: String!
  AwsAccountId: String!
  Namespace: String!
}

type AwsQuickSightDescribeUserOutput {
  User: AwsQuickSightSs
  RequestId: String
  Status: Int
}

input AwsQuickSightGetDashboardEmbedUrlInput {
  AwsAccountId: String!
  DashboardId: String!
  IdentityType: String!
  SessionLifetimeInMinutes: JSON
  UndoRedoDisabled: Boolean
  ResetDisabled: Boolean
}

type AwsQuickSightGetDashboardEmbedUrlOutput {
  EmbedUrl: String
  Status: Int
  RequestId: String
}

input AwsQuickSightListGroupMembershipsInput {
  GroupName: String!
  NextToken: String
  MaxResults: Int
  AwsAccountId: String!
  Namespace: String!
}

type AwsQuickSightListGroupMembershipsOutput {
  GroupMemberList: [AwsQuickSightSe]
  NextToken: String
  RequestId: String
  Status: Int
}

input AwsQuickSightListGroupsInput {
  AwsAccountId: String!
  NextToken: String
  MaxResults: Int
  Namespace: String!
}

type AwsQuickSightListGroupsOutput {
  GroupList: [AwsQuickSightS7]
  NextToken: String
  RequestId: String
  Status: Int
}

input AwsQuickSightListUserGroupsInput {
  UserName: String!
  AwsAccountId: String!
  Namespace: String!
  NextToken: String
  MaxResults: Int
}

type AwsQuickSightListUserGroupsOutput {
  GroupList: [AwsQuickSightS7]
  NextToken: String
  RequestId: String
  Status: Int
}

input AwsQuickSightListUsersInput {
  AwsAccountId: String!
  NextToken: String
  MaxResults: Int
  Namespace: String!
}

type AwsQuickSightListUsersOutput {
  UserList: [AwsQuickSightSs]
  NextToken: String
  RequestId: String
  Status: Int
}

input AwsQuickSightRegisterUserInput {
  IdentityType: String!
  Email: String!
  UserRole: String!
  IamArn: String
  SessionName: String
  AwsAccountId: String!
  Namespace: String!
  UserName: String
}

type AwsQuickSightRegisterUserOutput {
  User: AwsQuickSightSs
  UserInvitationUrl: String
  RequestId: String
  Status: Int
}

type AwsQuickSightS7 {
  Arn: String
  GroupName: String
  Description: String
  PrincipalId: String
}

type AwsQuickSightSe {
  Arn: String
  MemberName: String
}

type AwsQuickSightSs {
  Arn: String
  UserName: String
  Email: String
  Role: String
  IdentityType: String
  Active: Boolean
  PrincipalId: String
}

input AwsQuickSightUpdateGroupInput {
  GroupName: String!
  Description: String
  AwsAccountId: String!
  Namespace: String!
}

type AwsQuickSightUpdateGroupOutput {
  Group: AwsQuickSightS7
  RequestId: String
  Status: Int
}

input AwsQuickSightUpdateUserInput {
  UserName: String!
  AwsAccountId: String!
  Namespace: String!
  Email: String!
  Role: String!
}

type AwsQuickSightUpdateUserOutput {
  User: AwsQuickSightSs
  RequestId: String
  Status: Int
}

"""AWS Resource Access Manager (2018-01-04)"""
type AwsRAM {
  acceptResourceShareInvitation(input: AwsRAMAcceptResourceShareInvitationInput!, config: AwsConfig): AwsRAMAcceptResourceShareInvitationOutput
  associateResourceShare(input: AwsRAMAssociateResourceShareInput!, config: AwsConfig): AwsRAMAssociateResourceShareOutput
  createResourceShare(input: AwsRAMCreateResourceShareInput!, config: AwsConfig): AwsRAMCreateResourceShareOutput
  deleteResourceShare(input: AwsRAMDeleteResourceShareInput!, config: AwsConfig): AwsRAMDeleteResourceShareOutput
  disassociateResourceShare(input: AwsRAMDisassociateResourceShareInput!, config: AwsConfig): AwsRAMDisassociateResourceShareOutput
  enableSharingWithAwsOrganization(input: JSON, config: AwsConfig): AwsRAMEnableSharingWithAwsOrganizationOutput
  getResourcePolicies(input: AwsRAMGetResourcePoliciesInput!, config: AwsConfig): AwsRAMGetResourcePoliciesOutput
  getResourceShareAssociations(input: AwsRAMGetResourceShareAssociationsInput!, config: AwsConfig): AwsRAMGetResourceShareAssociationsOutput
  getResourceShareInvitations(input: AwsRAMGetResourceShareInvitationsInput, config: AwsConfig): AwsRAMGetResourceShareInvitationsOutput
  getResourceShares(input: AwsRAMGetResourceSharesInput!, config: AwsConfig): AwsRAMGetResourceSharesOutput
  listPrincipals(input: AwsRAMListPrincipalsInput!, config: AwsConfig): AwsRAMListPrincipalsOutput
  listResources(input: AwsRAMListResourcesInput!, config: AwsConfig): AwsRAMListResourcesOutput
  rejectResourceShareInvitation(input: AwsRAMRejectResourceShareInvitationInput!, config: AwsConfig): AwsRAMRejectResourceShareInvitationOutput
  tagResource(input: AwsRAMTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsRAMUntagResourceInput!, config: AwsConfig): JSON
  updateResourceShare(input: AwsRAMUpdateResourceShareInput!, config: AwsConfig): AwsRAMUpdateResourceShareOutput
}

input AwsRAMAcceptResourceShareInvitationInput {
  resourceShareInvitationArn: String!
  clientToken: String
}

type AwsRAMAcceptResourceShareInvitationOutput {
  resourceShareInvitation: AwsRAMS4
  clientToken: String
}

input AwsRAMAssociateResourceShareInput {
  resourceShareArn: String!
  resourceArns: [String]
  principals: [String]
  clientToken: String
}

type AwsRAMAssociateResourceShareOutput {
  resourceShareAssociations: [AwsRAMS7]
  clientToken: String
}

input AwsRAMCreateResourceShareInput {
  name: String!
  resourceArns: [String]
  principals: [String]
  tags: [AwsRAMShInput]
  allowExternalPrincipals: Boolean
  clientToken: String
}

type AwsRAMCreateResourceShareOutput {
  resourceShare: AwsRAMSm
  clientToken: String
}

input AwsRAMDeleteResourceShareInput {
  resourceShareArn: String!
  clientToken: String
}

type AwsRAMDeleteResourceShareOutput {
  returnValue: Boolean
  clientToken: String
}

input AwsRAMDisassociateResourceShareInput {
  resourceShareArn: String!
  resourceArns: [String]
  principals: [String]
  clientToken: String
}

type AwsRAMDisassociateResourceShareOutput {
  resourceShareAssociations: [AwsRAMS7]
  clientToken: String
}

type AwsRAMEnableSharingWithAwsOrganizationOutput {
  returnValue: Boolean
}

input AwsRAMGetResourcePoliciesInput {
  resourceArns: [String]!
  principal: String
  nextToken: String
  maxResults: Int
}

type AwsRAMGetResourcePoliciesOutput {
  policies: [String]
  nextToken: String
}

input AwsRAMGetResourceShareAssociationsInput {
  associationType: String!
  resourceShareArns: [String]
  resourceArn: String
  principal: String
  associationStatus: String
  nextToken: String
  maxResults: Int
}

type AwsRAMGetResourceShareAssociationsOutput {
  resourceShareAssociations: [AwsRAMS7]
  nextToken: String
}

input AwsRAMGetResourceShareInvitationsInput {
  resourceShareInvitationArns: [String]
  resourceShareArns: [String]
  nextToken: String
  maxResults: Int
}

type AwsRAMGetResourceShareInvitationsOutput {
  resourceShareInvitations: [AwsRAMS4]
  nextToken: String
}

input AwsRAMGetResourceSharesInput {
  resourceShareArns: [String]
  resourceShareStatus: String
  resourceOwner: String!
  name: String
  tagFilters: [AwsRAMGetResourceSharesTagFiltersInput]
  nextToken: String
  maxResults: Int
}

type AwsRAMGetResourceSharesOutput {
  resourceShares: [AwsRAMSm]
  nextToken: String
}

input AwsRAMGetResourceSharesTagFiltersInput {
  tagKey: String
  tagValues: [String]
}

input AwsRAMListPrincipalsInput {
  resourceOwner: String!
  resourceArn: String
  principals: [String]
  resourceType: String
  resourceShareArns: [String]
  nextToken: String
  maxResults: Int
}

type AwsRAMListPrincipalsOutput {
  principals: [AwsRAMListPrincipalsOutputPrincipals]
  nextToken: String
}

type AwsRAMListPrincipalsOutputPrincipals {
  id: String
  resourceShareArn: String
  creationTime: Date
  lastUpdatedTime: Date
  external: Boolean
}

input AwsRAMListResourcesInput {
  resourceOwner: String!
  principal: String
  resourceType: String
  resourceArns: [String]
  resourceShareArns: [String]
  nextToken: String
  maxResults: Int
}

type AwsRAMListResourcesOutput {
  resources: [AwsRAMListResourcesOutputResources]
  nextToken: String
}

type AwsRAMListResourcesOutputResources {
  arn: String
  type: String
  resourceShareArn: String
  status: String
  statusMessage: String
  creationTime: Date
  lastUpdatedTime: Date
}

input AwsRAMRejectResourceShareInvitationInput {
  resourceShareInvitationArn: String!
  clientToken: String
}

type AwsRAMRejectResourceShareInvitationOutput {
  resourceShareInvitation: AwsRAMS4
  clientToken: String
}

type AwsRAMS4 {
  resourceShareInvitationArn: String
  resourceShareName: String
  resourceShareArn: String
  senderAccountId: String
  receiverAccountId: String
  invitationTimestamp: Date
  status: String
  resourceShareAssociations: [AwsRAMS7]
}

type AwsRAMS7 {
  resourceShareArn: String
  associatedEntity: String
  associationType: String
  status: String
  statusMessage: String
  creationTime: Date
  lastUpdatedTime: Date
  external: Boolean
}

type AwsRAMSh {
  key: String
  value: String
}

input AwsRAMShInput {
  key: String
  value: String
}

type AwsRAMSm {
  resourceShareArn: String
  name: String
  owningAccountId: String
  allowExternalPrincipals: Boolean
  status: String
  statusMessage: String
  tags: [AwsRAMSh]
  creationTime: Date
  lastUpdatedTime: Date
}

input AwsRAMTagResourceInput {
  resourceShareArn: String!
  tags: [AwsRAMShInput]!
}

input AwsRAMUntagResourceInput {
  resourceShareArn: String!
  tagKeys: [String]!
}

input AwsRAMUpdateResourceShareInput {
  resourceShareArn: String!
  name: String
  allowExternalPrincipals: Boolean
  clientToken: String
}

type AwsRAMUpdateResourceShareOutput {
  resourceShare: AwsRAMSm
  clientToken: String
}

"""Amazon Relational Database Service (2014-10-31)"""
type AwsRDS {
  addRoleToDBCluster(input: AwsRDSAddRoleToDBClusterInput!, config: AwsConfig): JSON
  addRoleToDBInstance(input: AwsRDSAddRoleToDBInstanceInput!, config: AwsConfig): JSON
  addSourceIdentifierToSubscription(input: AwsRDSAddSourceIdentifierToSubscriptionInput!, config: AwsConfig): AwsRDSAddSourceIdentifierToSubscriptionOutput
  addTagsToResource(input: AwsRDSAddTagsToResourceInput!, config: AwsConfig): JSON
  applyPendingMaintenanceAction(input: AwsRDSApplyPendingMaintenanceActionInput!, config: AwsConfig): AwsRDSApplyPendingMaintenanceActionOutput
  authorizeDBSecurityGroupIngress(input: AwsRDSAuthorizeDBSecurityGroupIngressInput!, config: AwsConfig): AwsRDSAuthorizeDBSecurityGroupIngressOutput
  backtrackDBCluster(input: AwsRDSBacktrackDBClusterInput!, config: AwsConfig): JSON
  copyDBClusterParameterGroup(input: AwsRDSCopyDBClusterParameterGroupInput!, config: AwsConfig): AwsRDSCopyDBClusterParameterGroupOutput
  copyDBClusterSnapshot(input: AwsRDSCopyDBClusterSnapshotInput!, config: AwsConfig): AwsRDSCopyDBClusterSnapshotOutput
  copyDBParameterGroup(input: AwsRDSCopyDBParameterGroupInput!, config: AwsConfig): AwsRDSCopyDBParameterGroupOutput
  copyDBSnapshot(input: AwsRDSCopyDBSnapshotInput!, config: AwsConfig): AwsRDSCopyDBSnapshotOutput
  copyOptionGroup(input: AwsRDSCopyOptionGroupInput!, config: AwsConfig): AwsRDSCopyOptionGroupOutput
  createDBCluster(input: AwsRDSCreateDBClusterInput!, config: AwsConfig): AwsRDSCreateDBClusterOutput
  createDBClusterEndpoint(input: AwsRDSCreateDBClusterEndpointInput!, config: AwsConfig): JSON
  createDBClusterParameterGroup(input: AwsRDSCreateDBClusterParameterGroupInput!, config: AwsConfig): AwsRDSCreateDBClusterParameterGroupOutput
  createDBClusterSnapshot(input: AwsRDSCreateDBClusterSnapshotInput!, config: AwsConfig): AwsRDSCreateDBClusterSnapshotOutput
  createDBInstance(input: AwsRDSCreateDBInstanceInput!, config: AwsConfig): AwsRDSCreateDBInstanceOutput
  createDBInstanceReadReplica(input: AwsRDSCreateDBInstanceReadReplicaInput!, config: AwsConfig): AwsRDSCreateDBInstanceReadReplicaOutput
  createDBParameterGroup(input: AwsRDSCreateDBParameterGroupInput!, config: AwsConfig): AwsRDSCreateDBParameterGroupOutput
  createDBSecurityGroup(input: AwsRDSCreateDBSecurityGroupInput!, config: AwsConfig): AwsRDSCreateDBSecurityGroupOutput
  createDBSnapshot(input: AwsRDSCreateDBSnapshotInput!, config: AwsConfig): AwsRDSCreateDBSnapshotOutput
  createDBSubnetGroup(input: AwsRDSCreateDBSubnetGroupInput!, config: AwsConfig): AwsRDSCreateDBSubnetGroupOutput
  createEventSubscription(input: AwsRDSCreateEventSubscriptionInput!, config: AwsConfig): AwsRDSCreateEventSubscriptionOutput
  createGlobalCluster(input: AwsRDSCreateGlobalClusterInput, config: AwsConfig): AwsRDSCreateGlobalClusterOutput
  createOptionGroup(input: AwsRDSCreateOptionGroupInput!, config: AwsConfig): AwsRDSCreateOptionGroupOutput
  deleteDBCluster(input: AwsRDSDeleteDBClusterInput!, config: AwsConfig): AwsRDSDeleteDBClusterOutput
  deleteDBClusterEndpoint(input: AwsRDSDeleteDBClusterEndpointInput!, config: AwsConfig): JSON
  deleteDBClusterParameterGroup(input: AwsRDSDeleteDBClusterParameterGroupInput!, config: AwsConfig): JSON
  deleteDBClusterSnapshot(input: AwsRDSDeleteDBClusterSnapshotInput!, config: AwsConfig): AwsRDSDeleteDBClusterSnapshotOutput
  deleteDBInstance(input: AwsRDSDeleteDBInstanceInput!, config: AwsConfig): AwsRDSDeleteDBInstanceOutput
  deleteDBInstanceAutomatedBackup(input: AwsRDSDeleteDBInstanceAutomatedBackupInput!, config: AwsConfig): AwsRDSDeleteDBInstanceAutomatedBackupOutput
  deleteDBParameterGroup(input: AwsRDSDeleteDBParameterGroupInput!, config: AwsConfig): JSON
  deleteDBSecurityGroup(input: AwsRDSDeleteDBSecurityGroupInput!, config: AwsConfig): JSON
  deleteDBSnapshot(input: AwsRDSDeleteDBSnapshotInput!, config: AwsConfig): AwsRDSDeleteDBSnapshotOutput
  deleteDBSubnetGroup(input: AwsRDSDeleteDBSubnetGroupInput!, config: AwsConfig): JSON
  deleteEventSubscription(input: AwsRDSDeleteEventSubscriptionInput!, config: AwsConfig): AwsRDSDeleteEventSubscriptionOutput
  deleteGlobalCluster(input: AwsRDSDeleteGlobalClusterInput!, config: AwsConfig): AwsRDSDeleteGlobalClusterOutput
  deleteOptionGroup(input: AwsRDSDeleteOptionGroupInput!, config: AwsConfig): JSON
  describeAccountAttributes(input: JSON, config: AwsConfig): AwsRDSDescribeAccountAttributesOutput
  describeCertificates(input: AwsRDSDescribeCertificatesInput, config: AwsConfig): AwsRDSDescribeCertificatesOutput
  describeDBClusterBacktracks(input: AwsRDSDescribeDBClusterBacktracksInput!, config: AwsConfig): AwsRDSDescribeDBClusterBacktracksOutput
  describeDBClusterEndpoints(input: AwsRDSDescribeDBClusterEndpointsInput, config: AwsConfig): AwsRDSDescribeDBClusterEndpointsOutput
  describeDBClusterParameterGroups(input: AwsRDSDescribeDBClusterParameterGroupsInput, config: AwsConfig): AwsRDSDescribeDBClusterParameterGroupsOutput
  describeDBClusterParameters(input: AwsRDSDescribeDBClusterParametersInput!, config: AwsConfig): AwsRDSDescribeDBClusterParametersOutput
  describeDBClusterSnapshotAttributes(input: AwsRDSDescribeDBClusterSnapshotAttributesInput!, config: AwsConfig): AwsRDSDescribeDBClusterSnapshotAttributesOutput
  describeDBClusterSnapshots(input: AwsRDSDescribeDBClusterSnapshotsInput, config: AwsConfig): AwsRDSDescribeDBClusterSnapshotsOutput
  describeDBClusters(input: AwsRDSDescribeDBClustersInput, config: AwsConfig): AwsRDSDescribeDBClustersOutput
  describeDBEngineVersions(input: AwsRDSDescribeDBEngineVersionsInput, config: AwsConfig): AwsRDSDescribeDBEngineVersionsOutput
  describeDBInstanceAutomatedBackups(input: AwsRDSDescribeDBInstanceAutomatedBackupsInput, config: AwsConfig): AwsRDSDescribeDBInstanceAutomatedBackupsOutput
  describeDBInstances(input: AwsRDSDescribeDBInstancesInput, config: AwsConfig): AwsRDSDescribeDBInstancesOutput
  describeDBLogFiles(input: AwsRDSDescribeDBLogFilesInput!, config: AwsConfig): AwsRDSDescribeDBLogFilesOutput
  describeDBParameterGroups(input: AwsRDSDescribeDBParameterGroupsInput, config: AwsConfig): AwsRDSDescribeDBParameterGroupsOutput
  describeDBParameters(input: AwsRDSDescribeDBParametersInput!, config: AwsConfig): AwsRDSDescribeDBParametersOutput
  describeDBSecurityGroups(input: AwsRDSDescribeDBSecurityGroupsInput, config: AwsConfig): AwsRDSDescribeDBSecurityGroupsOutput
  describeDBSnapshotAttributes(input: AwsRDSDescribeDBSnapshotAttributesInput!, config: AwsConfig): AwsRDSDescribeDBSnapshotAttributesOutput
  describeDBSnapshots(input: AwsRDSDescribeDBSnapshotsInput, config: AwsConfig): AwsRDSDescribeDBSnapshotsOutput
  describeDBSubnetGroups(input: AwsRDSDescribeDBSubnetGroupsInput, config: AwsConfig): AwsRDSDescribeDBSubnetGroupsOutput
  describeEngineDefaultClusterParameters(input: AwsRDSDescribeEngineDefaultClusterParametersInput!, config: AwsConfig): AwsRDSDescribeEngineDefaultClusterParametersOutput
  describeEngineDefaultParameters(input: AwsRDSDescribeEngineDefaultParametersInput!, config: AwsConfig): AwsRDSDescribeEngineDefaultParametersOutput
  describeEventCategories(input: AwsRDSDescribeEventCategoriesInput, config: AwsConfig): AwsRDSDescribeEventCategoriesOutput
  describeEventSubscriptions(input: AwsRDSDescribeEventSubscriptionsInput, config: AwsConfig): AwsRDSDescribeEventSubscriptionsOutput
  describeEvents(input: AwsRDSDescribeEventsInput, config: AwsConfig): AwsRDSDescribeEventsOutput
  describeGlobalClusters(input: AwsRDSDescribeGlobalClustersInput, config: AwsConfig): AwsRDSDescribeGlobalClustersOutput
  describeOptionGroupOptions(input: AwsRDSDescribeOptionGroupOptionsInput!, config: AwsConfig): AwsRDSDescribeOptionGroupOptionsOutput
  describeOptionGroups(input: AwsRDSDescribeOptionGroupsInput, config: AwsConfig): AwsRDSDescribeOptionGroupsOutput
  describeOrderableDBInstanceOptions(input: AwsRDSDescribeOrderableDBInstanceOptionsInput!, config: AwsConfig): AwsRDSDescribeOrderableDBInstanceOptionsOutput
  describePendingMaintenanceActions(input: AwsRDSDescribePendingMaintenanceActionsInput, config: AwsConfig): AwsRDSDescribePendingMaintenanceActionsOutput
  describeReservedDBInstances(input: AwsRDSDescribeReservedDBInstancesInput, config: AwsConfig): AwsRDSDescribeReservedDBInstancesOutput
  describeReservedDBInstancesOfferings(input: AwsRDSDescribeReservedDBInstancesOfferingsInput, config: AwsConfig): AwsRDSDescribeReservedDBInstancesOfferingsOutput
  describeSourceRegions(input: AwsRDSDescribeSourceRegionsInput, config: AwsConfig): AwsRDSDescribeSourceRegionsOutput
  describeValidDBInstanceModifications(input: AwsRDSDescribeValidDBInstanceModificationsInput!, config: AwsConfig): AwsRDSDescribeValidDBInstanceModificationsOutput
  downloadDBLogFilePortion(input: AwsRDSDownloadDBLogFilePortionInput!, config: AwsConfig): AwsRDSDownloadDBLogFilePortionOutput
  failoverDBCluster(input: AwsRDSFailoverDBClusterInput!, config: AwsConfig): AwsRDSFailoverDBClusterOutput
  listTagsForResource(input: AwsRDSListTagsForResourceInput!, config: AwsConfig): AwsRDSListTagsForResourceOutput
  modifyCurrentDBClusterCapacity(input: AwsRDSModifyCurrentDBClusterCapacityInput!, config: AwsConfig): AwsRDSModifyCurrentDBClusterCapacityOutput
  modifyDBCluster(input: AwsRDSModifyDBClusterInput!, config: AwsConfig): AwsRDSModifyDBClusterOutput
  modifyDBClusterEndpoint(input: AwsRDSModifyDBClusterEndpointInput!, config: AwsConfig): JSON
  modifyDBClusterParameterGroup(input: AwsRDSModifyDBClusterParameterGroupInput!, config: AwsConfig): JSON
  modifyDBClusterSnapshotAttribute(input: AwsRDSModifyDBClusterSnapshotAttributeInput!, config: AwsConfig): AwsRDSModifyDBClusterSnapshotAttributeOutput
  modifyDBInstance(input: AwsRDSModifyDBInstanceInput!, config: AwsConfig): AwsRDSModifyDBInstanceOutput
  modifyDBParameterGroup(input: AwsRDSModifyDBParameterGroupInput!, config: AwsConfig): JSON
  modifyDBSnapshot(input: AwsRDSModifyDBSnapshotInput!, config: AwsConfig): AwsRDSModifyDBSnapshotOutput
  modifyDBSnapshotAttribute(input: AwsRDSModifyDBSnapshotAttributeInput!, config: AwsConfig): AwsRDSModifyDBSnapshotAttributeOutput
  modifyDBSubnetGroup(input: AwsRDSModifyDBSubnetGroupInput!, config: AwsConfig): AwsRDSModifyDBSubnetGroupOutput
  modifyEventSubscription(input: AwsRDSModifyEventSubscriptionInput!, config: AwsConfig): AwsRDSModifyEventSubscriptionOutput
  modifyGlobalCluster(input: AwsRDSModifyGlobalClusterInput, config: AwsConfig): AwsRDSModifyGlobalClusterOutput
  modifyOptionGroup(input: AwsRDSModifyOptionGroupInput!, config: AwsConfig): AwsRDSModifyOptionGroupOutput
  promoteReadReplica(input: AwsRDSPromoteReadReplicaInput!, config: AwsConfig): AwsRDSPromoteReadReplicaOutput
  promoteReadReplicaDBCluster(input: AwsRDSPromoteReadReplicaDBClusterInput!, config: AwsConfig): AwsRDSPromoteReadReplicaDBClusterOutput
  purchaseReservedDBInstancesOffering(input: AwsRDSPurchaseReservedDBInstancesOfferingInput!, config: AwsConfig): AwsRDSPurchaseReservedDBInstancesOfferingOutput
  rebootDBInstance(input: AwsRDSRebootDBInstanceInput!, config: AwsConfig): AwsRDSRebootDBInstanceOutput
  removeFromGlobalCluster(input: AwsRDSRemoveFromGlobalClusterInput, config: AwsConfig): AwsRDSRemoveFromGlobalClusterOutput
  removeRoleFromDBCluster(input: AwsRDSRemoveRoleFromDBClusterInput!, config: AwsConfig): JSON
  removeRoleFromDBInstance(input: AwsRDSRemoveRoleFromDBInstanceInput!, config: AwsConfig): JSON
  removeSourceIdentifierFromSubscription(input: AwsRDSRemoveSourceIdentifierFromSubscriptionInput!, config: AwsConfig): AwsRDSRemoveSourceIdentifierFromSubscriptionOutput
  removeTagsFromResource(input: AwsRDSRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  resetDBClusterParameterGroup(input: AwsRDSResetDBClusterParameterGroupInput!, config: AwsConfig): JSON
  resetDBParameterGroup(input: AwsRDSResetDBParameterGroupInput!, config: AwsConfig): JSON
  restoreDBClusterFromS3(input: AwsRDSRestoreDBClusterFromS3Input!, config: AwsConfig): AwsRDSRestoreDBClusterFromS3Output
  restoreDBClusterFromSnapshot(input: AwsRDSRestoreDBClusterFromSnapshotInput!, config: AwsConfig): AwsRDSRestoreDBClusterFromSnapshotOutput
  restoreDBClusterToPointInTime(input: AwsRDSRestoreDBClusterToPointInTimeInput!, config: AwsConfig): AwsRDSRestoreDBClusterToPointInTimeOutput
  restoreDBInstanceFromDBSnapshot(input: AwsRDSRestoreDBInstanceFromDBSnapshotInput!, config: AwsConfig): AwsRDSRestoreDBInstanceFromDBSnapshotOutput
  restoreDBInstanceFromS3(input: AwsRDSRestoreDBInstanceFromS3Input!, config: AwsConfig): AwsRDSRestoreDBInstanceFromS3Output
  restoreDBInstanceToPointInTime(input: AwsRDSRestoreDBInstanceToPointInTimeInput!, config: AwsConfig): AwsRDSRestoreDBInstanceToPointInTimeOutput
  revokeDBSecurityGroupIngress(input: AwsRDSRevokeDBSecurityGroupIngressInput!, config: AwsConfig): AwsRDSRevokeDBSecurityGroupIngressOutput
  startActivityStream(input: AwsRDSStartActivityStreamInput!, config: AwsConfig): AwsRDSStartActivityStreamOutput
  startDBCluster(input: AwsRDSStartDBClusterInput!, config: AwsConfig): AwsRDSStartDBClusterOutput
  startDBInstance(input: AwsRDSStartDBInstanceInput!, config: AwsConfig): AwsRDSStartDBInstanceOutput
  stopActivityStream(input: AwsRDSStopActivityStreamInput!, config: AwsConfig): AwsRDSStopActivityStreamOutput
  stopDBCluster(input: AwsRDSStopDBClusterInput!, config: AwsConfig): AwsRDSStopDBClusterOutput
  stopDBInstance(input: AwsRDSStopDBInstanceInput!, config: AwsConfig): AwsRDSStopDBInstanceOutput
}

input AwsRDSAddRoleToDBClusterInput {
  DBClusterIdentifier: String!
  RoleArn: String!
  FeatureName: String
}

input AwsRDSAddRoleToDBInstanceInput {
  DBInstanceIdentifier: String!
  RoleArn: String!
  FeatureName: String!
}

input AwsRDSAddSourceIdentifierToSubscriptionInput {
  SubscriptionName: String!
  SourceIdentifier: String!
}

type AwsRDSAddSourceIdentifierToSubscriptionOutput {
  EventSubscription: AwsRDSS6
}

input AwsRDSAddTagsToResourceInput {
  ResourceName: String!
  Tags: [AwsRDSSbInput]!
}

input AwsRDSApplyPendingMaintenanceActionInput {
  ResourceIdentifier: String!
  ApplyAction: String!
  OptInType: String!
}

type AwsRDSApplyPendingMaintenanceActionOutput {
  ResourcePendingMaintenanceActions: AwsRDSSf
}

input AwsRDSAuthorizeDBSecurityGroupIngressInput {
  DBSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupId: String
  EC2SecurityGroupOwnerId: String
}

type AwsRDSAuthorizeDBSecurityGroupIngressOutput {
  DBSecurityGroup: AwsRDSSl
}

input AwsRDSBacktrackDBClusterInput {
  DBClusterIdentifier: String!
  BacktrackTo: Date!
  Force: Boolean
  UseEarliestTimeOnPointInTimeUnavailable: Boolean
}

input AwsRDSCopyDBClusterParameterGroupInput {
  SourceDBClusterParameterGroupIdentifier: String!
  TargetDBClusterParameterGroupIdentifier: String!
  TargetDBClusterParameterGroupDescription: String!
  Tags: [AwsRDSSbInput]
}

type AwsRDSCopyDBClusterParameterGroupOutput {
  DBClusterParameterGroup: AwsRDSSv
}

input AwsRDSCopyDBClusterSnapshotInput {
  SourceDBClusterSnapshotIdentifier: String!
  TargetDBClusterSnapshotIdentifier: String!
  KmsKeyId: String
  PreSignedUrl: String
  CopyTags: Boolean
  Tags: [AwsRDSSbInput]
  SourceRegion: String
}

type AwsRDSCopyDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsRDSSy
}

input AwsRDSCopyDBParameterGroupInput {
  SourceDBParameterGroupIdentifier: String!
  TargetDBParameterGroupIdentifier: String!
  TargetDBParameterGroupDescription: String!
  Tags: [AwsRDSSbInput]
}

type AwsRDSCopyDBParameterGroupOutput {
  DBParameterGroup: AwsRDSS13
}

input AwsRDSCopyDBSnapshotInput {
  SourceDBSnapshotIdentifier: String!
  TargetDBSnapshotIdentifier: String!
  KmsKeyId: String
  Tags: [AwsRDSSbInput]
  CopyTags: Boolean
  PreSignedUrl: String
  OptionGroupName: String
  SourceRegion: String
}

type AwsRDSCopyDBSnapshotOutput {
  DBSnapshot: AwsRDSS16
}

input AwsRDSCopyOptionGroupInput {
  SourceOptionGroupIdentifier: String!
  TargetOptionGroupIdentifier: String!
  TargetOptionGroupDescription: String!
  Tags: [AwsRDSSbInput]
}

type AwsRDSCopyOptionGroupOutput {
  OptionGroup: AwsRDSS1c
}

input AwsRDSCreateDBClusterEndpointInput {
  DBClusterIdentifier: String!
  DBClusterEndpointIdentifier: String!
  EndpointType: String!
  StaticMembers: [String]
  ExcludedMembers: [String]
}

input AwsRDSCreateDBClusterInput {
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String!
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  DBSubnetGroupName: String
  Engine: String!
  EngineVersion: String
  Port: Int
  MasterUsername: String
  MasterUserPassword: String
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  ReplicationSourceIdentifier: String
  Tags: [AwsRDSSbInput]
  StorageEncrypted: Boolean
  KmsKeyId: String
  PreSignedUrl: String
  EnableIAMDatabaseAuthentication: Boolean
  BacktrackWindow: JSON
  EnableCloudwatchLogsExports: [String]
  EngineMode: String
  ScalingConfiguration: AwsRDSS1pInput
  DeletionProtection: Boolean
  GlobalClusterIdentifier: String
  CopyTagsToSnapshot: Boolean
  SourceRegion: String
}

type AwsRDSCreateDBClusterOutput {
  DBCluster: AwsRDSS1r
}

input AwsRDSCreateDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  DBParameterGroupFamily: String!
  Description: String!
  Tags: [AwsRDSSbInput]
}

type AwsRDSCreateDBClusterParameterGroupOutput {
  DBClusterParameterGroup: AwsRDSSv
}

input AwsRDSCreateDBClusterSnapshotInput {
  DBClusterSnapshotIdentifier: String!
  DBClusterIdentifier: String!
  Tags: [AwsRDSSbInput]
}

type AwsRDSCreateDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsRDSSy
}

input AwsRDSCreateDBInstanceInput {
  DBName: String
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String!
  Engine: String!
  MasterUsername: String
  MasterUserPassword: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  AvailabilityZone: String
  DBSubnetGroupName: String
  PreferredMaintenanceWindow: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  Port: Int
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  CharacterSetName: String
  PubliclyAccessible: Boolean
  Tags: [AwsRDSSbInput]
  DBClusterIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  Domain: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  MonitoringRoleArn: String
  DomainIAMRoleName: String
  PromotionTier: Int
  Timezone: String
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
  PerformanceInsightsRetentionPeriod: Int
  EnableCloudwatchLogsExports: [String]
  ProcessorFeatures: [AwsRDSS18Input]
  DeletionProtection: Boolean
  MaxAllocatedStorage: Int
}

type AwsRDSCreateDBInstanceOutput {
  DBInstance: AwsRDSS2c
}

input AwsRDSCreateDBInstanceReadReplicaInput {
  DBInstanceIdentifier: String!
  SourceDBInstanceIdentifier: String!
  DBInstanceClass: String
  AvailabilityZone: String
  Port: Int
  MultiAZ: Boolean
  AutoMinorVersionUpgrade: Boolean
  Iops: Int
  OptionGroupName: String
  PubliclyAccessible: Boolean
  Tags: [AwsRDSSbInput]
  DBSubnetGroupName: String
  VpcSecurityGroupIds: [String]
  StorageType: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  MonitoringRoleArn: String
  KmsKeyId: String
  PreSignedUrl: String
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
  PerformanceInsightsRetentionPeriod: Int
  EnableCloudwatchLogsExports: [String]
  ProcessorFeatures: [AwsRDSS18Input]
  UseDefaultProcessorFeatures: Boolean
  DeletionProtection: Boolean
  SourceRegion: String
}

type AwsRDSCreateDBInstanceReadReplicaOutput {
  DBInstance: AwsRDSS2c
}

input AwsRDSCreateDBParameterGroupInput {
  DBParameterGroupName: String!
  DBParameterGroupFamily: String!
  Description: String!
  Tags: [AwsRDSSbInput]
}

type AwsRDSCreateDBParameterGroupOutput {
  DBParameterGroup: AwsRDSS13
}

input AwsRDSCreateDBSecurityGroupInput {
  DBSecurityGroupName: String!
  DBSecurityGroupDescription: String!
  Tags: [AwsRDSSbInput]
}

type AwsRDSCreateDBSecurityGroupOutput {
  DBSecurityGroup: AwsRDSSl
}

input AwsRDSCreateDBSnapshotInput {
  DBSnapshotIdentifier: String!
  DBInstanceIdentifier: String!
  Tags: [AwsRDSSbInput]
}

type AwsRDSCreateDBSnapshotOutput {
  DBSnapshot: AwsRDSS16
}

input AwsRDSCreateDBSubnetGroupInput {
  DBSubnetGroupName: String!
  DBSubnetGroupDescription: String!
  SubnetIds: [String]!
  Tags: [AwsRDSSbInput]
}

type AwsRDSCreateDBSubnetGroupOutput {
  DBSubnetGroup: AwsRDSS2g
}

input AwsRDSCreateEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String!
  SourceType: String
  EventCategories: [String]
  SourceIds: [String]
  Enabled: Boolean
  Tags: [AwsRDSSbInput]
}

type AwsRDSCreateEventSubscriptionOutput {
  EventSubscription: AwsRDSS6
}

input AwsRDSCreateGlobalClusterInput {
  GlobalClusterIdentifier: String
  SourceDBClusterIdentifier: String
  Engine: String
  EngineVersion: String
  DeletionProtection: Boolean
  DatabaseName: String
  StorageEncrypted: Boolean
}

type AwsRDSCreateGlobalClusterOutput {
  GlobalCluster: AwsRDSS3b
}

input AwsRDSCreateOptionGroupInput {
  OptionGroupName: String!
  EngineName: String!
  MajorEngineVersion: String!
  OptionGroupDescription: String!
  Tags: [AwsRDSSbInput]
}

type AwsRDSCreateOptionGroupOutput {
  OptionGroup: AwsRDSS1c
}

"""AWS RDS DataService (2018-08-01)"""
type AwsRDSDataService {
  batchExecuteStatement(input: AwsRDSDataServiceBatchExecuteStatementInput!, config: AwsConfig): AwsRDSDataServiceBatchExecuteStatementOutput
  beginTransaction(input: AwsRDSDataServiceBeginTransactionInput!, config: AwsConfig): AwsRDSDataServiceBeginTransactionOutput
  commitTransaction(input: AwsRDSDataServiceCommitTransactionInput!, config: AwsConfig): AwsRDSDataServiceCommitTransactionOutput
  executeSql(input: AwsRDSDataServiceExecuteSqlInput!, config: AwsConfig): AwsRDSDataServiceExecuteSqlOutput
  executeStatement(input: AwsRDSDataServiceExecuteStatementInput!, config: AwsConfig): AwsRDSDataServiceExecuteStatementOutput
  rollbackTransaction(input: AwsRDSDataServiceRollbackTransactionInput!, config: AwsConfig): AwsRDSDataServiceRollbackTransactionOutput
}

input AwsRDSDataServiceBatchExecuteStatementInput {
  database: String
  parameterSets: [[AwsRDSDataServiceS4Input]]
  resourceArn: String!
  schema: String
  secretArn: String!
  sql: String!
  transactionId: String
}

type AwsRDSDataServiceBatchExecuteStatementOutput {
  updateResults: [AwsRDSDataServiceBatchExecuteStatementOutputUpdateResults]
}

type AwsRDSDataServiceBatchExecuteStatementOutputUpdateResults {
  generatedFields: [AwsRDSDataServiceS7]
}

input AwsRDSDataServiceBeginTransactionInput {
  database: String
  resourceArn: String!
  schema: String
  secretArn: String!
}

type AwsRDSDataServiceBeginTransactionOutput {
  transactionId: String
}

input AwsRDSDataServiceCommitTransactionInput {
  resourceArn: String!
  secretArn: String!
  transactionId: String!
}

type AwsRDSDataServiceCommitTransactionOutput {
  transactionStatus: String
}

input AwsRDSDataServiceExecuteSqlInput {
  awsSecretStoreArn: String!
  database: String
  dbClusterOrInstanceArn: String!
  schema: String
  sqlStatements: String!
}

type AwsRDSDataServiceExecuteSqlOutput {
  sqlStatementResults: [AwsRDSDataServiceExecuteSqlOutputSqlStatementResults]
}

type AwsRDSDataServiceExecuteSqlOutputSqlStatementResults {
  numberOfRecordsUpdated: JSON
  resultFrame: AwsRDSDataServiceExecuteSqlOutputSqlStatementResultsResultFrame
}

type AwsRDSDataServiceExecuteSqlOutputSqlStatementResultsResultFrame {
  records: [AwsRDSDataServiceExecuteSqlOutputSqlStatementResultsResultFrameRecords]
  resultSetMetadata: AwsRDSDataServiceExecuteSqlOutputSqlStatementResultsResultFrameResultSetMetadata
}

type AwsRDSDataServiceExecuteSqlOutputSqlStatementResultsResultFrameRecords {
  values: [AwsRDSDataServiceSy]
}

type AwsRDSDataServiceExecuteSqlOutputSqlStatementResultsResultFrameResultSetMetadata {
  columnCount: JSON
  columnMetadata: [AwsRDSDataServiceS15]
}

input AwsRDSDataServiceExecuteStatementInput {
  continueAfterTimeout: Boolean
  database: String
  includeResultMetadata: Boolean
  parameters: [AwsRDSDataServiceS4Input]
  resourceArn: String!
  schema: String
  secretArn: String!
  sql: String!
  transactionId: String
}

type AwsRDSDataServiceExecuteStatementOutput {
  columnMetadata: [AwsRDSDataServiceS15]
  generatedFields: [AwsRDSDataServiceS7]
  numberOfRecordsUpdated: JSON
  records: [[AwsRDSDataServiceS7]]
}

input AwsRDSDataServiceRollbackTransactionInput {
  resourceArn: String!
  secretArn: String!
  transactionId: String!
}

type AwsRDSDataServiceRollbackTransactionOutput {
  transactionStatus: String
}

type AwsRDSDataServiceS15 {
  arrayBaseColumnType: Int
  isAutoIncrement: Boolean
  isCaseSensitive: Boolean
  isCurrency: Boolean
  isSigned: Boolean
  label: String
  name: String
  nullable: Int
  precision: Int
  scale: Int
  schemaName: String
  tableName: String
  type: Int
  typeName: String
}

input AwsRDSDataServiceS4Input {
  name: String
  value: AwsRDSDataServiceS7Input
}

type AwsRDSDataServiceS7 {
  blobValue: JSON
  booleanValue: Boolean
  doubleValue: JSON
  isNull: Boolean
  longValue: JSON
  stringValue: String
}

input AwsRDSDataServiceS7Input {
  blobValue: JSON
  booleanValue: Boolean
  doubleValue: JSON
  isNull: Boolean
  longValue: JSON
  stringValue: String
}

type AwsRDSDataServiceSy {
  arrayValues: [JSON]
  bigIntValue: JSON
  bitValue: Boolean
  blobValue: JSON
  doubleValue: JSON
  intValue: Int
  isNull: Boolean
  realValue: Float
  stringValue: String
  structValue: AwsRDSDataServiceSyStructValue
}

type AwsRDSDataServiceSyStructValue {
  attributes: [JSON]
}

input AwsRDSDeleteDBClusterEndpointInput {
  DBClusterEndpointIdentifier: String!
}

input AwsRDSDeleteDBClusterInput {
  DBClusterIdentifier: String!
  SkipFinalSnapshot: Boolean
  FinalDBSnapshotIdentifier: String
}

type AwsRDSDeleteDBClusterOutput {
  DBCluster: AwsRDSS1r
}

input AwsRDSDeleteDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
}

input AwsRDSDeleteDBClusterSnapshotInput {
  DBClusterSnapshotIdentifier: String!
}

type AwsRDSDeleteDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsRDSSy
}

input AwsRDSDeleteDBInstanceAutomatedBackupInput {
  DbiResourceId: String!
}

type AwsRDSDeleteDBInstanceAutomatedBackupOutput {
  DBInstanceAutomatedBackup: AwsRDSS3r
}

input AwsRDSDeleteDBInstanceInput {
  DBInstanceIdentifier: String!
  SkipFinalSnapshot: Boolean
  FinalDBSnapshotIdentifier: String
  DeleteAutomatedBackups: Boolean
}

type AwsRDSDeleteDBInstanceOutput {
  DBInstance: AwsRDSS2c
}

input AwsRDSDeleteDBParameterGroupInput {
  DBParameterGroupName: String!
}

input AwsRDSDeleteDBSecurityGroupInput {
  DBSecurityGroupName: String!
}

input AwsRDSDeleteDBSnapshotInput {
  DBSnapshotIdentifier: String!
}

type AwsRDSDeleteDBSnapshotOutput {
  DBSnapshot: AwsRDSS16
}

input AwsRDSDeleteDBSubnetGroupInput {
  DBSubnetGroupName: String!
}

input AwsRDSDeleteEventSubscriptionInput {
  SubscriptionName: String!
}

type AwsRDSDeleteEventSubscriptionOutput {
  EventSubscription: AwsRDSS6
}

input AwsRDSDeleteGlobalClusterInput {
  GlobalClusterIdentifier: String!
}

type AwsRDSDeleteGlobalClusterOutput {
  GlobalCluster: AwsRDSS3b
}

input AwsRDSDeleteOptionGroupInput {
  OptionGroupName: String!
}

type AwsRDSDescribeAccountAttributesOutput {
  AccountQuotas: [AwsRDSDescribeAccountAttributesOutputAccountQuotas]
}

type AwsRDSDescribeAccountAttributesOutputAccountQuotas {
  AccountQuotaName: String
  Used: JSON
  Max: JSON
}

input AwsRDSDescribeCertificatesInput {
  CertificateIdentifier: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeCertificatesOutput {
  Certificates: [AwsRDSDescribeCertificatesOutputCertificates]
  Marker: String
}

type AwsRDSDescribeCertificatesOutputCertificates {
  CertificateIdentifier: String
  CertificateType: String
  Thumbprint: String
  ValidFrom: Date
  ValidTill: Date
  CertificateArn: String
}

input AwsRDSDescribeDBClusterBacktracksInput {
  DBClusterIdentifier: String!
  BacktrackIdentifier: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBClusterBacktracksOutput {
  Marker: String
  DBClusterBacktracks: [AwsRDSSs]
}

input AwsRDSDescribeDBClusterEndpointsInput {
  DBClusterIdentifier: String
  DBClusterEndpointIdentifier: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBClusterEndpointsOutput {
  Marker: String
  DBClusterEndpoints: [AwsRDSS24]
}

input AwsRDSDescribeDBClusterParameterGroupsInput {
  DBClusterParameterGroupName: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBClusterParameterGroupsOutput {
  Marker: String
  DBClusterParameterGroups: [AwsRDSSv]
}

input AwsRDSDescribeDBClusterParametersInput {
  DBClusterParameterGroupName: String!
  Source: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBClusterParametersOutput {
  Parameters: [AwsRDSS4q]
  Marker: String
}

input AwsRDSDescribeDBClustersInput {
  DBClusterIdentifier: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
  IncludeShared: Boolean
}

input AwsRDSDescribeDBClusterSnapshotAttributesInput {
  DBClusterSnapshotIdentifier: String!
}

type AwsRDSDescribeDBClusterSnapshotAttributesOutput {
  DBClusterSnapshotAttributesResult: AwsRDSS4w
}

input AwsRDSDescribeDBClusterSnapshotsInput {
  DBClusterIdentifier: String
  DBClusterSnapshotIdentifier: String
  SnapshotType: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
  IncludeShared: Boolean
  IncludePublic: Boolean
}

type AwsRDSDescribeDBClusterSnapshotsOutput {
  Marker: String
  DBClusterSnapshots: [AwsRDSSy]
}

type AwsRDSDescribeDBClustersOutput {
  Marker: String
  DBClusters: [AwsRDSS1r]
}

input AwsRDSDescribeDBEngineVersionsInput {
  Engine: String
  EngineVersion: String
  DBParameterGroupFamily: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
  DefaultOnly: Boolean
  ListSupportedCharacterSets: Boolean
  ListSupportedTimezones: Boolean
  IncludeAll: Boolean
}

type AwsRDSDescribeDBEngineVersionsOutput {
  Marker: String
  DBEngineVersions: [AwsRDSDescribeDBEngineVersionsOutputDBEngineVersions]
}

type AwsRDSDescribeDBEngineVersionsOutputDBEngineVersions {
  Engine: String
  EngineVersion: String
  DBParameterGroupFamily: String
  DBEngineDescription: String
  DBEngineVersionDescription: String
  DefaultCharacterSet: AwsRDSS5a
  SupportedCharacterSets: [AwsRDSS5a]
  ValidUpgradeTarget: [AwsRDSDescribeDBEngineVersionsOutputDBEngineVersionsValidUpgradeTarget]
  SupportedTimezones: [AwsRDSDescribeDBEngineVersionsOutputDBEngineVersionsSupportedTimezones]
  ExportableLogTypes: [String]
  SupportsLogExportsToCloudwatchLogs: Boolean
  SupportsReadReplica: Boolean
  SupportedEngineModes: [String]
  SupportedFeatureNames: [String]
  Status: String
}

type AwsRDSDescribeDBEngineVersionsOutputDBEngineVersionsSupportedTimezones {
  TimezoneName: String
}

type AwsRDSDescribeDBEngineVersionsOutputDBEngineVersionsValidUpgradeTarget {
  Engine: String
  EngineVersion: String
  Description: String
  AutoUpgrade: Boolean
  IsMajorVersionUpgrade: Boolean
}

input AwsRDSDescribeDBInstanceAutomatedBackupsInput {
  DbiResourceId: String
  DBInstanceIdentifier: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBInstanceAutomatedBackupsOutput {
  Marker: String
  DBInstanceAutomatedBackups: [AwsRDSS3r]
}

input AwsRDSDescribeDBInstancesInput {
  DBInstanceIdentifier: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBInstancesOutput {
  Marker: String
  DBInstances: [AwsRDSS2c]
}

input AwsRDSDescribeDBLogFilesInput {
  DBInstanceIdentifier: String!
  FilenameContains: String
  FileLastWritten: JSON
  FileSize: JSON
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBLogFilesOutput {
  DescribeDBLogFiles: [AwsRDSDescribeDBLogFilesOutputDescribeDBLogFiles]
  Marker: String
}

type AwsRDSDescribeDBLogFilesOutputDescribeDBLogFiles {
  LogFileName: String
  LastWritten: JSON
  Size: JSON
}

input AwsRDSDescribeDBParameterGroupsInput {
  DBParameterGroupName: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBParameterGroupsOutput {
  Marker: String
  DBParameterGroups: [AwsRDSS13]
}

input AwsRDSDescribeDBParametersInput {
  DBParameterGroupName: String!
  Source: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBParametersOutput {
  Parameters: [AwsRDSS4q]
  Marker: String
}

input AwsRDSDescribeDBSecurityGroupsInput {
  DBSecurityGroupName: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBSecurityGroupsOutput {
  Marker: String
  DBSecurityGroups: [AwsRDSSl]
}

input AwsRDSDescribeDBSnapshotAttributesInput {
  DBSnapshotIdentifier: String!
}

type AwsRDSDescribeDBSnapshotAttributesOutput {
  DBSnapshotAttributesResult: AwsRDSS61
}

input AwsRDSDescribeDBSnapshotsInput {
  DBInstanceIdentifier: String
  DBSnapshotIdentifier: String
  SnapshotType: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
  IncludeShared: Boolean
  IncludePublic: Boolean
  DbiResourceId: String
}

type AwsRDSDescribeDBSnapshotsOutput {
  Marker: String
  DBSnapshots: [AwsRDSS16]
}

input AwsRDSDescribeDBSubnetGroupsInput {
  DBSubnetGroupName: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBSubnetGroupsOutput {
  Marker: String
  DBSubnetGroups: [AwsRDSS2g]
}

input AwsRDSDescribeEngineDefaultClusterParametersInput {
  DBParameterGroupFamily: String!
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeEngineDefaultClusterParametersOutput {
  EngineDefaults: AwsRDSS6c
}

input AwsRDSDescribeEngineDefaultParametersInput {
  DBParameterGroupFamily: String!
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeEngineDefaultParametersOutput {
  EngineDefaults: AwsRDSS6c
}

input AwsRDSDescribeEventCategoriesInput {
  SourceType: String
  Filters: [AwsRDSS49Input]
}

type AwsRDSDescribeEventCategoriesOutput {
  EventCategoriesMapList: [AwsRDSDescribeEventCategoriesOutputEventCategoriesMapList]
}

type AwsRDSDescribeEventCategoriesOutputEventCategoriesMapList {
  SourceType: String
  EventCategories: [String]
}

input AwsRDSDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  EventCategories: [String]
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeEventsOutput {
  Marker: String
  Events: [AwsRDSDescribeEventsOutputEvents]
}

type AwsRDSDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Date: Date
  SourceArn: String
}

input AwsRDSDescribeEventSubscriptionsInput {
  SubscriptionName: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeEventSubscriptionsOutput {
  Marker: String
  EventSubscriptionsList: [AwsRDSS6]
}

input AwsRDSDescribeGlobalClustersInput {
  GlobalClusterIdentifier: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeGlobalClustersOutput {
  Marker: String
  GlobalClusters: [AwsRDSS3b]
}

input AwsRDSDescribeOptionGroupOptionsInput {
  EngineName: String!
  MajorEngineVersion: String
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeOptionGroupOptionsOutput {
  OptionGroupOptions: [AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptions]
  Marker: String
}

type AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptions {
  Name: String
  Description: String
  EngineName: String
  MajorEngineVersion: String
  MinimumRequiredMinorEngineVersion: String
  PortRequired: Boolean
  DefaultPort: Int
  OptionsDependedOn: [String]
  OptionsConflictsWith: [String]
  Persistent: Boolean
  Permanent: Boolean
  RequiresAutoMinorEngineVersionUpgrade: Boolean
  VpcOnly: Boolean
  SupportsOptionVersionDowngrade: Boolean
  OptionGroupOptionSettings: [AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionSettings]
  OptionGroupOptionVersions: [AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionVersions]
}

type AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionSettings {
  SettingName: String
  SettingDescription: String
  DefaultValue: String
  ApplyType: String
  AllowedValues: String
  IsModifiable: Boolean
  IsRequired: Boolean
  MinimumEngineVersionPerAllowedValue: [AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValue]
}

type AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionSettingsMinimumEngineVersionPerAllowedValue {
  AllowedValue: String
  MinimumEngineVersion: String
}

type AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionVersions {
  Version: String
  IsDefault: Boolean
}

input AwsRDSDescribeOptionGroupsInput {
  OptionGroupName: String
  Filters: [AwsRDSS49Input]
  Marker: String
  MaxRecords: Int
  EngineName: String
  MajorEngineVersion: String
}

type AwsRDSDescribeOptionGroupsOutput {
  OptionGroupsList: [AwsRDSS1c]
  Marker: String
}

input AwsRDSDescribeOrderableDBInstanceOptionsInput {
  Engine: String!
  EngineVersion: String
  DBInstanceClass: String
  LicenseModel: String
  Vpc: Boolean
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeOrderableDBInstanceOptionsOutput {
  OrderableDBInstanceOptions: [AwsRDSDescribeOrderableDBInstanceOptionsOutputOrderableDBInstanceOptions]
  Marker: String
}

type AwsRDSDescribeOrderableDBInstanceOptionsOutputOrderableDBInstanceOptions {
  Engine: String
  EngineVersion: String
  DBInstanceClass: String
  LicenseModel: String
  AvailabilityZones: [AwsRDSS2j]
  MultiAZCapable: Boolean
  ReadReplicaCapable: Boolean
  Vpc: Boolean
  SupportsStorageEncryption: Boolean
  StorageType: String
  SupportsIops: Boolean
  SupportsEnhancedMonitoring: Boolean
  SupportsIAMDatabaseAuthentication: Boolean
  SupportsPerformanceInsights: Boolean
  MinStorageSize: Int
  MaxStorageSize: Int
  MinIopsPerDbInstance: Int
  MaxIopsPerDbInstance: Int
  MinIopsPerGib: JSON
  MaxIopsPerGib: JSON
  AvailableProcessorFeatures: [AwsRDSS7f]
  SupportedEngineModes: [String]
  SupportsStorageAutoscaling: Boolean
}

input AwsRDSDescribePendingMaintenanceActionsInput {
  ResourceIdentifier: String
  Filters: [AwsRDSS49Input]
  Marker: String
  MaxRecords: Int
}

type AwsRDSDescribePendingMaintenanceActionsOutput {
  PendingMaintenanceActions: [AwsRDSSf]
  Marker: String
}

input AwsRDSDescribeReservedDBInstancesInput {
  ReservedDBInstanceId: String
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

input AwsRDSDescribeReservedDBInstancesOfferingsInput {
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  Filters: [AwsRDSS49Input]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeReservedDBInstancesOfferingsOutput {
  Marker: String
  ReservedDBInstancesOfferings: [AwsRDSDescribeReservedDBInstancesOfferingsOutputReservedDBInstancesOfferings]
}

type AwsRDSDescribeReservedDBInstancesOfferingsOutputReservedDBInstancesOfferings {
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  RecurringCharges: [AwsRDSS7p]
}

type AwsRDSDescribeReservedDBInstancesOutput {
  Marker: String
  ReservedDBInstances: [AwsRDSS7n]
}

input AwsRDSDescribeSourceRegionsInput {
  RegionName: String
  MaxRecords: Int
  Marker: String
  Filters: [AwsRDSS49Input]
}

type AwsRDSDescribeSourceRegionsOutput {
  Marker: String
  SourceRegions: [AwsRDSDescribeSourceRegionsOutputSourceRegions]
}

type AwsRDSDescribeSourceRegionsOutputSourceRegions {
  RegionName: String
  Endpoint: String
  Status: String
}

input AwsRDSDescribeValidDBInstanceModificationsInput {
  DBInstanceIdentifier: String!
}

type AwsRDSDescribeValidDBInstanceModificationsOutput {
  ValidDBInstanceModificationsMessage: AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessage
}

type AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessage {
  Storage: [AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorage]
  ValidProcessorFeatures: [AwsRDSS7f]
}

type AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorage {
  StorageType: String
  StorageSize: [AwsRDSS84]
  ProvisionedIops: [AwsRDSS84]
  IopsToStorageRatio: [AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorageIopsToStorageRatio]
  SupportsStorageAutoscaling: Boolean
}

type AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorageIopsToStorageRatio {
  From: JSON
  To: JSON
}

input AwsRDSDownloadDBLogFilePortionInput {
  DBInstanceIdentifier: String!
  LogFileName: String!
  Marker: String
  NumberOfLines: Int
}

type AwsRDSDownloadDBLogFilePortionOutput {
  LogFileData: String
  Marker: String
  AdditionalDataPending: Boolean
}

input AwsRDSFailoverDBClusterInput {
  DBClusterIdentifier: String!
  TargetDBInstanceIdentifier: String
}

type AwsRDSFailoverDBClusterOutput {
  DBCluster: AwsRDSS1r
}

input AwsRDSListTagsForResourceInput {
  ResourceName: String!
  Filters: [AwsRDSS49Input]
}

type AwsRDSListTagsForResourceOutput {
  TagList: [AwsRDSSb]
}

input AwsRDSModifyCurrentDBClusterCapacityInput {
  DBClusterIdentifier: String!
  Capacity: Int
  SecondsBeforeTimeout: Int
  TimeoutAction: String
}

type AwsRDSModifyCurrentDBClusterCapacityOutput {
  DBClusterIdentifier: String
  PendingCapacity: Int
  CurrentCapacity: Int
  SecondsBeforeTimeout: Int
  TimeoutAction: String
}

input AwsRDSModifyDBClusterEndpointInput {
  DBClusterEndpointIdentifier: String!
  EndpointType: String
  StaticMembers: [String]
  ExcludedMembers: [String]
}

input AwsRDSModifyDBClusterInput {
  DBClusterIdentifier: String!
  NewDBClusterIdentifier: String
  ApplyImmediately: Boolean
  BackupRetentionPeriod: Int
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  Port: Int
  MasterUserPassword: String
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  EnableIAMDatabaseAuthentication: Boolean
  BacktrackWindow: JSON
  CloudwatchLogsExportConfiguration: AwsRDSS8hInput
  EngineVersion: String
  AllowMajorVersionUpgrade: Boolean
  DBInstanceParameterGroupName: String
  ScalingConfiguration: AwsRDSS1pInput
  DeletionProtection: Boolean
  EnableHttpEndpoint: Boolean
  CopyTagsToSnapshot: Boolean
}

type AwsRDSModifyDBClusterOutput {
  DBCluster: AwsRDSS1r
}

input AwsRDSModifyDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  Parameters: [AwsRDSS4qInput]!
}

input AwsRDSModifyDBClusterSnapshotAttributeInput {
  DBClusterSnapshotIdentifier: String!
  AttributeName: String!
  ValuesToAdd: [String]
  ValuesToRemove: [String]
}

type AwsRDSModifyDBClusterSnapshotAttributeOutput {
  DBClusterSnapshotAttributesResult: AwsRDSS4w
}

input AwsRDSModifyDBInstanceInput {
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String
  DBSubnetGroupName: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  ApplyImmediately: Boolean
  MasterUserPassword: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  MultiAZ: Boolean
  EngineVersion: String
  AllowMajorVersionUpgrade: Boolean
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  NewDBInstanceIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  CACertificateIdentifier: String
  Domain: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  DBPortNumber: Int
  PubliclyAccessible: Boolean
  MonitoringRoleArn: String
  DomainIAMRoleName: String
  PromotionTier: Int
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
  PerformanceInsightsRetentionPeriod: Int
  CloudwatchLogsExportConfiguration: AwsRDSS8hInput
  ProcessorFeatures: [AwsRDSS18Input]
  UseDefaultProcessorFeatures: Boolean
  DeletionProtection: Boolean
  MaxAllocatedStorage: Int
}

type AwsRDSModifyDBInstanceOutput {
  DBInstance: AwsRDSS2c
}

input AwsRDSModifyDBParameterGroupInput {
  DBParameterGroupName: String!
  Parameters: [AwsRDSS4qInput]!
}

input AwsRDSModifyDBSnapshotAttributeInput {
  DBSnapshotIdentifier: String!
  AttributeName: String!
  ValuesToAdd: [String]
  ValuesToRemove: [String]
}

type AwsRDSModifyDBSnapshotAttributeOutput {
  DBSnapshotAttributesResult: AwsRDSS61
}

input AwsRDSModifyDBSnapshotInput {
  DBSnapshotIdentifier: String!
  EngineVersion: String
  OptionGroupName: String
}

type AwsRDSModifyDBSnapshotOutput {
  DBSnapshot: AwsRDSS16
}

input AwsRDSModifyDBSubnetGroupInput {
  DBSubnetGroupName: String!
  DBSubnetGroupDescription: String
  SubnetIds: [String]!
}

type AwsRDSModifyDBSubnetGroupOutput {
  DBSubnetGroup: AwsRDSS2g
}

input AwsRDSModifyEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String
  SourceType: String
  EventCategories: [String]
  Enabled: Boolean
}

type AwsRDSModifyEventSubscriptionOutput {
  EventSubscription: AwsRDSS6
}

input AwsRDSModifyGlobalClusterInput {
  GlobalClusterIdentifier: String
  NewGlobalClusterIdentifier: String
  DeletionProtection: Boolean
}

type AwsRDSModifyGlobalClusterOutput {
  GlobalCluster: AwsRDSS3b
}

input AwsRDSModifyOptionGroupInput {
  OptionGroupName: String!
  OptionsToInclude: [AwsRDSModifyOptionGroupOptionsToIncludeInput]
  OptionsToRemove: [String]
  ApplyImmediately: Boolean
}

input AwsRDSModifyOptionGroupOptionsToIncludeInput {
  OptionName: String!
  Port: Int
  OptionVersion: String
  DBSecurityGroupMemberships: [String]
  VpcSecurityGroupMemberships: [String]
  OptionSettings: [AwsRDSS1gInput]
}

type AwsRDSModifyOptionGroupOutput {
  OptionGroup: AwsRDSS1c
}

input AwsRDSPromoteReadReplicaDBClusterInput {
  DBClusterIdentifier: String!
}

type AwsRDSPromoteReadReplicaDBClusterOutput {
  DBCluster: AwsRDSS1r
}

input AwsRDSPromoteReadReplicaInput {
  DBInstanceIdentifier: String!
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
}

type AwsRDSPromoteReadReplicaOutput {
  DBInstance: AwsRDSS2c
}

input AwsRDSPurchaseReservedDBInstancesOfferingInput {
  ReservedDBInstancesOfferingId: String!
  ReservedDBInstanceId: String
  DBInstanceCount: Int
  Tags: [AwsRDSSbInput]
}

type AwsRDSPurchaseReservedDBInstancesOfferingOutput {
  ReservedDBInstance: AwsRDSS7n
}

input AwsRDSRebootDBInstanceInput {
  DBInstanceIdentifier: String!
  ForceFailover: Boolean
}

type AwsRDSRebootDBInstanceOutput {
  DBInstance: AwsRDSS2c
}

input AwsRDSRemoveFromGlobalClusterInput {
  GlobalClusterIdentifier: String
  DbClusterIdentifier: String
}

type AwsRDSRemoveFromGlobalClusterOutput {
  GlobalCluster: AwsRDSS3b
}

input AwsRDSRemoveRoleFromDBClusterInput {
  DBClusterIdentifier: String!
  RoleArn: String!
  FeatureName: String
}

input AwsRDSRemoveRoleFromDBInstanceInput {
  DBInstanceIdentifier: String!
  RoleArn: String!
  FeatureName: String!
}

input AwsRDSRemoveSourceIdentifierFromSubscriptionInput {
  SubscriptionName: String!
  SourceIdentifier: String!
}

type AwsRDSRemoveSourceIdentifierFromSubscriptionOutput {
  EventSubscription: AwsRDSS6
}

input AwsRDSRemoveTagsFromResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsRDSResetDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsRDSS4qInput]
}

input AwsRDSResetDBParameterGroupInput {
  DBParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsRDSS4qInput]
}

input AwsRDSRestoreDBClusterFromS3Input {
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String!
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  DBSubnetGroupName: String
  Engine: String!
  EngineVersion: String
  Port: Int
  MasterUsername: String!
  MasterUserPassword: String!
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  Tags: [AwsRDSSbInput]
  StorageEncrypted: Boolean
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
  SourceEngine: String!
  SourceEngineVersion: String!
  S3BucketName: String!
  S3Prefix: String
  S3IngestionRoleArn: String!
  BacktrackWindow: JSON
  EnableCloudwatchLogsExports: [String]
  DeletionProtection: Boolean
  CopyTagsToSnapshot: Boolean
}

type AwsRDSRestoreDBClusterFromS3Output {
  DBCluster: AwsRDSS1r
}

input AwsRDSRestoreDBClusterFromSnapshotInput {
  AvailabilityZones: [String]
  DBClusterIdentifier: String!
  SnapshotIdentifier: String!
  Engine: String!
  EngineVersion: String
  Port: Int
  DBSubnetGroupName: String
  DatabaseName: String
  OptionGroupName: String
  VpcSecurityGroupIds: [String]
  Tags: [AwsRDSSbInput]
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
  BacktrackWindow: JSON
  EnableCloudwatchLogsExports: [String]
  EngineMode: String
  ScalingConfiguration: AwsRDSS1pInput
  DBClusterParameterGroupName: String
  DeletionProtection: Boolean
  CopyTagsToSnapshot: Boolean
}

type AwsRDSRestoreDBClusterFromSnapshotOutput {
  DBCluster: AwsRDSS1r
}

input AwsRDSRestoreDBClusterToPointInTimeInput {
  DBClusterIdentifier: String!
  RestoreType: String
  SourceDBClusterIdentifier: String!
  RestoreToTime: Date
  UseLatestRestorableTime: Boolean
  Port: Int
  DBSubnetGroupName: String
  OptionGroupName: String
  VpcSecurityGroupIds: [String]
  Tags: [AwsRDSSbInput]
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
  BacktrackWindow: JSON
  EnableCloudwatchLogsExports: [String]
  DBClusterParameterGroupName: String
  DeletionProtection: Boolean
  CopyTagsToSnapshot: Boolean
}

type AwsRDSRestoreDBClusterToPointInTimeOutput {
  DBCluster: AwsRDSS1r
}

input AwsRDSRestoreDBInstanceFromDBSnapshotInput {
  DBInstanceIdentifier: String!
  DBSnapshotIdentifier: String!
  DBInstanceClass: String
  Port: Int
  AvailabilityZone: String
  DBSubnetGroupName: String
  MultiAZ: Boolean
  PubliclyAccessible: Boolean
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  DBName: String
  Engine: String
  Iops: Int
  OptionGroupName: String
  Tags: [AwsRDSSbInput]
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  VpcSecurityGroupIds: [String]
  Domain: String
  CopyTagsToSnapshot: Boolean
  DomainIAMRoleName: String
  EnableIAMDatabaseAuthentication: Boolean
  EnableCloudwatchLogsExports: [String]
  ProcessorFeatures: [AwsRDSS18Input]
  UseDefaultProcessorFeatures: Boolean
  DBParameterGroupName: String
  DeletionProtection: Boolean
}

type AwsRDSRestoreDBInstanceFromDBSnapshotOutput {
  DBInstance: AwsRDSS2c
}

input AwsRDSRestoreDBInstanceFromS3Input {
  DBName: String
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String!
  Engine: String!
  MasterUsername: String
  MasterUserPassword: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  AvailabilityZone: String
  DBSubnetGroupName: String
  PreferredMaintenanceWindow: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  Port: Int
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  PubliclyAccessible: Boolean
  Tags: [AwsRDSSbInput]
  StorageType: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  MonitoringRoleArn: String
  EnableIAMDatabaseAuthentication: Boolean
  SourceEngine: String!
  SourceEngineVersion: String!
  S3BucketName: String!
  S3Prefix: String
  S3IngestionRoleArn: String!
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
  PerformanceInsightsRetentionPeriod: Int
  EnableCloudwatchLogsExports: [String]
  ProcessorFeatures: [AwsRDSS18Input]
  UseDefaultProcessorFeatures: Boolean
  DeletionProtection: Boolean
}

type AwsRDSRestoreDBInstanceFromS3Output {
  DBInstance: AwsRDSS2c
}

input AwsRDSRestoreDBInstanceToPointInTimeInput {
  SourceDBInstanceIdentifier: String
  TargetDBInstanceIdentifier: String!
  RestoreTime: Date
  UseLatestRestorableTime: Boolean
  DBInstanceClass: String
  Port: Int
  AvailabilityZone: String
  DBSubnetGroupName: String
  MultiAZ: Boolean
  PubliclyAccessible: Boolean
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  DBName: String
  Engine: String
  Iops: Int
  OptionGroupName: String
  CopyTagsToSnapshot: Boolean
  Tags: [AwsRDSSbInput]
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  VpcSecurityGroupIds: [String]
  Domain: String
  DomainIAMRoleName: String
  EnableIAMDatabaseAuthentication: Boolean
  EnableCloudwatchLogsExports: [String]
  ProcessorFeatures: [AwsRDSS18Input]
  UseDefaultProcessorFeatures: Boolean
  DBParameterGroupName: String
  DeletionProtection: Boolean
  SourceDbiResourceId: String
}

type AwsRDSRestoreDBInstanceToPointInTimeOutput {
  DBInstance: AwsRDSS2c
}

input AwsRDSRevokeDBSecurityGroupIngressInput {
  DBSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupId: String
  EC2SecurityGroupOwnerId: String
}

type AwsRDSRevokeDBSecurityGroupIngressOutput {
  DBSecurityGroup: AwsRDSSl
}

type AwsRDSS13 {
  DBParameterGroupName: String
  DBParameterGroupFamily: String
  Description: String
  DBParameterGroupArn: String
}

type AwsRDSS16 {
  DBSnapshotIdentifier: String
  DBInstanceIdentifier: String
  SnapshotCreateTime: Date
  Engine: String
  AllocatedStorage: Int
  Status: String
  Port: Int
  AvailabilityZone: String
  VpcId: String
  InstanceCreateTime: Date
  MasterUsername: String
  EngineVersion: String
  LicenseModel: String
  SnapshotType: String
  Iops: Int
  OptionGroupName: String
  PercentProgress: Int
  SourceRegion: String
  SourceDBSnapshotIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  Encrypted: Boolean
  KmsKeyId: String
  DBSnapshotArn: String
  Timezone: String
  IAMDatabaseAuthenticationEnabled: Boolean
  ProcessorFeatures: [AwsRDSS18]
  DbiResourceId: String
}

type AwsRDSS18 {
  Name: String
  Value: String
}

input AwsRDSS18Input {
  Name: String
  Value: String
}

type AwsRDSS1c {
  OptionGroupName: String
  OptionGroupDescription: String
  EngineName: String
  MajorEngineVersion: String
  Options: [AwsRDSS1cOptions]
  AllowsVpcAndNonVpcInstanceMemberships: Boolean
  VpcId: String
  OptionGroupArn: String
}

type AwsRDSS1cOptions {
  OptionName: String
  OptionDescription: String
  Persistent: Boolean
  Permanent: Boolean
  Port: Int
  OptionVersion: String
  OptionSettings: [AwsRDSS1g]
  DBSecurityGroupMemberships: [AwsRDSS1h]
  VpcSecurityGroupMemberships: [AwsRDSS1j]
}

type AwsRDSS1g {
  Name: String
  Value: String
  DefaultValue: String
  Description: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  IsCollection: Boolean
}

input AwsRDSS1gInput {
  Name: String
  Value: String
  DefaultValue: String
  Description: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  IsCollection: Boolean
}

type AwsRDSS1h {
  DBSecurityGroupName: String
  Status: String
}

type AwsRDSS1j {
  VpcSecurityGroupId: String
  Status: String
}

input AwsRDSS1pInput {
  MinCapacity: Int
  MaxCapacity: Int
  AutoPause: Boolean
  SecondsUntilAutoPause: Int
  TimeoutAction: String
}

type AwsRDSS1r {
  AllocatedStorage: Int
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String
  DBClusterParameterGroup: String
  DBSubnetGroup: String
  Status: String
  PercentProgress: String
  EarliestRestorableTime: Date
  Endpoint: String
  ReaderEndpoint: String
  CustomEndpoints: [String]
  MultiAZ: Boolean
  Engine: String
  EngineVersion: String
  LatestRestorableTime: Date
  Port: Int
  MasterUsername: String
  DBClusterOptionGroupMemberships: [AwsRDSS1rDBClusterOptionGroupMemberships]
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  ReplicationSourceIdentifier: String
  ReadReplicaIdentifiers: [String]
  DBClusterMembers: [AwsRDSS1rDBClusterMembers]
  VpcSecurityGroups: [AwsRDSS1j]
  HostedZoneId: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  DbClusterResourceId: String
  DBClusterArn: String
  AssociatedRoles: [AwsRDSS1rAssociatedRoles]
  IAMDatabaseAuthenticationEnabled: Boolean
  CloneGroupId: String
  ClusterCreateTime: Date
  EarliestBacktrackTime: Date
  BacktrackWindow: JSON
  BacktrackConsumedChangeRecords: JSON
  EnabledCloudwatchLogsExports: [String]
  Capacity: Int
  EngineMode: String
  ScalingConfigurationInfo: AwsRDSS1rScalingConfigurationInfo
  DeletionProtection: Boolean
  HttpEndpointEnabled: Boolean
  ActivityStreamMode: String
  ActivityStreamStatus: String
  ActivityStreamKmsKeyId: String
  ActivityStreamKinesisStreamName: String
  CopyTagsToSnapshot: Boolean
  CrossAccountClone: Boolean
}

type AwsRDSS1rAssociatedRoles {
  RoleArn: String
  Status: String
  FeatureName: String
}

type AwsRDSS1rDBClusterMembers {
  DBInstanceIdentifier: String
  IsClusterWriter: Boolean
  DBClusterParameterGroupStatus: String
  PromotionTier: Int
}

type AwsRDSS1rDBClusterOptionGroupMemberships {
  DBClusterOptionGroupName: String
  Status: String
}

type AwsRDSS1rScalingConfigurationInfo {
  MinCapacity: Int
  MaxCapacity: Int
  AutoPause: Boolean
  SecondsUntilAutoPause: Int
  TimeoutAction: String
}

type AwsRDSS24 {
  DBClusterEndpointIdentifier: String
  DBClusterIdentifier: String
  DBClusterEndpointResourceIdentifier: String
  Endpoint: String
  Status: String
  EndpointType: String
  CustomEndpointType: String
  StaticMembers: [String]
  ExcludedMembers: [String]
  DBClusterEndpointArn: String
}

type AwsRDSS2c {
  DBInstanceIdentifier: String
  DBInstanceClass: String
  Engine: String
  DBInstanceStatus: String
  MasterUsername: String
  DBName: String
  Endpoint: AwsRDSS2d
  AllocatedStorage: Int
  InstanceCreateTime: Date
  PreferredBackupWindow: String
  BackupRetentionPeriod: Int
  DBSecurityGroups: [AwsRDSS1h]
  VpcSecurityGroups: [AwsRDSS1j]
  DBParameterGroups: [AwsRDSS2cDBParameterGroups]
  AvailabilityZone: String
  DBSubnetGroup: AwsRDSS2g
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsRDSS2cPendingModifiedValues
  LatestRestorableTime: Date
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  ReadReplicaSourceDBInstanceIdentifier: String
  ReadReplicaDBInstanceIdentifiers: [String]
  ReadReplicaDBClusterIdentifiers: [String]
  LicenseModel: String
  Iops: Int
  OptionGroupMemberships: [AwsRDSS2cOptionGroupMemberships]
  CharacterSetName: String
  SecondaryAvailabilityZone: String
  PubliclyAccessible: Boolean
  StatusInfos: [AwsRDSS2cStatusInfos]
  StorageType: String
  TdeCredentialArn: String
  DbInstancePort: Int
  DBClusterIdentifier: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  DbiResourceId: String
  CACertificateIdentifier: String
  DomainMemberships: [AwsRDSS2cDomainMemberships]
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  EnhancedMonitoringResourceArn: String
  MonitoringRoleArn: String
  PromotionTier: Int
  DBInstanceArn: String
  Timezone: String
  IAMDatabaseAuthenticationEnabled: Boolean
  PerformanceInsightsEnabled: Boolean
  PerformanceInsightsKMSKeyId: String
  PerformanceInsightsRetentionPeriod: Int
  EnabledCloudwatchLogsExports: [String]
  ProcessorFeatures: [AwsRDSS18]
  DeletionProtection: Boolean
  AssociatedRoles: [AwsRDSS2cAssociatedRoles]
  ListenerEndpoint: AwsRDSS2d
  MaxAllocatedStorage: Int
}

type AwsRDSS2cAssociatedRoles {
  RoleArn: String
  FeatureName: String
  Status: String
}

type AwsRDSS2cDBParameterGroups {
  DBParameterGroupName: String
  ParameterApplyStatus: String
}

type AwsRDSS2cDomainMemberships {
  Domain: String
  Status: String
  FQDN: String
  IAMRoleName: String
}

type AwsRDSS2cOptionGroupMemberships {
  OptionGroupName: String
  Status: String
}

type AwsRDSS2cPendingModifiedValues {
  DBInstanceClass: String
  AllocatedStorage: Int
  MasterUserPassword: String
  Port: Int
  BackupRetentionPeriod: Int
  MultiAZ: Boolean
  EngineVersion: String
  LicenseModel: String
  Iops: Int
  DBInstanceIdentifier: String
  StorageType: String
  CACertificateIdentifier: String
  DBSubnetGroupName: String
  PendingCloudwatchLogsExports: AwsRDSS2cPendingModifiedValuesPendingCloudwatchLogsExports
  ProcessorFeatures: [AwsRDSS18]
}

type AwsRDSS2cPendingModifiedValuesPendingCloudwatchLogsExports {
  LogTypesToEnable: [String]
  LogTypesToDisable: [String]
}

type AwsRDSS2cStatusInfos {
  StatusType: String
  Normal: Boolean
  Status: String
  Message: String
}

type AwsRDSS2d {
  Address: String
  Port: Int
  HostedZoneId: String
}

type AwsRDSS2g {
  DBSubnetGroupName: String
  DBSubnetGroupDescription: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsRDSS2gSubnets]
  DBSubnetGroupArn: String
}

type AwsRDSS2gSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsRDSS2j
  SubnetStatus: String
}

type AwsRDSS2j {
  Name: String
}

type AwsRDSS3b {
  GlobalClusterIdentifier: String
  GlobalClusterResourceId: String
  GlobalClusterArn: String
  Status: String
  Engine: String
  EngineVersion: String
  DatabaseName: String
  StorageEncrypted: Boolean
  DeletionProtection: Boolean
  GlobalClusterMembers: [AwsRDSS3bGlobalClusterMembers]
}

type AwsRDSS3bGlobalClusterMembers {
  DBClusterArn: String
  Readers: [String]
  IsWriter: Boolean
}

type AwsRDSS3r {
  DBInstanceArn: String
  DbiResourceId: String
  Region: String
  DBInstanceIdentifier: String
  RestoreWindow: AwsRDSS3rRestoreWindow
  AllocatedStorage: Int
  Status: String
  Port: Int
  AvailabilityZone: String
  VpcId: String
  InstanceCreateTime: Date
  MasterUsername: String
  Engine: String
  EngineVersion: String
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  TdeCredentialArn: String
  Encrypted: Boolean
  StorageType: String
  KmsKeyId: String
  Timezone: String
  IAMDatabaseAuthenticationEnabled: Boolean
}

type AwsRDSS3rRestoreWindow {
  EarliestTime: Date
  LatestTime: Date
}

input AwsRDSS49Input {
  Name: String!
  Values: [String]!
}

type AwsRDSS4q {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ApplyMethod: String
  SupportedEngineModes: [String]
}

input AwsRDSS4qInput {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ApplyMethod: String
  SupportedEngineModes: [String]
}

type AwsRDSS4w {
  DBClusterSnapshotIdentifier: String
  DBClusterSnapshotAttributes: [AwsRDSS4wDBClusterSnapshotAttributes]
}

type AwsRDSS4wDBClusterSnapshotAttributes {
  AttributeName: String
  AttributeValues: [String]
}

type AwsRDSS5a {
  CharacterSetName: String
  CharacterSetDescription: String
}

type AwsRDSS6 {
  CustomerAwsId: String
  CustSubscriptionId: String
  SnsTopicArn: String
  Status: String
  SubscriptionCreationTime: String
  SourceType: String
  SourceIdsList: [String]
  EventCategoriesList: [String]
  Enabled: Boolean
  EventSubscriptionArn: String
}

type AwsRDSS61 {
  DBSnapshotIdentifier: String
  DBSnapshotAttributes: [AwsRDSS61DBSnapshotAttributes]
}

type AwsRDSS61DBSnapshotAttributes {
  AttributeName: String
  AttributeValues: [String]
}

type AwsRDSS6c {
  DBParameterGroupFamily: String
  Marker: String
  Parameters: [AwsRDSS4q]
}

type AwsRDSS7f {
  Name: String
  DefaultValue: String
  AllowedValues: String
}

type AwsRDSS7n {
  ReservedDBInstanceId: String
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  StartTime: Date
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  DBInstanceCount: Int
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  State: String
  RecurringCharges: [AwsRDSS7p]
  ReservedDBInstanceArn: String
}

type AwsRDSS7p {
  RecurringChargeAmount: JSON
  RecurringChargeFrequency: String
}

type AwsRDSS84 {
  From: Int
  To: Int
  Step: Int
}

input AwsRDSS8hInput {
  EnableLogTypes: [String]
  DisableLogTypes: [String]
}

type AwsRDSSb {
  Key: String
  Value: String
}

input AwsRDSSbInput {
  Key: String
  Value: String
}

type AwsRDSSf {
  ResourceIdentifier: String
  PendingMaintenanceActionDetails: [AwsRDSSfPendingMaintenanceActionDetails]
}

type AwsRDSSfPendingMaintenanceActionDetails {
  Action: String
  AutoAppliedAfterDate: Date
  ForcedApplyDate: Date
  OptInStatus: String
  CurrentApplyDate: Date
  Description: String
}

type AwsRDSSl {
  OwnerId: String
  DBSecurityGroupName: String
  DBSecurityGroupDescription: String
  VpcId: String
  EC2SecurityGroups: [AwsRDSSlEC2SecurityGroups]
  IPRanges: [AwsRDSSlIPRanges]
  DBSecurityGroupArn: String
}

type AwsRDSSlEC2SecurityGroups {
  Status: String
  EC2SecurityGroupName: String
  EC2SecurityGroupId: String
  EC2SecurityGroupOwnerId: String
}

type AwsRDSSlIPRanges {
  Status: String
  CIDRIP: String
}

type AwsRDSSs {
  DBClusterIdentifier: String
  BacktrackIdentifier: String
  BacktrackTo: Date
  BacktrackedFrom: Date
  BacktrackRequestCreationTime: Date
  Status: String
}

input AwsRDSStartActivityStreamInput {
  ResourceArn: String!
  Mode: String!
  KmsKeyId: String!
  ApplyImmediately: Boolean
}

type AwsRDSStartActivityStreamOutput {
  KmsKeyId: String
  KinesisStreamName: String
  Status: String
  Mode: String
  ApplyImmediately: Boolean
}

input AwsRDSStartDBClusterInput {
  DBClusterIdentifier: String!
}

type AwsRDSStartDBClusterOutput {
  DBCluster: AwsRDSS1r
}

input AwsRDSStartDBInstanceInput {
  DBInstanceIdentifier: String!
}

type AwsRDSStartDBInstanceOutput {
  DBInstance: AwsRDSS2c
}

input AwsRDSStopActivityStreamInput {
  ResourceArn: String!
  ApplyImmediately: Boolean
}

type AwsRDSStopActivityStreamOutput {
  KmsKeyId: String
  KinesisStreamName: String
  Status: String
}

input AwsRDSStopDBClusterInput {
  DBClusterIdentifier: String!
}

type AwsRDSStopDBClusterOutput {
  DBCluster: AwsRDSS1r
}

input AwsRDSStopDBInstanceInput {
  DBInstanceIdentifier: String!
  DBSnapshotIdentifier: String
}

type AwsRDSStopDBInstanceOutput {
  DBInstance: AwsRDSS2c
}

type AwsRDSSv {
  DBClusterParameterGroupName: String
  DBParameterGroupFamily: String
  Description: String
  DBClusterParameterGroupArn: String
}

type AwsRDSSy {
  AvailabilityZones: [String]
  DBClusterSnapshotIdentifier: String
  DBClusterIdentifier: String
  SnapshotCreateTime: Date
  Engine: String
  AllocatedStorage: Int
  Status: String
  Port: Int
  VpcId: String
  ClusterCreateTime: Date
  MasterUsername: String
  EngineVersion: String
  LicenseModel: String
  SnapshotType: String
  PercentProgress: Int
  StorageEncrypted: Boolean
  KmsKeyId: String
  DBClusterSnapshotArn: String
  SourceDBClusterSnapshotArn: String
  IAMDatabaseAuthenticationEnabled: Boolean
}

"""Amazon Redshift (2012-12-01)"""
type AwsRedshift {
  acceptReservedNodeExchange(input: AwsRedshiftAcceptReservedNodeExchangeInput!, config: AwsConfig): AwsRedshiftAcceptReservedNodeExchangeOutput
  authorizeClusterSecurityGroupIngress(input: AwsRedshiftAuthorizeClusterSecurityGroupIngressInput!, config: AwsConfig): AwsRedshiftAuthorizeClusterSecurityGroupIngressOutput
  authorizeSnapshotAccess(input: AwsRedshiftAuthorizeSnapshotAccessInput!, config: AwsConfig): AwsRedshiftAuthorizeSnapshotAccessOutput
  batchDeleteClusterSnapshots(input: AwsRedshiftBatchDeleteClusterSnapshotsInput!, config: AwsConfig): AwsRedshiftBatchDeleteClusterSnapshotsOutput
  batchModifyClusterSnapshots(input: AwsRedshiftBatchModifyClusterSnapshotsInput!, config: AwsConfig): AwsRedshiftBatchModifyClusterSnapshotsOutput
  cancelResize(input: AwsRedshiftCancelResizeInput!, config: AwsConfig): JSON
  copyClusterSnapshot(input: AwsRedshiftCopyClusterSnapshotInput!, config: AwsConfig): AwsRedshiftCopyClusterSnapshotOutput
  createCluster(input: AwsRedshiftCreateClusterInput!, config: AwsConfig): AwsRedshiftCreateClusterOutput
  createClusterParameterGroup(input: AwsRedshiftCreateClusterParameterGroupInput!, config: AwsConfig): AwsRedshiftCreateClusterParameterGroupOutput
  createClusterSecurityGroup(input: AwsRedshiftCreateClusterSecurityGroupInput!, config: AwsConfig): AwsRedshiftCreateClusterSecurityGroupOutput
  createClusterSnapshot(input: AwsRedshiftCreateClusterSnapshotInput!, config: AwsConfig): AwsRedshiftCreateClusterSnapshotOutput
  createClusterSubnetGroup(input: AwsRedshiftCreateClusterSubnetGroupInput!, config: AwsConfig): AwsRedshiftCreateClusterSubnetGroupOutput
  createEventSubscription(input: AwsRedshiftCreateEventSubscriptionInput!, config: AwsConfig): AwsRedshiftCreateEventSubscriptionOutput
  createHsmClientCertificate(input: AwsRedshiftCreateHsmClientCertificateInput!, config: AwsConfig): AwsRedshiftCreateHsmClientCertificateOutput
  createHsmConfiguration(input: AwsRedshiftCreateHsmConfigurationInput!, config: AwsConfig): AwsRedshiftCreateHsmConfigurationOutput
  createSnapshotCopyGrant(input: AwsRedshiftCreateSnapshotCopyGrantInput!, config: AwsConfig): AwsRedshiftCreateSnapshotCopyGrantOutput
  createSnapshotSchedule(input: AwsRedshiftCreateSnapshotScheduleInput, config: AwsConfig): JSON
  createTags(input: AwsRedshiftCreateTagsInput!, config: AwsConfig): JSON
  deleteCluster(input: AwsRedshiftDeleteClusterInput!, config: AwsConfig): AwsRedshiftDeleteClusterOutput
  deleteClusterParameterGroup(input: AwsRedshiftDeleteClusterParameterGroupInput!, config: AwsConfig): JSON
  deleteClusterSecurityGroup(input: AwsRedshiftDeleteClusterSecurityGroupInput!, config: AwsConfig): JSON
  deleteClusterSnapshot(input: JSON, config: AwsConfig): AwsRedshiftDeleteClusterSnapshotOutput
  deleteClusterSubnetGroup(input: AwsRedshiftDeleteClusterSubnetGroupInput!, config: AwsConfig): JSON
  deleteEventSubscription(input: AwsRedshiftDeleteEventSubscriptionInput!, config: AwsConfig): JSON
  deleteHsmClientCertificate(input: AwsRedshiftDeleteHsmClientCertificateInput!, config: AwsConfig): JSON
  deleteHsmConfiguration(input: AwsRedshiftDeleteHsmConfigurationInput!, config: AwsConfig): JSON
  deleteSnapshotCopyGrant(input: AwsRedshiftDeleteSnapshotCopyGrantInput!, config: AwsConfig): JSON
  deleteSnapshotSchedule(input: AwsRedshiftDeleteSnapshotScheduleInput!, config: AwsConfig): JSON
  deleteTags(input: AwsRedshiftDeleteTagsInput!, config: AwsConfig): JSON
  describeAccountAttributes(input: AwsRedshiftDescribeAccountAttributesInput, config: AwsConfig): AwsRedshiftDescribeAccountAttributesOutput
  describeClusterDbRevisions(input: AwsRedshiftDescribeClusterDbRevisionsInput, config: AwsConfig): AwsRedshiftDescribeClusterDbRevisionsOutput
  describeClusterParameterGroups(input: AwsRedshiftDescribeClusterParameterGroupsInput, config: AwsConfig): AwsRedshiftDescribeClusterParameterGroupsOutput
  describeClusterParameters(input: AwsRedshiftDescribeClusterParametersInput!, config: AwsConfig): AwsRedshiftDescribeClusterParametersOutput
  describeClusterSecurityGroups(input: AwsRedshiftDescribeClusterSecurityGroupsInput, config: AwsConfig): AwsRedshiftDescribeClusterSecurityGroupsOutput
  describeClusterSnapshots(input: AwsRedshiftDescribeClusterSnapshotsInput, config: AwsConfig): AwsRedshiftDescribeClusterSnapshotsOutput
  describeClusterSubnetGroups(input: AwsRedshiftDescribeClusterSubnetGroupsInput, config: AwsConfig): AwsRedshiftDescribeClusterSubnetGroupsOutput
  describeClusterTracks(input: AwsRedshiftDescribeClusterTracksInput, config: AwsConfig): AwsRedshiftDescribeClusterTracksOutput
  describeClusterVersions(input: AwsRedshiftDescribeClusterVersionsInput, config: AwsConfig): AwsRedshiftDescribeClusterVersionsOutput
  describeClusters(input: AwsRedshiftDescribeClustersInput, config: AwsConfig): AwsRedshiftDescribeClustersOutput
  describeDefaultClusterParameters(input: AwsRedshiftDescribeDefaultClusterParametersInput!, config: AwsConfig): AwsRedshiftDescribeDefaultClusterParametersOutput
  describeEventCategories(input: AwsRedshiftDescribeEventCategoriesInput, config: AwsConfig): AwsRedshiftDescribeEventCategoriesOutput
  describeEventSubscriptions(input: AwsRedshiftDescribeEventSubscriptionsInput, config: AwsConfig): AwsRedshiftDescribeEventSubscriptionsOutput
  describeEvents(input: AwsRedshiftDescribeEventsInput, config: AwsConfig): AwsRedshiftDescribeEventsOutput
  describeHsmClientCertificates(input: AwsRedshiftDescribeHsmClientCertificatesInput, config: AwsConfig): AwsRedshiftDescribeHsmClientCertificatesOutput
  describeHsmConfigurations(input: AwsRedshiftDescribeHsmConfigurationsInput, config: AwsConfig): AwsRedshiftDescribeHsmConfigurationsOutput
  describeLoggingStatus(input: AwsRedshiftDescribeLoggingStatusInput!, config: AwsConfig): JSON
  describeOrderableClusterOptions(input: AwsRedshiftDescribeOrderableClusterOptionsInput, config: AwsConfig): AwsRedshiftDescribeOrderableClusterOptionsOutput
  describeReservedNodeOfferings(input: AwsRedshiftDescribeReservedNodeOfferingsInput, config: AwsConfig): AwsRedshiftDescribeReservedNodeOfferingsOutput
  describeReservedNodes(input: AwsRedshiftDescribeReservedNodesInput, config: AwsConfig): AwsRedshiftDescribeReservedNodesOutput
  describeResize(input: AwsRedshiftDescribeResizeInput!, config: AwsConfig): JSON
  describeSnapshotCopyGrants(input: AwsRedshiftDescribeSnapshotCopyGrantsInput, config: AwsConfig): AwsRedshiftDescribeSnapshotCopyGrantsOutput
  describeSnapshotSchedules(input: AwsRedshiftDescribeSnapshotSchedulesInput, config: AwsConfig): AwsRedshiftDescribeSnapshotSchedulesOutput
  describeStorage(config: AwsConfig): AwsRedshiftDescribeStorageOutput
  describeTableRestoreStatus(input: AwsRedshiftDescribeTableRestoreStatusInput, config: AwsConfig): AwsRedshiftDescribeTableRestoreStatusOutput
  describeTags(input: AwsRedshiftDescribeTagsInput, config: AwsConfig): AwsRedshiftDescribeTagsOutput
  disableLogging(input: AwsRedshiftDisableLoggingInput!, config: AwsConfig): JSON
  disableSnapshotCopy(input: AwsRedshiftDisableSnapshotCopyInput!, config: AwsConfig): AwsRedshiftDisableSnapshotCopyOutput
  enableLogging(input: AwsRedshiftEnableLoggingInput!, config: AwsConfig): JSON
  enableSnapshotCopy(input: AwsRedshiftEnableSnapshotCopyInput!, config: AwsConfig): AwsRedshiftEnableSnapshotCopyOutput
  getClusterCredentials(input: AwsRedshiftGetClusterCredentialsInput!, config: AwsConfig): AwsRedshiftGetClusterCredentialsOutput
  getReservedNodeExchangeOfferings(input: AwsRedshiftGetReservedNodeExchangeOfferingsInput!, config: AwsConfig): AwsRedshiftGetReservedNodeExchangeOfferingsOutput
  modifyCluster(input: AwsRedshiftModifyClusterInput!, config: AwsConfig): AwsRedshiftModifyClusterOutput
  modifyClusterDbRevision(input: AwsRedshiftModifyClusterDbRevisionInput!, config: AwsConfig): AwsRedshiftModifyClusterDbRevisionOutput
  modifyClusterIamRoles(input: AwsRedshiftModifyClusterIamRolesInput!, config: AwsConfig): AwsRedshiftModifyClusterIamRolesOutput
  modifyClusterMaintenance(input: AwsRedshiftModifyClusterMaintenanceInput!, config: AwsConfig): AwsRedshiftModifyClusterMaintenanceOutput
  modifyClusterParameterGroup(input: AwsRedshiftModifyClusterParameterGroupInput!, config: AwsConfig): JSON
  modifyClusterSnapshot(input: AwsRedshiftModifyClusterSnapshotInput!, config: AwsConfig): AwsRedshiftModifyClusterSnapshotOutput
  modifyClusterSnapshotSchedule(input: AwsRedshiftModifyClusterSnapshotScheduleInput!, config: AwsConfig): JSON
  modifyClusterSubnetGroup(input: AwsRedshiftModifyClusterSubnetGroupInput!, config: AwsConfig): AwsRedshiftModifyClusterSubnetGroupOutput
  modifyEventSubscription(input: AwsRedshiftModifyEventSubscriptionInput!, config: AwsConfig): AwsRedshiftModifyEventSubscriptionOutput
  modifySnapshotCopyRetentionPeriod(input: AwsRedshiftModifySnapshotCopyRetentionPeriodInput!, config: AwsConfig): AwsRedshiftModifySnapshotCopyRetentionPeriodOutput
  modifySnapshotSchedule(input: AwsRedshiftModifySnapshotScheduleInput!, config: AwsConfig): JSON
  purchaseReservedNodeOffering(input: AwsRedshiftPurchaseReservedNodeOfferingInput!, config: AwsConfig): AwsRedshiftPurchaseReservedNodeOfferingOutput
  rebootCluster(input: AwsRedshiftRebootClusterInput!, config: AwsConfig): AwsRedshiftRebootClusterOutput
  resetClusterParameterGroup(input: AwsRedshiftResetClusterParameterGroupInput!, config: AwsConfig): JSON
  resizeCluster(input: AwsRedshiftResizeClusterInput!, config: AwsConfig): AwsRedshiftResizeClusterOutput
  restoreFromClusterSnapshot(input: AwsRedshiftRestoreFromClusterSnapshotInput!, config: AwsConfig): AwsRedshiftRestoreFromClusterSnapshotOutput
  restoreTableFromClusterSnapshot(input: AwsRedshiftRestoreTableFromClusterSnapshotInput!, config: AwsConfig): AwsRedshiftRestoreTableFromClusterSnapshotOutput
  revokeClusterSecurityGroupIngress(input: AwsRedshiftRevokeClusterSecurityGroupIngressInput!, config: AwsConfig): AwsRedshiftRevokeClusterSecurityGroupIngressOutput
  revokeSnapshotAccess(input: AwsRedshiftRevokeSnapshotAccessInput!, config: AwsConfig): AwsRedshiftRevokeSnapshotAccessOutput
  rotateEncryptionKey(input: AwsRedshiftRotateEncryptionKeyInput!, config: AwsConfig): AwsRedshiftRotateEncryptionKeyOutput
}

input AwsRedshiftAcceptReservedNodeExchangeInput {
  ReservedNodeId: String!
  TargetReservedNodeOfferingId: String!
}

type AwsRedshiftAcceptReservedNodeExchangeOutput {
  ExchangedReservedNode: AwsRedshiftS4
}

input AwsRedshiftAuthorizeClusterSecurityGroupIngressInput {
  ClusterSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
}

type AwsRedshiftAuthorizeClusterSecurityGroupIngressOutput {
  ClusterSecurityGroup: AwsRedshiftSd
}

input AwsRedshiftAuthorizeSnapshotAccessInput {
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
  AccountWithRestoreAccess: String!
}

type AwsRedshiftAuthorizeSnapshotAccessOutput {
  Snapshot: AwsRedshiftSm
}

input AwsRedshiftBatchDeleteClusterSnapshotsInput {
  Identifiers: [AwsRedshiftSvInput]!
}

type AwsRedshiftBatchDeleteClusterSnapshotsOutput {
  Resources: [String]
  Errors: [AwsRedshiftSz]
}

input AwsRedshiftBatchModifyClusterSnapshotsInput {
  SnapshotIdentifierList: [String]!
  ManualSnapshotRetentionPeriod: Int
  Force: Boolean
}

type AwsRedshiftBatchModifyClusterSnapshotsOutput {
  Resources: [String]
  Errors: [AwsRedshiftSz]
}

input AwsRedshiftCancelResizeInput {
  ClusterIdentifier: String!
}

input AwsRedshiftCopyClusterSnapshotInput {
  SourceSnapshotIdentifier: String!
  SourceSnapshotClusterIdentifier: String
  TargetSnapshotIdentifier: String!
  ManualSnapshotRetentionPeriod: Int
}

type AwsRedshiftCopyClusterSnapshotOutput {
  Snapshot: AwsRedshiftSm
}

input AwsRedshiftCreateClusterInput {
  DBName: String
  ClusterIdentifier: String!
  ClusterType: String
  NodeType: String!
  MasterUsername: String!
  MasterUserPassword: String!
  ClusterSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  ClusterSubnetGroupName: String
  AvailabilityZone: String
  PreferredMaintenanceWindow: String
  ClusterParameterGroupName: String
  AutomatedSnapshotRetentionPeriod: Int
  ManualSnapshotRetentionPeriod: Int
  Port: Int
  ClusterVersion: String
  AllowVersionUpgrade: Boolean
  NumberOfNodes: Int
  PubliclyAccessible: Boolean
  Encrypted: Boolean
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  ElasticIp: String
  Tags: [AwsRedshiftShInput]
  KmsKeyId: String
  EnhancedVpcRouting: Boolean
  AdditionalInfo: String
  IamRoles: [String]
  MaintenanceTrackName: String
  SnapshotScheduleIdentifier: String
}

type AwsRedshiftCreateClusterOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftCreateClusterParameterGroupInput {
  ParameterGroupName: String!
  ParameterGroupFamily: String!
  Description: String!
  Tags: [AwsRedshiftShInput]
}

type AwsRedshiftCreateClusterParameterGroupOutput {
  ClusterParameterGroup: AwsRedshiftS29
}

input AwsRedshiftCreateClusterSecurityGroupInput {
  ClusterSecurityGroupName: String!
  Description: String!
  Tags: [AwsRedshiftShInput]
}

type AwsRedshiftCreateClusterSecurityGroupOutput {
  ClusterSecurityGroup: AwsRedshiftSd
}

input AwsRedshiftCreateClusterSnapshotInput {
  SnapshotIdentifier: String!
  ClusterIdentifier: String!
  ManualSnapshotRetentionPeriod: Int
  Tags: [AwsRedshiftShInput]
}

type AwsRedshiftCreateClusterSnapshotOutput {
  Snapshot: AwsRedshiftSm
}

input AwsRedshiftCreateClusterSubnetGroupInput {
  ClusterSubnetGroupName: String!
  Description: String!
  SubnetIds: [String]!
  Tags: [AwsRedshiftShInput]
}

type AwsRedshiftCreateClusterSubnetGroupOutput {
  ClusterSubnetGroup: AwsRedshiftS2h
}

input AwsRedshiftCreateEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String!
  SourceType: String
  SourceIds: [String]
  EventCategories: [String]
  Severity: String
  Enabled: Boolean
  Tags: [AwsRedshiftShInput]
}

type AwsRedshiftCreateEventSubscriptionOutput {
  EventSubscription: AwsRedshiftS2r
}

input AwsRedshiftCreateHsmClientCertificateInput {
  HsmClientCertificateIdentifier: String!
  Tags: [AwsRedshiftShInput]
}

type AwsRedshiftCreateHsmClientCertificateOutput {
  HsmClientCertificate: AwsRedshiftS2u
}

input AwsRedshiftCreateHsmConfigurationInput {
  HsmConfigurationIdentifier: String!
  Description: String!
  HsmIpAddress: String!
  HsmPartitionName: String!
  HsmPartitionPassword: String!
  HsmServerPublicCertificate: String!
  Tags: [AwsRedshiftShInput]
}

type AwsRedshiftCreateHsmConfigurationOutput {
  HsmConfiguration: AwsRedshiftS2x
}

input AwsRedshiftCreateSnapshotCopyGrantInput {
  SnapshotCopyGrantName: String!
  KmsKeyId: String
  Tags: [AwsRedshiftShInput]
}

type AwsRedshiftCreateSnapshotCopyGrantOutput {
  SnapshotCopyGrant: AwsRedshiftS30
}

input AwsRedshiftCreateSnapshotScheduleInput {
  ScheduleDefinitions: [String]
  ScheduleIdentifier: String
  ScheduleDescription: String
  Tags: [AwsRedshiftShInput]
  DryRun: Boolean
  NextInvocations: Int
}

input AwsRedshiftCreateTagsInput {
  ResourceName: String!
  Tags: [AwsRedshiftShInput]!
}

input AwsRedshiftDeleteClusterInput {
  ClusterIdentifier: String!
  SkipFinalClusterSnapshot: Boolean
  FinalClusterSnapshotIdentifier: String
  FinalClusterSnapshotRetentionPeriod: Int
}

type AwsRedshiftDeleteClusterOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftDeleteClusterParameterGroupInput {
  ParameterGroupName: String!
}

input AwsRedshiftDeleteClusterSecurityGroupInput {
  ClusterSecurityGroupName: String!
}

type AwsRedshiftDeleteClusterSnapshotOutput {
  Snapshot: AwsRedshiftSm
}

input AwsRedshiftDeleteClusterSubnetGroupInput {
  ClusterSubnetGroupName: String!
}

input AwsRedshiftDeleteEventSubscriptionInput {
  SubscriptionName: String!
}

input AwsRedshiftDeleteHsmClientCertificateInput {
  HsmClientCertificateIdentifier: String!
}

input AwsRedshiftDeleteHsmConfigurationInput {
  HsmConfigurationIdentifier: String!
}

input AwsRedshiftDeleteSnapshotCopyGrantInput {
  SnapshotCopyGrantName: String!
}

input AwsRedshiftDeleteSnapshotScheduleInput {
  ScheduleIdentifier: String!
}

input AwsRedshiftDeleteTagsInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsRedshiftDescribeAccountAttributesInput {
  AttributeNames: [String]
}

type AwsRedshiftDescribeAccountAttributesOutput {
  AccountAttributes: [AwsRedshiftDescribeAccountAttributesOutputAccountAttributes]
}

type AwsRedshiftDescribeAccountAttributesOutputAccountAttributes {
  AttributeName: String
  AttributeValues: [AwsRedshiftDescribeAccountAttributesOutputAccountAttributesAttributeValues]
}

type AwsRedshiftDescribeAccountAttributesOutputAccountAttributesAttributeValues {
  AttributeValue: String
}

input AwsRedshiftDescribeClusterDbRevisionsInput {
  ClusterIdentifier: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeClusterDbRevisionsOutput {
  Marker: String
  ClusterDbRevisions: [AwsRedshiftDescribeClusterDbRevisionsOutputClusterDbRevisions]
}

type AwsRedshiftDescribeClusterDbRevisionsOutputClusterDbRevisions {
  ClusterIdentifier: String
  CurrentDatabaseRevision: String
  DatabaseRevisionReleaseDate: Date
  RevisionTargets: [AwsRedshiftDescribeClusterDbRevisionsOutputClusterDbRevisionsRevisionTargets]
}

type AwsRedshiftDescribeClusterDbRevisionsOutputClusterDbRevisionsRevisionTargets {
  DatabaseRevision: String
  Description: String
  DatabaseRevisionReleaseDate: Date
}

input AwsRedshiftDescribeClusterParameterGroupsInput {
  ParameterGroupName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterParameterGroupsOutput {
  Marker: String
  ParameterGroups: [AwsRedshiftS29]
}

input AwsRedshiftDescribeClusterParametersInput {
  ParameterGroupName: String!
  Source: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeClusterParametersOutput {
  Parameters: [AwsRedshiftS44]
  Marker: String
}

input AwsRedshiftDescribeClusterSecurityGroupsInput {
  ClusterSecurityGroupName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterSecurityGroupsOutput {
  Marker: String
  ClusterSecurityGroups: [AwsRedshiftSd]
}

input AwsRedshiftDescribeClustersInput {
  ClusterIdentifier: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

input AwsRedshiftDescribeClusterSnapshotsInput {
  ClusterIdentifier: String
  SnapshotIdentifier: String
  SnapshotType: String
  StartTime: Date
  EndTime: Date
  MaxRecords: Int
  Marker: String
  OwnerAccount: String
  TagKeys: [String]
  TagValues: [String]
  ClusterExists: Boolean
  SortingEntities: [AwsRedshiftDescribeClusterSnapshotsSortingEntitiesInput]
}

type AwsRedshiftDescribeClusterSnapshotsOutput {
  Marker: String
  Snapshots: [AwsRedshiftSm]
}

input AwsRedshiftDescribeClusterSnapshotsSortingEntitiesInput {
  Attribute: String!
  SortOrder: String
}

type AwsRedshiftDescribeClustersOutput {
  Marker: String
  Clusters: [AwsRedshiftS1i]
}

input AwsRedshiftDescribeClusterSubnetGroupsInput {
  ClusterSubnetGroupName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterSubnetGroupsOutput {
  Marker: String
  ClusterSubnetGroups: [AwsRedshiftS2h]
}

input AwsRedshiftDescribeClusterTracksInput {
  MaintenanceTrackName: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeClusterTracksOutput {
  MaintenanceTracks: [AwsRedshiftDescribeClusterTracksOutputMaintenanceTracks]
  Marker: String
}

type AwsRedshiftDescribeClusterTracksOutputMaintenanceTracks {
  MaintenanceTrackName: String
  DatabaseVersion: String
  UpdateTargets: [AwsRedshiftDescribeClusterTracksOutputMaintenanceTracksUpdateTargets]
}

type AwsRedshiftDescribeClusterTracksOutputMaintenanceTracksUpdateTargets {
  MaintenanceTrackName: String
  DatabaseVersion: String
  SupportedOperations: [AwsRedshiftDescribeClusterTracksOutputMaintenanceTracksUpdateTargetsSupportedOperations]
}

type AwsRedshiftDescribeClusterTracksOutputMaintenanceTracksUpdateTargetsSupportedOperations {
  OperationName: String
}

input AwsRedshiftDescribeClusterVersionsInput {
  ClusterVersion: String
  ClusterParameterGroupFamily: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeClusterVersionsOutput {
  Marker: String
  ClusterVersions: [AwsRedshiftDescribeClusterVersionsOutputClusterVersions]
}

type AwsRedshiftDescribeClusterVersionsOutputClusterVersions {
  ClusterVersion: String
  ClusterParameterGroupFamily: String
  Description: String
}

input AwsRedshiftDescribeDefaultClusterParametersInput {
  ParameterGroupFamily: String!
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeDefaultClusterParametersOutput {
  DefaultClusterParameters: AwsRedshiftDescribeDefaultClusterParametersOutputDefaultClusterParameters
}

type AwsRedshiftDescribeDefaultClusterParametersOutputDefaultClusterParameters {
  ParameterGroupFamily: String
  Marker: String
  Parameters: [AwsRedshiftS44]
}

input AwsRedshiftDescribeEventCategoriesInput {
  SourceType: String
}

type AwsRedshiftDescribeEventCategoriesOutput {
  EventCategoriesMapList: [AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapList]
}

type AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapList {
  SourceType: String
  Events: [AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapListEvents]
}

type AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapListEvents {
  EventId: String
  EventCategories: [String]
  EventDescription: String
  Severity: String
}

input AwsRedshiftDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeEventsOutput {
  Marker: String
  Events: [AwsRedshiftDescribeEventsOutputEvents]
}

type AwsRedshiftDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Severity: String
  Date: Date
  EventId: String
}

input AwsRedshiftDescribeEventSubscriptionsInput {
  SubscriptionName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeEventSubscriptionsOutput {
  Marker: String
  EventSubscriptionsList: [AwsRedshiftS2r]
}

input AwsRedshiftDescribeHsmClientCertificatesInput {
  HsmClientCertificateIdentifier: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeHsmClientCertificatesOutput {
  Marker: String
  HsmClientCertificates: [AwsRedshiftS2u]
}

input AwsRedshiftDescribeHsmConfigurationsInput {
  HsmConfigurationIdentifier: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeHsmConfigurationsOutput {
  Marker: String
  HsmConfigurations: [AwsRedshiftS2x]
}

input AwsRedshiftDescribeLoggingStatusInput {
  ClusterIdentifier: String!
}

input AwsRedshiftDescribeOrderableClusterOptionsInput {
  ClusterVersion: String
  NodeType: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeOrderableClusterOptionsOutput {
  OrderableClusterOptions: [AwsRedshiftDescribeOrderableClusterOptionsOutputOrderableClusterOptions]
  Marker: String
}

type AwsRedshiftDescribeOrderableClusterOptionsOutputOrderableClusterOptions {
  ClusterVersion: String
  ClusterType: String
  NodeType: String
  AvailabilityZones: [AwsRedshiftS2k]
}

input AwsRedshiftDescribeReservedNodeOfferingsInput {
  ReservedNodeOfferingId: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeReservedNodeOfferingsOutput {
  Marker: String
  ReservedNodeOfferings: [AwsRedshiftS5v]
}

input AwsRedshiftDescribeReservedNodesInput {
  ReservedNodeId: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeReservedNodesOutput {
  Marker: String
  ReservedNodes: [AwsRedshiftS4]
}

input AwsRedshiftDescribeResizeInput {
  ClusterIdentifier: String!
}

input AwsRedshiftDescribeSnapshotCopyGrantsInput {
  SnapshotCopyGrantName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeSnapshotCopyGrantsOutput {
  Marker: String
  SnapshotCopyGrants: [AwsRedshiftS30]
}

input AwsRedshiftDescribeSnapshotSchedulesInput {
  ClusterIdentifier: String
  ScheduleIdentifier: String
  TagKeys: [String]
  TagValues: [String]
  Marker: String
  MaxRecords: Int
}

type AwsRedshiftDescribeSnapshotSchedulesOutput {
  SnapshotSchedules: [AwsRedshiftS33]
  Marker: String
}

type AwsRedshiftDescribeStorageOutput {
  TotalBackupSizeInMegaBytes: JSON
  TotalProvisionedStorageInMegaBytes: JSON
}

input AwsRedshiftDescribeTableRestoreStatusInput {
  ClusterIdentifier: String
  TableRestoreRequestId: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeTableRestoreStatusOutput {
  TableRestoreStatusDetails: [AwsRedshiftS6b]
  Marker: String
}

input AwsRedshiftDescribeTagsInput {
  ResourceName: String
  ResourceType: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeTagsOutput {
  TaggedResources: [AwsRedshiftDescribeTagsOutputTaggedResources]
  Marker: String
}

type AwsRedshiftDescribeTagsOutputTaggedResources {
  Tag: AwsRedshiftSh
  ResourceName: String
  ResourceType: String
}

input AwsRedshiftDisableLoggingInput {
  ClusterIdentifier: String!
}

input AwsRedshiftDisableSnapshotCopyInput {
  ClusterIdentifier: String!
}

type AwsRedshiftDisableSnapshotCopyOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftEnableLoggingInput {
  ClusterIdentifier: String!
  BucketName: String!
  S3KeyPrefix: String
}

input AwsRedshiftEnableSnapshotCopyInput {
  ClusterIdentifier: String!
  DestinationRegion: String!
  RetentionPeriod: Int
  SnapshotCopyGrantName: String
  ManualSnapshotRetentionPeriod: Int
}

type AwsRedshiftEnableSnapshotCopyOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftGetClusterCredentialsInput {
  DbUser: String!
  DbName: String
  ClusterIdentifier: String!
  DurationSeconds: Int
  AutoCreate: Boolean
  DbGroups: [String]
}

type AwsRedshiftGetClusterCredentialsOutput {
  DbUser: String
  DbPassword: String
  Expiration: Date
}

input AwsRedshiftGetReservedNodeExchangeOfferingsInput {
  ReservedNodeId: String!
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftGetReservedNodeExchangeOfferingsOutput {
  Marker: String
  ReservedNodeOfferings: [AwsRedshiftS5v]
}

input AwsRedshiftModifyClusterDbRevisionInput {
  ClusterIdentifier: String!
  RevisionTarget: String!
}

type AwsRedshiftModifyClusterDbRevisionOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftModifyClusterIamRolesInput {
  ClusterIdentifier: String!
  AddIamRoles: [String]
  RemoveIamRoles: [String]
}

type AwsRedshiftModifyClusterIamRolesOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftModifyClusterInput {
  ClusterIdentifier: String!
  ClusterType: String
  NodeType: String
  NumberOfNodes: Int
  ClusterSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  MasterUserPassword: String
  ClusterParameterGroupName: String
  AutomatedSnapshotRetentionPeriod: Int
  ManualSnapshotRetentionPeriod: Int
  PreferredMaintenanceWindow: String
  ClusterVersion: String
  AllowVersionUpgrade: Boolean
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  NewClusterIdentifier: String
  PubliclyAccessible: Boolean
  ElasticIp: String
  EnhancedVpcRouting: Boolean
  MaintenanceTrackName: String
  Encrypted: Boolean
  KmsKeyId: String
}

input AwsRedshiftModifyClusterMaintenanceInput {
  ClusterIdentifier: String!
  DeferMaintenance: Boolean
  DeferMaintenanceIdentifier: String
  DeferMaintenanceStartTime: Date
  DeferMaintenanceEndTime: Date
  DeferMaintenanceDuration: Int
}

type AwsRedshiftModifyClusterMaintenanceOutput {
  Cluster: AwsRedshiftS1i
}

type AwsRedshiftModifyClusterOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftModifyClusterParameterGroupInput {
  ParameterGroupName: String!
  Parameters: [AwsRedshiftS44Input]!
}

input AwsRedshiftModifyClusterSnapshotInput {
  SnapshotIdentifier: String!
  ManualSnapshotRetentionPeriod: Int
  Force: Boolean
}

type AwsRedshiftModifyClusterSnapshotOutput {
  Snapshot: AwsRedshiftSm
}

input AwsRedshiftModifyClusterSnapshotScheduleInput {
  ClusterIdentifier: String!
  ScheduleIdentifier: String
  DisassociateSchedule: Boolean
}

input AwsRedshiftModifyClusterSubnetGroupInput {
  ClusterSubnetGroupName: String!
  Description: String
  SubnetIds: [String]!
}

type AwsRedshiftModifyClusterSubnetGroupOutput {
  ClusterSubnetGroup: AwsRedshiftS2h
}

input AwsRedshiftModifyEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String
  SourceType: String
  SourceIds: [String]
  EventCategories: [String]
  Severity: String
  Enabled: Boolean
}

type AwsRedshiftModifyEventSubscriptionOutput {
  EventSubscription: AwsRedshiftS2r
}

input AwsRedshiftModifySnapshotCopyRetentionPeriodInput {
  ClusterIdentifier: String!
  RetentionPeriod: Int!
  Manual: Boolean
}

type AwsRedshiftModifySnapshotCopyRetentionPeriodOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftModifySnapshotScheduleInput {
  ScheduleIdentifier: String!
  ScheduleDefinitions: [String]!
}

input AwsRedshiftPurchaseReservedNodeOfferingInput {
  ReservedNodeOfferingId: String!
  NodeCount: Int
}

type AwsRedshiftPurchaseReservedNodeOfferingOutput {
  ReservedNode: AwsRedshiftS4
}

input AwsRedshiftRebootClusterInput {
  ClusterIdentifier: String!
}

type AwsRedshiftRebootClusterOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftResetClusterParameterGroupInput {
  ParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsRedshiftS44Input]
}

input AwsRedshiftResizeClusterInput {
  ClusterIdentifier: String!
  ClusterType: String
  NodeType: String
  NumberOfNodes: Int!
  Classic: Boolean
}

type AwsRedshiftResizeClusterOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftRestoreFromClusterSnapshotInput {
  ClusterIdentifier: String!
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
  Port: Int
  AvailabilityZone: String
  AllowVersionUpgrade: Boolean
  ClusterSubnetGroupName: String
  PubliclyAccessible: Boolean
  OwnerAccount: String
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  ElasticIp: String
  ClusterParameterGroupName: String
  ClusterSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  AutomatedSnapshotRetentionPeriod: Int
  ManualSnapshotRetentionPeriod: Int
  KmsKeyId: String
  NodeType: String
  EnhancedVpcRouting: Boolean
  AdditionalInfo: String
  IamRoles: [String]
  MaintenanceTrackName: String
  SnapshotScheduleIdentifier: String
}

type AwsRedshiftRestoreFromClusterSnapshotOutput {
  Cluster: AwsRedshiftS1i
}

input AwsRedshiftRestoreTableFromClusterSnapshotInput {
  ClusterIdentifier: String!
  SnapshotIdentifier: String!
  SourceDatabaseName: String!
  SourceSchemaName: String
  SourceTableName: String!
  TargetDatabaseName: String
  TargetSchemaName: String
  NewTableName: String!
}

type AwsRedshiftRestoreTableFromClusterSnapshotOutput {
  TableRestoreStatus: AwsRedshiftS6b
}

input AwsRedshiftRevokeClusterSecurityGroupIngressInput {
  ClusterSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
}

type AwsRedshiftRevokeClusterSecurityGroupIngressOutput {
  ClusterSecurityGroup: AwsRedshiftSd
}

input AwsRedshiftRevokeSnapshotAccessInput {
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
  AccountWithRestoreAccess: String!
}

type AwsRedshiftRevokeSnapshotAccessOutput {
  Snapshot: AwsRedshiftSm
}

input AwsRedshiftRotateEncryptionKeyInput {
  ClusterIdentifier: String!
}

type AwsRedshiftRotateEncryptionKeyOutput {
  Cluster: AwsRedshiftS1i
}

type AwsRedshiftS1i {
  ClusterIdentifier: String
  NodeType: String
  ClusterStatus: String
  ClusterAvailabilityStatus: String
  ModifyStatus: String
  MasterUsername: String
  DBName: String
  Endpoint: AwsRedshiftS1iEndpoint
  ClusterCreateTime: Date
  AutomatedSnapshotRetentionPeriod: Int
  ManualSnapshotRetentionPeriod: Int
  ClusterSecurityGroups: [AwsRedshiftS1iClusterSecurityGroups]
  VpcSecurityGroups: [AwsRedshiftS1iVpcSecurityGroups]
  ClusterParameterGroups: [AwsRedshiftS1iClusterParameterGroups]
  ClusterSubnetGroupName: String
  VpcId: String
  AvailabilityZone: String
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsRedshiftS1iPendingModifiedValues
  ClusterVersion: String
  AllowVersionUpgrade: Boolean
  NumberOfNodes: Int
  PubliclyAccessible: Boolean
  Encrypted: Boolean
  RestoreStatus: AwsRedshiftS1iRestoreStatus
  DataTransferProgress: AwsRedshiftS1iDataTransferProgress
  HsmStatus: AwsRedshiftS1iHsmStatus
  ClusterSnapshotCopyStatus: AwsRedshiftS1iClusterSnapshotCopyStatus
  ClusterPublicKey: String
  ClusterNodes: [AwsRedshiftS1iClusterNodes]
  ElasticIpStatus: AwsRedshiftS1iElasticIpStatus
  ClusterRevisionNumber: String
  Tags: [AwsRedshiftSh]
  KmsKeyId: String
  EnhancedVpcRouting: Boolean
  IamRoles: [AwsRedshiftS1iIamRoles]
  PendingActions: [String]
  MaintenanceTrackName: String
  ElasticResizeNumberOfNodeOptions: String
  DeferredMaintenanceWindows: [AwsRedshiftS1iDeferredMaintenanceWindows]
  SnapshotScheduleIdentifier: String
  SnapshotScheduleState: String
  ResizeInfo: AwsRedshiftS1iResizeInfo
}

type AwsRedshiftS1iClusterNodes {
  NodeRole: String
  PrivateIPAddress: String
  PublicIPAddress: String
}

type AwsRedshiftS1iClusterParameterGroups {
  ParameterGroupName: String
  ParameterApplyStatus: String
  ClusterParameterStatusList: [AwsRedshiftS1iClusterParameterGroupsClusterParameterStatusList]
}

type AwsRedshiftS1iClusterParameterGroupsClusterParameterStatusList {
  ParameterName: String
  ParameterApplyStatus: String
  ParameterApplyErrorDescription: String
}

type AwsRedshiftS1iClusterSecurityGroups {
  ClusterSecurityGroupName: String
  Status: String
}

type AwsRedshiftS1iClusterSnapshotCopyStatus {
  DestinationRegion: String
  RetentionPeriod: JSON
  ManualSnapshotRetentionPeriod: Int
  SnapshotCopyGrantName: String
}

type AwsRedshiftS1iDataTransferProgress {
  Status: String
  CurrentRateInMegaBytesPerSecond: JSON
  TotalDataInMegaBytes: JSON
  DataTransferredInMegaBytes: JSON
  EstimatedTimeToCompletionInSeconds: JSON
  ElapsedTimeInSeconds: JSON
}

type AwsRedshiftS1iDeferredMaintenanceWindows {
  DeferMaintenanceIdentifier: String
  DeferMaintenanceStartTime: Date
  DeferMaintenanceEndTime: Date
}

type AwsRedshiftS1iElasticIpStatus {
  ElasticIp: String
  Status: String
}

type AwsRedshiftS1iEndpoint {
  Address: String
  Port: Int
}

type AwsRedshiftS1iHsmStatus {
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  Status: String
}

type AwsRedshiftS1iIamRoles {
  IamRoleArn: String
  ApplyStatus: String
}

type AwsRedshiftS1iPendingModifiedValues {
  MasterUserPassword: String
  NodeType: String
  NumberOfNodes: Int
  ClusterType: String
  ClusterVersion: String
  AutomatedSnapshotRetentionPeriod: Int
  ClusterIdentifier: String
  PubliclyAccessible: Boolean
  EnhancedVpcRouting: Boolean
  MaintenanceTrackName: String
  EncryptionType: String
}

type AwsRedshiftS1iResizeInfo {
  ResizeType: String
  AllowCancelResize: Boolean
}

type AwsRedshiftS1iRestoreStatus {
  Status: String
  CurrentRestoreRateInMegaBytesPerSecond: JSON
  SnapshotSizeInMegaBytes: JSON
  ProgressInMegaBytes: JSON
  ElapsedTimeInSeconds: JSON
  EstimatedTimeToCompletionInSeconds: JSON
}

type AwsRedshiftS1iVpcSecurityGroups {
  VpcSecurityGroupId: String
  Status: String
}

type AwsRedshiftS29 {
  ParameterGroupName: String
  ParameterGroupFamily: String
  Description: String
  Tags: [AwsRedshiftSh]
}

type AwsRedshiftS2h {
  ClusterSubnetGroupName: String
  Description: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsRedshiftS2hSubnets]
  Tags: [AwsRedshiftSh]
}

type AwsRedshiftS2hSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsRedshiftS2k
  SubnetStatus: String
}

type AwsRedshiftS2k {
  Name: String
  SupportedPlatforms: [AwsRedshiftS2kSupportedPlatforms]
}

type AwsRedshiftS2kSupportedPlatforms {
  Name: String
}

type AwsRedshiftS2r {
  CustomerAwsId: String
  CustSubscriptionId: String
  SnsTopicArn: String
  Status: String
  SubscriptionCreationTime: Date
  SourceType: String
  SourceIdsList: [String]
  EventCategoriesList: [String]
  Severity: String
  Enabled: Boolean
  Tags: [AwsRedshiftSh]
}

type AwsRedshiftS2u {
  HsmClientCertificateIdentifier: String
  HsmClientCertificatePublicKey: String
  Tags: [AwsRedshiftSh]
}

type AwsRedshiftS2x {
  HsmConfigurationIdentifier: String
  Description: String
  HsmIpAddress: String
  HsmPartitionName: String
  Tags: [AwsRedshiftSh]
}

type AwsRedshiftS30 {
  SnapshotCopyGrantName: String
  KmsKeyId: String
  Tags: [AwsRedshiftSh]
}

type AwsRedshiftS33 {
  ScheduleDefinitions: [String]
  ScheduleIdentifier: String
  ScheduleDescription: String
  Tags: [AwsRedshiftSh]
  NextInvocations: [Date]
  AssociatedClusterCount: Int
  AssociatedClusters: [AwsRedshiftS33AssociatedClusters]
}

type AwsRedshiftS33AssociatedClusters {
  ClusterIdentifier: String
  ScheduleAssociationState: String
}

type AwsRedshiftS4 {
  ReservedNodeId: String
  ReservedNodeOfferingId: String
  NodeType: String
  StartTime: Date
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  NodeCount: Int
  State: String
  OfferingType: String
  RecurringCharges: [AwsRedshiftS8]
  ReservedNodeOfferingType: String
}

type AwsRedshiftS44 {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  ApplyType: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
}

input AwsRedshiftS44Input {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  ApplyType: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
}

type AwsRedshiftS5v {
  ReservedNodeOfferingId: String
  NodeType: String
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  OfferingType: String
  RecurringCharges: [AwsRedshiftS8]
  ReservedNodeOfferingType: String
}

type AwsRedshiftS6b {
  TableRestoreRequestId: String
  Status: String
  Message: String
  RequestTime: Date
  ProgressInMegaBytes: JSON
  TotalDataInMegaBytes: JSON
  ClusterIdentifier: String
  SnapshotIdentifier: String
  SourceDatabaseName: String
  SourceSchemaName: String
  SourceTableName: String
  TargetDatabaseName: String
  TargetSchemaName: String
  NewTableName: String
}

type AwsRedshiftS8 {
  RecurringChargeAmount: JSON
  RecurringChargeFrequency: String
}

type AwsRedshiftSd {
  ClusterSecurityGroupName: String
  Description: String
  EC2SecurityGroups: [AwsRedshiftSdEC2SecurityGroups]
  IPRanges: [AwsRedshiftSdIPRanges]
  Tags: [AwsRedshiftSh]
}

type AwsRedshiftSdEC2SecurityGroups {
  Status: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
  Tags: [AwsRedshiftSh]
}

type AwsRedshiftSdIPRanges {
  Status: String
  CIDRIP: String
  Tags: [AwsRedshiftSh]
}

type AwsRedshiftSh {
  Key: String
  Value: String
}

input AwsRedshiftShInput {
  Key: String
  Value: String
}

type AwsRedshiftSm {
  SnapshotIdentifier: String
  ClusterIdentifier: String
  SnapshotCreateTime: Date
  Status: String
  Port: Int
  AvailabilityZone: String
  ClusterCreateTime: Date
  MasterUsername: String
  ClusterVersion: String
  SnapshotType: String
  NodeType: String
  NumberOfNodes: Int
  DBName: String
  VpcId: String
  Encrypted: Boolean
  KmsKeyId: String
  EncryptedWithHSM: Boolean
  AccountsWithRestoreAccess: [AwsRedshiftSmAccountsWithRestoreAccess]
  OwnerAccount: String
  TotalBackupSizeInMegaBytes: JSON
  ActualIncrementalBackupSizeInMegaBytes: JSON
  BackupProgressInMegaBytes: JSON
  CurrentBackupRateInMegaBytesPerSecond: JSON
  EstimatedSecondsToCompletion: JSON
  ElapsedTimeInSeconds: JSON
  SourceRegion: String
  Tags: [AwsRedshiftSh]
  RestorableNodeTypes: [String]
  EnhancedVpcRouting: Boolean
  MaintenanceTrackName: String
  ManualSnapshotRetentionPeriod: Int
  ManualSnapshotRemainingDays: Int
  SnapshotRetentionStartTime: Date
}

type AwsRedshiftSmAccountsWithRestoreAccess {
  AccountId: String
  AccountAlias: String
}

input AwsRedshiftSvInput {
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
}

type AwsRedshiftSz {
  SnapshotIdentifier: String
  SnapshotClusterIdentifier: String
  FailureCode: String
  FailureReason: String
}

"""Amazon Rekognition (2016-06-27)"""
type AwsRekognition {
  compareFaces(input: AwsRekognitionCompareFacesInput!, config: AwsConfig): AwsRekognitionCompareFacesOutput
  createCollection(input: AwsRekognitionCreateCollectionInput!, config: AwsConfig): AwsRekognitionCreateCollectionOutput
  createStreamProcessor(input: AwsRekognitionCreateStreamProcessorInput!, config: AwsConfig): AwsRekognitionCreateStreamProcessorOutput
  deleteCollection(input: AwsRekognitionDeleteCollectionInput!, config: AwsConfig): AwsRekognitionDeleteCollectionOutput
  deleteFaces(input: AwsRekognitionDeleteFacesInput!, config: AwsConfig): AwsRekognitionDeleteFacesOutput
  deleteStreamProcessor(input: AwsRekognitionDeleteStreamProcessorInput!, config: AwsConfig): JSON
  describeCollection(input: AwsRekognitionDescribeCollectionInput!, config: AwsConfig): AwsRekognitionDescribeCollectionOutput
  describeStreamProcessor(input: AwsRekognitionDescribeStreamProcessorInput!, config: AwsConfig): AwsRekognitionDescribeStreamProcessorOutput
  detectFaces(input: AwsRekognitionDetectFacesInput!, config: AwsConfig): AwsRekognitionDetectFacesOutput
  detectLabels(input: AwsRekognitionDetectLabelsInput!, config: AwsConfig): AwsRekognitionDetectLabelsOutput
  detectModerationLabels(input: AwsRekognitionDetectModerationLabelsInput!, config: AwsConfig): AwsRekognitionDetectModerationLabelsOutput
  detectText(input: AwsRekognitionDetectTextInput!, config: AwsConfig): AwsRekognitionDetectTextOutput
  getCelebrityInfo(input: AwsRekognitionGetCelebrityInfoInput!, config: AwsConfig): AwsRekognitionGetCelebrityInfoOutput
  getCelebrityRecognition(input: AwsRekognitionGetCelebrityRecognitionInput!, config: AwsConfig): AwsRekognitionGetCelebrityRecognitionOutput
  getContentModeration(input: AwsRekognitionGetContentModerationInput!, config: AwsConfig): AwsRekognitionGetContentModerationOutput
  getFaceDetection(input: AwsRekognitionGetFaceDetectionInput!, config: AwsConfig): AwsRekognitionGetFaceDetectionOutput
  getFaceSearch(input: AwsRekognitionGetFaceSearchInput!, config: AwsConfig): AwsRekognitionGetFaceSearchOutput
  getLabelDetection(input: AwsRekognitionGetLabelDetectionInput!, config: AwsConfig): AwsRekognitionGetLabelDetectionOutput
  getPersonTracking(input: AwsRekognitionGetPersonTrackingInput!, config: AwsConfig): AwsRekognitionGetPersonTrackingOutput
  indexFaces(input: AwsRekognitionIndexFacesInput!, config: AwsConfig): AwsRekognitionIndexFacesOutput
  listCollections(input: AwsRekognitionListCollectionsInput, config: AwsConfig): AwsRekognitionListCollectionsOutput
  listFaces(input: AwsRekognitionListFacesInput!, config: AwsConfig): AwsRekognitionListFacesOutput
  listStreamProcessors(input: AwsRekognitionListStreamProcessorsInput, config: AwsConfig): AwsRekognitionListStreamProcessorsOutput
  recognizeCelebrities(input: AwsRekognitionRecognizeCelebritiesInput!, config: AwsConfig): AwsRekognitionRecognizeCelebritiesOutput
  searchFaces(input: AwsRekognitionSearchFacesInput!, config: AwsConfig): AwsRekognitionSearchFacesOutput
  searchFacesByImage(input: AwsRekognitionSearchFacesByImageInput!, config: AwsConfig): AwsRekognitionSearchFacesByImageOutput
  startCelebrityRecognition(input: AwsRekognitionStartCelebrityRecognitionInput!, config: AwsConfig): AwsRekognitionStartCelebrityRecognitionOutput
  startContentModeration(input: AwsRekognitionStartContentModerationInput!, config: AwsConfig): AwsRekognitionStartContentModerationOutput
  startFaceDetection(input: AwsRekognitionStartFaceDetectionInput!, config: AwsConfig): AwsRekognitionStartFaceDetectionOutput
  startFaceSearch(input: AwsRekognitionStartFaceSearchInput!, config: AwsConfig): AwsRekognitionStartFaceSearchOutput
  startLabelDetection(input: AwsRekognitionStartLabelDetectionInput!, config: AwsConfig): AwsRekognitionStartLabelDetectionOutput
  startPersonTracking(input: AwsRekognitionStartPersonTrackingInput!, config: AwsConfig): AwsRekognitionStartPersonTrackingOutput
  startStreamProcessor(input: AwsRekognitionStartStreamProcessorInput!, config: AwsConfig): JSON
  stopStreamProcessor(input: AwsRekognitionStopStreamProcessorInput!, config: AwsConfig): JSON
}

input AwsRekognitionCompareFacesInput {
  SourceImage: AwsRekognitionS2Input!
  TargetImage: AwsRekognitionS2Input!
  SimilarityThreshold: Float
}

type AwsRekognitionCompareFacesOutput {
  SourceImageFace: AwsRekognitionCompareFacesOutputSourceImageFace
  FaceMatches: [AwsRekognitionCompareFacesOutputFaceMatches]
  UnmatchedFaces: [AwsRekognitionSf]
  SourceImageOrientationCorrection: String
  TargetImageOrientationCorrection: String
}

type AwsRekognitionCompareFacesOutputFaceMatches {
  Similarity: Float
  Face: AwsRekognitionSf
}

type AwsRekognitionCompareFacesOutputSourceImageFace {
  BoundingBox: AwsRekognitionSb
  Confidence: Float
}

input AwsRekognitionCreateCollectionInput {
  CollectionId: String!
}

type AwsRekognitionCreateCollectionOutput {
  StatusCode: Int
  CollectionArn: String
  FaceModelVersion: String
}

input AwsRekognitionCreateStreamProcessorInput {
  Input: AwsRekognitionSuInput!
  Output: AwsRekognitionSxInput!
  Name: String!
  Settings: AwsRekognitionS11Input!
  RoleArn: String!
}

type AwsRekognitionCreateStreamProcessorOutput {
  StreamProcessorArn: String
}

input AwsRekognitionDeleteCollectionInput {
  CollectionId: String!
}

type AwsRekognitionDeleteCollectionOutput {
  StatusCode: Int
}

input AwsRekognitionDeleteFacesInput {
  CollectionId: String!
  FaceIds: [String]!
}

type AwsRekognitionDeleteFacesOutput {
  DeletedFaces: [String]
}

input AwsRekognitionDeleteStreamProcessorInput {
  Name: String!
}

input AwsRekognitionDescribeCollectionInput {
  CollectionId: String!
}

type AwsRekognitionDescribeCollectionOutput {
  FaceCount: JSON
  FaceModelVersion: String
  CollectionARN: String
  CreationTimestamp: Date
}

input AwsRekognitionDescribeStreamProcessorInput {
  Name: String!
}

type AwsRekognitionDescribeStreamProcessorOutput {
  Name: String
  StreamProcessorArn: String
  Status: String
  StatusMessage: String
  CreationTimestamp: Date
  LastUpdateTimestamp: Date
  Input: AwsRekognitionSu
  Output: AwsRekognitionSx
  RoleArn: String
  Settings: AwsRekognitionS11
}

input AwsRekognitionDetectFacesInput {
  Image: AwsRekognitionS2Input!
  Attributes: [String]
}

type AwsRekognitionDetectFacesOutput {
  FaceDetails: [AwsRekognitionS1q]
  OrientationCorrection: String
}

input AwsRekognitionDetectLabelsInput {
  Image: AwsRekognitionS2Input!
  MaxLabels: Int
  MinConfidence: Float
}

type AwsRekognitionDetectLabelsOutput {
  Labels: [AwsRekognitionS28]
  OrientationCorrection: String
  LabelModelVersion: String
}

input AwsRekognitionDetectModerationLabelsInput {
  Image: AwsRekognitionS2Input!
  MinConfidence: Float
}

type AwsRekognitionDetectModerationLabelsOutput {
  ModerationLabels: [AwsRekognitionS2g]
  ModerationModelVersion: String
}

input AwsRekognitionDetectTextInput {
  Image: AwsRekognitionS2Input!
}

type AwsRekognitionDetectTextOutput {
  TextDetections: [AwsRekognitionDetectTextOutputTextDetections]
}

type AwsRekognitionDetectTextOutputTextDetections {
  DetectedText: String
  Type: String
  Id: Int
  ParentId: Int
  Confidence: Float
  Geometry: AwsRekognitionDetectTextOutputTextDetectionsGeometry
}

type AwsRekognitionDetectTextOutputTextDetectionsGeometry {
  BoundingBox: AwsRekognitionSb
  Polygon: [AwsRekognitionDetectTextOutputTextDetectionsGeometryPolygon]
}

type AwsRekognitionDetectTextOutputTextDetectionsGeometryPolygon {
  X: Float
  Y: Float
}

input AwsRekognitionGetCelebrityInfoInput {
  Id: String!
}

type AwsRekognitionGetCelebrityInfoOutput {
  Urls: [String]
  Name: String
}

input AwsRekognitionGetCelebrityRecognitionInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetCelebrityRecognitionOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS32
  NextToken: String
  Celebrities: [AwsRekognitionGetCelebrityRecognitionOutputCelebrities]
}

type AwsRekognitionGetCelebrityRecognitionOutputCelebrities {
  Timestamp: JSON
  Celebrity: AwsRekognitionGetCelebrityRecognitionOutputCelebritiesCelebrity
}

type AwsRekognitionGetCelebrityRecognitionOutputCelebritiesCelebrity {
  Urls: [String]
  Name: String
  Id: String
  Confidence: Float
  BoundingBox: AwsRekognitionSb
  Face: AwsRekognitionS1q
}

input AwsRekognitionGetContentModerationInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetContentModerationOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS32
  ModerationLabels: [AwsRekognitionGetContentModerationOutputModerationLabels]
  NextToken: String
  ModerationModelVersion: String
}

type AwsRekognitionGetContentModerationOutputModerationLabels {
  Timestamp: JSON
  ModerationLabel: AwsRekognitionS2g
}

input AwsRekognitionGetFaceDetectionInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
}

type AwsRekognitionGetFaceDetectionOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS32
  NextToken: String
  Faces: [AwsRekognitionGetFaceDetectionOutputFaces]
}

type AwsRekognitionGetFaceDetectionOutputFaces {
  Timestamp: JSON
  Face: AwsRekognitionS1q
}

input AwsRekognitionGetFaceSearchInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetFaceSearchOutput {
  JobStatus: String
  StatusMessage: String
  NextToken: String
  VideoMetadata: AwsRekognitionS32
  Persons: [AwsRekognitionGetFaceSearchOutputPersons]
}

type AwsRekognitionGetFaceSearchOutputPersons {
  Timestamp: JSON
  Person: AwsRekognitionS3l
  FaceMatches: [AwsRekognitionS3n]
}

input AwsRekognitionGetLabelDetectionInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetLabelDetectionOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS32
  NextToken: String
  Labels: [AwsRekognitionGetLabelDetectionOutputLabels]
  LabelModelVersion: String
}

type AwsRekognitionGetLabelDetectionOutputLabels {
  Timestamp: JSON
  Label: AwsRekognitionS28
}

input AwsRekognitionGetPersonTrackingInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetPersonTrackingOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS32
  NextToken: String
  Persons: [AwsRekognitionGetPersonTrackingOutputPersons]
}

type AwsRekognitionGetPersonTrackingOutputPersons {
  Timestamp: JSON
  Person: AwsRekognitionS3l
}

input AwsRekognitionIndexFacesInput {
  CollectionId: String!
  Image: AwsRekognitionS2Input!
  ExternalImageId: String
  DetectionAttributes: [String]
  MaxFaces: Int
  QualityFilter: String
}

type AwsRekognitionIndexFacesOutput {
  FaceRecords: [AwsRekognitionIndexFacesOutputFaceRecords]
  OrientationCorrection: String
  FaceModelVersion: String
  UnindexedFaces: [AwsRekognitionIndexFacesOutputUnindexedFaces]
}

type AwsRekognitionIndexFacesOutputFaceRecords {
  Face: AwsRekognitionS3p
  FaceDetail: AwsRekognitionS1q
}

type AwsRekognitionIndexFacesOutputUnindexedFaces {
  Reasons: [String]
  FaceDetail: AwsRekognitionS1q
}

input AwsRekognitionListCollectionsInput {
  NextToken: String
  MaxResults: Int
}

type AwsRekognitionListCollectionsOutput {
  CollectionIds: [String]
  NextToken: String
  FaceModelVersions: [String]
}

input AwsRekognitionListFacesInput {
  CollectionId: String!
  NextToken: String
  MaxResults: Int
}

type AwsRekognitionListFacesOutput {
  Faces: [AwsRekognitionS3p]
  NextToken: String
  FaceModelVersion: String
}

input AwsRekognitionListStreamProcessorsInput {
  NextToken: String
  MaxResults: Int
}

type AwsRekognitionListStreamProcessorsOutput {
  NextToken: String
  StreamProcessors: [AwsRekognitionListStreamProcessorsOutputStreamProcessors]
}

type AwsRekognitionListStreamProcessorsOutputStreamProcessors {
  Name: String
  Status: String
}

input AwsRekognitionRecognizeCelebritiesInput {
  Image: AwsRekognitionS2Input!
}

type AwsRekognitionRecognizeCelebritiesOutput {
  CelebrityFaces: [AwsRekognitionRecognizeCelebritiesOutputCelebrityFaces]
  UnrecognizedFaces: [AwsRekognitionSf]
  OrientationCorrection: String
}

type AwsRekognitionRecognizeCelebritiesOutputCelebrityFaces {
  Urls: [String]
  Name: String
  Id: String
  Face: AwsRekognitionSf
  MatchConfidence: Float
}

type AwsRekognitionS11 {
  FaceSearch: AwsRekognitionS11FaceSearch
}

type AwsRekognitionS11FaceSearch {
  CollectionId: String
  FaceMatchThreshold: Float
}

input AwsRekognitionS11FaceSearchInput {
  CollectionId: String
  FaceMatchThreshold: Float
}

input AwsRekognitionS11Input {
  FaceSearch: AwsRekognitionS11FaceSearchInput
}

type AwsRekognitionS1q {
  BoundingBox: AwsRekognitionSb
  AgeRange: AwsRekognitionS1qAgeRange
  Smile: AwsRekognitionS1qSmile
  Eyeglasses: AwsRekognitionS1qEyeglasses
  Sunglasses: AwsRekognitionS1qSunglasses
  Gender: AwsRekognitionS1qGender
  Beard: AwsRekognitionS1qBeard
  Mustache: AwsRekognitionS1qMustache
  EyesOpen: AwsRekognitionS1qEyesOpen
  MouthOpen: AwsRekognitionS1qMouthOpen
  Emotions: [AwsRekognitionS1qEmotions]
  Landmarks: [AwsRekognitionSg]
  Pose: AwsRekognitionSj
  Quality: AwsRekognitionSl
  Confidence: Float
}

type AwsRekognitionS1qAgeRange {
  Low: Int
  High: Int
}

type AwsRekognitionS1qBeard {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1qEmotions {
  Type: String
  Confidence: Float
}

type AwsRekognitionS1qEyeglasses {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1qEyesOpen {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1qGender {
  Value: String
  Confidence: Float
}

type AwsRekognitionS1qMouthOpen {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1qMustache {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1qSmile {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1qSunglasses {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS28 {
  Name: String
  Confidence: Float
  Instances: [AwsRekognitionS28Instances]
  Parents: [AwsRekognitionS28Parents]
}

type AwsRekognitionS28Instances {
  BoundingBox: AwsRekognitionSb
  Confidence: Float
}

type AwsRekognitionS28Parents {
  Name: String
}

type AwsRekognitionS2g {
  Confidence: Float
  Name: String
  ParentName: String
}

input AwsRekognitionS2Input {
  Bytes: JSON
  S3Object: AwsRekognitionS4Input
}

type AwsRekognitionS32 {
  Codec: String
  DurationMillis: JSON
  Format: String
  FrameRate: Float
  FrameHeight: JSON
  FrameWidth: JSON
}

type AwsRekognitionS3l {
  Index: JSON
  BoundingBox: AwsRekognitionSb
  Face: AwsRekognitionS1q
}

type AwsRekognitionS3n {
  Similarity: Float
  Face: AwsRekognitionS3p
}

type AwsRekognitionS3p {
  FaceId: String
  BoundingBox: AwsRekognitionSb
  ImageId: String
  ExternalImageId: String
  Confidence: Float
}

input AwsRekognitionS4Input {
  Bucket: String
  Name: String
  Version: String
}

input AwsRekognitionS4zInput {
  S3Object: AwsRekognitionS4Input
}

input AwsRekognitionS51Input {
  SNSTopicArn: String!
  RoleArn: String!
}

type AwsRekognitionSb {
  Width: Float
  Height: Float
  Left: Float
  Top: Float
}

input AwsRekognitionSearchFacesByImageInput {
  CollectionId: String!
  Image: AwsRekognitionS2Input!
  MaxFaces: Int
  FaceMatchThreshold: Float
}

type AwsRekognitionSearchFacesByImageOutput {
  SearchedFaceBoundingBox: AwsRekognitionSb
  SearchedFaceConfidence: Float
  FaceMatches: [AwsRekognitionS3n]
  FaceModelVersion: String
}

input AwsRekognitionSearchFacesInput {
  CollectionId: String!
  FaceId: String!
  MaxFaces: Int
  FaceMatchThreshold: Float
}

type AwsRekognitionSearchFacesOutput {
  SearchedFaceId: String
  FaceMatches: [AwsRekognitionS3n]
  FaceModelVersion: String
}

type AwsRekognitionSf {
  BoundingBox: AwsRekognitionSb
  Confidence: Float
  Landmarks: [AwsRekognitionSg]
  Pose: AwsRekognitionSj
  Quality: AwsRekognitionSl
}

type AwsRekognitionSg {
  Type: String
  X: Float
  Y: Float
}

type AwsRekognitionSj {
  Roll: Float
  Yaw: Float
  Pitch: Float
}

type AwsRekognitionSl {
  Brightness: Float
  Sharpness: Float
}

input AwsRekognitionStartCelebrityRecognitionInput {
  Video: AwsRekognitionS4zInput!
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS51Input
  JobTag: String
}

type AwsRekognitionStartCelebrityRecognitionOutput {
  JobId: String
}

input AwsRekognitionStartContentModerationInput {
  Video: AwsRekognitionS4zInput!
  MinConfidence: Float
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS51Input
  JobTag: String
}

type AwsRekognitionStartContentModerationOutput {
  JobId: String
}

input AwsRekognitionStartFaceDetectionInput {
  Video: AwsRekognitionS4zInput!
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS51Input
  FaceAttributes: String
  JobTag: String
}

type AwsRekognitionStartFaceDetectionOutput {
  JobId: String
}

input AwsRekognitionStartFaceSearchInput {
  Video: AwsRekognitionS4zInput!
  ClientRequestToken: String
  FaceMatchThreshold: Float
  CollectionId: String!
  NotificationChannel: AwsRekognitionS51Input
  JobTag: String
}

type AwsRekognitionStartFaceSearchOutput {
  JobId: String
}

input AwsRekognitionStartLabelDetectionInput {
  Video: AwsRekognitionS4zInput!
  ClientRequestToken: String
  MinConfidence: Float
  NotificationChannel: AwsRekognitionS51Input
  JobTag: String
}

type AwsRekognitionStartLabelDetectionOutput {
  JobId: String
}

input AwsRekognitionStartPersonTrackingInput {
  Video: AwsRekognitionS4zInput!
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS51Input
  JobTag: String
}

type AwsRekognitionStartPersonTrackingOutput {
  JobId: String
}

input AwsRekognitionStartStreamProcessorInput {
  Name: String!
}

input AwsRekognitionStopStreamProcessorInput {
  Name: String!
}

type AwsRekognitionSu {
  KinesisVideoStream: AwsRekognitionSuKinesisVideoStream
}

input AwsRekognitionSuInput {
  KinesisVideoStream: AwsRekognitionSuKinesisVideoStreamInput
}

type AwsRekognitionSuKinesisVideoStream {
  Arn: String
}

input AwsRekognitionSuKinesisVideoStreamInput {
  Arn: String
}

type AwsRekognitionSx {
  KinesisDataStream: AwsRekognitionSxKinesisDataStream
}

input AwsRekognitionSxInput {
  KinesisDataStream: AwsRekognitionSxKinesisDataStreamInput
}

type AwsRekognitionSxKinesisDataStream {
  Arn: String
}

input AwsRekognitionSxKinesisDataStreamInput {
  Arn: String
}

"""AWS Resource Groups (2017-11-27)"""
type AwsResourceGroups {
  createGroup(input: AwsResourceGroupsCreateGroupInput!, config: AwsConfig): AwsResourceGroupsCreateGroupOutput
  deleteGroup(input: AwsResourceGroupsDeleteGroupInput!, config: AwsConfig): AwsResourceGroupsDeleteGroupOutput
  getGroup(input: AwsResourceGroupsGetGroupInput!, config: AwsConfig): AwsResourceGroupsGetGroupOutput
  getGroupQuery(input: AwsResourceGroupsGetGroupQueryInput!, config: AwsConfig): AwsResourceGroupsGetGroupQueryOutput
  getTags(input: AwsResourceGroupsGetTagsInput!, config: AwsConfig): AwsResourceGroupsGetTagsOutput
  listGroupResources(input: AwsResourceGroupsListGroupResourcesInput!, config: AwsConfig): AwsResourceGroupsListGroupResourcesOutput
  listGroups(input: AwsResourceGroupsListGroupsInput, config: AwsConfig): AwsResourceGroupsListGroupsOutput
  searchResources(input: AwsResourceGroupsSearchResourcesInput!, config: AwsConfig): AwsResourceGroupsSearchResourcesOutput
  tag(input: AwsResourceGroupsTagInput!, config: AwsConfig): AwsResourceGroupsTagOutput
  untag(input: AwsResourceGroupsUntagInput!, config: AwsConfig): AwsResourceGroupsUntagOutput
  updateGroup(input: AwsResourceGroupsUpdateGroupInput!, config: AwsConfig): AwsResourceGroupsUpdateGroupOutput
  updateGroupQuery(input: AwsResourceGroupsUpdateGroupQueryInput!, config: AwsConfig): AwsResourceGroupsUpdateGroupQueryOutput
}

input AwsResourceGroupsCreateGroupInput {
  Name: String!
  Description: String
  ResourceQuery: AwsResourceGroupsS4Input!
  Tags: JSON
}

type AwsResourceGroupsCreateGroupOutput {
  Group: AwsResourceGroupsSb
  ResourceQuery: AwsResourceGroupsS4
  Tags: JSON
}

input AwsResourceGroupsDeleteGroupInput {
  GroupName: String!
}

type AwsResourceGroupsDeleteGroupOutput {
  Group: AwsResourceGroupsSb
}

input AwsResourceGroupsGetGroupInput {
  GroupName: String!
}

type AwsResourceGroupsGetGroupOutput {
  Group: AwsResourceGroupsSb
}

input AwsResourceGroupsGetGroupQueryInput {
  GroupName: String!
}

type AwsResourceGroupsGetGroupQueryOutput {
  GroupQuery: AwsResourceGroupsSj
}

input AwsResourceGroupsGetTagsInput {
  Arn: String!
}

type AwsResourceGroupsGetTagsOutput {
  Arn: String
  Tags: JSON
}

input AwsResourceGroupsListGroupResourcesFiltersInput {
  Name: String!
  Values: [String]!
}

input AwsResourceGroupsListGroupResourcesInput {
  GroupName: String!
  Filters: [AwsResourceGroupsListGroupResourcesFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsResourceGroupsListGroupResourcesOutput {
  ResourceIdentifiers: [AwsResourceGroupsSv]
  NextToken: String
  QueryErrors: [AwsResourceGroupsSz]
}

input AwsResourceGroupsListGroupsFiltersInput {
  Name: String!
  Values: [String]!
}

input AwsResourceGroupsListGroupsInput {
  Filters: [AwsResourceGroupsListGroupsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsResourceGroupsListGroupsOutput {
  GroupIdentifiers: [AwsResourceGroupsListGroupsOutputGroupIdentifiers]
  Groups: [AwsResourceGroupsSb]
  NextToken: String
}

type AwsResourceGroupsListGroupsOutputGroupIdentifiers {
  GroupName: String
  GroupArn: String
}

type AwsResourceGroupsS4 {
  Type: String!
  Query: String!
}

input AwsResourceGroupsS4Input {
  Type: String!
  Query: String!
}

type AwsResourceGroupsSb {
  GroupArn: String!
  Name: String!
  Description: String
}

input AwsResourceGroupsSearchResourcesInput {
  ResourceQuery: AwsResourceGroupsS4Input!
  MaxResults: Int
  NextToken: String
}

type AwsResourceGroupsSearchResourcesOutput {
  ResourceIdentifiers: [AwsResourceGroupsSv]
  NextToken: String
  QueryErrors: [AwsResourceGroupsSz]
}

type AwsResourceGroupsSj {
  GroupName: String!
  ResourceQuery: AwsResourceGroupsS4!
}

type AwsResourceGroupsSv {
  ResourceArn: String
  ResourceType: String
}

type AwsResourceGroupsSz {
  ErrorCode: String
  Message: String
}

"""AWS Resource Groups Tagging API (2017-01-26)"""
type AwsResourceGroupsTaggingAPI {
  getResources(input: AwsResourceGroupsTaggingAPIGetResourcesInput, config: AwsConfig): AwsResourceGroupsTaggingAPIGetResourcesOutput
  getTagKeys(input: AwsResourceGroupsTaggingAPIGetTagKeysInput, config: AwsConfig): AwsResourceGroupsTaggingAPIGetTagKeysOutput
  getTagValues(input: AwsResourceGroupsTaggingAPIGetTagValuesInput!, config: AwsConfig): AwsResourceGroupsTaggingAPIGetTagValuesOutput
  tagResources(input: AwsResourceGroupsTaggingAPITagResourcesInput!, config: AwsConfig): AwsResourceGroupsTaggingAPITagResourcesOutput
  untagResources(input: AwsResourceGroupsTaggingAPIUntagResourcesInput!, config: AwsConfig): AwsResourceGroupsTaggingAPIUntagResourcesOutput
}

input AwsResourceGroupsTaggingAPIGetResourcesInput {
  PaginationToken: String
  TagFilters: [AwsResourceGroupsTaggingAPIGetResourcesTagFiltersInput]
  ResourcesPerPage: Int
  TagsPerPage: Int
  ResourceTypeFilters: [String]
}

type AwsResourceGroupsTaggingAPIGetResourcesOutput {
  PaginationToken: String
  ResourceTagMappingList: [AwsResourceGroupsTaggingAPIGetResourcesOutputResourceTagMappingList]
}

type AwsResourceGroupsTaggingAPIGetResourcesOutputResourceTagMappingList {
  ResourceARN: String
  Tags: [AwsResourceGroupsTaggingAPIGetResourcesOutputResourceTagMappingListTags]
}

type AwsResourceGroupsTaggingAPIGetResourcesOutputResourceTagMappingListTags {
  Key: String!
  Value: String!
}

input AwsResourceGroupsTaggingAPIGetResourcesTagFiltersInput {
  Key: String
  Values: [String]
}

input AwsResourceGroupsTaggingAPIGetTagKeysInput {
  PaginationToken: String
}

type AwsResourceGroupsTaggingAPIGetTagKeysOutput {
  PaginationToken: String
  TagKeys: [String]
}

input AwsResourceGroupsTaggingAPIGetTagValuesInput {
  PaginationToken: String
  Key: String!
}

type AwsResourceGroupsTaggingAPIGetTagValuesOutput {
  PaginationToken: String
  TagValues: [String]
}

input AwsResourceGroupsTaggingAPITagResourcesInput {
  ResourceARNList: [String]!
  Tags: JSON!
}

type AwsResourceGroupsTaggingAPITagResourcesOutput {
  FailedResourcesMap: JSON
}

input AwsResourceGroupsTaggingAPIUntagResourcesInput {
  ResourceARNList: [String]!
  TagKeys: [String]!
}

type AwsResourceGroupsTaggingAPIUntagResourcesOutput {
  FailedResourcesMap: JSON
}

input AwsResourceGroupsTagInput {
  Arn: String!
  Tags: JSON!
}

type AwsResourceGroupsTagOutput {
  Arn: String
  Tags: JSON
}

input AwsResourceGroupsUntagInput {
  Arn: String!
  Keys: [String]!
}

type AwsResourceGroupsUntagOutput {
  Arn: String
  Keys: [String]
}

input AwsResourceGroupsUpdateGroupInput {
  GroupName: String!
  Description: String
}

type AwsResourceGroupsUpdateGroupOutput {
  Group: AwsResourceGroupsSb
}

input AwsResourceGroupsUpdateGroupQueryInput {
  GroupName: String!
  ResourceQuery: AwsResourceGroupsS4Input!
}

type AwsResourceGroupsUpdateGroupQueryOutput {
  GroupQuery: AwsResourceGroupsSj
}

"""AWS RoboMaker (2018-06-29)"""
type AwsRoboMaker {
  batchDescribeSimulationJob(input: AwsRoboMakerBatchDescribeSimulationJobInput!, config: AwsConfig): AwsRoboMakerBatchDescribeSimulationJobOutput
  cancelDeploymentJob(input: AwsRoboMakerCancelDeploymentJobInput!, config: AwsConfig): JSON
  cancelSimulationJob(input: AwsRoboMakerCancelSimulationJobInput!, config: AwsConfig): JSON
  createDeploymentJob(input: AwsRoboMakerCreateDeploymentJobInput!, config: AwsConfig): AwsRoboMakerCreateDeploymentJobOutput
  createFleet(input: AwsRoboMakerCreateFleetInput!, config: AwsConfig): AwsRoboMakerCreateFleetOutput
  createRobot(input: AwsRoboMakerCreateRobotInput!, config: AwsConfig): AwsRoboMakerCreateRobotOutput
  createRobotApplication(input: AwsRoboMakerCreateRobotApplicationInput!, config: AwsConfig): AwsRoboMakerCreateRobotApplicationOutput
  createRobotApplicationVersion(input: AwsRoboMakerCreateRobotApplicationVersionInput!, config: AwsConfig): AwsRoboMakerCreateRobotApplicationVersionOutput
  createSimulationApplication(input: AwsRoboMakerCreateSimulationApplicationInput!, config: AwsConfig): AwsRoboMakerCreateSimulationApplicationOutput
  createSimulationApplicationVersion(input: AwsRoboMakerCreateSimulationApplicationVersionInput!, config: AwsConfig): AwsRoboMakerCreateSimulationApplicationVersionOutput
  createSimulationJob(input: AwsRoboMakerCreateSimulationJobInput!, config: AwsConfig): AwsRoboMakerCreateSimulationJobOutput
  deleteFleet(input: AwsRoboMakerDeleteFleetInput!, config: AwsConfig): JSON
  deleteRobot(input: AwsRoboMakerDeleteRobotInput!, config: AwsConfig): JSON
  deleteRobotApplication(input: AwsRoboMakerDeleteRobotApplicationInput!, config: AwsConfig): JSON
  deleteSimulationApplication(input: AwsRoboMakerDeleteSimulationApplicationInput!, config: AwsConfig): JSON
  deregisterRobot(input: AwsRoboMakerDeregisterRobotInput!, config: AwsConfig): AwsRoboMakerDeregisterRobotOutput
  describeDeploymentJob(input: AwsRoboMakerDescribeDeploymentJobInput!, config: AwsConfig): AwsRoboMakerDescribeDeploymentJobOutput
  describeFleet(input: AwsRoboMakerDescribeFleetInput!, config: AwsConfig): AwsRoboMakerDescribeFleetOutput
  describeRobot(input: AwsRoboMakerDescribeRobotInput!, config: AwsConfig): AwsRoboMakerDescribeRobotOutput
  describeRobotApplication(input: AwsRoboMakerDescribeRobotApplicationInput!, config: AwsConfig): AwsRoboMakerDescribeRobotApplicationOutput
  describeSimulationApplication(input: AwsRoboMakerDescribeSimulationApplicationInput!, config: AwsConfig): AwsRoboMakerDescribeSimulationApplicationOutput
  describeSimulationJob(input: AwsRoboMakerDescribeSimulationJobInput!, config: AwsConfig): AwsRoboMakerDescribeSimulationJobOutput
  listDeploymentJobs(input: AwsRoboMakerListDeploymentJobsInput, config: AwsConfig): AwsRoboMakerListDeploymentJobsOutput
  listFleets(input: AwsRoboMakerListFleetsInput, config: AwsConfig): AwsRoboMakerListFleetsOutput
  listRobotApplications(input: AwsRoboMakerListRobotApplicationsInput, config: AwsConfig): AwsRoboMakerListRobotApplicationsOutput
  listRobots(input: AwsRoboMakerListRobotsInput, config: AwsConfig): AwsRoboMakerListRobotsOutput
  listSimulationApplications(input: AwsRoboMakerListSimulationApplicationsInput, config: AwsConfig): AwsRoboMakerListSimulationApplicationsOutput
  listSimulationJobs(input: AwsRoboMakerListSimulationJobsInput, config: AwsConfig): AwsRoboMakerListSimulationJobsOutput
  listTagsForResource(input: AwsRoboMakerListTagsForResourceInput!, config: AwsConfig): AwsRoboMakerListTagsForResourceOutput
  registerRobot(input: AwsRoboMakerRegisterRobotInput!, config: AwsConfig): AwsRoboMakerRegisterRobotOutput
  restartSimulationJob(input: AwsRoboMakerRestartSimulationJobInput!, config: AwsConfig): JSON
  syncDeploymentJob(input: AwsRoboMakerSyncDeploymentJobInput!, config: AwsConfig): AwsRoboMakerSyncDeploymentJobOutput
  tagResource(input: AwsRoboMakerTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsRoboMakerUntagResourceInput!, config: AwsConfig): JSON
  updateRobotApplication(input: AwsRoboMakerUpdateRobotApplicationInput!, config: AwsConfig): AwsRoboMakerUpdateRobotApplicationOutput
  updateSimulationApplication(input: AwsRoboMakerUpdateSimulationApplicationInput!, config: AwsConfig): AwsRoboMakerUpdateSimulationApplicationOutput
}

input AwsRoboMakerBatchDescribeSimulationJobInput {
  jobs: [String]!
}

type AwsRoboMakerBatchDescribeSimulationJobOutput {
  jobs: [AwsRoboMakerBatchDescribeSimulationJobOutputJobs]
  unprocessedJobs: [String]
}

type AwsRoboMakerBatchDescribeSimulationJobOutputJobs {
  arn: String
  name: String
  status: String
  lastStartedAt: Date
  lastUpdatedAt: Date
  failureBehavior: String
  failureCode: String
  failureReason: String
  clientRequestToken: String
  outputLocation: AwsRoboMakerSf
  maxJobDurationInSeconds: JSON
  simulationTimeMillis: JSON
  iamRole: String
  robotApplications: [AwsRoboMakerSl]
  simulationApplications: [AwsRoboMakerSt]
  tags: JSON
  vpcConfig: AwsRoboMakerSy
}

input AwsRoboMakerCancelDeploymentJobInput {
  job: String!
}

input AwsRoboMakerCancelSimulationJobInput {
  job: String!
}

input AwsRoboMakerCreateDeploymentJobInput {
  deploymentConfig: AwsRoboMakerS17Input
  clientRequestToken: String!
  fleet: String!
  deploymentApplicationConfigs: [AwsRoboMakerS19Input]!
  tags: JSON
}

type AwsRoboMakerCreateDeploymentJobOutput {
  arn: String
  fleet: String
  status: String
  deploymentApplicationConfigs: [AwsRoboMakerS19]
  failureReason: String
  failureCode: String
  createdAt: Date
  deploymentConfig: AwsRoboMakerS17
  tags: JSON
}

input AwsRoboMakerCreateFleetInput {
  name: String!
  tags: JSON
}

type AwsRoboMakerCreateFleetOutput {
  arn: String
  name: String
  createdAt: Date
  tags: JSON
}

input AwsRoboMakerCreateRobotApplicationInput {
  name: String!
  sources: [AwsRoboMakerS1pInput]!
  robotSoftwareSuite: AwsRoboMakerS1rInput!
  tags: JSON
}

type AwsRoboMakerCreateRobotApplicationOutput {
  arn: String
  name: String
  version: String
  sources: [AwsRoboMakerS1v]
  robotSoftwareSuite: AwsRoboMakerS1r
  lastUpdatedAt: Date
  revisionId: String
  tags: JSON
}

input AwsRoboMakerCreateRobotApplicationVersionInput {
  application: String!
  currentRevisionId: String
}

type AwsRoboMakerCreateRobotApplicationVersionOutput {
  arn: String
  name: String
  version: String
  sources: [AwsRoboMakerS1v]
  robotSoftwareSuite: AwsRoboMakerS1r
  lastUpdatedAt: Date
  revisionId: String
}

input AwsRoboMakerCreateRobotInput {
  name: String!
  architecture: String!
  greengrassGroupId: String!
  tags: JSON
}

type AwsRoboMakerCreateRobotOutput {
  arn: String
  name: String
  createdAt: Date
  greengrassGroupId: String
  architecture: String
  tags: JSON
}

input AwsRoboMakerCreateSimulationApplicationInput {
  name: String!
  sources: [AwsRoboMakerS1pInput]!
  simulationSoftwareSuite: AwsRoboMakerS22Input!
  robotSoftwareSuite: AwsRoboMakerS1rInput!
  renderingEngine: AwsRoboMakerS25Input!
  tags: JSON
}

type AwsRoboMakerCreateSimulationApplicationOutput {
  arn: String
  name: String
  version: String
  sources: [AwsRoboMakerS1v]
  simulationSoftwareSuite: AwsRoboMakerS22
  robotSoftwareSuite: AwsRoboMakerS1r
  renderingEngine: AwsRoboMakerS25
  lastUpdatedAt: Date
  revisionId: String
  tags: JSON
}

input AwsRoboMakerCreateSimulationApplicationVersionInput {
  application: String!
  currentRevisionId: String
}

type AwsRoboMakerCreateSimulationApplicationVersionOutput {
  arn: String
  name: String
  version: String
  sources: [AwsRoboMakerS1v]
  simulationSoftwareSuite: AwsRoboMakerS22
  robotSoftwareSuite: AwsRoboMakerS1r
  renderingEngine: AwsRoboMakerS25
  lastUpdatedAt: Date
  revisionId: String
}

input AwsRoboMakerCreateSimulationJobInput {
  clientRequestToken: String
  outputLocation: AwsRoboMakerSfInput
  maxJobDurationInSeconds: JSON!
  iamRole: String!
  failureBehavior: String
  robotApplications: [AwsRoboMakerSlInput]
  simulationApplications: [AwsRoboMakerStInput]
  tags: JSON
  vpcConfig: AwsRoboMakerCreateSimulationJobVpcConfigInput
}

type AwsRoboMakerCreateSimulationJobOutput {
  arn: String
  status: String
  lastStartedAt: Date
  lastUpdatedAt: Date
  failureBehavior: String
  failureCode: String
  clientRequestToken: String
  outputLocation: AwsRoboMakerSf
  maxJobDurationInSeconds: JSON
  simulationTimeMillis: JSON
  iamRole: String
  robotApplications: [AwsRoboMakerSl]
  simulationApplications: [AwsRoboMakerSt]
  tags: JSON
  vpcConfig: AwsRoboMakerSy
}

input AwsRoboMakerCreateSimulationJobVpcConfigInput {
  subnets: [String]!
  securityGroups: [String]
  assignPublicIp: Boolean
}

input AwsRoboMakerDeleteFleetInput {
  fleet: String!
}

input AwsRoboMakerDeleteRobotApplicationInput {
  application: String!
  applicationVersion: String
}

input AwsRoboMakerDeleteRobotInput {
  robot: String!
}

input AwsRoboMakerDeleteSimulationApplicationInput {
  application: String!
  applicationVersion: String
}

input AwsRoboMakerDeregisterRobotInput {
  fleet: String!
  robot: String!
}

type AwsRoboMakerDeregisterRobotOutput {
  fleet: String
  robot: String
}

input AwsRoboMakerDescribeDeploymentJobInput {
  job: String!
}

type AwsRoboMakerDescribeDeploymentJobOutput {
  arn: String
  fleet: String
  status: String
  deploymentConfig: AwsRoboMakerS17
  deploymentApplicationConfigs: [AwsRoboMakerS19]
  failureReason: String
  failureCode: String
  createdAt: Date
  robotDeploymentSummary: [AwsRoboMakerDescribeDeploymentJobOutputRobotDeploymentSummary]
  tags: JSON
}

type AwsRoboMakerDescribeDeploymentJobOutputRobotDeploymentSummary {
  arn: String
  deploymentStartTime: Date
  deploymentFinishTime: Date
  status: String
  progressDetail: AwsRoboMakerDescribeDeploymentJobOutputRobotDeploymentSummaryProgressDetail
  failureReason: String
  failureCode: String
}

type AwsRoboMakerDescribeDeploymentJobOutputRobotDeploymentSummaryProgressDetail {
  currentProgress: String
  percentDone: Float
  estimatedTimeRemainingSeconds: Int
  targetResource: String
}

input AwsRoboMakerDescribeFleetInput {
  fleet: String!
}

type AwsRoboMakerDescribeFleetOutput {
  name: String
  arn: String
  robots: [AwsRoboMakerS2z]
  createdAt: Date
  lastDeploymentStatus: String
  lastDeploymentJob: String
  lastDeploymentTime: Date
  tags: JSON
}

input AwsRoboMakerDescribeRobotApplicationInput {
  application: String!
  applicationVersion: String
}

type AwsRoboMakerDescribeRobotApplicationOutput {
  arn: String
  name: String
  version: String
  sources: [AwsRoboMakerS1v]
  robotSoftwareSuite: AwsRoboMakerS1r
  revisionId: String
  lastUpdatedAt: Date
  tags: JSON
}

input AwsRoboMakerDescribeRobotInput {
  robot: String!
}

type AwsRoboMakerDescribeRobotOutput {
  arn: String
  name: String
  fleetArn: String
  status: String
  greengrassGroupId: String
  createdAt: Date
  architecture: String
  lastDeploymentJob: String
  lastDeploymentTime: Date
  tags: JSON
}

input AwsRoboMakerDescribeSimulationApplicationInput {
  application: String!
  applicationVersion: String
}

type AwsRoboMakerDescribeSimulationApplicationOutput {
  arn: String
  name: String
  version: String
  sources: [AwsRoboMakerS1v]
  simulationSoftwareSuite: AwsRoboMakerS22
  robotSoftwareSuite: AwsRoboMakerS1r
  renderingEngine: AwsRoboMakerS25
  revisionId: String
  lastUpdatedAt: Date
  tags: JSON
}

input AwsRoboMakerDescribeSimulationJobInput {
  job: String!
}

type AwsRoboMakerDescribeSimulationJobOutput {
  arn: String
  name: String
  status: String
  lastStartedAt: Date
  lastUpdatedAt: Date
  failureBehavior: String
  failureCode: String
  failureReason: String
  clientRequestToken: String
  outputLocation: AwsRoboMakerSf
  maxJobDurationInSeconds: JSON
  simulationTimeMillis: JSON
  iamRole: String
  robotApplications: [AwsRoboMakerSl]
  simulationApplications: [AwsRoboMakerSt]
  tags: JSON
  vpcConfig: AwsRoboMakerSy
}

input AwsRoboMakerListDeploymentJobsInput {
  filters: [AwsRoboMakerS3aInput]
  nextToken: String
  maxResults: Int
}

type AwsRoboMakerListDeploymentJobsOutput {
  deploymentJobs: [AwsRoboMakerListDeploymentJobsOutputDeploymentJobs]
  nextToken: String
}

type AwsRoboMakerListDeploymentJobsOutputDeploymentJobs {
  arn: String
  fleet: String
  status: String
  deploymentApplicationConfigs: [AwsRoboMakerS19]
  deploymentConfig: AwsRoboMakerS17
  failureReason: String
  failureCode: String
  createdAt: Date
}

input AwsRoboMakerListFleetsInput {
  nextToken: String
  maxResults: Int
  filters: [AwsRoboMakerS3aInput]
}

type AwsRoboMakerListFleetsOutput {
  fleetDetails: [AwsRoboMakerListFleetsOutputFleetDetails]
  nextToken: String
}

type AwsRoboMakerListFleetsOutputFleetDetails {
  name: String
  arn: String
  createdAt: Date
  lastDeploymentStatus: String
  lastDeploymentJob: String
  lastDeploymentTime: Date
}

input AwsRoboMakerListRobotApplicationsInput {
  versionQualifier: String
  nextToken: String
  maxResults: Int
  filters: [AwsRoboMakerS3aInput]
}

type AwsRoboMakerListRobotApplicationsOutput {
  robotApplicationSummaries: [AwsRoboMakerListRobotApplicationsOutputRobotApplicationSummaries]
  nextToken: String
}

type AwsRoboMakerListRobotApplicationsOutputRobotApplicationSummaries {
  name: String
  arn: String
  version: String
  lastUpdatedAt: Date
  robotSoftwareSuite: AwsRoboMakerS1r
}

input AwsRoboMakerListRobotsInput {
  nextToken: String
  maxResults: Int
  filters: [AwsRoboMakerS3aInput]
}

type AwsRoboMakerListRobotsOutput {
  robots: [AwsRoboMakerS2z]
  nextToken: String
}

input AwsRoboMakerListSimulationApplicationsInput {
  versionQualifier: String
  nextToken: String
  maxResults: Int
  filters: [AwsRoboMakerS3aInput]
}

type AwsRoboMakerListSimulationApplicationsOutput {
  simulationApplicationSummaries: [AwsRoboMakerListSimulationApplicationsOutputSimulationApplicationSummaries]
  nextToken: String
}

type AwsRoboMakerListSimulationApplicationsOutputSimulationApplicationSummaries {
  name: String
  arn: String
  version: String
  lastUpdatedAt: Date
  robotSoftwareSuite: AwsRoboMakerS1r
  simulationSoftwareSuite: AwsRoboMakerS22
}

input AwsRoboMakerListSimulationJobsInput {
  nextToken: String
  maxResults: Int
  filters: [AwsRoboMakerS3aInput]
}

type AwsRoboMakerListSimulationJobsOutput {
  simulationJobSummaries: [AwsRoboMakerListSimulationJobsOutputSimulationJobSummaries]!
  nextToken: String
}

type AwsRoboMakerListSimulationJobsOutputSimulationJobSummaries {
  arn: String
  lastUpdatedAt: Date
  name: String
  status: String
  simulationApplicationNames: [String]
  robotApplicationNames: [String]
}

input AwsRoboMakerListTagsForResourceInput {
  resourceArn: String!
}

type AwsRoboMakerListTagsForResourceOutput {
  tags: JSON
}

input AwsRoboMakerRegisterRobotInput {
  fleet: String!
  robot: String!
}

type AwsRoboMakerRegisterRobotOutput {
  fleet: String
  robot: String
}

input AwsRoboMakerRestartSimulationJobInput {
  job: String!
}

type AwsRoboMakerS17 {
  concurrentDeploymentPercentage: Int
  failureThresholdPercentage: Int
}

input AwsRoboMakerS17Input {
  concurrentDeploymentPercentage: Int
  failureThresholdPercentage: Int
}

type AwsRoboMakerS19 {
  application: String!
  applicationVersion: String!
  launchConfig: AwsRoboMakerS19LaunchConfig!
}

input AwsRoboMakerS19Input {
  application: String!
  applicationVersion: String!
  launchConfig: AwsRoboMakerS19LaunchConfigInput!
}

type AwsRoboMakerS19LaunchConfig {
  packageName: String!
  preLaunchFile: String
  launchFile: String!
  postLaunchFile: String
  environmentVariables: JSON
}

input AwsRoboMakerS19LaunchConfigInput {
  packageName: String!
  preLaunchFile: String
  launchFile: String!
  postLaunchFile: String
  environmentVariables: JSON
}

input AwsRoboMakerS1pInput {
  s3Bucket: String
  s3Key: String
  architecture: String
}

type AwsRoboMakerS1r {
  name: String
  version: String
}

input AwsRoboMakerS1rInput {
  name: String
  version: String
}

type AwsRoboMakerS1v {
  s3Bucket: String
  s3Key: String
  etag: String
  architecture: String
}

type AwsRoboMakerS22 {
  name: String
  version: String
}

input AwsRoboMakerS22Input {
  name: String
  version: String
}

type AwsRoboMakerS25 {
  name: String
  version: String
}

input AwsRoboMakerS25Input {
  name: String
  version: String
}

type AwsRoboMakerS2z {
  arn: String
  name: String
  fleetArn: String
  status: String
  greenGrassGroupId: String
  createdAt: Date
  architecture: String
  lastDeploymentJob: String
  lastDeploymentTime: Date
}

input AwsRoboMakerS3aInput {
  name: String
  values: [String]
}

type AwsRoboMakerSf {
  s3Bucket: String
  s3Prefix: String
}

input AwsRoboMakerSfInput {
  s3Bucket: String
  s3Prefix: String
}

type AwsRoboMakerSl {
  application: String!
  applicationVersion: String
  launchConfig: AwsRoboMakerSo!
}

input AwsRoboMakerSlInput {
  application: String!
  applicationVersion: String
  launchConfig: AwsRoboMakerSoInput!
}

type AwsRoboMakerSo {
  packageName: String!
  launchFile: String!
  environmentVariables: JSON
}

input AwsRoboMakerSoInput {
  packageName: String!
  launchFile: String!
  environmentVariables: JSON
}

type AwsRoboMakerSt {
  application: String!
  applicationVersion: String
  launchConfig: AwsRoboMakerSo!
}

input AwsRoboMakerStInput {
  application: String!
  applicationVersion: String
  launchConfig: AwsRoboMakerSoInput!
}

type AwsRoboMakerSy {
  subnets: [String]
  securityGroups: [String]
  vpcId: String
  assignPublicIp: Boolean
}

input AwsRoboMakerSyncDeploymentJobInput {
  clientRequestToken: String!
  fleet: String!
}

type AwsRoboMakerSyncDeploymentJobOutput {
  arn: String
  fleet: String
  status: String
  deploymentConfig: AwsRoboMakerS17
  deploymentApplicationConfigs: [AwsRoboMakerS19]
  failureReason: String
  failureCode: String
  createdAt: Date
}

input AwsRoboMakerTagResourceInput {
  resourceArn: String!
  tags: JSON!
}

input AwsRoboMakerUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsRoboMakerUpdateRobotApplicationInput {
  application: String!
  sources: [AwsRoboMakerS1pInput]!
  robotSoftwareSuite: AwsRoboMakerS1rInput!
  currentRevisionId: String
}

type AwsRoboMakerUpdateRobotApplicationOutput {
  arn: String
  name: String
  version: String
  sources: [AwsRoboMakerS1v]
  robotSoftwareSuite: AwsRoboMakerS1r
  lastUpdatedAt: Date
  revisionId: String
}

input AwsRoboMakerUpdateSimulationApplicationInput {
  application: String!
  sources: [AwsRoboMakerS1pInput]!
  simulationSoftwareSuite: AwsRoboMakerS22Input!
  robotSoftwareSuite: AwsRoboMakerS1rInput!
  renderingEngine: AwsRoboMakerS25Input!
  currentRevisionId: String
}

type AwsRoboMakerUpdateSimulationApplicationOutput {
  arn: String
  name: String
  version: String
  sources: [AwsRoboMakerS1v]
  simulationSoftwareSuite: AwsRoboMakerS22
  robotSoftwareSuite: AwsRoboMakerS1r
  renderingEngine: AwsRoboMakerS25
  lastUpdatedAt: Date
  revisionId: String
}

"""Amazon Route 53 (2013-04-01)"""
type AwsRoute53 {
  associateVPCWithHostedZone(input: AwsRoute53AssociateVPCWithHostedZoneInput!, config: AwsConfig): AwsRoute53AssociateVPCWithHostedZoneOutput
  changeResourceRecordSets(input: AwsRoute53ChangeResourceRecordSetsInput!, config: AwsConfig): AwsRoute53ChangeResourceRecordSetsOutput
  changeTagsForResource(input: AwsRoute53ChangeTagsForResourceInput!, config: AwsConfig): JSON
  createHealthCheck(input: AwsRoute53CreateHealthCheckInput!, config: AwsConfig): AwsRoute53CreateHealthCheckOutput
  createHostedZone(input: AwsRoute53CreateHostedZoneInput!, config: AwsConfig): AwsRoute53CreateHostedZoneOutput
  createQueryLoggingConfig(input: AwsRoute53CreateQueryLoggingConfigInput!, config: AwsConfig): AwsRoute53CreateQueryLoggingConfigOutput
  createReusableDelegationSet(input: AwsRoute53CreateReusableDelegationSetInput!, config: AwsConfig): AwsRoute53CreateReusableDelegationSetOutput
  createTrafficPolicy(input: AwsRoute53CreateTrafficPolicyInput!, config: AwsConfig): AwsRoute53CreateTrafficPolicyOutput
  createTrafficPolicyInstance(input: AwsRoute53CreateTrafficPolicyInstanceInput!, config: AwsConfig): AwsRoute53CreateTrafficPolicyInstanceOutput
  createTrafficPolicyVersion(input: AwsRoute53CreateTrafficPolicyVersionInput!, config: AwsConfig): AwsRoute53CreateTrafficPolicyVersionOutput
  createVPCAssociationAuthorization(input: AwsRoute53CreateVPCAssociationAuthorizationInput!, config: AwsConfig): AwsRoute53CreateVPCAssociationAuthorizationOutput
  deleteHealthCheck(input: AwsRoute53DeleteHealthCheckInput!, config: AwsConfig): JSON
  deleteHostedZone(input: AwsRoute53DeleteHostedZoneInput!, config: AwsConfig): AwsRoute53DeleteHostedZoneOutput
  deleteQueryLoggingConfig(input: AwsRoute53DeleteQueryLoggingConfigInput!, config: AwsConfig): JSON
  deleteReusableDelegationSet(input: AwsRoute53DeleteReusableDelegationSetInput!, config: AwsConfig): JSON
  deleteTrafficPolicy(input: AwsRoute53DeleteTrafficPolicyInput!, config: AwsConfig): JSON
  deleteTrafficPolicyInstance(input: AwsRoute53DeleteTrafficPolicyInstanceInput!, config: AwsConfig): JSON
  deleteVPCAssociationAuthorization(input: AwsRoute53DeleteVPCAssociationAuthorizationInput!, config: AwsConfig): JSON
  disassociateVPCFromHostedZone(input: AwsRoute53DisassociateVPCFromHostedZoneInput!, config: AwsConfig): AwsRoute53DisassociateVPCFromHostedZoneOutput
  getAccountLimit(input: AwsRoute53GetAccountLimitInput!, config: AwsConfig): AwsRoute53GetAccountLimitOutput
  getChange(input: AwsRoute53GetChangeInput!, config: AwsConfig): AwsRoute53GetChangeOutput
  getCheckerIpRanges(input: JSON, config: AwsConfig): AwsRoute53GetCheckerIpRangesOutput
  getGeoLocation(input: AwsRoute53GetGeoLocationInput, config: AwsConfig): AwsRoute53GetGeoLocationOutput
  getHealthCheck(input: AwsRoute53GetHealthCheckInput!, config: AwsConfig): AwsRoute53GetHealthCheckOutput
  getHealthCheckCount(input: JSON, config: AwsConfig): AwsRoute53GetHealthCheckCountOutput
  getHealthCheckLastFailureReason(input: AwsRoute53GetHealthCheckLastFailureReasonInput!, config: AwsConfig): AwsRoute53GetHealthCheckLastFailureReasonOutput
  getHealthCheckStatus(input: AwsRoute53GetHealthCheckStatusInput!, config: AwsConfig): AwsRoute53GetHealthCheckStatusOutput
  getHostedZone(input: AwsRoute53GetHostedZoneInput!, config: AwsConfig): AwsRoute53GetHostedZoneOutput
  getHostedZoneCount(input: JSON, config: AwsConfig): AwsRoute53GetHostedZoneCountOutput
  getHostedZoneLimit(input: AwsRoute53GetHostedZoneLimitInput!, config: AwsConfig): AwsRoute53GetHostedZoneLimitOutput
  getQueryLoggingConfig(input: AwsRoute53GetQueryLoggingConfigInput!, config: AwsConfig): AwsRoute53GetQueryLoggingConfigOutput
  getReusableDelegationSet(input: AwsRoute53GetReusableDelegationSetInput!, config: AwsConfig): AwsRoute53GetReusableDelegationSetOutput
  getReusableDelegationSetLimit(input: AwsRoute53GetReusableDelegationSetLimitInput!, config: AwsConfig): AwsRoute53GetReusableDelegationSetLimitOutput
  getTrafficPolicy(input: AwsRoute53GetTrafficPolicyInput!, config: AwsConfig): AwsRoute53GetTrafficPolicyOutput
  getTrafficPolicyInstance(input: AwsRoute53GetTrafficPolicyInstanceInput!, config: AwsConfig): AwsRoute53GetTrafficPolicyInstanceOutput
  getTrafficPolicyInstanceCount(input: JSON, config: AwsConfig): AwsRoute53GetTrafficPolicyInstanceCountOutput
  listGeoLocations(input: AwsRoute53ListGeoLocationsInput, config: AwsConfig): AwsRoute53ListGeoLocationsOutput
  listHealthChecks(input: AwsRoute53ListHealthChecksInput, config: AwsConfig): AwsRoute53ListHealthChecksOutput
  listHostedZones(input: AwsRoute53ListHostedZonesInput, config: AwsConfig): AwsRoute53ListHostedZonesOutput
  listHostedZonesByName(input: AwsRoute53ListHostedZonesByNameInput, config: AwsConfig): AwsRoute53ListHostedZonesByNameOutput
  listQueryLoggingConfigs(input: AwsRoute53ListQueryLoggingConfigsInput, config: AwsConfig): AwsRoute53ListQueryLoggingConfigsOutput
  listResourceRecordSets(input: AwsRoute53ListResourceRecordSetsInput!, config: AwsConfig): AwsRoute53ListResourceRecordSetsOutput
  listReusableDelegationSets(input: AwsRoute53ListReusableDelegationSetsInput, config: AwsConfig): AwsRoute53ListReusableDelegationSetsOutput
  listTagsForResource(input: AwsRoute53ListTagsForResourceInput!, config: AwsConfig): AwsRoute53ListTagsForResourceOutput
  listTagsForResources(input: AwsRoute53ListTagsForResourcesInput!, config: AwsConfig): AwsRoute53ListTagsForResourcesOutput
  listTrafficPolicies(input: AwsRoute53ListTrafficPoliciesInput, config: AwsConfig): AwsRoute53ListTrafficPoliciesOutput
  listTrafficPolicyInstances(input: AwsRoute53ListTrafficPolicyInstancesInput, config: AwsConfig): AwsRoute53ListTrafficPolicyInstancesOutput
  listTrafficPolicyInstancesByHostedZone(input: AwsRoute53ListTrafficPolicyInstancesByHostedZoneInput!, config: AwsConfig): AwsRoute53ListTrafficPolicyInstancesByHostedZoneOutput
  listTrafficPolicyInstancesByPolicy(input: AwsRoute53ListTrafficPolicyInstancesByPolicyInput!, config: AwsConfig): AwsRoute53ListTrafficPolicyInstancesByPolicyOutput
  listTrafficPolicyVersions(input: AwsRoute53ListTrafficPolicyVersionsInput!, config: AwsConfig): AwsRoute53ListTrafficPolicyVersionsOutput
  listVPCAssociationAuthorizations(input: AwsRoute53ListVPCAssociationAuthorizationsInput!, config: AwsConfig): AwsRoute53ListVPCAssociationAuthorizationsOutput
  testDNSAnswer(input: AwsRoute53TestDNSAnswerInput!, config: AwsConfig): AwsRoute53TestDNSAnswerOutput
  updateHealthCheck(input: AwsRoute53UpdateHealthCheckInput!, config: AwsConfig): AwsRoute53UpdateHealthCheckOutput
  updateHostedZoneComment(input: AwsRoute53UpdateHostedZoneCommentInput!, config: AwsConfig): AwsRoute53UpdateHostedZoneCommentOutput
  updateTrafficPolicyComment(input: AwsRoute53UpdateTrafficPolicyCommentInput!, config: AwsConfig): AwsRoute53UpdateTrafficPolicyCommentOutput
  updateTrafficPolicyInstance(input: AwsRoute53UpdateTrafficPolicyInstanceInput!, config: AwsConfig): AwsRoute53UpdateTrafficPolicyInstanceOutput
}

input AwsRoute53AssociateVPCWithHostedZoneInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
  Comment: String
}

type AwsRoute53AssociateVPCWithHostedZoneOutput {
  ChangeInfo: AwsRoute53S8!
}

input AwsRoute53ChangeResourceRecordSetsChangeBatchChangesInput {
  Action: String!
  ResourceRecordSet: AwsRoute53ShInput!
}

input AwsRoute53ChangeResourceRecordSetsChangeBatchInput {
  Comment: String
  Changes: [AwsRoute53ChangeResourceRecordSetsChangeBatchChangesInput]!
}

input AwsRoute53ChangeResourceRecordSetsInput {
  HostedZoneId: String!
  ChangeBatch: AwsRoute53ChangeResourceRecordSetsChangeBatchInput!
}

type AwsRoute53ChangeResourceRecordSetsOutput {
  ChangeInfo: AwsRoute53S8!
}

input AwsRoute53ChangeTagsForResourceInput {
  ResourceType: String!
  ResourceId: String!
  AddTags: [AwsRoute53S15Input]
  RemoveTagKeys: [String]
}

input AwsRoute53CreateHealthCheckInput {
  CallerReference: String!
  HealthCheckConfig: AwsRoute53S1dInput!
}

type AwsRoute53CreateHealthCheckOutput {
  HealthCheck: AwsRoute53S1z!
  Location: String!
}

input AwsRoute53CreateHostedZoneInput {
  Name: String!
  VPC: AwsRoute53S3Input
  CallerReference: String!
  HostedZoneConfig: AwsRoute53S2hInput
  DelegationSetId: String
}

type AwsRoute53CreateHostedZoneOutput {
  HostedZone: AwsRoute53S2k!
  ChangeInfo: AwsRoute53S8!
  DelegationSet: AwsRoute53S2m!
  VPC: AwsRoute53S3
  Location: String!
}

input AwsRoute53CreateQueryLoggingConfigInput {
  HostedZoneId: String!
  CloudWatchLogsLogGroupArn: String!
}

type AwsRoute53CreateQueryLoggingConfigOutput {
  QueryLoggingConfig: AwsRoute53S2r!
  Location: String!
}

input AwsRoute53CreateReusableDelegationSetInput {
  CallerReference: String!
  HostedZoneId: String
}

type AwsRoute53CreateReusableDelegationSetOutput {
  DelegationSet: AwsRoute53S2m!
  Location: String!
}

input AwsRoute53CreateTrafficPolicyInput {
  Name: String!
  Document: String!
  Comment: String
}

input AwsRoute53CreateTrafficPolicyInstanceInput {
  HostedZoneId: String!
  Name: String!
  TTL: JSON!
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
}

type AwsRoute53CreateTrafficPolicyInstanceOutput {
  TrafficPolicyInstance: AwsRoute53S35!
  Location: String!
}

type AwsRoute53CreateTrafficPolicyOutput {
  TrafficPolicy: AwsRoute53S30!
  Location: String!
}

input AwsRoute53CreateTrafficPolicyVersionInput {
  Id: String!
  Document: String!
  Comment: String
}

type AwsRoute53CreateTrafficPolicyVersionOutput {
  TrafficPolicy: AwsRoute53S30!
  Location: String!
}

input AwsRoute53CreateVPCAssociationAuthorizationInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
}

type AwsRoute53CreateVPCAssociationAuthorizationOutput {
  HostedZoneId: String!
  VPC: AwsRoute53S3!
}

input AwsRoute53DeleteHealthCheckInput {
  HealthCheckId: String!
}

input AwsRoute53DeleteHostedZoneInput {
  Id: String!
}

type AwsRoute53DeleteHostedZoneOutput {
  ChangeInfo: AwsRoute53S8!
}

input AwsRoute53DeleteQueryLoggingConfigInput {
  Id: String!
}

input AwsRoute53DeleteReusableDelegationSetInput {
  Id: String!
}

input AwsRoute53DeleteTrafficPolicyInput {
  Id: String!
  Version: Int!
}

input AwsRoute53DeleteTrafficPolicyInstanceInput {
  Id: String!
}

input AwsRoute53DeleteVPCAssociationAuthorizationInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
}

input AwsRoute53DisassociateVPCFromHostedZoneInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
  Comment: String
}

type AwsRoute53DisassociateVPCFromHostedZoneOutput {
  ChangeInfo: AwsRoute53S8!
}

"""Amazon Route 53 Domains (2014-05-15)"""
type AwsRoute53Domains {
  checkDomainAvailability(input: AwsRoute53DomainsCheckDomainAvailabilityInput!, config: AwsConfig): AwsRoute53DomainsCheckDomainAvailabilityOutput
  checkDomainTransferability(input: AwsRoute53DomainsCheckDomainTransferabilityInput!, config: AwsConfig): AwsRoute53DomainsCheckDomainTransferabilityOutput
  deleteTagsForDomain(input: AwsRoute53DomainsDeleteTagsForDomainInput!, config: AwsConfig): JSON
  disableDomainAutoRenew(input: AwsRoute53DomainsDisableDomainAutoRenewInput!, config: AwsConfig): JSON
  disableDomainTransferLock(input: AwsRoute53DomainsDisableDomainTransferLockInput!, config: AwsConfig): AwsRoute53DomainsDisableDomainTransferLockOutput
  enableDomainAutoRenew(input: AwsRoute53DomainsEnableDomainAutoRenewInput!, config: AwsConfig): JSON
  enableDomainTransferLock(input: AwsRoute53DomainsEnableDomainTransferLockInput!, config: AwsConfig): AwsRoute53DomainsEnableDomainTransferLockOutput
  getContactReachabilityStatus(input: AwsRoute53DomainsGetContactReachabilityStatusInput, config: AwsConfig): AwsRoute53DomainsGetContactReachabilityStatusOutput
  getDomainDetail(input: AwsRoute53DomainsGetDomainDetailInput!, config: AwsConfig): AwsRoute53DomainsGetDomainDetailOutput
  getDomainSuggestions(input: AwsRoute53DomainsGetDomainSuggestionsInput!, config: AwsConfig): AwsRoute53DomainsGetDomainSuggestionsOutput
  getOperationDetail(input: AwsRoute53DomainsGetOperationDetailInput!, config: AwsConfig): AwsRoute53DomainsGetOperationDetailOutput
  listDomains(input: AwsRoute53DomainsListDomainsInput, config: AwsConfig): AwsRoute53DomainsListDomainsOutput
  listOperations(input: AwsRoute53DomainsListOperationsInput, config: AwsConfig): AwsRoute53DomainsListOperationsOutput
  listTagsForDomain(input: AwsRoute53DomainsListTagsForDomainInput!, config: AwsConfig): AwsRoute53DomainsListTagsForDomainOutput
  registerDomain(input: AwsRoute53DomainsRegisterDomainInput!, config: AwsConfig): AwsRoute53DomainsRegisterDomainOutput
  renewDomain(input: AwsRoute53DomainsRenewDomainInput!, config: AwsConfig): AwsRoute53DomainsRenewDomainOutput
  resendContactReachabilityEmail(input: AwsRoute53DomainsResendContactReachabilityEmailInput, config: AwsConfig): AwsRoute53DomainsResendContactReachabilityEmailOutput
  retrieveDomainAuthCode(input: AwsRoute53DomainsRetrieveDomainAuthCodeInput!, config: AwsConfig): AwsRoute53DomainsRetrieveDomainAuthCodeOutput
  transferDomain(input: AwsRoute53DomainsTransferDomainInput!, config: AwsConfig): AwsRoute53DomainsTransferDomainOutput
  updateDomainContact(input: AwsRoute53DomainsUpdateDomainContactInput!, config: AwsConfig): AwsRoute53DomainsUpdateDomainContactOutput
  updateDomainContactPrivacy(input: AwsRoute53DomainsUpdateDomainContactPrivacyInput!, config: AwsConfig): AwsRoute53DomainsUpdateDomainContactPrivacyOutput
  updateDomainNameservers(input: AwsRoute53DomainsUpdateDomainNameserversInput!, config: AwsConfig): AwsRoute53DomainsUpdateDomainNameserversOutput
  updateTagsForDomain(input: AwsRoute53DomainsUpdateTagsForDomainInput!, config: AwsConfig): JSON
  viewBilling(input: AwsRoute53DomainsViewBillingInput, config: AwsConfig): AwsRoute53DomainsViewBillingOutput
}

input AwsRoute53DomainsCheckDomainAvailabilityInput {
  DomainName: String!
  IdnLangCode: String
}

type AwsRoute53DomainsCheckDomainAvailabilityOutput {
  Availability: String!
}

input AwsRoute53DomainsCheckDomainTransferabilityInput {
  DomainName: String!
  AuthCode: String
}

type AwsRoute53DomainsCheckDomainTransferabilityOutput {
  Transferability: AwsRoute53DomainsCheckDomainTransferabilityOutputTransferability!
}

type AwsRoute53DomainsCheckDomainTransferabilityOutputTransferability {
  Transferable: String
}

input AwsRoute53DomainsDeleteTagsForDomainInput {
  DomainName: String!
  TagsToDelete: [String]!
}

input AwsRoute53DomainsDisableDomainAutoRenewInput {
  DomainName: String!
}

input AwsRoute53DomainsDisableDomainTransferLockInput {
  DomainName: String!
}

type AwsRoute53DomainsDisableDomainTransferLockOutput {
  OperationId: String!
}

input AwsRoute53DomainsEnableDomainAutoRenewInput {
  DomainName: String!
}

input AwsRoute53DomainsEnableDomainTransferLockInput {
  DomainName: String!
}

type AwsRoute53DomainsEnableDomainTransferLockOutput {
  OperationId: String!
}

input AwsRoute53DomainsGetContactReachabilityStatusInput {
  domainName: String
}

type AwsRoute53DomainsGetContactReachabilityStatusOutput {
  domainName: String
  status: String
}

input AwsRoute53DomainsGetDomainDetailInput {
  DomainName: String!
}

type AwsRoute53DomainsGetDomainDetailOutput {
  DomainName: String!
  Nameservers: [AwsRoute53DomainsSt]!
  AutoRenew: Boolean
  AdminContact: AwsRoute53DomainsSz!
  RegistrantContact: AwsRoute53DomainsSz!
  TechContact: AwsRoute53DomainsSz!
  AdminPrivacy: Boolean
  RegistrantPrivacy: Boolean
  TechPrivacy: Boolean
  RegistrarName: String
  WhoIsServer: String
  RegistrarUrl: String
  AbuseContactEmail: String
  AbuseContactPhone: String
  RegistryDomainId: String
  CreationDate: Date
  UpdatedDate: Date
  ExpirationDate: Date
  Reseller: String
  DnsSec: String
  StatusList: [String]
}

input AwsRoute53DomainsGetDomainSuggestionsInput {
  DomainName: String!
  SuggestionCount: Int!
  OnlyAvailable: Boolean!
}

type AwsRoute53DomainsGetDomainSuggestionsOutput {
  SuggestionsList: [AwsRoute53DomainsGetDomainSuggestionsOutputSuggestionsList]
}

type AwsRoute53DomainsGetDomainSuggestionsOutputSuggestionsList {
  DomainName: String
  Availability: String
}

input AwsRoute53DomainsGetOperationDetailInput {
  OperationId: String!
}

type AwsRoute53DomainsGetOperationDetailOutput {
  OperationId: String
  Status: String
  Message: String
  DomainName: String
  Type: String
  SubmittedDate: Date
}

input AwsRoute53DomainsListDomainsInput {
  Marker: String
  MaxItems: Int
}

type AwsRoute53DomainsListDomainsOutput {
  Domains: [AwsRoute53DomainsListDomainsOutputDomains]!
  NextPageMarker: String
}

type AwsRoute53DomainsListDomainsOutputDomains {
  DomainName: String!
  AutoRenew: Boolean
  TransferLock: Boolean
  Expiry: Date
}

input AwsRoute53DomainsListOperationsInput {
  SubmittedSince: Date
  Marker: String
  MaxItems: Int
}

type AwsRoute53DomainsListOperationsOutput {
  Operations: [AwsRoute53DomainsListOperationsOutputOperations]!
  NextPageMarker: String
}

type AwsRoute53DomainsListOperationsOutputOperations {
  OperationId: String!
  Status: String!
  Type: String!
  SubmittedDate: Date!
}

input AwsRoute53DomainsListTagsForDomainInput {
  DomainName: String!
}

type AwsRoute53DomainsListTagsForDomainOutput {
  TagList: [AwsRoute53DomainsS29]!
}

input AwsRoute53DomainsRegisterDomainInput {
  DomainName: String!
  IdnLangCode: String
  DurationInYears: Int!
  AutoRenew: Boolean
  AdminContact: AwsRoute53DomainsSzInput!
  RegistrantContact: AwsRoute53DomainsSzInput!
  TechContact: AwsRoute53DomainsSzInput!
  PrivacyProtectAdminContact: Boolean
  PrivacyProtectRegistrantContact: Boolean
  PrivacyProtectTechContact: Boolean
}

type AwsRoute53DomainsRegisterDomainOutput {
  OperationId: String!
}

input AwsRoute53DomainsRenewDomainInput {
  DomainName: String!
  DurationInYears: Int
  CurrentExpiryYear: Int!
}

type AwsRoute53DomainsRenewDomainOutput {
  OperationId: String!
}

input AwsRoute53DomainsResendContactReachabilityEmailInput {
  domainName: String
}

type AwsRoute53DomainsResendContactReachabilityEmailOutput {
  domainName: String
  emailAddress: String
  isAlreadyVerified: Boolean
}

input AwsRoute53DomainsRetrieveDomainAuthCodeInput {
  DomainName: String!
}

type AwsRoute53DomainsRetrieveDomainAuthCodeOutput {
  AuthCode: String!
}

type AwsRoute53DomainsS29 {
  Key: String
  Value: String
}

input AwsRoute53DomainsS29Input {
  Key: String
  Value: String
}

type AwsRoute53DomainsSt {
  Name: String!
  GlueIps: [String]
}

input AwsRoute53DomainsStInput {
  Name: String!
  GlueIps: [String]
}

type AwsRoute53DomainsSz {
  FirstName: String
  LastName: String
  ContactType: String
  OrganizationName: String
  AddressLine1: String
  AddressLine2: String
  City: String
  State: String
  CountryCode: String
  ZipCode: String
  PhoneNumber: String
  Email: String
  Fax: String
  ExtraParams: [AwsRoute53DomainsSzExtraParams]
}

type AwsRoute53DomainsSzExtraParams {
  Name: String!
  Value: String!
}

input AwsRoute53DomainsSzExtraParamsInput {
  Name: String!
  Value: String!
}

input AwsRoute53DomainsSzInput {
  FirstName: String
  LastName: String
  ContactType: String
  OrganizationName: String
  AddressLine1: String
  AddressLine2: String
  City: String
  State: String
  CountryCode: String
  ZipCode: String
  PhoneNumber: String
  Email: String
  Fax: String
  ExtraParams: [AwsRoute53DomainsSzExtraParamsInput]
}

input AwsRoute53DomainsTransferDomainInput {
  DomainName: String!
  IdnLangCode: String
  DurationInYears: Int!
  Nameservers: [AwsRoute53DomainsStInput]
  AuthCode: String
  AutoRenew: Boolean
  AdminContact: AwsRoute53DomainsSzInput!
  RegistrantContact: AwsRoute53DomainsSzInput!
  TechContact: AwsRoute53DomainsSzInput!
  PrivacyProtectAdminContact: Boolean
  PrivacyProtectRegistrantContact: Boolean
  PrivacyProtectTechContact: Boolean
}

type AwsRoute53DomainsTransferDomainOutput {
  OperationId: String!
}

input AwsRoute53DomainsUpdateDomainContactInput {
  DomainName: String!
  AdminContact: AwsRoute53DomainsSzInput
  RegistrantContact: AwsRoute53DomainsSzInput
  TechContact: AwsRoute53DomainsSzInput
}

type AwsRoute53DomainsUpdateDomainContactOutput {
  OperationId: String!
}

input AwsRoute53DomainsUpdateDomainContactPrivacyInput {
  DomainName: String!
  AdminPrivacy: Boolean
  RegistrantPrivacy: Boolean
  TechPrivacy: Boolean
}

type AwsRoute53DomainsUpdateDomainContactPrivacyOutput {
  OperationId: String!
}

input AwsRoute53DomainsUpdateDomainNameserversInput {
  DomainName: String!
  FIAuthKey: String
  Nameservers: [AwsRoute53DomainsStInput]!
}

type AwsRoute53DomainsUpdateDomainNameserversOutput {
  OperationId: String!
}

input AwsRoute53DomainsUpdateTagsForDomainInput {
  DomainName: String!
  TagsToUpdate: [AwsRoute53DomainsS29Input]
}

input AwsRoute53DomainsViewBillingInput {
  Start: Date
  End: Date
  Marker: String
  MaxItems: Int
}

type AwsRoute53DomainsViewBillingOutput {
  NextPageMarker: String
  BillingRecords: [AwsRoute53DomainsViewBillingOutputBillingRecords]
}

type AwsRoute53DomainsViewBillingOutputBillingRecords {
  DomainName: String
  Operation: String
  InvoiceId: String
  BillDate: Date
  Price: JSON
}

input AwsRoute53GetAccountLimitInput {
  Type: String!
}

type AwsRoute53GetAccountLimitOutput {
  Limit: AwsRoute53GetAccountLimitOutputLimit!
  Count: JSON!
}

type AwsRoute53GetAccountLimitOutputLimit {
  Type: String!
  Value: JSON!
}

input AwsRoute53GetChangeInput {
  Id: String!
}

type AwsRoute53GetChangeOutput {
  ChangeInfo: AwsRoute53S8!
}

type AwsRoute53GetCheckerIpRangesOutput {
  CheckerIpRanges: [String]!
}

input AwsRoute53GetGeoLocationInput {
  ContinentCode: String
  CountryCode: String
  SubdivisionCode: String
}

type AwsRoute53GetGeoLocationOutput {
  GeoLocationDetails: AwsRoute53S47!
}

type AwsRoute53GetHealthCheckCountOutput {
  HealthCheckCount: JSON!
}

input AwsRoute53GetHealthCheckInput {
  HealthCheckId: String!
}

input AwsRoute53GetHealthCheckLastFailureReasonInput {
  HealthCheckId: String!
}

type AwsRoute53GetHealthCheckLastFailureReasonOutput {
  HealthCheckObservations: [AwsRoute53S4i]!
}

type AwsRoute53GetHealthCheckOutput {
  HealthCheck: AwsRoute53S1z!
}

input AwsRoute53GetHealthCheckStatusInput {
  HealthCheckId: String!
}

type AwsRoute53GetHealthCheckStatusOutput {
  HealthCheckObservations: [AwsRoute53S4i]!
}

type AwsRoute53GetHostedZoneCountOutput {
  HostedZoneCount: JSON!
}

input AwsRoute53GetHostedZoneInput {
  Id: String!
}

input AwsRoute53GetHostedZoneLimitInput {
  Type: String!
  HostedZoneId: String!
}

type AwsRoute53GetHostedZoneLimitOutput {
  Limit: AwsRoute53GetHostedZoneLimitOutputLimit!
  Count: JSON!
}

type AwsRoute53GetHostedZoneLimitOutputLimit {
  Type: String!
  Value: JSON!
}

type AwsRoute53GetHostedZoneOutput {
  HostedZone: AwsRoute53S2k!
  DelegationSet: AwsRoute53S2m
  VPCs: [AwsRoute53S3]
}

input AwsRoute53GetQueryLoggingConfigInput {
  Id: String!
}

type AwsRoute53GetQueryLoggingConfigOutput {
  QueryLoggingConfig: AwsRoute53S2r!
}

input AwsRoute53GetReusableDelegationSetInput {
  Id: String!
}

input AwsRoute53GetReusableDelegationSetLimitInput {
  Type: String!
  DelegationSetId: String!
}

type AwsRoute53GetReusableDelegationSetLimitOutput {
  Limit: AwsRoute53GetReusableDelegationSetLimitOutputLimit!
  Count: JSON!
}

type AwsRoute53GetReusableDelegationSetLimitOutputLimit {
  Type: String!
  Value: JSON!
}

type AwsRoute53GetReusableDelegationSetOutput {
  DelegationSet: AwsRoute53S2m!
}

input AwsRoute53GetTrafficPolicyInput {
  Id: String!
  Version: Int!
}

type AwsRoute53GetTrafficPolicyInstanceCountOutput {
  TrafficPolicyInstanceCount: Int!
}

input AwsRoute53GetTrafficPolicyInstanceInput {
  Id: String!
}

type AwsRoute53GetTrafficPolicyInstanceOutput {
  TrafficPolicyInstance: AwsRoute53S35!
}

type AwsRoute53GetTrafficPolicyOutput {
  TrafficPolicy: AwsRoute53S30!
}

input AwsRoute53ListGeoLocationsInput {
  StartContinentCode: String
  StartCountryCode: String
  StartSubdivisionCode: String
  MaxItems: String
}

type AwsRoute53ListGeoLocationsOutput {
  GeoLocationDetailsList: [AwsRoute53S47]!
  IsTruncated: Boolean!
  NextContinentCode: String
  NextCountryCode: String
  NextSubdivisionCode: String
  MaxItems: String!
}

input AwsRoute53ListHealthChecksInput {
  Marker: String
  MaxItems: String
}

type AwsRoute53ListHealthChecksOutput {
  HealthChecks: [AwsRoute53S1z]!
  Marker: String!
  IsTruncated: Boolean!
  NextMarker: String
  MaxItems: String!
}

input AwsRoute53ListHostedZonesByNameInput {
  DNSName: String
  HostedZoneId: String
  MaxItems: String
}

type AwsRoute53ListHostedZonesByNameOutput {
  HostedZones: [AwsRoute53S2k]!
  DNSName: String
  HostedZoneId: String
  IsTruncated: Boolean!
  NextDNSName: String
  NextHostedZoneId: String
  MaxItems: String!
}

input AwsRoute53ListHostedZonesInput {
  Marker: String
  MaxItems: String
  DelegationSetId: String
}

type AwsRoute53ListHostedZonesOutput {
  HostedZones: [AwsRoute53S2k]!
  Marker: String!
  IsTruncated: Boolean!
  NextMarker: String
  MaxItems: String!
}

input AwsRoute53ListQueryLoggingConfigsInput {
  HostedZoneId: String
  NextToken: String
  MaxResults: String
}

type AwsRoute53ListQueryLoggingConfigsOutput {
  QueryLoggingConfigs: [AwsRoute53S2r]!
  NextToken: String
}

input AwsRoute53ListResourceRecordSetsInput {
  HostedZoneId: String!
  StartRecordName: String
  StartRecordType: String
  StartRecordIdentifier: String
  MaxItems: String
}

type AwsRoute53ListResourceRecordSetsOutput {
  ResourceRecordSets: [AwsRoute53Sh]!
  IsTruncated: Boolean!
  NextRecordName: String
  NextRecordType: String
  NextRecordIdentifier: String
  MaxItems: String!
}

input AwsRoute53ListReusableDelegationSetsInput {
  Marker: String
  MaxItems: String
}

type AwsRoute53ListReusableDelegationSetsOutput {
  DelegationSets: [AwsRoute53S2m]!
  Marker: String!
  IsTruncated: Boolean!
  NextMarker: String
  MaxItems: String!
}

input AwsRoute53ListTagsForResourceInput {
  ResourceType: String!
  ResourceId: String!
}

type AwsRoute53ListTagsForResourceOutput {
  ResourceTagSet: AwsRoute53S64!
}

input AwsRoute53ListTagsForResourcesInput {
  ResourceType: String!
  ResourceIds: [String]!
}

type AwsRoute53ListTagsForResourcesOutput {
  ResourceTagSets: [AwsRoute53S64]!
}

input AwsRoute53ListTrafficPoliciesInput {
  TrafficPolicyIdMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPoliciesOutput {
  TrafficPolicySummaries: [AwsRoute53ListTrafficPoliciesOutputTrafficPolicySummaries]!
  IsTruncated: Boolean!
  TrafficPolicyIdMarker: String!
  MaxItems: String!
}

type AwsRoute53ListTrafficPoliciesOutputTrafficPolicySummaries {
  Id: String!
  Name: String!
  Type: String!
  LatestVersion: Int!
  TrafficPolicyCount: Int!
}

input AwsRoute53ListTrafficPolicyInstancesByHostedZoneInput {
  HostedZoneId: String!
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyInstancesByHostedZoneOutput {
  TrafficPolicyInstances: [AwsRoute53S35]!
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  IsTruncated: Boolean!
  MaxItems: String!
}

input AwsRoute53ListTrafficPolicyInstancesByPolicyInput {
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyInstancesByPolicyOutput {
  TrafficPolicyInstances: [AwsRoute53S35]!
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  IsTruncated: Boolean!
  MaxItems: String!
}

input AwsRoute53ListTrafficPolicyInstancesInput {
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyInstancesOutput {
  TrafficPolicyInstances: [AwsRoute53S35]!
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  IsTruncated: Boolean!
  MaxItems: String!
}

input AwsRoute53ListTrafficPolicyVersionsInput {
  Id: String!
  TrafficPolicyVersionMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyVersionsOutput {
  TrafficPolicies: [AwsRoute53S30]!
  IsTruncated: Boolean!
  TrafficPolicyVersionMarker: String!
  MaxItems: String!
}

input AwsRoute53ListVPCAssociationAuthorizationsInput {
  HostedZoneId: String!
  NextToken: String
  MaxResults: String
}

type AwsRoute53ListVPCAssociationAuthorizationsOutput {
  HostedZoneId: String!
  NextToken: String
  VPCs: [AwsRoute53S3]!
}

"""Amazon Route 53 Resolver (2018-04-01)"""
type AwsRoute53Resolver {
  associateResolverEndpointIpAddress(input: AwsRoute53ResolverAssociateResolverEndpointIpAddressInput!, config: AwsConfig): AwsRoute53ResolverAssociateResolverEndpointIpAddressOutput
  associateResolverRule(input: AwsRoute53ResolverAssociateResolverRuleInput!, config: AwsConfig): AwsRoute53ResolverAssociateResolverRuleOutput
  createResolverEndpoint(input: AwsRoute53ResolverCreateResolverEndpointInput!, config: AwsConfig): AwsRoute53ResolverCreateResolverEndpointOutput
  createResolverRule(input: AwsRoute53ResolverCreateResolverRuleInput!, config: AwsConfig): AwsRoute53ResolverCreateResolverRuleOutput
  deleteResolverEndpoint(input: AwsRoute53ResolverDeleteResolverEndpointInput!, config: AwsConfig): AwsRoute53ResolverDeleteResolverEndpointOutput
  deleteResolverRule(input: AwsRoute53ResolverDeleteResolverRuleInput!, config: AwsConfig): AwsRoute53ResolverDeleteResolverRuleOutput
  disassociateResolverEndpointIpAddress(input: AwsRoute53ResolverDisassociateResolverEndpointIpAddressInput!, config: AwsConfig): AwsRoute53ResolverDisassociateResolverEndpointIpAddressOutput
  disassociateResolverRule(input: AwsRoute53ResolverDisassociateResolverRuleInput!, config: AwsConfig): AwsRoute53ResolverDisassociateResolverRuleOutput
  getResolverEndpoint(input: AwsRoute53ResolverGetResolverEndpointInput!, config: AwsConfig): AwsRoute53ResolverGetResolverEndpointOutput
  getResolverRule(input: AwsRoute53ResolverGetResolverRuleInput!, config: AwsConfig): AwsRoute53ResolverGetResolverRuleOutput
  getResolverRuleAssociation(input: AwsRoute53ResolverGetResolverRuleAssociationInput!, config: AwsConfig): AwsRoute53ResolverGetResolverRuleAssociationOutput
  getResolverRulePolicy(input: AwsRoute53ResolverGetResolverRulePolicyInput!, config: AwsConfig): AwsRoute53ResolverGetResolverRulePolicyOutput
  listResolverEndpointIpAddresses(input: AwsRoute53ResolverListResolverEndpointIpAddressesInput!, config: AwsConfig): AwsRoute53ResolverListResolverEndpointIpAddressesOutput
  listResolverEndpoints(input: AwsRoute53ResolverListResolverEndpointsInput, config: AwsConfig): AwsRoute53ResolverListResolverEndpointsOutput
  listResolverRuleAssociations(input: AwsRoute53ResolverListResolverRuleAssociationsInput, config: AwsConfig): AwsRoute53ResolverListResolverRuleAssociationsOutput
  listResolverRules(input: AwsRoute53ResolverListResolverRulesInput, config: AwsConfig): AwsRoute53ResolverListResolverRulesOutput
  listTagsForResource(input: AwsRoute53ResolverListTagsForResourceInput!, config: AwsConfig): AwsRoute53ResolverListTagsForResourceOutput
  putResolverRulePolicy(input: AwsRoute53ResolverPutResolverRulePolicyInput!, config: AwsConfig): AwsRoute53ResolverPutResolverRulePolicyOutput
  tagResource(input: AwsRoute53ResolverTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsRoute53ResolverUntagResourceInput!, config: AwsConfig): JSON
  updateResolverEndpoint(input: AwsRoute53ResolverUpdateResolverEndpointInput!, config: AwsConfig): AwsRoute53ResolverUpdateResolverEndpointOutput
  updateResolverRule(input: AwsRoute53ResolverUpdateResolverRuleInput!, config: AwsConfig): AwsRoute53ResolverUpdateResolverRuleOutput
}

input AwsRoute53ResolverAssociateResolverEndpointIpAddressInput {
  ResolverEndpointId: String!
  IpAddress: AwsRoute53ResolverS3Input!
}

type AwsRoute53ResolverAssociateResolverEndpointIpAddressOutput {
  ResolverEndpoint: AwsRoute53ResolverS7
}

input AwsRoute53ResolverAssociateResolverRuleInput {
  ResolverRuleId: String!
  Name: String
  VPCId: String!
}

type AwsRoute53ResolverAssociateResolverRuleOutput {
  ResolverRuleAssociation: AwsRoute53ResolverSj
}

input AwsRoute53ResolverCreateResolverEndpointInput {
  CreatorRequestId: String!
  Name: String
  SecurityGroupIds: [String]!
  Direction: String!
  IpAddresses: [AwsRoute53ResolverCreateResolverEndpointIpAddressesInput]!
  Tags: [AwsRoute53ResolverSoInput]
}

input AwsRoute53ResolverCreateResolverEndpointIpAddressesInput {
  SubnetId: String!
  Ip: String
}

type AwsRoute53ResolverCreateResolverEndpointOutput {
  ResolverEndpoint: AwsRoute53ResolverS7
}

input AwsRoute53ResolverCreateResolverRuleInput {
  CreatorRequestId: String!
  Name: String
  RuleType: String!
  DomainName: String!
  TargetIps: [AwsRoute53ResolverSwInput]
  ResolverEndpointId: String
  Tags: [AwsRoute53ResolverSoInput]
}

type AwsRoute53ResolverCreateResolverRuleOutput {
  ResolverRule: AwsRoute53ResolverS10
}

input AwsRoute53ResolverDeleteResolverEndpointInput {
  ResolverEndpointId: String!
}

type AwsRoute53ResolverDeleteResolverEndpointOutput {
  ResolverEndpoint: AwsRoute53ResolverS7
}

input AwsRoute53ResolverDeleteResolverRuleInput {
  ResolverRuleId: String!
}

type AwsRoute53ResolverDeleteResolverRuleOutput {
  ResolverRule: AwsRoute53ResolverS10
}

input AwsRoute53ResolverDisassociateResolverEndpointIpAddressInput {
  ResolverEndpointId: String!
  IpAddress: AwsRoute53ResolverS3Input!
}

type AwsRoute53ResolverDisassociateResolverEndpointIpAddressOutput {
  ResolverEndpoint: AwsRoute53ResolverS7
}

input AwsRoute53ResolverDisassociateResolverRuleInput {
  VPCId: String!
  ResolverRuleId: String!
}

type AwsRoute53ResolverDisassociateResolverRuleOutput {
  ResolverRuleAssociation: AwsRoute53ResolverSj
}

input AwsRoute53ResolverGetResolverEndpointInput {
  ResolverEndpointId: String!
}

type AwsRoute53ResolverGetResolverEndpointOutput {
  ResolverEndpoint: AwsRoute53ResolverS7
}

input AwsRoute53ResolverGetResolverRuleAssociationInput {
  ResolverRuleAssociationId: String!
}

type AwsRoute53ResolverGetResolverRuleAssociationOutput {
  ResolverRuleAssociation: AwsRoute53ResolverSj
}

input AwsRoute53ResolverGetResolverRuleInput {
  ResolverRuleId: String!
}

type AwsRoute53ResolverGetResolverRuleOutput {
  ResolverRule: AwsRoute53ResolverS10
}

input AwsRoute53ResolverGetResolverRulePolicyInput {
  Arn: String!
}

type AwsRoute53ResolverGetResolverRulePolicyOutput {
  ResolverRulePolicy: String
}

input AwsRoute53ResolverListResolverEndpointIpAddressesInput {
  ResolverEndpointId: String!
  MaxResults: Int
  NextToken: String
}

type AwsRoute53ResolverListResolverEndpointIpAddressesOutput {
  NextToken: String
  MaxResults: Int
  IpAddresses: [AwsRoute53ResolverListResolverEndpointIpAddressesOutputIpAddresses]
}

type AwsRoute53ResolverListResolverEndpointIpAddressesOutputIpAddresses {
  IpId: String
  SubnetId: String
  Ip: String
  Status: String
  StatusMessage: String
  CreationTime: String
  ModificationTime: String
}

input AwsRoute53ResolverListResolverEndpointsInput {
  MaxResults: Int
  NextToken: String
  Filters: [AwsRoute53ResolverS1tInput]
}

type AwsRoute53ResolverListResolverEndpointsOutput {
  NextToken: String
  MaxResults: Int
  ResolverEndpoints: [AwsRoute53ResolverS7]
}

input AwsRoute53ResolverListResolverRuleAssociationsInput {
  MaxResults: Int
  NextToken: String
  Filters: [AwsRoute53ResolverS1tInput]
}

type AwsRoute53ResolverListResolverRuleAssociationsOutput {
  NextToken: String
  MaxResults: Int
  ResolverRuleAssociations: [AwsRoute53ResolverSj]
}

input AwsRoute53ResolverListResolverRulesInput {
  MaxResults: Int
  NextToken: String
  Filters: [AwsRoute53ResolverS1tInput]
}

type AwsRoute53ResolverListResolverRulesOutput {
  NextToken: String
  MaxResults: Int
  ResolverRules: [AwsRoute53ResolverS10]
}

input AwsRoute53ResolverListTagsForResourceInput {
  ResourceArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsRoute53ResolverListTagsForResourceOutput {
  Tags: [AwsRoute53ResolverSo]
  NextToken: String
}

input AwsRoute53ResolverPutResolverRulePolicyInput {
  Arn: String!
  ResolverRulePolicy: String!
}

type AwsRoute53ResolverPutResolverRulePolicyOutput {
  ReturnValue: Boolean
}

type AwsRoute53ResolverS10 {
  Id: String
  CreatorRequestId: String
  Arn: String
  DomainName: String
  Status: String
  StatusMessage: String
  RuleType: String
  Name: String
  TargetIps: [AwsRoute53ResolverSw]
  ResolverEndpointId: String
  OwnerId: String
  ShareStatus: String
}

input AwsRoute53ResolverS1tInput {
  Name: String
  Values: [String]
}

input AwsRoute53ResolverS3Input {
  IpId: String
  SubnetId: String
  Ip: String
}

type AwsRoute53ResolverS7 {
  Id: String
  CreatorRequestId: String
  Arn: String
  Name: String
  SecurityGroupIds: [String]
  Direction: String
  IpAddressCount: Int
  HostVPCId: String
  Status: String
  StatusMessage: String
  CreationTime: String
  ModificationTime: String
}

type AwsRoute53ResolverSj {
  Id: String
  ResolverRuleId: String
  Name: String
  VPCId: String
  Status: String
  StatusMessage: String
}

type AwsRoute53ResolverSo {
  Key: String
  Value: String
}

input AwsRoute53ResolverSoInput {
  Key: String
  Value: String
}

type AwsRoute53ResolverSw {
  Ip: String!
  Port: Int
}

input AwsRoute53ResolverSwInput {
  Ip: String!
  Port: Int
}

input AwsRoute53ResolverTagResourceInput {
  ResourceArn: String!
  Tags: [AwsRoute53ResolverSoInput]!
}

input AwsRoute53ResolverUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsRoute53ResolverUpdateResolverEndpointInput {
  ResolverEndpointId: String!
  Name: String
}

type AwsRoute53ResolverUpdateResolverEndpointOutput {
  ResolverEndpoint: AwsRoute53ResolverS7
}

input AwsRoute53ResolverUpdateResolverRuleConfigInput {
  Name: String
  TargetIps: [AwsRoute53ResolverSwInput]
  ResolverEndpointId: String
}

input AwsRoute53ResolverUpdateResolverRuleInput {
  ResolverRuleId: String!
  Config: AwsRoute53ResolverUpdateResolverRuleConfigInput!
}

type AwsRoute53ResolverUpdateResolverRuleOutput {
  ResolverRule: AwsRoute53ResolverS10
}

type AwsRoute53S15 {
  Key: String
  Value: String
}

input AwsRoute53S15Input {
  Key: String
  Value: String
}

type AwsRoute53S1d {
  IPAddress: String
  Port: Int
  Type: String!
  ResourcePath: String
  FullyQualifiedDomainName: String
  SearchString: String
  RequestInterval: Int
  FailureThreshold: Int
  MeasureLatency: Boolean
  Inverted: Boolean
  Disabled: Boolean
  HealthThreshold: Int
  ChildHealthChecks: [String]
  EnableSNI: Boolean
  Regions: [String]
  AlarmIdentifier: AwsRoute53S1u
  InsufficientDataHealthStatus: String
}

input AwsRoute53S1dInput {
  IPAddress: String
  Port: Int
  Type: String!
  ResourcePath: String
  FullyQualifiedDomainName: String
  SearchString: String
  RequestInterval: Int
  FailureThreshold: Int
  MeasureLatency: Boolean
  Inverted: Boolean
  Disabled: Boolean
  HealthThreshold: Int
  ChildHealthChecks: [String]
  EnableSNI: Boolean
  Regions: [String]
  AlarmIdentifier: AwsRoute53S1uInput
  InsufficientDataHealthStatus: String
}

type AwsRoute53S1u {
  Region: String!
  Name: String!
}

input AwsRoute53S1uInput {
  Region: String!
  Name: String!
}

type AwsRoute53S1z {
  Id: String!
  CallerReference: String!
  LinkedService: AwsRoute53S20
  HealthCheckConfig: AwsRoute53S1d!
  HealthCheckVersion: JSON!
  CloudWatchAlarmConfiguration: AwsRoute53S1zCloudWatchAlarmConfiguration
}

type AwsRoute53S1zCloudWatchAlarmConfiguration {
  EvaluationPeriods: Int!
  Threshold: JSON!
  ComparisonOperator: String!
  Period: Int!
  MetricName: String!
  Namespace: String!
  Statistic: String!
  Dimensions: [AwsRoute53S1zCloudWatchAlarmConfigurationDimensions]
}

type AwsRoute53S1zCloudWatchAlarmConfigurationDimensions {
  Name: String!
  Value: String!
}

type AwsRoute53S20 {
  ServicePrincipal: String
  Description: String
}

type AwsRoute53S2h {
  Comment: String
  PrivateZone: Boolean
}

input AwsRoute53S2hInput {
  Comment: String
  PrivateZone: Boolean
}

type AwsRoute53S2k {
  Id: String!
  Name: String!
  CallerReference: String!
  Config: AwsRoute53S2h
  ResourceRecordSetCount: JSON
  LinkedService: AwsRoute53S20
}

type AwsRoute53S2m {
  Id: String
  CallerReference: String
  NameServers: [String]!
}

type AwsRoute53S2r {
  Id: String!
  HostedZoneId: String!
  CloudWatchLogsLogGroupArn: String!
}

type AwsRoute53S3 {
  VPCRegion: String
  VPCId: String
}

type AwsRoute53S30 {
  Id: String!
  Version: Int!
  Name: String!
  Type: String!
  Document: String!
  Comment: String
}

type AwsRoute53S35 {
  Id: String!
  HostedZoneId: String!
  Name: String!
  TTL: JSON!
  State: String!
  Message: String!
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
  TrafficPolicyType: String!
}

input AwsRoute53S3Input {
  VPCRegion: String
  VPCId: String
}

type AwsRoute53S47 {
  ContinentCode: String
  ContinentName: String
  CountryCode: String
  CountryName: String
  SubdivisionCode: String
  SubdivisionName: String
}

type AwsRoute53S4i {
  Region: String
  IPAddress: String
  StatusReport: AwsRoute53S4iStatusReport
}

type AwsRoute53S4iStatusReport {
  Status: String
  CheckedTime: Date
}

type AwsRoute53S64 {
  ResourceType: String
  ResourceId: String
  Tags: [AwsRoute53S15]
}

type AwsRoute53S8 {
  Id: String!
  Status: String!
  SubmittedAt: Date!
  Comment: String
}

type AwsRoute53Sh {
  Name: String!
  Type: String!
  SetIdentifier: String
  Weight: JSON
  Region: String
  GeoLocation: AwsRoute53ShGeoLocation
  Failover: String
  MultiValueAnswer: Boolean
  TTL: JSON
  ResourceRecords: [AwsRoute53ShResourceRecords]
  AliasTarget: AwsRoute53ShAliasTarget
  HealthCheckId: String
  TrafficPolicyInstanceId: String
}

type AwsRoute53ShAliasTarget {
  HostedZoneId: String!
  DNSName: String!
  EvaluateTargetHealth: Boolean!
}

input AwsRoute53ShAliasTargetInput {
  HostedZoneId: String!
  DNSName: String!
  EvaluateTargetHealth: Boolean!
}

type AwsRoute53ShGeoLocation {
  ContinentCode: String
  CountryCode: String
  SubdivisionCode: String
}

input AwsRoute53ShGeoLocationInput {
  ContinentCode: String
  CountryCode: String
  SubdivisionCode: String
}

input AwsRoute53ShInput {
  Name: String!
  Type: String!
  SetIdentifier: String
  Weight: JSON
  Region: String
  GeoLocation: AwsRoute53ShGeoLocationInput
  Failover: String
  MultiValueAnswer: Boolean
  TTL: JSON
  ResourceRecords: [AwsRoute53ShResourceRecordsInput]
  AliasTarget: AwsRoute53ShAliasTargetInput
  HealthCheckId: String
  TrafficPolicyInstanceId: String
}

type AwsRoute53ShResourceRecords {
  Value: String!
}

input AwsRoute53ShResourceRecordsInput {
  Value: String!
}

input AwsRoute53TestDNSAnswerInput {
  HostedZoneId: String!
  RecordName: String!
  RecordType: String!
  ResolverIP: String
  EDNS0ClientSubnetIP: String
  EDNS0ClientSubnetMask: String
}

type AwsRoute53TestDNSAnswerOutput {
  Nameserver: String!
  RecordName: String!
  RecordType: String!
  RecordData: [String]!
  ResponseCode: String!
  Protocol: String!
}

input AwsRoute53UpdateHealthCheckInput {
  HealthCheckId: String!
  HealthCheckVersion: JSON
  IPAddress: String
  Port: Int
  ResourcePath: String
  FullyQualifiedDomainName: String
  SearchString: String
  FailureThreshold: Int
  Inverted: Boolean
  Disabled: Boolean
  HealthThreshold: Int
  ChildHealthChecks: [String]
  EnableSNI: Boolean
  Regions: [String]
  AlarmIdentifier: AwsRoute53S1uInput
  InsufficientDataHealthStatus: String
  ResetElements: [String]
}

type AwsRoute53UpdateHealthCheckOutput {
  HealthCheck: AwsRoute53S1z!
}

input AwsRoute53UpdateHostedZoneCommentInput {
  Id: String!
  Comment: String
}

type AwsRoute53UpdateHostedZoneCommentOutput {
  HostedZone: AwsRoute53S2k!
}

input AwsRoute53UpdateTrafficPolicyCommentInput {
  Id: String!
  Version: Int!
  Comment: String!
}

type AwsRoute53UpdateTrafficPolicyCommentOutput {
  TrafficPolicy: AwsRoute53S30!
}

input AwsRoute53UpdateTrafficPolicyInstanceInput {
  Id: String!
  TTL: JSON!
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
}

type AwsRoute53UpdateTrafficPolicyInstanceOutput {
  TrafficPolicyInstance: AwsRoute53S35!
}

"""Amazon Simple Storage Service (2006-03-01)"""
type AwsS3 {
  abortMultipartUpload(input: AwsS3AbortMultipartUploadInput!, config: AwsConfig): AwsS3AbortMultipartUploadOutput
  completeMultipartUpload(input: AwsS3CompleteMultipartUploadInput!, config: AwsConfig): AwsS3CompleteMultipartUploadOutput
  copyObject(input: AwsS3CopyObjectInput!, config: AwsConfig): AwsS3CopyObjectOutput
  createBucket(input: AwsS3CreateBucketInput!, config: AwsConfig): AwsS3CreateBucketOutput
  createMultipartUpload(input: AwsS3CreateMultipartUploadInput!, config: AwsConfig): AwsS3CreateMultipartUploadOutput
  deleteBucket(input: AwsS3DeleteBucketInput!, config: AwsConfig): JSON
  deleteBucketAnalyticsConfiguration(input: AwsS3DeleteBucketAnalyticsConfigurationInput!, config: AwsConfig): JSON
  deleteBucketCors(input: AwsS3DeleteBucketCorsInput!, config: AwsConfig): JSON
  deleteBucketEncryption(input: AwsS3DeleteBucketEncryptionInput!, config: AwsConfig): JSON
  deleteBucketInventoryConfiguration(input: AwsS3DeleteBucketInventoryConfigurationInput!, config: AwsConfig): JSON
  deleteBucketLifecycle(input: AwsS3DeleteBucketLifecycleInput!, config: AwsConfig): JSON
  deleteBucketMetricsConfiguration(input: AwsS3DeleteBucketMetricsConfigurationInput!, config: AwsConfig): JSON
  deleteBucketPolicy(input: AwsS3DeleteBucketPolicyInput!, config: AwsConfig): JSON
  deleteBucketReplication(input: AwsS3DeleteBucketReplicationInput!, config: AwsConfig): JSON
  deleteBucketTagging(input: AwsS3DeleteBucketTaggingInput!, config: AwsConfig): JSON
  deleteBucketWebsite(input: AwsS3DeleteBucketWebsiteInput!, config: AwsConfig): JSON
  deleteObject(input: AwsS3DeleteObjectInput!, config: AwsConfig): AwsS3DeleteObjectOutput
  deleteObjectTagging(input: AwsS3DeleteObjectTaggingInput!, config: AwsConfig): AwsS3DeleteObjectTaggingOutput
  deleteObjects(input: AwsS3DeleteObjectsInput!, config: AwsConfig): AwsS3DeleteObjectsOutput
  deletePublicAccessBlock(input: AwsS3DeletePublicAccessBlockInput!, config: AwsConfig): JSON
  getBucketAccelerateConfiguration(input: AwsS3GetBucketAccelerateConfigurationInput!, config: AwsConfig): AwsS3GetBucketAccelerateConfigurationOutput
  getBucketAcl(input: AwsS3GetBucketAclInput!, config: AwsConfig): AwsS3GetBucketAclOutput
  getBucketAnalyticsConfiguration(input: AwsS3GetBucketAnalyticsConfigurationInput!, config: AwsConfig): AwsS3GetBucketAnalyticsConfigurationOutput
  getBucketCors(input: AwsS3GetBucketCorsInput!, config: AwsConfig): AwsS3GetBucketCorsOutput
  getBucketEncryption(input: AwsS3GetBucketEncryptionInput!, config: AwsConfig): AwsS3GetBucketEncryptionOutput
  getBucketInventoryConfiguration(input: AwsS3GetBucketInventoryConfigurationInput!, config: AwsConfig): AwsS3GetBucketInventoryConfigurationOutput
  getBucketLifecycle(input: AwsS3GetBucketLifecycleInput!, config: AwsConfig): AwsS3GetBucketLifecycleOutput
  getBucketLifecycleConfiguration(input: AwsS3GetBucketLifecycleConfigurationInput!, config: AwsConfig): AwsS3GetBucketLifecycleConfigurationOutput
  getBucketLocation(input: AwsS3GetBucketLocationInput!, config: AwsConfig): AwsS3GetBucketLocationOutput
  getBucketLogging(input: AwsS3GetBucketLoggingInput!, config: AwsConfig): AwsS3GetBucketLoggingOutput
  getBucketMetricsConfiguration(input: AwsS3GetBucketMetricsConfigurationInput!, config: AwsConfig): AwsS3GetBucketMetricsConfigurationOutput
  getBucketNotification(input: JSON, config: AwsConfig): JSON
  getBucketNotificationConfiguration(input: JSON, config: AwsConfig): JSON
  getBucketPolicy(input: AwsS3GetBucketPolicyInput!, config: AwsConfig): AwsS3GetBucketPolicyOutput
  getBucketPolicyStatus(input: AwsS3GetBucketPolicyStatusInput!, config: AwsConfig): AwsS3GetBucketPolicyStatusOutput
  getBucketReplication(input: AwsS3GetBucketReplicationInput!, config: AwsConfig): AwsS3GetBucketReplicationOutput
  getBucketRequestPayment(input: AwsS3GetBucketRequestPaymentInput!, config: AwsConfig): AwsS3GetBucketRequestPaymentOutput
  getBucketTagging(input: AwsS3GetBucketTaggingInput!, config: AwsConfig): AwsS3GetBucketTaggingOutput
  getBucketVersioning(input: AwsS3GetBucketVersioningInput!, config: AwsConfig): AwsS3GetBucketVersioningOutput
  getBucketWebsite(input: AwsS3GetBucketWebsiteInput!, config: AwsConfig): AwsS3GetBucketWebsiteOutput
  getObject(input: AwsS3GetObjectInput!, config: AwsConfig): AwsS3GetObjectOutput
  getObjectAcl(input: AwsS3GetObjectAclInput!, config: AwsConfig): AwsS3GetObjectAclOutput
  getObjectLegalHold(input: AwsS3GetObjectLegalHoldInput!, config: AwsConfig): AwsS3GetObjectLegalHoldOutput
  getObjectLockConfiguration(input: AwsS3GetObjectLockConfigurationInput!, config: AwsConfig): AwsS3GetObjectLockConfigurationOutput
  getObjectRetention(input: AwsS3GetObjectRetentionInput!, config: AwsConfig): AwsS3GetObjectRetentionOutput
  getObjectTagging(input: AwsS3GetObjectTaggingInput!, config: AwsConfig): AwsS3GetObjectTaggingOutput
  getObjectTorrent(input: AwsS3GetObjectTorrentInput!, config: AwsConfig): AwsS3GetObjectTorrentOutput
  getPublicAccessBlock(input: AwsS3GetPublicAccessBlockInput!, config: AwsConfig): AwsS3GetPublicAccessBlockOutput
  headBucket(input: AwsS3HeadBucketInput!, config: AwsConfig): JSON
  headObject(input: AwsS3HeadObjectInput!, config: AwsConfig): AwsS3HeadObjectOutput
  listBucketAnalyticsConfigurations(input: AwsS3ListBucketAnalyticsConfigurationsInput!, config: AwsConfig): AwsS3ListBucketAnalyticsConfigurationsOutput
  listBucketInventoryConfigurations(input: AwsS3ListBucketInventoryConfigurationsInput!, config: AwsConfig): AwsS3ListBucketInventoryConfigurationsOutput
  listBucketMetricsConfigurations(input: AwsS3ListBucketMetricsConfigurationsInput!, config: AwsConfig): AwsS3ListBucketMetricsConfigurationsOutput
  listBuckets(config: AwsConfig): AwsS3ListBucketsOutput
  listMultipartUploads(input: AwsS3ListMultipartUploadsInput!, config: AwsConfig): AwsS3ListMultipartUploadsOutput
  listObjectVersions(input: AwsS3ListObjectVersionsInput!, config: AwsConfig): AwsS3ListObjectVersionsOutput
  listObjects(input: AwsS3ListObjectsInput!, config: AwsConfig): AwsS3ListObjectsOutput
  listObjectsV2(input: AwsS3ListObjectsV2Input!, config: AwsConfig): AwsS3ListObjectsV2Output
  listParts(input: AwsS3ListPartsInput!, config: AwsConfig): AwsS3ListPartsOutput
  putBucketAccelerateConfiguration(input: AwsS3PutBucketAccelerateConfigurationInput!, config: AwsConfig): JSON
  putBucketAcl(input: AwsS3PutBucketAclInput!, config: AwsConfig): JSON
  putBucketAnalyticsConfiguration(input: AwsS3PutBucketAnalyticsConfigurationInput!, config: AwsConfig): JSON
  putBucketCors(input: AwsS3PutBucketCorsInput!, config: AwsConfig): JSON
  putBucketEncryption(input: AwsS3PutBucketEncryptionInput!, config: AwsConfig): JSON
  putBucketInventoryConfiguration(input: AwsS3PutBucketInventoryConfigurationInput!, config: AwsConfig): JSON
  putBucketLifecycle(input: AwsS3PutBucketLifecycleInput!, config: AwsConfig): JSON
  putBucketLifecycleConfiguration(input: AwsS3PutBucketLifecycleConfigurationInput!, config: AwsConfig): JSON
  putBucketLogging(input: AwsS3PutBucketLoggingInput!, config: AwsConfig): JSON
  putBucketMetricsConfiguration(input: AwsS3PutBucketMetricsConfigurationInput!, config: AwsConfig): JSON
  putBucketNotification(input: AwsS3PutBucketNotificationInput!, config: AwsConfig): JSON
  putBucketNotificationConfiguration(input: AwsS3PutBucketNotificationConfigurationInput!, config: AwsConfig): JSON
  putBucketPolicy(input: AwsS3PutBucketPolicyInput!, config: AwsConfig): JSON
  putBucketReplication(input: AwsS3PutBucketReplicationInput!, config: AwsConfig): JSON
  putBucketRequestPayment(input: AwsS3PutBucketRequestPaymentInput!, config: AwsConfig): JSON
  putBucketTagging(input: AwsS3PutBucketTaggingInput!, config: AwsConfig): JSON
  putBucketVersioning(input: AwsS3PutBucketVersioningInput!, config: AwsConfig): JSON
  putBucketWebsite(input: AwsS3PutBucketWebsiteInput!, config: AwsConfig): JSON
  putObject(input: AwsS3PutObjectInput!, config: AwsConfig): AwsS3PutObjectOutput
  putObjectAcl(input: AwsS3PutObjectAclInput!, config: AwsConfig): AwsS3PutObjectAclOutput
  putObjectLegalHold(input: AwsS3PutObjectLegalHoldInput!, config: AwsConfig): AwsS3PutObjectLegalHoldOutput
  putObjectLockConfiguration(input: AwsS3PutObjectLockConfigurationInput!, config: AwsConfig): AwsS3PutObjectLockConfigurationOutput
  putObjectRetention(input: AwsS3PutObjectRetentionInput!, config: AwsConfig): AwsS3PutObjectRetentionOutput
  putObjectTagging(input: AwsS3PutObjectTaggingInput!, config: AwsConfig): AwsS3PutObjectTaggingOutput
  putPublicAccessBlock(input: AwsS3PutPublicAccessBlockInput!, config: AwsConfig): JSON
  restoreObject(input: AwsS3RestoreObjectInput!, config: AwsConfig): AwsS3RestoreObjectOutput
  selectObjectContent(input: AwsS3SelectObjectContentInput!, config: AwsConfig): AwsS3SelectObjectContentOutput
  uploadPart(input: AwsS3UploadPartInput!, config: AwsConfig): AwsS3UploadPartOutput
  uploadPartCopy(input: AwsS3UploadPartCopyInput!, config: AwsConfig): AwsS3UploadPartCopyOutput
}

input AwsS3AbortMultipartUploadInput {
  Bucket: String!
  Key: String!
  UploadId: String!
  RequestPayer: String
}

type AwsS3AbortMultipartUploadOutput {
  RequestCharged: String
}

input AwsS3CompleteMultipartUploadInput {
  Bucket: String!
  Key: String!
  MultipartUpload: AwsS3CompleteMultipartUploadMultipartUploadInput
  UploadId: String!
  RequestPayer: String
}

input AwsS3CompleteMultipartUploadMultipartUploadInput {
  Parts: [AwsS3CompleteMultipartUploadMultipartUploadPartsInput]
}

input AwsS3CompleteMultipartUploadMultipartUploadPartsInput {
  ETag: String
  PartNumber: Int
}

type AwsS3CompleteMultipartUploadOutput {
  Location: String
  Bucket: String
  Key: String
  Expiration: String
  ETag: String
  ServerSideEncryption: String
  VersionId: String
  SSEKMSKeyId: String
  RequestCharged: String
}

"""AWS S3 Control (2018-08-20)"""
type AwsS3Control {
  createJob(input: AwsS3ControlCreateJobInput!, config: AwsConfig): AwsS3ControlCreateJobOutput
  deletePublicAccessBlock(input: AwsS3ControlDeletePublicAccessBlockInput!, config: AwsConfig): JSON
  describeJob(input: AwsS3ControlDescribeJobInput!, config: AwsConfig): AwsS3ControlDescribeJobOutput
  getPublicAccessBlock(input: AwsS3ControlGetPublicAccessBlockInput!, config: AwsConfig): AwsS3ControlGetPublicAccessBlockOutput
  listJobs(input: AwsS3ControlListJobsInput!, config: AwsConfig): AwsS3ControlListJobsOutput
  putPublicAccessBlock(input: AwsS3ControlPutPublicAccessBlockInput!, config: AwsConfig): JSON
  updateJobPriority(input: AwsS3ControlUpdateJobPriorityInput!, config: AwsConfig): AwsS3ControlUpdateJobPriorityOutput
  updateJobStatus(input: AwsS3ControlUpdateJobStatusInput!, config: AwsConfig): AwsS3ControlUpdateJobStatusOutput
}

input AwsS3ControlCreateJobInput {
  AccountId: String!
  ConfirmationRequired: Boolean
  Operation: AwsS3ControlS4Input!
  Report: AwsS3ControlS12Input!
  ClientRequestToken: String!
  Manifest: AwsS3ControlS17Input!
  Description: String
  Priority: Int!
  RoleArn: String!
}

type AwsS3ControlCreateJobOutput {
  JobId: String
}

input AwsS3ControlDeletePublicAccessBlockInput {
  AccountId: String!
}

input AwsS3ControlDescribeJobInput {
  AccountId: String!
  JobId: String!
}

type AwsS3ControlDescribeJobOutput {
  Job: AwsS3ControlDescribeJobOutputJob
}

type AwsS3ControlDescribeJobOutputJob {
  JobId: String
  ConfirmationRequired: Boolean
  Description: String
  JobArn: String
  Status: String
  Manifest: AwsS3ControlS17
  Operation: AwsS3ControlS4
  Priority: Int
  ProgressSummary: AwsS3ControlS1q
  StatusUpdateReason: String
  FailureReasons: [AwsS3ControlDescribeJobOutputJobFailureReasons]
  Report: AwsS3ControlS12
  CreationTime: Date
  TerminationDate: Date
  RoleArn: String
  SuspendedDate: Date
  SuspendedCause: String
}

type AwsS3ControlDescribeJobOutputJobFailureReasons {
  FailureCode: String
  FailureReason: String
}

input AwsS3ControlGetPublicAccessBlockInput {
  AccountId: String!
}

type AwsS3ControlGetPublicAccessBlockOutput {
  PublicAccessBlockConfiguration: AwsS3ControlS25
}

input AwsS3ControlListJobsInput {
  AccountId: String!
  JobStatuses: [String]
  NextToken: String
  MaxResults: Int
}

type AwsS3ControlListJobsOutput {
  NextToken: String
  Jobs: [AwsS3ControlListJobsOutputJobs]
}

type AwsS3ControlListJobsOutputJobs {
  JobId: String
  Description: String
  Operation: String
  Priority: Int
  Status: String
  CreationTime: Date
  TerminationDate: Date
  ProgressSummary: AwsS3ControlS1q
}

input AwsS3ControlPutPublicAccessBlockInput {
  PublicAccessBlockConfiguration: AwsS3ControlS25Input!
  AccountId: String!
}

type AwsS3ControlS12 {
  Bucket: String
  Format: String
  Enabled: Boolean!
  Prefix: String
  ReportScope: String
}

input AwsS3ControlS12Input {
  Bucket: String
  Format: String
  Enabled: Boolean!
  Prefix: String
  ReportScope: String
}

type AwsS3ControlS17 {
  Spec: AwsS3ControlS17Spec!
  Location: AwsS3ControlS17Location!
}

input AwsS3ControlS17Input {
  Spec: AwsS3ControlS17SpecInput!
  Location: AwsS3ControlS17LocationInput!
}

type AwsS3ControlS17Location {
  ObjectArn: String!
  ObjectVersionId: String
  ETag: String!
}

input AwsS3ControlS17LocationInput {
  ObjectArn: String!
  ObjectVersionId: String
  ETag: String!
}

type AwsS3ControlS17Spec {
  Format: String!
  Fields: [String]
}

input AwsS3ControlS17SpecInput {
  Format: String!
  Fields: [String]
}

type AwsS3ControlS1q {
  TotalNumberOfTasks: JSON
  NumberOfTasksSucceeded: JSON
  NumberOfTasksFailed: JSON
}

type AwsS3ControlS25 {
  BlockPublicAcls: Boolean
  IgnorePublicAcls: Boolean
  BlockPublicPolicy: Boolean
  RestrictPublicBuckets: Boolean
}

input AwsS3ControlS25Input {
  BlockPublicAcls: Boolean
  IgnorePublicAcls: Boolean
  BlockPublicPolicy: Boolean
  RestrictPublicBuckets: Boolean
}

type AwsS3ControlS4 {
  LambdaInvoke: AwsS3ControlS4LambdaInvoke
  S3PutObjectCopy: AwsS3ControlS4S3PutObjectCopy
  S3PutObjectAcl: AwsS3ControlS4S3PutObjectAcl
  S3PutObjectTagging: AwsS3ControlS4S3PutObjectTagging
  S3InitiateRestoreObject: AwsS3ControlS4S3InitiateRestoreObject
}

input AwsS3ControlS4Input {
  LambdaInvoke: AwsS3ControlS4LambdaInvokeInput
  S3PutObjectCopy: AwsS3ControlS4S3PutObjectCopyInput
  S3PutObjectAcl: AwsS3ControlS4S3PutObjectAclInput
  S3PutObjectTagging: AwsS3ControlS4S3PutObjectTaggingInput
  S3InitiateRestoreObject: AwsS3ControlS4S3InitiateRestoreObjectInput
}

type AwsS3ControlS4LambdaInvoke {
  FunctionArn: String
}

input AwsS3ControlS4LambdaInvokeInput {
  FunctionArn: String
}

type AwsS3ControlS4S3InitiateRestoreObject {
  ExpirationInDays: Int
  GlacierJobTier: String
}

input AwsS3ControlS4S3InitiateRestoreObjectInput {
  ExpirationInDays: Int
  GlacierJobTier: String
}

type AwsS3ControlS4S3PutObjectAcl {
  AccessControlPolicy: AwsS3ControlS4S3PutObjectAclAccessControlPolicy
}

type AwsS3ControlS4S3PutObjectAclAccessControlPolicy {
  AccessControlList: AwsS3ControlS4S3PutObjectAclAccessControlPolicyAccessControlList
  CannedAccessControlList: String
}

type AwsS3ControlS4S3PutObjectAclAccessControlPolicyAccessControlList {
  Owner: AwsS3ControlS4S3PutObjectAclAccessControlPolicyAccessControlListOwner!
  Grants: [AwsS3ControlSa]
}

input AwsS3ControlS4S3PutObjectAclAccessControlPolicyAccessControlListInput {
  Owner: AwsS3ControlS4S3PutObjectAclAccessControlPolicyAccessControlListOwnerInput!
  Grants: [AwsS3ControlSaInput]
}

type AwsS3ControlS4S3PutObjectAclAccessControlPolicyAccessControlListOwner {
  ID: String
  DisplayName: String
}

input AwsS3ControlS4S3PutObjectAclAccessControlPolicyAccessControlListOwnerInput {
  ID: String
  DisplayName: String
}

input AwsS3ControlS4S3PutObjectAclAccessControlPolicyInput {
  AccessControlList: AwsS3ControlS4S3PutObjectAclAccessControlPolicyAccessControlListInput
  CannedAccessControlList: String
}

input AwsS3ControlS4S3PutObjectAclInput {
  AccessControlPolicy: AwsS3ControlS4S3PutObjectAclAccessControlPolicyInput
}

type AwsS3ControlS4S3PutObjectCopy {
  TargetResource: String
  CannedAccessControlList: String
  AccessControlGrants: [AwsS3ControlSa]
  MetadataDirective: String
  ModifiedSinceConstraint: Date
  NewObjectMetadata: AwsS3ControlS4S3PutObjectCopyNewObjectMetadata
  NewObjectTagging: [AwsS3ControlSn]
  RedirectLocation: String
  RequesterPays: Boolean
  StorageClass: String
  UnModifiedSinceConstraint: Date
  SSEAwsKmsKeyId: String
  TargetKeyPrefix: String
  ObjectLockLegalHoldStatus: String
  ObjectLockMode: String
  ObjectLockRetainUntilDate: Date
}

input AwsS3ControlS4S3PutObjectCopyInput {
  TargetResource: String
  CannedAccessControlList: String
  AccessControlGrants: [AwsS3ControlSaInput]
  MetadataDirective: String
  ModifiedSinceConstraint: Date
  NewObjectMetadata: AwsS3ControlS4S3PutObjectCopyNewObjectMetadataInput
  NewObjectTagging: [AwsS3ControlSnInput]
  RedirectLocation: String
  RequesterPays: Boolean
  StorageClass: String
  UnModifiedSinceConstraint: Date
  SSEAwsKmsKeyId: String
  TargetKeyPrefix: String
  ObjectLockLegalHoldStatus: String
  ObjectLockMode: String
  ObjectLockRetainUntilDate: Date
}

type AwsS3ControlS4S3PutObjectCopyNewObjectMetadata {
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  UserMetadata: JSON
  ContentLength: JSON
  ContentMD5: String
  ContentType: String
  HttpExpiresDate: Date
  RequesterCharged: Boolean
  SSEAlgorithm: String
}

input AwsS3ControlS4S3PutObjectCopyNewObjectMetadataInput {
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  UserMetadata: JSON
  ContentLength: JSON
  ContentMD5: String
  ContentType: String
  HttpExpiresDate: Date
  RequesterCharged: Boolean
  SSEAlgorithm: String
}

type AwsS3ControlS4S3PutObjectTagging {
  TagSet: [AwsS3ControlSn]
}

input AwsS3ControlS4S3PutObjectTaggingInput {
  TagSet: [AwsS3ControlSnInput]
}

type AwsS3ControlSa {
  Grantee: AwsS3ControlSaGrantee
  Permission: String
}

type AwsS3ControlSaGrantee {
  TypeIdentifier: String
  Identifier: String
  DisplayName: String
}

input AwsS3ControlSaGranteeInput {
  TypeIdentifier: String
  Identifier: String
  DisplayName: String
}

input AwsS3ControlSaInput {
  Grantee: AwsS3ControlSaGranteeInput
  Permission: String
}

type AwsS3ControlSn {
  Key: String!
  Value: String!
}

input AwsS3ControlSnInput {
  Key: String!
  Value: String!
}

input AwsS3ControlUpdateJobPriorityInput {
  AccountId: String!
  JobId: String!
  Priority: Int!
}

type AwsS3ControlUpdateJobPriorityOutput {
  JobId: String!
  Priority: Int!
}

input AwsS3ControlUpdateJobStatusInput {
  AccountId: String!
  JobId: String!
  RequestedJobStatus: String!
  StatusUpdateReason: String
}

type AwsS3ControlUpdateJobStatusOutput {
  JobId: String
  Status: String
  StatusUpdateReason: String
}

input AwsS3CopyObjectInput {
  ACL: String
  Bucket: String!
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentType: String
  CopySource: String!
  CopySourceIfMatch: String
  CopySourceIfModifiedSince: Date
  CopySourceIfNoneMatch: String
  CopySourceIfUnmodifiedSince: Date
  Expires: Date
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWriteACP: String
  Key: String!
  Metadata: JSON
  MetadataDirective: String
  TaggingDirective: String
  ServerSideEncryption: String
  StorageClass: String
  WebsiteRedirectLocation: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  SSEKMSEncryptionContext: String
  CopySourceSSECustomerAlgorithm: String
  CopySourceSSECustomerKey: JSON
  CopySourceSSECustomerKeyMD5: String
  RequestPayer: String
  Tagging: String
  ObjectLockMode: String
  ObjectLockRetainUntilDate: Date
  ObjectLockLegalHoldStatus: String
}

type AwsS3CopyObjectOutput {
  CopyObjectResult: AwsS3CopyObjectOutputCopyObjectResult
  Expiration: String
  CopySourceVersionId: String
  VersionId: String
  ServerSideEncryption: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  SSEKMSEncryptionContext: String
  RequestCharged: String
}

type AwsS3CopyObjectOutputCopyObjectResult {
  ETag: String
  LastModified: Date
}

input AwsS3CreateBucketCreateBucketConfigurationInput {
  LocationConstraint: String
}

input AwsS3CreateBucketInput {
  ACL: String
  Bucket: String!
  CreateBucketConfiguration: AwsS3CreateBucketCreateBucketConfigurationInput
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWrite: String
  GrantWriteACP: String
  ObjectLockEnabledForBucket: Boolean
}

type AwsS3CreateBucketOutput {
  Location: String
}

input AwsS3CreateMultipartUploadInput {
  ACL: String
  Bucket: String!
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentType: String
  Expires: Date
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWriteACP: String
  Key: String!
  Metadata: JSON
  ServerSideEncryption: String
  StorageClass: String
  WebsiteRedirectLocation: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  SSEKMSEncryptionContext: String
  RequestPayer: String
  Tagging: String
  ObjectLockMode: String
  ObjectLockRetainUntilDate: Date
  ObjectLockLegalHoldStatus: String
}

type AwsS3CreateMultipartUploadOutput {
  AbortDate: Date
  AbortRuleId: String
  Bucket: String
  Key: String
  UploadId: String
  ServerSideEncryption: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  SSEKMSEncryptionContext: String
  RequestCharged: String
}

input AwsS3DeleteBucketAnalyticsConfigurationInput {
  Bucket: String!
  Id: String!
}

input AwsS3DeleteBucketCorsInput {
  Bucket: String!
}

input AwsS3DeleteBucketEncryptionInput {
  Bucket: String!
}

input AwsS3DeleteBucketInput {
  Bucket: String!
}

input AwsS3DeleteBucketInventoryConfigurationInput {
  Bucket: String!
  Id: String!
}

input AwsS3DeleteBucketLifecycleInput {
  Bucket: String!
}

input AwsS3DeleteBucketMetricsConfigurationInput {
  Bucket: String!
  Id: String!
}

input AwsS3DeleteBucketPolicyInput {
  Bucket: String!
}

input AwsS3DeleteBucketReplicationInput {
  Bucket: String!
}

input AwsS3DeleteBucketTaggingInput {
  Bucket: String!
}

input AwsS3DeleteBucketWebsiteInput {
  Bucket: String!
}

input AwsS3DeleteObjectInput {
  Bucket: String!
  Key: String!
  MFA: String
  VersionId: String
  RequestPayer: String
  BypassGovernanceRetention: Boolean
}

type AwsS3DeleteObjectOutput {
  DeleteMarker: Boolean
  VersionId: String
  RequestCharged: String
}

input AwsS3DeleteObjectsDeleteInput {
  Objects: [AwsS3DeleteObjectsDeleteObjectsInput]!
  Quiet: Boolean
}

input AwsS3DeleteObjectsDeleteObjectsInput {
  Key: String!
  VersionId: String
}

input AwsS3DeleteObjectsInput {
  Bucket: String!
  Delete: AwsS3DeleteObjectsDeleteInput!
  MFA: String
  RequestPayer: String
  BypassGovernanceRetention: Boolean
}

type AwsS3DeleteObjectsOutput {
  Deleted: [AwsS3DeleteObjectsOutputDeleted]
  RequestCharged: String
  Errors: [AwsS3DeleteObjectsOutputErrors]
}

type AwsS3DeleteObjectsOutputDeleted {
  Key: String
  VersionId: String
  DeleteMarker: Boolean
  DeleteMarkerVersionId: String
}

type AwsS3DeleteObjectsOutputErrors {
  Key: String
  VersionId: String
  Code: String
  Message: String
}

input AwsS3DeleteObjectTaggingInput {
  Bucket: String!
  Key: String!
  VersionId: String
}

type AwsS3DeleteObjectTaggingOutput {
  VersionId: String
}

input AwsS3DeletePublicAccessBlockInput {
  Bucket: String!
}

input AwsS3GetBucketAccelerateConfigurationInput {
  Bucket: String!
}

type AwsS3GetBucketAccelerateConfigurationOutput {
  Status: String
}

input AwsS3GetBucketAclInput {
  Bucket: String!
}

type AwsS3GetBucketAclOutput {
  Owner: AwsS3S32
  Grants: [AwsS3S35]
}

input AwsS3GetBucketAnalyticsConfigurationInput {
  Bucket: String!
  Id: String!
}

type AwsS3GetBucketAnalyticsConfigurationOutput {
  AnalyticsConfiguration: AwsS3S3e
}

input AwsS3GetBucketCorsInput {
  Bucket: String!
}

type AwsS3GetBucketCorsOutput {
  CORSRules: [AwsS3S3u]
}

input AwsS3GetBucketEncryptionInput {
  Bucket: String!
}

type AwsS3GetBucketEncryptionOutput {
  ServerSideEncryptionConfiguration: AwsS3S47
}

input AwsS3GetBucketInventoryConfigurationInput {
  Bucket: String!
  Id: String!
}

type AwsS3GetBucketInventoryConfigurationOutput {
  InventoryConfiguration: AwsS3S4d
}

input AwsS3GetBucketLifecycleConfigurationInput {
  Bucket: String!
}

type AwsS3GetBucketLifecycleConfigurationOutput {
  Rules: [AwsS3S58]
}

input AwsS3GetBucketLifecycleInput {
  Bucket: String!
}

type AwsS3GetBucketLifecycleOutput {
  Rules: [AwsS3S4t]
}

input AwsS3GetBucketLocationInput {
  Bucket: String!
}

type AwsS3GetBucketLocationOutput {
  LocationConstraint: String
}

input AwsS3GetBucketLoggingInput {
  Bucket: String!
}

type AwsS3GetBucketLoggingOutput {
  LoggingEnabled: AwsS3S5i
}

input AwsS3GetBucketMetricsConfigurationInput {
  Bucket: String!
  Id: String!
}

type AwsS3GetBucketMetricsConfigurationOutput {
  MetricsConfiguration: AwsS3S5q
}

input AwsS3GetBucketPolicyInput {
  Bucket: String!
}

type AwsS3GetBucketPolicyOutput {
  Policy: String
}

input AwsS3GetBucketPolicyStatusInput {
  Bucket: String!
}

type AwsS3GetBucketPolicyStatusOutput {
  PolicyStatus: AwsS3GetBucketPolicyStatusOutputPolicyStatus
}

type AwsS3GetBucketPolicyStatusOutputPolicyStatus {
  IsPublic: Boolean
}

input AwsS3GetBucketReplicationInput {
  Bucket: String!
}

type AwsS3GetBucketReplicationOutput {
  ReplicationConfiguration: AwsS3S6s
}

input AwsS3GetBucketRequestPaymentInput {
  Bucket: String!
}

type AwsS3GetBucketRequestPaymentOutput {
  Payer: String
}

input AwsS3GetBucketTaggingInput {
  Bucket: String!
}

type AwsS3GetBucketTaggingOutput {
  TagSet: [AwsS3S3h]!
}

input AwsS3GetBucketVersioningInput {
  Bucket: String!
}

type AwsS3GetBucketVersioningOutput {
  Status: String
  MFADelete: String
}

input AwsS3GetBucketWebsiteInput {
  Bucket: String!
}

type AwsS3GetBucketWebsiteOutput {
  RedirectAllRequestsTo: AwsS3S7l
  IndexDocument: AwsS3S7o
  ErrorDocument: AwsS3S7q
  RoutingRules: [AwsS3S7r]
}

input AwsS3GetObjectAclInput {
  Bucket: String!
  Key: String!
  VersionId: String
  RequestPayer: String
}

type AwsS3GetObjectAclOutput {
  Owner: AwsS3S32
  Grants: [AwsS3S35]
  RequestCharged: String
}

input AwsS3GetObjectInput {
  Bucket: String!
  IfMatch: String
  IfModifiedSince: Date
  IfNoneMatch: String
  IfUnmodifiedSince: Date
  Key: String!
  Range: String
  ResponseCacheControl: String
  ResponseContentDisposition: String
  ResponseContentEncoding: String
  ResponseContentLanguage: String
  ResponseContentType: String
  ResponseExpires: Date
  VersionId: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  RequestPayer: String
  PartNumber: Int
}

input AwsS3GetObjectLegalHoldInput {
  Bucket: String!
  Key: String!
  VersionId: String
  RequestPayer: String
}

type AwsS3GetObjectLegalHoldOutput {
  LegalHold: AwsS3S8q
}

input AwsS3GetObjectLockConfigurationInput {
  Bucket: String!
}

type AwsS3GetObjectLockConfigurationOutput {
  ObjectLockConfiguration: AwsS3S8t
}

type AwsS3GetObjectOutput {
  Body: JSON
  DeleteMarker: Boolean
  AcceptRanges: String
  Expiration: String
  Restore: String
  LastModified: Date
  ContentLength: JSON
  ETag: String
  MissingMeta: Int
  VersionId: String
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentRange: String
  ContentType: String
  Expires: Date
  WebsiteRedirectLocation: String
  ServerSideEncryption: String
  Metadata: JSON
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  StorageClass: String
  RequestCharged: String
  ReplicationStatus: String
  PartsCount: Int
  TagCount: Int
  ObjectLockMode: String
  ObjectLockRetainUntilDate: Date
  ObjectLockLegalHoldStatus: String
}

input AwsS3GetObjectRetentionInput {
  Bucket: String!
  Key: String!
  VersionId: String
  RequestPayer: String
}

type AwsS3GetObjectRetentionOutput {
  Retention: AwsS3S91
}

input AwsS3GetObjectTaggingInput {
  Bucket: String!
  Key: String!
  VersionId: String
}

type AwsS3GetObjectTaggingOutput {
  VersionId: String
  TagSet: [AwsS3S3h]!
}

input AwsS3GetObjectTorrentInput {
  Bucket: String!
  Key: String!
  RequestPayer: String
}

type AwsS3GetObjectTorrentOutput {
  Body: JSON
  RequestCharged: String
}

input AwsS3GetPublicAccessBlockInput {
  Bucket: String!
}

type AwsS3GetPublicAccessBlockOutput {
  PublicAccessBlockConfiguration: AwsS3S98
}

input AwsS3HeadBucketInput {
  Bucket: String!
}

input AwsS3HeadObjectInput {
  Bucket: String!
  IfMatch: String
  IfModifiedSince: Date
  IfNoneMatch: String
  IfUnmodifiedSince: Date
  Key: String!
  Range: String
  VersionId: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  RequestPayer: String
  PartNumber: Int
}

type AwsS3HeadObjectOutput {
  DeleteMarker: Boolean
  AcceptRanges: String
  Expiration: String
  Restore: String
  LastModified: Date
  ContentLength: JSON
  ETag: String
  MissingMeta: Int
  VersionId: String
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentType: String
  Expires: Date
  WebsiteRedirectLocation: String
  ServerSideEncryption: String
  Metadata: JSON
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  StorageClass: String
  RequestCharged: String
  ReplicationStatus: String
  PartsCount: Int
  ObjectLockMode: String
  ObjectLockRetainUntilDate: Date
  ObjectLockLegalHoldStatus: String
}

input AwsS3ListBucketAnalyticsConfigurationsInput {
  Bucket: String!
  ContinuationToken: String
}

type AwsS3ListBucketAnalyticsConfigurationsOutput {
  IsTruncated: Boolean
  ContinuationToken: String
  NextContinuationToken: String
  AnalyticsConfigurationList: [AwsS3S3e]
}

input AwsS3ListBucketInventoryConfigurationsInput {
  Bucket: String!
  ContinuationToken: String
}

type AwsS3ListBucketInventoryConfigurationsOutput {
  ContinuationToken: String
  InventoryConfigurationList: [AwsS3S4d]
  IsTruncated: Boolean
  NextContinuationToken: String
}

input AwsS3ListBucketMetricsConfigurationsInput {
  Bucket: String!
  ContinuationToken: String
}

type AwsS3ListBucketMetricsConfigurationsOutput {
  IsTruncated: Boolean
  ContinuationToken: String
  NextContinuationToken: String
  MetricsConfigurationList: [AwsS3S5q]
}

type AwsS3ListBucketsOutput {
  Buckets: [AwsS3ListBucketsOutputBuckets]
  Owner: AwsS3S32
}

type AwsS3ListBucketsOutputBuckets {
  Name: String
  CreationDate: Date
}

input AwsS3ListMultipartUploadsInput {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  KeyMarker: String
  MaxUploads: Int
  Prefix: String
  UploadIdMarker: String
}

type AwsS3ListMultipartUploadsOutput {
  Bucket: String
  KeyMarker: String
  UploadIdMarker: String
  NextKeyMarker: String
  Prefix: String
  Delimiter: String
  NextUploadIdMarker: String
  MaxUploads: Int
  IsTruncated: Boolean
  Uploads: [AwsS3ListMultipartUploadsOutputUploads]
  CommonPrefixes: [AwsS3Sa6]
  EncodingType: String
}

type AwsS3ListMultipartUploadsOutputUploads {
  UploadId: String
  Key: String
  Initiated: Date
  StorageClass: String
  Owner: AwsS3S32
  Initiator: AwsS3Sa5
}

input AwsS3ListObjectsInput {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  Marker: String
  MaxKeys: Int
  Prefix: String
  RequestPayer: String
}

type AwsS3ListObjectsOutput {
  IsTruncated: Boolean
  Marker: String
  NextMarker: String
  Contents: [AwsS3Sao]
  Name: String
  Prefix: String
  Delimiter: String
  MaxKeys: Int
  CommonPrefixes: [AwsS3Sa6]
  EncodingType: String
}

input AwsS3ListObjectsV2Input {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  MaxKeys: Int
  Prefix: String
  ContinuationToken: String
  FetchOwner: Boolean
  StartAfter: String
  RequestPayer: String
}

type AwsS3ListObjectsV2Output {
  IsTruncated: Boolean
  Contents: [AwsS3Sao]
  Name: String
  Prefix: String
  Delimiter: String
  MaxKeys: Int
  CommonPrefixes: [AwsS3Sa6]
  EncodingType: String
  KeyCount: Int
  ContinuationToken: String
  NextContinuationToken: String
  StartAfter: String
}

input AwsS3ListObjectVersionsInput {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  KeyMarker: String
  MaxKeys: Int
  Prefix: String
  VersionIdMarker: String
}

type AwsS3ListObjectVersionsOutput {
  IsTruncated: Boolean
  KeyMarker: String
  VersionIdMarker: String
  NextKeyMarker: String
  NextVersionIdMarker: String
  Versions: [AwsS3ListObjectVersionsOutputVersions]
  DeleteMarkers: [AwsS3ListObjectVersionsOutputDeleteMarkers]
  Name: String
  Prefix: String
  Delimiter: String
  MaxKeys: Int
  CommonPrefixes: [AwsS3Sa6]
  EncodingType: String
}

type AwsS3ListObjectVersionsOutputDeleteMarkers {
  Owner: AwsS3S32
  Key: String
  VersionId: String
  IsLatest: Boolean
  LastModified: Date
}

type AwsS3ListObjectVersionsOutputVersions {
  ETag: String
  Size: Int
  StorageClass: String
  Key: String
  VersionId: String
  IsLatest: Boolean
  LastModified: Date
  Owner: AwsS3S32
}

input AwsS3ListPartsInput {
  Bucket: String!
  Key: String!
  MaxParts: Int
  PartNumberMarker: Int
  UploadId: String!
  RequestPayer: String
}

type AwsS3ListPartsOutput {
  AbortDate: Date
  AbortRuleId: String
  Bucket: String
  Key: String
  UploadId: String
  PartNumberMarker: Int
  NextPartNumberMarker: Int
  MaxParts: Int
  IsTruncated: Boolean
  Parts: [AwsS3ListPartsOutputParts]
  Initiator: AwsS3Sa5
  Owner: AwsS3S32
  StorageClass: String
  RequestCharged: String
}

type AwsS3ListPartsOutputParts {
  PartNumber: Int
  LastModified: Date
  ETag: String
  Size: Int
}

input AwsS3PutBucketAccelerateConfigurationAccelerateConfigurationInput {
  Status: String
}

input AwsS3PutBucketAccelerateConfigurationInput {
  Bucket: String!
  AccelerateConfiguration: AwsS3PutBucketAccelerateConfigurationAccelerateConfigurationInput!
}

input AwsS3PutBucketAclInput {
  ACL: String
  AccessControlPolicy: AwsS3Sb6Input
  Bucket: String!
  ContentMD5: String
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWrite: String
  GrantWriteACP: String
}

input AwsS3PutBucketAnalyticsConfigurationInput {
  Bucket: String!
  Id: String!
  AnalyticsConfiguration: AwsS3S3eInput!
}

input AwsS3PutBucketCorsCORSConfigurationInput {
  CORSRules: [AwsS3S3uInput]!
}

input AwsS3PutBucketCorsInput {
  Bucket: String!
  CORSConfiguration: AwsS3PutBucketCorsCORSConfigurationInput!
  ContentMD5: String
}

input AwsS3PutBucketEncryptionInput {
  Bucket: String!
  ContentMD5: String
  ServerSideEncryptionConfiguration: AwsS3S47Input!
}

input AwsS3PutBucketInventoryConfigurationInput {
  Bucket: String!
  Id: String!
  InventoryConfiguration: AwsS3S4dInput!
}

input AwsS3PutBucketLifecycleConfigurationInput {
  Bucket: String!
  LifecycleConfiguration: AwsS3PutBucketLifecycleConfigurationLifecycleConfigurationInput
}

input AwsS3PutBucketLifecycleConfigurationLifecycleConfigurationInput {
  Rules: [AwsS3S58Input]!
}

input AwsS3PutBucketLifecycleInput {
  Bucket: String!
  ContentMD5: String
  LifecycleConfiguration: AwsS3PutBucketLifecycleLifecycleConfigurationInput
}

input AwsS3PutBucketLifecycleLifecycleConfigurationInput {
  Rules: [AwsS3S4tInput]!
}

input AwsS3PutBucketLoggingBucketLoggingStatusInput {
  LoggingEnabled: AwsS3S5iInput
}

input AwsS3PutBucketLoggingInput {
  Bucket: String!
  BucketLoggingStatus: AwsS3PutBucketLoggingBucketLoggingStatusInput!
  ContentMD5: String
}

input AwsS3PutBucketMetricsConfigurationInput {
  Bucket: String!
  Id: String!
  MetricsConfiguration: AwsS3S5qInput!
}

input AwsS3PutBucketNotificationConfigurationInput {
  Bucket: String!
  NotificationConfiguration: AwsS3S65Input!
}

input AwsS3PutBucketNotificationInput {
  Bucket: String!
  ContentMD5: String
  NotificationConfiguration: AwsS3S5uInput!
}

input AwsS3PutBucketPolicyInput {
  Bucket: String!
  ContentMD5: String
  ConfirmRemoveSelfBucketAccess: Boolean
  Policy: String!
}

input AwsS3PutBucketReplicationInput {
  Bucket: String!
  ContentMD5: String
  ReplicationConfiguration: AwsS3S6sInput!
  Token: String
}

input AwsS3PutBucketRequestPaymentInput {
  Bucket: String!
  ContentMD5: String
  RequestPaymentConfiguration: AwsS3PutBucketRequestPaymentRequestPaymentConfigurationInput!
}

input AwsS3PutBucketRequestPaymentRequestPaymentConfigurationInput {
  Payer: String!
}

input AwsS3PutBucketTaggingInput {
  Bucket: String!
  ContentMD5: String
  Tagging: AwsS3SbtInput!
}

input AwsS3PutBucketVersioningInput {
  Bucket: String!
  ContentMD5: String
  MFA: String
  VersioningConfiguration: AwsS3PutBucketVersioningVersioningConfigurationInput!
}

input AwsS3PutBucketVersioningVersioningConfigurationInput {
  MFADelete: String
  Status: String
}

input AwsS3PutBucketWebsiteInput {
  Bucket: String!
  ContentMD5: String
  WebsiteConfiguration: AwsS3PutBucketWebsiteWebsiteConfigurationInput!
}

input AwsS3PutBucketWebsiteWebsiteConfigurationInput {
  ErrorDocument: AwsS3S7qInput
  IndexDocument: AwsS3S7oInput
  RedirectAllRequestsTo: AwsS3S7lInput
  RoutingRules: [AwsS3S7rInput]
}

input AwsS3PutObjectAclInput {
  ACL: String
  AccessControlPolicy: AwsS3Sb6Input
  Bucket: String!
  ContentMD5: String
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWrite: String
  GrantWriteACP: String
  Key: String!
  RequestPayer: String
  VersionId: String
}

type AwsS3PutObjectAclOutput {
  RequestCharged: String
}

input AwsS3PutObjectInput {
  ACL: String
  Body: JSON
  Bucket: String!
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentLength: JSON
  ContentMD5: String
  ContentType: String
  Expires: Date
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWriteACP: String
  Key: String!
  Metadata: JSON
  ServerSideEncryption: String
  StorageClass: String
  WebsiteRedirectLocation: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  SSEKMSEncryptionContext: String
  RequestPayer: String
  Tagging: String
  ObjectLockMode: String
  ObjectLockRetainUntilDate: Date
  ObjectLockLegalHoldStatus: String
}

input AwsS3PutObjectLegalHoldInput {
  Bucket: String!
  Key: String!
  LegalHold: AwsS3S8qInput
  RequestPayer: String
  VersionId: String
  ContentMD5: String
}

type AwsS3PutObjectLegalHoldOutput {
  RequestCharged: String
}

input AwsS3PutObjectLockConfigurationInput {
  Bucket: String!
  ObjectLockConfiguration: AwsS3S8tInput
  RequestPayer: String
  Token: String
  ContentMD5: String
}

type AwsS3PutObjectLockConfigurationOutput {
  RequestCharged: String
}

type AwsS3PutObjectOutput {
  Expiration: String
  ETag: String
  ServerSideEncryption: String
  VersionId: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  SSEKMSEncryptionContext: String
  RequestCharged: String
}

input AwsS3PutObjectRetentionInput {
  Bucket: String!
  Key: String!
  Retention: AwsS3S91Input
  RequestPayer: String
  VersionId: String
  BypassGovernanceRetention: Boolean
  ContentMD5: String
}

type AwsS3PutObjectRetentionOutput {
  RequestCharged: String
}

input AwsS3PutObjectTaggingInput {
  Bucket: String!
  Key: String!
  VersionId: String
  ContentMD5: String
  Tagging: AwsS3SbtInput!
}

type AwsS3PutObjectTaggingOutput {
  VersionId: String
}

input AwsS3PutPublicAccessBlockInput {
  Bucket: String!
  ContentMD5: String
  PublicAccessBlockConfiguration: AwsS3S98Input!
}

input AwsS3RestoreObjectInput {
  Bucket: String!
  Key: String!
  VersionId: String
  RestoreRequest: AwsS3RestoreObjectRestoreRequestInput
  RequestPayer: String
}

type AwsS3RestoreObjectOutput {
  RequestCharged: String
  RestoreOutputPath: String
}

input AwsS3RestoreObjectRestoreRequestGlacierJobParametersInput {
  Tier: String!
}

input AwsS3RestoreObjectRestoreRequestInput {
  Days: Int
  GlacierJobParameters: AwsS3RestoreObjectRestoreRequestGlacierJobParametersInput
  Type: String
  Tier: String
  Description: String
  SelectParameters: AwsS3RestoreObjectRestoreRequestSelectParametersInput
  OutputLocation: AwsS3RestoreObjectRestoreRequestOutputLocationInput
}

input AwsS3RestoreObjectRestoreRequestOutputLocationInput {
  S3: AwsS3RestoreObjectRestoreRequestOutputLocationS3Input
}

input AwsS3RestoreObjectRestoreRequestOutputLocationS3EncryptionInput {
  EncryptionType: String!
  KMSKeyId: String
  KMSContext: String
}

input AwsS3RestoreObjectRestoreRequestOutputLocationS3Input {
  BucketName: String!
  Prefix: String!
  Encryption: AwsS3RestoreObjectRestoreRequestOutputLocationS3EncryptionInput
  CannedACL: String
  AccessControlList: [AwsS3S35Input]
  Tagging: AwsS3SbtInput
  UserMetadata: [AwsS3RestoreObjectRestoreRequestOutputLocationS3UserMetadataInput]
  StorageClass: String
}

input AwsS3RestoreObjectRestoreRequestOutputLocationS3UserMetadataInput {
  Name: String
  Value: String
}

input AwsS3RestoreObjectRestoreRequestSelectParametersInput {
  InputSerialization: AwsS3ScjInput!
  ExpressionType: String!
  Expression: String!
  OutputSerialization: AwsS3ScyInput!
}

type AwsS3S32 {
  DisplayName: String
  ID: String
}

input AwsS3S32Input {
  DisplayName: String
  ID: String
}

type AwsS3S35 {
  Grantee: AwsS3S37
  Permission: String
}

input AwsS3S35Input {
  Grantee: AwsS3S37Input
  Permission: String
}

type AwsS3S37 {
  DisplayName: String
  EmailAddress: String
  ID: String
  Type: String!
  URI: String
}

input AwsS3S37Input {
  DisplayName: String
  EmailAddress: String
  ID: String
  Type: String!
  URI: String
}

type AwsS3S3e {
  Id: String!
  Filter: AwsS3S3eFilter
  StorageClassAnalysis: AwsS3S3eStorageClassAnalysis!
}

type AwsS3S3eFilter {
  Prefix: String
  Tag: AwsS3S3h
  And: AwsS3S3eFilterAnd
}

type AwsS3S3eFilterAnd {
  Prefix: String
  Tags: [AwsS3S3h]
}

input AwsS3S3eFilterAndInput {
  Prefix: String
  Tags: [AwsS3S3hInput]
}

input AwsS3S3eFilterInput {
  Prefix: String
  Tag: AwsS3S3hInput
  And: AwsS3S3eFilterAndInput
}

input AwsS3S3eInput {
  Id: String!
  Filter: AwsS3S3eFilterInput
  StorageClassAnalysis: AwsS3S3eStorageClassAnalysisInput!
}

type AwsS3S3eStorageClassAnalysis {
  DataExport: AwsS3S3eStorageClassAnalysisDataExport
}

type AwsS3S3eStorageClassAnalysisDataExport {
  OutputSchemaVersion: String!
  Destination: AwsS3S3eStorageClassAnalysisDataExportDestination!
}

type AwsS3S3eStorageClassAnalysisDataExportDestination {
  S3BucketDestination: AwsS3S3eStorageClassAnalysisDataExportDestinationS3BucketDestination!
}

input AwsS3S3eStorageClassAnalysisDataExportDestinationInput {
  S3BucketDestination: AwsS3S3eStorageClassAnalysisDataExportDestinationS3BucketDestinationInput!
}

type AwsS3S3eStorageClassAnalysisDataExportDestinationS3BucketDestination {
  Format: String!
  BucketAccountId: String
  Bucket: String!
  Prefix: String
}

input AwsS3S3eStorageClassAnalysisDataExportDestinationS3BucketDestinationInput {
  Format: String!
  BucketAccountId: String
  Bucket: String!
  Prefix: String
}

input AwsS3S3eStorageClassAnalysisDataExportInput {
  OutputSchemaVersion: String!
  Destination: AwsS3S3eStorageClassAnalysisDataExportDestinationInput!
}

input AwsS3S3eStorageClassAnalysisInput {
  DataExport: AwsS3S3eStorageClassAnalysisDataExportInput
}

type AwsS3S3h {
  Key: String!
  Value: String!
}

input AwsS3S3hInput {
  Key: String!
  Value: String!
}

type AwsS3S3u {
  AllowedHeaders: [String]
  AllowedMethods: [String]!
  AllowedOrigins: [String]!
  ExposeHeaders: [String]
  MaxAgeSeconds: Int
}

input AwsS3S3uInput {
  AllowedHeaders: [String]
  AllowedMethods: [String]!
  AllowedOrigins: [String]!
  ExposeHeaders: [String]
  MaxAgeSeconds: Int
}

type AwsS3S47 {
  Rules: [AwsS3S47Rules]!
}

input AwsS3S47Input {
  Rules: [AwsS3S47RulesInput]!
}

type AwsS3S47Rules {
  ApplyServerSideEncryptionByDefault: AwsS3S47RulesApplyServerSideEncryptionByDefault
}

type AwsS3S47RulesApplyServerSideEncryptionByDefault {
  SSEAlgorithm: String!
  KMSMasterKeyID: String
}

input AwsS3S47RulesApplyServerSideEncryptionByDefaultInput {
  SSEAlgorithm: String!
  KMSMasterKeyID: String
}

input AwsS3S47RulesInput {
  ApplyServerSideEncryptionByDefault: AwsS3S47RulesApplyServerSideEncryptionByDefaultInput
}

type AwsS3S4d {
  Destination: AwsS3S4dDestination!
  IsEnabled: Boolean!
  Filter: AwsS3S4dFilter
  Id: String!
  IncludedObjectVersions: String!
  OptionalFields: [String]
  Schedule: AwsS3S4dSchedule!
}

type AwsS3S4dDestination {
  S3BucketDestination: AwsS3S4dDestinationS3BucketDestination!
}

input AwsS3S4dDestinationInput {
  S3BucketDestination: AwsS3S4dDestinationS3BucketDestinationInput!
}

type AwsS3S4dDestinationS3BucketDestination {
  AccountId: String
  Bucket: String!
  Format: String!
  Prefix: String
  Encryption: AwsS3S4dDestinationS3BucketDestinationEncryption
}

type AwsS3S4dDestinationS3BucketDestinationEncryption {
  SSES3: JSON
  SSEKMS: AwsS3S4dDestinationS3BucketDestinationEncryptionSSEKMS
}

input AwsS3S4dDestinationS3BucketDestinationEncryptionInput {
  SSES3: JSON
  SSEKMS: AwsS3S4dDestinationS3BucketDestinationEncryptionSSEKMSInput
}

type AwsS3S4dDestinationS3BucketDestinationEncryptionSSEKMS {
  KeyId: String!
}

input AwsS3S4dDestinationS3BucketDestinationEncryptionSSEKMSInput {
  KeyId: String!
}

input AwsS3S4dDestinationS3BucketDestinationInput {
  AccountId: String
  Bucket: String!
  Format: String!
  Prefix: String
  Encryption: AwsS3S4dDestinationS3BucketDestinationEncryptionInput
}

type AwsS3S4dFilter {
  Prefix: String!
}

input AwsS3S4dFilterInput {
  Prefix: String!
}

input AwsS3S4dInput {
  Destination: AwsS3S4dDestinationInput!
  IsEnabled: Boolean!
  Filter: AwsS3S4dFilterInput
  Id: String!
  IncludedObjectVersions: String!
  OptionalFields: [String]
  Schedule: AwsS3S4dScheduleInput!
}

type AwsS3S4dSchedule {
  Frequency: String!
}

input AwsS3S4dScheduleInput {
  Frequency: String!
}

type AwsS3S4t {
  Expiration: AwsS3S4v
  ID: String
  Prefix: String!
  Status: String!
  Transition: AwsS3S50
  NoncurrentVersionTransition: AwsS3S52
  NoncurrentVersionExpiration: AwsS3S53
  AbortIncompleteMultipartUpload: AwsS3S54
}

input AwsS3S4tInput {
  Expiration: AwsS3S4vInput
  ID: String
  Prefix: String!
  Status: String!
  Transition: AwsS3S50Input
  NoncurrentVersionTransition: AwsS3S52Input
  NoncurrentVersionExpiration: AwsS3S53Input
  AbortIncompleteMultipartUpload: AwsS3S54Input
}

type AwsS3S4v {
  Date: Date
  Days: Int
  ExpiredObjectDeleteMarker: Boolean
}

input AwsS3S4vInput {
  Date: Date
  Days: Int
  ExpiredObjectDeleteMarker: Boolean
}

type AwsS3S50 {
  Date: Date
  Days: Int
  StorageClass: String
}

input AwsS3S50Input {
  Date: Date
  Days: Int
  StorageClass: String
}

type AwsS3S52 {
  NoncurrentDays: Int
  StorageClass: String
}

input AwsS3S52Input {
  NoncurrentDays: Int
  StorageClass: String
}

type AwsS3S53 {
  NoncurrentDays: Int
}

input AwsS3S53Input {
  NoncurrentDays: Int
}

type AwsS3S54 {
  DaysAfterInitiation: Int
}

input AwsS3S54Input {
  DaysAfterInitiation: Int
}

type AwsS3S58 {
  Expiration: AwsS3S4v
  ID: String
  Prefix: String
  Filter: AwsS3S58Filter
  Status: String!
  Transitions: [AwsS3S50]
  NoncurrentVersionTransitions: [AwsS3S52]
  NoncurrentVersionExpiration: AwsS3S53
  AbortIncompleteMultipartUpload: AwsS3S54
}

type AwsS3S58Filter {
  Prefix: String
  Tag: AwsS3S3h
  And: AwsS3S58FilterAnd
}

type AwsS3S58FilterAnd {
  Prefix: String
  Tags: [AwsS3S3h]
}

input AwsS3S58FilterAndInput {
  Prefix: String
  Tags: [AwsS3S3hInput]
}

input AwsS3S58FilterInput {
  Prefix: String
  Tag: AwsS3S3hInput
  And: AwsS3S58FilterAndInput
}

input AwsS3S58Input {
  Expiration: AwsS3S4vInput
  ID: String
  Prefix: String
  Filter: AwsS3S58FilterInput
  Status: String!
  Transitions: [AwsS3S50Input]
  NoncurrentVersionTransitions: [AwsS3S52Input]
  NoncurrentVersionExpiration: AwsS3S53Input
  AbortIncompleteMultipartUpload: AwsS3S54Input
}

type AwsS3S5i {
  TargetBucket: String!
  TargetGrants: [AwsS3S5iTargetGrants]
  TargetPrefix: String!
}

input AwsS3S5iInput {
  TargetBucket: String!
  TargetGrants: [AwsS3S5iTargetGrantsInput]
  TargetPrefix: String!
}

type AwsS3S5iTargetGrants {
  Grantee: AwsS3S37
  Permission: String
}

input AwsS3S5iTargetGrantsInput {
  Grantee: AwsS3S37Input
  Permission: String
}

type AwsS3S5q {
  Id: String!
  Filter: AwsS3S5qFilter
}

type AwsS3S5qFilter {
  Prefix: String
  Tag: AwsS3S3h
  And: AwsS3S5qFilterAnd
}

type AwsS3S5qFilterAnd {
  Prefix: String
  Tags: [AwsS3S3h]
}

input AwsS3S5qFilterAndInput {
  Prefix: String
  Tags: [AwsS3S3hInput]
}

input AwsS3S5qFilterInput {
  Prefix: String
  Tag: AwsS3S3hInput
  And: AwsS3S5qFilterAndInput
}

input AwsS3S5qInput {
  Id: String!
  Filter: AwsS3S5qFilterInput
}

input AwsS3S5uCloudFunctionConfigurationInput {
  Id: String
  Event: String
  Events: [String]
  CloudFunction: String
  InvocationRole: String
}

input AwsS3S5uInput {
  TopicConfiguration: AwsS3S5uTopicConfigurationInput
  QueueConfiguration: AwsS3S5uQueueConfigurationInput
  CloudFunctionConfiguration: AwsS3S5uCloudFunctionConfigurationInput
}

input AwsS3S5uQueueConfigurationInput {
  Id: String
  Event: String
  Events: [String]
  Queue: String
}

input AwsS3S5uTopicConfigurationInput {
  Id: String
  Events: [String]
  Event: String
  Topic: String
}

input AwsS3S65Input {
  TopicConfigurations: [AwsS3S65TopicConfigurationsInput]
  QueueConfigurations: [AwsS3S65QueueConfigurationsInput]
  LambdaFunctionConfigurations: [AwsS3S65LambdaFunctionConfigurationsInput]
}

input AwsS3S65LambdaFunctionConfigurationsInput {
  Id: String
  LambdaFunctionArn: String!
  Events: [String]!
  Filter: AwsS3S68Input
}

input AwsS3S65QueueConfigurationsInput {
  Id: String
  QueueArn: String!
  Events: [String]!
  Filter: AwsS3S68Input
}

input AwsS3S65TopicConfigurationsInput {
  Id: String
  TopicArn: String!
  Events: [String]!
  Filter: AwsS3S68Input
}

input AwsS3S68Input {
  Key: AwsS3S68KeyInput
}

input AwsS3S68KeyFilterRulesInput {
  Name: String
  Value: String
}

input AwsS3S68KeyInput {
  FilterRules: [AwsS3S68KeyFilterRulesInput]
}

type AwsS3S6s {
  Role: String!
  Rules: [AwsS3S6sRules]!
}

input AwsS3S6sInput {
  Role: String!
  Rules: [AwsS3S6sRulesInput]!
}

type AwsS3S6sRules {
  ID: String
  Priority: Int
  Prefix: String
  Filter: AwsS3S6sRulesFilter
  Status: String!
  SourceSelectionCriteria: AwsS3S6sRulesSourceSelectionCriteria
  Destination: AwsS3S6sRulesDestination!
  DeleteMarkerReplication: AwsS3S6sRulesDeleteMarkerReplication
}

type AwsS3S6sRulesDeleteMarkerReplication {
  Status: String
}

input AwsS3S6sRulesDeleteMarkerReplicationInput {
  Status: String
}

type AwsS3S6sRulesDestination {
  Bucket: String!
  Account: String
  StorageClass: String
  AccessControlTranslation: AwsS3S6sRulesDestinationAccessControlTranslation
  EncryptionConfiguration: AwsS3S6sRulesDestinationEncryptionConfiguration
}

type AwsS3S6sRulesDestinationAccessControlTranslation {
  Owner: String!
}

input AwsS3S6sRulesDestinationAccessControlTranslationInput {
  Owner: String!
}

type AwsS3S6sRulesDestinationEncryptionConfiguration {
  ReplicaKmsKeyID: String
}

input AwsS3S6sRulesDestinationEncryptionConfigurationInput {
  ReplicaKmsKeyID: String
}

input AwsS3S6sRulesDestinationInput {
  Bucket: String!
  Account: String
  StorageClass: String
  AccessControlTranslation: AwsS3S6sRulesDestinationAccessControlTranslationInput
  EncryptionConfiguration: AwsS3S6sRulesDestinationEncryptionConfigurationInput
}

type AwsS3S6sRulesFilter {
  Prefix: String
  Tag: AwsS3S3h
  And: AwsS3S6sRulesFilterAnd
}

type AwsS3S6sRulesFilterAnd {
  Prefix: String
  Tags: [AwsS3S3h]
}

input AwsS3S6sRulesFilterAndInput {
  Prefix: String
  Tags: [AwsS3S3hInput]
}

input AwsS3S6sRulesFilterInput {
  Prefix: String
  Tag: AwsS3S3hInput
  And: AwsS3S6sRulesFilterAndInput
}

input AwsS3S6sRulesInput {
  ID: String
  Priority: Int
  Prefix: String
  Filter: AwsS3S6sRulesFilterInput
  Status: String!
  SourceSelectionCriteria: AwsS3S6sRulesSourceSelectionCriteriaInput
  Destination: AwsS3S6sRulesDestinationInput!
  DeleteMarkerReplication: AwsS3S6sRulesDeleteMarkerReplicationInput
}

type AwsS3S6sRulesSourceSelectionCriteria {
  SseKmsEncryptedObjects: AwsS3S6sRulesSourceSelectionCriteriaSseKmsEncryptedObjects
}

input AwsS3S6sRulesSourceSelectionCriteriaInput {
  SseKmsEncryptedObjects: AwsS3S6sRulesSourceSelectionCriteriaSseKmsEncryptedObjectsInput
}

type AwsS3S6sRulesSourceSelectionCriteriaSseKmsEncryptedObjects {
  Status: String!
}

input AwsS3S6sRulesSourceSelectionCriteriaSseKmsEncryptedObjectsInput {
  Status: String!
}

type AwsS3S7l {
  HostName: String!
  Protocol: String
}

input AwsS3S7lInput {
  HostName: String!
  Protocol: String
}

type AwsS3S7o {
  Suffix: String!
}

input AwsS3S7oInput {
  Suffix: String!
}

type AwsS3S7q {
  Key: String!
}

input AwsS3S7qInput {
  Key: String!
}

type AwsS3S7r {
  Condition: AwsS3S7rCondition
  Redirect: AwsS3S7rRedirect!
}

type AwsS3S7rCondition {
  HttpErrorCodeReturnedEquals: String
  KeyPrefixEquals: String
}

input AwsS3S7rConditionInput {
  HttpErrorCodeReturnedEquals: String
  KeyPrefixEquals: String
}

input AwsS3S7rInput {
  Condition: AwsS3S7rConditionInput
  Redirect: AwsS3S7rRedirectInput!
}

type AwsS3S7rRedirect {
  HostName: String
  HttpRedirectCode: String
  Protocol: String
  ReplaceKeyPrefixWith: String
  ReplaceKeyWith: String
}

input AwsS3S7rRedirectInput {
  HostName: String
  HttpRedirectCode: String
  Protocol: String
  ReplaceKeyPrefixWith: String
  ReplaceKeyWith: String
}

type AwsS3S8q {
  Status: String
}

input AwsS3S8qInput {
  Status: String
}

type AwsS3S8t {
  ObjectLockEnabled: String
  Rule: AwsS3S8tRule
}

input AwsS3S8tInput {
  ObjectLockEnabled: String
  Rule: AwsS3S8tRuleInput
}

type AwsS3S8tRule {
  DefaultRetention: AwsS3S8tRuleDefaultRetention
}

type AwsS3S8tRuleDefaultRetention {
  Mode: String
  Days: Int
  Years: Int
}

input AwsS3S8tRuleDefaultRetentionInput {
  Mode: String
  Days: Int
  Years: Int
}

input AwsS3S8tRuleInput {
  DefaultRetention: AwsS3S8tRuleDefaultRetentionInput
}

type AwsS3S91 {
  Mode: String
  RetainUntilDate: Date
}

input AwsS3S91Input {
  Mode: String
  RetainUntilDate: Date
}

type AwsS3S98 {
  BlockPublicAcls: Boolean
  IgnorePublicAcls: Boolean
  BlockPublicPolicy: Boolean
  RestrictPublicBuckets: Boolean
}

input AwsS3S98Input {
  BlockPublicAcls: Boolean
  IgnorePublicAcls: Boolean
  BlockPublicPolicy: Boolean
  RestrictPublicBuckets: Boolean
}

type AwsS3Sa5 {
  ID: String
  DisplayName: String
}

type AwsS3Sa6 {
  Prefix: String
}

type AwsS3Sao {
  Key: String
  LastModified: Date
  ETag: String
  Size: Int
  StorageClass: String
  Owner: AwsS3S32
}

input AwsS3Sb6Input {
  Grants: [AwsS3S35Input]
  Owner: AwsS3S32Input
}

input AwsS3SbtInput {
  TagSet: [AwsS3S3hInput]!
}

input AwsS3ScjCSVInput {
  FileHeaderInfo: String
  Comments: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
  AllowQuotedRecordDelimiter: Boolean
}

input AwsS3ScjInput {
  CSV: AwsS3ScjCSVInput
  CompressionType: String
  JSON: AwsS3ScjJSONInput
  Parquet: JSON
}

input AwsS3ScjJSONInput {
  Type: String
}

input AwsS3ScyCSVInput {
  QuoteFields: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsS3ScyInput {
  CSV: AwsS3ScyCSVInput
  JSON: AwsS3ScyJSONInput
}

input AwsS3ScyJSONInput {
  RecordDelimiter: String
}

input AwsS3SelectObjectContentInput {
  Bucket: String!
  Key: String!
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  Expression: String!
  ExpressionType: String!
  RequestProgress: AwsS3SelectObjectContentRequestProgressInput
  InputSerialization: AwsS3ScjInput!
  OutputSerialization: AwsS3ScyInput!
}

type AwsS3SelectObjectContentOutput {
  Payload: AwsS3SelectObjectContentOutputPayload
}

type AwsS3SelectObjectContentOutputPayload {
  Records: AwsS3SelectObjectContentOutputPayloadRecords
  Stats: AwsS3SelectObjectContentOutputPayloadStats
  Progress: AwsS3SelectObjectContentOutputPayloadProgress
  Cont: JSON
  End: JSON
}

type AwsS3SelectObjectContentOutputPayloadProgress {
  Details: AwsS3SelectObjectContentOutputPayloadProgressDetails
}

type AwsS3SelectObjectContentOutputPayloadProgressDetails {
  BytesScanned: JSON
  BytesProcessed: JSON
  BytesReturned: JSON
}

type AwsS3SelectObjectContentOutputPayloadRecords {
  Payload: JSON
}

type AwsS3SelectObjectContentOutputPayloadStats {
  Details: AwsS3SelectObjectContentOutputPayloadStatsDetails
}

type AwsS3SelectObjectContentOutputPayloadStatsDetails {
  BytesScanned: JSON
  BytesProcessed: JSON
  BytesReturned: JSON
}

input AwsS3SelectObjectContentRequestProgressInput {
  Enabled: Boolean
}

input AwsS3UploadPartCopyInput {
  Bucket: String!
  CopySource: String!
  CopySourceIfMatch: String
  CopySourceIfModifiedSince: Date
  CopySourceIfNoneMatch: String
  CopySourceIfUnmodifiedSince: Date
  CopySourceRange: String
  Key: String!
  PartNumber: Int!
  UploadId: String!
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  CopySourceSSECustomerAlgorithm: String
  CopySourceSSECustomerKey: JSON
  CopySourceSSECustomerKeyMD5: String
  RequestPayer: String
}

type AwsS3UploadPartCopyOutput {
  CopySourceVersionId: String
  CopyPartResult: AwsS3UploadPartCopyOutputCopyPartResult
  ServerSideEncryption: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

type AwsS3UploadPartCopyOutputCopyPartResult {
  ETag: String
  LastModified: Date
}

input AwsS3UploadPartInput {
  Body: JSON
  Bucket: String!
  ContentLength: JSON
  ContentMD5: String
  Key: String!
  PartNumber: Int!
  UploadId: String!
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  RequestPayer: String
}

type AwsS3UploadPartOutput {
  ServerSideEncryption: String
  ETag: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

"""Amazon SageMaker Service (2017-07-24)"""
type AwsSageMaker {
  addTags(input: AwsSageMakerAddTagsInput!, config: AwsConfig): AwsSageMakerAddTagsOutput
  createAlgorithm(input: AwsSageMakerCreateAlgorithmInput!, config: AwsConfig): AwsSageMakerCreateAlgorithmOutput
  createCodeRepository(input: AwsSageMakerCreateCodeRepositoryInput!, config: AwsConfig): AwsSageMakerCreateCodeRepositoryOutput
  createCompilationJob(input: AwsSageMakerCreateCompilationJobInput!, config: AwsConfig): AwsSageMakerCreateCompilationJobOutput
  createEndpoint(input: AwsSageMakerCreateEndpointInput!, config: AwsConfig): AwsSageMakerCreateEndpointOutput
  createEndpointConfig(input: AwsSageMakerCreateEndpointConfigInput!, config: AwsConfig): AwsSageMakerCreateEndpointConfigOutput
  createHyperParameterTuningJob(input: AwsSageMakerCreateHyperParameterTuningJobInput!, config: AwsConfig): AwsSageMakerCreateHyperParameterTuningJobOutput
  createLabelingJob(input: AwsSageMakerCreateLabelingJobInput!, config: AwsConfig): AwsSageMakerCreateLabelingJobOutput
  createModel(input: AwsSageMakerCreateModelInput!, config: AwsConfig): AwsSageMakerCreateModelOutput
  createModelPackage(input: AwsSageMakerCreateModelPackageInput!, config: AwsConfig): AwsSageMakerCreateModelPackageOutput
  createNotebookInstance(input: AwsSageMakerCreateNotebookInstanceInput!, config: AwsConfig): AwsSageMakerCreateNotebookInstanceOutput
  createNotebookInstanceLifecycleConfig(input: AwsSageMakerCreateNotebookInstanceLifecycleConfigInput!, config: AwsConfig): AwsSageMakerCreateNotebookInstanceLifecycleConfigOutput
  createPresignedNotebookInstanceUrl(input: AwsSageMakerCreatePresignedNotebookInstanceUrlInput!, config: AwsConfig): AwsSageMakerCreatePresignedNotebookInstanceUrlOutput
  createTrainingJob(input: AwsSageMakerCreateTrainingJobInput!, config: AwsConfig): AwsSageMakerCreateTrainingJobOutput
  createTransformJob(input: AwsSageMakerCreateTransformJobInput!, config: AwsConfig): AwsSageMakerCreateTransformJobOutput
  createWorkteam(input: AwsSageMakerCreateWorkteamInput!, config: AwsConfig): AwsSageMakerCreateWorkteamOutput
  deleteAlgorithm(input: AwsSageMakerDeleteAlgorithmInput!, config: AwsConfig): JSON
  deleteCodeRepository(input: AwsSageMakerDeleteCodeRepositoryInput!, config: AwsConfig): JSON
  deleteEndpoint(input: AwsSageMakerDeleteEndpointInput!, config: AwsConfig): JSON
  deleteEndpointConfig(input: AwsSageMakerDeleteEndpointConfigInput!, config: AwsConfig): JSON
  deleteModel(input: AwsSageMakerDeleteModelInput!, config: AwsConfig): JSON
  deleteModelPackage(input: AwsSageMakerDeleteModelPackageInput!, config: AwsConfig): JSON
  deleteNotebookInstance(input: AwsSageMakerDeleteNotebookInstanceInput!, config: AwsConfig): JSON
  deleteNotebookInstanceLifecycleConfig(input: AwsSageMakerDeleteNotebookInstanceLifecycleConfigInput!, config: AwsConfig): JSON
  deleteTags(input: AwsSageMakerDeleteTagsInput!, config: AwsConfig): JSON
  deleteWorkteam(input: AwsSageMakerDeleteWorkteamInput!, config: AwsConfig): AwsSageMakerDeleteWorkteamOutput
  describeAlgorithm(input: AwsSageMakerDescribeAlgorithmInput!, config: AwsConfig): AwsSageMakerDescribeAlgorithmOutput
  describeCodeRepository(input: AwsSageMakerDescribeCodeRepositoryInput!, config: AwsConfig): AwsSageMakerDescribeCodeRepositoryOutput
  describeCompilationJob(input: AwsSageMakerDescribeCompilationJobInput!, config: AwsConfig): AwsSageMakerDescribeCompilationJobOutput
  describeEndpoint(input: AwsSageMakerDescribeEndpointInput!, config: AwsConfig): AwsSageMakerDescribeEndpointOutput
  describeEndpointConfig(input: AwsSageMakerDescribeEndpointConfigInput!, config: AwsConfig): AwsSageMakerDescribeEndpointConfigOutput
  describeHyperParameterTuningJob(input: AwsSageMakerDescribeHyperParameterTuningJobInput!, config: AwsConfig): AwsSageMakerDescribeHyperParameterTuningJobOutput
  describeLabelingJob(input: AwsSageMakerDescribeLabelingJobInput!, config: AwsConfig): AwsSageMakerDescribeLabelingJobOutput
  describeModel(input: AwsSageMakerDescribeModelInput!, config: AwsConfig): AwsSageMakerDescribeModelOutput
  describeModelPackage(input: AwsSageMakerDescribeModelPackageInput!, config: AwsConfig): AwsSageMakerDescribeModelPackageOutput
  describeNotebookInstance(input: AwsSageMakerDescribeNotebookInstanceInput!, config: AwsConfig): AwsSageMakerDescribeNotebookInstanceOutput
  describeNotebookInstanceLifecycleConfig(input: AwsSageMakerDescribeNotebookInstanceLifecycleConfigInput!, config: AwsConfig): AwsSageMakerDescribeNotebookInstanceLifecycleConfigOutput
  describeSubscribedWorkteam(input: AwsSageMakerDescribeSubscribedWorkteamInput!, config: AwsConfig): AwsSageMakerDescribeSubscribedWorkteamOutput
  describeTrainingJob(input: AwsSageMakerDescribeTrainingJobInput!, config: AwsConfig): AwsSageMakerDescribeTrainingJobOutput
  describeTransformJob(input: AwsSageMakerDescribeTransformJobInput!, config: AwsConfig): AwsSageMakerDescribeTransformJobOutput
  describeWorkteam(input: AwsSageMakerDescribeWorkteamInput!, config: AwsConfig): AwsSageMakerDescribeWorkteamOutput
  getSearchSuggestions(input: AwsSageMakerGetSearchSuggestionsInput!, config: AwsConfig): AwsSageMakerGetSearchSuggestionsOutput
  listAlgorithms(input: AwsSageMakerListAlgorithmsInput, config: AwsConfig): AwsSageMakerListAlgorithmsOutput
  listCodeRepositories(input: AwsSageMakerListCodeRepositoriesInput, config: AwsConfig): AwsSageMakerListCodeRepositoriesOutput
  listCompilationJobs(input: AwsSageMakerListCompilationJobsInput, config: AwsConfig): AwsSageMakerListCompilationJobsOutput
  listEndpointConfigs(input: AwsSageMakerListEndpointConfigsInput, config: AwsConfig): AwsSageMakerListEndpointConfigsOutput
  listEndpoints(input: AwsSageMakerListEndpointsInput, config: AwsConfig): AwsSageMakerListEndpointsOutput
  listHyperParameterTuningJobs(input: AwsSageMakerListHyperParameterTuningJobsInput, config: AwsConfig): AwsSageMakerListHyperParameterTuningJobsOutput
  listLabelingJobs(input: AwsSageMakerListLabelingJobsInput, config: AwsConfig): AwsSageMakerListLabelingJobsOutput
  listLabelingJobsForWorkteam(input: AwsSageMakerListLabelingJobsForWorkteamInput!, config: AwsConfig): AwsSageMakerListLabelingJobsForWorkteamOutput
  listModelPackages(input: AwsSageMakerListModelPackagesInput, config: AwsConfig): AwsSageMakerListModelPackagesOutput
  listModels(input: AwsSageMakerListModelsInput, config: AwsConfig): AwsSageMakerListModelsOutput
  listNotebookInstanceLifecycleConfigs(input: AwsSageMakerListNotebookInstanceLifecycleConfigsInput, config: AwsConfig): AwsSageMakerListNotebookInstanceLifecycleConfigsOutput
  listNotebookInstances(input: AwsSageMakerListNotebookInstancesInput, config: AwsConfig): AwsSageMakerListNotebookInstancesOutput
  listSubscribedWorkteams(input: AwsSageMakerListSubscribedWorkteamsInput, config: AwsConfig): AwsSageMakerListSubscribedWorkteamsOutput
  listTags(input: AwsSageMakerListTagsInput!, config: AwsConfig): AwsSageMakerListTagsOutput
  listTrainingJobs(input: AwsSageMakerListTrainingJobsInput, config: AwsConfig): AwsSageMakerListTrainingJobsOutput
  listTrainingJobsForHyperParameterTuningJob(input: AwsSageMakerListTrainingJobsForHyperParameterTuningJobInput!, config: AwsConfig): AwsSageMakerListTrainingJobsForHyperParameterTuningJobOutput
  listTransformJobs(input: AwsSageMakerListTransformJobsInput, config: AwsConfig): AwsSageMakerListTransformJobsOutput
  listWorkteams(input: AwsSageMakerListWorkteamsInput, config: AwsConfig): AwsSageMakerListWorkteamsOutput
  renderUiTemplate(input: AwsSageMakerRenderUiTemplateInput!, config: AwsConfig): AwsSageMakerRenderUiTemplateOutput
  search(input: AwsSageMakerSearchInput!, config: AwsConfig): AwsSageMakerSearchOutput
  startNotebookInstance(input: AwsSageMakerStartNotebookInstanceInput!, config: AwsConfig): JSON
  stopCompilationJob(input: AwsSageMakerStopCompilationJobInput!, config: AwsConfig): JSON
  stopHyperParameterTuningJob(input: AwsSageMakerStopHyperParameterTuningJobInput!, config: AwsConfig): JSON
  stopLabelingJob(input: AwsSageMakerStopLabelingJobInput!, config: AwsConfig): JSON
  stopNotebookInstance(input: AwsSageMakerStopNotebookInstanceInput!, config: AwsConfig): JSON
  stopTrainingJob(input: AwsSageMakerStopTrainingJobInput!, config: AwsConfig): JSON
  stopTransformJob(input: AwsSageMakerStopTransformJobInput!, config: AwsConfig): JSON
  updateCodeRepository(input: AwsSageMakerUpdateCodeRepositoryInput!, config: AwsConfig): AwsSageMakerUpdateCodeRepositoryOutput
  updateEndpoint(input: AwsSageMakerUpdateEndpointInput!, config: AwsConfig): AwsSageMakerUpdateEndpointOutput
  updateEndpointWeightsAndCapacities(input: AwsSageMakerUpdateEndpointWeightsAndCapacitiesInput!, config: AwsConfig): AwsSageMakerUpdateEndpointWeightsAndCapacitiesOutput
  updateNotebookInstance(input: AwsSageMakerUpdateNotebookInstanceInput!, config: AwsConfig): JSON
  updateNotebookInstanceLifecycleConfig(input: AwsSageMakerUpdateNotebookInstanceLifecycleConfigInput!, config: AwsConfig): JSON
  updateWorkteam(input: AwsSageMakerUpdateWorkteamInput!, config: AwsConfig): AwsSageMakerUpdateWorkteamOutput
}

input AwsSageMakerAddTagsInput {
  ResourceArn: String!
  Tags: [AwsSageMakerS3Input]!
}

type AwsSageMakerAddTagsOutput {
  Tags: [AwsSageMakerS3]
}

input AwsSageMakerCreateAlgorithmInput {
  AlgorithmName: String!
  AlgorithmDescription: String
  TrainingSpecification: AwsSageMakerSbInput!
  InferenceSpecification: AwsSageMakerS17Input
  ValidationSpecification: AwsSageMakerS1jInput
  CertifyForMarketplace: Boolean
}

type AwsSageMakerCreateAlgorithmOutput {
  AlgorithmArn: String!
}

input AwsSageMakerCreateCodeRepositoryInput {
  CodeRepositoryName: String!
  GitConfig: AwsSageMakerS2tInput!
}

type AwsSageMakerCreateCodeRepositoryOutput {
  CodeRepositoryArn: String!
}

input AwsSageMakerCreateCompilationJobInput {
  CompilationJobName: String!
  RoleArn: String!
  InputConfig: AwsSageMakerS30Input!
  OutputConfig: AwsSageMakerS33Input!
  StoppingCondition: AwsSageMakerS27Input!
}

type AwsSageMakerCreateCompilationJobOutput {
  CompilationJobArn: String!
}

input AwsSageMakerCreateEndpointConfigInput {
  EndpointConfigName: String!
  ProductionVariants: [AwsSageMakerS3dInput]!
  Tags: [AwsSageMakerS3Input]
  KmsKeyId: String
}

type AwsSageMakerCreateEndpointConfigOutput {
  EndpointConfigArn: String!
}

input AwsSageMakerCreateEndpointInput {
  EndpointName: String!
  EndpointConfigName: String!
  Tags: [AwsSageMakerS3Input]
}

type AwsSageMakerCreateEndpointOutput {
  EndpointArn: String!
}

input AwsSageMakerCreateHyperParameterTuningJobInput {
  HyperParameterTuningJobName: String!
  HyperParameterTuningJobConfig: AwsSageMakerS3oInput!
  TrainingJobDefinition: AwsSageMakerS42Input
  WarmStartConfig: AwsSageMakerS4bInput
  Tags: [AwsSageMakerS3Input]
}

type AwsSageMakerCreateHyperParameterTuningJobOutput {
  HyperParameterTuningJobArn: String!
}

input AwsSageMakerCreateLabelingJobInput {
  LabelingJobName: String!
  LabelAttributeName: String!
  InputConfig: AwsSageMakerS4kInput!
  OutputConfig: AwsSageMakerS4qInput!
  RoleArn: String!
  LabelCategoryConfigS3Uri: String
  StoppingConditions: AwsSageMakerS4rInput
  LabelingJobAlgorithmsConfig: AwsSageMakerS4uInput
  HumanTaskConfig: AwsSageMakerS4yInput!
  Tags: [AwsSageMakerS3Input]
}

type AwsSageMakerCreateLabelingJobOutput {
  LabelingJobArn: String!
}

input AwsSageMakerCreateModelInput {
  ModelName: String!
  PrimaryContainer: AwsSageMakerS5jInput
  Containers: [AwsSageMakerS5jInput]
  ExecutionRoleArn: String!
  Tags: [AwsSageMakerS3Input]
  VpcConfig: AwsSageMakerS46Input
  EnableNetworkIsolation: Boolean
}

type AwsSageMakerCreateModelOutput {
  ModelArn: String!
}

input AwsSageMakerCreateModelPackageInput {
  ModelPackageName: String!
  ModelPackageDescription: String
  InferenceSpecification: AwsSageMakerS17Input
  ValidationSpecification: AwsSageMakerS5qInput
  SourceAlgorithmSpecification: AwsSageMakerS5tInput
  CertifyForMarketplace: Boolean
}

type AwsSageMakerCreateModelPackageOutput {
  ModelPackageArn: String!
}

input AwsSageMakerCreateNotebookInstanceInput {
  NotebookInstanceName: String!
  InstanceType: String!
  SubnetId: String
  SecurityGroupIds: [String]
  RoleArn: String!
  KmsKeyId: String
  Tags: [AwsSageMakerS3Input]
  LifecycleConfigName: String
  DirectInternetAccess: String
  VolumeSizeInGB: Int
  AcceleratorTypes: [String]
  DefaultCodeRepository: String
  AdditionalCodeRepositories: [String]
  RootAccess: String
}

input AwsSageMakerCreateNotebookInstanceLifecycleConfigInput {
  NotebookInstanceLifecycleConfigName: String!
  OnCreate: [AwsSageMakerS6dInput]
  OnStart: [AwsSageMakerS6dInput]
}

type AwsSageMakerCreateNotebookInstanceLifecycleConfigOutput {
  NotebookInstanceLifecycleConfigArn: String
}

type AwsSageMakerCreateNotebookInstanceOutput {
  NotebookInstanceArn: String
}

input AwsSageMakerCreatePresignedNotebookInstanceUrlInput {
  NotebookInstanceName: String!
  SessionExpirationDurationInSeconds: Int
}

type AwsSageMakerCreatePresignedNotebookInstanceUrlOutput {
  AuthorizedUrl: String
}

input AwsSageMakerCreateTrainingJobInput {
  TrainingJobName: String!
  HyperParameters: JSON
  AlgorithmSpecification: AwsSageMakerS6oInput!
  RoleArn: String!
  InputDataConfig: [AwsSageMakerS1qInput]
  OutputDataConfig: AwsSageMakerS22Input!
  ResourceConfig: AwsSageMakerS24Input!
  VpcConfig: AwsSageMakerS46Input
  StoppingCondition: AwsSageMakerS27Input!
  Tags: [AwsSageMakerS3Input]
  EnableNetworkIsolation: Boolean
  EnableInterContainerTrafficEncryption: Boolean
}

type AwsSageMakerCreateTrainingJobOutput {
  TrainingJobArn: String!
}

input AwsSageMakerCreateTransformJobInput {
  TransformJobName: String!
  ModelName: String!
  MaxConcurrentTransforms: Int
  MaxPayloadInMB: Int
  BatchStrategy: String
  Environment: JSON
  TransformInput: AwsSageMakerS2gInput!
  TransformOutput: AwsSageMakerS2kInput!
  TransformResources: AwsSageMakerS2nInput!
  DataProcessing: AwsSageMakerS6tInput
  Tags: [AwsSageMakerS3Input]
}

type AwsSageMakerCreateTransformJobOutput {
  TransformJobArn: String!
}

input AwsSageMakerCreateWorkteamInput {
  WorkteamName: String!
  MemberDefinitions: [AwsSageMakerS70Input]!
  Description: String!
  NotificationConfiguration: AwsSageMakerS77Input
  Tags: [AwsSageMakerS3Input]
}

type AwsSageMakerCreateWorkteamOutput {
  WorkteamArn: String
}

input AwsSageMakerDeleteAlgorithmInput {
  AlgorithmName: String!
}

input AwsSageMakerDeleteCodeRepositoryInput {
  CodeRepositoryName: String!
}

input AwsSageMakerDeleteEndpointConfigInput {
  EndpointConfigName: String!
}

input AwsSageMakerDeleteEndpointInput {
  EndpointName: String!
}

input AwsSageMakerDeleteModelInput {
  ModelName: String!
}

input AwsSageMakerDeleteModelPackageInput {
  ModelPackageName: String!
}

input AwsSageMakerDeleteNotebookInstanceInput {
  NotebookInstanceName: String!
}

input AwsSageMakerDeleteNotebookInstanceLifecycleConfigInput {
  NotebookInstanceLifecycleConfigName: String!
}

input AwsSageMakerDeleteTagsInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsSageMakerDeleteWorkteamInput {
  WorkteamName: String!
}

type AwsSageMakerDeleteWorkteamOutput {
  Success: Boolean!
}

input AwsSageMakerDescribeAlgorithmInput {
  AlgorithmName: String!
}

type AwsSageMakerDescribeAlgorithmOutput {
  AlgorithmName: String!
  AlgorithmArn: String!
  AlgorithmDescription: String
  CreationTime: Date!
  TrainingSpecification: AwsSageMakerSb!
  InferenceSpecification: AwsSageMakerS17
  ValidationSpecification: AwsSageMakerS1j
  AlgorithmStatus: String!
  AlgorithmStatusDetails: AwsSageMakerDescribeAlgorithmOutputAlgorithmStatusDetails!
  ProductId: String
  CertifyForMarketplace: Boolean
}

type AwsSageMakerDescribeAlgorithmOutputAlgorithmStatusDetails {
  ValidationStatuses: [AwsSageMakerS7t]
  ImageScanStatuses: [AwsSageMakerS7t]
}

input AwsSageMakerDescribeCodeRepositoryInput {
  CodeRepositoryName: String!
}

type AwsSageMakerDescribeCodeRepositoryOutput {
  CodeRepositoryName: String!
  CodeRepositoryArn: String!
  CreationTime: Date!
  LastModifiedTime: Date!
  GitConfig: AwsSageMakerS2t
}

input AwsSageMakerDescribeCompilationJobInput {
  CompilationJobName: String!
}

type AwsSageMakerDescribeCompilationJobOutput {
  CompilationJobName: String!
  CompilationJobArn: String!
  CompilationJobStatus: String!
  CompilationStartTime: Date
  CompilationEndTime: Date
  StoppingCondition: AwsSageMakerS27!
  CreationTime: Date!
  LastModifiedTime: Date!
  FailureReason: String!
  ModelArtifacts: AwsSageMakerS85!
  RoleArn: String!
  InputConfig: AwsSageMakerS30!
  OutputConfig: AwsSageMakerS33!
}

input AwsSageMakerDescribeEndpointConfigInput {
  EndpointConfigName: String!
}

type AwsSageMakerDescribeEndpointConfigOutput {
  EndpointConfigName: String!
  EndpointConfigArn: String!
  ProductionVariants: [AwsSageMakerS3d]!
  KmsKeyId: String
  CreationTime: Date!
}

input AwsSageMakerDescribeEndpointInput {
  EndpointName: String!
}

type AwsSageMakerDescribeEndpointOutput {
  EndpointName: String!
  EndpointArn: String!
  EndpointConfigName: String!
  ProductionVariants: [AwsSageMakerDescribeEndpointOutputProductionVariants]
  EndpointStatus: String!
  FailureReason: String
  CreationTime: Date!
  LastModifiedTime: Date!
}

type AwsSageMakerDescribeEndpointOutputProductionVariants {
  VariantName: String!
  DeployedImages: [AwsSageMakerDescribeEndpointOutputProductionVariantsDeployedImages]
  CurrentWeight: Float
  DesiredWeight: Float
  CurrentInstanceCount: Int
  DesiredInstanceCount: Int
}

type AwsSageMakerDescribeEndpointOutputProductionVariantsDeployedImages {
  SpecifiedImage: String
  ResolvedImage: String
  ResolutionTime: Date
}

input AwsSageMakerDescribeHyperParameterTuningJobInput {
  HyperParameterTuningJobName: String!
}

type AwsSageMakerDescribeHyperParameterTuningJobOutput {
  HyperParameterTuningJobName: String!
  HyperParameterTuningJobArn: String!
  HyperParameterTuningJobConfig: AwsSageMakerS3o!
  TrainingJobDefinition: AwsSageMakerS42
  HyperParameterTuningJobStatus: String!
  CreationTime: Date!
  HyperParameterTuningEndTime: Date
  LastModifiedTime: Date
  TrainingJobStatusCounters: AwsSageMakerS8i!
  ObjectiveStatusCounters: AwsSageMakerS8k!
  BestTrainingJob: AwsSageMakerS8m
  OverallBestTrainingJob: AwsSageMakerS8m
  WarmStartConfig: AwsSageMakerS4b
  FailureReason: String
}

input AwsSageMakerDescribeLabelingJobInput {
  LabelingJobName: String!
}

type AwsSageMakerDescribeLabelingJobOutput {
  LabelingJobStatus: String!
  LabelCounters: AwsSageMakerS8u!
  FailureReason: String
  CreationTime: Date!
  LastModifiedTime: Date!
  JobReferenceCode: String!
  LabelingJobName: String!
  LabelingJobArn: String!
  LabelAttributeName: String
  InputConfig: AwsSageMakerS4k!
  OutputConfig: AwsSageMakerS4q!
  RoleArn: String!
  LabelCategoryConfigS3Uri: String
  StoppingConditions: AwsSageMakerS4r
  LabelingJobAlgorithmsConfig: AwsSageMakerS4u
  HumanTaskConfig: AwsSageMakerS4y!
  Tags: [AwsSageMakerS3]
  LabelingJobOutput: AwsSageMakerS8x
}

input AwsSageMakerDescribeModelInput {
  ModelName: String!
}

type AwsSageMakerDescribeModelOutput {
  ModelName: String!
  PrimaryContainer: AwsSageMakerS5j
  Containers: [AwsSageMakerS5j]
  ExecutionRoleArn: String!
  VpcConfig: AwsSageMakerS46
  CreationTime: Date!
  ModelArn: String!
  EnableNetworkIsolation: Boolean
}

input AwsSageMakerDescribeModelPackageInput {
  ModelPackageName: String!
}

type AwsSageMakerDescribeModelPackageOutput {
  ModelPackageName: String!
  ModelPackageArn: String!
  ModelPackageDescription: String
  CreationTime: Date!
  InferenceSpecification: AwsSageMakerS17
  SourceAlgorithmSpecification: AwsSageMakerS5t
  ValidationSpecification: AwsSageMakerS5q
  ModelPackageStatus: String!
  ModelPackageStatusDetails: AwsSageMakerDescribeModelPackageOutputModelPackageStatusDetails!
  CertifyForMarketplace: Boolean
}

type AwsSageMakerDescribeModelPackageOutputModelPackageStatusDetails {
  ValidationStatuses: [AwsSageMakerS94]!
  ImageScanStatuses: [AwsSageMakerS94]
}

input AwsSageMakerDescribeNotebookInstanceInput {
  NotebookInstanceName: String!
}

input AwsSageMakerDescribeNotebookInstanceLifecycleConfigInput {
  NotebookInstanceLifecycleConfigName: String!
}

type AwsSageMakerDescribeNotebookInstanceLifecycleConfigOutput {
  NotebookInstanceLifecycleConfigArn: String
  NotebookInstanceLifecycleConfigName: String
  OnCreate: [AwsSageMakerS6d]
  OnStart: [AwsSageMakerS6d]
  LastModifiedTime: Date
  CreationTime: Date
}

type AwsSageMakerDescribeNotebookInstanceOutput {
  NotebookInstanceArn: String
  NotebookInstanceName: String
  NotebookInstanceStatus: String
  FailureReason: String
  Url: String
  InstanceType: String
  SubnetId: String
  SecurityGroups: [String]
  RoleArn: String
  KmsKeyId: String
  NetworkInterfaceId: String
  LastModifiedTime: Date
  CreationTime: Date
  NotebookInstanceLifecycleConfigName: String
  DirectInternetAccess: String
  VolumeSizeInGB: Int
  AcceleratorTypes: [String]
  DefaultCodeRepository: String
  AdditionalCodeRepositories: [String]
  RootAccess: String
}

input AwsSageMakerDescribeSubscribedWorkteamInput {
  WorkteamArn: String!
}

type AwsSageMakerDescribeSubscribedWorkteamOutput {
  SubscribedWorkteam: AwsSageMakerS9f!
}

input AwsSageMakerDescribeTrainingJobInput {
  TrainingJobName: String!
}

type AwsSageMakerDescribeTrainingJobOutput {
  TrainingJobName: String!
  TrainingJobArn: String!
  TuningJobArn: String
  LabelingJobArn: String
  ModelArtifacts: AwsSageMakerS85!
  TrainingJobStatus: String!
  SecondaryStatus: String!
  FailureReason: String
  HyperParameters: JSON
  AlgorithmSpecification: AwsSageMakerS6o!
  RoleArn: String
  InputDataConfig: [AwsSageMakerS1q]
  OutputDataConfig: AwsSageMakerS22
  ResourceConfig: AwsSageMakerS24!
  VpcConfig: AwsSageMakerS46
  StoppingCondition: AwsSageMakerS27!
  CreationTime: Date!
  TrainingStartTime: Date
  TrainingEndTime: Date
  LastModifiedTime: Date
  SecondaryStatusTransitions: [AwsSageMakerS9j]
  FinalMetricDataList: [AwsSageMakerS9m]
  EnableNetworkIsolation: Boolean
  EnableInterContainerTrafficEncryption: Boolean
}

input AwsSageMakerDescribeTransformJobInput {
  TransformJobName: String!
}

type AwsSageMakerDescribeTransformJobOutput {
  TransformJobName: String!
  TransformJobArn: String!
  TransformJobStatus: String!
  FailureReason: String
  ModelName: String!
  MaxConcurrentTransforms: Int
  MaxPayloadInMB: Int
  BatchStrategy: String
  Environment: JSON
  TransformInput: AwsSageMakerS2g!
  TransformOutput: AwsSageMakerS2k
  TransformResources: AwsSageMakerS2n!
  CreationTime: Date!
  TransformStartTime: Date
  TransformEndTime: Date
  LabelingJobArn: String
  DataProcessing: AwsSageMakerS6t
}

input AwsSageMakerDescribeWorkteamInput {
  WorkteamName: String!
}

type AwsSageMakerDescribeWorkteamOutput {
  Workteam: AwsSageMakerS9u!
}

input AwsSageMakerGetSearchSuggestionsInput {
  Resource: String!
  SuggestionQuery: AwsSageMakerGetSearchSuggestionsSuggestionQueryInput
}

type AwsSageMakerGetSearchSuggestionsOutput {
  PropertyNameSuggestions: [AwsSageMakerGetSearchSuggestionsOutputPropertyNameSuggestions]
}

type AwsSageMakerGetSearchSuggestionsOutputPropertyNameSuggestions {
  PropertyName: String
}

input AwsSageMakerGetSearchSuggestionsSuggestionQueryInput {
  PropertyNameQuery: AwsSageMakerGetSearchSuggestionsSuggestionQueryPropertyNameQueryInput
}

input AwsSageMakerGetSearchSuggestionsSuggestionQueryPropertyNameQueryInput {
  PropertyNameHint: String!
}

input AwsSageMakerListAlgorithmsInput {
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  MaxResults: Int
  NameContains: String
  NextToken: String
  SortBy: String
  SortOrder: String
}

type AwsSageMakerListAlgorithmsOutput {
  AlgorithmSummaryList: [AwsSageMakerListAlgorithmsOutputAlgorithmSummaryList]!
  NextToken: String
}

type AwsSageMakerListAlgorithmsOutputAlgorithmSummaryList {
  AlgorithmName: String!
  AlgorithmArn: String!
  AlgorithmDescription: String
  CreationTime: Date!
  AlgorithmStatus: String!
}

input AwsSageMakerListCodeRepositoriesInput {
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  LastModifiedTimeAfter: Date
  LastModifiedTimeBefore: Date
  MaxResults: Int
  NameContains: String
  NextToken: String
  SortBy: String
  SortOrder: String
}

type AwsSageMakerListCodeRepositoriesOutput {
  CodeRepositorySummaryList: [AwsSageMakerListCodeRepositoriesOutputCodeRepositorySummaryList]!
  NextToken: String
}

type AwsSageMakerListCodeRepositoriesOutputCodeRepositorySummaryList {
  CodeRepositoryName: String!
  CodeRepositoryArn: String!
  CreationTime: Date!
  LastModifiedTime: Date!
  GitConfig: AwsSageMakerS2t
}

input AwsSageMakerListCompilationJobsInput {
  NextToken: String
  MaxResults: Int
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  LastModifiedTimeAfter: Date
  LastModifiedTimeBefore: Date
  NameContains: String
  StatusEquals: String
  SortBy: String
  SortOrder: String
}

type AwsSageMakerListCompilationJobsOutput {
  CompilationJobSummaries: [AwsSageMakerListCompilationJobsOutputCompilationJobSummaries]!
  NextToken: String
}

type AwsSageMakerListCompilationJobsOutputCompilationJobSummaries {
  CompilationJobName: String!
  CompilationJobArn: String!
  CreationTime: Date!
  CompilationStartTime: Date
  CompilationEndTime: Date
  CompilationTargetDevice: String!
  LastModifiedTime: Date
  CompilationJobStatus: String!
}

input AwsSageMakerListEndpointConfigsInput {
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
}

type AwsSageMakerListEndpointConfigsOutput {
  EndpointConfigs: [AwsSageMakerListEndpointConfigsOutputEndpointConfigs]!
  NextToken: String
}

type AwsSageMakerListEndpointConfigsOutputEndpointConfigs {
  EndpointConfigName: String!
  EndpointConfigArn: String!
  CreationTime: Date!
}

input AwsSageMakerListEndpointsInput {
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
  LastModifiedTimeBefore: Date
  LastModifiedTimeAfter: Date
  StatusEquals: String
}

type AwsSageMakerListEndpointsOutput {
  Endpoints: [AwsSageMakerListEndpointsOutputEndpoints]!
  NextToken: String
}

type AwsSageMakerListEndpointsOutputEndpoints {
  EndpointName: String!
  EndpointArn: String!
  CreationTime: Date!
  LastModifiedTime: Date!
  EndpointStatus: String!
}

input AwsSageMakerListHyperParameterTuningJobsInput {
  NextToken: String
  MaxResults: Int
  SortBy: String
  SortOrder: String
  NameContains: String
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  LastModifiedTimeAfter: Date
  LastModifiedTimeBefore: Date
  StatusEquals: String
}

type AwsSageMakerListHyperParameterTuningJobsOutput {
  HyperParameterTuningJobSummaries: [AwsSageMakerListHyperParameterTuningJobsOutputHyperParameterTuningJobSummaries]!
  NextToken: String
}

type AwsSageMakerListHyperParameterTuningJobsOutputHyperParameterTuningJobSummaries {
  HyperParameterTuningJobName: String!
  HyperParameterTuningJobArn: String!
  HyperParameterTuningJobStatus: String!
  Strategy: String!
  CreationTime: Date!
  HyperParameterTuningEndTime: Date
  LastModifiedTime: Date
  TrainingJobStatusCounters: AwsSageMakerS8i!
  ObjectiveStatusCounters: AwsSageMakerS8k!
  ResourceLimits: AwsSageMakerS3q
}

input AwsSageMakerListLabelingJobsForWorkteamInput {
  WorkteamArn: String!
  MaxResults: Int
  NextToken: String
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  JobReferenceCodeContains: String
  SortBy: String
  SortOrder: String
}

type AwsSageMakerListLabelingJobsForWorkteamOutput {
  LabelingJobSummaryList: [AwsSageMakerListLabelingJobsForWorkteamOutputLabelingJobSummaryList]!
  NextToken: String
}

type AwsSageMakerListLabelingJobsForWorkteamOutputLabelingJobSummaryList {
  LabelingJobName: String
  JobReferenceCode: String!
  WorkRequesterAccountId: String!
  CreationTime: Date!
  LabelCounters: AwsSageMakerListLabelingJobsForWorkteamOutputLabelingJobSummaryListLabelCounters
  NumberOfHumanWorkersPerDataObject: Int
}

type AwsSageMakerListLabelingJobsForWorkteamOutputLabelingJobSummaryListLabelCounters {
  HumanLabeled: Int
  PendingHuman: Int
  Total: Int
}

input AwsSageMakerListLabelingJobsInput {
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  LastModifiedTimeAfter: Date
  LastModifiedTimeBefore: Date
  MaxResults: Int
  NextToken: String
  NameContains: String
  SortBy: String
  SortOrder: String
  StatusEquals: String
}

type AwsSageMakerListLabelingJobsOutput {
  LabelingJobSummaryList: [AwsSageMakerListLabelingJobsOutputLabelingJobSummaryList]
  NextToken: String
}

type AwsSageMakerListLabelingJobsOutputLabelingJobSummaryList {
  LabelingJobName: String!
  LabelingJobArn: String!
  CreationTime: Date!
  LastModifiedTime: Date!
  LabelingJobStatus: String!
  LabelCounters: AwsSageMakerS8u!
  WorkteamArn: String!
  PreHumanTaskLambdaArn: String!
  AnnotationConsolidationLambdaArn: String
  FailureReason: String
  LabelingJobOutput: AwsSageMakerS8x
  InputConfig: AwsSageMakerS4k
}

input AwsSageMakerListModelPackagesInput {
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  MaxResults: Int
  NameContains: String
  NextToken: String
  SortBy: String
  SortOrder: String
}

type AwsSageMakerListModelPackagesOutput {
  ModelPackageSummaryList: [AwsSageMakerListModelPackagesOutputModelPackageSummaryList]!
  NextToken: String
}

type AwsSageMakerListModelPackagesOutputModelPackageSummaryList {
  ModelPackageName: String!
  ModelPackageArn: String!
  ModelPackageDescription: String
  CreationTime: Date!
  ModelPackageStatus: String!
}

input AwsSageMakerListModelsInput {
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
}

type AwsSageMakerListModelsOutput {
  Models: [AwsSageMakerListModelsOutputModels]!
  NextToken: String
}

type AwsSageMakerListModelsOutputModels {
  ModelName: String!
  ModelArn: String!
  CreationTime: Date!
}

input AwsSageMakerListNotebookInstanceLifecycleConfigsInput {
  NextToken: String
  MaxResults: Int
  SortBy: String
  SortOrder: String
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
  LastModifiedTimeBefore: Date
  LastModifiedTimeAfter: Date
}

type AwsSageMakerListNotebookInstanceLifecycleConfigsOutput {
  NextToken: String
  NotebookInstanceLifecycleConfigs: [AwsSageMakerListNotebookInstanceLifecycleConfigsOutputNotebookInstanceLifecycleConfigs]
}

type AwsSageMakerListNotebookInstanceLifecycleConfigsOutputNotebookInstanceLifecycleConfigs {
  NotebookInstanceLifecycleConfigName: String!
  NotebookInstanceLifecycleConfigArn: String!
  CreationTime: Date
  LastModifiedTime: Date
}

input AwsSageMakerListNotebookInstancesInput {
  NextToken: String
  MaxResults: Int
  SortBy: String
  SortOrder: String
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
  LastModifiedTimeBefore: Date
  LastModifiedTimeAfter: Date
  StatusEquals: String
  NotebookInstanceLifecycleConfigNameContains: String
  DefaultCodeRepositoryContains: String
  AdditionalCodeRepositoryEquals: String
}

type AwsSageMakerListNotebookInstancesOutput {
  NextToken: String
  NotebookInstances: [AwsSageMakerListNotebookInstancesOutputNotebookInstances]
}

type AwsSageMakerListNotebookInstancesOutputNotebookInstances {
  NotebookInstanceName: String!
  NotebookInstanceArn: String!
  NotebookInstanceStatus: String
  Url: String
  InstanceType: String
  CreationTime: Date
  LastModifiedTime: Date
  NotebookInstanceLifecycleConfigName: String
  DefaultCodeRepository: String
  AdditionalCodeRepositories: [String]
}

input AwsSageMakerListSubscribedWorkteamsInput {
  NameContains: String
  NextToken: String
  MaxResults: Int
}

type AwsSageMakerListSubscribedWorkteamsOutput {
  SubscribedWorkteams: [AwsSageMakerS9f]!
  NextToken: String
}

input AwsSageMakerListTagsInput {
  ResourceArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsSageMakerListTagsOutput {
  Tags: [AwsSageMakerS3]
  NextToken: String
}

input AwsSageMakerListTrainingJobsForHyperParameterTuningJobInput {
  HyperParameterTuningJobName: String!
  NextToken: String
  MaxResults: Int
  StatusEquals: String
  SortBy: String
  SortOrder: String
}

type AwsSageMakerListTrainingJobsForHyperParameterTuningJobOutput {
  TrainingJobSummaries: [AwsSageMakerS8m]!
  NextToken: String
}

input AwsSageMakerListTrainingJobsInput {
  NextToken: String
  MaxResults: Int
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  LastModifiedTimeAfter: Date
  LastModifiedTimeBefore: Date
  NameContains: String
  StatusEquals: String
  SortBy: String
  SortOrder: String
}

type AwsSageMakerListTrainingJobsOutput {
  TrainingJobSummaries: [AwsSageMakerListTrainingJobsOutputTrainingJobSummaries]!
  NextToken: String
}

type AwsSageMakerListTrainingJobsOutputTrainingJobSummaries {
  TrainingJobName: String!
  TrainingJobArn: String!
  CreationTime: Date!
  TrainingEndTime: Date
  LastModifiedTime: Date
  TrainingJobStatus: String!
}

input AwsSageMakerListTransformJobsInput {
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  LastModifiedTimeAfter: Date
  LastModifiedTimeBefore: Date
  NameContains: String
  StatusEquals: String
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
}

type AwsSageMakerListTransformJobsOutput {
  TransformJobSummaries: [AwsSageMakerListTransformJobsOutputTransformJobSummaries]!
  NextToken: String
}

type AwsSageMakerListTransformJobsOutputTransformJobSummaries {
  TransformJobName: String!
  TransformJobArn: String!
  CreationTime: Date!
  TransformEndTime: Date
  LastModifiedTime: Date
  TransformJobStatus: String!
  FailureReason: String
}

input AwsSageMakerListWorkteamsInput {
  SortBy: String
  SortOrder: String
  NameContains: String
  NextToken: String
  MaxResults: Int
}

type AwsSageMakerListWorkteamsOutput {
  Workteams: [AwsSageMakerS9u]!
  NextToken: String
}

input AwsSageMakerRenderUiTemplateInput {
  UiTemplate: AwsSageMakerRenderUiTemplateUiTemplateInput!
  Task: AwsSageMakerRenderUiTemplateTaskInput!
  RoleArn: String!
}

type AwsSageMakerRenderUiTemplateOutput {
  RenderedContent: String!
  Errors: [AwsSageMakerRenderUiTemplateOutputErrors]!
}

type AwsSageMakerRenderUiTemplateOutputErrors {
  Code: String!
  Message: String!
}

input AwsSageMakerRenderUiTemplateTaskInput {
  Input: String!
}

input AwsSageMakerRenderUiTemplateUiTemplateInput {
  Content: String!
}

"""Amazon SageMaker Runtime (2017-05-13)"""
type AwsSageMakerRuntime {
  invokeEndpoint(input: AwsSageMakerRuntimeInvokeEndpointInput!, config: AwsConfig): AwsSageMakerRuntimeInvokeEndpointOutput
}

input AwsSageMakerRuntimeInvokeEndpointInput {
  EndpointName: String!
  Body: JSON!
  ContentType: String
  Accept: String
  CustomAttributes: String
}

type AwsSageMakerRuntimeInvokeEndpointOutput {
  Body: JSON!
  ContentType: String
  InvokedProductionVariant: String
  CustomAttributes: String
}

type AwsSageMakerS15 {
  Type: String!
  MetricName: String!
}

input AwsSageMakerS15Input {
  Type: String!
  MetricName: String!
}

type AwsSageMakerS17 {
  Containers: [AwsSageMakerS17Containers]!
  SupportedTransformInstanceTypes: [String]!
  SupportedRealtimeInferenceInstanceTypes: [String]!
  SupportedContentTypes: [String]!
  SupportedResponseMIMETypes: [String]!
}

type AwsSageMakerS17Containers {
  ContainerHostname: String
  Image: String!
  ImageDigest: String
  ModelDataUrl: String
  ProductId: String
}

input AwsSageMakerS17ContainersInput {
  ContainerHostname: String
  Image: String!
  ImageDigest: String
  ModelDataUrl: String
  ProductId: String
}

input AwsSageMakerS17Input {
  Containers: [AwsSageMakerS17ContainersInput]!
  SupportedTransformInstanceTypes: [String]!
  SupportedRealtimeInferenceInstanceTypes: [String]!
  SupportedContentTypes: [String]!
  SupportedResponseMIMETypes: [String]!
}

type AwsSageMakerS1j {
  ValidationRole: String!
  ValidationProfiles: [AwsSageMakerS1jValidationProfiles]!
}

input AwsSageMakerS1jInput {
  ValidationRole: String!
  ValidationProfiles: [AwsSageMakerS1jValidationProfilesInput]!
}

type AwsSageMakerS1jValidationProfiles {
  ProfileName: String!
  TrainingJobDefinition: AwsSageMakerS1jValidationProfilesTrainingJobDefinition!
  TransformJobDefinition: AwsSageMakerS29
}

input AwsSageMakerS1jValidationProfilesInput {
  ProfileName: String!
  TrainingJobDefinition: AwsSageMakerS1jValidationProfilesTrainingJobDefinitionInput!
  TransformJobDefinition: AwsSageMakerS29Input
}

type AwsSageMakerS1jValidationProfilesTrainingJobDefinition {
  TrainingInputMode: String!
  HyperParameters: JSON
  InputDataConfig: [AwsSageMakerS1q]!
  OutputDataConfig: AwsSageMakerS22!
  ResourceConfig: AwsSageMakerS24!
  StoppingCondition: AwsSageMakerS27!
}

input AwsSageMakerS1jValidationProfilesTrainingJobDefinitionInput {
  TrainingInputMode: String!
  HyperParameters: JSON
  InputDataConfig: [AwsSageMakerS1qInput]!
  OutputDataConfig: AwsSageMakerS22Input!
  ResourceConfig: AwsSageMakerS24Input!
  StoppingCondition: AwsSageMakerS27Input!
}

type AwsSageMakerS1q {
  ChannelName: String!
  DataSource: AwsSageMakerS1qDataSource!
  ContentType: String
  CompressionType: String
  RecordWrapperType: String
  InputMode: String
  ShuffleConfig: AwsSageMakerS1qShuffleConfig
}

type AwsSageMakerS1qDataSource {
  S3DataSource: AwsSageMakerS1qDataSourceS3DataSource
}

input AwsSageMakerS1qDataSourceInput {
  S3DataSource: AwsSageMakerS1qDataSourceS3DataSourceInput
}

type AwsSageMakerS1qDataSourceS3DataSource {
  S3DataType: String!
  S3Uri: String!
  S3DataDistributionType: String
  AttributeNames: [String]
}

input AwsSageMakerS1qDataSourceS3DataSourceInput {
  S3DataType: String!
  S3Uri: String!
  S3DataDistributionType: String
  AttributeNames: [String]
}

input AwsSageMakerS1qInput {
  ChannelName: String!
  DataSource: AwsSageMakerS1qDataSourceInput!
  ContentType: String
  CompressionType: String
  RecordWrapperType: String
  InputMode: String
  ShuffleConfig: AwsSageMakerS1qShuffleConfigInput
}

type AwsSageMakerS1qShuffleConfig {
  Seed: JSON!
}

input AwsSageMakerS1qShuffleConfigInput {
  Seed: JSON!
}

type AwsSageMakerS22 {
  KmsKeyId: String
  S3OutputPath: String!
}

input AwsSageMakerS22Input {
  KmsKeyId: String
  S3OutputPath: String!
}

type AwsSageMakerS24 {
  InstanceType: String!
  InstanceCount: Int!
  VolumeSizeInGB: Int!
  VolumeKmsKeyId: String
}

input AwsSageMakerS24Input {
  InstanceType: String!
  InstanceCount: Int!
  VolumeSizeInGB: Int!
  VolumeKmsKeyId: String
}

type AwsSageMakerS27 {
  MaxRuntimeInSeconds: Int
}

input AwsSageMakerS27Input {
  MaxRuntimeInSeconds: Int
}

type AwsSageMakerS29 {
  MaxConcurrentTransforms: Int
  MaxPayloadInMB: Int
  BatchStrategy: String
  Environment: JSON
  TransformInput: AwsSageMakerS2g!
  TransformOutput: AwsSageMakerS2k!
  TransformResources: AwsSageMakerS2n!
}

input AwsSageMakerS29Input {
  MaxConcurrentTransforms: Int
  MaxPayloadInMB: Int
  BatchStrategy: String
  Environment: JSON
  TransformInput: AwsSageMakerS2gInput!
  TransformOutput: AwsSageMakerS2kInput!
  TransformResources: AwsSageMakerS2nInput!
}

type AwsSageMakerS2g {
  DataSource: AwsSageMakerS2gDataSource!
  ContentType: String
  CompressionType: String
  SplitType: String
}

type AwsSageMakerS2gDataSource {
  S3DataSource: AwsSageMakerS2gDataSourceS3DataSource!
}

input AwsSageMakerS2gDataSourceInput {
  S3DataSource: AwsSageMakerS2gDataSourceS3DataSourceInput!
}

type AwsSageMakerS2gDataSourceS3DataSource {
  S3DataType: String!
  S3Uri: String!
}

input AwsSageMakerS2gDataSourceS3DataSourceInput {
  S3DataType: String!
  S3Uri: String!
}

input AwsSageMakerS2gInput {
  DataSource: AwsSageMakerS2gDataSourceInput!
  ContentType: String
  CompressionType: String
  SplitType: String
}

type AwsSageMakerS2k {
  S3OutputPath: String!
  Accept: String
  AssembleWith: String
  KmsKeyId: String
}

input AwsSageMakerS2kInput {
  S3OutputPath: String!
  Accept: String
  AssembleWith: String
  KmsKeyId: String
}

type AwsSageMakerS2n {
  InstanceType: String!
  InstanceCount: Int!
  VolumeKmsKeyId: String
}

input AwsSageMakerS2nInput {
  InstanceType: String!
  InstanceCount: Int!
  VolumeKmsKeyId: String
}

type AwsSageMakerS2t {
  RepositoryUrl: String!
  Branch: String
  SecretArn: String
}

input AwsSageMakerS2tInput {
  RepositoryUrl: String!
  Branch: String
  SecretArn: String
}

type AwsSageMakerS3 {
  Key: String!
  Value: String!
}

type AwsSageMakerS30 {
  S3Uri: String!
  DataInputConfig: String!
  Framework: String!
}

input AwsSageMakerS30Input {
  S3Uri: String!
  DataInputConfig: String!
  Framework: String!
}

type AwsSageMakerS33 {
  S3OutputLocation: String!
  TargetDevice: String!
}

input AwsSageMakerS33Input {
  S3OutputLocation: String!
  TargetDevice: String!
}

type AwsSageMakerS3d {
  VariantName: String!
  ModelName: String!
  InitialInstanceCount: Int!
  InstanceType: String!
  InitialVariantWeight: Float
  AcceleratorType: String
}

input AwsSageMakerS3dInput {
  VariantName: String!
  ModelName: String!
  InitialInstanceCount: Int!
  InstanceType: String!
  InitialVariantWeight: Float
  AcceleratorType: String
}

input AwsSageMakerS3Input {
  Key: String!
  Value: String!
}

type AwsSageMakerS3o {
  Strategy: String!
  HyperParameterTuningJobObjective: AwsSageMakerS15
  ResourceLimits: AwsSageMakerS3q!
  ParameterRanges: AwsSageMakerS3oParameterRanges
  TrainingJobEarlyStoppingType: String
}

input AwsSageMakerS3oInput {
  Strategy: String!
  HyperParameterTuningJobObjective: AwsSageMakerS15Input
  ResourceLimits: AwsSageMakerS3qInput!
  ParameterRanges: AwsSageMakerS3oParameterRangesInput
  TrainingJobEarlyStoppingType: String
}

type AwsSageMakerS3oParameterRanges {
  IntegerParameterRanges: [AwsSageMakerS3oParameterRangesIntegerParameterRanges]
  ContinuousParameterRanges: [AwsSageMakerS3oParameterRangesContinuousParameterRanges]
  CategoricalParameterRanges: [AwsSageMakerS3oParameterRangesCategoricalParameterRanges]
}

type AwsSageMakerS3oParameterRangesCategoricalParameterRanges {
  Name: String!
  Values: [String]!
}

input AwsSageMakerS3oParameterRangesCategoricalParameterRangesInput {
  Name: String!
  Values: [String]!
}

type AwsSageMakerS3oParameterRangesContinuousParameterRanges {
  Name: String!
  MinValue: String!
  MaxValue: String!
  ScalingType: String
}

input AwsSageMakerS3oParameterRangesContinuousParameterRangesInput {
  Name: String!
  MinValue: String!
  MaxValue: String!
  ScalingType: String
}

input AwsSageMakerS3oParameterRangesInput {
  IntegerParameterRanges: [AwsSageMakerS3oParameterRangesIntegerParameterRangesInput]
  ContinuousParameterRanges: [AwsSageMakerS3oParameterRangesContinuousParameterRangesInput]
  CategoricalParameterRanges: [AwsSageMakerS3oParameterRangesCategoricalParameterRangesInput]
}

type AwsSageMakerS3oParameterRangesIntegerParameterRanges {
  Name: String!
  MinValue: String!
  MaxValue: String!
  ScalingType: String
}

input AwsSageMakerS3oParameterRangesIntegerParameterRangesInput {
  Name: String!
  MinValue: String!
  MaxValue: String!
  ScalingType: String
}

type AwsSageMakerS3q {
  MaxNumberOfTrainingJobs: Int!
  MaxParallelTrainingJobs: Int!
}

input AwsSageMakerS3qInput {
  MaxNumberOfTrainingJobs: Int!
  MaxParallelTrainingJobs: Int!
}

type AwsSageMakerS42 {
  StaticHyperParameters: JSON
  AlgorithmSpecification: AwsSageMakerS42AlgorithmSpecification!
  RoleArn: String!
  InputDataConfig: [AwsSageMakerS1q]
  VpcConfig: AwsSageMakerS46
  OutputDataConfig: AwsSageMakerS22!
  ResourceConfig: AwsSageMakerS24!
  StoppingCondition: AwsSageMakerS27!
  EnableNetworkIsolation: Boolean
  EnableInterContainerTrafficEncryption: Boolean
}

type AwsSageMakerS42AlgorithmSpecification {
  TrainingImage: String
  TrainingInputMode: String!
  AlgorithmName: String
  MetricDefinitions: [AwsSageMakerSr]
}

input AwsSageMakerS42AlgorithmSpecificationInput {
  TrainingImage: String
  TrainingInputMode: String!
  AlgorithmName: String
  MetricDefinitions: [AwsSageMakerSrInput]
}

input AwsSageMakerS42Input {
  StaticHyperParameters: JSON
  AlgorithmSpecification: AwsSageMakerS42AlgorithmSpecificationInput!
  RoleArn: String!
  InputDataConfig: [AwsSageMakerS1qInput]
  VpcConfig: AwsSageMakerS46Input
  OutputDataConfig: AwsSageMakerS22Input!
  ResourceConfig: AwsSageMakerS24Input!
  StoppingCondition: AwsSageMakerS27Input!
  EnableNetworkIsolation: Boolean
  EnableInterContainerTrafficEncryption: Boolean
}

type AwsSageMakerS46 {
  SecurityGroupIds: [String]!
  Subnets: [String]!
}

input AwsSageMakerS46Input {
  SecurityGroupIds: [String]!
  Subnets: [String]!
}

type AwsSageMakerS4b {
  ParentHyperParameterTuningJobs: [AwsSageMakerS4bParentHyperParameterTuningJobs]!
  WarmStartType: String!
}

input AwsSageMakerS4bInput {
  ParentHyperParameterTuningJobs: [AwsSageMakerS4bParentHyperParameterTuningJobsInput]!
  WarmStartType: String!
}

type AwsSageMakerS4bParentHyperParameterTuningJobs {
  HyperParameterTuningJobName: String
}

input AwsSageMakerS4bParentHyperParameterTuningJobsInput {
  HyperParameterTuningJobName: String
}

type AwsSageMakerS4k {
  DataSource: AwsSageMakerS4kDataSource!
  DataAttributes: AwsSageMakerS4kDataAttributes
}

type AwsSageMakerS4kDataAttributes {
  ContentClassifiers: [String]
}

input AwsSageMakerS4kDataAttributesInput {
  ContentClassifiers: [String]
}

type AwsSageMakerS4kDataSource {
  S3DataSource: AwsSageMakerS4kDataSourceS3DataSource!
}

input AwsSageMakerS4kDataSourceInput {
  S3DataSource: AwsSageMakerS4kDataSourceS3DataSourceInput!
}

type AwsSageMakerS4kDataSourceS3DataSource {
  ManifestS3Uri: String!
}

input AwsSageMakerS4kDataSourceS3DataSourceInput {
  ManifestS3Uri: String!
}

input AwsSageMakerS4kInput {
  DataSource: AwsSageMakerS4kDataSourceInput!
  DataAttributes: AwsSageMakerS4kDataAttributesInput
}

type AwsSageMakerS4q {
  S3OutputPath: String!
  KmsKeyId: String
}

input AwsSageMakerS4qInput {
  S3OutputPath: String!
  KmsKeyId: String
}

type AwsSageMakerS4r {
  MaxHumanLabeledObjectCount: Int
  MaxPercentageOfInputDatasetLabeled: Int
}

input AwsSageMakerS4rInput {
  MaxHumanLabeledObjectCount: Int
  MaxPercentageOfInputDatasetLabeled: Int
}

type AwsSageMakerS4u {
  LabelingJobAlgorithmSpecificationArn: String!
  InitialActiveLearningModelArn: String
  LabelingJobResourceConfig: AwsSageMakerS4uLabelingJobResourceConfig
}

input AwsSageMakerS4uInput {
  LabelingJobAlgorithmSpecificationArn: String!
  InitialActiveLearningModelArn: String
  LabelingJobResourceConfig: AwsSageMakerS4uLabelingJobResourceConfigInput
}

type AwsSageMakerS4uLabelingJobResourceConfig {
  VolumeKmsKeyId: String
}

input AwsSageMakerS4uLabelingJobResourceConfigInput {
  VolumeKmsKeyId: String
}

type AwsSageMakerS4y {
  WorkteamArn: String!
  UiConfig: AwsSageMakerS4yUiConfig!
  PreHumanTaskLambdaArn: String!
  TaskKeywords: [String]
  TaskTitle: String!
  TaskDescription: String!
  NumberOfHumanWorkersPerDataObject: Int!
  TaskTimeLimitInSeconds: Int!
  TaskAvailabilityLifetimeInSeconds: Int
  MaxConcurrentTaskCount: Int
  AnnotationConsolidationConfig: AwsSageMakerS4yAnnotationConsolidationConfig!
  PublicWorkforceTaskPrice: AwsSageMakerS4yPublicWorkforceTaskPrice
}

type AwsSageMakerS4yAnnotationConsolidationConfig {
  AnnotationConsolidationLambdaArn: String!
}

input AwsSageMakerS4yAnnotationConsolidationConfigInput {
  AnnotationConsolidationLambdaArn: String!
}

input AwsSageMakerS4yInput {
  WorkteamArn: String!
  UiConfig: AwsSageMakerS4yUiConfigInput!
  PreHumanTaskLambdaArn: String!
  TaskKeywords: [String]
  TaskTitle: String!
  TaskDescription: String!
  NumberOfHumanWorkersPerDataObject: Int!
  TaskTimeLimitInSeconds: Int!
  TaskAvailabilityLifetimeInSeconds: Int
  MaxConcurrentTaskCount: Int
  AnnotationConsolidationConfig: AwsSageMakerS4yAnnotationConsolidationConfigInput!
  PublicWorkforceTaskPrice: AwsSageMakerS4yPublicWorkforceTaskPriceInput
}

type AwsSageMakerS4yPublicWorkforceTaskPrice {
  AmountInUsd: AwsSageMakerS4yPublicWorkforceTaskPriceAmountInUsd
}

type AwsSageMakerS4yPublicWorkforceTaskPriceAmountInUsd {
  Dollars: Int
  Cents: Int
  TenthFractionsOfACent: Int
}

input AwsSageMakerS4yPublicWorkforceTaskPriceAmountInUsdInput {
  Dollars: Int
  Cents: Int
  TenthFractionsOfACent: Int
}

input AwsSageMakerS4yPublicWorkforceTaskPriceInput {
  AmountInUsd: AwsSageMakerS4yPublicWorkforceTaskPriceAmountInUsdInput
}

type AwsSageMakerS4yUiConfig {
  UiTemplateS3Uri: String!
}

input AwsSageMakerS4yUiConfigInput {
  UiTemplateS3Uri: String!
}

type AwsSageMakerS5j {
  ContainerHostname: String
  Image: String
  ModelDataUrl: String
  Environment: JSON
  ModelPackageName: String
}

input AwsSageMakerS5jInput {
  ContainerHostname: String
  Image: String
  ModelDataUrl: String
  Environment: JSON
  ModelPackageName: String
}

type AwsSageMakerS5q {
  ValidationRole: String!
  ValidationProfiles: [AwsSageMakerS5qValidationProfiles]!
}

input AwsSageMakerS5qInput {
  ValidationRole: String!
  ValidationProfiles: [AwsSageMakerS5qValidationProfilesInput]!
}

type AwsSageMakerS5qValidationProfiles {
  ProfileName: String!
  TransformJobDefinition: AwsSageMakerS29!
}

input AwsSageMakerS5qValidationProfilesInput {
  ProfileName: String!
  TransformJobDefinition: AwsSageMakerS29Input!
}

type AwsSageMakerS5t {
  SourceAlgorithms: [AwsSageMakerS5tSourceAlgorithms]!
}

input AwsSageMakerS5tInput {
  SourceAlgorithms: [AwsSageMakerS5tSourceAlgorithmsInput]!
}

type AwsSageMakerS5tSourceAlgorithms {
  ModelDataUrl: String
  AlgorithmName: String!
}

input AwsSageMakerS5tSourceAlgorithmsInput {
  ModelDataUrl: String
  AlgorithmName: String!
}

type AwsSageMakerS6d {
  Content: String
}

input AwsSageMakerS6dInput {
  Content: String
}

type AwsSageMakerS6o {
  TrainingImage: String
  AlgorithmName: String
  TrainingInputMode: String!
  MetricDefinitions: [AwsSageMakerSr]
}

input AwsSageMakerS6oInput {
  TrainingImage: String
  AlgorithmName: String
  TrainingInputMode: String!
  MetricDefinitions: [AwsSageMakerSrInput]
}

type AwsSageMakerS6t {
  InputFilter: String
  OutputFilter: String
  JoinSource: String
}

input AwsSageMakerS6tInput {
  InputFilter: String
  OutputFilter: String
  JoinSource: String
}

type AwsSageMakerS70 {
  CognitoMemberDefinition: AwsSageMakerS70CognitoMemberDefinition
}

type AwsSageMakerS70CognitoMemberDefinition {
  UserPool: String!
  UserGroup: String!
  ClientId: String!
}

input AwsSageMakerS70CognitoMemberDefinitionInput {
  UserPool: String!
  UserGroup: String!
  ClientId: String!
}

input AwsSageMakerS70Input {
  CognitoMemberDefinition: AwsSageMakerS70CognitoMemberDefinitionInput
}

type AwsSageMakerS77 {
  NotificationTopicArn: String
}

input AwsSageMakerS77Input {
  NotificationTopicArn: String
}

type AwsSageMakerS7t {
  Name: String!
  Status: String!
  FailureReason: String
}

type AwsSageMakerS85 {
  S3ModelArtifacts: String!
}

type AwsSageMakerS8i {
  Completed: Int
  InProgress: Int
  RetryableError: Int
  NonRetryableError: Int
  Stopped: Int
}

type AwsSageMakerS8k {
  Succeeded: Int
  Pending: Int
  Failed: Int
}

type AwsSageMakerS8m {
  TrainingJobName: String!
  TrainingJobArn: String!
  TuningJobName: String
  CreationTime: Date!
  TrainingStartTime: Date
  TrainingEndTime: Date
  TrainingJobStatus: String!
  TunedHyperParameters: JSON!
  FailureReason: String
  FinalHyperParameterTuningJobObjectiveMetric: AwsSageMakerS8mFinalHyperParameterTuningJobObjectiveMetric
  ObjectiveStatus: String
}

type AwsSageMakerS8mFinalHyperParameterTuningJobObjectiveMetric {
  Type: String
  MetricName: String!
  Value: Float!
}

type AwsSageMakerS8u {
  TotalLabeled: Int
  HumanLabeled: Int
  MachineLabeled: Int
  FailedNonRetryableError: Int
  Unlabeled: Int
}

type AwsSageMakerS8x {
  OutputDatasetS3Uri: String!
  FinalActiveLearningModelArn: String
}

type AwsSageMakerS94 {
  Name: String!
  Status: String!
  FailureReason: String
}

type AwsSageMakerS9f {
  WorkteamArn: String!
  MarketplaceTitle: String
  SellerName: String
  MarketplaceDescription: String
  ListingId: String
}

type AwsSageMakerS9j {
  Status: String!
  StartTime: Date!
  EndTime: Date
  StatusMessage: String
}

type AwsSageMakerS9m {
  MetricName: String
  Value: Float
  Timestamp: Date
}

type AwsSageMakerS9u {
  WorkteamName: String!
  MemberDefinitions: [AwsSageMakerS70]!
  WorkteamArn: String!
  ProductListingIds: [String]
  Description: String!
  SubDomain: String
  CreateDate: Date
  LastUpdatedDate: Date
  NotificationConfiguration: AwsSageMakerS77
}

type AwsSageMakerSb {
  TrainingImage: String!
  TrainingImageDigest: String
  SupportedHyperParameters: [AwsSageMakerSbSupportedHyperParameters]
  SupportedTrainingInstanceTypes: [String]!
  SupportsDistributedTraining: Boolean
  MetricDefinitions: [AwsSageMakerSr]
  TrainingChannels: [AwsSageMakerSbTrainingChannels]!
  SupportedTuningJobObjectiveMetrics: [AwsSageMakerS15]
}

input AwsSageMakerSbInput {
  TrainingImage: String!
  TrainingImageDigest: String
  SupportedHyperParameters: [AwsSageMakerSbSupportedHyperParametersInput]
  SupportedTrainingInstanceTypes: [String]!
  SupportsDistributedTraining: Boolean
  MetricDefinitions: [AwsSageMakerSrInput]
  TrainingChannels: [AwsSageMakerSbTrainingChannelsInput]!
  SupportedTuningJobObjectiveMetrics: [AwsSageMakerS15Input]
}

type AwsSageMakerSbSupportedHyperParameters {
  Name: String!
  Description: String
  Type: String!
  Range: AwsSageMakerSbSupportedHyperParametersRange
  IsTunable: Boolean
  IsRequired: Boolean
  DefaultValue: String
}

input AwsSageMakerSbSupportedHyperParametersInput {
  Name: String!
  Description: String
  Type: String!
  Range: AwsSageMakerSbSupportedHyperParametersRangeInput
  IsTunable: Boolean
  IsRequired: Boolean
  DefaultValue: String
}

type AwsSageMakerSbSupportedHyperParametersRange {
  IntegerParameterRangeSpecification: AwsSageMakerSbSupportedHyperParametersRangeIntegerParameterRangeSpecification
  ContinuousParameterRangeSpecification: AwsSageMakerSbSupportedHyperParametersRangeContinuousParameterRangeSpecification
  CategoricalParameterRangeSpecification: AwsSageMakerSbSupportedHyperParametersRangeCategoricalParameterRangeSpecification
}

type AwsSageMakerSbSupportedHyperParametersRangeCategoricalParameterRangeSpecification {
  Values: [String]!
}

input AwsSageMakerSbSupportedHyperParametersRangeCategoricalParameterRangeSpecificationInput {
  Values: [String]!
}

type AwsSageMakerSbSupportedHyperParametersRangeContinuousParameterRangeSpecification {
  MinValue: String!
  MaxValue: String!
}

input AwsSageMakerSbSupportedHyperParametersRangeContinuousParameterRangeSpecificationInput {
  MinValue: String!
  MaxValue: String!
}

input AwsSageMakerSbSupportedHyperParametersRangeInput {
  IntegerParameterRangeSpecification: AwsSageMakerSbSupportedHyperParametersRangeIntegerParameterRangeSpecificationInput
  ContinuousParameterRangeSpecification: AwsSageMakerSbSupportedHyperParametersRangeContinuousParameterRangeSpecificationInput
  CategoricalParameterRangeSpecification: AwsSageMakerSbSupportedHyperParametersRangeCategoricalParameterRangeSpecificationInput
}

type AwsSageMakerSbSupportedHyperParametersRangeIntegerParameterRangeSpecification {
  MinValue: String!
  MaxValue: String!
}

input AwsSageMakerSbSupportedHyperParametersRangeIntegerParameterRangeSpecificationInput {
  MinValue: String!
  MaxValue: String!
}

type AwsSageMakerSbTrainingChannels {
  Name: String!
  Description: String
  IsRequired: Boolean
  SupportedContentTypes: [String]!
  SupportedCompressionTypes: [String]
  SupportedInputModes: [String]!
}

input AwsSageMakerSbTrainingChannelsInput {
  Name: String!
  Description: String
  IsRequired: Boolean
  SupportedContentTypes: [String]!
  SupportedCompressionTypes: [String]
  SupportedInputModes: [String]!
}

input AwsSageMakerSd7Input {
  Filters: [AwsSageMakerSd8Input]
  NestedFilters: [AwsSageMakerSd7NestedFiltersInput]
  SubExpressions: [JSON]
  Operator: String
}

input AwsSageMakerSd7NestedFiltersInput {
  NestedPropertyName: String!
  Filters: [AwsSageMakerSd8Input]!
}

input AwsSageMakerSd8Input {
  Name: String!
  Operator: String
  Value: String
}

input AwsSageMakerSearchInput {
  Resource: String!
  SearchExpression: AwsSageMakerSd7Input
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
}

type AwsSageMakerSearchOutput {
  Results: [AwsSageMakerSearchOutputResults]
  NextToken: String
}

type AwsSageMakerSearchOutputResults {
  TrainingJob: AwsSageMakerSearchOutputResultsTrainingJob
}

type AwsSageMakerSearchOutputResultsTrainingJob {
  TrainingJobName: String
  TrainingJobArn: String
  TuningJobArn: String
  LabelingJobArn: String
  ModelArtifacts: AwsSageMakerS85
  TrainingJobStatus: String
  SecondaryStatus: String
  FailureReason: String
  HyperParameters: JSON
  AlgorithmSpecification: AwsSageMakerS6o
  RoleArn: String
  InputDataConfig: [AwsSageMakerS1q]
  OutputDataConfig: AwsSageMakerS22
  ResourceConfig: AwsSageMakerS24
  VpcConfig: AwsSageMakerS46
  StoppingCondition: AwsSageMakerS27
  CreationTime: Date
  TrainingStartTime: Date
  TrainingEndTime: Date
  LastModifiedTime: Date
  SecondaryStatusTransitions: [AwsSageMakerS9j]
  FinalMetricDataList: [AwsSageMakerS9m]
  EnableNetworkIsolation: Boolean
  EnableInterContainerTrafficEncryption: Boolean
  Tags: [AwsSageMakerS3]
}

type AwsSageMakerSr {
  Name: String!
  Regex: String!
}

input AwsSageMakerSrInput {
  Name: String!
  Regex: String!
}

input AwsSageMakerStartNotebookInstanceInput {
  NotebookInstanceName: String!
}

input AwsSageMakerStopCompilationJobInput {
  CompilationJobName: String!
}

input AwsSageMakerStopHyperParameterTuningJobInput {
  HyperParameterTuningJobName: String!
}

input AwsSageMakerStopLabelingJobInput {
  LabelingJobName: String!
}

input AwsSageMakerStopNotebookInstanceInput {
  NotebookInstanceName: String!
}

input AwsSageMakerStopTrainingJobInput {
  TrainingJobName: String!
}

input AwsSageMakerStopTransformJobInput {
  TransformJobName: String!
}

input AwsSageMakerUpdateCodeRepositoryGitConfigInput {
  SecretArn: String
}

input AwsSageMakerUpdateCodeRepositoryInput {
  CodeRepositoryName: String!
  GitConfig: AwsSageMakerUpdateCodeRepositoryGitConfigInput
}

type AwsSageMakerUpdateCodeRepositoryOutput {
  CodeRepositoryArn: String!
}

input AwsSageMakerUpdateEndpointInput {
  EndpointName: String!
  EndpointConfigName: String!
}

type AwsSageMakerUpdateEndpointOutput {
  EndpointArn: String!
}

input AwsSageMakerUpdateEndpointWeightsAndCapacitiesDesiredWeightsAndCapacitiesInput {
  VariantName: String!
  DesiredWeight: Float
  DesiredInstanceCount: Int
}

input AwsSageMakerUpdateEndpointWeightsAndCapacitiesInput {
  EndpointName: String!
  DesiredWeightsAndCapacities: [AwsSageMakerUpdateEndpointWeightsAndCapacitiesDesiredWeightsAndCapacitiesInput]!
}

type AwsSageMakerUpdateEndpointWeightsAndCapacitiesOutput {
  EndpointArn: String!
}

input AwsSageMakerUpdateNotebookInstanceInput {
  NotebookInstanceName: String!
  InstanceType: String
  RoleArn: String
  LifecycleConfigName: String
  DisassociateLifecycleConfig: Boolean
  VolumeSizeInGB: Int
  DefaultCodeRepository: String
  AdditionalCodeRepositories: [String]
  AcceleratorTypes: [String]
  DisassociateAcceleratorTypes: Boolean
  DisassociateDefaultCodeRepository: Boolean
  DisassociateAdditionalCodeRepositories: Boolean
  RootAccess: String
}

input AwsSageMakerUpdateNotebookInstanceLifecycleConfigInput {
  NotebookInstanceLifecycleConfigName: String!
  OnCreate: [AwsSageMakerS6dInput]
  OnStart: [AwsSageMakerS6dInput]
}

input AwsSageMakerUpdateWorkteamInput {
  WorkteamName: String!
  MemberDefinitions: [AwsSageMakerS70Input]
  Description: String
  NotificationConfiguration: AwsSageMakerS77Input
}

type AwsSageMakerUpdateWorkteamOutput {
  Workteam: AwsSageMakerS9u!
}

"""AWS Secrets Manager (2017-10-17)"""
type AwsSecretsManager {
  cancelRotateSecret(input: AwsSecretsManagerCancelRotateSecretInput!, config: AwsConfig): AwsSecretsManagerCancelRotateSecretOutput
  createSecret(input: AwsSecretsManagerCreateSecretInput!, config: AwsConfig): AwsSecretsManagerCreateSecretOutput
  deleteResourcePolicy(input: AwsSecretsManagerDeleteResourcePolicyInput!, config: AwsConfig): AwsSecretsManagerDeleteResourcePolicyOutput
  deleteSecret(input: AwsSecretsManagerDeleteSecretInput!, config: AwsConfig): AwsSecretsManagerDeleteSecretOutput
  describeSecret(input: AwsSecretsManagerDescribeSecretInput!, config: AwsConfig): AwsSecretsManagerDescribeSecretOutput
  getRandomPassword(input: AwsSecretsManagerGetRandomPasswordInput, config: AwsConfig): AwsSecretsManagerGetRandomPasswordOutput
  getResourcePolicy(input: AwsSecretsManagerGetResourcePolicyInput!, config: AwsConfig): AwsSecretsManagerGetResourcePolicyOutput
  getSecretValue(input: AwsSecretsManagerGetSecretValueInput!, config: AwsConfig): AwsSecretsManagerGetSecretValueOutput
  listSecretVersionIds(input: AwsSecretsManagerListSecretVersionIdsInput!, config: AwsConfig): AwsSecretsManagerListSecretVersionIdsOutput
  listSecrets(input: AwsSecretsManagerListSecretsInput, config: AwsConfig): AwsSecretsManagerListSecretsOutput
  putResourcePolicy(input: AwsSecretsManagerPutResourcePolicyInput!, config: AwsConfig): AwsSecretsManagerPutResourcePolicyOutput
  putSecretValue(input: AwsSecretsManagerPutSecretValueInput!, config: AwsConfig): AwsSecretsManagerPutSecretValueOutput
  restoreSecret(input: AwsSecretsManagerRestoreSecretInput!, config: AwsConfig): AwsSecretsManagerRestoreSecretOutput
  rotateSecret(input: AwsSecretsManagerRotateSecretInput!, config: AwsConfig): AwsSecretsManagerRotateSecretOutput
  tagResource(input: AwsSecretsManagerTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsSecretsManagerUntagResourceInput!, config: AwsConfig): JSON
  updateSecret(input: AwsSecretsManagerUpdateSecretInput!, config: AwsConfig): AwsSecretsManagerUpdateSecretOutput
  updateSecretVersionStage(input: AwsSecretsManagerUpdateSecretVersionStageInput!, config: AwsConfig): AwsSecretsManagerUpdateSecretVersionStageOutput
}

input AwsSecretsManagerCancelRotateSecretInput {
  SecretId: String!
}

type AwsSecretsManagerCancelRotateSecretOutput {
  ARN: String
  Name: String
  VersionId: String
}

input AwsSecretsManagerCreateSecretInput {
  Name: String!
  ClientRequestToken: String
  Description: String
  KmsKeyId: String
  SecretBinary: JSON
  SecretString: String
  Tags: [AwsSecretsManagerSeInput]
}

type AwsSecretsManagerCreateSecretOutput {
  ARN: String
  Name: String
  VersionId: String
}

input AwsSecretsManagerDeleteResourcePolicyInput {
  SecretId: String!
}

type AwsSecretsManagerDeleteResourcePolicyOutput {
  ARN: String
  Name: String
}

input AwsSecretsManagerDeleteSecretInput {
  SecretId: String!
  RecoveryWindowInDays: JSON
  ForceDeleteWithoutRecovery: Boolean
}

type AwsSecretsManagerDeleteSecretOutput {
  ARN: String
  Name: String
  DeletionDate: Date
}

input AwsSecretsManagerDescribeSecretInput {
  SecretId: String!
}

type AwsSecretsManagerDescribeSecretOutput {
  ARN: String
  Name: String
  Description: String
  KmsKeyId: String
  RotationEnabled: Boolean
  RotationLambdaARN: String
  RotationRules: AwsSecretsManagerSu
  LastRotatedDate: Date
  LastChangedDate: Date
  LastAccessedDate: Date
  DeletedDate: Date
  Tags: [AwsSecretsManagerSe]
  VersionIdsToStages: JSON
}

input AwsSecretsManagerGetRandomPasswordInput {
  PasswordLength: JSON
  ExcludeCharacters: String
  ExcludeNumbers: Boolean
  ExcludePunctuation: Boolean
  ExcludeUppercase: Boolean
  ExcludeLowercase: Boolean
  IncludeSpace: Boolean
  RequireEachIncludedType: Boolean
}

type AwsSecretsManagerGetRandomPasswordOutput {
  RandomPassword: String
}

input AwsSecretsManagerGetResourcePolicyInput {
  SecretId: String!
}

type AwsSecretsManagerGetResourcePolicyOutput {
  ARN: String
  Name: String
  ResourcePolicy: String
}

input AwsSecretsManagerGetSecretValueInput {
  SecretId: String!
  VersionId: String
  VersionStage: String
}

type AwsSecretsManagerGetSecretValueOutput {
  ARN: String
  Name: String
  VersionId: String
  SecretBinary: JSON
  SecretString: String
  VersionStages: [String]
  CreatedDate: Date
}

input AwsSecretsManagerListSecretsInput {
  MaxResults: Int
  NextToken: String
}

type AwsSecretsManagerListSecretsOutput {
  SecretList: [AwsSecretsManagerListSecretsOutputSecretList]
  NextToken: String
}

type AwsSecretsManagerListSecretsOutputSecretList {
  ARN: String
  Name: String
  Description: String
  KmsKeyId: String
  RotationEnabled: Boolean
  RotationLambdaARN: String
  RotationRules: AwsSecretsManagerSu
  LastRotatedDate: Date
  LastChangedDate: Date
  LastAccessedDate: Date
  DeletedDate: Date
  Tags: [AwsSecretsManagerSe]
  SecretVersionsToStages: JSON
}

input AwsSecretsManagerListSecretVersionIdsInput {
  SecretId: String!
  MaxResults: Int
  NextToken: String
  IncludeDeprecated: Boolean
}

type AwsSecretsManagerListSecretVersionIdsOutput {
  Versions: [AwsSecretsManagerListSecretVersionIdsOutputVersions]
  NextToken: String
  ARN: String
  Name: String
}

type AwsSecretsManagerListSecretVersionIdsOutputVersions {
  VersionId: String
  VersionStages: [String]
  LastAccessedDate: Date
  CreatedDate: Date
}

input AwsSecretsManagerPutResourcePolicyInput {
  SecretId: String!
  ResourcePolicy: String!
}

type AwsSecretsManagerPutResourcePolicyOutput {
  ARN: String
  Name: String
}

input AwsSecretsManagerPutSecretValueInput {
  SecretId: String!
  ClientRequestToken: String
  SecretBinary: JSON
  SecretString: String
  VersionStages: [String]
}

type AwsSecretsManagerPutSecretValueOutput {
  ARN: String
  Name: String
  VersionId: String
  VersionStages: [String]
}

input AwsSecretsManagerRestoreSecretInput {
  SecretId: String!
}

type AwsSecretsManagerRestoreSecretOutput {
  ARN: String
  Name: String
}

input AwsSecretsManagerRotateSecretInput {
  SecretId: String!
  ClientRequestToken: String
  RotationLambdaARN: String
  RotationRules: AwsSecretsManagerSuInput
}

type AwsSecretsManagerRotateSecretOutput {
  ARN: String
  Name: String
  VersionId: String
}

type AwsSecretsManagerSe {
  Key: String
  Value: String
}

input AwsSecretsManagerSeInput {
  Key: String
  Value: String
}

type AwsSecretsManagerSu {
  AutomaticallyAfterDays: JSON
}

input AwsSecretsManagerSuInput {
  AutomaticallyAfterDays: JSON
}

input AwsSecretsManagerTagResourceInput {
  SecretId: String!
  Tags: [AwsSecretsManagerSeInput]!
}

input AwsSecretsManagerUntagResourceInput {
  SecretId: String!
  TagKeys: [String]!
}

input AwsSecretsManagerUpdateSecretInput {
  SecretId: String!
  ClientRequestToken: String
  Description: String
  KmsKeyId: String
  SecretBinary: JSON
  SecretString: String
}

type AwsSecretsManagerUpdateSecretOutput {
  ARN: String
  Name: String
  VersionId: String
}

input AwsSecretsManagerUpdateSecretVersionStageInput {
  SecretId: String!
  VersionStage: String!
  RemoveFromVersionId: String
  MoveToVersionId: String
}

type AwsSecretsManagerUpdateSecretVersionStageOutput {
  ARN: String
  Name: String
}

"""AWS SecurityHub (2018-10-26)"""
type AwsSecurityHub {
  acceptInvitation(input: AwsSecurityHubAcceptInvitationInput, config: AwsConfig): JSON
  batchDisableStandards(input: AwsSecurityHubBatchDisableStandardsInput!, config: AwsConfig): AwsSecurityHubBatchDisableStandardsOutput
  batchEnableStandards(input: AwsSecurityHubBatchEnableStandardsInput!, config: AwsConfig): AwsSecurityHubBatchEnableStandardsOutput
  batchImportFindings(input: AwsSecurityHubBatchImportFindingsInput!, config: AwsConfig): AwsSecurityHubBatchImportFindingsOutput
  createActionTarget(input: AwsSecurityHubCreateActionTargetInput!, config: AwsConfig): AwsSecurityHubCreateActionTargetOutput
  createInsight(input: AwsSecurityHubCreateInsightInput!, config: AwsConfig): AwsSecurityHubCreateInsightOutput
  createMembers(input: AwsSecurityHubCreateMembersInput, config: AwsConfig): AwsSecurityHubCreateMembersOutput
  declineInvitations(input: AwsSecurityHubDeclineInvitationsInput, config: AwsConfig): AwsSecurityHubDeclineInvitationsOutput
  deleteActionTarget(input: AwsSecurityHubDeleteActionTargetInput!, config: AwsConfig): AwsSecurityHubDeleteActionTargetOutput
  deleteInsight(input: AwsSecurityHubDeleteInsightInput!, config: AwsConfig): AwsSecurityHubDeleteInsightOutput
  deleteInvitations(input: AwsSecurityHubDeleteInvitationsInput, config: AwsConfig): AwsSecurityHubDeleteInvitationsOutput
  deleteMembers(input: AwsSecurityHubDeleteMembersInput, config: AwsConfig): AwsSecurityHubDeleteMembersOutput
  describeActionTargets(input: AwsSecurityHubDescribeActionTargetsInput, config: AwsConfig): AwsSecurityHubDescribeActionTargetsOutput
  describeHub(input: AwsSecurityHubDescribeHubInput, config: AwsConfig): AwsSecurityHubDescribeHubOutput
  describeProducts(input: AwsSecurityHubDescribeProductsInput, config: AwsConfig): AwsSecurityHubDescribeProductsOutput
  disableImportFindingsForProduct(input: AwsSecurityHubDisableImportFindingsForProductInput!, config: AwsConfig): JSON
  disableSecurityHub(input: JSON, config: AwsConfig): JSON
  disassociateFromMasterAccount(input: JSON, config: AwsConfig): JSON
  disassociateMembers(input: AwsSecurityHubDisassociateMembersInput, config: AwsConfig): JSON
  enableImportFindingsForProduct(input: AwsSecurityHubEnableImportFindingsForProductInput!, config: AwsConfig): AwsSecurityHubEnableImportFindingsForProductOutput
  enableSecurityHub(input: AwsSecurityHubEnableSecurityHubInput, config: AwsConfig): JSON
  getEnabledStandards(input: AwsSecurityHubGetEnabledStandardsInput, config: AwsConfig): AwsSecurityHubGetEnabledStandardsOutput
  getFindings(input: AwsSecurityHubGetFindingsInput, config: AwsConfig): AwsSecurityHubGetFindingsOutput
  getInsightResults(input: AwsSecurityHubGetInsightResultsInput!, config: AwsConfig): AwsSecurityHubGetInsightResultsOutput
  getInsights(input: AwsSecurityHubGetInsightsInput, config: AwsConfig): AwsSecurityHubGetInsightsOutput
  getInvitationsCount(input: JSON, config: AwsConfig): AwsSecurityHubGetInvitationsCountOutput
  getMasterAccount(input: JSON, config: AwsConfig): AwsSecurityHubGetMasterAccountOutput
  getMembers(input: AwsSecurityHubGetMembersInput!, config: AwsConfig): AwsSecurityHubGetMembersOutput
  inviteMembers(input: AwsSecurityHubInviteMembersInput, config: AwsConfig): AwsSecurityHubInviteMembersOutput
  listEnabledProductsForImport(input: AwsSecurityHubListEnabledProductsForImportInput, config: AwsConfig): AwsSecurityHubListEnabledProductsForImportOutput
  listInvitations(input: AwsSecurityHubListInvitationsInput, config: AwsConfig): AwsSecurityHubListInvitationsOutput
  listMembers(input: AwsSecurityHubListMembersInput, config: AwsConfig): AwsSecurityHubListMembersOutput
  listTagsForResource(input: AwsSecurityHubListTagsForResourceInput!, config: AwsConfig): AwsSecurityHubListTagsForResourceOutput
  tagResource(input: AwsSecurityHubTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsSecurityHubUntagResourceInput!, config: AwsConfig): JSON
  updateActionTarget(input: AwsSecurityHubUpdateActionTargetInput!, config: AwsConfig): JSON
  updateFindings(input: AwsSecurityHubUpdateFindingsInput!, config: AwsConfig): JSON
  updateInsight(input: AwsSecurityHubUpdateInsightInput!, config: AwsConfig): JSON
}

input AwsSecurityHubAcceptInvitationInput {
  MasterId: String
  InvitationId: String
}

input AwsSecurityHubBatchDisableStandardsInput {
  StandardsSubscriptionArns: [String]!
}

type AwsSecurityHubBatchDisableStandardsOutput {
  StandardsSubscriptions: [AwsSecurityHubS7]
}

input AwsSecurityHubBatchEnableStandardsInput {
  StandardsSubscriptionRequests: [AwsSecurityHubBatchEnableStandardsStandardsSubscriptionRequestsInput]!
}

type AwsSecurityHubBatchEnableStandardsOutput {
  StandardsSubscriptions: [AwsSecurityHubS7]
}

input AwsSecurityHubBatchEnableStandardsStandardsSubscriptionRequestsInput {
  StandardsArn: String!
  StandardsInput: JSON
}

input AwsSecurityHubBatchImportFindingsInput {
  Findings: [AwsSecurityHubSgInput]!
}

type AwsSecurityHubBatchImportFindingsOutput {
  FailedCount: Int!
  SuccessCount: Int!
  FailedFindings: [AwsSecurityHubBatchImportFindingsOutputFailedFindings]
}

type AwsSecurityHubBatchImportFindingsOutputFailedFindings {
  Id: String!
  ErrorCode: String!
  ErrorMessage: String!
}

input AwsSecurityHubCreateActionTargetInput {
  Name: String!
  Description: String!
  Id: String!
}

type AwsSecurityHubCreateActionTargetOutput {
  ActionTargetArn: String!
}

input AwsSecurityHubCreateInsightInput {
  Name: String!
  Filters: AwsSecurityHubS1oInput!
  GroupByAttribute: String!
}

type AwsSecurityHubCreateInsightOutput {
  InsightArn: String!
}

input AwsSecurityHubCreateMembersAccountDetailsInput {
  AccountId: String
  Email: String
}

input AwsSecurityHubCreateMembersInput {
  AccountDetails: [AwsSecurityHubCreateMembersAccountDetailsInput]
}

type AwsSecurityHubCreateMembersOutput {
  UnprocessedAccounts: [AwsSecurityHubS2b]
}

input AwsSecurityHubDeclineInvitationsInput {
  AccountIds: [String]
}

type AwsSecurityHubDeclineInvitationsOutput {
  UnprocessedAccounts: [AwsSecurityHubS2b]
}

input AwsSecurityHubDeleteActionTargetInput {
  ActionTargetArn: String!
}

type AwsSecurityHubDeleteActionTargetOutput {
  ActionTargetArn: String!
}

input AwsSecurityHubDeleteInsightInput {
  InsightArn: String!
}

type AwsSecurityHubDeleteInsightOutput {
  InsightArn: String!
}

input AwsSecurityHubDeleteInvitationsInput {
  AccountIds: [String]
}

type AwsSecurityHubDeleteInvitationsOutput {
  UnprocessedAccounts: [AwsSecurityHubS2b]
}

input AwsSecurityHubDeleteMembersInput {
  AccountIds: [String]
}

type AwsSecurityHubDeleteMembersOutput {
  UnprocessedAccounts: [AwsSecurityHubS2b]
}

input AwsSecurityHubDescribeActionTargetsInput {
  ActionTargetArns: [String]
  NextToken: String
  MaxResults: Int
}

type AwsSecurityHubDescribeActionTargetsOutput {
  ActionTargets: [AwsSecurityHubDescribeActionTargetsOutputActionTargets]!
  NextToken: String
}

type AwsSecurityHubDescribeActionTargetsOutputActionTargets {
  ActionTargetArn: String!
  Name: String!
  Description: String!
}

input AwsSecurityHubDescribeHubInput {
  HubArn: String
}

type AwsSecurityHubDescribeHubOutput {
  HubArn: String
  SubscribedAt: String
}

input AwsSecurityHubDescribeProductsInput {
  NextToken: String
  MaxResults: Int
}

type AwsSecurityHubDescribeProductsOutput {
  Products: [AwsSecurityHubDescribeProductsOutputProducts]!
  NextToken: String
}

type AwsSecurityHubDescribeProductsOutputProducts {
  ProductArn: String!
  ProductName: String
  CompanyName: String
  Description: String
  Categories: [String]
  MarketplaceUrl: String
  ActivationUrl: String
  ProductSubscriptionResourcePolicy: String
}

input AwsSecurityHubDisableImportFindingsForProductInput {
  ProductSubscriptionArn: String!
}

input AwsSecurityHubDisassociateMembersInput {
  AccountIds: [String]
}

input AwsSecurityHubEnableImportFindingsForProductInput {
  ProductArn: String!
}

type AwsSecurityHubEnableImportFindingsForProductOutput {
  ProductSubscriptionArn: String
}

input AwsSecurityHubEnableSecurityHubInput {
  Tags: JSON
}

input AwsSecurityHubGetEnabledStandardsInput {
  StandardsSubscriptionArns: [String]
  NextToken: String
  MaxResults: Int
}

type AwsSecurityHubGetEnabledStandardsOutput {
  StandardsSubscriptions: [AwsSecurityHubS7]
  NextToken: String
}

input AwsSecurityHubGetFindingsInput {
  Filters: AwsSecurityHubS1oInput
  SortCriteria: [AwsSecurityHubGetFindingsSortCriteriaInput]
  NextToken: String
  MaxResults: Int
}

type AwsSecurityHubGetFindingsOutput {
  Findings: [AwsSecurityHubSg]!
  NextToken: String
}

input AwsSecurityHubGetFindingsSortCriteriaInput {
  Field: String
  SortOrder: String
}

input AwsSecurityHubGetInsightResultsInput {
  InsightArn: String!
}

type AwsSecurityHubGetInsightResultsOutput {
  InsightResults: AwsSecurityHubGetInsightResultsOutputInsightResults!
}

type AwsSecurityHubGetInsightResultsOutputInsightResults {
  InsightArn: String!
  GroupByAttribute: String!
  ResultValues: [AwsSecurityHubGetInsightResultsOutputInsightResultsResultValues]!
}

type AwsSecurityHubGetInsightResultsOutputInsightResultsResultValues {
  GroupByAttributeValue: String!
  Count: Int!
}

input AwsSecurityHubGetInsightsInput {
  InsightArns: [String]
  NextToken: String
  MaxResults: Int
}

type AwsSecurityHubGetInsightsOutput {
  Insights: [AwsSecurityHubGetInsightsOutputInsights]!
  NextToken: String
}

type AwsSecurityHubGetInsightsOutputInsights {
  InsightArn: String!
  Name: String!
  Filters: AwsSecurityHubS1o!
  GroupByAttribute: String!
}

type AwsSecurityHubGetInvitationsCountOutput {
  InvitationsCount: Int
}

type AwsSecurityHubGetMasterAccountOutput {
  Master: AwsSecurityHubS41
}

input AwsSecurityHubGetMembersInput {
  AccountIds: [String]!
}

type AwsSecurityHubGetMembersOutput {
  Members: [AwsSecurityHubS45]
  UnprocessedAccounts: [AwsSecurityHubS2b]
}

input AwsSecurityHubInviteMembersInput {
  AccountIds: [String]
}

type AwsSecurityHubInviteMembersOutput {
  UnprocessedAccounts: [AwsSecurityHubS2b]
}

input AwsSecurityHubListEnabledProductsForImportInput {
  NextToken: String
  MaxResults: Int
}

type AwsSecurityHubListEnabledProductsForImportOutput {
  ProductSubscriptions: [String]
  NextToken: String
}

input AwsSecurityHubListInvitationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsSecurityHubListInvitationsOutput {
  Invitations: [AwsSecurityHubS41]
  NextToken: String
}

input AwsSecurityHubListMembersInput {
  OnlyAssociated: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsSecurityHubListMembersOutput {
  Members: [AwsSecurityHubS45]
  NextToken: String
}

input AwsSecurityHubListTagsForResourceInput {
  ResourceArn: String!
}

type AwsSecurityHubListTagsForResourceOutput {
  Tags: JSON
}

type AwsSecurityHubS1o {
  ProductArn: [AwsSecurityHubS1p]
  AwsAccountId: [AwsSecurityHubS1p]
  Id: [AwsSecurityHubS1p]
  GeneratorId: [AwsSecurityHubS1p]
  Type: [AwsSecurityHubS1p]
  FirstObservedAt: [AwsSecurityHubS1s]
  LastObservedAt: [AwsSecurityHubS1s]
  CreatedAt: [AwsSecurityHubS1s]
  UpdatedAt: [AwsSecurityHubS1s]
  SeverityProduct: [AwsSecurityHubS1w]
  SeverityNormalized: [AwsSecurityHubS1w]
  SeverityLabel: [AwsSecurityHubS1p]
  Confidence: [AwsSecurityHubS1w]
  Criticality: [AwsSecurityHubS1w]
  Title: [AwsSecurityHubS1p]
  Description: [AwsSecurityHubS1p]
  RecommendationText: [AwsSecurityHubS1p]
  SourceUrl: [AwsSecurityHubS1p]
  ProductFields: [AwsSecurityHubS1y]
  ProductName: [AwsSecurityHubS1p]
  CompanyName: [AwsSecurityHubS1p]
  UserDefinedFields: [AwsSecurityHubS1y]
  MalwareName: [AwsSecurityHubS1p]
  MalwareType: [AwsSecurityHubS1p]
  MalwarePath: [AwsSecurityHubS1p]
  MalwareState: [AwsSecurityHubS1p]
  NetworkDirection: [AwsSecurityHubS1p]
  NetworkProtocol: [AwsSecurityHubS1p]
  NetworkSourceIpV4: [AwsSecurityHubS21]
  NetworkSourceIpV6: [AwsSecurityHubS21]
  NetworkSourcePort: [AwsSecurityHubS1w]
  NetworkSourceDomain: [AwsSecurityHubS1p]
  NetworkSourceMac: [AwsSecurityHubS1p]
  NetworkDestinationIpV4: [AwsSecurityHubS21]
  NetworkDestinationIpV6: [AwsSecurityHubS21]
  NetworkDestinationPort: [AwsSecurityHubS1w]
  NetworkDestinationDomain: [AwsSecurityHubS1p]
  ProcessName: [AwsSecurityHubS1p]
  ProcessPath: [AwsSecurityHubS1p]
  ProcessPid: [AwsSecurityHubS1w]
  ProcessParentPid: [AwsSecurityHubS1w]
  ProcessLaunchedAt: [AwsSecurityHubS1s]
  ProcessTerminatedAt: [AwsSecurityHubS1s]
  ThreatIntelIndicatorType: [AwsSecurityHubS1p]
  ThreatIntelIndicatorValue: [AwsSecurityHubS1p]
  ThreatIntelIndicatorCategory: [AwsSecurityHubS1p]
  ThreatIntelIndicatorLastObservedAt: [AwsSecurityHubS1s]
  ThreatIntelIndicatorSource: [AwsSecurityHubS1p]
  ThreatIntelIndicatorSourceUrl: [AwsSecurityHubS1p]
  ResourceType: [AwsSecurityHubS1p]
  ResourceId: [AwsSecurityHubS1p]
  ResourcePartition: [AwsSecurityHubS1p]
  ResourceRegion: [AwsSecurityHubS1p]
  ResourceTags: [AwsSecurityHubS1y]
  ResourceAwsEc2InstanceType: [AwsSecurityHubS1p]
  ResourceAwsEc2InstanceImageId: [AwsSecurityHubS1p]
  ResourceAwsEc2InstanceIpV4Addresses: [AwsSecurityHubS21]
  ResourceAwsEc2InstanceIpV6Addresses: [AwsSecurityHubS21]
  ResourceAwsEc2InstanceKeyName: [AwsSecurityHubS1p]
  ResourceAwsEc2InstanceIamInstanceProfileArn: [AwsSecurityHubS1p]
  ResourceAwsEc2InstanceVpcId: [AwsSecurityHubS1p]
  ResourceAwsEc2InstanceSubnetId: [AwsSecurityHubS1p]
  ResourceAwsEc2InstanceLaunchedAt: [AwsSecurityHubS1s]
  ResourceAwsS3BucketOwnerId: [AwsSecurityHubS1p]
  ResourceAwsS3BucketOwnerName: [AwsSecurityHubS1p]
  ResourceAwsIamAccessKeyUserName: [AwsSecurityHubS1p]
  ResourceAwsIamAccessKeyStatus: [AwsSecurityHubS1p]
  ResourceAwsIamAccessKeyCreatedAt: [AwsSecurityHubS1s]
  ResourceContainerName: [AwsSecurityHubS1p]
  ResourceContainerImageId: [AwsSecurityHubS1p]
  ResourceContainerImageName: [AwsSecurityHubS1p]
  ResourceContainerLaunchedAt: [AwsSecurityHubS1s]
  ResourceDetailsOther: [AwsSecurityHubS1y]
  ComplianceStatus: [AwsSecurityHubS1p]
  VerificationState: [AwsSecurityHubS1p]
  WorkflowState: [AwsSecurityHubS1p]
  RecordState: [AwsSecurityHubS1p]
  RelatedFindingsProductArn: [AwsSecurityHubS1p]
  RelatedFindingsId: [AwsSecurityHubS1p]
  NoteText: [AwsSecurityHubS1p]
  NoteUpdatedAt: [AwsSecurityHubS1s]
  NoteUpdatedBy: [AwsSecurityHubS1p]
  Keyword: [AwsSecurityHubS1oKeyword]
}

input AwsSecurityHubS1oInput {
  ProductArn: [AwsSecurityHubS1pInput]
  AwsAccountId: [AwsSecurityHubS1pInput]
  Id: [AwsSecurityHubS1pInput]
  GeneratorId: [AwsSecurityHubS1pInput]
  Type: [AwsSecurityHubS1pInput]
  FirstObservedAt: [AwsSecurityHubS1sInput]
  LastObservedAt: [AwsSecurityHubS1sInput]
  CreatedAt: [AwsSecurityHubS1sInput]
  UpdatedAt: [AwsSecurityHubS1sInput]
  SeverityProduct: [AwsSecurityHubS1wInput]
  SeverityNormalized: [AwsSecurityHubS1wInput]
  SeverityLabel: [AwsSecurityHubS1pInput]
  Confidence: [AwsSecurityHubS1wInput]
  Criticality: [AwsSecurityHubS1wInput]
  Title: [AwsSecurityHubS1pInput]
  Description: [AwsSecurityHubS1pInput]
  RecommendationText: [AwsSecurityHubS1pInput]
  SourceUrl: [AwsSecurityHubS1pInput]
  ProductFields: [AwsSecurityHubS1yInput]
  ProductName: [AwsSecurityHubS1pInput]
  CompanyName: [AwsSecurityHubS1pInput]
  UserDefinedFields: [AwsSecurityHubS1yInput]
  MalwareName: [AwsSecurityHubS1pInput]
  MalwareType: [AwsSecurityHubS1pInput]
  MalwarePath: [AwsSecurityHubS1pInput]
  MalwareState: [AwsSecurityHubS1pInput]
  NetworkDirection: [AwsSecurityHubS1pInput]
  NetworkProtocol: [AwsSecurityHubS1pInput]
  NetworkSourceIpV4: [AwsSecurityHubS21Input]
  NetworkSourceIpV6: [AwsSecurityHubS21Input]
  NetworkSourcePort: [AwsSecurityHubS1wInput]
  NetworkSourceDomain: [AwsSecurityHubS1pInput]
  NetworkSourceMac: [AwsSecurityHubS1pInput]
  NetworkDestinationIpV4: [AwsSecurityHubS21Input]
  NetworkDestinationIpV6: [AwsSecurityHubS21Input]
  NetworkDestinationPort: [AwsSecurityHubS1wInput]
  NetworkDestinationDomain: [AwsSecurityHubS1pInput]
  ProcessName: [AwsSecurityHubS1pInput]
  ProcessPath: [AwsSecurityHubS1pInput]
  ProcessPid: [AwsSecurityHubS1wInput]
  ProcessParentPid: [AwsSecurityHubS1wInput]
  ProcessLaunchedAt: [AwsSecurityHubS1sInput]
  ProcessTerminatedAt: [AwsSecurityHubS1sInput]
  ThreatIntelIndicatorType: [AwsSecurityHubS1pInput]
  ThreatIntelIndicatorValue: [AwsSecurityHubS1pInput]
  ThreatIntelIndicatorCategory: [AwsSecurityHubS1pInput]
  ThreatIntelIndicatorLastObservedAt: [AwsSecurityHubS1sInput]
  ThreatIntelIndicatorSource: [AwsSecurityHubS1pInput]
  ThreatIntelIndicatorSourceUrl: [AwsSecurityHubS1pInput]
  ResourceType: [AwsSecurityHubS1pInput]
  ResourceId: [AwsSecurityHubS1pInput]
  ResourcePartition: [AwsSecurityHubS1pInput]
  ResourceRegion: [AwsSecurityHubS1pInput]
  ResourceTags: [AwsSecurityHubS1yInput]
  ResourceAwsEc2InstanceType: [AwsSecurityHubS1pInput]
  ResourceAwsEc2InstanceImageId: [AwsSecurityHubS1pInput]
  ResourceAwsEc2InstanceIpV4Addresses: [AwsSecurityHubS21Input]
  ResourceAwsEc2InstanceIpV6Addresses: [AwsSecurityHubS21Input]
  ResourceAwsEc2InstanceKeyName: [AwsSecurityHubS1pInput]
  ResourceAwsEc2InstanceIamInstanceProfileArn: [AwsSecurityHubS1pInput]
  ResourceAwsEc2InstanceVpcId: [AwsSecurityHubS1pInput]
  ResourceAwsEc2InstanceSubnetId: [AwsSecurityHubS1pInput]
  ResourceAwsEc2InstanceLaunchedAt: [AwsSecurityHubS1sInput]
  ResourceAwsS3BucketOwnerId: [AwsSecurityHubS1pInput]
  ResourceAwsS3BucketOwnerName: [AwsSecurityHubS1pInput]
  ResourceAwsIamAccessKeyUserName: [AwsSecurityHubS1pInput]
  ResourceAwsIamAccessKeyStatus: [AwsSecurityHubS1pInput]
  ResourceAwsIamAccessKeyCreatedAt: [AwsSecurityHubS1sInput]
  ResourceContainerName: [AwsSecurityHubS1pInput]
  ResourceContainerImageId: [AwsSecurityHubS1pInput]
  ResourceContainerImageName: [AwsSecurityHubS1pInput]
  ResourceContainerLaunchedAt: [AwsSecurityHubS1sInput]
  ResourceDetailsOther: [AwsSecurityHubS1yInput]
  ComplianceStatus: [AwsSecurityHubS1pInput]
  VerificationState: [AwsSecurityHubS1pInput]
  WorkflowState: [AwsSecurityHubS1pInput]
  RecordState: [AwsSecurityHubS1pInput]
  RelatedFindingsProductArn: [AwsSecurityHubS1pInput]
  RelatedFindingsId: [AwsSecurityHubS1pInput]
  NoteText: [AwsSecurityHubS1pInput]
  NoteUpdatedAt: [AwsSecurityHubS1sInput]
  NoteUpdatedBy: [AwsSecurityHubS1pInput]
  Keyword: [AwsSecurityHubS1oKeywordInput]
}

type AwsSecurityHubS1oKeyword {
  Value: String
}

input AwsSecurityHubS1oKeywordInput {
  Value: String
}

type AwsSecurityHubS1p {
  Value: String
  Comparison: String
}

input AwsSecurityHubS1pInput {
  Value: String
  Comparison: String
}

type AwsSecurityHubS1s {
  Start: String
  End: String
  DateRange: AwsSecurityHubS1sDateRange
}

type AwsSecurityHubS1sDateRange {
  Value: Int
  Unit: String
}

input AwsSecurityHubS1sDateRangeInput {
  Value: Int
  Unit: String
}

input AwsSecurityHubS1sInput {
  Start: String
  End: String
  DateRange: AwsSecurityHubS1sDateRangeInput
}

type AwsSecurityHubS1w {
  Gte: JSON
  Lte: JSON
  Eq: JSON
}

input AwsSecurityHubS1wInput {
  Gte: JSON
  Lte: JSON
  Eq: JSON
}

type AwsSecurityHubS1y {
  Key: String
  Value: String
  Comparison: String
}

input AwsSecurityHubS1yInput {
  Key: String
  Value: String
  Comparison: String
}

type AwsSecurityHubS21 {
  Cidr: String
}

input AwsSecurityHubS21Input {
  Cidr: String
}

type AwsSecurityHubS2b {
  AccountId: String
  ProcessingResult: String
}

type AwsSecurityHubS41 {
  AccountId: String
  InvitationId: String
  InvitedAt: Date
  MemberStatus: String
}

type AwsSecurityHubS45 {
  AccountId: String
  Email: String
  MasterId: String
  MemberStatus: String
  InvitedAt: Date
  UpdatedAt: Date
}

type AwsSecurityHubS7 {
  StandardsSubscriptionArn: String!
  StandardsArn: String!
  StandardsInput: JSON!
  StandardsStatus: String!
}

type AwsSecurityHubSg {
  SchemaVersion: String!
  Id: String!
  ProductArn: String!
  GeneratorId: String!
  AwsAccountId: String!
  Types: [String]!
  FirstObservedAt: String
  LastObservedAt: String
  CreatedAt: String!
  UpdatedAt: String!
  Severity: AwsSecurityHubSgSeverity!
  Confidence: Int
  Criticality: Int
  Title: String!
  Description: String!
  Remediation: AwsSecurityHubSgRemediation
  SourceUrl: String
  ProductFields: JSON
  UserDefinedFields: JSON
  Malware: [AwsSecurityHubSgMalware]
  Network: AwsSecurityHubSgNetwork
  Process: AwsSecurityHubSgProcess
  ThreatIntelIndicators: [AwsSecurityHubSgThreatIntelIndicators]
  Resources: [AwsSecurityHubSgResources]!
  Compliance: AwsSecurityHubSgCompliance
  VerificationState: String
  WorkflowState: String
  RecordState: String
  RelatedFindings: [AwsSecurityHubSgRelatedFindings]
  Note: AwsSecurityHubSgNote
}

type AwsSecurityHubSgCompliance {
  Status: String
}

input AwsSecurityHubSgComplianceInput {
  Status: String
}

input AwsSecurityHubSgInput {
  SchemaVersion: String!
  Id: String!
  ProductArn: String!
  GeneratorId: String!
  AwsAccountId: String!
  Types: [String]!
  FirstObservedAt: String
  LastObservedAt: String
  CreatedAt: String!
  UpdatedAt: String!
  Severity: AwsSecurityHubSgSeverityInput!
  Confidence: Int
  Criticality: Int
  Title: String!
  Description: String!
  Remediation: AwsSecurityHubSgRemediationInput
  SourceUrl: String
  ProductFields: JSON
  UserDefinedFields: JSON
  Malware: [AwsSecurityHubSgMalwareInput]
  Network: AwsSecurityHubSgNetworkInput
  Process: AwsSecurityHubSgProcessInput
  ThreatIntelIndicators: [AwsSecurityHubSgThreatIntelIndicatorsInput]
  Resources: [AwsSecurityHubSgResourcesInput]!
  Compliance: AwsSecurityHubSgComplianceInput
  VerificationState: String
  WorkflowState: String
  RecordState: String
  RelatedFindings: [AwsSecurityHubSgRelatedFindingsInput]
  Note: AwsSecurityHubSgNoteInput
}

type AwsSecurityHubSgMalware {
  Name: String!
  Type: String
  Path: String
  State: String
}

input AwsSecurityHubSgMalwareInput {
  Name: String!
  Type: String
  Path: String
  State: String
}

type AwsSecurityHubSgNetwork {
  Direction: String
  Protocol: String
  SourceIpV4: String
  SourceIpV6: String
  SourcePort: Int
  SourceDomain: String
  SourceMac: String
  DestinationIpV4: String
  DestinationIpV6: String
  DestinationPort: Int
  DestinationDomain: String
}

input AwsSecurityHubSgNetworkInput {
  Direction: String
  Protocol: String
  SourceIpV4: String
  SourceIpV6: String
  SourcePort: Int
  SourceDomain: String
  SourceMac: String
  DestinationIpV4: String
  DestinationIpV6: String
  DestinationPort: Int
  DestinationDomain: String
}

type AwsSecurityHubSgNote {
  Text: String!
  UpdatedBy: String!
  UpdatedAt: String!
}

input AwsSecurityHubSgNoteInput {
  Text: String!
  UpdatedBy: String!
  UpdatedAt: String!
}

type AwsSecurityHubSgProcess {
  Name: String
  Path: String
  Pid: Int
  ParentPid: Int
  LaunchedAt: String
  TerminatedAt: String
}

input AwsSecurityHubSgProcessInput {
  Name: String
  Path: String
  Pid: Int
  ParentPid: Int
  LaunchedAt: String
  TerminatedAt: String
}

type AwsSecurityHubSgRelatedFindings {
  ProductArn: String!
  Id: String!
}

input AwsSecurityHubSgRelatedFindingsInput {
  ProductArn: String!
  Id: String!
}

type AwsSecurityHubSgRemediation {
  Recommendation: AwsSecurityHubSgRemediationRecommendation
}

input AwsSecurityHubSgRemediationInput {
  Recommendation: AwsSecurityHubSgRemediationRecommendationInput
}

type AwsSecurityHubSgRemediationRecommendation {
  Text: String
  Url: String
}

input AwsSecurityHubSgRemediationRecommendationInput {
  Text: String
  Url: String
}

type AwsSecurityHubSgResources {
  Type: String!
  Id: String!
  Partition: String
  Region: String
  Tags: JSON
  Details: AwsSecurityHubSgResourcesDetails
}

type AwsSecurityHubSgResourcesDetails {
  AwsEc2Instance: AwsSecurityHubSgResourcesDetailsAwsEc2Instance
  AwsS3Bucket: AwsSecurityHubSgResourcesDetailsAwsS3Bucket
  AwsIamAccessKey: AwsSecurityHubSgResourcesDetailsAwsIamAccessKey
  Container: AwsSecurityHubSgResourcesDetailsContainer
  Other: JSON
}

type AwsSecurityHubSgResourcesDetailsAwsEc2Instance {
  Type: String
  ImageId: String
  IpV4Addresses: [String]
  IpV6Addresses: [String]
  KeyName: String
  IamInstanceProfileArn: String
  VpcId: String
  SubnetId: String
  LaunchedAt: String
}

input AwsSecurityHubSgResourcesDetailsAwsEc2InstanceInput {
  Type: String
  ImageId: String
  IpV4Addresses: [String]
  IpV6Addresses: [String]
  KeyName: String
  IamInstanceProfileArn: String
  VpcId: String
  SubnetId: String
  LaunchedAt: String
}

type AwsSecurityHubSgResourcesDetailsAwsIamAccessKey {
  UserName: String
  Status: String
  CreatedAt: String
}

input AwsSecurityHubSgResourcesDetailsAwsIamAccessKeyInput {
  UserName: String
  Status: String
  CreatedAt: String
}

type AwsSecurityHubSgResourcesDetailsAwsS3Bucket {
  OwnerId: String
  OwnerName: String
}

input AwsSecurityHubSgResourcesDetailsAwsS3BucketInput {
  OwnerId: String
  OwnerName: String
}

type AwsSecurityHubSgResourcesDetailsContainer {
  Name: String
  ImageId: String
  ImageName: String
  LaunchedAt: String
}

input AwsSecurityHubSgResourcesDetailsContainerInput {
  Name: String
  ImageId: String
  ImageName: String
  LaunchedAt: String
}

input AwsSecurityHubSgResourcesDetailsInput {
  AwsEc2Instance: AwsSecurityHubSgResourcesDetailsAwsEc2InstanceInput
  AwsS3Bucket: AwsSecurityHubSgResourcesDetailsAwsS3BucketInput
  AwsIamAccessKey: AwsSecurityHubSgResourcesDetailsAwsIamAccessKeyInput
  Container: AwsSecurityHubSgResourcesDetailsContainerInput
  Other: JSON
}

input AwsSecurityHubSgResourcesInput {
  Type: String!
  Id: String!
  Partition: String
  Region: String
  Tags: JSON
  Details: AwsSecurityHubSgResourcesDetailsInput
}

type AwsSecurityHubSgSeverity {
  Product: JSON
  Normalized: Int!
}

input AwsSecurityHubSgSeverityInput {
  Product: JSON
  Normalized: Int!
}

type AwsSecurityHubSgThreatIntelIndicators {
  Type: String
  Value: String
  Category: String
  LastObservedAt: String
  Source: String
  SourceUrl: String
}

input AwsSecurityHubSgThreatIntelIndicatorsInput {
  Type: String
  Value: String
  Category: String
  LastObservedAt: String
  Source: String
  SourceUrl: String
}

input AwsSecurityHubTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsSecurityHubUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsSecurityHubUpdateActionTargetInput {
  ActionTargetArn: String!
  Name: String
  Description: String
}

input AwsSecurityHubUpdateFindingsInput {
  Filters: AwsSecurityHubS1oInput!
  Note: AwsSecurityHubUpdateFindingsNoteInput
  RecordState: String
}

input AwsSecurityHubUpdateFindingsNoteInput {
  Text: String!
  UpdatedBy: String!
}

input AwsSecurityHubUpdateInsightInput {
  InsightArn: String!
  Name: String
  Filters: AwsSecurityHubS1oInput
  GroupByAttribute: String
}

"""AWSServerlessApplicationRepository (2017-09-08)"""
type AwsServerlessApplicationRepository {
  createApplication(input: AwsServerlessApplicationRepositoryCreateApplicationInput!, config: AwsConfig): AwsServerlessApplicationRepositoryCreateApplicationOutput
  createApplicationVersion(input: AwsServerlessApplicationRepositoryCreateApplicationVersionInput!, config: AwsConfig): AwsServerlessApplicationRepositoryCreateApplicationVersionOutput
  createCloudFormationChangeSet(input: AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetInput!, config: AwsConfig): AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetOutput
  createCloudFormationTemplate(input: AwsServerlessApplicationRepositoryCreateCloudFormationTemplateInput!, config: AwsConfig): AwsServerlessApplicationRepositoryCreateCloudFormationTemplateOutput
  deleteApplication(input: AwsServerlessApplicationRepositoryDeleteApplicationInput!, config: AwsConfig): JSON
  getApplication(input: AwsServerlessApplicationRepositoryGetApplicationInput!, config: AwsConfig): AwsServerlessApplicationRepositoryGetApplicationOutput
  getApplicationPolicy(input: AwsServerlessApplicationRepositoryGetApplicationPolicyInput!, config: AwsConfig): AwsServerlessApplicationRepositoryGetApplicationPolicyOutput
  getCloudFormationTemplate(input: AwsServerlessApplicationRepositoryGetCloudFormationTemplateInput!, config: AwsConfig): AwsServerlessApplicationRepositoryGetCloudFormationTemplateOutput
  listApplicationDependencies(input: AwsServerlessApplicationRepositoryListApplicationDependenciesInput!, config: AwsConfig): AwsServerlessApplicationRepositoryListApplicationDependenciesOutput
  listApplicationVersions(input: AwsServerlessApplicationRepositoryListApplicationVersionsInput!, config: AwsConfig): AwsServerlessApplicationRepositoryListApplicationVersionsOutput
  listApplications(input: AwsServerlessApplicationRepositoryListApplicationsInput, config: AwsConfig): AwsServerlessApplicationRepositoryListApplicationsOutput
  putApplicationPolicy(input: AwsServerlessApplicationRepositoryPutApplicationPolicyInput!, config: AwsConfig): AwsServerlessApplicationRepositoryPutApplicationPolicyOutput
  updateApplication(input: AwsServerlessApplicationRepositoryUpdateApplicationInput!, config: AwsConfig): AwsServerlessApplicationRepositoryUpdateApplicationOutput
}

input AwsServerlessApplicationRepositoryCreateApplicationInput {
  Author: String!
  Description: String!
  HomePageUrl: String
  Labels: [String]
  LicenseBody: String
  LicenseUrl: String
  Name: String!
  ReadmeBody: String
  ReadmeUrl: String
  SemanticVersion: String
  SourceCodeArchiveUrl: String
  SourceCodeUrl: String
  SpdxLicenseId: String
  TemplateBody: String
  TemplateUrl: String
}

type AwsServerlessApplicationRepositoryCreateApplicationOutput {
  ApplicationId: String
  Author: String
  CreationTime: String
  Description: String
  HomePageUrl: String
  Labels: [String]
  LicenseUrl: String
  Name: String
  ReadmeUrl: String
  SpdxLicenseId: String
  Version: AwsServerlessApplicationRepositoryS5
}

input AwsServerlessApplicationRepositoryCreateApplicationVersionInput {
  ApplicationId: String!
  SemanticVersion: String!
  SourceCodeArchiveUrl: String
  SourceCodeUrl: String
  TemplateBody: String
  TemplateUrl: String
}

type AwsServerlessApplicationRepositoryCreateApplicationVersionOutput {
  ApplicationId: String
  CreationTime: String
  ParameterDefinitions: [AwsServerlessApplicationRepositoryS6]
  RequiredCapabilities: [String]
  ResourcesSupported: Boolean
  SemanticVersion: String
  SourceCodeArchiveUrl: String
  SourceCodeUrl: String
  TemplateUrl: String
}

input AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetInput {
  ApplicationId: String!
  Capabilities: [String]
  ChangeSetName: String
  ClientToken: String
  Description: String
  NotificationArns: [String]
  ParameterOverrides: [AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetParameterOverridesInput]
  ResourceTypes: [String]
  RollbackConfiguration: AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetRollbackConfigurationInput
  SemanticVersion: String
  StackName: String!
  Tags: [AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetTagsInput]
  TemplateId: String
}

type AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetOutput {
  ApplicationId: String
  ChangeSetId: String
  SemanticVersion: String
  StackId: String
}

input AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetParameterOverridesInput {
  Name: String!
  Value: String!
}

input AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetRollbackConfigurationInput {
  MonitoringTimeInMinutes: Int
  RollbackTriggers: [AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetRollbackConfigurationRollbackTriggersInput]
}

input AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetRollbackConfigurationRollbackTriggersInput {
  Arn: String!
  Type: String!
}

input AwsServerlessApplicationRepositoryCreateCloudFormationChangeSetTagsInput {
  Key: String!
  Value: String!
}

input AwsServerlessApplicationRepositoryCreateCloudFormationTemplateInput {
  ApplicationId: String!
  SemanticVersion: String
}

type AwsServerlessApplicationRepositoryCreateCloudFormationTemplateOutput {
  ApplicationId: String
  CreationTime: String
  ExpirationTime: String
  SemanticVersion: String
  Status: String
  TemplateId: String
  TemplateUrl: String
}

input AwsServerlessApplicationRepositoryDeleteApplicationInput {
  ApplicationId: String!
}

input AwsServerlessApplicationRepositoryGetApplicationInput {
  ApplicationId: String!
  SemanticVersion: String
}

type AwsServerlessApplicationRepositoryGetApplicationOutput {
  ApplicationId: String
  Author: String
  CreationTime: String
  Description: String
  HomePageUrl: String
  Labels: [String]
  LicenseUrl: String
  Name: String
  ReadmeUrl: String
  SpdxLicenseId: String
  Version: AwsServerlessApplicationRepositoryS5
}

input AwsServerlessApplicationRepositoryGetApplicationPolicyInput {
  ApplicationId: String!
}

type AwsServerlessApplicationRepositoryGetApplicationPolicyOutput {
  Statements: [AwsServerlessApplicationRepositorySv]
}

input AwsServerlessApplicationRepositoryGetCloudFormationTemplateInput {
  ApplicationId: String!
  TemplateId: String!
}

type AwsServerlessApplicationRepositoryGetCloudFormationTemplateOutput {
  ApplicationId: String
  CreationTime: String
  ExpirationTime: String
  SemanticVersion: String
  Status: String
  TemplateId: String
  TemplateUrl: String
}

input AwsServerlessApplicationRepositoryListApplicationDependenciesInput {
  ApplicationId: String!
  MaxItems: Int
  NextToken: String
  SemanticVersion: String
}

type AwsServerlessApplicationRepositoryListApplicationDependenciesOutput {
  Dependencies: [AwsServerlessApplicationRepositoryListApplicationDependenciesOutputDependencies]
  NextToken: String
}

type AwsServerlessApplicationRepositoryListApplicationDependenciesOutputDependencies {
  ApplicationId: String!
  SemanticVersion: String!
}

input AwsServerlessApplicationRepositoryListApplicationsInput {
  MaxItems: Int
  NextToken: String
}

type AwsServerlessApplicationRepositoryListApplicationsOutput {
  Applications: [AwsServerlessApplicationRepositoryListApplicationsOutputApplications]
  NextToken: String
}

type AwsServerlessApplicationRepositoryListApplicationsOutputApplications {
  ApplicationId: String!
  Author: String!
  CreationTime: String
  Description: String!
  HomePageUrl: String
  Labels: [String]
  Name: String!
  SpdxLicenseId: String
}

input AwsServerlessApplicationRepositoryListApplicationVersionsInput {
  ApplicationId: String!
  MaxItems: Int
  NextToken: String
}

type AwsServerlessApplicationRepositoryListApplicationVersionsOutput {
  NextToken: String
  Versions: [AwsServerlessApplicationRepositoryListApplicationVersionsOutputVersions]
}

type AwsServerlessApplicationRepositoryListApplicationVersionsOutputVersions {
  ApplicationId: String!
  CreationTime: String!
  SemanticVersion: String!
  SourceCodeUrl: String
}

input AwsServerlessApplicationRepositoryPutApplicationPolicyInput {
  ApplicationId: String!
  Statements: [AwsServerlessApplicationRepositorySvInput]!
}

type AwsServerlessApplicationRepositoryPutApplicationPolicyOutput {
  Statements: [AwsServerlessApplicationRepositorySv]
}

type AwsServerlessApplicationRepositoryS5 {
  ApplicationId: String!
  CreationTime: String!
  ParameterDefinitions: [AwsServerlessApplicationRepositoryS6]!
  RequiredCapabilities: [String]!
  ResourcesSupported: Boolean!
  SemanticVersion: String!
  SourceCodeArchiveUrl: String
  SourceCodeUrl: String
  TemplateUrl: String!
}

type AwsServerlessApplicationRepositoryS6 {
  AllowedPattern: String
  AllowedValues: [String]
  ConstraintDescription: String
  DefaultValue: String
  Description: String
  MaxLength: Int
  MaxValue: Int
  MinLength: Int
  MinValue: Int
  Name: String!
  NoEcho: Boolean
  ReferencedByResources: [String]!
  Type: String
}

type AwsServerlessApplicationRepositorySv {
  Actions: [String]!
  Principals: [String]!
  StatementId: String
}

input AwsServerlessApplicationRepositorySvInput {
  Actions: [String]!
  Principals: [String]!
  StatementId: String
}

input AwsServerlessApplicationRepositoryUpdateApplicationInput {
  ApplicationId: String!
  Author: String
  Description: String
  HomePageUrl: String
  Labels: [String]
  ReadmeBody: String
  ReadmeUrl: String
}

type AwsServerlessApplicationRepositoryUpdateApplicationOutput {
  ApplicationId: String
  Author: String
  CreationTime: String
  Description: String
  HomePageUrl: String
  Labels: [String]
  LicenseUrl: String
  Name: String
  ReadmeUrl: String
  SpdxLicenseId: String
  Version: AwsServerlessApplicationRepositoryS5
}

"""AWS Service Catalog (2015-12-10)"""
type AwsServiceCatalog {
  acceptPortfolioShare(input: AwsServiceCatalogAcceptPortfolioShareInput!, config: AwsConfig): JSON
  associateBudgetWithResource(input: AwsServiceCatalogAssociateBudgetWithResourceInput!, config: AwsConfig): JSON
  associatePrincipalWithPortfolio(input: AwsServiceCatalogAssociatePrincipalWithPortfolioInput!, config: AwsConfig): JSON
  associateProductWithPortfolio(input: AwsServiceCatalogAssociateProductWithPortfolioInput!, config: AwsConfig): JSON
  associateServiceActionWithProvisioningArtifact(input: AwsServiceCatalogAssociateServiceActionWithProvisioningArtifactInput!, config: AwsConfig): JSON
  associateTagOptionWithResource(input: AwsServiceCatalogAssociateTagOptionWithResourceInput!, config: AwsConfig): JSON
  batchAssociateServiceActionWithProvisioningArtifact(input: AwsServiceCatalogBatchAssociateServiceActionWithProvisioningArtifactInput!, config: AwsConfig): AwsServiceCatalogBatchAssociateServiceActionWithProvisioningArtifactOutput
  batchDisassociateServiceActionFromProvisioningArtifact(input: AwsServiceCatalogBatchDisassociateServiceActionFromProvisioningArtifactInput!, config: AwsConfig): AwsServiceCatalogBatchDisassociateServiceActionFromProvisioningArtifactOutput
  copyProduct(input: AwsServiceCatalogCopyProductInput!, config: AwsConfig): AwsServiceCatalogCopyProductOutput
  createConstraint(input: AwsServiceCatalogCreateConstraintInput!, config: AwsConfig): AwsServiceCatalogCreateConstraintOutput
  createPortfolio(input: AwsServiceCatalogCreatePortfolioInput!, config: AwsConfig): AwsServiceCatalogCreatePortfolioOutput
  createPortfolioShare(input: AwsServiceCatalogCreatePortfolioShareInput!, config: AwsConfig): AwsServiceCatalogCreatePortfolioShareOutput
  createProduct(input: AwsServiceCatalogCreateProductInput!, config: AwsConfig): AwsServiceCatalogCreateProductOutput
  createProvisionedProductPlan(input: AwsServiceCatalogCreateProvisionedProductPlanInput!, config: AwsConfig): AwsServiceCatalogCreateProvisionedProductPlanOutput
  createProvisioningArtifact(input: AwsServiceCatalogCreateProvisioningArtifactInput!, config: AwsConfig): AwsServiceCatalogCreateProvisioningArtifactOutput
  createServiceAction(input: AwsServiceCatalogCreateServiceActionInput!, config: AwsConfig): AwsServiceCatalogCreateServiceActionOutput
  createTagOption(input: AwsServiceCatalogCreateTagOptionInput!, config: AwsConfig): AwsServiceCatalogCreateTagOptionOutput
  deleteConstraint(input: AwsServiceCatalogDeleteConstraintInput!, config: AwsConfig): JSON
  deletePortfolio(input: AwsServiceCatalogDeletePortfolioInput!, config: AwsConfig): JSON
  deletePortfolioShare(input: AwsServiceCatalogDeletePortfolioShareInput!, config: AwsConfig): AwsServiceCatalogDeletePortfolioShareOutput
  deleteProduct(input: AwsServiceCatalogDeleteProductInput!, config: AwsConfig): JSON
  deleteProvisionedProductPlan(input: AwsServiceCatalogDeleteProvisionedProductPlanInput!, config: AwsConfig): JSON
  deleteProvisioningArtifact(input: AwsServiceCatalogDeleteProvisioningArtifactInput!, config: AwsConfig): JSON
  deleteServiceAction(input: AwsServiceCatalogDeleteServiceActionInput!, config: AwsConfig): JSON
  deleteTagOption(input: AwsServiceCatalogDeleteTagOptionInput!, config: AwsConfig): JSON
  describeConstraint(input: AwsServiceCatalogDescribeConstraintInput!, config: AwsConfig): AwsServiceCatalogDescribeConstraintOutput
  describeCopyProductStatus(input: AwsServiceCatalogDescribeCopyProductStatusInput!, config: AwsConfig): AwsServiceCatalogDescribeCopyProductStatusOutput
  describePortfolio(input: AwsServiceCatalogDescribePortfolioInput!, config: AwsConfig): AwsServiceCatalogDescribePortfolioOutput
  describePortfolioShareStatus(input: AwsServiceCatalogDescribePortfolioShareStatusInput!, config: AwsConfig): AwsServiceCatalogDescribePortfolioShareStatusOutput
  describeProduct(input: AwsServiceCatalogDescribeProductInput!, config: AwsConfig): AwsServiceCatalogDescribeProductOutput
  describeProductAsAdmin(input: AwsServiceCatalogDescribeProductAsAdminInput!, config: AwsConfig): AwsServiceCatalogDescribeProductAsAdminOutput
  describeProductView(input: AwsServiceCatalogDescribeProductViewInput!, config: AwsConfig): AwsServiceCatalogDescribeProductViewOutput
  describeProvisionedProduct(input: AwsServiceCatalogDescribeProvisionedProductInput!, config: AwsConfig): AwsServiceCatalogDescribeProvisionedProductOutput
  describeProvisionedProductPlan(input: AwsServiceCatalogDescribeProvisionedProductPlanInput!, config: AwsConfig): AwsServiceCatalogDescribeProvisionedProductPlanOutput
  describeProvisioningArtifact(input: AwsServiceCatalogDescribeProvisioningArtifactInput!, config: AwsConfig): AwsServiceCatalogDescribeProvisioningArtifactOutput
  describeProvisioningParameters(input: AwsServiceCatalogDescribeProvisioningParametersInput!, config: AwsConfig): AwsServiceCatalogDescribeProvisioningParametersOutput
  describeRecord(input: AwsServiceCatalogDescribeRecordInput!, config: AwsConfig): AwsServiceCatalogDescribeRecordOutput
  describeServiceAction(input: AwsServiceCatalogDescribeServiceActionInput!, config: AwsConfig): AwsServiceCatalogDescribeServiceActionOutput
  describeTagOption(input: AwsServiceCatalogDescribeTagOptionInput!, config: AwsConfig): AwsServiceCatalogDescribeTagOptionOutput
  disableAWSOrganizationsAccess(input: JSON, config: AwsConfig): JSON
  disassociateBudgetFromResource(input: AwsServiceCatalogDisassociateBudgetFromResourceInput!, config: AwsConfig): JSON
  disassociatePrincipalFromPortfolio(input: AwsServiceCatalogDisassociatePrincipalFromPortfolioInput!, config: AwsConfig): JSON
  disassociateProductFromPortfolio(input: AwsServiceCatalogDisassociateProductFromPortfolioInput!, config: AwsConfig): JSON
  disassociateServiceActionFromProvisioningArtifact(input: AwsServiceCatalogDisassociateServiceActionFromProvisioningArtifactInput!, config: AwsConfig): JSON
  disassociateTagOptionFromResource(input: AwsServiceCatalogDisassociateTagOptionFromResourceInput!, config: AwsConfig): JSON
  enableAWSOrganizationsAccess(input: JSON, config: AwsConfig): JSON
  executeProvisionedProductPlan(input: AwsServiceCatalogExecuteProvisionedProductPlanInput!, config: AwsConfig): AwsServiceCatalogExecuteProvisionedProductPlanOutput
  executeProvisionedProductServiceAction(input: AwsServiceCatalogExecuteProvisionedProductServiceActionInput!, config: AwsConfig): AwsServiceCatalogExecuteProvisionedProductServiceActionOutput
  getAWSOrganizationsAccessStatus(input: JSON, config: AwsConfig): AwsServiceCatalogGetAWSOrganizationsAccessStatusOutput
  listAcceptedPortfolioShares(input: AwsServiceCatalogListAcceptedPortfolioSharesInput, config: AwsConfig): AwsServiceCatalogListAcceptedPortfolioSharesOutput
  listBudgetsForResource(input: AwsServiceCatalogListBudgetsForResourceInput!, config: AwsConfig): AwsServiceCatalogListBudgetsForResourceOutput
  listConstraintsForPortfolio(input: AwsServiceCatalogListConstraintsForPortfolioInput!, config: AwsConfig): AwsServiceCatalogListConstraintsForPortfolioOutput
  listLaunchPaths(input: AwsServiceCatalogListLaunchPathsInput!, config: AwsConfig): AwsServiceCatalogListLaunchPathsOutput
  listOrganizationPortfolioAccess(input: AwsServiceCatalogListOrganizationPortfolioAccessInput!, config: AwsConfig): AwsServiceCatalogListOrganizationPortfolioAccessOutput
  listPortfolioAccess(input: AwsServiceCatalogListPortfolioAccessInput!, config: AwsConfig): AwsServiceCatalogListPortfolioAccessOutput
  listPortfolios(input: AwsServiceCatalogListPortfoliosInput, config: AwsConfig): AwsServiceCatalogListPortfoliosOutput
  listPortfoliosForProduct(input: AwsServiceCatalogListPortfoliosForProductInput!, config: AwsConfig): AwsServiceCatalogListPortfoliosForProductOutput
  listPrincipalsForPortfolio(input: AwsServiceCatalogListPrincipalsForPortfolioInput!, config: AwsConfig): AwsServiceCatalogListPrincipalsForPortfolioOutput
  listProvisionedProductPlans(input: AwsServiceCatalogListProvisionedProductPlansInput, config: AwsConfig): AwsServiceCatalogListProvisionedProductPlansOutput
  listProvisioningArtifacts(input: AwsServiceCatalogListProvisioningArtifactsInput!, config: AwsConfig): AwsServiceCatalogListProvisioningArtifactsOutput
  listProvisioningArtifactsForServiceAction(input: AwsServiceCatalogListProvisioningArtifactsForServiceActionInput!, config: AwsConfig): AwsServiceCatalogListProvisioningArtifactsForServiceActionOutput
  listRecordHistory(input: AwsServiceCatalogListRecordHistoryInput, config: AwsConfig): AwsServiceCatalogListRecordHistoryOutput
  listResourcesForTagOption(input: AwsServiceCatalogListResourcesForTagOptionInput!, config: AwsConfig): AwsServiceCatalogListResourcesForTagOptionOutput
  listServiceActions(input: AwsServiceCatalogListServiceActionsInput, config: AwsConfig): AwsServiceCatalogListServiceActionsOutput
  listServiceActionsForProvisioningArtifact(input: AwsServiceCatalogListServiceActionsForProvisioningArtifactInput!, config: AwsConfig): AwsServiceCatalogListServiceActionsForProvisioningArtifactOutput
  listStackInstancesForProvisionedProduct(input: AwsServiceCatalogListStackInstancesForProvisionedProductInput!, config: AwsConfig): AwsServiceCatalogListStackInstancesForProvisionedProductOutput
  listTagOptions(input: AwsServiceCatalogListTagOptionsInput, config: AwsConfig): AwsServiceCatalogListTagOptionsOutput
  provisionProduct(input: AwsServiceCatalogProvisionProductInput!, config: AwsConfig): AwsServiceCatalogProvisionProductOutput
  rejectPortfolioShare(input: AwsServiceCatalogRejectPortfolioShareInput!, config: AwsConfig): JSON
  scanProvisionedProducts(input: AwsServiceCatalogScanProvisionedProductsInput, config: AwsConfig): AwsServiceCatalogScanProvisionedProductsOutput
  searchProducts(input: AwsServiceCatalogSearchProductsInput, config: AwsConfig): AwsServiceCatalogSearchProductsOutput
  searchProductsAsAdmin(input: AwsServiceCatalogSearchProductsAsAdminInput, config: AwsConfig): AwsServiceCatalogSearchProductsAsAdminOutput
  searchProvisionedProducts(input: AwsServiceCatalogSearchProvisionedProductsInput, config: AwsConfig): AwsServiceCatalogSearchProvisionedProductsOutput
  terminateProvisionedProduct(input: AwsServiceCatalogTerminateProvisionedProductInput!, config: AwsConfig): AwsServiceCatalogTerminateProvisionedProductOutput
  updateConstraint(input: AwsServiceCatalogUpdateConstraintInput!, config: AwsConfig): AwsServiceCatalogUpdateConstraintOutput
  updatePortfolio(input: AwsServiceCatalogUpdatePortfolioInput!, config: AwsConfig): AwsServiceCatalogUpdatePortfolioOutput
  updateProduct(input: AwsServiceCatalogUpdateProductInput!, config: AwsConfig): AwsServiceCatalogUpdateProductOutput
  updateProvisionedProduct(input: AwsServiceCatalogUpdateProvisionedProductInput!, config: AwsConfig): AwsServiceCatalogUpdateProvisionedProductOutput
  updateProvisionedProductProperties(input: AwsServiceCatalogUpdateProvisionedProductPropertiesInput!, config: AwsConfig): AwsServiceCatalogUpdateProvisionedProductPropertiesOutput
  updateProvisioningArtifact(input: AwsServiceCatalogUpdateProvisioningArtifactInput!, config: AwsConfig): AwsServiceCatalogUpdateProvisioningArtifactOutput
  updateServiceAction(input: AwsServiceCatalogUpdateServiceActionInput!, config: AwsConfig): AwsServiceCatalogUpdateServiceActionOutput
  updateTagOption(input: AwsServiceCatalogUpdateTagOptionInput!, config: AwsConfig): AwsServiceCatalogUpdateTagOptionOutput
}

input AwsServiceCatalogAcceptPortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
  PortfolioShareType: String
}

input AwsServiceCatalogAssociateBudgetWithResourceInput {
  BudgetName: String!
  ResourceId: String!
}

input AwsServiceCatalogAssociatePrincipalWithPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  PrincipalARN: String!
  PrincipalType: String!
}

input AwsServiceCatalogAssociateProductWithPortfolioInput {
  AcceptLanguage: String
  ProductId: String!
  PortfolioId: String!
  SourcePortfolioId: String
}

input AwsServiceCatalogAssociateServiceActionWithProvisioningArtifactInput {
  ProductId: String!
  ProvisioningArtifactId: String!
  ServiceActionId: String!
  AcceptLanguage: String
}

input AwsServiceCatalogAssociateTagOptionWithResourceInput {
  ResourceId: String!
  TagOptionId: String!
}

input AwsServiceCatalogBatchAssociateServiceActionWithProvisioningArtifactInput {
  ServiceActionAssociations: [AwsServiceCatalogSmInput]!
  AcceptLanguage: String
}

type AwsServiceCatalogBatchAssociateServiceActionWithProvisioningArtifactOutput {
  FailedServiceActionAssociations: [AwsServiceCatalogSp]
}

input AwsServiceCatalogBatchDisassociateServiceActionFromProvisioningArtifactInput {
  ServiceActionAssociations: [AwsServiceCatalogSmInput]!
  AcceptLanguage: String
}

type AwsServiceCatalogBatchDisassociateServiceActionFromProvisioningArtifactOutput {
  FailedServiceActionAssociations: [AwsServiceCatalogSp]
}

input AwsServiceCatalogCopyProductInput {
  AcceptLanguage: String
  SourceProductArn: String!
  TargetProductId: String
  TargetProductName: String
  SourceProvisioningArtifactIdentifiers: [JSON]
  CopyOptions: [String]
  IdempotencyToken: String!
}

type AwsServiceCatalogCopyProductOutput {
  CopyProductToken: String
}

input AwsServiceCatalogCreateConstraintInput {
  AcceptLanguage: String
  PortfolioId: String!
  ProductId: String!
  Parameters: String!
  Type: String!
  Description: String
  IdempotencyToken: String!
}

type AwsServiceCatalogCreateConstraintOutput {
  ConstraintDetail: AwsServiceCatalogS1b
  ConstraintParameters: String
  Status: String
}

input AwsServiceCatalogCreatePortfolioInput {
  AcceptLanguage: String
  DisplayName: String!
  Description: String
  ProviderName: String!
  Tags: [AwsServiceCatalogS1jInput]
  IdempotencyToken: String!
}

type AwsServiceCatalogCreatePortfolioOutput {
  PortfolioDetail: AwsServiceCatalogS1n
  Tags: [AwsServiceCatalogS1j]
}

input AwsServiceCatalogCreatePortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
  AccountId: String
  OrganizationNode: AwsServiceCatalogS1sInput
}

type AwsServiceCatalogCreatePortfolioShareOutput {
  PortfolioShareToken: String
}

input AwsServiceCatalogCreateProductInput {
  AcceptLanguage: String
  Name: String!
  Owner: String!
  Description: String
  Distributor: String
  SupportDescription: String
  SupportEmail: String
  SupportUrl: String
  ProductType: String!
  Tags: [AwsServiceCatalogS1jInput]
  ProvisioningArtifactParameters: AwsServiceCatalogS23Input!
  IdempotencyToken: String!
}

type AwsServiceCatalogCreateProductOutput {
  ProductViewDetail: AwsServiceCatalogS2c
  ProvisioningArtifactDetail: AwsServiceCatalogS2h
  Tags: [AwsServiceCatalogS1j]
}

input AwsServiceCatalogCreateProvisionedProductPlanInput {
  AcceptLanguage: String
  PlanName: String!
  PlanType: String!
  NotificationArns: [String]
  PathId: String
  ProductId: String!
  ProvisionedProductName: String!
  ProvisioningArtifactId: String!
  ProvisioningParameters: [AwsServiceCatalogS2qInput]
  IdempotencyToken: String!
  Tags: [AwsServiceCatalogS1jInput]
}

type AwsServiceCatalogCreateProvisionedProductPlanOutput {
  PlanName: String
  PlanId: String
  ProvisionProductId: String
  ProvisionedProductName: String
  ProvisioningArtifactId: String
}

input AwsServiceCatalogCreateProvisioningArtifactInput {
  AcceptLanguage: String
  ProductId: String!
  Parameters: AwsServiceCatalogS23Input!
  IdempotencyToken: String!
}

type AwsServiceCatalogCreateProvisioningArtifactOutput {
  ProvisioningArtifactDetail: AwsServiceCatalogS2h
  Info: JSON
  Status: String
}

input AwsServiceCatalogCreateServiceActionInput {
  Name: String!
  DefinitionType: String!
  Definition: JSON!
  Description: String
  AcceptLanguage: String
  IdempotencyToken: String!
}

type AwsServiceCatalogCreateServiceActionOutput {
  ServiceActionDetail: AwsServiceCatalogS36
}

input AwsServiceCatalogCreateTagOptionInput {
  Key: String!
  Value: String!
}

type AwsServiceCatalogCreateTagOptionOutput {
  TagOptionDetail: AwsServiceCatalogS3c
}

input AwsServiceCatalogDeleteConstraintInput {
  AcceptLanguage: String
  Id: String!
}

input AwsServiceCatalogDeletePortfolioInput {
  AcceptLanguage: String
  Id: String!
}

input AwsServiceCatalogDeletePortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
  AccountId: String
  OrganizationNode: AwsServiceCatalogS1sInput
}

type AwsServiceCatalogDeletePortfolioShareOutput {
  PortfolioShareToken: String
}

input AwsServiceCatalogDeleteProductInput {
  AcceptLanguage: String
  Id: String!
}

input AwsServiceCatalogDeleteProvisionedProductPlanInput {
  AcceptLanguage: String
  PlanId: String!
  IgnoreErrors: Boolean
}

input AwsServiceCatalogDeleteProvisioningArtifactInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
}

input AwsServiceCatalogDeleteServiceActionInput {
  Id: String!
  AcceptLanguage: String
}

input AwsServiceCatalogDeleteTagOptionInput {
  Id: String!
}

input AwsServiceCatalogDescribeConstraintInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribeConstraintOutput {
  ConstraintDetail: AwsServiceCatalogS1b
  ConstraintParameters: String
  Status: String
}

input AwsServiceCatalogDescribeCopyProductStatusInput {
  AcceptLanguage: String
  CopyProductToken: String!
}

type AwsServiceCatalogDescribeCopyProductStatusOutput {
  CopyProductStatus: String
  TargetProductId: String
  StatusDetail: String
}

input AwsServiceCatalogDescribePortfolioInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribePortfolioOutput {
  PortfolioDetail: AwsServiceCatalogS1n
  Tags: [AwsServiceCatalogS1j]
  TagOptions: [AwsServiceCatalogS3c]
  Budgets: [AwsServiceCatalogS44]
}

input AwsServiceCatalogDescribePortfolioShareStatusInput {
  PortfolioShareToken: String!
}

type AwsServiceCatalogDescribePortfolioShareStatusOutput {
  PortfolioShareToken: String
  PortfolioId: String
  OrganizationNodeValue: String
  Status: String
  ShareDetails: AwsServiceCatalogDescribePortfolioShareStatusOutputShareDetails
}

type AwsServiceCatalogDescribePortfolioShareStatusOutputShareDetails {
  SuccessfulShares: [String]
  ShareErrors: [AwsServiceCatalogDescribePortfolioShareStatusOutputShareDetailsShareErrors]
}

type AwsServiceCatalogDescribePortfolioShareStatusOutputShareDetailsShareErrors {
  Accounts: [String]
  Message: String
  Error: String
}

input AwsServiceCatalogDescribeProductAsAdminInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribeProductAsAdminOutput {
  ProductViewDetail: AwsServiceCatalogS2c
  ProvisioningArtifactSummaries: [AwsServiceCatalogDescribeProductAsAdminOutputProvisioningArtifactSummaries]
  Tags: [AwsServiceCatalogS1j]
  TagOptions: [AwsServiceCatalogS3c]
  Budgets: [AwsServiceCatalogS44]
}

type AwsServiceCatalogDescribeProductAsAdminOutputProvisioningArtifactSummaries {
  Id: String
  Name: String
  Description: String
  CreatedTime: Date
  ProvisioningArtifactMetadata: JSON
}

input AwsServiceCatalogDescribeProductInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribeProductOutput {
  ProductViewSummary: AwsServiceCatalogS2d
  ProvisioningArtifacts: [AwsServiceCatalogS4j]
  Budgets: [AwsServiceCatalogS44]
}

input AwsServiceCatalogDescribeProductViewInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribeProductViewOutput {
  ProductViewSummary: AwsServiceCatalogS2d
  ProvisioningArtifacts: [AwsServiceCatalogS4j]
}

input AwsServiceCatalogDescribeProvisionedProductInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribeProvisionedProductOutput {
  ProvisionedProductDetail: AwsServiceCatalogS4t
  CloudWatchDashboards: [AwsServiceCatalogDescribeProvisionedProductOutputCloudWatchDashboards]
}

type AwsServiceCatalogDescribeProvisionedProductOutputCloudWatchDashboards {
  Name: String
}

input AwsServiceCatalogDescribeProvisionedProductPlanInput {
  AcceptLanguage: String
  PlanId: String!
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogDescribeProvisionedProductPlanOutput {
  ProvisionedProductPlanDetails: AwsServiceCatalogDescribeProvisionedProductPlanOutputProvisionedProductPlanDetails
  ResourceChanges: [AwsServiceCatalogDescribeProvisionedProductPlanOutputResourceChanges]
  NextPageToken: String
}

type AwsServiceCatalogDescribeProvisionedProductPlanOutputProvisionedProductPlanDetails {
  CreatedTime: Date
  PathId: String
  ProductId: String
  PlanName: String
  PlanId: String
  ProvisionProductId: String
  ProvisionProductName: String
  PlanType: String
  ProvisioningArtifactId: String
  Status: String
  UpdatedTime: Date
  NotificationArns: [String]
  ProvisioningParameters: [AwsServiceCatalogS2q]
  Tags: [AwsServiceCatalogS1j]
  StatusMessage: String
}

type AwsServiceCatalogDescribeProvisionedProductPlanOutputResourceChanges {
  Action: String
  LogicalResourceId: String
  PhysicalResourceId: String
  ResourceType: String
  Replacement: String
  Scope: [String]
  Details: [AwsServiceCatalogDescribeProvisionedProductPlanOutputResourceChangesDetails]
}

type AwsServiceCatalogDescribeProvisionedProductPlanOutputResourceChangesDetails {
  Target: AwsServiceCatalogDescribeProvisionedProductPlanOutputResourceChangesDetailsTarget
  Evaluation: String
  CausingEntity: String
}

type AwsServiceCatalogDescribeProvisionedProductPlanOutputResourceChangesDetailsTarget {
  Attribute: String
  Name: String
  RequiresRecreation: String
}

input AwsServiceCatalogDescribeProvisioningArtifactInput {
  AcceptLanguage: String
  ProvisioningArtifactId: String!
  ProductId: String!
  Verbose: Boolean
}

type AwsServiceCatalogDescribeProvisioningArtifactOutput {
  ProvisioningArtifactDetail: AwsServiceCatalogS2h
  Info: JSON
  Status: String
}

input AwsServiceCatalogDescribeProvisioningParametersInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
  PathId: String
}

type AwsServiceCatalogDescribeProvisioningParametersOutput {
  ProvisioningArtifactParameters: [AwsServiceCatalogDescribeProvisioningParametersOutputProvisioningArtifactParameters]
  ConstraintSummaries: [AwsServiceCatalogS65]
  UsageInstructions: [AwsServiceCatalogDescribeProvisioningParametersOutputUsageInstructions]
  TagOptions: [AwsServiceCatalogDescribeProvisioningParametersOutputTagOptions]
  ProvisioningArtifactPreferences: AwsServiceCatalogDescribeProvisioningParametersOutputProvisioningArtifactPreferences
}

type AwsServiceCatalogDescribeProvisioningParametersOutputProvisioningArtifactParameters {
  ParameterKey: String
  DefaultValue: String
  ParameterType: String
  IsNoEcho: Boolean
  Description: String
  ParameterConstraints: AwsServiceCatalogDescribeProvisioningParametersOutputProvisioningArtifactParametersParameterConstraints
}

type AwsServiceCatalogDescribeProvisioningParametersOutputProvisioningArtifactParametersParameterConstraints {
  AllowedValues: [String]
}

type AwsServiceCatalogDescribeProvisioningParametersOutputProvisioningArtifactPreferences {
  StackSetAccounts: [String]
  StackSetRegions: [String]
}

type AwsServiceCatalogDescribeProvisioningParametersOutputTagOptions {
  Key: String
  Values: [String]
}

type AwsServiceCatalogDescribeProvisioningParametersOutputUsageInstructions {
  Type: String
  Value: String
}

input AwsServiceCatalogDescribeRecordInput {
  AcceptLanguage: String
  Id: String!
  PageToken: String
  PageSize: Int
}

type AwsServiceCatalogDescribeRecordOutput {
  RecordDetail: AwsServiceCatalogS6k
  RecordOutputs: [AwsServiceCatalogDescribeRecordOutputRecordOutputs]
  NextPageToken: String
}

type AwsServiceCatalogDescribeRecordOutputRecordOutputs {
  OutputKey: String
  OutputValue: String
  Description: String
}

input AwsServiceCatalogDescribeServiceActionInput {
  Id: String!
  AcceptLanguage: String
}

type AwsServiceCatalogDescribeServiceActionOutput {
  ServiceActionDetail: AwsServiceCatalogS36
}

input AwsServiceCatalogDescribeTagOptionInput {
  Id: String!
}

type AwsServiceCatalogDescribeTagOptionOutput {
  TagOptionDetail: AwsServiceCatalogS3c
}

input AwsServiceCatalogDisassociateBudgetFromResourceInput {
  BudgetName: String!
  ResourceId: String!
}

input AwsServiceCatalogDisassociatePrincipalFromPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  PrincipalARN: String!
}

input AwsServiceCatalogDisassociateProductFromPortfolioInput {
  AcceptLanguage: String
  ProductId: String!
  PortfolioId: String!
}

input AwsServiceCatalogDisassociateServiceActionFromProvisioningArtifactInput {
  ProductId: String!
  ProvisioningArtifactId: String!
  ServiceActionId: String!
  AcceptLanguage: String
}

input AwsServiceCatalogDisassociateTagOptionFromResourceInput {
  ResourceId: String!
  TagOptionId: String!
}

input AwsServiceCatalogExecuteProvisionedProductPlanInput {
  AcceptLanguage: String
  PlanId: String!
  IdempotencyToken: String!
}

type AwsServiceCatalogExecuteProvisionedProductPlanOutput {
  RecordDetail: AwsServiceCatalogS6k
}

input AwsServiceCatalogExecuteProvisionedProductServiceActionInput {
  ProvisionedProductId: String!
  ServiceActionId: String!
  ExecuteToken: String!
  AcceptLanguage: String
}

type AwsServiceCatalogExecuteProvisionedProductServiceActionOutput {
  RecordDetail: AwsServiceCatalogS6k
}

type AwsServiceCatalogGetAWSOrganizationsAccessStatusOutput {
  AccessStatus: String
}

input AwsServiceCatalogListAcceptedPortfolioSharesInput {
  AcceptLanguage: String
  PageToken: String
  PageSize: Int
  PortfolioShareType: String
}

type AwsServiceCatalogListAcceptedPortfolioSharesOutput {
  PortfolioDetails: [AwsServiceCatalogS1n]
  NextPageToken: String
}

input AwsServiceCatalogListBudgetsForResourceInput {
  AcceptLanguage: String
  ResourceId: String!
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListBudgetsForResourceOutput {
  Budgets: [AwsServiceCatalogS44]
  NextPageToken: String
}

input AwsServiceCatalogListConstraintsForPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  ProductId: String
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListConstraintsForPortfolioOutput {
  ConstraintDetails: [AwsServiceCatalogS1b]
  NextPageToken: String
}

input AwsServiceCatalogListLaunchPathsInput {
  AcceptLanguage: String
  ProductId: String!
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListLaunchPathsOutput {
  LaunchPathSummaries: [AwsServiceCatalogListLaunchPathsOutputLaunchPathSummaries]
  NextPageToken: String
}

type AwsServiceCatalogListLaunchPathsOutputLaunchPathSummaries {
  Id: String
  ConstraintSummaries: [AwsServiceCatalogS65]
  Tags: [AwsServiceCatalogS1j]
  Name: String
}

input AwsServiceCatalogListOrganizationPortfolioAccessInput {
  AcceptLanguage: String
  PortfolioId: String!
  OrganizationNodeType: String!
  PageToken: String
  PageSize: Int
}

type AwsServiceCatalogListOrganizationPortfolioAccessOutput {
  OrganizationNodes: [AwsServiceCatalogS1s]
  NextPageToken: String
}

input AwsServiceCatalogListPortfolioAccessInput {
  AcceptLanguage: String
  PortfolioId: String!
}

type AwsServiceCatalogListPortfolioAccessOutput {
  AccountIds: [String]
  NextPageToken: String
}

input AwsServiceCatalogListPortfoliosForProductInput {
  AcceptLanguage: String
  ProductId: String!
  PageToken: String
  PageSize: Int
}

type AwsServiceCatalogListPortfoliosForProductOutput {
  PortfolioDetails: [AwsServiceCatalogS1n]
  NextPageToken: String
}

input AwsServiceCatalogListPortfoliosInput {
  AcceptLanguage: String
  PageToken: String
  PageSize: Int
}

type AwsServiceCatalogListPortfoliosOutput {
  PortfolioDetails: [AwsServiceCatalogS1n]
  NextPageToken: String
}

input AwsServiceCatalogListPrincipalsForPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListPrincipalsForPortfolioOutput {
  Principals: [AwsServiceCatalogListPrincipalsForPortfolioOutputPrincipals]
  NextPageToken: String
}

type AwsServiceCatalogListPrincipalsForPortfolioOutputPrincipals {
  PrincipalARN: String
  PrincipalType: String
}

input AwsServiceCatalogListProvisionedProductPlansInput {
  AcceptLanguage: String
  ProvisionProductId: String
  PageSize: Int
  PageToken: String
  AccessLevelFilter: AwsServiceCatalogS8gInput
}

type AwsServiceCatalogListProvisionedProductPlansOutput {
  ProvisionedProductPlans: [AwsServiceCatalogListProvisionedProductPlansOutputProvisionedProductPlans]
  NextPageToken: String
}

type AwsServiceCatalogListProvisionedProductPlansOutputProvisionedProductPlans {
  PlanName: String
  PlanId: String
  ProvisionProductId: String
  ProvisionProductName: String
  PlanType: String
  ProvisioningArtifactId: String
}

input AwsServiceCatalogListProvisioningArtifactsForServiceActionInput {
  ServiceActionId: String!
  PageSize: Int
  PageToken: String
  AcceptLanguage: String
}

type AwsServiceCatalogListProvisioningArtifactsForServiceActionOutput {
  ProvisioningArtifactViews: [AwsServiceCatalogListProvisioningArtifactsForServiceActionOutputProvisioningArtifactViews]
  NextPageToken: String
}

type AwsServiceCatalogListProvisioningArtifactsForServiceActionOutputProvisioningArtifactViews {
  ProductViewSummary: AwsServiceCatalogS2d
  ProvisioningArtifact: AwsServiceCatalogS4j
}

input AwsServiceCatalogListProvisioningArtifactsInput {
  AcceptLanguage: String
  ProductId: String!
}

type AwsServiceCatalogListProvisioningArtifactsOutput {
  ProvisioningArtifactDetails: [AwsServiceCatalogS2h]
  NextPageToken: String
}

input AwsServiceCatalogListRecordHistoryInput {
  AcceptLanguage: String
  AccessLevelFilter: AwsServiceCatalogS8gInput
  SearchFilter: AwsServiceCatalogListRecordHistorySearchFilterInput
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListRecordHistoryOutput {
  RecordDetails: [AwsServiceCatalogS6k]
  NextPageToken: String
}

input AwsServiceCatalogListRecordHistorySearchFilterInput {
  Key: String
  Value: String
}

input AwsServiceCatalogListResourcesForTagOptionInput {
  TagOptionId: String!
  ResourceType: String
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListResourcesForTagOptionOutput {
  ResourceDetails: [AwsServiceCatalogListResourcesForTagOptionOutputResourceDetails]
  PageToken: String
}

type AwsServiceCatalogListResourcesForTagOptionOutputResourceDetails {
  Id: String
  ARN: String
  Name: String
  Description: String
  CreatedTime: Date
}

input AwsServiceCatalogListServiceActionsForProvisioningArtifactInput {
  ProductId: String!
  ProvisioningArtifactId: String!
  PageSize: Int
  PageToken: String
  AcceptLanguage: String
}

type AwsServiceCatalogListServiceActionsForProvisioningArtifactOutput {
  ServiceActionSummaries: [AwsServiceCatalogS37]
  NextPageToken: String
}

input AwsServiceCatalogListServiceActionsInput {
  AcceptLanguage: String
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListServiceActionsOutput {
  ServiceActionSummaries: [AwsServiceCatalogS37]
  NextPageToken: String
}

input AwsServiceCatalogListStackInstancesForProvisionedProductInput {
  AcceptLanguage: String
  ProvisionedProductId: String!
  PageToken: String
  PageSize: Int
}

type AwsServiceCatalogListStackInstancesForProvisionedProductOutput {
  StackInstances: [AwsServiceCatalogListStackInstancesForProvisionedProductOutputStackInstances]
  NextPageToken: String
}

type AwsServiceCatalogListStackInstancesForProvisionedProductOutputStackInstances {
  Account: String
  Region: String
  StackInstanceStatus: String
}

input AwsServiceCatalogListTagOptionsFiltersInput {
  Key: String
  Value: String
  Active: Boolean
}

input AwsServiceCatalogListTagOptionsInput {
  Filters: AwsServiceCatalogListTagOptionsFiltersInput
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListTagOptionsOutput {
  TagOptionDetails: [AwsServiceCatalogS3c]
  PageToken: String
}

input AwsServiceCatalogProvisionProductInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
  PathId: String
  ProvisionedProductName: String!
  ProvisioningParameters: [AwsServiceCatalogProvisionProductProvisioningParametersInput]
  ProvisioningPreferences: AwsServiceCatalogProvisionProductProvisioningPreferencesInput
  Tags: [AwsServiceCatalogS1jInput]
  NotificationArns: [String]
  ProvisionToken: String!
}

type AwsServiceCatalogProvisionProductOutput {
  RecordDetail: AwsServiceCatalogS6k
}

input AwsServiceCatalogProvisionProductProvisioningParametersInput {
  Key: String
  Value: String
}

input AwsServiceCatalogProvisionProductProvisioningPreferencesInput {
  StackSetAccounts: [String]
  StackSetRegions: [String]
  StackSetFailureToleranceCount: Int
  StackSetFailureTolerancePercentage: Int
  StackSetMaxConcurrencyCount: Int
  StackSetMaxConcurrencyPercentage: Int
}

input AwsServiceCatalogRejectPortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
  PortfolioShareType: String
}

type AwsServiceCatalogS1b {
  ConstraintId: String
  Type: String
  Description: String
  Owner: String
}

type AwsServiceCatalogS1j {
  Key: String!
  Value: String!
}

input AwsServiceCatalogS1jInput {
  Key: String!
  Value: String!
}

type AwsServiceCatalogS1n {
  Id: String
  ARN: String
  DisplayName: String
  Description: String
  CreatedTime: Date
  ProviderName: String
}

type AwsServiceCatalogS1s {
  Type: String
  Value: String
}

input AwsServiceCatalogS1sInput {
  Type: String
  Value: String
}

input AwsServiceCatalogS23Input {
  Name: String
  Description: String
  Info: JSON!
  Type: String
  DisableTemplateValidation: Boolean
}

type AwsServiceCatalogS2c {
  ProductViewSummary: AwsServiceCatalogS2d
  Status: String
  ProductARN: String
  CreatedTime: Date
}

type AwsServiceCatalogS2d {
  Id: String
  ProductId: String
  Name: String
  Owner: String
  ShortDescription: String
  Type: String
  Distributor: String
  HasDefaultPath: Boolean
  SupportEmail: String
  SupportDescription: String
  SupportUrl: String
}

type AwsServiceCatalogS2h {
  Id: String
  Name: String
  Description: String
  Type: String
  CreatedTime: Date
  Active: Boolean
  Guidance: String
}

type AwsServiceCatalogS2q {
  Key: String
  Value: String
  UsePreviousValue: Boolean
}

input AwsServiceCatalogS2qInput {
  Key: String
  Value: String
  UsePreviousValue: Boolean
}

type AwsServiceCatalogS36 {
  ServiceActionSummary: AwsServiceCatalogS37
  Definition: JSON
}

type AwsServiceCatalogS37 {
  Id: String
  Name: String
  Description: String
  DefinitionType: String
}

type AwsServiceCatalogS3c {
  Key: String
  Value: String
  Active: Boolean
  Id: String
}

type AwsServiceCatalogS44 {
  BudgetName: String
}

type AwsServiceCatalogS4j {
  Id: String
  Name: String
  Description: String
  CreatedTime: Date
  Guidance: String
}

type AwsServiceCatalogS4t {
  Name: String
  Arn: String
  Type: String
  Id: String
  Status: String
  StatusMessage: String
  CreatedTime: Date
  IdempotencyToken: String
  LastRecordId: String
  ProductId: String
  ProvisioningArtifactId: String
}

type AwsServiceCatalogS65 {
  Type: String
  Description: String
}

type AwsServiceCatalogS6k {
  RecordId: String
  ProvisionedProductName: String
  Status: String
  CreatedTime: Date
  UpdatedTime: Date
  ProvisionedProductType: String
  RecordType: String
  ProvisionedProductId: String
  ProductId: String
  ProvisioningArtifactId: String
  PathId: String
  RecordErrors: [AwsServiceCatalogS6kRecordErrors]
  RecordTags: [AwsServiceCatalogS6kRecordTags]
}

type AwsServiceCatalogS6kRecordErrors {
  Code: String
  Description: String
}

type AwsServiceCatalogS6kRecordTags {
  Key: String
  Value: String
}

input AwsServiceCatalogS8gInput {
  Key: String
  Value: String
}

input AwsServiceCatalogScanProvisionedProductsInput {
  AcceptLanguage: String
  AccessLevelFilter: AwsServiceCatalogS8gInput
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogScanProvisionedProductsOutput {
  ProvisionedProducts: [AwsServiceCatalogS4t]
  NextPageToken: String
}

input AwsServiceCatalogSearchProductsAsAdminInput {
  AcceptLanguage: String
  PortfolioId: String
  Filters: JSON
  SortBy: String
  SortOrder: String
  PageToken: String
  PageSize: Int
  ProductSource: String
}

type AwsServiceCatalogSearchProductsAsAdminOutput {
  ProductViewDetails: [AwsServiceCatalogS2c]
  NextPageToken: String
}

input AwsServiceCatalogSearchProductsInput {
  AcceptLanguage: String
  Filters: JSON
  PageSize: Int
  SortBy: String
  SortOrder: String
  PageToken: String
}

type AwsServiceCatalogSearchProductsOutput {
  ProductViewSummaries: [AwsServiceCatalogS2d]
  ProductViewAggregations: JSON
  NextPageToken: String
}

input AwsServiceCatalogSearchProvisionedProductsInput {
  AcceptLanguage: String
  AccessLevelFilter: AwsServiceCatalogS8gInput
  Filters: JSON
  SortBy: String
  SortOrder: String
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogSearchProvisionedProductsOutput {
  ProvisionedProducts: [AwsServiceCatalogSearchProvisionedProductsOutputProvisionedProducts]
  TotalResultsCount: Int
  NextPageToken: String
}

type AwsServiceCatalogSearchProvisionedProductsOutputProvisionedProducts {
  Name: String
  Arn: String
  Type: String
  Id: String
  Status: String
  StatusMessage: String
  CreatedTime: Date
  IdempotencyToken: String
  LastRecordId: String
  Tags: [AwsServiceCatalogS1j]
  PhysicalId: String
  ProductId: String
  ProvisioningArtifactId: String
  UserArn: String
  UserArnSession: String
}

input AwsServiceCatalogSmInput {
  ServiceActionId: String!
  ProductId: String!
  ProvisioningArtifactId: String!
}

type AwsServiceCatalogSp {
  ServiceActionId: String
  ProductId: String
  ProvisioningArtifactId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsServiceCatalogTerminateProvisionedProductInput {
  ProvisionedProductName: String
  ProvisionedProductId: String
  TerminateToken: String!
  IgnoreErrors: Boolean
  AcceptLanguage: String
}

type AwsServiceCatalogTerminateProvisionedProductOutput {
  RecordDetail: AwsServiceCatalogS6k
}

input AwsServiceCatalogUpdateConstraintInput {
  AcceptLanguage: String
  Id: String!
  Description: String
  Parameters: String
}

type AwsServiceCatalogUpdateConstraintOutput {
  ConstraintDetail: AwsServiceCatalogS1b
  ConstraintParameters: String
  Status: String
}

input AwsServiceCatalogUpdatePortfolioInput {
  AcceptLanguage: String
  Id: String!
  DisplayName: String
  Description: String
  ProviderName: String
  AddTags: [AwsServiceCatalogS1jInput]
  RemoveTags: [String]
}

type AwsServiceCatalogUpdatePortfolioOutput {
  PortfolioDetail: AwsServiceCatalogS1n
  Tags: [AwsServiceCatalogS1j]
}

input AwsServiceCatalogUpdateProductInput {
  AcceptLanguage: String
  Id: String!
  Name: String
  Owner: String
  Description: String
  Distributor: String
  SupportDescription: String
  SupportEmail: String
  SupportUrl: String
  AddTags: [AwsServiceCatalogS1jInput]
  RemoveTags: [String]
}

type AwsServiceCatalogUpdateProductOutput {
  ProductViewDetail: AwsServiceCatalogS2c
  Tags: [AwsServiceCatalogS1j]
}

input AwsServiceCatalogUpdateProvisionedProductInput {
  AcceptLanguage: String
  ProvisionedProductName: String
  ProvisionedProductId: String
  ProductId: String
  ProvisioningArtifactId: String
  PathId: String
  ProvisioningParameters: [AwsServiceCatalogS2qInput]
  ProvisioningPreferences: AwsServiceCatalogUpdateProvisionedProductProvisioningPreferencesInput
  Tags: [AwsServiceCatalogS1jInput]
  UpdateToken: String!
}

type AwsServiceCatalogUpdateProvisionedProductOutput {
  RecordDetail: AwsServiceCatalogS6k
}

input AwsServiceCatalogUpdateProvisionedProductPropertiesInput {
  AcceptLanguage: String
  ProvisionedProductId: String!
  ProvisionedProductProperties: JSON!
  IdempotencyToken: String!
}

type AwsServiceCatalogUpdateProvisionedProductPropertiesOutput {
  ProvisionedProductId: String
  ProvisionedProductProperties: JSON
  RecordId: String
  Status: String
}

input AwsServiceCatalogUpdateProvisionedProductProvisioningPreferencesInput {
  StackSetAccounts: [String]
  StackSetRegions: [String]
  StackSetFailureToleranceCount: Int
  StackSetFailureTolerancePercentage: Int
  StackSetMaxConcurrencyCount: Int
  StackSetMaxConcurrencyPercentage: Int
  StackSetOperationType: String
}

input AwsServiceCatalogUpdateProvisioningArtifactInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
  Name: String
  Description: String
  Active: Boolean
  Guidance: String
}

type AwsServiceCatalogUpdateProvisioningArtifactOutput {
  ProvisioningArtifactDetail: AwsServiceCatalogS2h
  Info: JSON
  Status: String
}

input AwsServiceCatalogUpdateServiceActionInput {
  Id: String!
  Name: String
  Definition: JSON
  Description: String
  AcceptLanguage: String
}

type AwsServiceCatalogUpdateServiceActionOutput {
  ServiceActionDetail: AwsServiceCatalogS36
}

input AwsServiceCatalogUpdateTagOptionInput {
  Id: String!
  Value: String
  Active: Boolean
}

type AwsServiceCatalogUpdateTagOptionOutput {
  TagOptionDetail: AwsServiceCatalogS3c
}

"""AWS Cloud Map (2017-03-14)"""
type AwsServiceDiscovery {
  createHttpNamespace(input: AwsServiceDiscoveryCreateHttpNamespaceInput!, config: AwsConfig): AwsServiceDiscoveryCreateHttpNamespaceOutput
  createPrivateDnsNamespace(input: AwsServiceDiscoveryCreatePrivateDnsNamespaceInput!, config: AwsConfig): AwsServiceDiscoveryCreatePrivateDnsNamespaceOutput
  createPublicDnsNamespace(input: AwsServiceDiscoveryCreatePublicDnsNamespaceInput!, config: AwsConfig): AwsServiceDiscoveryCreatePublicDnsNamespaceOutput
  createService(input: AwsServiceDiscoveryCreateServiceInput!, config: AwsConfig): AwsServiceDiscoveryCreateServiceOutput
  deleteNamespace(input: AwsServiceDiscoveryDeleteNamespaceInput!, config: AwsConfig): AwsServiceDiscoveryDeleteNamespaceOutput
  deleteService(input: AwsServiceDiscoveryDeleteServiceInput!, config: AwsConfig): JSON
  deregisterInstance(input: AwsServiceDiscoveryDeregisterInstanceInput!, config: AwsConfig): AwsServiceDiscoveryDeregisterInstanceOutput
  discoverInstances(input: AwsServiceDiscoveryDiscoverInstancesInput!, config: AwsConfig): AwsServiceDiscoveryDiscoverInstancesOutput
  getInstance(input: AwsServiceDiscoveryGetInstanceInput!, config: AwsConfig): AwsServiceDiscoveryGetInstanceOutput
  getInstancesHealthStatus(input: AwsServiceDiscoveryGetInstancesHealthStatusInput!, config: AwsConfig): AwsServiceDiscoveryGetInstancesHealthStatusOutput
  getNamespace(input: AwsServiceDiscoveryGetNamespaceInput!, config: AwsConfig): AwsServiceDiscoveryGetNamespaceOutput
  getOperation(input: AwsServiceDiscoveryGetOperationInput!, config: AwsConfig): AwsServiceDiscoveryGetOperationOutput
  getService(input: AwsServiceDiscoveryGetServiceInput!, config: AwsConfig): AwsServiceDiscoveryGetServiceOutput
  listInstances(input: AwsServiceDiscoveryListInstancesInput!, config: AwsConfig): AwsServiceDiscoveryListInstancesOutput
  listNamespaces(input: AwsServiceDiscoveryListNamespacesInput, config: AwsConfig): AwsServiceDiscoveryListNamespacesOutput
  listOperations(input: AwsServiceDiscoveryListOperationsInput, config: AwsConfig): AwsServiceDiscoveryListOperationsOutput
  listServices(input: AwsServiceDiscoveryListServicesInput, config: AwsConfig): AwsServiceDiscoveryListServicesOutput
  registerInstance(input: AwsServiceDiscoveryRegisterInstanceInput!, config: AwsConfig): AwsServiceDiscoveryRegisterInstanceOutput
  updateInstanceCustomHealthStatus(input: AwsServiceDiscoveryUpdateInstanceCustomHealthStatusInput!, config: AwsConfig): JSON
  updateService(input: AwsServiceDiscoveryUpdateServiceInput!, config: AwsConfig): AwsServiceDiscoveryUpdateServiceOutput
}

input AwsServiceDiscoveryCreateHttpNamespaceInput {
  Name: String!
  CreatorRequestId: String
  Description: String
}

type AwsServiceDiscoveryCreateHttpNamespaceOutput {
  OperationId: String
}

input AwsServiceDiscoveryCreatePrivateDnsNamespaceInput {
  Name: String!
  CreatorRequestId: String
  Description: String
  Vpc: String!
}

type AwsServiceDiscoveryCreatePrivateDnsNamespaceOutput {
  OperationId: String
}

input AwsServiceDiscoveryCreatePublicDnsNamespaceInput {
  Name: String!
  CreatorRequestId: String
  Description: String
}

type AwsServiceDiscoveryCreatePublicDnsNamespaceOutput {
  OperationId: String
}

input AwsServiceDiscoveryCreateServiceInput {
  Name: String!
  NamespaceId: String
  CreatorRequestId: String
  Description: String
  DnsConfig: AwsServiceDiscoverySdInput
  HealthCheckConfig: AwsServiceDiscoverySjInput
  HealthCheckCustomConfig: AwsServiceDiscoverySnInput
}

type AwsServiceDiscoveryCreateServiceOutput {
  Service: AwsServiceDiscoverySp
}

input AwsServiceDiscoveryDeleteNamespaceInput {
  Id: String!
}

type AwsServiceDiscoveryDeleteNamespaceOutput {
  OperationId: String
}

input AwsServiceDiscoveryDeleteServiceInput {
  Id: String!
}

input AwsServiceDiscoveryDeregisterInstanceInput {
  ServiceId: String!
  InstanceId: String!
}

type AwsServiceDiscoveryDeregisterInstanceOutput {
  OperationId: String
}

input AwsServiceDiscoveryDiscoverInstancesInput {
  NamespaceName: String!
  ServiceName: String!
  MaxResults: Int
  QueryParameters: JSON
  HealthStatus: String
}

type AwsServiceDiscoveryDiscoverInstancesOutput {
  Instances: [AwsServiceDiscoveryDiscoverInstancesOutputInstances]
}

type AwsServiceDiscoveryDiscoverInstancesOutputInstances {
  InstanceId: String
  NamespaceName: String
  ServiceName: String
  HealthStatus: String
  Attributes: JSON
}

input AwsServiceDiscoveryGetInstanceInput {
  ServiceId: String!
  InstanceId: String!
}

type AwsServiceDiscoveryGetInstanceOutput {
  Instance: AwsServiceDiscoveryGetInstanceOutputInstance
}

type AwsServiceDiscoveryGetInstanceOutputInstance {
  Id: String!
  CreatorRequestId: String
  Attributes: JSON
}

input AwsServiceDiscoveryGetInstancesHealthStatusInput {
  ServiceId: String!
  Instances: [String]
  MaxResults: Int
  NextToken: String
}

type AwsServiceDiscoveryGetInstancesHealthStatusOutput {
  Status: JSON
  NextToken: String
}

input AwsServiceDiscoveryGetNamespaceInput {
  Id: String!
}

type AwsServiceDiscoveryGetNamespaceOutput {
  Namespace: AwsServiceDiscoveryGetNamespaceOutputNamespace
}

type AwsServiceDiscoveryGetNamespaceOutputNamespace {
  Id: String
  Arn: String
  Name: String
  Type: String
  Description: String
  ServiceCount: Int
  Properties: AwsServiceDiscoveryS1l
  CreateDate: Date
  CreatorRequestId: String
}

input AwsServiceDiscoveryGetOperationInput {
  OperationId: String!
}

type AwsServiceDiscoveryGetOperationOutput {
  Operation: AwsServiceDiscoveryGetOperationOutputOperation
}

type AwsServiceDiscoveryGetOperationOutputOperation {
  Id: String
  Type: String
  Status: String
  ErrorMessage: String
  ErrorCode: String
  CreateDate: Date
  UpdateDate: Date
  Targets: JSON
}

input AwsServiceDiscoveryGetServiceInput {
  Id: String!
}

type AwsServiceDiscoveryGetServiceOutput {
  Service: AwsServiceDiscoverySp
}

input AwsServiceDiscoveryListInstancesInput {
  ServiceId: String!
  NextToken: String
  MaxResults: Int
}

type AwsServiceDiscoveryListInstancesOutput {
  Instances: [AwsServiceDiscoveryListInstancesOutputInstances]
  NextToken: String
}

type AwsServiceDiscoveryListInstancesOutputInstances {
  Id: String
  Attributes: JSON
}

input AwsServiceDiscoveryListNamespacesFiltersInput {
  Name: String!
  Values: [String]!
  Condition: String
}

input AwsServiceDiscoveryListNamespacesInput {
  NextToken: String
  MaxResults: Int
  Filters: [AwsServiceDiscoveryListNamespacesFiltersInput]
}

type AwsServiceDiscoveryListNamespacesOutput {
  Namespaces: [AwsServiceDiscoveryListNamespacesOutputNamespaces]
  NextToken: String
}

type AwsServiceDiscoveryListNamespacesOutputNamespaces {
  Id: String
  Arn: String
  Name: String
  Type: String
  Description: String
  ServiceCount: Int
  Properties: AwsServiceDiscoveryS1l
  CreateDate: Date
}

input AwsServiceDiscoveryListOperationsFiltersInput {
  Name: String!
  Values: [String]!
  Condition: String
}

input AwsServiceDiscoveryListOperationsInput {
  NextToken: String
  MaxResults: Int
  Filters: [AwsServiceDiscoveryListOperationsFiltersInput]
}

type AwsServiceDiscoveryListOperationsOutput {
  Operations: [AwsServiceDiscoveryListOperationsOutputOperations]
  NextToken: String
}

type AwsServiceDiscoveryListOperationsOutputOperations {
  Id: String
  Status: String
}

input AwsServiceDiscoveryListServicesFiltersInput {
  Name: String!
  Values: [String]!
  Condition: String
}

input AwsServiceDiscoveryListServicesInput {
  NextToken: String
  MaxResults: Int
  Filters: [AwsServiceDiscoveryListServicesFiltersInput]
}

type AwsServiceDiscoveryListServicesOutput {
  Services: [AwsServiceDiscoveryListServicesOutputServices]
  NextToken: String
}

type AwsServiceDiscoveryListServicesOutputServices {
  Id: String
  Arn: String
  Name: String
  Description: String
  InstanceCount: Int
  DnsConfig: AwsServiceDiscoverySd
  HealthCheckConfig: AwsServiceDiscoverySj
  HealthCheckCustomConfig: AwsServiceDiscoverySn
  CreateDate: Date
}

input AwsServiceDiscoveryRegisterInstanceInput {
  ServiceId: String!
  InstanceId: String!
  CreatorRequestId: String
  Attributes: JSON!
}

type AwsServiceDiscoveryRegisterInstanceOutput {
  OperationId: String
}

type AwsServiceDiscoveryS1l {
  DnsProperties: AwsServiceDiscoveryS1lDnsProperties
  HttpProperties: AwsServiceDiscoveryS1lHttpProperties
}

type AwsServiceDiscoveryS1lDnsProperties {
  HostedZoneId: String
}

type AwsServiceDiscoveryS1lHttpProperties {
  HttpName: String
}

type AwsServiceDiscoverySd {
  NamespaceId: String
  RoutingPolicy: String
  DnsRecords: [AwsServiceDiscoverySf]!
}

input AwsServiceDiscoverySdInput {
  NamespaceId: String
  RoutingPolicy: String
  DnsRecords: [AwsServiceDiscoverySfInput]!
}

type AwsServiceDiscoverySf {
  Type: String!
  TTL: JSON!
}

input AwsServiceDiscoverySfInput {
  Type: String!
  TTL: JSON!
}

type AwsServiceDiscoverySj {
  Type: String!
  ResourcePath: String
  FailureThreshold: Int
}

input AwsServiceDiscoverySjInput {
  Type: String!
  ResourcePath: String
  FailureThreshold: Int
}

type AwsServiceDiscoverySn {
  FailureThreshold: Int
}

input AwsServiceDiscoverySnInput {
  FailureThreshold: Int
}

type AwsServiceDiscoverySp {
  Id: String
  Arn: String
  Name: String
  NamespaceId: String
  Description: String
  InstanceCount: Int
  DnsConfig: AwsServiceDiscoverySd
  HealthCheckConfig: AwsServiceDiscoverySj
  HealthCheckCustomConfig: AwsServiceDiscoverySn
  CreateDate: Date
  CreatorRequestId: String
}

input AwsServiceDiscoveryUpdateInstanceCustomHealthStatusInput {
  ServiceId: String!
  InstanceId: String!
  Status: String!
}

input AwsServiceDiscoveryUpdateServiceInput {
  Id: String!
  Service: AwsServiceDiscoveryUpdateServiceServiceInput!
}

type AwsServiceDiscoveryUpdateServiceOutput {
  OperationId: String
}

input AwsServiceDiscoveryUpdateServiceServiceDnsConfigInput {
  DnsRecords: [AwsServiceDiscoverySfInput]!
}

input AwsServiceDiscoveryUpdateServiceServiceInput {
  Description: String
  DnsConfig: AwsServiceDiscoveryUpdateServiceServiceDnsConfigInput!
  HealthCheckConfig: AwsServiceDiscoverySjInput
}

"""Service Quotas (2019-06-24)"""
type AwsServiceQuotas {
  associateServiceQuotaTemplate(input: JSON, config: AwsConfig): JSON
  deleteServiceQuotaIncreaseRequestFromTemplate(input: AwsServiceQuotasDeleteServiceQuotaIncreaseRequestFromTemplateInput!, config: AwsConfig): JSON
  disassociateServiceQuotaTemplate(input: JSON, config: AwsConfig): JSON
  getAWSDefaultServiceQuota(input: AwsServiceQuotasGetAWSDefaultServiceQuotaInput!, config: AwsConfig): AwsServiceQuotasGetAWSDefaultServiceQuotaOutput
  getAssociationForServiceQuotaTemplate(input: JSON, config: AwsConfig): AwsServiceQuotasGetAssociationForServiceQuotaTemplateOutput
  getRequestedServiceQuotaChange(input: AwsServiceQuotasGetRequestedServiceQuotaChangeInput!, config: AwsConfig): AwsServiceQuotasGetRequestedServiceQuotaChangeOutput
  getServiceQuota(input: AwsServiceQuotasGetServiceQuotaInput!, config: AwsConfig): AwsServiceQuotasGetServiceQuotaOutput
  getServiceQuotaIncreaseRequestFromTemplate(input: AwsServiceQuotasGetServiceQuotaIncreaseRequestFromTemplateInput!, config: AwsConfig): AwsServiceQuotasGetServiceQuotaIncreaseRequestFromTemplateOutput
  listAWSDefaultServiceQuotas(input: AwsServiceQuotasListAWSDefaultServiceQuotasInput!, config: AwsConfig): AwsServiceQuotasListAWSDefaultServiceQuotasOutput
  listRequestedServiceQuotaChangeHistory(input: AwsServiceQuotasListRequestedServiceQuotaChangeHistoryInput, config: AwsConfig): AwsServiceQuotasListRequestedServiceQuotaChangeHistoryOutput
  listRequestedServiceQuotaChangeHistoryByQuota(input: AwsServiceQuotasListRequestedServiceQuotaChangeHistoryByQuotaInput!, config: AwsConfig): AwsServiceQuotasListRequestedServiceQuotaChangeHistoryByQuotaOutput
  listServiceQuotaIncreaseRequestsInTemplate(input: AwsServiceQuotasListServiceQuotaIncreaseRequestsInTemplateInput, config: AwsConfig): AwsServiceQuotasListServiceQuotaIncreaseRequestsInTemplateOutput
  listServiceQuotas(input: AwsServiceQuotasListServiceQuotasInput!, config: AwsConfig): AwsServiceQuotasListServiceQuotasOutput
  listServices(input: AwsServiceQuotasListServicesInput, config: AwsConfig): AwsServiceQuotasListServicesOutput
  putServiceQuotaIncreaseRequestIntoTemplate(input: AwsServiceQuotasPutServiceQuotaIncreaseRequestIntoTemplateInput!, config: AwsConfig): AwsServiceQuotasPutServiceQuotaIncreaseRequestIntoTemplateOutput
  requestServiceQuotaIncrease(input: AwsServiceQuotasRequestServiceQuotaIncreaseInput!, config: AwsConfig): AwsServiceQuotasRequestServiceQuotaIncreaseOutput
}

input AwsServiceQuotasDeleteServiceQuotaIncreaseRequestFromTemplateInput {
  ServiceCode: String!
  QuotaCode: String!
  AwsRegion: String!
}

type AwsServiceQuotasGetAssociationForServiceQuotaTemplateOutput {
  ServiceQuotaTemplateAssociationStatus: String
}

input AwsServiceQuotasGetAWSDefaultServiceQuotaInput {
  ServiceCode: String!
  QuotaCode: String!
}

type AwsServiceQuotasGetAWSDefaultServiceQuotaOutput {
  Quota: AwsServiceQuotasSc
}

input AwsServiceQuotasGetRequestedServiceQuotaChangeInput {
  RequestId: String!
}

type AwsServiceQuotasGetRequestedServiceQuotaChangeOutput {
  RequestedQuota: AwsServiceQuotasS13
}

input AwsServiceQuotasGetServiceQuotaIncreaseRequestFromTemplateInput {
  ServiceCode: String!
  QuotaCode: String!
  AwsRegion: String!
}

type AwsServiceQuotasGetServiceQuotaIncreaseRequestFromTemplateOutput {
  ServiceQuotaIncreaseRequestInTemplate: AwsServiceQuotasS1c
}

input AwsServiceQuotasGetServiceQuotaInput {
  ServiceCode: String!
  QuotaCode: String!
}

type AwsServiceQuotasGetServiceQuotaOutput {
  Quota: AwsServiceQuotasSc
}

input AwsServiceQuotasListAWSDefaultServiceQuotasInput {
  ServiceCode: String!
  NextToken: String
  MaxResults: Int
}

type AwsServiceQuotasListAWSDefaultServiceQuotasOutput {
  NextToken: String
  Quotas: [AwsServiceQuotasSc]
}

input AwsServiceQuotasListRequestedServiceQuotaChangeHistoryByQuotaInput {
  ServiceCode: String!
  QuotaCode: String!
  Status: String
  NextToken: String
  MaxResults: Int
}

type AwsServiceQuotasListRequestedServiceQuotaChangeHistoryByQuotaOutput {
  NextToken: String
  RequestedQuotas: [AwsServiceQuotasS13]
}

input AwsServiceQuotasListRequestedServiceQuotaChangeHistoryInput {
  ServiceCode: String
  Status: String
  NextToken: String
  MaxResults: Int
}

type AwsServiceQuotasListRequestedServiceQuotaChangeHistoryOutput {
  NextToken: String
  RequestedQuotas: [AwsServiceQuotasS13]
}

input AwsServiceQuotasListServiceQuotaIncreaseRequestsInTemplateInput {
  ServiceCode: String
  AwsRegion: String
  NextToken: String
  MaxResults: Int
}

type AwsServiceQuotasListServiceQuotaIncreaseRequestsInTemplateOutput {
  ServiceQuotaIncreaseRequestInTemplateList: [AwsServiceQuotasS1c]
  NextToken: String
}

input AwsServiceQuotasListServiceQuotasInput {
  ServiceCode: String!
  NextToken: String
  MaxResults: Int
}

type AwsServiceQuotasListServiceQuotasOutput {
  NextToken: String
  Quotas: [AwsServiceQuotasSc]
}

input AwsServiceQuotasListServicesInput {
  NextToken: String
  MaxResults: Int
}

type AwsServiceQuotasListServicesOutput {
  NextToken: String
  Services: [AwsServiceQuotasListServicesOutputServices]
}

type AwsServiceQuotasListServicesOutputServices {
  ServiceCode: String
  ServiceName: String
}

input AwsServiceQuotasPutServiceQuotaIncreaseRequestIntoTemplateInput {
  QuotaCode: String!
  ServiceCode: String!
  AwsRegion: String!
  DesiredValue: JSON!
}

type AwsServiceQuotasPutServiceQuotaIncreaseRequestIntoTemplateOutput {
  ServiceQuotaIncreaseRequestInTemplate: AwsServiceQuotasS1c
}

input AwsServiceQuotasRequestServiceQuotaIncreaseInput {
  ServiceCode: String!
  QuotaCode: String!
  DesiredValue: JSON!
}

type AwsServiceQuotasRequestServiceQuotaIncreaseOutput {
  RequestedQuota: AwsServiceQuotasS13
}

type AwsServiceQuotasS13 {
  Id: String
  CaseId: String
  ServiceCode: String
  ServiceName: String
  QuotaCode: String
  QuotaName: String
  DesiredValue: JSON
  Status: String
  Created: Date
  LastUpdated: Date
  Requester: String
  QuotaArn: String
  GlobalQuota: Boolean
  Unit: String
}

type AwsServiceQuotasS1c {
  ServiceCode: String
  ServiceName: String
  QuotaCode: String
  QuotaName: String
  DesiredValue: JSON
  AwsRegion: String
  Unit: String
  GlobalQuota: Boolean
}

type AwsServiceQuotasSc {
  ServiceCode: String
  ServiceName: String
  QuotaArn: String
  QuotaCode: String
  QuotaName: String
  Value: JSON
  Unit: String
  Adjustable: Boolean
  GlobalQuota: Boolean
  UsageMetric: AwsServiceQuotasScUsageMetric
  Period: AwsServiceQuotasScPeriod
  ErrorReason: AwsServiceQuotasScErrorReason
}

type AwsServiceQuotasScErrorReason {
  ErrorCode: String
  ErrorMessage: String
}

type AwsServiceQuotasScPeriod {
  PeriodValue: Int
  PeriodUnit: String
}

type AwsServiceQuotasScUsageMetric {
  MetricNamespace: String
  MetricName: String
  MetricDimensions: JSON
  MetricStatisticRecommendation: String
}

"""Amazon Simple Email Service (2010-12-01)"""
type AwsSES {
  cloneReceiptRuleSet(input: AwsSESCloneReceiptRuleSetInput!, config: AwsConfig): JSON
  createConfigurationSet(input: AwsSESCreateConfigurationSetInput!, config: AwsConfig): JSON
  createConfigurationSetEventDestination(input: AwsSESCreateConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
  createConfigurationSetTrackingOptions(input: AwsSESCreateConfigurationSetTrackingOptionsInput!, config: AwsConfig): JSON
  createCustomVerificationEmailTemplate(input: AwsSESCreateCustomVerificationEmailTemplateInput!, config: AwsConfig): JSON
  createReceiptFilter(input: AwsSESCreateReceiptFilterInput!, config: AwsConfig): JSON
  createReceiptRule(input: AwsSESCreateReceiptRuleInput!, config: AwsConfig): JSON
  createReceiptRuleSet(input: AwsSESCreateReceiptRuleSetInput!, config: AwsConfig): JSON
  createTemplate(input: AwsSESCreateTemplateInput!, config: AwsConfig): JSON
  deleteConfigurationSet(input: AwsSESDeleteConfigurationSetInput!, config: AwsConfig): JSON
  deleteConfigurationSetEventDestination(input: AwsSESDeleteConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
  deleteConfigurationSetTrackingOptions(input: AwsSESDeleteConfigurationSetTrackingOptionsInput!, config: AwsConfig): JSON
  deleteCustomVerificationEmailTemplate(input: AwsSESDeleteCustomVerificationEmailTemplateInput!, config: AwsConfig): JSON
  deleteIdentity(input: AwsSESDeleteIdentityInput!, config: AwsConfig): JSON
  deleteIdentityPolicy(input: AwsSESDeleteIdentityPolicyInput!, config: AwsConfig): JSON
  deleteReceiptFilter(input: AwsSESDeleteReceiptFilterInput!, config: AwsConfig): JSON
  deleteReceiptRule(input: AwsSESDeleteReceiptRuleInput!, config: AwsConfig): JSON
  deleteReceiptRuleSet(input: AwsSESDeleteReceiptRuleSetInput!, config: AwsConfig): JSON
  deleteTemplate(input: AwsSESDeleteTemplateInput!, config: AwsConfig): JSON
  deleteVerifiedEmailAddress(input: AwsSESDeleteVerifiedEmailAddressInput!, config: AwsConfig): JSON
  describeActiveReceiptRuleSet(input: JSON, config: AwsConfig): AwsSESDescribeActiveReceiptRuleSetOutput
  describeConfigurationSet(input: AwsSESDescribeConfigurationSetInput!, config: AwsConfig): AwsSESDescribeConfigurationSetOutput
  describeReceiptRule(input: AwsSESDescribeReceiptRuleInput!, config: AwsConfig): AwsSESDescribeReceiptRuleOutput
  describeReceiptRuleSet(input: AwsSESDescribeReceiptRuleSetInput!, config: AwsConfig): AwsSESDescribeReceiptRuleSetOutput
  getAccountSendingEnabled(config: AwsConfig): AwsSESGetAccountSendingEnabledOutput
  getCustomVerificationEmailTemplate(input: AwsSESGetCustomVerificationEmailTemplateInput!, config: AwsConfig): AwsSESGetCustomVerificationEmailTemplateOutput
  getIdentityDkimAttributes(input: AwsSESGetIdentityDkimAttributesInput!, config: AwsConfig): AwsSESGetIdentityDkimAttributesOutput
  getIdentityMailFromDomainAttributes(input: AwsSESGetIdentityMailFromDomainAttributesInput!, config: AwsConfig): AwsSESGetIdentityMailFromDomainAttributesOutput
  getIdentityNotificationAttributes(input: AwsSESGetIdentityNotificationAttributesInput!, config: AwsConfig): AwsSESGetIdentityNotificationAttributesOutput
  getIdentityPolicies(input: AwsSESGetIdentityPoliciesInput!, config: AwsConfig): AwsSESGetIdentityPoliciesOutput
  getIdentityVerificationAttributes(input: AwsSESGetIdentityVerificationAttributesInput!, config: AwsConfig): AwsSESGetIdentityVerificationAttributesOutput
  getSendQuota(config: AwsConfig): AwsSESGetSendQuotaOutput
  getSendStatistics(config: AwsConfig): AwsSESGetSendStatisticsOutput
  getTemplate(input: AwsSESGetTemplateInput!, config: AwsConfig): AwsSESGetTemplateOutput
  listConfigurationSets(input: AwsSESListConfigurationSetsInput, config: AwsConfig): AwsSESListConfigurationSetsOutput
  listCustomVerificationEmailTemplates(input: AwsSESListCustomVerificationEmailTemplatesInput, config: AwsConfig): AwsSESListCustomVerificationEmailTemplatesOutput
  listIdentities(input: AwsSESListIdentitiesInput, config: AwsConfig): AwsSESListIdentitiesOutput
  listIdentityPolicies(input: AwsSESListIdentityPoliciesInput!, config: AwsConfig): AwsSESListIdentityPoliciesOutput
  listReceiptFilters(input: JSON, config: AwsConfig): AwsSESListReceiptFiltersOutput
  listReceiptRuleSets(input: AwsSESListReceiptRuleSetsInput, config: AwsConfig): AwsSESListReceiptRuleSetsOutput
  listTemplates(input: AwsSESListTemplatesInput, config: AwsConfig): AwsSESListTemplatesOutput
  listVerifiedEmailAddresses(config: AwsConfig): AwsSESListVerifiedEmailAddressesOutput
  putConfigurationSetDeliveryOptions(input: AwsSESPutConfigurationSetDeliveryOptionsInput!, config: AwsConfig): JSON
  putIdentityPolicy(input: AwsSESPutIdentityPolicyInput!, config: AwsConfig): JSON
  reorderReceiptRuleSet(input: AwsSESReorderReceiptRuleSetInput!, config: AwsConfig): JSON
  sendBounce(input: AwsSESSendBounceInput!, config: AwsConfig): AwsSESSendBounceOutput
  sendBulkTemplatedEmail(input: AwsSESSendBulkTemplatedEmailInput!, config: AwsConfig): AwsSESSendBulkTemplatedEmailOutput
  sendCustomVerificationEmail(input: AwsSESSendCustomVerificationEmailInput!, config: AwsConfig): AwsSESSendCustomVerificationEmailOutput
  sendEmail(input: AwsSESSendEmailInput!, config: AwsConfig): AwsSESSendEmailOutput
  sendRawEmail(input: AwsSESSendRawEmailInput!, config: AwsConfig): AwsSESSendRawEmailOutput
  sendTemplatedEmail(input: AwsSESSendTemplatedEmailInput!, config: AwsConfig): AwsSESSendTemplatedEmailOutput
  setActiveReceiptRuleSet(input: AwsSESSetActiveReceiptRuleSetInput, config: AwsConfig): JSON
  setIdentityDkimEnabled(input: AwsSESSetIdentityDkimEnabledInput!, config: AwsConfig): JSON
  setIdentityFeedbackForwardingEnabled(input: AwsSESSetIdentityFeedbackForwardingEnabledInput!, config: AwsConfig): JSON
  setIdentityHeadersInNotificationsEnabled(input: AwsSESSetIdentityHeadersInNotificationsEnabledInput!, config: AwsConfig): JSON
  setIdentityMailFromDomain(input: AwsSESSetIdentityMailFromDomainInput!, config: AwsConfig): JSON
  setIdentityNotificationTopic(input: AwsSESSetIdentityNotificationTopicInput!, config: AwsConfig): JSON
  setReceiptRulePosition(input: AwsSESSetReceiptRulePositionInput!, config: AwsConfig): JSON
  testRenderTemplate(input: AwsSESTestRenderTemplateInput!, config: AwsConfig): AwsSESTestRenderTemplateOutput
  updateAccountSendingEnabled(input: AwsSESUpdateAccountSendingEnabledInput, config: AwsConfig): JSON
  updateConfigurationSetEventDestination(input: AwsSESUpdateConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
  updateConfigurationSetReputationMetricsEnabled(input: AwsSESUpdateConfigurationSetReputationMetricsEnabledInput!, config: AwsConfig): JSON
  updateConfigurationSetSendingEnabled(input: AwsSESUpdateConfigurationSetSendingEnabledInput!, config: AwsConfig): JSON
  updateConfigurationSetTrackingOptions(input: AwsSESUpdateConfigurationSetTrackingOptionsInput!, config: AwsConfig): JSON
  updateCustomVerificationEmailTemplate(input: AwsSESUpdateCustomVerificationEmailTemplateInput!, config: AwsConfig): JSON
  updateReceiptRule(input: AwsSESUpdateReceiptRuleInput!, config: AwsConfig): JSON
  updateTemplate(input: AwsSESUpdateTemplateInput!, config: AwsConfig): JSON
  verifyDomainDkim(input: AwsSESVerifyDomainDkimInput!, config: AwsConfig): AwsSESVerifyDomainDkimOutput
  verifyDomainIdentity(input: AwsSESVerifyDomainIdentityInput!, config: AwsConfig): AwsSESVerifyDomainIdentityOutput
  verifyEmailAddress(input: AwsSESVerifyEmailAddressInput!, config: AwsConfig): JSON
  verifyEmailIdentity(input: AwsSESVerifyEmailIdentityInput!, config: AwsConfig): JSON
}

input AwsSESCloneReceiptRuleSetInput {
  RuleSetName: String!
  OriginalRuleSetName: String!
}

input AwsSESCreateConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestination: AwsSESS9Input!
}

input AwsSESCreateConfigurationSetInput {
  ConfigurationSet: AwsSESS5Input!
}

input AwsSESCreateConfigurationSetTrackingOptionsInput {
  ConfigurationSetName: String!
  TrackingOptions: AwsSESSpInput!
}

input AwsSESCreateCustomVerificationEmailTemplateInput {
  TemplateName: String!
  FromEmailAddress: String!
  TemplateSubject: String!
  TemplateContent: String!
  SuccessRedirectionURL: String!
  FailureRedirectionURL: String!
}

input AwsSESCreateReceiptFilterInput {
  Filter: AwsSESS10Input!
}

input AwsSESCreateReceiptRuleInput {
  RuleSetName: String!
  After: String
  Rule: AwsSESS18Input!
}

input AwsSESCreateReceiptRuleSetInput {
  RuleSetName: String!
}

input AwsSESCreateTemplateInput {
  Template: AwsSESS20Input!
}

input AwsSESDeleteConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestinationName: String!
}

input AwsSESDeleteConfigurationSetInput {
  ConfigurationSetName: String!
}

input AwsSESDeleteConfigurationSetTrackingOptionsInput {
  ConfigurationSetName: String!
}

input AwsSESDeleteCustomVerificationEmailTemplateInput {
  TemplateName: String!
}

input AwsSESDeleteIdentityInput {
  Identity: String!
}

input AwsSESDeleteIdentityPolicyInput {
  Identity: String!
  PolicyName: String!
}

input AwsSESDeleteReceiptFilterInput {
  FilterName: String!
}

input AwsSESDeleteReceiptRuleInput {
  RuleSetName: String!
  RuleName: String!
}

input AwsSESDeleteReceiptRuleSetInput {
  RuleSetName: String!
}

input AwsSESDeleteTemplateInput {
  TemplateName: String!
}

input AwsSESDeleteVerifiedEmailAddressInput {
  EmailAddress: String!
}

type AwsSESDescribeActiveReceiptRuleSetOutput {
  Metadata: AwsSESS2t
  Rules: [AwsSESS18]
}

input AwsSESDescribeConfigurationSetInput {
  ConfigurationSetName: String!
  ConfigurationSetAttributeNames: [String]
}

type AwsSESDescribeConfigurationSetOutput {
  ConfigurationSet: AwsSESS5
  EventDestinations: [AwsSESS9]
  TrackingOptions: AwsSESSp
  DeliveryOptions: AwsSESS31
  ReputationOptions: AwsSESDescribeConfigurationSetOutputReputationOptions
}

type AwsSESDescribeConfigurationSetOutputReputationOptions {
  SendingEnabled: Boolean
  ReputationMetricsEnabled: Boolean
  LastFreshStart: Date
}

input AwsSESDescribeReceiptRuleInput {
  RuleSetName: String!
  RuleName: String!
}

type AwsSESDescribeReceiptRuleOutput {
  Rule: AwsSESS18
}

input AwsSESDescribeReceiptRuleSetInput {
  RuleSetName: String!
}

type AwsSESDescribeReceiptRuleSetOutput {
  Metadata: AwsSESS2t
  Rules: [AwsSESS18]
}

type AwsSESGetAccountSendingEnabledOutput {
  Enabled: Boolean
}

input AwsSESGetCustomVerificationEmailTemplateInput {
  TemplateName: String!
}

type AwsSESGetCustomVerificationEmailTemplateOutput {
  TemplateName: String
  FromEmailAddress: String
  TemplateSubject: String
  TemplateContent: String
  SuccessRedirectionURL: String
  FailureRedirectionURL: String
}

input AwsSESGetIdentityDkimAttributesInput {
  Identities: [String]!
}

type AwsSESGetIdentityDkimAttributesOutput {
  DkimAttributes: JSON!
}

input AwsSESGetIdentityMailFromDomainAttributesInput {
  Identities: [String]!
}

type AwsSESGetIdentityMailFromDomainAttributesOutput {
  MailFromDomainAttributes: JSON!
}

input AwsSESGetIdentityNotificationAttributesInput {
  Identities: [String]!
}

type AwsSESGetIdentityNotificationAttributesOutput {
  NotificationAttributes: JSON!
}

input AwsSESGetIdentityPoliciesInput {
  Identity: String!
  PolicyNames: [String]!
}

type AwsSESGetIdentityPoliciesOutput {
  Policies: JSON!
}

input AwsSESGetIdentityVerificationAttributesInput {
  Identities: [String]!
}

type AwsSESGetIdentityVerificationAttributesOutput {
  VerificationAttributes: JSON!
}

type AwsSESGetSendQuotaOutput {
  Max24HourSend: JSON
  MaxSendRate: JSON
  SentLast24Hours: JSON
}

type AwsSESGetSendStatisticsOutput {
  SendDataPoints: [AwsSESGetSendStatisticsOutputSendDataPoints]
}

type AwsSESGetSendStatisticsOutputSendDataPoints {
  Timestamp: Date
  DeliveryAttempts: JSON
  Bounces: JSON
  Complaints: JSON
  Rejects: JSON
}

input AwsSESGetTemplateInput {
  TemplateName: String!
}

type AwsSESGetTemplateOutput {
  Template: AwsSESS20
}

input AwsSESListConfigurationSetsInput {
  NextToken: String
  MaxItems: Int
}

type AwsSESListConfigurationSetsOutput {
  ConfigurationSets: [AwsSESS5]
  NextToken: String
}

input AwsSESListCustomVerificationEmailTemplatesInput {
  NextToken: String
  MaxResults: Int
}

type AwsSESListCustomVerificationEmailTemplatesOutput {
  CustomVerificationEmailTemplates: [AwsSESListCustomVerificationEmailTemplatesOutputCustomVerificationEmailTemplates]
  NextToken: String
}

type AwsSESListCustomVerificationEmailTemplatesOutputCustomVerificationEmailTemplates {
  TemplateName: String
  FromEmailAddress: String
  TemplateSubject: String
  SuccessRedirectionURL: String
  FailureRedirectionURL: String
}

input AwsSESListIdentitiesInput {
  IdentityType: String
  NextToken: String
  MaxItems: Int
}

type AwsSESListIdentitiesOutput {
  Identities: [String]!
  NextToken: String
}

input AwsSESListIdentityPoliciesInput {
  Identity: String!
}

type AwsSESListIdentityPoliciesOutput {
  PolicyNames: [String]!
}

type AwsSESListReceiptFiltersOutput {
  Filters: [AwsSESS10]
}

input AwsSESListReceiptRuleSetsInput {
  NextToken: String
}

type AwsSESListReceiptRuleSetsOutput {
  RuleSets: [AwsSESS2t]
  NextToken: String
}

input AwsSESListTemplatesInput {
  NextToken: String
  MaxItems: Int
}

type AwsSESListTemplatesOutput {
  TemplatesMetadata: [AwsSESListTemplatesOutputTemplatesMetadata]
  NextToken: String
}

type AwsSESListTemplatesOutputTemplatesMetadata {
  Name: String
  CreatedTimestamp: Date
}

type AwsSESListVerifiedEmailAddressesOutput {
  VerifiedEmailAddresses: [String]
}

input AwsSESPutConfigurationSetDeliveryOptionsInput {
  ConfigurationSetName: String!
  DeliveryOptions: AwsSESS31Input
}

input AwsSESPutIdentityPolicyInput {
  Identity: String!
  PolicyName: String!
  Policy: String!
}

input AwsSESReorderReceiptRuleSetInput {
  RuleSetName: String!
  RuleNames: [String]!
}

type AwsSESS10 {
  Name: String!
  IpFilter: AwsSESS10IpFilter!
}

input AwsSESS10Input {
  Name: String!
  IpFilter: AwsSESS10IpFilterInput!
}

type AwsSESS10IpFilter {
  Policy: String!
  Cidr: String!
}

input AwsSESS10IpFilterInput {
  Policy: String!
  Cidr: String!
}

type AwsSESS18 {
  Name: String!
  Enabled: Boolean
  TlsPolicy: String
  Recipients: [String]
  Actions: [AwsSESS18Actions]
  ScanEnabled: Boolean
}

type AwsSESS18Actions {
  S3Action: AwsSESS18ActionsS3Action
  BounceAction: AwsSESS18ActionsBounceAction
  WorkmailAction: AwsSESS18ActionsWorkmailAction
  LambdaAction: AwsSESS18ActionsLambdaAction
  StopAction: AwsSESS18ActionsStopAction
  AddHeaderAction: AwsSESS18ActionsAddHeaderAction
  SNSAction: AwsSESS18ActionsSNSAction
}

type AwsSESS18ActionsAddHeaderAction {
  HeaderName: String!
  HeaderValue: String!
}

input AwsSESS18ActionsAddHeaderActionInput {
  HeaderName: String!
  HeaderValue: String!
}

type AwsSESS18ActionsBounceAction {
  TopicArn: String
  SmtpReplyCode: String!
  StatusCode: String
  Message: String!
  Sender: String!
}

input AwsSESS18ActionsBounceActionInput {
  TopicArn: String
  SmtpReplyCode: String!
  StatusCode: String
  Message: String!
  Sender: String!
}

input AwsSESS18ActionsInput {
  S3Action: AwsSESS18ActionsS3ActionInput
  BounceAction: AwsSESS18ActionsBounceActionInput
  WorkmailAction: AwsSESS18ActionsWorkmailActionInput
  LambdaAction: AwsSESS18ActionsLambdaActionInput
  StopAction: AwsSESS18ActionsStopActionInput
  AddHeaderAction: AwsSESS18ActionsAddHeaderActionInput
  SNSAction: AwsSESS18ActionsSNSActionInput
}

type AwsSESS18ActionsLambdaAction {
  TopicArn: String
  FunctionArn: String!
  InvocationType: String
}

input AwsSESS18ActionsLambdaActionInput {
  TopicArn: String
  FunctionArn: String!
  InvocationType: String
}

type AwsSESS18ActionsS3Action {
  TopicArn: String
  BucketName: String!
  ObjectKeyPrefix: String
  KmsKeyArn: String
}

input AwsSESS18ActionsS3ActionInput {
  TopicArn: String
  BucketName: String!
  ObjectKeyPrefix: String
  KmsKeyArn: String
}

type AwsSESS18ActionsSNSAction {
  TopicArn: String!
  Encoding: String
}

input AwsSESS18ActionsSNSActionInput {
  TopicArn: String!
  Encoding: String
}

type AwsSESS18ActionsStopAction {
  Scope: String!
  TopicArn: String
}

input AwsSESS18ActionsStopActionInput {
  Scope: String!
  TopicArn: String
}

type AwsSESS18ActionsWorkmailAction {
  TopicArn: String
  OrganizationArn: String!
}

input AwsSESS18ActionsWorkmailActionInput {
  TopicArn: String
  OrganizationArn: String!
}

input AwsSESS18Input {
  Name: String!
  Enabled: Boolean
  TlsPolicy: String
  Recipients: [String]
  Actions: [AwsSESS18ActionsInput]
  ScanEnabled: Boolean
}

type AwsSESS20 {
  TemplateName: String!
  SubjectPart: String
  TextPart: String
  HtmlPart: String
}

input AwsSESS20Input {
  TemplateName: String!
  SubjectPart: String
  TextPart: String
  HtmlPart: String
}

type AwsSESS2t {
  Name: String
  CreatedTimestamp: Date
}

type AwsSESS31 {
  TlsPolicy: String
}

input AwsSESS31Input {
  TlsPolicy: String
}

type AwsSESS5 {
  Name: String!
}

input AwsSESS5iInput {
  Name: String!
  Value: String!
}

input AwsSESS5Input {
  Name: String!
}

input AwsSESS5xInput {
  Name: String!
  Value: String!
}

input AwsSESS64Input {
  ToAddresses: [String]
  CcAddresses: [String]
  BccAddresses: [String]
}

input AwsSESS6eInput {
  Data: String!
  Charset: String
}

type AwsSESS9 {
  Name: String!
  Enabled: Boolean
  MatchingEventTypes: [String]!
  KinesisFirehoseDestination: AwsSESS9KinesisFirehoseDestination
  CloudWatchDestination: AwsSESS9CloudWatchDestination
  SNSDestination: AwsSESS9SNSDestination
}

type AwsSESS9CloudWatchDestination {
  DimensionConfigurations: [AwsSESS9CloudWatchDestinationDimensionConfigurations]!
}

type AwsSESS9CloudWatchDestinationDimensionConfigurations {
  DimensionName: String!
  DimensionValueSource: String!
  DefaultDimensionValue: String!
}

input AwsSESS9CloudWatchDestinationDimensionConfigurationsInput {
  DimensionName: String!
  DimensionValueSource: String!
  DefaultDimensionValue: String!
}

input AwsSESS9CloudWatchDestinationInput {
  DimensionConfigurations: [AwsSESS9CloudWatchDestinationDimensionConfigurationsInput]!
}

input AwsSESS9Input {
  Name: String!
  Enabled: Boolean
  MatchingEventTypes: [String]!
  KinesisFirehoseDestination: AwsSESS9KinesisFirehoseDestinationInput
  CloudWatchDestination: AwsSESS9CloudWatchDestinationInput
  SNSDestination: AwsSESS9SNSDestinationInput
}

type AwsSESS9KinesisFirehoseDestination {
  IAMRoleARN: String!
  DeliveryStreamARN: String!
}

input AwsSESS9KinesisFirehoseDestinationInput {
  IAMRoleARN: String!
  DeliveryStreamARN: String!
}

type AwsSESS9SNSDestination {
  TopicARN: String!
}

input AwsSESS9SNSDestinationInput {
  TopicARN: String!
}

input AwsSESSendBounceBouncedRecipientInfoListInput {
  Recipient: String!
  RecipientArn: String
  BounceType: String
  RecipientDsnFields: AwsSESSendBounceBouncedRecipientInfoListRecipientDsnFieldsInput
}

input AwsSESSendBounceBouncedRecipientInfoListRecipientDsnFieldsInput {
  FinalRecipient: String
  Action: String!
  RemoteMta: String
  Status: String!
  DiagnosticCode: String
  LastAttemptDate: Date
  ExtensionFields: [AwsSESS5iInput]
}

input AwsSESSendBounceInput {
  OriginalMessageId: String!
  BounceSender: String!
  Explanation: String
  MessageDsn: AwsSESSendBounceMessageDsnInput
  BouncedRecipientInfoList: [AwsSESSendBounceBouncedRecipientInfoListInput]!
  BounceSenderArn: String
}

input AwsSESSendBounceMessageDsnInput {
  ReportingMta: String!
  ArrivalDate: Date
  ExtensionFields: [AwsSESS5iInput]
}

type AwsSESSendBounceOutput {
  MessageId: String
}

input AwsSESSendBulkTemplatedEmailDestinationsInput {
  Destination: AwsSESS64Input!
  ReplacementTags: [AwsSESS5xInput]
  ReplacementTemplateData: String
}

input AwsSESSendBulkTemplatedEmailInput {
  Source: String!
  SourceArn: String
  ReplyToAddresses: [String]
  ReturnPath: String
  ReturnPathArn: String
  ConfigurationSetName: String
  DefaultTags: [AwsSESS5xInput]
  Template: String!
  TemplateArn: String
  DefaultTemplateData: String
  Destinations: [AwsSESSendBulkTemplatedEmailDestinationsInput]!
}

type AwsSESSendBulkTemplatedEmailOutput {
  Status: [AwsSESSendBulkTemplatedEmailOutputStatus]!
}

type AwsSESSendBulkTemplatedEmailOutputStatus {
  Status: String
  Error: String
  MessageId: String
}

input AwsSESSendCustomVerificationEmailInput {
  EmailAddress: String!
  TemplateName: String!
  ConfigurationSetName: String
}

type AwsSESSendCustomVerificationEmailOutput {
  MessageId: String
}

input AwsSESSendEmailInput {
  Source: String!
  Destination: AwsSESS64Input!
  Message: AwsSESSendEmailMessageInput!
  ReplyToAddresses: [String]
  ReturnPath: String
  SourceArn: String
  ReturnPathArn: String
  Tags: [AwsSESS5xInput]
  ConfigurationSetName: String
}

input AwsSESSendEmailMessageBodyInput {
  Text: AwsSESS6eInput
  Html: AwsSESS6eInput
}

input AwsSESSendEmailMessageInput {
  Subject: AwsSESS6eInput!
  Body: AwsSESSendEmailMessageBodyInput!
}

type AwsSESSendEmailOutput {
  MessageId: String!
}

input AwsSESSendRawEmailInput {
  Source: String
  Destinations: [String]
  RawMessage: AwsSESSendRawEmailRawMessageInput!
  FromArn: String
  SourceArn: String
  ReturnPathArn: String
  Tags: [AwsSESS5xInput]
  ConfigurationSetName: String
}

type AwsSESSendRawEmailOutput {
  MessageId: String!
}

input AwsSESSendRawEmailRawMessageInput {
  Data: JSON!
}

input AwsSESSendTemplatedEmailInput {
  Source: String!
  Destination: AwsSESS64Input!
  ReplyToAddresses: [String]
  ReturnPath: String
  SourceArn: String
  ReturnPathArn: String
  Tags: [AwsSESS5xInput]
  ConfigurationSetName: String
  Template: String!
  TemplateArn: String
  TemplateData: String!
}

type AwsSESSendTemplatedEmailOutput {
  MessageId: String!
}

input AwsSESSetActiveReceiptRuleSetInput {
  RuleSetName: String
}

input AwsSESSetIdentityDkimEnabledInput {
  Identity: String!
  DkimEnabled: Boolean!
}

input AwsSESSetIdentityFeedbackForwardingEnabledInput {
  Identity: String!
  ForwardingEnabled: Boolean!
}

input AwsSESSetIdentityHeadersInNotificationsEnabledInput {
  Identity: String!
  NotificationType: String!
  Enabled: Boolean!
}

input AwsSESSetIdentityMailFromDomainInput {
  Identity: String!
  MailFromDomain: String
  BehaviorOnMXFailure: String
}

input AwsSESSetIdentityNotificationTopicInput {
  Identity: String!
  NotificationType: String!
  SnsTopic: String
}

input AwsSESSetReceiptRulePositionInput {
  RuleSetName: String!
  RuleName: String!
  After: String
}

type AwsSESSp {
  CustomRedirectDomain: String
}

input AwsSESSpInput {
  CustomRedirectDomain: String
}

input AwsSESTestRenderTemplateInput {
  TemplateName: String!
  TemplateData: String!
}

type AwsSESTestRenderTemplateOutput {
  RenderedTemplate: String
}

input AwsSESUpdateAccountSendingEnabledInput {
  Enabled: Boolean
}

input AwsSESUpdateConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestination: AwsSESS9Input!
}

input AwsSESUpdateConfigurationSetReputationMetricsEnabledInput {
  ConfigurationSetName: String!
  Enabled: Boolean!
}

input AwsSESUpdateConfigurationSetSendingEnabledInput {
  ConfigurationSetName: String!
  Enabled: Boolean!
}

input AwsSESUpdateConfigurationSetTrackingOptionsInput {
  ConfigurationSetName: String!
  TrackingOptions: AwsSESSpInput!
}

input AwsSESUpdateCustomVerificationEmailTemplateInput {
  TemplateName: String!
  FromEmailAddress: String
  TemplateSubject: String
  TemplateContent: String
  SuccessRedirectionURL: String
  FailureRedirectionURL: String
}

input AwsSESUpdateReceiptRuleInput {
  RuleSetName: String!
  Rule: AwsSESS18Input!
}

input AwsSESUpdateTemplateInput {
  Template: AwsSESS20Input!
}

input AwsSESVerifyDomainDkimInput {
  Domain: String!
}

type AwsSESVerifyDomainDkimOutput {
  DkimTokens: [String]!
}

input AwsSESVerifyDomainIdentityInput {
  Domain: String!
}

type AwsSESVerifyDomainIdentityOutput {
  VerificationToken: String!
}

input AwsSESVerifyEmailAddressInput {
  EmailAddress: String!
}

input AwsSESVerifyEmailIdentityInput {
  EmailAddress: String!
}

"""AWS Shield (2016-06-02)"""
type AwsShield {
  associateDRTLogBucket(input: AwsShieldAssociateDRTLogBucketInput!, config: AwsConfig): JSON
  associateDRTRole(input: AwsShieldAssociateDRTRoleInput!, config: AwsConfig): JSON
  createProtection(input: AwsShieldCreateProtectionInput!, config: AwsConfig): AwsShieldCreateProtectionOutput
  createSubscription(input: JSON, config: AwsConfig): JSON
  deleteProtection(input: AwsShieldDeleteProtectionInput!, config: AwsConfig): JSON
  deleteSubscription(input: JSON, config: AwsConfig): JSON
  describeAttack(input: AwsShieldDescribeAttackInput!, config: AwsConfig): AwsShieldDescribeAttackOutput
  describeDRTAccess(input: JSON, config: AwsConfig): AwsShieldDescribeDRTAccessOutput
  describeEmergencyContactSettings(input: JSON, config: AwsConfig): AwsShieldDescribeEmergencyContactSettingsOutput
  describeProtection(input: AwsShieldDescribeProtectionInput, config: AwsConfig): AwsShieldDescribeProtectionOutput
  describeSubscription(input: JSON, config: AwsConfig): AwsShieldDescribeSubscriptionOutput
  disassociateDRTLogBucket(input: AwsShieldDisassociateDRTLogBucketInput!, config: AwsConfig): JSON
  disassociateDRTRole(input: JSON, config: AwsConfig): JSON
  getSubscriptionState(input: JSON, config: AwsConfig): AwsShieldGetSubscriptionStateOutput
  listAttacks(input: AwsShieldListAttacksInput, config: AwsConfig): AwsShieldListAttacksOutput
  listProtections(input: AwsShieldListProtectionsInput, config: AwsConfig): AwsShieldListProtectionsOutput
  updateEmergencyContactSettings(input: AwsShieldUpdateEmergencyContactSettingsInput, config: AwsConfig): JSON
  updateSubscription(input: AwsShieldUpdateSubscriptionInput, config: AwsConfig): JSON
}

input AwsShieldAssociateDRTLogBucketInput {
  LogBucket: String!
}

input AwsShieldAssociateDRTRoleInput {
  RoleArn: String!
}

input AwsShieldCreateProtectionInput {
  Name: String!
  ResourceArn: String!
}

type AwsShieldCreateProtectionOutput {
  ProtectionId: String
}

input AwsShieldDeleteProtectionInput {
  ProtectionId: String!
}

input AwsShieldDescribeAttackInput {
  AttackId: String!
}

type AwsShieldDescribeAttackOutput {
  Attack: AwsShieldDescribeAttackOutputAttack
}

type AwsShieldDescribeAttackOutputAttack {
  AttackId: String
  ResourceArn: String
  SubResources: [AwsShieldDescribeAttackOutputAttackSubResources]
  StartTime: Date
  EndTime: Date
  AttackCounters: [AwsShieldSs]
  AttackProperties: [AwsShieldDescribeAttackOutputAttackAttackProperties]
  Mitigations: [AwsShieldDescribeAttackOutputAttackMitigations]
}

type AwsShieldDescribeAttackOutputAttackAttackProperties {
  AttackLayer: String
  AttackPropertyIdentifier: String
  TopContributors: [AwsShieldDescribeAttackOutputAttackAttackPropertiesTopContributors]
  Unit: String
  Total: JSON
}

type AwsShieldDescribeAttackOutputAttackAttackPropertiesTopContributors {
  Name: String
  Value: JSON
}

type AwsShieldDescribeAttackOutputAttackMitigations {
  MitigationName: String
}

type AwsShieldDescribeAttackOutputAttackSubResources {
  Type: String
  Id: String
  AttackVectors: [AwsShieldDescribeAttackOutputAttackSubResourcesAttackVectors]
  Counters: [AwsShieldSs]
}

type AwsShieldDescribeAttackOutputAttackSubResourcesAttackVectors {
  VectorType: String!
  VectorCounters: [AwsShieldSs]
}

type AwsShieldDescribeDRTAccessOutput {
  RoleArn: String
  LogBucketList: [String]
}

type AwsShieldDescribeEmergencyContactSettingsOutput {
  EmergencyContactList: [AwsShieldS1c]
}

input AwsShieldDescribeProtectionInput {
  ProtectionId: String
  ResourceArn: String
}

type AwsShieldDescribeProtectionOutput {
  Protection: AwsShieldS1h
}

type AwsShieldDescribeSubscriptionOutput {
  Subscription: AwsShieldDescribeSubscriptionOutputSubscription
}

type AwsShieldDescribeSubscriptionOutputSubscription {
  StartTime: Date
  EndTime: Date
  TimeCommitmentInSeconds: JSON
  AutoRenew: String
  Limits: [AwsShieldDescribeSubscriptionOutputSubscriptionLimits]
}

type AwsShieldDescribeSubscriptionOutputSubscriptionLimits {
  Type: String
  Max: JSON
}

input AwsShieldDisassociateDRTLogBucketInput {
  LogBucket: String!
}

type AwsShieldGetSubscriptionStateOutput {
  SubscriptionState: String!
}

input AwsShieldListAttacksInput {
  ResourceArns: [String]
  StartTime: AwsShieldS1zInput
  EndTime: AwsShieldS1zInput
  NextToken: String
  MaxResults: Int
}

type AwsShieldListAttacksOutput {
  AttackSummaries: [AwsShieldListAttacksOutputAttackSummaries]
  NextToken: String
}

type AwsShieldListAttacksOutputAttackSummaries {
  AttackId: String
  ResourceArn: String
  StartTime: Date
  EndTime: Date
  AttackVectors: [AwsShieldListAttacksOutputAttackSummariesAttackVectors]
}

type AwsShieldListAttacksOutputAttackSummariesAttackVectors {
  VectorType: String!
}

input AwsShieldListProtectionsInput {
  NextToken: String
  MaxResults: Int
}

type AwsShieldListProtectionsOutput {
  Protections: [AwsShieldS1h]
  NextToken: String
}

type AwsShieldS1c {
  EmailAddress: String!
}

input AwsShieldS1cInput {
  EmailAddress: String!
}

type AwsShieldS1h {
  Id: String
  Name: String
  ResourceArn: String
}

input AwsShieldS1zInput {
  FromInclusive: Date
  ToExclusive: Date
}

type AwsShieldSs {
  Name: String
  Max: JSON
  Average: JSON
  Sum: JSON
  N: Int
  Unit: String
}

input AwsShieldUpdateEmergencyContactSettingsInput {
  EmergencyContactList: [AwsShieldS1cInput]
}

input AwsShieldUpdateSubscriptionInput {
  AutoRenew: String
}

"""AWS Signer (2017-08-25)"""
type AwsSigner {
  cancelSigningProfile(input: AwsSignerCancelSigningProfileInput!, config: AwsConfig): JSON
  describeSigningJob(input: AwsSignerDescribeSigningJobInput!, config: AwsConfig): AwsSignerDescribeSigningJobOutput
  getSigningPlatform(input: AwsSignerGetSigningPlatformInput!, config: AwsConfig): AwsSignerGetSigningPlatformOutput
  getSigningProfile(input: AwsSignerGetSigningProfileInput!, config: AwsConfig): AwsSignerGetSigningProfileOutput
  listSigningJobs(input: AwsSignerListSigningJobsInput, config: AwsConfig): AwsSignerListSigningJobsOutput
  listSigningPlatforms(input: AwsSignerListSigningPlatformsInput, config: AwsConfig): AwsSignerListSigningPlatformsOutput
  listSigningProfiles(input: AwsSignerListSigningProfilesInput, config: AwsConfig): AwsSignerListSigningProfilesOutput
  putSigningProfile(input: AwsSignerPutSigningProfileInput!, config: AwsConfig): AwsSignerPutSigningProfileOutput
  startSigningJob(input: AwsSignerStartSigningJobInput!, config: AwsConfig): AwsSignerStartSigningJobOutput
}

input AwsSignerCancelSigningProfileInput {
  profileName: String!
}

input AwsSignerDescribeSigningJobInput {
  jobId: String!
}

type AwsSignerDescribeSigningJobOutput {
  jobId: String
  source: AwsSignerS6
  signingMaterial: AwsSignerSb
  platformId: String
  profileName: String
  overrides: AwsSignerSe
  signingParameters: JSON
  createdAt: Date
  completedAt: Date
  requestedBy: String
  status: String
  statusReason: String
  signedObject: AwsSignerSq
}

input AwsSignerGetSigningPlatformInput {
  platformId: String!
}

type AwsSignerGetSigningPlatformOutput {
  platformId: String
  displayName: String
  partner: String
  target: String
  category: String
  signingConfiguration: AwsSignerSy
  signingImageFormat: AwsSignerS13
  maxSizeInMB: Int
}

input AwsSignerGetSigningProfileInput {
  profileName: String!
}

type AwsSignerGetSigningProfileOutput {
  profileName: String
  signingMaterial: AwsSignerSb
  platformId: String
  overrides: AwsSignerSe
  signingParameters: JSON
  status: String
}

input AwsSignerListSigningJobsInput {
  status: String
  platformId: String
  requestedBy: String
  maxResults: Int
  nextToken: String
}

type AwsSignerListSigningJobsOutput {
  jobs: [AwsSignerListSigningJobsOutputJobs]
  nextToken: String
}

type AwsSignerListSigningJobsOutputJobs {
  jobId: String
  source: AwsSignerS6
  signedObject: AwsSignerSq
  signingMaterial: AwsSignerSb
  createdAt: Date
  status: String
}

input AwsSignerListSigningPlatformsInput {
  category: String
  partner: String
  target: String
  maxResults: Int
  nextToken: String
}

type AwsSignerListSigningPlatformsOutput {
  platforms: [AwsSignerListSigningPlatformsOutputPlatforms]
  nextToken: String
}

type AwsSignerListSigningPlatformsOutputPlatforms {
  platformId: String
  displayName: String
  partner: String
  target: String
  category: String
  signingConfiguration: AwsSignerSy
  signingImageFormat: AwsSignerS13
  maxSizeInMB: Int
}

input AwsSignerListSigningProfilesInput {
  includeCanceled: Boolean
  maxResults: Int
  nextToken: String
}

type AwsSignerListSigningProfilesOutput {
  profiles: [AwsSignerListSigningProfilesOutputProfiles]
  nextToken: String
}

type AwsSignerListSigningProfilesOutputProfiles {
  profileName: String
  signingMaterial: AwsSignerSb
  platformId: String
  signingParameters: JSON
  status: String
}

input AwsSignerPutSigningProfileInput {
  profileName: String!
  signingMaterial: AwsSignerSbInput!
  platformId: String!
  overrides: AwsSignerSeInput
  signingParameters: JSON
}

type AwsSignerPutSigningProfileOutput {
  arn: String
}

type AwsSignerS13 {
  supportedFormats: [String]!
  defaultFormat: String!
}

type AwsSignerS6 {
  s3: AwsSignerS6S3
}

input AwsSignerS6Input {
  s3: AwsSignerS6S3Input
}

type AwsSignerS6S3 {
  bucketName: String!
  key: String!
  version: String!
}

input AwsSignerS6S3Input {
  bucketName: String!
  key: String!
  version: String!
}

type AwsSignerSb {
  certificateArn: String!
}

input AwsSignerSbInput {
  certificateArn: String!
}

type AwsSignerSe {
  signingConfiguration: AwsSignerSeSigningConfiguration
}

input AwsSignerSeInput {
  signingConfiguration: AwsSignerSeSigningConfigurationInput
}

type AwsSignerSeSigningConfiguration {
  encryptionAlgorithm: String
  hashAlgorithm: String
}

input AwsSignerSeSigningConfigurationInput {
  encryptionAlgorithm: String
  hashAlgorithm: String
}

type AwsSignerSq {
  s3: AwsSignerSqS3
}

type AwsSignerSqS3 {
  bucketName: String
  key: String
}

input AwsSignerStartSigningJobDestinationInput {
  s3: AwsSignerStartSigningJobDestinationS3Input
}

input AwsSignerStartSigningJobDestinationS3Input {
  bucketName: String
  prefix: String
}

input AwsSignerStartSigningJobInput {
  source: AwsSignerS6Input!
  destination: AwsSignerStartSigningJobDestinationInput!
  profileName: String
  clientRequestToken: String!
}

type AwsSignerStartSigningJobOutput {
  jobId: String
}

type AwsSignerSy {
  encryptionAlgorithmOptions: AwsSignerSyEncryptionAlgorithmOptions!
  hashAlgorithmOptions: AwsSignerSyHashAlgorithmOptions!
}

type AwsSignerSyEncryptionAlgorithmOptions {
  allowedValues: [String]!
  defaultValue: String!
}

type AwsSignerSyHashAlgorithmOptions {
  allowedValues: [String]!
  defaultValue: String!
}

"""Amazon SimpleDB (2009-04-15)"""
type AwsSimpleDB {
  batchDeleteAttributes(input: AwsSimpleDBBatchDeleteAttributesInput!, config: AwsConfig): JSON
  batchPutAttributes(input: AwsSimpleDBBatchPutAttributesInput!, config: AwsConfig): JSON
  createDomain(input: AwsSimpleDBCreateDomainInput!, config: AwsConfig): JSON
  deleteAttributes(input: AwsSimpleDBDeleteAttributesInput!, config: AwsConfig): JSON
  deleteDomain(input: AwsSimpleDBDeleteDomainInput!, config: AwsConfig): JSON
  domainMetadata(input: AwsSimpleDBDomainMetadataInput!, config: AwsConfig): AwsSimpleDBDomainMetadataOutput
  getAttributes(input: AwsSimpleDBGetAttributesInput!, config: AwsConfig): AwsSimpleDBGetAttributesOutput
  listDomains(input: AwsSimpleDBListDomainsInput, config: AwsConfig): AwsSimpleDBListDomainsOutput
  putAttributes(input: AwsSimpleDBPutAttributesInput!, config: AwsConfig): JSON
  select(input: AwsSimpleDBSelectInput!, config: AwsConfig): AwsSimpleDBSelectOutput
}

input AwsSimpleDBBatchDeleteAttributesInput {
  DomainName: String!
  Items: [AwsSimpleDBBatchDeleteAttributesItemsInput]!
}

input AwsSimpleDBBatchDeleteAttributesItemsInput {
  Name: String!
  Attributes: [AwsSimpleDBS5Input]
}

input AwsSimpleDBBatchPutAttributesInput {
  DomainName: String!
  Items: [AwsSimpleDBBatchPutAttributesItemsInput]!
}

input AwsSimpleDBBatchPutAttributesItemsInput {
  Name: String!
  Attributes: [AwsSimpleDBSaInput]!
}

input AwsSimpleDBCreateDomainInput {
  DomainName: String!
}

input AwsSimpleDBDeleteAttributesInput {
  DomainName: String!
  ItemName: String!
  Attributes: [AwsSimpleDBS5Input]
  Expected: AwsSimpleDBSfInput
}

input AwsSimpleDBDeleteDomainInput {
  DomainName: String!
}

input AwsSimpleDBDomainMetadataInput {
  DomainName: String!
}

type AwsSimpleDBDomainMetadataOutput {
  ItemCount: Int
  ItemNamesSizeBytes: JSON
  AttributeNameCount: Int
  AttributeNamesSizeBytes: JSON
  AttributeValueCount: Int
  AttributeValuesSizeBytes: JSON
  Timestamp: Int
}

input AwsSimpleDBGetAttributesInput {
  DomainName: String!
  ItemName: String!
  AttributeNames: [String]
  ConsistentRead: Boolean
}

type AwsSimpleDBGetAttributesOutput {
  Attributes: [AwsSimpleDBSo]
}

input AwsSimpleDBListDomainsInput {
  MaxNumberOfDomains: Int
  NextToken: String
}

type AwsSimpleDBListDomainsOutput {
  DomainNames: [String]
  NextToken: String
}

input AwsSimpleDBPutAttributesInput {
  DomainName: String!
  ItemName: String!
  Attributes: [AwsSimpleDBSaInput]!
  Expected: AwsSimpleDBSfInput
}

input AwsSimpleDBS5Input {
  Name: String!
  Value: String
}

input AwsSimpleDBSaInput {
  Name: String!
  Value: String!
  Replace: Boolean
}

input AwsSimpleDBSelectInput {
  SelectExpression: String!
  NextToken: String
  ConsistentRead: Boolean
}

type AwsSimpleDBSelectOutput {
  Items: [AwsSimpleDBSelectOutputItems]
  NextToken: String
}

type AwsSimpleDBSelectOutputItems {
  Name: String!
  AlternateNameEncoding: String
  Attributes: [AwsSimpleDBSo]!
}

input AwsSimpleDBSfInput {
  Name: String
  Value: String
  Exists: Boolean
}

type AwsSimpleDBSo {
  Name: String!
  AlternateNameEncoding: String
  Value: String!
  AlternateValueEncoding: String
}

"""AWS Server Migration Service (2016-10-24)"""
type AwsSMS {
  createApp(input: AwsSMSCreateAppInput, config: AwsConfig): AwsSMSCreateAppOutput
  createReplicationJob(input: AwsSMSCreateReplicationJobInput!, config: AwsConfig): AwsSMSCreateReplicationJobOutput
  deleteApp(input: AwsSMSDeleteAppInput, config: AwsConfig): JSON
  deleteAppLaunchConfiguration(input: AwsSMSDeleteAppLaunchConfigurationInput, config: AwsConfig): JSON
  deleteAppReplicationConfiguration(input: AwsSMSDeleteAppReplicationConfigurationInput, config: AwsConfig): JSON
  deleteReplicationJob(input: AwsSMSDeleteReplicationJobInput!, config: AwsConfig): JSON
  deleteServerCatalog(input: JSON, config: AwsConfig): JSON
  disassociateConnector(input: AwsSMSDisassociateConnectorInput!, config: AwsConfig): JSON
  generateChangeSet(input: AwsSMSGenerateChangeSetInput, config: AwsConfig): AwsSMSGenerateChangeSetOutput
  generateTemplate(input: AwsSMSGenerateTemplateInput, config: AwsConfig): AwsSMSGenerateTemplateOutput
  getApp(input: AwsSMSGetAppInput, config: AwsConfig): AwsSMSGetAppOutput
  getAppLaunchConfiguration(input: AwsSMSGetAppLaunchConfigurationInput, config: AwsConfig): AwsSMSGetAppLaunchConfigurationOutput
  getAppReplicationConfiguration(input: AwsSMSGetAppReplicationConfigurationInput, config: AwsConfig): AwsSMSGetAppReplicationConfigurationOutput
  getConnectors(input: AwsSMSGetConnectorsInput, config: AwsConfig): AwsSMSGetConnectorsOutput
  getReplicationJobs(input: AwsSMSGetReplicationJobsInput, config: AwsConfig): AwsSMSGetReplicationJobsOutput
  getReplicationRuns(input: AwsSMSGetReplicationRunsInput!, config: AwsConfig): AwsSMSGetReplicationRunsOutput
  getServers(input: AwsSMSGetServersInput, config: AwsConfig): AwsSMSGetServersOutput
  importServerCatalog(input: JSON, config: AwsConfig): JSON
  launchApp(input: AwsSMSLaunchAppInput, config: AwsConfig): JSON
  listApps(input: AwsSMSListAppsInput, config: AwsConfig): AwsSMSListAppsOutput
  putAppLaunchConfiguration(input: AwsSMSPutAppLaunchConfigurationInput, config: AwsConfig): JSON
  putAppReplicationConfiguration(input: AwsSMSPutAppReplicationConfigurationInput, config: AwsConfig): JSON
  startAppReplication(input: AwsSMSStartAppReplicationInput, config: AwsConfig): JSON
  startOnDemandReplicationRun(input: AwsSMSStartOnDemandReplicationRunInput!, config: AwsConfig): AwsSMSStartOnDemandReplicationRunOutput
  stopAppReplication(input: AwsSMSStopAppReplicationInput, config: AwsConfig): JSON
  terminateApp(input: AwsSMSTerminateAppInput, config: AwsConfig): JSON
  updateApp(input: AwsSMSUpdateAppInput, config: AwsConfig): AwsSMSUpdateAppOutput
  updateReplicationJob(input: AwsSMSUpdateReplicationJobInput!, config: AwsConfig): JSON
}

input AwsSMSCreateAppInput {
  name: String
  description: String
  roleName: String
  clientToken: String
  serverGroups: [AwsSMSS6Input]
  tags: [AwsSMSSoInput]
}

type AwsSMSCreateAppOutput {
  appSummary: AwsSMSSt
  serverGroups: [AwsSMSS6]
  tags: [AwsSMSSo]
}

input AwsSMSCreateReplicationJobInput {
  serverId: String!
  seedReplicationTime: Date!
  frequency: Int
  runOnce: Boolean
  licenseType: String
  roleName: String
  description: String
  numberOfRecentAmisToKeep: Int
  encrypted: Boolean
  kmsKeyId: String
}

type AwsSMSCreateReplicationJobOutput {
  replicationJobId: String
}

input AwsSMSDeleteAppInput {
  appId: String
  forceStopAppReplication: Boolean
  forceTerminateApp: Boolean
}

input AwsSMSDeleteAppLaunchConfigurationInput {
  appId: String
}

input AwsSMSDeleteAppReplicationConfigurationInput {
  appId: String
}

input AwsSMSDeleteReplicationJobInput {
  replicationJobId: String!
}

input AwsSMSDisassociateConnectorInput {
  connectorId: String!
}

input AwsSMSGenerateChangeSetInput {
  appId: String
  changesetFormat: String
}

type AwsSMSGenerateChangeSetOutput {
  s3Location: AwsSMSS1y
}

input AwsSMSGenerateTemplateInput {
  appId: String
  templateFormat: String
}

type AwsSMSGenerateTemplateOutput {
  s3Location: AwsSMSS1y
}

input AwsSMSGetAppInput {
  appId: String
}

input AwsSMSGetAppLaunchConfigurationInput {
  appId: String
}

type AwsSMSGetAppLaunchConfigurationOutput {
  appId: String
  roleName: String
  serverGroupLaunchConfigurations: [AwsSMSS27]
}

type AwsSMSGetAppOutput {
  appSummary: AwsSMSSt
  serverGroups: [AwsSMSS6]
  tags: [AwsSMSSo]
}

input AwsSMSGetAppReplicationConfigurationInput {
  appId: String
}

type AwsSMSGetAppReplicationConfigurationOutput {
  serverGroupReplicationConfigurations: [AwsSMSS2m]
}

input AwsSMSGetConnectorsInput {
  nextToken: String
  maxResults: Int
}

type AwsSMSGetConnectorsOutput {
  connectorList: [AwsSMSGetConnectorsOutputConnectorList]
  nextToken: String
}

type AwsSMSGetConnectorsOutputConnectorList {
  connectorId: String
  version: String
  status: String
  capabilityList: [String]
  vmManagerName: String
  vmManagerType: String
  vmManagerId: String
  ipAddress: String
  macAddress: String
  associatedOn: Date
}

input AwsSMSGetReplicationJobsInput {
  replicationJobId: String
  nextToken: String
  maxResults: Int
}

type AwsSMSGetReplicationJobsOutput {
  replicationJobList: [AwsSMSS36]
  nextToken: String
}

input AwsSMSGetReplicationRunsInput {
  replicationJobId: String!
  nextToken: String
  maxResults: Int
}

type AwsSMSGetReplicationRunsOutput {
  replicationJob: AwsSMSS36
  replicationRunList: [AwsSMSS3a]
  nextToken: String
}

input AwsSMSGetServersInput {
  nextToken: String
  maxResults: Int
  vmServerAddressList: [AwsSMSSfInput]
}

type AwsSMSGetServersOutput {
  lastModifiedOn: Date
  serverCatalogStatus: String
  serverList: [AwsSMSSb]
  nextToken: String
}

input AwsSMSLaunchAppInput {
  appId: String
}

input AwsSMSListAppsInput {
  appIds: [String]
  nextToken: String
  maxResults: Int
}

type AwsSMSListAppsOutput {
  apps: [AwsSMSSt]
  nextToken: String
}

input AwsSMSPutAppLaunchConfigurationInput {
  appId: String
  roleName: String
  serverGroupLaunchConfigurations: [AwsSMSS27Input]
}

input AwsSMSPutAppReplicationConfigurationInput {
  appId: String
  serverGroupReplicationConfigurations: [AwsSMSS2mInput]
}

type AwsSMSS1y {
  bucket: String
  key: String
}

input AwsSMSS1yInput {
  bucket: String
  key: String
}

type AwsSMSS27 {
  serverGroupId: String
  launchOrder: Int
  serverLaunchConfigurations: [AwsSMSS27ServerLaunchConfigurations]
}

input AwsSMSS27Input {
  serverGroupId: String
  launchOrder: Int
  serverLaunchConfigurations: [AwsSMSS27ServerLaunchConfigurationsInput]
}

type AwsSMSS27ServerLaunchConfigurations {
  server: AwsSMSSb
  logicalId: String
  vpc: String
  subnet: String
  securityGroup: String
  ec2KeyName: String
  userData: AwsSMSS27ServerLaunchConfigurationsUserData
  instanceType: String
  associatePublicIpAddress: Boolean
}

input AwsSMSS27ServerLaunchConfigurationsInput {
  server: AwsSMSSbInput
  logicalId: String
  vpc: String
  subnet: String
  securityGroup: String
  ec2KeyName: String
  userData: AwsSMSS27ServerLaunchConfigurationsUserDataInput
  instanceType: String
  associatePublicIpAddress: Boolean
}

type AwsSMSS27ServerLaunchConfigurationsUserData {
  s3Location: AwsSMSS1y
}

input AwsSMSS27ServerLaunchConfigurationsUserDataInput {
  s3Location: AwsSMSS1yInput
}

type AwsSMSS2m {
  serverGroupId: String
  serverReplicationConfigurations: [AwsSMSS2mServerReplicationConfigurations]
}

input AwsSMSS2mInput {
  serverGroupId: String
  serverReplicationConfigurations: [AwsSMSS2mServerReplicationConfigurationsInput]
}

type AwsSMSS2mServerReplicationConfigurations {
  server: AwsSMSSb
  serverReplicationParameters: AwsSMSS2mServerReplicationConfigurationsServerReplicationParameters
}

input AwsSMSS2mServerReplicationConfigurationsInput {
  server: AwsSMSSbInput
  serverReplicationParameters: AwsSMSS2mServerReplicationConfigurationsServerReplicationParametersInput
}

type AwsSMSS2mServerReplicationConfigurationsServerReplicationParameters {
  seedTime: Date
  frequency: Int
  runOnce: Boolean
  licenseType: String
  numberOfRecentAmisToKeep: Int
  encrypted: Boolean
  kmsKeyId: String
}

input AwsSMSS2mServerReplicationConfigurationsServerReplicationParametersInput {
  seedTime: Date
  frequency: Int
  runOnce: Boolean
  licenseType: String
  numberOfRecentAmisToKeep: Int
  encrypted: Boolean
  kmsKeyId: String
}

type AwsSMSS36 {
  replicationJobId: String
  serverId: String
  serverType: String
  vmServer: AwsSMSSe
  seedReplicationTime: Date
  frequency: Int
  runOnce: Boolean
  nextReplicationRunStartTime: Date
  licenseType: String
  roleName: String
  latestAmiId: String
  state: String
  statusMessage: String
  description: String
  numberOfRecentAmisToKeep: Int
  encrypted: Boolean
  kmsKeyId: String
  replicationRunList: [AwsSMSS3a]
}

type AwsSMSS3a {
  replicationRunId: String
  state: String
  type: String
  stageDetails: AwsSMSS3aStageDetails
  statusMessage: String
  amiId: String
  scheduledStartTime: Date
  completedTime: Date
  description: String
  encrypted: Boolean
  kmsKeyId: String
}

type AwsSMSS3aStageDetails {
  stage: String
  stageProgress: String
}

type AwsSMSS6 {
  serverGroupId: String
  name: String
  serverList: [AwsSMSSb]
}

input AwsSMSS6Input {
  serverGroupId: String
  name: String
  serverList: [AwsSMSSbInput]
}

type AwsSMSSb {
  serverId: String
  serverType: String
  vmServer: AwsSMSSe
  replicationJobId: String
  replicationJobTerminated: Boolean
}

input AwsSMSSbInput {
  serverId: String
  serverType: String
  vmServer: AwsSMSSeInput
  replicationJobId: String
  replicationJobTerminated: Boolean
}

type AwsSMSSe {
  vmServerAddress: AwsSMSSf
  vmName: String
  vmManagerName: String
  vmManagerType: String
  vmPath: String
}

input AwsSMSSeInput {
  vmServerAddress: AwsSMSSfInput
  vmName: String
  vmManagerName: String
  vmManagerType: String
  vmPath: String
}

type AwsSMSSf {
  vmManagerId: String
  vmId: String
}

input AwsSMSSfInput {
  vmManagerId: String
  vmId: String
}

type AwsSMSSo {
  key: String
  value: String
}

input AwsSMSSoInput {
  key: String
  value: String
}

type AwsSMSSt {
  appId: String
  name: String
  description: String
  status: String
  statusMessage: String
  replicationStatus: String
  replicationStatusMessage: String
  latestReplicationTime: Date
  launchStatus: String
  launchStatusMessage: String
  launchDetails: AwsSMSStLaunchDetails
  creationTime: Date
  lastModified: Date
  roleName: String
  totalServerGroups: Int
  totalServers: Int
}

input AwsSMSStartAppReplicationInput {
  appId: String
}

input AwsSMSStartOnDemandReplicationRunInput {
  replicationJobId: String!
  description: String
}

type AwsSMSStartOnDemandReplicationRunOutput {
  replicationRunId: String
}

type AwsSMSStLaunchDetails {
  latestLaunchTime: Date
  stackName: String
  stackId: String
}

input AwsSMSStopAppReplicationInput {
  appId: String
}

input AwsSMSTerminateAppInput {
  appId: String
}

input AwsSMSUpdateAppInput {
  appId: String
  name: String
  description: String
  roleName: String
  serverGroups: [AwsSMSS6Input]
  tags: [AwsSMSSoInput]
}

type AwsSMSUpdateAppOutput {
  appSummary: AwsSMSSt
  serverGroups: [AwsSMSS6]
  tags: [AwsSMSSo]
}

input AwsSMSUpdateReplicationJobInput {
  replicationJobId: String!
  frequency: Int
  nextReplicationRunStartTime: Date
  licenseType: String
  roleName: String
  description: String
  numberOfRecentAmisToKeep: Int
  encrypted: Boolean
  kmsKeyId: String
}

"""Amazon Import/Export Snowball (2016-06-30)"""
type AwsSnowball {
  cancelCluster(input: AwsSnowballCancelClusterInput!, config: AwsConfig): JSON
  cancelJob(input: AwsSnowballCancelJobInput!, config: AwsConfig): JSON
  createAddress(input: AwsSnowballCreateAddressInput!, config: AwsConfig): AwsSnowballCreateAddressOutput
  createCluster(input: AwsSnowballCreateClusterInput!, config: AwsConfig): AwsSnowballCreateClusterOutput
  createJob(input: AwsSnowballCreateJobInput, config: AwsConfig): AwsSnowballCreateJobOutput
  describeAddress(input: AwsSnowballDescribeAddressInput!, config: AwsConfig): AwsSnowballDescribeAddressOutput
  describeAddresses(input: AwsSnowballDescribeAddressesInput, config: AwsConfig): AwsSnowballDescribeAddressesOutput
  describeCluster(input: AwsSnowballDescribeClusterInput!, config: AwsConfig): AwsSnowballDescribeClusterOutput
  describeJob(input: AwsSnowballDescribeJobInput!, config: AwsConfig): AwsSnowballDescribeJobOutput
  getJobManifest(input: AwsSnowballGetJobManifestInput!, config: AwsConfig): AwsSnowballGetJobManifestOutput
  getJobUnlockCode(input: AwsSnowballGetJobUnlockCodeInput!, config: AwsConfig): AwsSnowballGetJobUnlockCodeOutput
  getSnowballUsage(input: JSON, config: AwsConfig): AwsSnowballGetSnowballUsageOutput
  listClusterJobs(input: AwsSnowballListClusterJobsInput!, config: AwsConfig): AwsSnowballListClusterJobsOutput
  listClusters(input: AwsSnowballListClustersInput, config: AwsConfig): AwsSnowballListClustersOutput
  listCompatibleImages(input: AwsSnowballListCompatibleImagesInput, config: AwsConfig): AwsSnowballListCompatibleImagesOutput
  listJobs(input: AwsSnowballListJobsInput, config: AwsConfig): AwsSnowballListJobsOutput
  updateCluster(input: AwsSnowballUpdateClusterInput!, config: AwsConfig): JSON
  updateJob(input: AwsSnowballUpdateJobInput!, config: AwsConfig): JSON
}

input AwsSnowballCancelClusterInput {
  ClusterId: String!
}

input AwsSnowballCancelJobInput {
  JobId: String!
}

input AwsSnowballCreateAddressInput {
  Address: AwsSnowballS8Input!
}

type AwsSnowballCreateAddressOutput {
  AddressId: String
}

input AwsSnowballCreateClusterInput {
  JobType: String!
  Resources: AwsSnowballSfInput!
  Description: String
  AddressId: String!
  KmsKeyARN: String
  RoleARN: String!
  SnowballType: String
  ShippingOption: String!
  Notification: AwsSnowballSvInput
  ForwardingAddressId: String
}

type AwsSnowballCreateClusterOutput {
  ClusterId: String
}

input AwsSnowballCreateJobInput {
  JobType: String
  Resources: AwsSnowballSfInput
  Description: String
  AddressId: String
  KmsKeyARN: String
  RoleARN: String
  SnowballCapacityPreference: String
  ShippingOption: String
  Notification: AwsSnowballSvInput
  ClusterId: String
  SnowballType: String
  ForwardingAddressId: String
}

type AwsSnowballCreateJobOutput {
  JobId: String
}

input AwsSnowballDescribeAddressesInput {
  MaxResults: Int
  NextToken: String
}

type AwsSnowballDescribeAddressesOutput {
  Addresses: [AwsSnowballS8]
  NextToken: String
}

input AwsSnowballDescribeAddressInput {
  AddressId: String!
}

type AwsSnowballDescribeAddressOutput {
  Address: AwsSnowballS8
}

input AwsSnowballDescribeClusterInput {
  ClusterId: String!
}

type AwsSnowballDescribeClusterOutput {
  ClusterMetadata: AwsSnowballDescribeClusterOutputClusterMetadata
}

type AwsSnowballDescribeClusterOutputClusterMetadata {
  ClusterId: String
  Description: String
  KmsKeyARN: String
  RoleARN: String
  ClusterState: String
  JobType: String
  SnowballType: String
  CreationDate: Date
  Resources: AwsSnowballSf
  AddressId: String
  ShippingOption: String
  Notification: AwsSnowballSv
  ForwardingAddressId: String
}

input AwsSnowballDescribeJobInput {
  JobId: String!
}

type AwsSnowballDescribeJobOutput {
  JobMetadata: AwsSnowballS1g
  SubJobMetadata: [AwsSnowballS1g]
}

input AwsSnowballGetJobManifestInput {
  JobId: String!
}

type AwsSnowballGetJobManifestOutput {
  ManifestURI: String
}

input AwsSnowballGetJobUnlockCodeInput {
  JobId: String!
}

type AwsSnowballGetJobUnlockCodeOutput {
  UnlockCode: String
}

type AwsSnowballGetSnowballUsageOutput {
  SnowballLimit: Int
  SnowballsInUse: Int
}

input AwsSnowballListClusterJobsInput {
  ClusterId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSnowballListClusterJobsOutput {
  JobListEntries: [AwsSnowballS1w]
  NextToken: String
}

input AwsSnowballListClustersInput {
  MaxResults: Int
  NextToken: String
}

type AwsSnowballListClustersOutput {
  ClusterListEntries: [AwsSnowballListClustersOutputClusterListEntries]
  NextToken: String
}

type AwsSnowballListClustersOutputClusterListEntries {
  ClusterId: String
  ClusterState: String
  CreationDate: Date
  Description: String
}

input AwsSnowballListCompatibleImagesInput {
  MaxResults: Int
  NextToken: String
}

type AwsSnowballListCompatibleImagesOutput {
  CompatibleImages: [AwsSnowballListCompatibleImagesOutputCompatibleImages]
  NextToken: String
}

type AwsSnowballListCompatibleImagesOutputCompatibleImages {
  AmiId: String
  Name: String
}

input AwsSnowballListJobsInput {
  MaxResults: Int
  NextToken: String
}

type AwsSnowballListJobsOutput {
  JobListEntries: [AwsSnowballS1w]
  NextToken: String
}

type AwsSnowballS1g {
  JobId: String
  JobState: String
  JobType: String
  SnowballType: String
  CreationDate: Date
  Resources: AwsSnowballSf
  Description: String
  KmsKeyARN: String
  RoleARN: String
  AddressId: String
  ShippingDetails: AwsSnowballS1gShippingDetails
  SnowballCapacityPreference: String
  Notification: AwsSnowballSv
  DataTransferProgress: AwsSnowballS1gDataTransferProgress
  JobLogInfo: AwsSnowballS1gJobLogInfo
  ClusterId: String
  ForwardingAddressId: String
}

type AwsSnowballS1gDataTransferProgress {
  BytesTransferred: JSON
  ObjectsTransferred: JSON
  TotalBytes: JSON
  TotalObjects: JSON
}

type AwsSnowballS1gJobLogInfo {
  JobCompletionReportURI: String
  JobSuccessLogURI: String
  JobFailureLogURI: String
}

type AwsSnowballS1gShippingDetails {
  ShippingOption: String
  InboundShipment: AwsSnowballS1i
  OutboundShipment: AwsSnowballS1i
}

type AwsSnowballS1i {
  Status: String
  TrackingNumber: String
}

type AwsSnowballS1w {
  JobId: String
  JobState: String
  IsMaster: Boolean
  JobType: String
  SnowballType: String
  CreationDate: Date
  Description: String
}

type AwsSnowballS8 {
  AddressId: String
  Name: String
  Company: String
  Street1: String
  Street2: String
  Street3: String
  City: String
  StateOrProvince: String
  PrefectureOrDistrict: String
  Landmark: String
  Country: String
  PostalCode: String
  PhoneNumber: String
  IsRestricted: Boolean
}

input AwsSnowballS8Input {
  AddressId: String
  Name: String
  Company: String
  Street1: String
  Street2: String
  Street3: String
  City: String
  StateOrProvince: String
  PrefectureOrDistrict: String
  Landmark: String
  Country: String
  PostalCode: String
  PhoneNumber: String
  IsRestricted: Boolean
}

type AwsSnowballSf {
  S3Resources: [AwsSnowballSfS3Resources]
  LambdaResources: [AwsSnowballSfLambdaResources]
  Ec2AmiResources: [AwsSnowballSfEc2AmiResources]
}

type AwsSnowballSfEc2AmiResources {
  AmiId: String!
  SnowballAmiId: String
}

input AwsSnowballSfEc2AmiResourcesInput {
  AmiId: String!
  SnowballAmiId: String
}

input AwsSnowballSfInput {
  S3Resources: [AwsSnowballSfS3ResourcesInput]
  LambdaResources: [AwsSnowballSfLambdaResourcesInput]
  Ec2AmiResources: [AwsSnowballSfEc2AmiResourcesInput]
}

type AwsSnowballSfLambdaResources {
  LambdaArn: String
  EventTriggers: [AwsSnowballSfLambdaResourcesEventTriggers]
}

type AwsSnowballSfLambdaResourcesEventTriggers {
  EventResourceARN: String
}

input AwsSnowballSfLambdaResourcesEventTriggersInput {
  EventResourceARN: String
}

input AwsSnowballSfLambdaResourcesInput {
  LambdaArn: String
  EventTriggers: [AwsSnowballSfLambdaResourcesEventTriggersInput]
}

type AwsSnowballSfS3Resources {
  BucketArn: String
  KeyRange: AwsSnowballSfS3ResourcesKeyRange
}

input AwsSnowballSfS3ResourcesInput {
  BucketArn: String
  KeyRange: AwsSnowballSfS3ResourcesKeyRangeInput
}

type AwsSnowballSfS3ResourcesKeyRange {
  BeginMarker: String
  EndMarker: String
}

input AwsSnowballSfS3ResourcesKeyRangeInput {
  BeginMarker: String
  EndMarker: String
}

type AwsSnowballSv {
  SnsTopicARN: String
  JobStatesToNotify: [String]
  NotifyAll: Boolean
}

input AwsSnowballSvInput {
  SnsTopicARN: String
  JobStatesToNotify: [String]
  NotifyAll: Boolean
}

input AwsSnowballUpdateClusterInput {
  ClusterId: String!
  RoleARN: String
  Description: String
  Resources: AwsSnowballSfInput
  AddressId: String
  ShippingOption: String
  Notification: AwsSnowballSvInput
  ForwardingAddressId: String
}

input AwsSnowballUpdateJobInput {
  JobId: String!
  RoleARN: String
  Notification: AwsSnowballSvInput
  Resources: AwsSnowballSfInput
  AddressId: String
  ShippingOption: String
  Description: String
  SnowballCapacityPreference: String
  ForwardingAddressId: String
}

"""Amazon Simple Notification Service (2010-03-31)"""
type AwsSNS {
  addPermission(input: AwsSNSAddPermissionInput!, config: AwsConfig): JSON
  checkIfPhoneNumberIsOptedOut(input: AwsSNSCheckIfPhoneNumberIsOptedOutInput!, config: AwsConfig): AwsSNSCheckIfPhoneNumberIsOptedOutOutput
  confirmSubscription(input: AwsSNSConfirmSubscriptionInput!, config: AwsConfig): AwsSNSConfirmSubscriptionOutput
  createPlatformApplication(input: AwsSNSCreatePlatformApplicationInput!, config: AwsConfig): AwsSNSCreatePlatformApplicationOutput
  createPlatformEndpoint(input: AwsSNSCreatePlatformEndpointInput!, config: AwsConfig): AwsSNSCreatePlatformEndpointOutput
  createTopic(input: AwsSNSCreateTopicInput!, config: AwsConfig): AwsSNSCreateTopicOutput
  deleteEndpoint(input: AwsSNSDeleteEndpointInput!, config: AwsConfig): JSON
  deletePlatformApplication(input: AwsSNSDeletePlatformApplicationInput!, config: AwsConfig): JSON
  deleteTopic(input: AwsSNSDeleteTopicInput!, config: AwsConfig): JSON
  getEndpointAttributes(input: AwsSNSGetEndpointAttributesInput!, config: AwsConfig): AwsSNSGetEndpointAttributesOutput
  getPlatformApplicationAttributes(input: AwsSNSGetPlatformApplicationAttributesInput!, config: AwsConfig): AwsSNSGetPlatformApplicationAttributesOutput
  getSMSAttributes(input: AwsSNSGetSMSAttributesInput, config: AwsConfig): AwsSNSGetSMSAttributesOutput
  getSubscriptionAttributes(input: AwsSNSGetSubscriptionAttributesInput!, config: AwsConfig): AwsSNSGetSubscriptionAttributesOutput
  getTopicAttributes(input: AwsSNSGetTopicAttributesInput!, config: AwsConfig): AwsSNSGetTopicAttributesOutput
  listEndpointsByPlatformApplication(input: AwsSNSListEndpointsByPlatformApplicationInput!, config: AwsConfig): AwsSNSListEndpointsByPlatformApplicationOutput
  listPhoneNumbersOptedOut(input: AwsSNSListPhoneNumbersOptedOutInput, config: AwsConfig): AwsSNSListPhoneNumbersOptedOutOutput
  listPlatformApplications(input: AwsSNSListPlatformApplicationsInput, config: AwsConfig): AwsSNSListPlatformApplicationsOutput
  listSubscriptions(input: AwsSNSListSubscriptionsInput, config: AwsConfig): AwsSNSListSubscriptionsOutput
  listSubscriptionsByTopic(input: AwsSNSListSubscriptionsByTopicInput!, config: AwsConfig): AwsSNSListSubscriptionsByTopicOutput
  listTagsForResource(input: AwsSNSListTagsForResourceInput!, config: AwsConfig): AwsSNSListTagsForResourceOutput
  listTopics(input: AwsSNSListTopicsInput, config: AwsConfig): AwsSNSListTopicsOutput
  optInPhoneNumber(input: AwsSNSOptInPhoneNumberInput!, config: AwsConfig): JSON
  publish(input: AwsSNSPublishInput!, config: AwsConfig): AwsSNSPublishOutput
  removePermission(input: AwsSNSRemovePermissionInput!, config: AwsConfig): JSON
  setEndpointAttributes(input: AwsSNSSetEndpointAttributesInput!, config: AwsConfig): JSON
  setPlatformApplicationAttributes(input: AwsSNSSetPlatformApplicationAttributesInput!, config: AwsConfig): JSON
  setSMSAttributes(input: AwsSNSSetSMSAttributesInput!, config: AwsConfig): JSON
  setSubscriptionAttributes(input: AwsSNSSetSubscriptionAttributesInput!, config: AwsConfig): JSON
  setTopicAttributes(input: AwsSNSSetTopicAttributesInput!, config: AwsConfig): JSON
  subscribe(input: AwsSNSSubscribeInput!, config: AwsConfig): AwsSNSSubscribeOutput
  tagResource(input: AwsSNSTagResourceInput!, config: AwsConfig): JSON
  unsubscribe(input: AwsSNSUnsubscribeInput!, config: AwsConfig): JSON
  untagResource(input: AwsSNSUntagResourceInput!, config: AwsConfig): JSON
}

input AwsSNSAddPermissionInput {
  TopicArn: String!
  Label: String!
  AWSAccountId: [String]!
  ActionName: [String]!
}

input AwsSNSCheckIfPhoneNumberIsOptedOutInput {
  phoneNumber: String!
}

type AwsSNSCheckIfPhoneNumberIsOptedOutOutput {
  isOptedOut: Boolean
}

input AwsSNSConfirmSubscriptionInput {
  TopicArn: String!
  Token: String!
  AuthenticateOnUnsubscribe: String
}

type AwsSNSConfirmSubscriptionOutput {
  SubscriptionArn: String
}

input AwsSNSCreatePlatformApplicationInput {
  Name: String!
  Platform: String!
  Attributes: JSON!
}

type AwsSNSCreatePlatformApplicationOutput {
  PlatformApplicationArn: String
}

input AwsSNSCreatePlatformEndpointInput {
  PlatformApplicationArn: String!
  Token: String!
  CustomUserData: String
  Attributes: JSON
}

type AwsSNSCreatePlatformEndpointOutput {
  EndpointArn: String
}

input AwsSNSCreateTopicInput {
  Name: String!
  Attributes: JSON
  Tags: [AwsSNSSsInput]
}

type AwsSNSCreateTopicOutput {
  TopicArn: String
}

input AwsSNSDeleteEndpointInput {
  EndpointArn: String!
}

input AwsSNSDeletePlatformApplicationInput {
  PlatformApplicationArn: String!
}

input AwsSNSDeleteTopicInput {
  TopicArn: String!
}

input AwsSNSGetEndpointAttributesInput {
  EndpointArn: String!
}

type AwsSNSGetEndpointAttributesOutput {
  Attributes: JSON
}

input AwsSNSGetPlatformApplicationAttributesInput {
  PlatformApplicationArn: String!
}

type AwsSNSGetPlatformApplicationAttributesOutput {
  Attributes: JSON
}

input AwsSNSGetSMSAttributesInput {
  attributes: [String]
}

type AwsSNSGetSMSAttributesOutput {
  attributes: JSON
}

input AwsSNSGetSubscriptionAttributesInput {
  SubscriptionArn: String!
}

type AwsSNSGetSubscriptionAttributesOutput {
  Attributes: JSON
}

input AwsSNSGetTopicAttributesInput {
  TopicArn: String!
}

type AwsSNSGetTopicAttributesOutput {
  Attributes: JSON
}

input AwsSNSListEndpointsByPlatformApplicationInput {
  PlatformApplicationArn: String!
  NextToken: String
}

type AwsSNSListEndpointsByPlatformApplicationOutput {
  Endpoints: [AwsSNSListEndpointsByPlatformApplicationOutputEndpoints]
  NextToken: String
}

type AwsSNSListEndpointsByPlatformApplicationOutputEndpoints {
  EndpointArn: String
  Attributes: JSON
}

input AwsSNSListPhoneNumbersOptedOutInput {
  nextToken: String
}

type AwsSNSListPhoneNumbersOptedOutOutput {
  phoneNumbers: [String]
  nextToken: String
}

input AwsSNSListPlatformApplicationsInput {
  NextToken: String
}

type AwsSNSListPlatformApplicationsOutput {
  PlatformApplications: [AwsSNSListPlatformApplicationsOutputPlatformApplications]
  NextToken: String
}

type AwsSNSListPlatformApplicationsOutputPlatformApplications {
  PlatformApplicationArn: String
  Attributes: JSON
}

input AwsSNSListSubscriptionsByTopicInput {
  TopicArn: String!
  NextToken: String
}

type AwsSNSListSubscriptionsByTopicOutput {
  Subscriptions: [AwsSNSS1r]
  NextToken: String
}

input AwsSNSListSubscriptionsInput {
  NextToken: String
}

type AwsSNSListSubscriptionsOutput {
  Subscriptions: [AwsSNSS1r]
  NextToken: String
}

input AwsSNSListTagsForResourceInput {
  ResourceArn: String!
}

type AwsSNSListTagsForResourceOutput {
  Tags: [AwsSNSSs]
}

input AwsSNSListTopicsInput {
  NextToken: String
}

type AwsSNSListTopicsOutput {
  Topics: [AwsSNSListTopicsOutputTopics]
  NextToken: String
}

type AwsSNSListTopicsOutputTopics {
  TopicArn: String
}

input AwsSNSOptInPhoneNumberInput {
  phoneNumber: String!
}

input AwsSNSPublishInput {
  TopicArn: String
  TargetArn: String
  PhoneNumber: String
  Message: String!
  Subject: String
  MessageStructure: String
  MessageAttributes: JSON
}

type AwsSNSPublishOutput {
  MessageId: String
}

input AwsSNSRemovePermissionInput {
  TopicArn: String!
  Label: String!
}

type AwsSNSS1r {
  SubscriptionArn: String
  Owner: String
  Protocol: String
  Endpoint: String
  TopicArn: String
}

input AwsSNSSetEndpointAttributesInput {
  EndpointArn: String!
  Attributes: JSON!
}

input AwsSNSSetPlatformApplicationAttributesInput {
  PlatformApplicationArn: String!
  Attributes: JSON!
}

input AwsSNSSetSMSAttributesInput {
  attributes: JSON!
}

input AwsSNSSetSubscriptionAttributesInput {
  SubscriptionArn: String!
  AttributeName: String!
  AttributeValue: String
}

input AwsSNSSetTopicAttributesInput {
  TopicArn: String!
  AttributeName: String!
  AttributeValue: String
}

type AwsSNSSs {
  Key: String!
  Value: String!
}

input AwsSNSSsInput {
  Key: String!
  Value: String!
}

input AwsSNSSubscribeInput {
  TopicArn: String!
  Protocol: String!
  Endpoint: String
  Attributes: JSON
  ReturnSubscriptionArn: Boolean
}

type AwsSNSSubscribeOutput {
  SubscriptionArn: String
}

input AwsSNSTagResourceInput {
  ResourceArn: String!
  Tags: [AwsSNSSsInput]!
}

input AwsSNSUnsubscribeInput {
  SubscriptionArn: String!
}

input AwsSNSUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

"""Amazon Simple Queue Service (2012-11-05)"""
type AwsSQS {
  addPermission(input: AwsSQSAddPermissionInput!, config: AwsConfig): JSON
  changeMessageVisibility(input: AwsSQSChangeMessageVisibilityInput!, config: AwsConfig): JSON
  changeMessageVisibilityBatch(input: AwsSQSChangeMessageVisibilityBatchInput!, config: AwsConfig): AwsSQSChangeMessageVisibilityBatchOutput
  createQueue(input: AwsSQSCreateQueueInput!, config: AwsConfig): AwsSQSCreateQueueOutput
  deleteMessage(input: AwsSQSDeleteMessageInput!, config: AwsConfig): JSON
  deleteMessageBatch(input: AwsSQSDeleteMessageBatchInput!, config: AwsConfig): AwsSQSDeleteMessageBatchOutput
  deleteQueue(input: AwsSQSDeleteQueueInput!, config: AwsConfig): JSON
  getQueueAttributes(input: AwsSQSGetQueueAttributesInput!, config: AwsConfig): AwsSQSGetQueueAttributesOutput
  getQueueUrl(input: AwsSQSGetQueueUrlInput!, config: AwsConfig): AwsSQSGetQueueUrlOutput
  listDeadLetterSourceQueues(input: AwsSQSListDeadLetterSourceQueuesInput!, config: AwsConfig): AwsSQSListDeadLetterSourceQueuesOutput
  listQueueTags(input: AwsSQSListQueueTagsInput!, config: AwsConfig): AwsSQSListQueueTagsOutput
  listQueues(input: AwsSQSListQueuesInput, config: AwsConfig): AwsSQSListQueuesOutput
  purgeQueue(input: AwsSQSPurgeQueueInput!, config: AwsConfig): JSON
  receiveMessage(input: AwsSQSReceiveMessageInput!, config: AwsConfig): AwsSQSReceiveMessageOutput
  removePermission(input: AwsSQSRemovePermissionInput!, config: AwsConfig): JSON
  sendMessage(input: AwsSQSSendMessageInput!, config: AwsConfig): AwsSQSSendMessageOutput
  sendMessageBatch(input: AwsSQSSendMessageBatchInput!, config: AwsConfig): AwsSQSSendMessageBatchOutput
  setQueueAttributes(input: AwsSQSSetQueueAttributesInput!, config: AwsConfig): JSON
  tagQueue(input: AwsSQSTagQueueInput!, config: AwsConfig): JSON
  untagQueue(input: AwsSQSUntagQueueInput!, config: AwsConfig): JSON
}

input AwsSQSAddPermissionInput {
  QueueUrl: String!
  Label: String!
  AWSAccountIds: [String]!
  Actions: [String]!
}

input AwsSQSChangeMessageVisibilityBatchEntriesInput {
  Id: String!
  ReceiptHandle: String!
  VisibilityTimeout: Int
}

input AwsSQSChangeMessageVisibilityBatchInput {
  QueueUrl: String!
  Entries: [AwsSQSChangeMessageVisibilityBatchEntriesInput]!
}

type AwsSQSChangeMessageVisibilityBatchOutput {
  Successful: [AwsSQSChangeMessageVisibilityBatchOutputSuccessful]!
  Failed: [AwsSQSSd]!
}

type AwsSQSChangeMessageVisibilityBatchOutputSuccessful {
  Id: String!
}

input AwsSQSChangeMessageVisibilityInput {
  QueueUrl: String!
  ReceiptHandle: String!
  VisibilityTimeout: Int!
}

input AwsSQSCreateQueueInput {
  QueueName: String!
  Attributes: JSON
}

type AwsSQSCreateQueueOutput {
  QueueUrl: String
}

input AwsSQSDeleteMessageBatchEntriesInput {
  Id: String!
  ReceiptHandle: String!
}

input AwsSQSDeleteMessageBatchInput {
  QueueUrl: String!
  Entries: [AwsSQSDeleteMessageBatchEntriesInput]!
}

type AwsSQSDeleteMessageBatchOutput {
  Successful: [AwsSQSDeleteMessageBatchOutputSuccessful]!
  Failed: [AwsSQSSd]!
}

type AwsSQSDeleteMessageBatchOutputSuccessful {
  Id: String!
}

input AwsSQSDeleteMessageInput {
  QueueUrl: String!
  ReceiptHandle: String!
}

input AwsSQSDeleteQueueInput {
  QueueUrl: String!
}

input AwsSQSGetQueueAttributesInput {
  QueueUrl: String!
  AttributeNames: [String]
}

type AwsSQSGetQueueAttributesOutput {
  Attributes: JSON
}

input AwsSQSGetQueueUrlInput {
  QueueName: String!
  QueueOwnerAWSAccountId: String
}

type AwsSQSGetQueueUrlOutput {
  QueueUrl: String
}

input AwsSQSListDeadLetterSourceQueuesInput {
  QueueUrl: String!
}

type AwsSQSListDeadLetterSourceQueuesOutput {
  queueUrls: [String]!
}

input AwsSQSListQueuesInput {
  QueueNamePrefix: String
}

type AwsSQSListQueuesOutput {
  QueueUrls: [String]
}

input AwsSQSListQueueTagsInput {
  QueueUrl: String!
}

type AwsSQSListQueueTagsOutput {
  Tags: JSON
}

input AwsSQSPurgeQueueInput {
  QueueUrl: String!
}

input AwsSQSReceiveMessageInput {
  QueueUrl: String!
  AttributeNames: [String]
  MessageAttributeNames: [String]
  MaxNumberOfMessages: Int
  VisibilityTimeout: Int
  WaitTimeSeconds: Int
  ReceiveRequestAttemptId: String
}

type AwsSQSReceiveMessageOutput {
  Messages: [AwsSQSReceiveMessageOutputMessages]
}

type AwsSQSReceiveMessageOutputMessages {
  MessageId: String
  ReceiptHandle: String
  MD5OfBody: String
  Body: String
  Attributes: JSON
  MD5OfMessageAttributes: String
  MessageAttributes: JSON
}

input AwsSQSRemovePermissionInput {
  QueueUrl: String!
  Label: String!
}

type AwsSQSSd {
  Id: String!
  SenderFault: Boolean!
  Code: String!
  Message: String
}

input AwsSQSSendMessageBatchEntriesInput {
  Id: String!
  MessageBody: String!
  DelaySeconds: Int
  MessageAttributes: JSON
  MessageDeduplicationId: String
  MessageGroupId: String
}

input AwsSQSSendMessageBatchInput {
  QueueUrl: String!
  Entries: [AwsSQSSendMessageBatchEntriesInput]!
}

type AwsSQSSendMessageBatchOutput {
  Successful: [AwsSQSSendMessageBatchOutputSuccessful]!
  Failed: [AwsSQSSd]!
}

type AwsSQSSendMessageBatchOutputSuccessful {
  Id: String!
  MessageId: String!
  MD5OfMessageBody: String!
  MD5OfMessageAttributes: String
  SequenceNumber: String
}

input AwsSQSSendMessageInput {
  QueueUrl: String!
  MessageBody: String!
  DelaySeconds: Int
  MessageAttributes: JSON
  MessageDeduplicationId: String
  MessageGroupId: String
}

type AwsSQSSendMessageOutput {
  MD5OfMessageBody: String
  MD5OfMessageAttributes: String
  MessageId: String
  SequenceNumber: String
}

input AwsSQSSetQueueAttributesInput {
  QueueUrl: String!
  Attributes: JSON!
}

input AwsSQSTagQueueInput {
  QueueUrl: String!
  Tags: JSON!
}

input AwsSQSUntagQueueInput {
  QueueUrl: String!
  TagKeys: [String]!
}

"""Amazon Simple Systems Manager (SSM) (2014-11-06)"""
type AwsSSM {
  addTagsToResource(input: AwsSSMAddTagsToResourceInput!, config: AwsConfig): JSON
  cancelCommand(input: AwsSSMCancelCommandInput!, config: AwsConfig): JSON
  cancelMaintenanceWindowExecution(input: AwsSSMCancelMaintenanceWindowExecutionInput!, config: AwsConfig): AwsSSMCancelMaintenanceWindowExecutionOutput
  createActivation(input: AwsSSMCreateActivationInput!, config: AwsConfig): AwsSSMCreateActivationOutput
  createAssociation(input: AwsSSMCreateAssociationInput!, config: AwsConfig): AwsSSMCreateAssociationOutput
  createAssociationBatch(input: AwsSSMCreateAssociationBatchInput!, config: AwsConfig): AwsSSMCreateAssociationBatchOutput
  createDocument(input: AwsSSMCreateDocumentInput!, config: AwsConfig): AwsSSMCreateDocumentOutput
  createMaintenanceWindow(input: AwsSSMCreateMaintenanceWindowInput!, config: AwsConfig): AwsSSMCreateMaintenanceWindowOutput
  createOpsItem(input: AwsSSMCreateOpsItemInput!, config: AwsConfig): AwsSSMCreateOpsItemOutput
  createPatchBaseline(input: AwsSSMCreatePatchBaselineInput!, config: AwsConfig): AwsSSMCreatePatchBaselineOutput
  createResourceDataSync(input: AwsSSMCreateResourceDataSyncInput!, config: AwsConfig): JSON
  deleteActivation(input: AwsSSMDeleteActivationInput!, config: AwsConfig): JSON
  deleteAssociation(input: AwsSSMDeleteAssociationInput, config: AwsConfig): JSON
  deleteDocument(input: AwsSSMDeleteDocumentInput!, config: AwsConfig): JSON
  deleteInventory(input: AwsSSMDeleteInventoryInput!, config: AwsConfig): AwsSSMDeleteInventoryOutput
  deleteMaintenanceWindow(input: AwsSSMDeleteMaintenanceWindowInput!, config: AwsConfig): AwsSSMDeleteMaintenanceWindowOutput
  deleteParameter(input: AwsSSMDeleteParameterInput!, config: AwsConfig): JSON
  deleteParameters(input: AwsSSMDeleteParametersInput!, config: AwsConfig): AwsSSMDeleteParametersOutput
  deletePatchBaseline(input: AwsSSMDeletePatchBaselineInput!, config: AwsConfig): AwsSSMDeletePatchBaselineOutput
  deleteResourceDataSync(input: AwsSSMDeleteResourceDataSyncInput!, config: AwsConfig): JSON
  deregisterManagedInstance(input: AwsSSMDeregisterManagedInstanceInput!, config: AwsConfig): JSON
  deregisterPatchBaselineForPatchGroup(input: AwsSSMDeregisterPatchBaselineForPatchGroupInput!, config: AwsConfig): AwsSSMDeregisterPatchBaselineForPatchGroupOutput
  deregisterTargetFromMaintenanceWindow(input: AwsSSMDeregisterTargetFromMaintenanceWindowInput!, config: AwsConfig): AwsSSMDeregisterTargetFromMaintenanceWindowOutput
  deregisterTaskFromMaintenanceWindow(input: AwsSSMDeregisterTaskFromMaintenanceWindowInput!, config: AwsConfig): AwsSSMDeregisterTaskFromMaintenanceWindowOutput
  describeActivations(input: AwsSSMDescribeActivationsInput, config: AwsConfig): AwsSSMDescribeActivationsOutput
  describeAssociation(input: AwsSSMDescribeAssociationInput, config: AwsConfig): AwsSSMDescribeAssociationOutput
  describeAssociationExecutionTargets(input: AwsSSMDescribeAssociationExecutionTargetsInput!, config: AwsConfig): AwsSSMDescribeAssociationExecutionTargetsOutput
  describeAssociationExecutions(input: AwsSSMDescribeAssociationExecutionsInput!, config: AwsConfig): AwsSSMDescribeAssociationExecutionsOutput
  describeAutomationExecutions(input: AwsSSMDescribeAutomationExecutionsInput, config: AwsConfig): AwsSSMDescribeAutomationExecutionsOutput
  describeAutomationStepExecutions(input: AwsSSMDescribeAutomationStepExecutionsInput!, config: AwsConfig): AwsSSMDescribeAutomationStepExecutionsOutput
  describeAvailablePatches(input: AwsSSMDescribeAvailablePatchesInput, config: AwsConfig): AwsSSMDescribeAvailablePatchesOutput
  describeDocument(input: AwsSSMDescribeDocumentInput!, config: AwsConfig): AwsSSMDescribeDocumentOutput
  describeDocumentPermission(input: AwsSSMDescribeDocumentPermissionInput!, config: AwsConfig): AwsSSMDescribeDocumentPermissionOutput
  describeEffectiveInstanceAssociations(input: AwsSSMDescribeEffectiveInstanceAssociationsInput!, config: AwsConfig): AwsSSMDescribeEffectiveInstanceAssociationsOutput
  describeEffectivePatchesForPatchBaseline(input: AwsSSMDescribeEffectivePatchesForPatchBaselineInput!, config: AwsConfig): AwsSSMDescribeEffectivePatchesForPatchBaselineOutput
  describeInstanceAssociationsStatus(input: AwsSSMDescribeInstanceAssociationsStatusInput!, config: AwsConfig): AwsSSMDescribeInstanceAssociationsStatusOutput
  describeInstanceInformation(input: AwsSSMDescribeInstanceInformationInput, config: AwsConfig): AwsSSMDescribeInstanceInformationOutput
  describeInstancePatchStates(input: AwsSSMDescribeInstancePatchStatesInput!, config: AwsConfig): AwsSSMDescribeInstancePatchStatesOutput
  describeInstancePatchStatesForPatchGroup(input: AwsSSMDescribeInstancePatchStatesForPatchGroupInput!, config: AwsConfig): AwsSSMDescribeInstancePatchStatesForPatchGroupOutput
  describeInstancePatches(input: AwsSSMDescribeInstancePatchesInput!, config: AwsConfig): AwsSSMDescribeInstancePatchesOutput
  describeInventoryDeletions(input: AwsSSMDescribeInventoryDeletionsInput, config: AwsConfig): AwsSSMDescribeInventoryDeletionsOutput
  describeMaintenanceWindowExecutionTaskInvocations(input: AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsOutput
  describeMaintenanceWindowExecutionTasks(input: AwsSSMDescribeMaintenanceWindowExecutionTasksInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowExecutionTasksOutput
  describeMaintenanceWindowExecutions(input: AwsSSMDescribeMaintenanceWindowExecutionsInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowExecutionsOutput
  describeMaintenanceWindowSchedule(input: AwsSSMDescribeMaintenanceWindowScheduleInput, config: AwsConfig): AwsSSMDescribeMaintenanceWindowScheduleOutput
  describeMaintenanceWindowTargets(input: AwsSSMDescribeMaintenanceWindowTargetsInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowTargetsOutput
  describeMaintenanceWindowTasks(input: AwsSSMDescribeMaintenanceWindowTasksInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowTasksOutput
  describeMaintenanceWindows(input: AwsSSMDescribeMaintenanceWindowsInput, config: AwsConfig): AwsSSMDescribeMaintenanceWindowsOutput
  describeMaintenanceWindowsForTarget(input: AwsSSMDescribeMaintenanceWindowsForTargetInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowsForTargetOutput
  describeOpsItems(input: AwsSSMDescribeOpsItemsInput, config: AwsConfig): AwsSSMDescribeOpsItemsOutput
  describeParameters(input: AwsSSMDescribeParametersInput, config: AwsConfig): AwsSSMDescribeParametersOutput
  describePatchBaselines(input: AwsSSMDescribePatchBaselinesInput, config: AwsConfig): AwsSSMDescribePatchBaselinesOutput
  describePatchGroupState(input: AwsSSMDescribePatchGroupStateInput!, config: AwsConfig): AwsSSMDescribePatchGroupStateOutput
  describePatchGroups(input: AwsSSMDescribePatchGroupsInput, config: AwsConfig): AwsSSMDescribePatchGroupsOutput
  describePatchProperties(input: AwsSSMDescribePatchPropertiesInput!, config: AwsConfig): AwsSSMDescribePatchPropertiesOutput
  describeSessions(input: AwsSSMDescribeSessionsInput!, config: AwsConfig): AwsSSMDescribeSessionsOutput
  getAutomationExecution(input: AwsSSMGetAutomationExecutionInput!, config: AwsConfig): AwsSSMGetAutomationExecutionOutput
  getCommandInvocation(input: AwsSSMGetCommandInvocationInput!, config: AwsConfig): AwsSSMGetCommandInvocationOutput
  getConnectionStatus(input: AwsSSMGetConnectionStatusInput!, config: AwsConfig): AwsSSMGetConnectionStatusOutput
  getDefaultPatchBaseline(input: AwsSSMGetDefaultPatchBaselineInput, config: AwsConfig): AwsSSMGetDefaultPatchBaselineOutput
  getDeployablePatchSnapshotForInstance(input: AwsSSMGetDeployablePatchSnapshotForInstanceInput!, config: AwsConfig): AwsSSMGetDeployablePatchSnapshotForInstanceOutput
  getDocument(input: AwsSSMGetDocumentInput!, config: AwsConfig): AwsSSMGetDocumentOutput
  getInventory(input: AwsSSMGetInventoryInput, config: AwsConfig): AwsSSMGetInventoryOutput
  getInventorySchema(input: AwsSSMGetInventorySchemaInput, config: AwsConfig): AwsSSMGetInventorySchemaOutput
  getMaintenanceWindow(input: AwsSSMGetMaintenanceWindowInput!, config: AwsConfig): AwsSSMGetMaintenanceWindowOutput
  getMaintenanceWindowExecution(input: AwsSSMGetMaintenanceWindowExecutionInput!, config: AwsConfig): AwsSSMGetMaintenanceWindowExecutionOutput
  getMaintenanceWindowExecutionTask(input: AwsSSMGetMaintenanceWindowExecutionTaskInput!, config: AwsConfig): AwsSSMGetMaintenanceWindowExecutionTaskOutput
  getMaintenanceWindowExecutionTaskInvocation(input: AwsSSMGetMaintenanceWindowExecutionTaskInvocationInput!, config: AwsConfig): AwsSSMGetMaintenanceWindowExecutionTaskInvocationOutput
  getMaintenanceWindowTask(input: AwsSSMGetMaintenanceWindowTaskInput!, config: AwsConfig): AwsSSMGetMaintenanceWindowTaskOutput
  getOpsItem(input: AwsSSMGetOpsItemInput!, config: AwsConfig): AwsSSMGetOpsItemOutput
  getOpsSummary(input: AwsSSMGetOpsSummaryInput!, config: AwsConfig): AwsSSMGetOpsSummaryOutput
  getParameter(input: AwsSSMGetParameterInput!, config: AwsConfig): AwsSSMGetParameterOutput
  getParameterHistory(input: AwsSSMGetParameterHistoryInput!, config: AwsConfig): AwsSSMGetParameterHistoryOutput
  getParameters(input: AwsSSMGetParametersInput!, config: AwsConfig): AwsSSMGetParametersOutput
  getParametersByPath(input: AwsSSMGetParametersByPathInput!, config: AwsConfig): AwsSSMGetParametersByPathOutput
  getPatchBaseline(input: AwsSSMGetPatchBaselineInput!, config: AwsConfig): AwsSSMGetPatchBaselineOutput
  getPatchBaselineForPatchGroup(input: AwsSSMGetPatchBaselineForPatchGroupInput!, config: AwsConfig): AwsSSMGetPatchBaselineForPatchGroupOutput
  getServiceSetting(input: AwsSSMGetServiceSettingInput!, config: AwsConfig): AwsSSMGetServiceSettingOutput
  labelParameterVersion(input: AwsSSMLabelParameterVersionInput!, config: AwsConfig): AwsSSMLabelParameterVersionOutput
  listAssociationVersions(input: AwsSSMListAssociationVersionsInput!, config: AwsConfig): AwsSSMListAssociationVersionsOutput
  listAssociations(input: AwsSSMListAssociationsInput, config: AwsConfig): AwsSSMListAssociationsOutput
  listCommandInvocations(input: AwsSSMListCommandInvocationsInput, config: AwsConfig): AwsSSMListCommandInvocationsOutput
  listCommands(input: AwsSSMListCommandsInput, config: AwsConfig): AwsSSMListCommandsOutput
  listComplianceItems(input: AwsSSMListComplianceItemsInput, config: AwsConfig): AwsSSMListComplianceItemsOutput
  listComplianceSummaries(input: AwsSSMListComplianceSummariesInput, config: AwsConfig): AwsSSMListComplianceSummariesOutput
  listDocumentVersions(input: AwsSSMListDocumentVersionsInput!, config: AwsConfig): AwsSSMListDocumentVersionsOutput
  listDocuments(input: AwsSSMListDocumentsInput, config: AwsConfig): AwsSSMListDocumentsOutput
  listInventoryEntries(input: AwsSSMListInventoryEntriesInput!, config: AwsConfig): AwsSSMListInventoryEntriesOutput
  listResourceComplianceSummaries(input: AwsSSMListResourceComplianceSummariesInput, config: AwsConfig): AwsSSMListResourceComplianceSummariesOutput
  listResourceDataSync(input: AwsSSMListResourceDataSyncInput, config: AwsConfig): AwsSSMListResourceDataSyncOutput
  listTagsForResource(input: AwsSSMListTagsForResourceInput!, config: AwsConfig): AwsSSMListTagsForResourceOutput
  modifyDocumentPermission(input: AwsSSMModifyDocumentPermissionInput!, config: AwsConfig): JSON
  putComplianceItems(input: AwsSSMPutComplianceItemsInput!, config: AwsConfig): JSON
  putInventory(input: AwsSSMPutInventoryInput!, config: AwsConfig): AwsSSMPutInventoryOutput
  putParameter(input: AwsSSMPutParameterInput!, config: AwsConfig): AwsSSMPutParameterOutput
  registerDefaultPatchBaseline(input: AwsSSMRegisterDefaultPatchBaselineInput!, config: AwsConfig): AwsSSMRegisterDefaultPatchBaselineOutput
  registerPatchBaselineForPatchGroup(input: AwsSSMRegisterPatchBaselineForPatchGroupInput!, config: AwsConfig): AwsSSMRegisterPatchBaselineForPatchGroupOutput
  registerTargetWithMaintenanceWindow(input: AwsSSMRegisterTargetWithMaintenanceWindowInput!, config: AwsConfig): AwsSSMRegisterTargetWithMaintenanceWindowOutput
  registerTaskWithMaintenanceWindow(input: AwsSSMRegisterTaskWithMaintenanceWindowInput!, config: AwsConfig): AwsSSMRegisterTaskWithMaintenanceWindowOutput
  removeTagsFromResource(input: AwsSSMRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  resetServiceSetting(input: AwsSSMResetServiceSettingInput!, config: AwsConfig): AwsSSMResetServiceSettingOutput
  resumeSession(input: AwsSSMResumeSessionInput!, config: AwsConfig): AwsSSMResumeSessionOutput
  sendAutomationSignal(input: AwsSSMSendAutomationSignalInput!, config: AwsConfig): JSON
  sendCommand(input: AwsSSMSendCommandInput!, config: AwsConfig): AwsSSMSendCommandOutput
  startAssociationsOnce(input: AwsSSMStartAssociationsOnceInput!, config: AwsConfig): JSON
  startAutomationExecution(input: AwsSSMStartAutomationExecutionInput!, config: AwsConfig): AwsSSMStartAutomationExecutionOutput
  startSession(input: AwsSSMStartSessionInput!, config: AwsConfig): AwsSSMStartSessionOutput
  stopAutomationExecution(input: AwsSSMStopAutomationExecutionInput!, config: AwsConfig): JSON
  terminateSession(input: AwsSSMTerminateSessionInput!, config: AwsConfig): AwsSSMTerminateSessionOutput
  updateAssociation(input: AwsSSMUpdateAssociationInput!, config: AwsConfig): AwsSSMUpdateAssociationOutput
  updateAssociationStatus(input: AwsSSMUpdateAssociationStatusInput!, config: AwsConfig): AwsSSMUpdateAssociationStatusOutput
  updateDocument(input: AwsSSMUpdateDocumentInput!, config: AwsConfig): AwsSSMUpdateDocumentOutput
  updateDocumentDefaultVersion(input: AwsSSMUpdateDocumentDefaultVersionInput!, config: AwsConfig): AwsSSMUpdateDocumentDefaultVersionOutput
  updateMaintenanceWindow(input: AwsSSMUpdateMaintenanceWindowInput!, config: AwsConfig): AwsSSMUpdateMaintenanceWindowOutput
  updateMaintenanceWindowTarget(input: AwsSSMUpdateMaintenanceWindowTargetInput!, config: AwsConfig): AwsSSMUpdateMaintenanceWindowTargetOutput
  updateMaintenanceWindowTask(input: AwsSSMUpdateMaintenanceWindowTaskInput!, config: AwsConfig): AwsSSMUpdateMaintenanceWindowTaskOutput
  updateManagedInstanceRole(input: AwsSSMUpdateManagedInstanceRoleInput!, config: AwsConfig): JSON
  updateOpsItem(input: AwsSSMUpdateOpsItemInput!, config: AwsConfig): JSON
  updatePatchBaseline(input: AwsSSMUpdatePatchBaselineInput!, config: AwsConfig): AwsSSMUpdatePatchBaselineOutput
  updateServiceSetting(input: AwsSSMUpdateServiceSettingInput!, config: AwsConfig): JSON
}

input AwsSSMAddTagsToResourceInput {
  ResourceType: String!
  ResourceId: String!
  Tags: [AwsSSMS4Input]!
}

input AwsSSMCancelCommandInput {
  CommandId: String!
  InstanceIds: [String]
}

input AwsSSMCancelMaintenanceWindowExecutionInput {
  WindowExecutionId: String!
}

type AwsSSMCancelMaintenanceWindowExecutionOutput {
  WindowExecutionId: String
}

input AwsSSMCreateActivationInput {
  Description: String
  DefaultInstanceName: String
  IamRole: String!
  RegistrationLimit: Int
  ExpirationDate: Date
  Tags: [AwsSSMS4Input]
}

type AwsSSMCreateActivationOutput {
  ActivationId: String
  ActivationCode: String
}

input AwsSSMCreateAssociationBatchInput {
  Entries: [AwsSSMS1sInput]!
}

type AwsSSMCreateAssociationBatchOutput {
  Successful: [AwsSSMS1e]
  Failed: [AwsSSMCreateAssociationBatchOutputFailed]
}

type AwsSSMCreateAssociationBatchOutputFailed {
  Entry: AwsSSMS1s
  Message: String
  Fault: String
}

input AwsSSMCreateAssociationInput {
  Name: String!
  DocumentVersion: String
  InstanceId: String
  Parameters: JSON
  Targets: [AwsSSMSxInput]
  ScheduleExpression: String
  OutputLocation: AwsSSMS13Input
  AssociationName: String
  AutomationTargetParameterName: String
  MaxErrors: String
  MaxConcurrency: String
  ComplianceSeverity: String
}

type AwsSSMCreateAssociationOutput {
  AssociationDescription: AwsSSMS1e
}

input AwsSSMCreateDocumentInput {
  Content: String!
  Attachments: [AwsSSMS21Input]
  Name: String!
  VersionName: String
  DocumentType: String
  DocumentFormat: String
  TargetType: String
  Tags: [AwsSSMS4Input]
}

type AwsSSMCreateDocumentOutput {
  DocumentDescription: AwsSSMS2c
}

input AwsSSMCreateMaintenanceWindowInput {
  Name: String!
  Description: String
  StartDate: String
  EndDate: String
  Schedule: String!
  ScheduleTimezone: String
  Duration: Int!
  Cutoff: Int!
  AllowUnassociatedTargets: Boolean!
  ClientToken: String
  Tags: [AwsSSMS4Input]
}

type AwsSSMCreateMaintenanceWindowOutput {
  WindowId: String
}

input AwsSSMCreateOpsItemInput {
  Description: String!
  OperationalData: JSON
  Notifications: [AwsSSMS3fInput]
  Priority: Int
  RelatedOpsItems: [AwsSSMS3jInput]
  Source: String!
  Title: String!
  Tags: [AwsSSMS4Input]
}

type AwsSSMCreateOpsItemOutput {
  OpsItemId: String
}

input AwsSSMCreatePatchBaselineInput {
  OperatingSystem: String
  Name: String!
  GlobalFilters: AwsSSMS3rInput
  ApprovalRules: AwsSSMS3xInput
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  ApprovedPatchesEnableNonSecurity: Boolean
  RejectedPatches: [String]
  RejectedPatchesAction: String
  Description: String
  Sources: [AwsSSMS47Input]
  ClientToken: String
  Tags: [AwsSSMS4Input]
}

type AwsSSMCreatePatchBaselineOutput {
  BaselineId: String
}

input AwsSSMCreateResourceDataSyncInput {
  SyncName: String!
  S3Destination: AwsSSMS4hInput!
}

input AwsSSMDeleteActivationInput {
  ActivationId: String!
}

input AwsSSMDeleteAssociationInput {
  Name: String
  InstanceId: String
  AssociationId: String
}

input AwsSSMDeleteDocumentInput {
  Name: String!
  DocumentVersion: String
  VersionName: String
}

input AwsSSMDeleteInventoryInput {
  TypeName: String!
  SchemaDeleteOption: String
  DryRun: Boolean
  ClientToken: String
}

type AwsSSMDeleteInventoryOutput {
  DeletionId: String
  TypeName: String
  DeletionSummary: AwsSSMS50
}

input AwsSSMDeleteMaintenanceWindowInput {
  WindowId: String!
}

type AwsSSMDeleteMaintenanceWindowOutput {
  WindowId: String
}

input AwsSSMDeleteParameterInput {
  Name: String!
}

input AwsSSMDeleteParametersInput {
  Names: [String]!
}

type AwsSSMDeleteParametersOutput {
  DeletedParameters: [String]
  InvalidParameters: [String]
}

input AwsSSMDeletePatchBaselineInput {
  BaselineId: String!
}

type AwsSSMDeletePatchBaselineOutput {
  BaselineId: String
}

input AwsSSMDeleteResourceDataSyncInput {
  SyncName: String!
}

input AwsSSMDeregisterManagedInstanceInput {
  InstanceId: String!
}

input AwsSSMDeregisterPatchBaselineForPatchGroupInput {
  BaselineId: String!
  PatchGroup: String!
}

type AwsSSMDeregisterPatchBaselineForPatchGroupOutput {
  BaselineId: String
  PatchGroup: String
}

input AwsSSMDeregisterTargetFromMaintenanceWindowInput {
  WindowId: String!
  WindowTargetId: String!
  Safe: Boolean
}

type AwsSSMDeregisterTargetFromMaintenanceWindowOutput {
  WindowId: String
  WindowTargetId: String
}

input AwsSSMDeregisterTaskFromMaintenanceWindowInput {
  WindowId: String!
  WindowTaskId: String!
}

type AwsSSMDeregisterTaskFromMaintenanceWindowOutput {
  WindowId: String
  WindowTaskId: String
}

input AwsSSMDescribeActivationsFiltersInput {
  FilterKey: String
  FilterValues: [String]
}

input AwsSSMDescribeActivationsInput {
  Filters: [AwsSSMDescribeActivationsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeActivationsOutput {
  ActivationList: [AwsSSMDescribeActivationsOutputActivationList]
  NextToken: String
}

type AwsSSMDescribeActivationsOutputActivationList {
  ActivationId: String
  Description: String
  DefaultInstanceName: String
  IamRole: String
  RegistrationLimit: Int
  RegistrationsCount: Int
  ExpirationDate: Date
  Expired: Boolean
  CreatedDate: Date
  Tags: [AwsSSMS4]
}

input AwsSSMDescribeAssociationExecutionsFiltersInput {
  Key: String!
  Value: String!
  Type: String!
}

input AwsSSMDescribeAssociationExecutionsInput {
  AssociationId: String!
  Filters: [AwsSSMDescribeAssociationExecutionsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeAssociationExecutionsOutput {
  AssociationExecutions: [AwsSSMDescribeAssociationExecutionsOutputAssociationExecutions]
  NextToken: String
}

type AwsSSMDescribeAssociationExecutionsOutputAssociationExecutions {
  AssociationId: String
  AssociationVersion: String
  ExecutionId: String
  Status: String
  DetailedStatus: String
  CreatedTime: Date
  LastExecutionDate: Date
  ResourceCountByStatus: String
}

input AwsSSMDescribeAssociationExecutionTargetsFiltersInput {
  Key: String!
  Value: String!
}

input AwsSSMDescribeAssociationExecutionTargetsInput {
  AssociationId: String!
  ExecutionId: String!
  Filters: [AwsSSMDescribeAssociationExecutionTargetsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeAssociationExecutionTargetsOutput {
  AssociationExecutionTargets: [AwsSSMDescribeAssociationExecutionTargetsOutputAssociationExecutionTargets]
  NextToken: String
}

type AwsSSMDescribeAssociationExecutionTargetsOutputAssociationExecutionTargets {
  AssociationId: String
  AssociationVersion: String
  ExecutionId: String
  ResourceId: String
  ResourceType: String
  Status: String
  DetailedStatus: String
  LastExecutionDate: Date
  OutputSource: AwsSSMDescribeAssociationExecutionTargetsOutputAssociationExecutionTargetsOutputSource
}

type AwsSSMDescribeAssociationExecutionTargetsOutputAssociationExecutionTargetsOutputSource {
  OutputSourceId: String
  OutputSourceType: String
}

input AwsSSMDescribeAssociationInput {
  Name: String
  InstanceId: String
  AssociationId: String
  AssociationVersion: String
}

type AwsSSMDescribeAssociationOutput {
  AssociationDescription: AwsSSMS1e
}

input AwsSSMDescribeAutomationExecutionsFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSSMDescribeAutomationExecutionsInput {
  Filters: [AwsSSMDescribeAutomationExecutionsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeAutomationExecutionsOutput {
  AutomationExecutionMetadataList: [AwsSSMDescribeAutomationExecutionsOutputAutomationExecutionMetadataList]
  NextToken: String
}

type AwsSSMDescribeAutomationExecutionsOutputAutomationExecutionMetadataList {
  AutomationExecutionId: String
  DocumentName: String
  DocumentVersion: String
  AutomationExecutionStatus: String
  ExecutionStartTime: Date
  ExecutionEndTime: Date
  ExecutedBy: String
  LogFile: String
  Outputs: JSON
  Mode: String
  ParentAutomationExecutionId: String
  CurrentStepName: String
  CurrentAction: String
  FailureMessage: String
  TargetParameterName: String
  Targets: [AwsSSMSx]
  TargetMaps: [JSON]
  ResolvedTargets: AwsSSMS7i
  MaxConcurrency: String
  MaxErrors: String
  Target: String
  AutomationType: String
}

input AwsSSMDescribeAutomationStepExecutionsFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSSMDescribeAutomationStepExecutionsInput {
  AutomationExecutionId: String!
  Filters: [AwsSSMDescribeAutomationStepExecutionsFiltersInput]
  NextToken: String
  MaxResults: Int
  ReverseOrder: Boolean
}

type AwsSSMDescribeAutomationStepExecutionsOutput {
  StepExecutions: [AwsSSMS7s]
  NextToken: String
}

input AwsSSMDescribeAvailablePatchesInput {
  Filters: [AwsSSMS88Input]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeAvailablePatchesOutput {
  Patches: [AwsSSMS8g]
  NextToken: String
}

input AwsSSMDescribeDocumentInput {
  Name: String!
  DocumentVersion: String
  VersionName: String
}

type AwsSSMDescribeDocumentOutput {
  Document: AwsSSMS2c
}

input AwsSSMDescribeDocumentPermissionInput {
  Name: String!
  PermissionType: String!
}

type AwsSSMDescribeDocumentPermissionOutput {
  AccountIds: [String]
}

input AwsSSMDescribeEffectiveInstanceAssociationsInput {
  InstanceId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeEffectiveInstanceAssociationsOutput {
  Associations: [AwsSSMDescribeEffectiveInstanceAssociationsOutputAssociations]
  NextToken: String
}

type AwsSSMDescribeEffectiveInstanceAssociationsOutputAssociations {
  AssociationId: String
  InstanceId: String
  Content: String
  AssociationVersion: String
}

input AwsSSMDescribeEffectivePatchesForPatchBaselineInput {
  BaselineId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeEffectivePatchesForPatchBaselineOutput {
  EffectivePatches: [AwsSSMDescribeEffectivePatchesForPatchBaselineOutputEffectivePatches]
  NextToken: String
}

type AwsSSMDescribeEffectivePatchesForPatchBaselineOutputEffectivePatches {
  Patch: AwsSSMS8g
  PatchStatus: AwsSSMDescribeEffectivePatchesForPatchBaselineOutputEffectivePatchesPatchStatus
}

type AwsSSMDescribeEffectivePatchesForPatchBaselineOutputEffectivePatchesPatchStatus {
  DeploymentStatus: String
  ComplianceLevel: String
  ApprovalDate: Date
}

input AwsSSMDescribeInstanceAssociationsStatusInput {
  InstanceId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeInstanceAssociationsStatusOutput {
  InstanceAssociationStatusInfos: [AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfos]
  NextToken: String
}

type AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfos {
  AssociationId: String
  Name: String
  DocumentVersion: String
  AssociationVersion: String
  InstanceId: String
  ExecutionDate: Date
  Status: String
  DetailedStatus: String
  ExecutionSummary: String
  ErrorCode: String
  OutputUrl: AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrl
  AssociationName: String
}

type AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrl {
  S3OutputUrl: AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrlS3OutputUrl
}

type AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrlS3OutputUrl {
  OutputUrl: String
}

input AwsSSMDescribeInstanceInformationFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSSMDescribeInstanceInformationInput {
  InstanceInformationFilterList: [AwsSSMDescribeInstanceInformationInstanceInformationFilterListInput]
  Filters: [AwsSSMDescribeInstanceInformationFiltersInput]
  MaxResults: Int
  NextToken: String
}

input AwsSSMDescribeInstanceInformationInstanceInformationFilterListInput {
  key: String!
  valueSet: [String]!
}

type AwsSSMDescribeInstanceInformationOutput {
  InstanceInformationList: [AwsSSMDescribeInstanceInformationOutputInstanceInformationList]
  NextToken: String
}

type AwsSSMDescribeInstanceInformationOutputInstanceInformationList {
  InstanceId: String
  PingStatus: String
  LastPingDateTime: Date
  AgentVersion: String
  IsLatestVersion: Boolean
  PlatformType: String
  PlatformName: String
  PlatformVersion: String
  ActivationId: String
  IamRole: String
  RegistrationDate: Date
  ResourceType: String
  Name: String
  IPAddress: String
  ComputerName: String
  AssociationStatus: String
  LastAssociationExecutionDate: Date
  LastSuccessfulAssociationExecutionDate: Date
  AssociationOverview: AwsSSMDescribeInstanceInformationOutputInstanceInformationListAssociationOverview
}

type AwsSSMDescribeInstanceInformationOutputInstanceInformationListAssociationOverview {
  DetailedStatus: String
  InstanceAssociationStatusAggregatedCount: JSON
}

input AwsSSMDescribeInstancePatchesInput {
  InstanceId: String!
  Filters: [AwsSSMS88Input]
  NextToken: String
  MaxResults: Int
}

type AwsSSMDescribeInstancePatchesOutput {
  Patches: [AwsSSMDescribeInstancePatchesOutputPatches]
  NextToken: String
}

type AwsSSMDescribeInstancePatchesOutputPatches {
  Title: String!
  KBId: String!
  Classification: String!
  Severity: String!
  State: String!
  InstalledTime: Date!
}

input AwsSSMDescribeInstancePatchStatesForPatchGroupFiltersInput {
  Key: String!
  Values: [String]!
  Type: String!
}

input AwsSSMDescribeInstancePatchStatesForPatchGroupInput {
  PatchGroup: String!
  Filters: [AwsSSMDescribeInstancePatchStatesForPatchGroupFiltersInput]
  NextToken: String
  MaxResults: Int
}

type AwsSSMDescribeInstancePatchStatesForPatchGroupOutput {
  InstancePatchStates: [AwsSSMSa7]
  NextToken: String
}

input AwsSSMDescribeInstancePatchStatesInput {
  InstanceIds: [String]!
  NextToken: String
  MaxResults: Int
}

type AwsSSMDescribeInstancePatchStatesOutput {
  InstancePatchStates: [AwsSSMSa7]
  NextToken: String
}

input AwsSSMDescribeInventoryDeletionsInput {
  DeletionId: String
  NextToken: String
  MaxResults: Int
}

type AwsSSMDescribeInventoryDeletionsOutput {
  InventoryDeletions: [AwsSSMDescribeInventoryDeletionsOutputInventoryDeletions]
  NextToken: String
}

type AwsSSMDescribeInventoryDeletionsOutputInventoryDeletions {
  DeletionId: String
  TypeName: String
  DeletionStartTime: Date
  LastStatus: String
  LastStatusMessage: String
  DeletionSummary: AwsSSMS50
  LastStatusUpdateTime: Date
}

input AwsSSMDescribeMaintenanceWindowExecutionsInput {
  WindowId: String!
  Filters: [AwsSSMSb8Input]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionsOutput {
  WindowExecutions: [AwsSSMDescribeMaintenanceWindowExecutionsOutputWindowExecutions]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionsOutputWindowExecutions {
  WindowId: String
  WindowExecutionId: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
}

input AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsInput {
  WindowExecutionId: String!
  TaskId: String!
  Filters: [AwsSSMSb8Input]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsOutput {
  WindowExecutionTaskInvocationIdentities: [AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsOutputWindowExecutionTaskInvocationIdentities]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsOutputWindowExecutionTaskInvocationIdentities {
  WindowExecutionId: String
  TaskExecutionId: String
  InvocationId: String
  ExecutionId: String
  TaskType: String
  Parameters: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
  OwnerInformation: String
  WindowTargetId: String
}

input AwsSSMDescribeMaintenanceWindowExecutionTasksInput {
  WindowExecutionId: String!
  Filters: [AwsSSMSb8Input]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionTasksOutput {
  WindowExecutionTaskIdentities: [AwsSSMDescribeMaintenanceWindowExecutionTasksOutputWindowExecutionTaskIdentities]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionTasksOutputWindowExecutionTaskIdentities {
  WindowExecutionId: String
  TaskExecutionId: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
  TaskArn: String
  TaskType: String
}

input AwsSSMDescribeMaintenanceWindowScheduleInput {
  WindowId: String
  Targets: [AwsSSMSxInput]
  ResourceType: String
  Filters: [AwsSSMS88Input]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowScheduleOutput {
  ScheduledWindowExecutions: [AwsSSMDescribeMaintenanceWindowScheduleOutputScheduledWindowExecutions]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowScheduleOutputScheduledWindowExecutions {
  WindowId: String
  Name: String
  ExecutionTime: String
}

input AwsSSMDescribeMaintenanceWindowsForTargetInput {
  Targets: [AwsSSMSxInput]!
  ResourceType: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowsForTargetOutput {
  WindowIdentities: [AwsSSMDescribeMaintenanceWindowsForTargetOutputWindowIdentities]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowsForTargetOutputWindowIdentities {
  WindowId: String
  Name: String
}

input AwsSSMDescribeMaintenanceWindowsInput {
  Filters: [AwsSSMSb8Input]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowsOutput {
  WindowIdentities: [AwsSSMDescribeMaintenanceWindowsOutputWindowIdentities]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowsOutputWindowIdentities {
  WindowId: String
  Name: String
  Description: String
  Enabled: Boolean
  Duration: Int
  Cutoff: Int
  Schedule: String
  ScheduleTimezone: String
  EndDate: String
  StartDate: String
  NextExecutionTime: String
}

input AwsSSMDescribeMaintenanceWindowTargetsInput {
  WindowId: String!
  Filters: [AwsSSMSb8Input]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowTargetsOutput {
  Targets: [AwsSSMDescribeMaintenanceWindowTargetsOutputTargets]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowTargetsOutputTargets {
  WindowId: String
  WindowTargetId: String
  ResourceType: String
  Targets: [AwsSSMSx]
  OwnerInformation: String
  Name: String
  Description: String
}

input AwsSSMDescribeMaintenanceWindowTasksInput {
  WindowId: String!
  Filters: [AwsSSMSb8Input]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowTasksOutput {
  Tasks: [AwsSSMDescribeMaintenanceWindowTasksOutputTasks]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowTasksOutputTasks {
  WindowId: String
  WindowTaskId: String
  TaskArn: String
  Type: String
  Targets: [AwsSSMSx]
  TaskParameters: JSON
  Priority: Int
  LoggingInfo: AwsSSMSch
  ServiceRoleArn: String
  MaxConcurrency: String
  MaxErrors: String
  Name: String
  Description: String
}

input AwsSSMDescribeOpsItemsInput {
  OpsItemFilters: [AwsSSMDescribeOpsItemsOpsItemFiltersInput]
  MaxResults: Int
  NextToken: String
}

input AwsSSMDescribeOpsItemsOpsItemFiltersInput {
  Key: String!
  Values: [String]!
  Operator: String!
}

type AwsSSMDescribeOpsItemsOutput {
  NextToken: String
  OpsItemSummaries: [AwsSSMDescribeOpsItemsOutputOpsItemSummaries]
}

type AwsSSMDescribeOpsItemsOutputOpsItemSummaries {
  CreatedBy: String
  CreatedTime: Date
  LastModifiedBy: String
  LastModifiedTime: Date
  Priority: Int
  Source: String
  Status: String
  OpsItemId: String
  Title: String
  OperationalData: JSON
}

input AwsSSMDescribeParametersFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSSMDescribeParametersInput {
  Filters: [AwsSSMDescribeParametersFiltersInput]
  ParameterFilters: [AwsSSMSdbInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeParametersOutput {
  Parameters: [AwsSSMDescribeParametersOutputParameters]
  NextToken: String
}

type AwsSSMDescribeParametersOutputParameters {
  Name: String
  Type: String
  KeyId: String
  LastModifiedDate: Date
  LastModifiedUser: String
  Description: String
  AllowedPattern: String
  Version: JSON
  Tier: String
  Policies: [AwsSSMSdq]
}

input AwsSSMDescribePatchBaselinesInput {
  Filters: [AwsSSMS88Input]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribePatchBaselinesOutput {
  BaselineIdentities: [AwsSSMSdv]
  NextToken: String
}

input AwsSSMDescribePatchGroupsInput {
  MaxResults: Int
  Filters: [AwsSSMS88Input]
  NextToken: String
}

type AwsSSMDescribePatchGroupsOutput {
  Mappings: [AwsSSMDescribePatchGroupsOutputMappings]
  NextToken: String
}

type AwsSSMDescribePatchGroupsOutputMappings {
  PatchGroup: String
  BaselineIdentity: AwsSSMSdv
}

input AwsSSMDescribePatchGroupStateInput {
  PatchGroup: String!
}

type AwsSSMDescribePatchGroupStateOutput {
  Instances: Int
  InstancesWithInstalledPatches: Int
  InstancesWithInstalledOtherPatches: Int
  InstancesWithInstalledRejectedPatches: Int
  InstancesWithMissingPatches: Int
  InstancesWithFailedPatches: Int
  InstancesWithNotApplicablePatches: Int
  InstancesWithUnreportedNotApplicablePatches: Int
}

input AwsSSMDescribePatchPropertiesInput {
  OperatingSystem: String!
  Property: String!
  PatchSet: String
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribePatchPropertiesOutput {
  Properties: [JSON]
  NextToken: String
}

input AwsSSMDescribeSessionsFiltersInput {
  key: String!
  value: String!
}

input AwsSSMDescribeSessionsInput {
  State: String!
  MaxResults: Int
  NextToken: String
  Filters: [AwsSSMDescribeSessionsFiltersInput]
}

type AwsSSMDescribeSessionsOutput {
  Sessions: [AwsSSMDescribeSessionsOutputSessions]
  NextToken: String
}

type AwsSSMDescribeSessionsOutputSessions {
  SessionId: String
  Target: String
  Status: String
  StartDate: Date
  EndDate: Date
  DocumentName: String
  Owner: String
  Details: String
  OutputUrl: AwsSSMDescribeSessionsOutputSessionsOutputUrl
}

type AwsSSMDescribeSessionsOutputSessionsOutputUrl {
  S3OutputUrl: String
  CloudWatchOutputUrl: String
}

input AwsSSMGetAutomationExecutionInput {
  AutomationExecutionId: String!
}

type AwsSSMGetAutomationExecutionOutput {
  AutomationExecution: AwsSSMGetAutomationExecutionOutputAutomationExecution
}

type AwsSSMGetAutomationExecutionOutputAutomationExecution {
  AutomationExecutionId: String
  DocumentName: String
  DocumentVersion: String
  ExecutionStartTime: Date
  ExecutionEndTime: Date
  AutomationExecutionStatus: String
  StepExecutions: [AwsSSMS7s]
  StepExecutionsTruncated: Boolean
  Parameters: JSON
  Outputs: JSON
  FailureMessage: String
  Mode: String
  ParentAutomationExecutionId: String
  ExecutedBy: String
  CurrentStepName: String
  CurrentAction: String
  TargetParameterName: String
  Targets: [AwsSSMSx]
  TargetMaps: [JSON]
  ResolvedTargets: AwsSSMS7i
  MaxConcurrency: String
  MaxErrors: String
  Target: String
  TargetLocations: [AwsSSMS81]
  ProgressCounters: AwsSSMGetAutomationExecutionOutputAutomationExecutionProgressCounters
}

type AwsSSMGetAutomationExecutionOutputAutomationExecutionProgressCounters {
  TotalSteps: Int
  SuccessSteps: Int
  FailedSteps: Int
  CancelledSteps: Int
  TimedOutSteps: Int
}

input AwsSSMGetCommandInvocationInput {
  CommandId: String!
  InstanceId: String!
  PluginName: String
}

type AwsSSMGetCommandInvocationOutput {
  CommandId: String
  InstanceId: String
  Comment: String
  DocumentName: String
  DocumentVersion: String
  PluginName: String
  ResponseCode: Int
  ExecutionStartDateTime: String
  ExecutionElapsedTime: String
  ExecutionEndDateTime: String
  Status: String
  StatusDetails: String
  StandardOutputContent: String
  StandardOutputUrl: String
  StandardErrorContent: String
  StandardErrorUrl: String
  CloudWatchOutputConfig: AwsSSMSf9
}

input AwsSSMGetConnectionStatusInput {
  Target: String!
}

type AwsSSMGetConnectionStatusOutput {
  Target: String
  Status: String
}

input AwsSSMGetDefaultPatchBaselineInput {
  OperatingSystem: String
}

type AwsSSMGetDefaultPatchBaselineOutput {
  BaselineId: String
  OperatingSystem: String
}

input AwsSSMGetDeployablePatchSnapshotForInstanceInput {
  InstanceId: String!
  SnapshotId: String!
}

type AwsSSMGetDeployablePatchSnapshotForInstanceOutput {
  InstanceId: String
  SnapshotId: String
  SnapshotDownloadUrl: String
  Product: String
}

input AwsSSMGetDocumentInput {
  Name: String!
  VersionName: String
  DocumentVersion: String
  DocumentFormat: String
}

type AwsSSMGetDocumentOutput {
  Name: String
  VersionName: String
  DocumentVersion: String
  Status: String
  StatusInformation: String
  Content: String
  DocumentType: String
  DocumentFormat: String
  AttachmentsContent: [AwsSSMGetDocumentOutputAttachmentsContent]
}

type AwsSSMGetDocumentOutputAttachmentsContent {
  Name: String
  Size: JSON
  Hash: String
  HashType: String
  Url: String
}

input AwsSSMGetInventoryInput {
  Filters: [AwsSSMSfuInput]
  Aggregators: [AwsSSMSg0Input]
  ResultAttributes: [AwsSSMGetInventoryResultAttributesInput]
  NextToken: String
  MaxResults: Int
}

type AwsSSMGetInventoryOutput {
  Entities: [AwsSSMGetInventoryOutputEntities]
  NextToken: String
}

type AwsSSMGetInventoryOutputEntities {
  Id: String
  Data: JSON
}

input AwsSSMGetInventoryResultAttributesInput {
  TypeName: String!
}

input AwsSSMGetInventorySchemaInput {
  TypeName: String
  NextToken: String
  MaxResults: Int
  Aggregator: Boolean
  SubType: Boolean
}

type AwsSSMGetInventorySchemaOutput {
  Schemas: [AwsSSMGetInventorySchemaOutputSchemas]
  NextToken: String
}

type AwsSSMGetInventorySchemaOutputSchemas {
  TypeName: String!
  Version: String
  Attributes: [AwsSSMGetInventorySchemaOutputSchemasAttributes]!
  DisplayName: String
}

type AwsSSMGetInventorySchemaOutputSchemasAttributes {
  Name: String!
  DataType: String!
}

input AwsSSMGetMaintenanceWindowExecutionInput {
  WindowExecutionId: String!
}

type AwsSSMGetMaintenanceWindowExecutionOutput {
  WindowExecutionId: String
  TaskIds: [String]
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
}

input AwsSSMGetMaintenanceWindowExecutionTaskInput {
  WindowExecutionId: String!
  TaskId: String!
}

input AwsSSMGetMaintenanceWindowExecutionTaskInvocationInput {
  WindowExecutionId: String!
  TaskId: String!
  InvocationId: String!
}

type AwsSSMGetMaintenanceWindowExecutionTaskInvocationOutput {
  WindowExecutionId: String
  TaskExecutionId: String
  InvocationId: String
  ExecutionId: String
  TaskType: String
  Parameters: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
  OwnerInformation: String
  WindowTargetId: String
}

type AwsSSMGetMaintenanceWindowExecutionTaskOutput {
  WindowExecutionId: String
  TaskExecutionId: String
  TaskArn: String
  ServiceRole: String
  Type: String
  TaskParameters: [JSON]
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
}

input AwsSSMGetMaintenanceWindowInput {
  WindowId: String!
}

type AwsSSMGetMaintenanceWindowOutput {
  WindowId: String
  Name: String
  Description: String
  StartDate: String
  EndDate: String
  Schedule: String
  ScheduleTimezone: String
  NextExecutionTime: String
  Duration: Int
  Cutoff: Int
  AllowUnassociatedTargets: Boolean
  Enabled: Boolean
  CreatedDate: Date
  ModifiedDate: Date
}

input AwsSSMGetMaintenanceWindowTaskInput {
  WindowId: String!
  WindowTaskId: String!
}

type AwsSSMGetMaintenanceWindowTaskOutput {
  WindowId: String
  WindowTaskId: String
  Targets: [AwsSSMSx]
  TaskArn: String
  ServiceRoleArn: String
  TaskType: String
  TaskParameters: JSON
  TaskInvocationParameters: AwsSSMSh8
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  LoggingInfo: AwsSSMSch
  Name: String
  Description: String
}

input AwsSSMGetOpsItemInput {
  OpsItemId: String!
}

type AwsSSMGetOpsItemOutput {
  OpsItem: AwsSSMGetOpsItemOutputOpsItem
}

type AwsSSMGetOpsItemOutputOpsItem {
  CreatedBy: String
  CreatedTime: Date
  Description: String
  LastModifiedBy: String
  LastModifiedTime: Date
  Notifications: [AwsSSMS3f]
  Priority: Int
  RelatedOpsItems: [AwsSSMS3j]
  Status: String
  OpsItemId: String
  Version: String
  Title: String
  Source: String
  OperationalData: JSON
}

input AwsSSMGetOpsSummaryInput {
  Filters: [AwsSSMShsInput]
  Aggregators: [AwsSSMShyInput]!
  NextToken: String
  MaxResults: Int
}

type AwsSSMGetOpsSummaryOutput {
  Entities: [AwsSSMGetOpsSummaryOutputEntities]
  NextToken: String
}

type AwsSSMGetOpsSummaryOutputEntities {
  Id: String
  Data: JSON
}

input AwsSSMGetParameterHistoryInput {
  Name: String!
  WithDecryption: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsSSMGetParameterHistoryOutput {
  Parameters: [AwsSSMGetParameterHistoryOutputParameters]
  NextToken: String
}

type AwsSSMGetParameterHistoryOutputParameters {
  Name: String
  Type: String
  KeyId: String
  LastModifiedDate: Date
  LastModifiedUser: String
  Description: String
  Value: String
  AllowedPattern: String
  Version: JSON
  Labels: [String]
  Tier: String
  Policies: [AwsSSMSdq]
}

input AwsSSMGetParameterInput {
  Name: String!
  WithDecryption: Boolean
}

type AwsSSMGetParameterOutput {
  Parameter: AwsSSMSih
}

input AwsSSMGetParametersByPathInput {
  Path: String!
  Recursive: Boolean
  ParameterFilters: [AwsSSMSdbInput]
  WithDecryption: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsSSMGetParametersByPathOutput {
  Parameters: [AwsSSMSih]
  NextToken: String
}

input AwsSSMGetParametersInput {
  Names: [String]!
  WithDecryption: Boolean
}

type AwsSSMGetParametersOutput {
  Parameters: [AwsSSMSih]
  InvalidParameters: [String]
}

input AwsSSMGetPatchBaselineForPatchGroupInput {
  PatchGroup: String!
  OperatingSystem: String
}

type AwsSSMGetPatchBaselineForPatchGroupOutput {
  BaselineId: String
  PatchGroup: String
  OperatingSystem: String
}

input AwsSSMGetPatchBaselineInput {
  BaselineId: String!
}

type AwsSSMGetPatchBaselineOutput {
  BaselineId: String
  Name: String
  OperatingSystem: String
  GlobalFilters: AwsSSMS3r
  ApprovalRules: AwsSSMS3x
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  ApprovedPatchesEnableNonSecurity: Boolean
  RejectedPatches: [String]
  RejectedPatchesAction: String
  PatchGroups: [String]
  CreatedDate: Date
  ModifiedDate: Date
  Description: String
  Sources: [AwsSSMS47]
}

input AwsSSMGetServiceSettingInput {
  SettingId: String!
}

type AwsSSMGetServiceSettingOutput {
  ServiceSetting: AwsSSMSj4
}

input AwsSSMLabelParameterVersionInput {
  Name: String!
  ParameterVersion: JSON
  Labels: [String]!
}

type AwsSSMLabelParameterVersionOutput {
  InvalidLabels: [String]
}

input AwsSSMListAssociationsAssociationFilterListInput {
  key: String!
  value: String!
}

input AwsSSMListAssociationsInput {
  AssociationFilterList: [AwsSSMListAssociationsAssociationFilterListInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMListAssociationsOutput {
  Associations: [AwsSSMListAssociationsOutputAssociations]
  NextToken: String
}

type AwsSSMListAssociationsOutputAssociations {
  Name: String
  InstanceId: String
  AssociationId: String
  AssociationVersion: String
  DocumentVersion: String
  Targets: [AwsSSMSx]
  LastExecutionDate: Date
  Overview: AwsSSMS1l
  ScheduleExpression: String
  AssociationName: String
}

input AwsSSMListAssociationVersionsInput {
  AssociationId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMListAssociationVersionsOutput {
  AssociationVersions: [AwsSSMListAssociationVersionsOutputAssociationVersions]
  NextToken: String
}

type AwsSSMListAssociationVersionsOutputAssociationVersions {
  AssociationId: String
  AssociationVersion: String
  CreatedDate: Date
  Name: String
  DocumentVersion: String
  Parameters: JSON
  Targets: [AwsSSMSx]
  ScheduleExpression: String
  OutputLocation: AwsSSMS13
  AssociationName: String
  MaxErrors: String
  MaxConcurrency: String
  ComplianceSeverity: String
}

input AwsSSMListCommandInvocationsInput {
  CommandId: String
  InstanceId: String
  MaxResults: Int
  NextToken: String
  Filters: [AwsSSMSjmInput]
  Details: Boolean
}

type AwsSSMListCommandInvocationsOutput {
  CommandInvocations: [AwsSSMListCommandInvocationsOutputCommandInvocations]
  NextToken: String
}

type AwsSSMListCommandInvocationsOutputCommandInvocations {
  CommandId: String
  InstanceId: String
  InstanceName: String
  Comment: String
  DocumentName: String
  DocumentVersion: String
  RequestedDateTime: Date
  Status: String
  StatusDetails: String
  TraceOutput: String
  StandardOutputUrl: String
  StandardErrorUrl: String
  CommandPlugins: [AwsSSMListCommandInvocationsOutputCommandInvocationsCommandPlugins]
  ServiceRole: String
  NotificationConfig: AwsSSMSha
  CloudWatchOutputConfig: AwsSSMSf9
}

type AwsSSMListCommandInvocationsOutputCommandInvocationsCommandPlugins {
  Name: String
  Status: String
  StatusDetails: String
  ResponseCode: Int
  ResponseStartDateTime: Date
  ResponseFinishDateTime: Date
  Output: String
  StandardOutputUrl: String
  StandardErrorUrl: String
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
}

input AwsSSMListCommandsInput {
  CommandId: String
  InstanceId: String
  MaxResults: Int
  NextToken: String
  Filters: [AwsSSMSjmInput]
}

type AwsSSMListCommandsOutput {
  Commands: [AwsSSMSk2]
  NextToken: String
}

input AwsSSMListComplianceItemsInput {
  Filters: [AwsSSMSk9Input]
  ResourceIds: [String]
  ResourceTypes: [String]
  NextToken: String
  MaxResults: Int
}

type AwsSSMListComplianceItemsOutput {
  ComplianceItems: [AwsSSMListComplianceItemsOutputComplianceItems]
  NextToken: String
}

type AwsSSMListComplianceItemsOutputComplianceItems {
  ComplianceType: String
  ResourceType: String
  ResourceId: String
  Id: String
  Title: String
  Status: String
  Severity: String
  ExecutionSummary: AwsSSMSkr
  Details: JSON
}

input AwsSSMListComplianceSummariesInput {
  Filters: [AwsSSMSk9Input]
  NextToken: String
  MaxResults: Int
}

type AwsSSMListComplianceSummariesOutput {
  ComplianceSummaryItems: [AwsSSMListComplianceSummariesOutputComplianceSummaryItems]
  NextToken: String
}

type AwsSSMListComplianceSummariesOutputComplianceSummaryItems {
  ComplianceType: String
  CompliantSummary: AwsSSMSkz
  NonCompliantSummary: AwsSSMSl2
}

input AwsSSMListDocumentsDocumentFilterListInput {
  key: String!
  value: String!
}

input AwsSSMListDocumentsFiltersInput {
  Key: String
  Values: [String]
}

input AwsSSMListDocumentsInput {
  DocumentFilterList: [AwsSSMListDocumentsDocumentFilterListInput]
  Filters: [AwsSSMListDocumentsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMListDocumentsOutput {
  DocumentIdentifiers: [AwsSSMListDocumentsOutputDocumentIdentifiers]
  NextToken: String
}

type AwsSSMListDocumentsOutputDocumentIdentifiers {
  Name: String
  Owner: String
  VersionName: String
  PlatformTypes: [String]
  DocumentVersion: String
  DocumentType: String
  SchemaVersion: String
  DocumentFormat: String
  TargetType: String
  Tags: [AwsSSMS4]
}

input AwsSSMListDocumentVersionsInput {
  Name: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMListDocumentVersionsOutput {
  DocumentVersions: [AwsSSMListDocumentVersionsOutputDocumentVersions]
  NextToken: String
}

type AwsSSMListDocumentVersionsOutputDocumentVersions {
  Name: String
  DocumentVersion: String
  VersionName: String
  CreatedDate: Date
  IsDefaultVersion: Boolean
  DocumentFormat: String
  Status: String
  StatusInformation: String
}

input AwsSSMListInventoryEntriesInput {
  InstanceId: String!
  TypeName: String!
  Filters: [AwsSSMSfuInput]
  NextToken: String
  MaxResults: Int
}

type AwsSSMListInventoryEntriesOutput {
  TypeName: String
  InstanceId: String
  SchemaVersion: String
  CaptureTime: String
  Entries: [JSON]
  NextToken: String
}

input AwsSSMListResourceComplianceSummariesInput {
  Filters: [AwsSSMSk9Input]
  NextToken: String
  MaxResults: Int
}

type AwsSSMListResourceComplianceSummariesOutput {
  ResourceComplianceSummaryItems: [AwsSSMListResourceComplianceSummariesOutputResourceComplianceSummaryItems]
  NextToken: String
}

type AwsSSMListResourceComplianceSummariesOutputResourceComplianceSummaryItems {
  ComplianceType: String
  ResourceType: String
  ResourceId: String
  Status: String
  OverallSeverity: String
  ExecutionSummary: AwsSSMSkr
  CompliantSummary: AwsSSMSkz
  NonCompliantSummary: AwsSSMSl2
}

input AwsSSMListResourceDataSyncInput {
  NextToken: String
  MaxResults: Int
}

type AwsSSMListResourceDataSyncOutput {
  ResourceDataSyncItems: [AwsSSMListResourceDataSyncOutputResourceDataSyncItems]
  NextToken: String
}

type AwsSSMListResourceDataSyncOutputResourceDataSyncItems {
  SyncName: String
  S3Destination: AwsSSMS4h
  LastSyncTime: Date
  LastSuccessfulSyncTime: Date
  LastStatus: String
  SyncCreatedTime: Date
  LastSyncStatusMessage: String
}

input AwsSSMListTagsForResourceInput {
  ResourceType: String!
  ResourceId: String!
}

type AwsSSMListTagsForResourceOutput {
  TagList: [AwsSSMS4]
}

input AwsSSMModifyDocumentPermissionInput {
  Name: String!
  PermissionType: String!
  AccountIdsToAdd: [String]
  AccountIdsToRemove: [String]
}

input AwsSSMPutComplianceItemsInput {
  ResourceId: String!
  ResourceType: String!
  ComplianceType: String!
  ExecutionSummary: AwsSSMSkrInput!
  Items: [AwsSSMPutComplianceItemsItemsInput]!
  ItemContentHash: String
}

input AwsSSMPutComplianceItemsItemsInput {
  Id: String
  Title: String
  Severity: String!
  Status: String!
  Details: JSON
}

input AwsSSMPutInventoryInput {
  InstanceId: String!
  Items: [AwsSSMPutInventoryItemsInput]!
}

input AwsSSMPutInventoryItemsInput {
  TypeName: String!
  SchemaVersion: String!
  CaptureTime: String!
  ContentHash: String
  Content: [JSON]
  Context: JSON
}

type AwsSSMPutInventoryOutput {
  Message: String
}

input AwsSSMPutParameterInput {
  Name: String!
  Description: String
  Value: String!
  Type: String!
  KeyId: String
  Overwrite: Boolean
  AllowedPattern: String
  Tags: [AwsSSMS4Input]
  Tier: String
  Policies: String
}

type AwsSSMPutParameterOutput {
  Version: JSON
}

input AwsSSMRegisterDefaultPatchBaselineInput {
  BaselineId: String!
}

type AwsSSMRegisterDefaultPatchBaselineOutput {
  BaselineId: String
}

input AwsSSMRegisterPatchBaselineForPatchGroupInput {
  BaselineId: String!
  PatchGroup: String!
}

type AwsSSMRegisterPatchBaselineForPatchGroupOutput {
  BaselineId: String
  PatchGroup: String
}

input AwsSSMRegisterTargetWithMaintenanceWindowInput {
  WindowId: String!
  ResourceType: String!
  Targets: [AwsSSMSxInput]!
  OwnerInformation: String
  Name: String
  Description: String
  ClientToken: String
}

type AwsSSMRegisterTargetWithMaintenanceWindowOutput {
  WindowTargetId: String
}

input AwsSSMRegisterTaskWithMaintenanceWindowInput {
  WindowId: String!
  Targets: [AwsSSMSxInput]!
  TaskArn: String!
  ServiceRoleArn: String
  TaskType: String!
  TaskParameters: JSON
  TaskInvocationParameters: AwsSSMSh8Input
  Priority: Int
  MaxConcurrency: String!
  MaxErrors: String!
  LoggingInfo: AwsSSMSchInput
  Name: String
  Description: String
  ClientToken: String
}

type AwsSSMRegisterTaskWithMaintenanceWindowOutput {
  WindowTaskId: String
}

input AwsSSMRemoveTagsFromResourceInput {
  ResourceType: String!
  ResourceId: String!
  TagKeys: [String]!
}

input AwsSSMResetServiceSettingInput {
  SettingId: String!
}

type AwsSSMResetServiceSettingOutput {
  ServiceSetting: AwsSSMSj4
}

input AwsSSMResumeSessionInput {
  SessionId: String!
}

type AwsSSMResumeSessionOutput {
  SessionId: String
  TokenValue: String
  StreamUrl: String
}

type AwsSSMS13 {
  S3Location: AwsSSMS13S3Location
}

input AwsSSMS13Input {
  S3Location: AwsSSMS13S3LocationInput
}

type AwsSSMS13S3Location {
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
}

input AwsSSMS13S3LocationInput {
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
}

type AwsSSMS1e {
  Name: String
  InstanceId: String
  AssociationVersion: String
  Date: Date
  LastUpdateAssociationDate: Date
  Status: AwsSSMS1h
  Overview: AwsSSMS1l
  DocumentVersion: String
  AutomationTargetParameterName: String
  Parameters: JSON
  AssociationId: String
  Targets: [AwsSSMSx]
  ScheduleExpression: String
  OutputLocation: AwsSSMS13
  LastExecutionDate: Date
  LastSuccessfulExecutionDate: Date
  AssociationName: String
  MaxErrors: String
  MaxConcurrency: String
  ComplianceSeverity: String
}

type AwsSSMS1h {
  Date: Date!
  Name: String!
  Message: String!
  AdditionalInfo: String
}

input AwsSSMS1hInput {
  Date: Date!
  Name: String!
  Message: String!
  AdditionalInfo: String
}

type AwsSSMS1l {
  Status: String
  DetailedStatus: String
  AssociationStatusAggregatedCount: JSON
}

type AwsSSMS1s {
  Name: String!
  InstanceId: String
  Parameters: JSON
  AutomationTargetParameterName: String
  DocumentVersion: String
  Targets: [AwsSSMSx]
  ScheduleExpression: String
  OutputLocation: AwsSSMS13
  AssociationName: String
  MaxErrors: String
  MaxConcurrency: String
  ComplianceSeverity: String
}

input AwsSSMS1sInput {
  Name: String!
  InstanceId: String
  Parameters: JSON
  AutomationTargetParameterName: String
  DocumentVersion: String
  Targets: [AwsSSMSxInput]
  ScheduleExpression: String
  OutputLocation: AwsSSMS13Input
  AssociationName: String
  MaxErrors: String
  MaxConcurrency: String
  ComplianceSeverity: String
}

input AwsSSMS21Input {
  Key: String
  Values: [String]
}

type AwsSSMS2c {
  Sha1: String
  Hash: String
  HashType: String
  Name: String
  VersionName: String
  Owner: String
  CreatedDate: Date
  Status: String
  StatusInformation: String
  DocumentVersion: String
  Description: String
  Parameters: [AwsSSMS2cParameters]
  PlatformTypes: [String]
  DocumentType: String
  SchemaVersion: String
  LatestVersion: String
  DefaultVersion: String
  DocumentFormat: String
  TargetType: String
  Tags: [AwsSSMS4]
  AttachmentsInformation: [AwsSSMS2cAttachmentsInformation]
}

type AwsSSMS2cAttachmentsInformation {
  Name: String
}

type AwsSSMS2cParameters {
  Name: String
  Type: String
  Description: String
  DefaultValue: String
}

type AwsSSMS3f {
  Arn: String
}

input AwsSSMS3fInput {
  Arn: String
}

type AwsSSMS3j {
  OpsItemId: String!
}

input AwsSSMS3jInput {
  OpsItemId: String!
}

type AwsSSMS3r {
  PatchFilters: [AwsSSMS3rPatchFilters]!
}

input AwsSSMS3rInput {
  PatchFilters: [AwsSSMS3rPatchFiltersInput]!
}

type AwsSSMS3rPatchFilters {
  Key: String!
  Values: [String]!
}

input AwsSSMS3rPatchFiltersInput {
  Key: String!
  Values: [String]!
}

type AwsSSMS3x {
  PatchRules: [AwsSSMS3xPatchRules]!
}

input AwsSSMS3xInput {
  PatchRules: [AwsSSMS3xPatchRulesInput]!
}

type AwsSSMS3xPatchRules {
  PatchFilterGroup: AwsSSMS3r!
  ComplianceLevel: String
  ApproveAfterDays: Int!
  EnableNonSecurity: Boolean
}

input AwsSSMS3xPatchRulesInput {
  PatchFilterGroup: AwsSSMS3rInput!
  ComplianceLevel: String
  ApproveAfterDays: Int!
  EnableNonSecurity: Boolean
}

type AwsSSMS4 {
  Key: String!
  Value: String!
}

type AwsSSMS47 {
  Name: String!
  Products: [String]!
  Configuration: String!
}

input AwsSSMS47Input {
  Name: String!
  Products: [String]!
  Configuration: String!
}

type AwsSSMS4h {
  BucketName: String!
  Prefix: String
  SyncFormat: String!
  Region: String!
  AWSKMSKeyARN: String
}

input AwsSSMS4hInput {
  BucketName: String!
  Prefix: String
  SyncFormat: String!
  Region: String!
  AWSKMSKeyARN: String
}

input AwsSSMS4Input {
  Key: String!
  Value: String!
}

type AwsSSMS50 {
  TotalCount: Int
  RemainingCount: Int
  SummaryItems: [AwsSSMS50SummaryItems]
}

type AwsSSMS50SummaryItems {
  Version: String
  Count: Int
  RemainingCount: Int
}

type AwsSSMS7i {
  ParameterValues: [String]
  Truncated: Boolean
}

type AwsSSMS7s {
  StepName: String
  Action: String
  TimeoutSeconds: JSON
  OnFailure: String
  MaxAttempts: Int
  ExecutionStartTime: Date
  ExecutionEndTime: Date
  StepStatus: String
  ResponseCode: String
  Inputs: JSON
  Outputs: JSON
  Response: String
  FailureMessage: String
  FailureDetails: AwsSSMS7sFailureDetails
  StepExecutionId: String
  OverriddenParameters: JSON
  IsEnd: Boolean
  NextStep: String
  IsCritical: Boolean
  ValidNextSteps: [String]
  Targets: [AwsSSMSx]
  TargetLocation: AwsSSMS81
}

type AwsSSMS7sFailureDetails {
  FailureStage: String
  FailureType: String
  Details: JSON
}

type AwsSSMS81 {
  Accounts: [String]
  Regions: [String]
  TargetLocationMaxConcurrency: String
  TargetLocationMaxErrors: String
  ExecutionRoleName: String
}

input AwsSSMS81Input {
  Accounts: [String]
  Regions: [String]
  TargetLocationMaxConcurrency: String
  TargetLocationMaxErrors: String
  ExecutionRoleName: String
}

input AwsSSMS88Input {
  Key: String
  Values: [String]
}

type AwsSSMS8g {
  Id: String
  ReleaseDate: Date
  Title: String
  Description: String
  ContentUrl: String
  Vendor: String
  ProductFamily: String
  Product: String
  Classification: String
  MsrcSeverity: String
  KbNumber: String
  MsrcNumber: String
  Language: String
}

type AwsSSMSa7 {
  InstanceId: String!
  PatchGroup: String!
  BaselineId: String!
  SnapshotId: String
  InstallOverrideList: String
  OwnerInformation: String
  InstalledCount: Int
  InstalledOtherCount: Int
  InstalledRejectedCount: Int
  MissingCount: Int
  FailedCount: Int
  UnreportedNotApplicableCount: Int
  NotApplicableCount: Int
  OperationStartTime: Date!
  OperationEndTime: Date!
  Operation: String!
}

input AwsSSMSb8Input {
  Key: String
  Values: [String]
}

type AwsSSMSch {
  S3BucketName: String!
  S3KeyPrefix: String
  S3Region: String!
}

input AwsSSMSchInput {
  S3BucketName: String!
  S3KeyPrefix: String
  S3Region: String!
}

input AwsSSMSdbInput {
  Key: String!
  Option: String
  Values: [String]
}

type AwsSSMSdq {
  PolicyText: String
  PolicyType: String
  PolicyStatus: String
}

type AwsSSMSdv {
  BaselineId: String
  BaselineName: String
  OperatingSystem: String
  BaselineDescription: String
  DefaultBaseline: Boolean
}

input AwsSSMSendAutomationSignalInput {
  AutomationExecutionId: String!
  SignalType: String!
  Payload: JSON
}

input AwsSSMSendCommandInput {
  InstanceIds: [String]
  Targets: [AwsSSMSxInput]
  DocumentName: String!
  DocumentVersion: String
  DocumentHash: String
  DocumentHashType: String
  TimeoutSeconds: Int
  Comment: String
  Parameters: JSON
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  MaxConcurrency: String
  MaxErrors: String
  ServiceRoleArn: String
  NotificationConfig: AwsSSMShaInput
  CloudWatchOutputConfig: AwsSSMSf9Input
}

type AwsSSMSendCommandOutput {
  Command: AwsSSMSk2
}

type AwsSSMSf9 {
  CloudWatchLogGroupName: String
  CloudWatchOutputEnabled: Boolean
}

input AwsSSMSf9Input {
  CloudWatchLogGroupName: String
  CloudWatchOutputEnabled: Boolean
}

input AwsSSMSfuInput {
  Key: String!
  Values: [String]!
  Type: String
}

input AwsSSMSg0GroupsInput {
  Name: String!
  Filters: [AwsSSMSfuInput]!
}

input AwsSSMSg0Input {
  Expression: String
  Aggregators: JSON
  Groups: [AwsSSMSg0GroupsInput]
}

type AwsSSMSh8 {
  RunCommand: AwsSSMSh8RunCommand
  Automation: AwsSSMSh8Automation
  StepFunctions: AwsSSMSh8StepFunctions
  Lambda: AwsSSMSh8Lambda
}

type AwsSSMSh8Automation {
  DocumentVersion: String
  Parameters: JSON
}

input AwsSSMSh8AutomationInput {
  DocumentVersion: String
  Parameters: JSON
}

input AwsSSMSh8Input {
  RunCommand: AwsSSMSh8RunCommandInput
  Automation: AwsSSMSh8AutomationInput
  StepFunctions: AwsSSMSh8StepFunctionsInput
  Lambda: AwsSSMSh8LambdaInput
}

type AwsSSMSh8Lambda {
  ClientContext: String
  Qualifier: String
  Payload: JSON
}

input AwsSSMSh8LambdaInput {
  ClientContext: String
  Qualifier: String
  Payload: JSON
}

type AwsSSMSh8RunCommand {
  Comment: String
  DocumentHash: String
  DocumentHashType: String
  NotificationConfig: AwsSSMSha
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  Parameters: JSON
  ServiceRoleArn: String
  TimeoutSeconds: Int
}

input AwsSSMSh8RunCommandInput {
  Comment: String
  DocumentHash: String
  DocumentHashType: String
  NotificationConfig: AwsSSMShaInput
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  Parameters: JSON
  ServiceRoleArn: String
  TimeoutSeconds: Int
}

type AwsSSMSh8StepFunctions {
  Input: String
  Name: String
}

input AwsSSMSh8StepFunctionsInput {
  Input: String
  Name: String
}

type AwsSSMSha {
  NotificationArn: String
  NotificationEvents: [String]
  NotificationType: String
}

input AwsSSMShaInput {
  NotificationArn: String
  NotificationEvents: [String]
  NotificationType: String
}

input AwsSSMShsInput {
  Key: String!
  Values: [String]!
  Type: String
}

input AwsSSMShyInput {
  AggregatorType: String
  TypeName: String
  AttributeName: String
  Values: JSON
  Filters: [AwsSSMShsInput]
  Aggregators: JSON
}

type AwsSSMSih {
  Name: String
  Type: String
  Value: String
  Version: JSON
  Selector: String
  SourceResult: String
  LastModifiedDate: Date
  ARN: String
}

type AwsSSMSj4 {
  SettingId: String
  SettingValue: String
  LastModifiedDate: Date
  LastModifiedUser: String
  ARN: String
  Status: String
}

input AwsSSMSjmInput {
  key: String!
  value: String!
}

type AwsSSMSk2 {
  CommandId: String
  DocumentName: String
  DocumentVersion: String
  Comment: String
  ExpiresAfter: Date
  Parameters: JSON
  InstanceIds: [String]
  Targets: [AwsSSMSx]
  RequestedDateTime: Date
  Status: String
  StatusDetails: String
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  MaxConcurrency: String
  MaxErrors: String
  TargetCount: Int
  CompletedCount: Int
  ErrorCount: Int
  DeliveryTimedOutCount: Int
  ServiceRole: String
  NotificationConfig: AwsSSMSha
  CloudWatchOutputConfig: AwsSSMSf9
}

input AwsSSMSk9Input {
  Key: String
  Values: [String]
  Type: String
}

type AwsSSMSkr {
  ExecutionTime: Date!
  ExecutionId: String
  ExecutionType: String
}

input AwsSSMSkrInput {
  ExecutionTime: Date!
  ExecutionId: String
  ExecutionType: String
}

type AwsSSMSkz {
  CompliantCount: Int
  SeveritySummary: AwsSSMSl1
}

type AwsSSMSl1 {
  CriticalCount: Int
  HighCount: Int
  MediumCount: Int
  LowCount: Int
  InformationalCount: Int
  UnspecifiedCount: Int
}

type AwsSSMSl2 {
  NonCompliantCount: Int
  SeveritySummary: AwsSSMSl1
}

input AwsSSMStartAssociationsOnceInput {
  AssociationIds: [String]!
}

input AwsSSMStartAutomationExecutionInput {
  DocumentName: String!
  DocumentVersion: String
  Parameters: JSON
  ClientToken: String
  Mode: String
  TargetParameterName: String
  Targets: [AwsSSMSxInput]
  TargetMaps: [JSON]
  MaxConcurrency: String
  MaxErrors: String
  TargetLocations: [AwsSSMS81Input]
}

type AwsSSMStartAutomationExecutionOutput {
  AutomationExecutionId: String
}

input AwsSSMStartSessionInput {
  Target: String!
  DocumentName: String
  Parameters: JSON
}

type AwsSSMStartSessionOutput {
  SessionId: String
  TokenValue: String
  StreamUrl: String
}

input AwsSSMStopAutomationExecutionInput {
  AutomationExecutionId: String!
  Type: String
}

type AwsSSMSx {
  Key: String
  Values: [String]
}

input AwsSSMSxInput {
  Key: String
  Values: [String]
}

input AwsSSMTerminateSessionInput {
  SessionId: String!
}

type AwsSSMTerminateSessionOutput {
  SessionId: String
}

input AwsSSMUpdateAssociationInput {
  AssociationId: String!
  Parameters: JSON
  DocumentVersion: String
  ScheduleExpression: String
  OutputLocation: AwsSSMS13Input
  Name: String
  Targets: [AwsSSMSxInput]
  AssociationName: String
  AssociationVersion: String
  AutomationTargetParameterName: String
  MaxErrors: String
  MaxConcurrency: String
  ComplianceSeverity: String
}

type AwsSSMUpdateAssociationOutput {
  AssociationDescription: AwsSSMS1e
}

input AwsSSMUpdateAssociationStatusInput {
  Name: String!
  InstanceId: String!
  AssociationStatus: AwsSSMS1hInput!
}

type AwsSSMUpdateAssociationStatusOutput {
  AssociationDescription: AwsSSMS1e
}

input AwsSSMUpdateDocumentDefaultVersionInput {
  Name: String!
  DocumentVersion: String!
}

type AwsSSMUpdateDocumentDefaultVersionOutput {
  Description: AwsSSMUpdateDocumentDefaultVersionOutputDescription
}

type AwsSSMUpdateDocumentDefaultVersionOutputDescription {
  Name: String
  DefaultVersion: String
  DefaultVersionName: String
}

input AwsSSMUpdateDocumentInput {
  Content: String!
  Attachments: [AwsSSMS21Input]
  Name: String!
  VersionName: String
  DocumentVersion: String
  DocumentFormat: String
  TargetType: String
}

type AwsSSMUpdateDocumentOutput {
  DocumentDescription: AwsSSMS2c
}

input AwsSSMUpdateMaintenanceWindowInput {
  WindowId: String!
  Name: String
  Description: String
  StartDate: String
  EndDate: String
  Schedule: String
  ScheduleTimezone: String
  Duration: Int
  Cutoff: Int
  AllowUnassociatedTargets: Boolean
  Enabled: Boolean
  Replace: Boolean
}

type AwsSSMUpdateMaintenanceWindowOutput {
  WindowId: String
  Name: String
  Description: String
  StartDate: String
  EndDate: String
  Schedule: String
  ScheduleTimezone: String
  Duration: Int
  Cutoff: Int
  AllowUnassociatedTargets: Boolean
  Enabled: Boolean
}

input AwsSSMUpdateMaintenanceWindowTargetInput {
  WindowId: String!
  WindowTargetId: String!
  Targets: [AwsSSMSxInput]
  OwnerInformation: String
  Name: String
  Description: String
  Replace: Boolean
}

type AwsSSMUpdateMaintenanceWindowTargetOutput {
  WindowId: String
  WindowTargetId: String
  Targets: [AwsSSMSx]
  OwnerInformation: String
  Name: String
  Description: String
}

input AwsSSMUpdateMaintenanceWindowTaskInput {
  WindowId: String!
  WindowTaskId: String!
  Targets: [AwsSSMSxInput]
  TaskArn: String
  ServiceRoleArn: String
  TaskParameters: JSON
  TaskInvocationParameters: AwsSSMSh8Input
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  LoggingInfo: AwsSSMSchInput
  Name: String
  Description: String
  Replace: Boolean
}

type AwsSSMUpdateMaintenanceWindowTaskOutput {
  WindowId: String
  WindowTaskId: String
  Targets: [AwsSSMSx]
  TaskArn: String
  ServiceRoleArn: String
  TaskParameters: JSON
  TaskInvocationParameters: AwsSSMSh8
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  LoggingInfo: AwsSSMSch
  Name: String
  Description: String
}

input AwsSSMUpdateManagedInstanceRoleInput {
  InstanceId: String!
  IamRole: String!
}

input AwsSSMUpdateOpsItemInput {
  Description: String
  OperationalData: JSON
  OperationalDataToDelete: [String]
  Notifications: [AwsSSMS3fInput]
  Priority: Int
  RelatedOpsItems: [AwsSSMS3jInput]
  Status: String
  OpsItemId: String!
  Title: String
}

input AwsSSMUpdatePatchBaselineInput {
  BaselineId: String!
  Name: String
  GlobalFilters: AwsSSMS3rInput
  ApprovalRules: AwsSSMS3xInput
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  ApprovedPatchesEnableNonSecurity: Boolean
  RejectedPatches: [String]
  RejectedPatchesAction: String
  Description: String
  Sources: [AwsSSMS47Input]
  Replace: Boolean
}

type AwsSSMUpdatePatchBaselineOutput {
  BaselineId: String
  Name: String
  OperatingSystem: String
  GlobalFilters: AwsSSMS3r
  ApprovalRules: AwsSSMS3x
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  ApprovedPatchesEnableNonSecurity: Boolean
  RejectedPatches: [String]
  RejectedPatchesAction: String
  CreatedDate: Date
  ModifiedDate: Date
  Description: String
  Sources: [AwsSSMS47]
}

input AwsSSMUpdateServiceSettingInput {
  SettingId: String!
  SettingValue: String!
}

"""AWS Step Functions (2016-11-23)"""
type AwsStepFunctions {
  createActivity(input: AwsStepFunctionsCreateActivityInput!, config: AwsConfig): AwsStepFunctionsCreateActivityOutput
  createStateMachine(input: AwsStepFunctionsCreateStateMachineInput!, config: AwsConfig): AwsStepFunctionsCreateStateMachineOutput
  deleteActivity(input: AwsStepFunctionsDeleteActivityInput!, config: AwsConfig): JSON
  deleteStateMachine(input: AwsStepFunctionsDeleteStateMachineInput!, config: AwsConfig): JSON
  describeActivity(input: AwsStepFunctionsDescribeActivityInput!, config: AwsConfig): AwsStepFunctionsDescribeActivityOutput
  describeExecution(input: AwsStepFunctionsDescribeExecutionInput!, config: AwsConfig): AwsStepFunctionsDescribeExecutionOutput
  describeStateMachine(input: AwsStepFunctionsDescribeStateMachineInput!, config: AwsConfig): AwsStepFunctionsDescribeStateMachineOutput
  describeStateMachineForExecution(input: AwsStepFunctionsDescribeStateMachineForExecutionInput!, config: AwsConfig): AwsStepFunctionsDescribeStateMachineForExecutionOutput
  getActivityTask(input: AwsStepFunctionsGetActivityTaskInput!, config: AwsConfig): AwsStepFunctionsGetActivityTaskOutput
  getExecutionHistory(input: AwsStepFunctionsGetExecutionHistoryInput!, config: AwsConfig): AwsStepFunctionsGetExecutionHistoryOutput
  listActivities(input: AwsStepFunctionsListActivitiesInput, config: AwsConfig): AwsStepFunctionsListActivitiesOutput
  listExecutions(input: AwsStepFunctionsListExecutionsInput!, config: AwsConfig): AwsStepFunctionsListExecutionsOutput
  listStateMachines(input: AwsStepFunctionsListStateMachinesInput, config: AwsConfig): AwsStepFunctionsListStateMachinesOutput
  listTagsForResource(input: AwsStepFunctionsListTagsForResourceInput!, config: AwsConfig): AwsStepFunctionsListTagsForResourceOutput
  sendTaskFailure(input: AwsStepFunctionsSendTaskFailureInput!, config: AwsConfig): JSON
  sendTaskHeartbeat(input: AwsStepFunctionsSendTaskHeartbeatInput!, config: AwsConfig): JSON
  sendTaskSuccess(input: AwsStepFunctionsSendTaskSuccessInput!, config: AwsConfig): JSON
  startExecution(input: AwsStepFunctionsStartExecutionInput!, config: AwsConfig): AwsStepFunctionsStartExecutionOutput
  stopExecution(input: AwsStepFunctionsStopExecutionInput!, config: AwsConfig): AwsStepFunctionsStopExecutionOutput
  tagResource(input: AwsStepFunctionsTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsStepFunctionsUntagResourceInput!, config: AwsConfig): JSON
  updateStateMachine(input: AwsStepFunctionsUpdateStateMachineInput!, config: AwsConfig): AwsStepFunctionsUpdateStateMachineOutput
}

input AwsStepFunctionsCreateActivityInput {
  name: String!
  tags: [AwsStepFunctionsS3Input]
}

type AwsStepFunctionsCreateActivityOutput {
  activityArn: String!
  creationDate: Date!
}

input AwsStepFunctionsCreateStateMachineInput {
  name: String!
  definition: String!
  roleArn: String!
  tags: [AwsStepFunctionsS3Input]
}

type AwsStepFunctionsCreateStateMachineOutput {
  stateMachineArn: String!
  creationDate: Date!
}

input AwsStepFunctionsDeleteActivityInput {
  activityArn: String!
}

input AwsStepFunctionsDeleteStateMachineInput {
  stateMachineArn: String!
}

input AwsStepFunctionsDescribeActivityInput {
  activityArn: String!
}

type AwsStepFunctionsDescribeActivityOutput {
  activityArn: String!
  name: String!
  creationDate: Date!
}

input AwsStepFunctionsDescribeExecutionInput {
  executionArn: String!
}

type AwsStepFunctionsDescribeExecutionOutput {
  executionArn: String!
  stateMachineArn: String!
  name: String
  status: String!
  startDate: Date!
  stopDate: Date
  input: String!
  output: String
}

input AwsStepFunctionsDescribeStateMachineForExecutionInput {
  executionArn: String!
}

type AwsStepFunctionsDescribeStateMachineForExecutionOutput {
  stateMachineArn: String!
  name: String!
  definition: String!
  roleArn: String!
  updateDate: Date!
}

input AwsStepFunctionsDescribeStateMachineInput {
  stateMachineArn: String!
}

type AwsStepFunctionsDescribeStateMachineOutput {
  stateMachineArn: String!
  name: String!
  status: String
  definition: String!
  roleArn: String!
  creationDate: Date!
}

input AwsStepFunctionsGetActivityTaskInput {
  activityArn: String!
  workerName: String
}

type AwsStepFunctionsGetActivityTaskOutput {
  taskToken: String
  input: String
}

input AwsStepFunctionsGetExecutionHistoryInput {
  executionArn: String!
  maxResults: Int
  reverseOrder: Boolean
  nextToken: String
}

type AwsStepFunctionsGetExecutionHistoryOutput {
  events: [AwsStepFunctionsGetExecutionHistoryOutputEvents]!
  nextToken: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEvents {
  timestamp: Date!
  type: String!
  id: JSON!
  previousEventId: JSON
  activityFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivityFailedEventDetails
  activityScheduleFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivityScheduleFailedEventDetails
  activityScheduledEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivityScheduledEventDetails
  activityStartedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivityStartedEventDetails
  activitySucceededEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivitySucceededEventDetails
  activityTimedOutEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivityTimedOutEventDetails
  taskFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsTaskFailedEventDetails
  taskScheduledEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsTaskScheduledEventDetails
  taskStartFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsTaskStartFailedEventDetails
  taskStartedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsTaskStartedEventDetails
  taskSubmitFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsTaskSubmitFailedEventDetails
  taskSubmittedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsTaskSubmittedEventDetails
  taskSucceededEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsTaskSucceededEventDetails
  taskTimedOutEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsTaskTimedOutEventDetails
  executionFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionFailedEventDetails
  executionStartedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionStartedEventDetails
  executionSucceededEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionSucceededEventDetails
  executionAbortedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionAbortedEventDetails
  executionTimedOutEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionTimedOutEventDetails
  lambdaFunctionFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionFailedEventDetails
  lambdaFunctionScheduleFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduleFailedEventDetails
  lambdaFunctionScheduledEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduledEventDetails
  lambdaFunctionStartFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionStartFailedEventDetails
  lambdaFunctionSucceededEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionSucceededEventDetails
  lambdaFunctionTimedOutEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionTimedOutEventDetails
  stateEnteredEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsStateEnteredEventDetails
  stateExitedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsStateExitedEventDetails
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivityFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivityScheduledEventDetails {
  resource: String!
  input: String
  timeoutInSeconds: JSON
  heartbeatInSeconds: JSON
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivityScheduleFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivityStartedEventDetails {
  workerName: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivitySucceededEventDetails {
  output: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivityTimedOutEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionAbortedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionStartedEventDetails {
  input: String
  roleArn: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionSucceededEventDetails {
  output: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionTimedOutEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduledEventDetails {
  resource: String!
  input: String
  timeoutInSeconds: JSON
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduleFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionStartFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionSucceededEventDetails {
  output: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionTimedOutEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsStateEnteredEventDetails {
  name: String!
  input: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsStateExitedEventDetails {
  name: String!
  output: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsTaskFailedEventDetails {
  resourceType: String!
  resource: String!
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsTaskScheduledEventDetails {
  resourceType: String!
  resource: String!
  region: String!
  parameters: String!
  timeoutInSeconds: JSON
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsTaskStartedEventDetails {
  resourceType: String!
  resource: String!
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsTaskStartFailedEventDetails {
  resourceType: String!
  resource: String!
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsTaskSubmitFailedEventDetails {
  resourceType: String!
  resource: String!
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsTaskSubmittedEventDetails {
  resourceType: String!
  resource: String!
  output: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsTaskSucceededEventDetails {
  resourceType: String!
  resource: String!
  output: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsTaskTimedOutEventDetails {
  resourceType: String!
  resource: String!
  error: String
  cause: String
}

input AwsStepFunctionsListActivitiesInput {
  maxResults: Int
  nextToken: String
}

type AwsStepFunctionsListActivitiesOutput {
  activities: [AwsStepFunctionsListActivitiesOutputActivities]!
  nextToken: String
}

type AwsStepFunctionsListActivitiesOutputActivities {
  activityArn: String!
  name: String!
  creationDate: Date!
}

input AwsStepFunctionsListExecutionsInput {
  stateMachineArn: String!
  statusFilter: String
  maxResults: Int
  nextToken: String
}

type AwsStepFunctionsListExecutionsOutput {
  executions: [AwsStepFunctionsListExecutionsOutputExecutions]!
  nextToken: String
}

type AwsStepFunctionsListExecutionsOutputExecutions {
  executionArn: String!
  stateMachineArn: String!
  name: String!
  status: String!
  startDate: Date!
  stopDate: Date
}

input AwsStepFunctionsListStateMachinesInput {
  maxResults: Int
  nextToken: String
}

type AwsStepFunctionsListStateMachinesOutput {
  stateMachines: [AwsStepFunctionsListStateMachinesOutputStateMachines]!
  nextToken: String
}

type AwsStepFunctionsListStateMachinesOutputStateMachines {
  stateMachineArn: String!
  name: String!
  creationDate: Date!
}

input AwsStepFunctionsListTagsForResourceInput {
  resourceArn: String!
}

type AwsStepFunctionsListTagsForResourceOutput {
  tags: [AwsStepFunctionsS3]
}

type AwsStepFunctionsS3 {
  key: String
  value: String
}

input AwsStepFunctionsS3Input {
  key: String
  value: String
}

input AwsStepFunctionsSendTaskFailureInput {
  taskToken: String!
  error: String
  cause: String
}

input AwsStepFunctionsSendTaskHeartbeatInput {
  taskToken: String!
}

input AwsStepFunctionsSendTaskSuccessInput {
  taskToken: String!
  output: String!
}

input AwsStepFunctionsStartExecutionInput {
  stateMachineArn: String!
  name: String
  input: String
}

type AwsStepFunctionsStartExecutionOutput {
  executionArn: String!
  startDate: Date!
}

input AwsStepFunctionsStopExecutionInput {
  executionArn: String!
  error: String
  cause: String
}

type AwsStepFunctionsStopExecutionOutput {
  stopDate: Date!
}

input AwsStepFunctionsTagResourceInput {
  resourceArn: String!
  tags: [AwsStepFunctionsS3Input]!
}

input AwsStepFunctionsUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsStepFunctionsUpdateStateMachineInput {
  stateMachineArn: String!
  definition: String
  roleArn: String
}

type AwsStepFunctionsUpdateStateMachineOutput {
  updateDate: Date!
}

"""AWS Storage Gateway (2013-06-30)"""
type AwsStorageGateway {
  activateGateway(input: AwsStorageGatewayActivateGatewayInput!, config: AwsConfig): AwsStorageGatewayActivateGatewayOutput
  addCache(input: AwsStorageGatewayAddCacheInput!, config: AwsConfig): AwsStorageGatewayAddCacheOutput
  addTagsToResource(input: AwsStorageGatewayAddTagsToResourceInput!, config: AwsConfig): AwsStorageGatewayAddTagsToResourceOutput
  addUploadBuffer(input: AwsStorageGatewayAddUploadBufferInput!, config: AwsConfig): AwsStorageGatewayAddUploadBufferOutput
  addWorkingStorage(input: AwsStorageGatewayAddWorkingStorageInput!, config: AwsConfig): AwsStorageGatewayAddWorkingStorageOutput
  assignTapePool(input: AwsStorageGatewayAssignTapePoolInput!, config: AwsConfig): AwsStorageGatewayAssignTapePoolOutput
  attachVolume(input: AwsStorageGatewayAttachVolumeInput!, config: AwsConfig): AwsStorageGatewayAttachVolumeOutput
  cancelArchival(input: AwsStorageGatewayCancelArchivalInput!, config: AwsConfig): AwsStorageGatewayCancelArchivalOutput
  cancelRetrieval(input: AwsStorageGatewayCancelRetrievalInput!, config: AwsConfig): AwsStorageGatewayCancelRetrievalOutput
  createCachediSCSIVolume(input: AwsStorageGatewayCreateCachediSCSIVolumeInput!, config: AwsConfig): AwsStorageGatewayCreateCachediSCSIVolumeOutput
  createNFSFileShare(input: AwsStorageGatewayCreateNFSFileShareInput!, config: AwsConfig): AwsStorageGatewayCreateNFSFileShareOutput
  createSMBFileShare(input: AwsStorageGatewayCreateSMBFileShareInput!, config: AwsConfig): AwsStorageGatewayCreateSMBFileShareOutput
  createSnapshot(input: AwsStorageGatewayCreateSnapshotInput!, config: AwsConfig): AwsStorageGatewayCreateSnapshotOutput
  createSnapshotFromVolumeRecoveryPoint(input: AwsStorageGatewayCreateSnapshotFromVolumeRecoveryPointInput!, config: AwsConfig): AwsStorageGatewayCreateSnapshotFromVolumeRecoveryPointOutput
  createStorediSCSIVolume(input: AwsStorageGatewayCreateStorediSCSIVolumeInput!, config: AwsConfig): AwsStorageGatewayCreateStorediSCSIVolumeOutput
  createTapeWithBarcode(input: AwsStorageGatewayCreateTapeWithBarcodeInput!, config: AwsConfig): AwsStorageGatewayCreateTapeWithBarcodeOutput
  createTapes(input: AwsStorageGatewayCreateTapesInput!, config: AwsConfig): AwsStorageGatewayCreateTapesOutput
  deleteBandwidthRateLimit(input: AwsStorageGatewayDeleteBandwidthRateLimitInput!, config: AwsConfig): AwsStorageGatewayDeleteBandwidthRateLimitOutput
  deleteChapCredentials(input: AwsStorageGatewayDeleteChapCredentialsInput!, config: AwsConfig): AwsStorageGatewayDeleteChapCredentialsOutput
  deleteFileShare(input: AwsStorageGatewayDeleteFileShareInput!, config: AwsConfig): AwsStorageGatewayDeleteFileShareOutput
  deleteGateway(input: AwsStorageGatewayDeleteGatewayInput!, config: AwsConfig): AwsStorageGatewayDeleteGatewayOutput
  deleteSnapshotSchedule(input: AwsStorageGatewayDeleteSnapshotScheduleInput!, config: AwsConfig): AwsStorageGatewayDeleteSnapshotScheduleOutput
  deleteTape(input: AwsStorageGatewayDeleteTapeInput!, config: AwsConfig): AwsStorageGatewayDeleteTapeOutput
  deleteTapeArchive(input: AwsStorageGatewayDeleteTapeArchiveInput!, config: AwsConfig): AwsStorageGatewayDeleteTapeArchiveOutput
  deleteVolume(input: AwsStorageGatewayDeleteVolumeInput!, config: AwsConfig): AwsStorageGatewayDeleteVolumeOutput
  describeBandwidthRateLimit(input: AwsStorageGatewayDescribeBandwidthRateLimitInput!, config: AwsConfig): AwsStorageGatewayDescribeBandwidthRateLimitOutput
  describeCache(input: AwsStorageGatewayDescribeCacheInput!, config: AwsConfig): AwsStorageGatewayDescribeCacheOutput
  describeCachediSCSIVolumes(input: AwsStorageGatewayDescribeCachediSCSIVolumesInput!, config: AwsConfig): AwsStorageGatewayDescribeCachediSCSIVolumesOutput
  describeChapCredentials(input: AwsStorageGatewayDescribeChapCredentialsInput!, config: AwsConfig): AwsStorageGatewayDescribeChapCredentialsOutput
  describeGatewayInformation(input: AwsStorageGatewayDescribeGatewayInformationInput!, config: AwsConfig): AwsStorageGatewayDescribeGatewayInformationOutput
  describeMaintenanceStartTime(input: AwsStorageGatewayDescribeMaintenanceStartTimeInput!, config: AwsConfig): AwsStorageGatewayDescribeMaintenanceStartTimeOutput
  describeNFSFileShares(input: AwsStorageGatewayDescribeNFSFileSharesInput!, config: AwsConfig): AwsStorageGatewayDescribeNFSFileSharesOutput
  describeSMBFileShares(input: AwsStorageGatewayDescribeSMBFileSharesInput!, config: AwsConfig): AwsStorageGatewayDescribeSMBFileSharesOutput
  describeSMBSettings(input: AwsStorageGatewayDescribeSMBSettingsInput!, config: AwsConfig): AwsStorageGatewayDescribeSMBSettingsOutput
  describeSnapshotSchedule(input: AwsStorageGatewayDescribeSnapshotScheduleInput!, config: AwsConfig): AwsStorageGatewayDescribeSnapshotScheduleOutput
  describeStorediSCSIVolumes(input: AwsStorageGatewayDescribeStorediSCSIVolumesInput!, config: AwsConfig): AwsStorageGatewayDescribeStorediSCSIVolumesOutput
  describeTapeArchives(input: AwsStorageGatewayDescribeTapeArchivesInput, config: AwsConfig): AwsStorageGatewayDescribeTapeArchivesOutput
  describeTapeRecoveryPoints(input: AwsStorageGatewayDescribeTapeRecoveryPointsInput!, config: AwsConfig): AwsStorageGatewayDescribeTapeRecoveryPointsOutput
  describeTapes(input: AwsStorageGatewayDescribeTapesInput!, config: AwsConfig): AwsStorageGatewayDescribeTapesOutput
  describeUploadBuffer(input: AwsStorageGatewayDescribeUploadBufferInput!, config: AwsConfig): AwsStorageGatewayDescribeUploadBufferOutput
  describeVTLDevices(input: AwsStorageGatewayDescribeVTLDevicesInput!, config: AwsConfig): AwsStorageGatewayDescribeVTLDevicesOutput
  describeWorkingStorage(input: AwsStorageGatewayDescribeWorkingStorageInput!, config: AwsConfig): AwsStorageGatewayDescribeWorkingStorageOutput
  detachVolume(input: AwsStorageGatewayDetachVolumeInput!, config: AwsConfig): AwsStorageGatewayDetachVolumeOutput
  disableGateway(input: AwsStorageGatewayDisableGatewayInput!, config: AwsConfig): AwsStorageGatewayDisableGatewayOutput
  joinDomain(input: AwsStorageGatewayJoinDomainInput!, config: AwsConfig): AwsStorageGatewayJoinDomainOutput
  listFileShares(input: AwsStorageGatewayListFileSharesInput, config: AwsConfig): AwsStorageGatewayListFileSharesOutput
  listGateways(input: AwsStorageGatewayListGatewaysInput, config: AwsConfig): AwsStorageGatewayListGatewaysOutput
  listLocalDisks(input: AwsStorageGatewayListLocalDisksInput!, config: AwsConfig): AwsStorageGatewayListLocalDisksOutput
  listTagsForResource(input: AwsStorageGatewayListTagsForResourceInput!, config: AwsConfig): AwsStorageGatewayListTagsForResourceOutput
  listTapes(input: AwsStorageGatewayListTapesInput, config: AwsConfig): AwsStorageGatewayListTapesOutput
  listVolumeInitiators(input: AwsStorageGatewayListVolumeInitiatorsInput!, config: AwsConfig): AwsStorageGatewayListVolumeInitiatorsOutput
  listVolumeRecoveryPoints(input: AwsStorageGatewayListVolumeRecoveryPointsInput!, config: AwsConfig): AwsStorageGatewayListVolumeRecoveryPointsOutput
  listVolumes(input: AwsStorageGatewayListVolumesInput, config: AwsConfig): AwsStorageGatewayListVolumesOutput
  notifyWhenUploaded(input: AwsStorageGatewayNotifyWhenUploadedInput!, config: AwsConfig): AwsStorageGatewayNotifyWhenUploadedOutput
  refreshCache(input: AwsStorageGatewayRefreshCacheInput!, config: AwsConfig): AwsStorageGatewayRefreshCacheOutput
  removeTagsFromResource(input: AwsStorageGatewayRemoveTagsFromResourceInput!, config: AwsConfig): AwsStorageGatewayRemoveTagsFromResourceOutput
  resetCache(input: AwsStorageGatewayResetCacheInput!, config: AwsConfig): AwsStorageGatewayResetCacheOutput
  retrieveTapeArchive(input: AwsStorageGatewayRetrieveTapeArchiveInput!, config: AwsConfig): AwsStorageGatewayRetrieveTapeArchiveOutput
  retrieveTapeRecoveryPoint(input: AwsStorageGatewayRetrieveTapeRecoveryPointInput!, config: AwsConfig): AwsStorageGatewayRetrieveTapeRecoveryPointOutput
  setLocalConsolePassword(input: AwsStorageGatewaySetLocalConsolePasswordInput!, config: AwsConfig): AwsStorageGatewaySetLocalConsolePasswordOutput
  setSMBGuestPassword(input: AwsStorageGatewaySetSMBGuestPasswordInput!, config: AwsConfig): AwsStorageGatewaySetSMBGuestPasswordOutput
  shutdownGateway(input: AwsStorageGatewayShutdownGatewayInput!, config: AwsConfig): AwsStorageGatewayShutdownGatewayOutput
  startGateway(input: AwsStorageGatewayStartGatewayInput!, config: AwsConfig): AwsStorageGatewayStartGatewayOutput
  updateBandwidthRateLimit(input: AwsStorageGatewayUpdateBandwidthRateLimitInput!, config: AwsConfig): AwsStorageGatewayUpdateBandwidthRateLimitOutput
  updateChapCredentials(input: AwsStorageGatewayUpdateChapCredentialsInput!, config: AwsConfig): AwsStorageGatewayUpdateChapCredentialsOutput
  updateGatewayInformation(input: AwsStorageGatewayUpdateGatewayInformationInput!, config: AwsConfig): AwsStorageGatewayUpdateGatewayInformationOutput
  updateGatewaySoftwareNow(input: AwsStorageGatewayUpdateGatewaySoftwareNowInput!, config: AwsConfig): AwsStorageGatewayUpdateGatewaySoftwareNowOutput
  updateMaintenanceStartTime(input: AwsStorageGatewayUpdateMaintenanceStartTimeInput!, config: AwsConfig): AwsStorageGatewayUpdateMaintenanceStartTimeOutput
  updateNFSFileShare(input: AwsStorageGatewayUpdateNFSFileShareInput!, config: AwsConfig): AwsStorageGatewayUpdateNFSFileShareOutput
  updateSMBFileShare(input: AwsStorageGatewayUpdateSMBFileShareInput!, config: AwsConfig): AwsStorageGatewayUpdateSMBFileShareOutput
  updateSMBSecurityStrategy(input: AwsStorageGatewayUpdateSMBSecurityStrategyInput!, config: AwsConfig): AwsStorageGatewayUpdateSMBSecurityStrategyOutput
  updateSnapshotSchedule(input: AwsStorageGatewayUpdateSnapshotScheduleInput!, config: AwsConfig): AwsStorageGatewayUpdateSnapshotScheduleOutput
  updateVTLDeviceType(input: AwsStorageGatewayUpdateVTLDeviceTypeInput!, config: AwsConfig): AwsStorageGatewayUpdateVTLDeviceTypeOutput
}

input AwsStorageGatewayActivateGatewayInput {
  ActivationKey: String!
  GatewayName: String!
  GatewayTimezone: String!
  GatewayRegion: String!
  GatewayType: String
  TapeDriveType: String
  MediumChangerType: String
  Tags: [AwsStorageGatewayS9Input]
}

type AwsStorageGatewayActivateGatewayOutput {
  GatewayARN: String
}

input AwsStorageGatewayAddCacheInput {
  GatewayARN: String!
  DiskIds: [String]!
}

type AwsStorageGatewayAddCacheOutput {
  GatewayARN: String
}

input AwsStorageGatewayAddTagsToResourceInput {
  ResourceARN: String!
  Tags: [AwsStorageGatewayS9Input]!
}

type AwsStorageGatewayAddTagsToResourceOutput {
  ResourceARN: String
}

input AwsStorageGatewayAddUploadBufferInput {
  GatewayARN: String!
  DiskIds: [String]!
}

type AwsStorageGatewayAddUploadBufferOutput {
  GatewayARN: String
}

input AwsStorageGatewayAddWorkingStorageInput {
  GatewayARN: String!
  DiskIds: [String]!
}

type AwsStorageGatewayAddWorkingStorageOutput {
  GatewayARN: String
}

input AwsStorageGatewayAssignTapePoolInput {
  TapeARN: String!
  PoolId: String!
}

type AwsStorageGatewayAssignTapePoolOutput {
  TapeARN: String
}

input AwsStorageGatewayAttachVolumeInput {
  GatewayARN: String!
  TargetName: String
  VolumeARN: String!
  NetworkInterfaceId: String!
  DiskId: String
}

type AwsStorageGatewayAttachVolumeOutput {
  VolumeARN: String
  TargetARN: String
}

input AwsStorageGatewayCancelArchivalInput {
  GatewayARN: String!
  TapeARN: String!
}

type AwsStorageGatewayCancelArchivalOutput {
  TapeARN: String
}

input AwsStorageGatewayCancelRetrievalInput {
  GatewayARN: String!
  TapeARN: String!
}

type AwsStorageGatewayCancelRetrievalOutput {
  TapeARN: String
}

input AwsStorageGatewayCreateCachediSCSIVolumeInput {
  GatewayARN: String!
  VolumeSizeInBytes: JSON!
  SnapshotId: String
  TargetName: String!
  SourceVolumeARN: String
  NetworkInterfaceId: String!
  ClientToken: String!
  KMSEncrypted: Boolean
  KMSKey: String
  Tags: [AwsStorageGatewayS9Input]
}

type AwsStorageGatewayCreateCachediSCSIVolumeOutput {
  VolumeARN: String
  TargetARN: String
}

input AwsStorageGatewayCreateNFSFileShareInput {
  ClientToken: String!
  NFSFileShareDefaults: AwsStorageGatewayS1cInput
  GatewayARN: String!
  KMSEncrypted: Boolean
  KMSKey: String
  Role: String!
  LocationARN: String!
  DefaultStorageClass: String
  ObjectACL: String
  ClientList: [String]
  Squash: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
  RequesterPays: Boolean
  Tags: [AwsStorageGatewayS9Input]
}

type AwsStorageGatewayCreateNFSFileShareOutput {
  FileShareARN: String
}

input AwsStorageGatewayCreateSMBFileShareInput {
  ClientToken: String!
  GatewayARN: String!
  KMSEncrypted: Boolean
  KMSKey: String
  Role: String!
  LocationARN: String!
  DefaultStorageClass: String
  ObjectACL: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
  RequesterPays: Boolean
  SMBACLEnabled: Boolean
  AdminUserList: [String]
  ValidUserList: [String]
  InvalidUserList: [String]
  Authentication: String
  Tags: [AwsStorageGatewayS9Input]
}

type AwsStorageGatewayCreateSMBFileShareOutput {
  FileShareARN: String
}

input AwsStorageGatewayCreateSnapshotFromVolumeRecoveryPointInput {
  VolumeARN: String!
  SnapshotDescription: String!
}

type AwsStorageGatewayCreateSnapshotFromVolumeRecoveryPointOutput {
  SnapshotId: String
  VolumeARN: String
  VolumeRecoveryPointTime: String
}

input AwsStorageGatewayCreateSnapshotInput {
  VolumeARN: String!
  SnapshotDescription: String!
  Tags: [AwsStorageGatewayS9Input]
}

type AwsStorageGatewayCreateSnapshotOutput {
  VolumeARN: String
  SnapshotId: String
}

input AwsStorageGatewayCreateStorediSCSIVolumeInput {
  GatewayARN: String!
  DiskId: String!
  SnapshotId: String
  PreserveExistingData: Boolean!
  TargetName: String!
  NetworkInterfaceId: String!
  KMSEncrypted: Boolean
  KMSKey: String
  Tags: [AwsStorageGatewayS9Input]
}

type AwsStorageGatewayCreateStorediSCSIVolumeOutput {
  VolumeARN: String
  VolumeSizeInBytes: JSON
  TargetARN: String
}

input AwsStorageGatewayCreateTapesInput {
  GatewayARN: String!
  TapeSizeInBytes: JSON!
  ClientToken: String!
  NumTapesToCreate: Int!
  TapeBarcodePrefix: String!
  KMSEncrypted: Boolean
  KMSKey: String
  PoolId: String
  Tags: [AwsStorageGatewayS9Input]
}

type AwsStorageGatewayCreateTapesOutput {
  TapeARNs: [String]
}

input AwsStorageGatewayCreateTapeWithBarcodeInput {
  GatewayARN: String!
  TapeSizeInBytes: JSON!
  TapeBarcode: String!
  KMSEncrypted: Boolean
  KMSKey: String
  PoolId: String
  Tags: [AwsStorageGatewayS9Input]
}

type AwsStorageGatewayCreateTapeWithBarcodeOutput {
  TapeARN: String
}

input AwsStorageGatewayDeleteBandwidthRateLimitInput {
  GatewayARN: String!
  BandwidthType: String!
}

type AwsStorageGatewayDeleteBandwidthRateLimitOutput {
  GatewayARN: String
}

input AwsStorageGatewayDeleteChapCredentialsInput {
  TargetARN: String!
  InitiatorName: String!
}

type AwsStorageGatewayDeleteChapCredentialsOutput {
  TargetARN: String
  InitiatorName: String
}

input AwsStorageGatewayDeleteFileShareInput {
  FileShareARN: String!
  ForceDelete: Boolean
}

type AwsStorageGatewayDeleteFileShareOutput {
  FileShareARN: String
}

input AwsStorageGatewayDeleteGatewayInput {
  GatewayARN: String!
}

type AwsStorageGatewayDeleteGatewayOutput {
  GatewayARN: String
}

input AwsStorageGatewayDeleteSnapshotScheduleInput {
  VolumeARN: String!
}

type AwsStorageGatewayDeleteSnapshotScheduleOutput {
  VolumeARN: String
}

input AwsStorageGatewayDeleteTapeArchiveInput {
  TapeARN: String!
}

type AwsStorageGatewayDeleteTapeArchiveOutput {
  TapeARN: String
}

input AwsStorageGatewayDeleteTapeInput {
  GatewayARN: String!
  TapeARN: String!
}

type AwsStorageGatewayDeleteTapeOutput {
  TapeARN: String
}

input AwsStorageGatewayDeleteVolumeInput {
  VolumeARN: String!
}

type AwsStorageGatewayDeleteVolumeOutput {
  VolumeARN: String
}

input AwsStorageGatewayDescribeBandwidthRateLimitInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeBandwidthRateLimitOutput {
  GatewayARN: String
  AverageUploadRateLimitInBitsPerSec: JSON
  AverageDownloadRateLimitInBitsPerSec: JSON
}

input AwsStorageGatewayDescribeCachediSCSIVolumesInput {
  VolumeARNs: [String]!
}

type AwsStorageGatewayDescribeCachediSCSIVolumesOutput {
  CachediSCSIVolumes: [AwsStorageGatewayDescribeCachediSCSIVolumesOutputCachediSCSIVolumes]
}

type AwsStorageGatewayDescribeCachediSCSIVolumesOutputCachediSCSIVolumes {
  VolumeARN: String
  VolumeId: String
  VolumeType: String
  VolumeStatus: String
  VolumeAttachmentStatus: String
  VolumeSizeInBytes: JSON
  VolumeProgress: JSON
  SourceSnapshotId: String
  VolumeiSCSIAttributes: AwsStorageGatewayS3a
  CreatedDate: Date
  VolumeUsedInBytes: JSON
  KMSKey: String
  TargetName: String
}

input AwsStorageGatewayDescribeCacheInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeCacheOutput {
  GatewayARN: String
  DiskIds: [String]
  CacheAllocatedInBytes: JSON
  CacheUsedPercentage: JSON
  CacheDirtyPercentage: JSON
  CacheHitPercentage: JSON
  CacheMissPercentage: JSON
}

input AwsStorageGatewayDescribeChapCredentialsInput {
  TargetARN: String!
}

type AwsStorageGatewayDescribeChapCredentialsOutput {
  ChapCredentials: [AwsStorageGatewayDescribeChapCredentialsOutputChapCredentials]
}

type AwsStorageGatewayDescribeChapCredentialsOutputChapCredentials {
  TargetARN: String
  SecretToAuthenticateInitiator: String
  InitiatorName: String
  SecretToAuthenticateTarget: String
}

input AwsStorageGatewayDescribeGatewayInformationInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeGatewayInformationOutput {
  GatewayARN: String
  GatewayId: String
  GatewayName: String
  GatewayTimezone: String
  GatewayState: String
  GatewayNetworkInterfaces: [AwsStorageGatewayDescribeGatewayInformationOutputGatewayNetworkInterfaces]
  GatewayType: String
  NextUpdateAvailabilityDate: String
  LastSoftwareUpdate: String
  Ec2InstanceId: String
  Ec2InstanceRegion: String
  Tags: [AwsStorageGatewayS9]
  VPCEndpoint: String
}

type AwsStorageGatewayDescribeGatewayInformationOutputGatewayNetworkInterfaces {
  Ipv4Address: String
  MacAddress: String
  Ipv6Address: String
}

input AwsStorageGatewayDescribeMaintenanceStartTimeInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeMaintenanceStartTimeOutput {
  GatewayARN: String
  HourOfDay: Int
  MinuteOfHour: Int
  DayOfWeek: Int
  DayOfMonth: Int
  Timezone: String
}

input AwsStorageGatewayDescribeNFSFileSharesInput {
  FileShareARNList: [String]!
}

type AwsStorageGatewayDescribeNFSFileSharesOutput {
  NFSFileShareInfoList: [AwsStorageGatewayDescribeNFSFileSharesOutputNFSFileShareInfoList]
}

type AwsStorageGatewayDescribeNFSFileSharesOutputNFSFileShareInfoList {
  NFSFileShareDefaults: AwsStorageGatewayS1c
  FileShareARN: String
  FileShareId: String
  FileShareStatus: String
  GatewayARN: String
  KMSEncrypted: Boolean
  KMSKey: String
  Path: String
  Role: String
  LocationARN: String
  DefaultStorageClass: String
  ObjectACL: String
  ClientList: [String]
  Squash: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
  RequesterPays: Boolean
  Tags: [AwsStorageGatewayS9]
}

input AwsStorageGatewayDescribeSMBFileSharesInput {
  FileShareARNList: [String]!
}

type AwsStorageGatewayDescribeSMBFileSharesOutput {
  SMBFileShareInfoList: [AwsStorageGatewayDescribeSMBFileSharesOutputSMBFileShareInfoList]
}

type AwsStorageGatewayDescribeSMBFileSharesOutputSMBFileShareInfoList {
  FileShareARN: String
  FileShareId: String
  FileShareStatus: String
  GatewayARN: String
  KMSEncrypted: Boolean
  KMSKey: String
  Path: String
  Role: String
  LocationARN: String
  DefaultStorageClass: String
  ObjectACL: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
  RequesterPays: Boolean
  SMBACLEnabled: Boolean
  AdminUserList: [String]
  ValidUserList: [String]
  InvalidUserList: [String]
  Authentication: String
  Tags: [AwsStorageGatewayS9]
}

input AwsStorageGatewayDescribeSMBSettingsInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeSMBSettingsOutput {
  GatewayARN: String
  DomainName: String
  SMBGuestPasswordSet: Boolean
  SMBSecurityStrategy: String
}

input AwsStorageGatewayDescribeSnapshotScheduleInput {
  VolumeARN: String!
}

type AwsStorageGatewayDescribeSnapshotScheduleOutput {
  VolumeARN: String
  StartAt: Int
  RecurrenceInHours: Int
  Description: String
  Timezone: String
}

input AwsStorageGatewayDescribeStorediSCSIVolumesInput {
  VolumeARNs: [String]!
}

type AwsStorageGatewayDescribeStorediSCSIVolumesOutput {
  StorediSCSIVolumes: [AwsStorageGatewayDescribeStorediSCSIVolumesOutputStorediSCSIVolumes]
}

type AwsStorageGatewayDescribeStorediSCSIVolumesOutputStorediSCSIVolumes {
  VolumeARN: String
  VolumeId: String
  VolumeType: String
  VolumeStatus: String
  VolumeAttachmentStatus: String
  VolumeSizeInBytes: JSON
  VolumeProgress: JSON
  VolumeDiskId: String
  SourceSnapshotId: String
  PreservedExistingData: Boolean
  VolumeiSCSIAttributes: AwsStorageGatewayS3a
  CreatedDate: Date
  VolumeUsedInBytes: JSON
  KMSKey: String
  TargetName: String
}

input AwsStorageGatewayDescribeTapeArchivesInput {
  TapeARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStorageGatewayDescribeTapeArchivesOutput {
  TapeArchives: [AwsStorageGatewayDescribeTapeArchivesOutputTapeArchives]
  Marker: String
}

type AwsStorageGatewayDescribeTapeArchivesOutputTapeArchives {
  TapeARN: String
  TapeBarcode: String
  TapeCreatedDate: Date
  TapeSizeInBytes: JSON
  CompletionTime: Date
  RetrievedTo: String
  TapeStatus: String
  TapeUsedInBytes: JSON
  KMSKey: String
  PoolId: String
}

input AwsStorageGatewayDescribeTapeRecoveryPointsInput {
  GatewayARN: String!
  Marker: String
  Limit: Int
}

type AwsStorageGatewayDescribeTapeRecoveryPointsOutput {
  GatewayARN: String
  TapeRecoveryPointInfos: [AwsStorageGatewayDescribeTapeRecoveryPointsOutputTapeRecoveryPointInfos]
  Marker: String
}

type AwsStorageGatewayDescribeTapeRecoveryPointsOutputTapeRecoveryPointInfos {
  TapeARN: String
  TapeRecoveryPointTime: Date
  TapeSizeInBytes: JSON
  TapeStatus: String
}

input AwsStorageGatewayDescribeTapesInput {
  GatewayARN: String!
  TapeARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStorageGatewayDescribeTapesOutput {
  Tapes: [AwsStorageGatewayDescribeTapesOutputTapes]
  Marker: String
}

type AwsStorageGatewayDescribeTapesOutputTapes {
  TapeARN: String
  TapeBarcode: String
  TapeCreatedDate: Date
  TapeSizeInBytes: JSON
  TapeStatus: String
  VTLDevice: String
  Progress: JSON
  TapeUsedInBytes: JSON
  KMSKey: String
  PoolId: String
}

input AwsStorageGatewayDescribeUploadBufferInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeUploadBufferOutput {
  GatewayARN: String
  DiskIds: [String]
  UploadBufferUsedInBytes: JSON
  UploadBufferAllocatedInBytes: JSON
}

input AwsStorageGatewayDescribeVTLDevicesInput {
  GatewayARN: String!
  VTLDeviceARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStorageGatewayDescribeVTLDevicesOutput {
  GatewayARN: String
  VTLDevices: [AwsStorageGatewayDescribeVTLDevicesOutputVTLDevices]
  Marker: String
}

type AwsStorageGatewayDescribeVTLDevicesOutputVTLDevices {
  VTLDeviceARN: String
  VTLDeviceType: String
  VTLDeviceVendor: String
  VTLDeviceProductIdentifier: String
  DeviceiSCSIAttributes: AwsStorageGatewayDescribeVTLDevicesOutputVTLDevicesDeviceiSCSIAttributes
}

type AwsStorageGatewayDescribeVTLDevicesOutputVTLDevicesDeviceiSCSIAttributes {
  TargetARN: String
  NetworkInterfaceId: String
  NetworkInterfacePort: Int
  ChapEnabled: Boolean
}

input AwsStorageGatewayDescribeWorkingStorageInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeWorkingStorageOutput {
  GatewayARN: String
  DiskIds: [String]
  WorkingStorageUsedInBytes: JSON
  WorkingStorageAllocatedInBytes: JSON
}

input AwsStorageGatewayDetachVolumeInput {
  VolumeARN: String!
  ForceDetach: Boolean
}

type AwsStorageGatewayDetachVolumeOutput {
  VolumeARN: String
}

input AwsStorageGatewayDisableGatewayInput {
  GatewayARN: String!
}

type AwsStorageGatewayDisableGatewayOutput {
  GatewayARN: String
}

input AwsStorageGatewayJoinDomainInput {
  GatewayARN: String!
  DomainName: String!
  OrganizationalUnit: String
  DomainControllers: [String]
  UserName: String!
  Password: String!
}

type AwsStorageGatewayJoinDomainOutput {
  GatewayARN: String
}

input AwsStorageGatewayListFileSharesInput {
  GatewayARN: String
  Limit: Int
  Marker: String
}

type AwsStorageGatewayListFileSharesOutput {
  Marker: String
  NextMarker: String
  FileShareInfoList: [AwsStorageGatewayListFileSharesOutputFileShareInfoList]
}

type AwsStorageGatewayListFileSharesOutputFileShareInfoList {
  FileShareType: String
  FileShareARN: String
  FileShareId: String
  FileShareStatus: String
  GatewayARN: String
}

input AwsStorageGatewayListGatewaysInput {
  Marker: String
  Limit: Int
}

type AwsStorageGatewayListGatewaysOutput {
  Gateways: [AwsStorageGatewayListGatewaysOutputGateways]
  Marker: String
}

type AwsStorageGatewayListGatewaysOutputGateways {
  GatewayId: String
  GatewayARN: String
  GatewayType: String
  GatewayOperationalState: String
  GatewayName: String
  Ec2InstanceId: String
  Ec2InstanceRegion: String
}

input AwsStorageGatewayListLocalDisksInput {
  GatewayARN: String!
}

type AwsStorageGatewayListLocalDisksOutput {
  GatewayARN: String
  Disks: [AwsStorageGatewayListLocalDisksOutputDisks]
}

type AwsStorageGatewayListLocalDisksOutputDisks {
  DiskId: String
  DiskPath: String
  DiskNode: String
  DiskStatus: String
  DiskSizeInBytes: JSON
  DiskAllocationType: String
  DiskAllocationResource: String
  DiskAttributeList: [String]
}

input AwsStorageGatewayListTagsForResourceInput {
  ResourceARN: String!
  Marker: String
  Limit: Int
}

type AwsStorageGatewayListTagsForResourceOutput {
  ResourceARN: String
  Marker: String
  Tags: [AwsStorageGatewayS9]
}

input AwsStorageGatewayListTapesInput {
  TapeARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStorageGatewayListTapesOutput {
  TapeInfos: [AwsStorageGatewayListTapesOutputTapeInfos]
  Marker: String
}

type AwsStorageGatewayListTapesOutputTapeInfos {
  TapeARN: String
  TapeBarcode: String
  TapeSizeInBytes: JSON
  TapeStatus: String
  GatewayARN: String
  PoolId: String
}

input AwsStorageGatewayListVolumeInitiatorsInput {
  VolumeARN: String!
}

type AwsStorageGatewayListVolumeInitiatorsOutput {
  Initiators: [String]
}

input AwsStorageGatewayListVolumeRecoveryPointsInput {
  GatewayARN: String!
}

type AwsStorageGatewayListVolumeRecoveryPointsOutput {
  GatewayARN: String
  VolumeRecoveryPointInfos: [AwsStorageGatewayListVolumeRecoveryPointsOutputVolumeRecoveryPointInfos]
}

type AwsStorageGatewayListVolumeRecoveryPointsOutputVolumeRecoveryPointInfos {
  VolumeARN: String
  VolumeSizeInBytes: JSON
  VolumeUsageInBytes: JSON
  VolumeRecoveryPointTime: String
}

input AwsStorageGatewayListVolumesInput {
  GatewayARN: String
  Marker: String
  Limit: Int
}

type AwsStorageGatewayListVolumesOutput {
  GatewayARN: String
  Marker: String
  VolumeInfos: [AwsStorageGatewayListVolumesOutputVolumeInfos]
}

type AwsStorageGatewayListVolumesOutputVolumeInfos {
  VolumeARN: String
  VolumeId: String
  GatewayARN: String
  GatewayId: String
  VolumeType: String
  VolumeSizeInBytes: JSON
  VolumeAttachmentStatus: String
}

input AwsStorageGatewayNotifyWhenUploadedInput {
  FileShareARN: String!
}

type AwsStorageGatewayNotifyWhenUploadedOutput {
  FileShareARN: String
  NotificationId: String
}

input AwsStorageGatewayRefreshCacheInput {
  FileShareARN: String!
  FolderList: [String]
  Recursive: Boolean
}

type AwsStorageGatewayRefreshCacheOutput {
  FileShareARN: String
  NotificationId: String
}

input AwsStorageGatewayRemoveTagsFromResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

type AwsStorageGatewayRemoveTagsFromResourceOutput {
  ResourceARN: String
}

input AwsStorageGatewayResetCacheInput {
  GatewayARN: String!
}

type AwsStorageGatewayResetCacheOutput {
  GatewayARN: String
}

input AwsStorageGatewayRetrieveTapeArchiveInput {
  TapeARN: String!
  GatewayARN: String!
}

type AwsStorageGatewayRetrieveTapeArchiveOutput {
  TapeARN: String
}

input AwsStorageGatewayRetrieveTapeRecoveryPointInput {
  TapeARN: String!
  GatewayARN: String!
}

type AwsStorageGatewayRetrieveTapeRecoveryPointOutput {
  TapeARN: String
}

type AwsStorageGatewayS1c {
  FileMode: String
  DirectoryMode: String
  GroupId: JSON
  OwnerId: JSON
}

input AwsStorageGatewayS1cInput {
  FileMode: String
  DirectoryMode: String
  GroupId: JSON
  OwnerId: JSON
}

type AwsStorageGatewayS3a {
  TargetARN: String
  NetworkInterfaceId: String
  NetworkInterfacePort: Int
  LunNumber: Int
  ChapEnabled: Boolean
}

type AwsStorageGatewayS9 {
  Key: String!
  Value: String!
}

input AwsStorageGatewayS9Input {
  Key: String!
  Value: String!
}

input AwsStorageGatewaySetLocalConsolePasswordInput {
  GatewayARN: String!
  LocalConsolePassword: String!
}

type AwsStorageGatewaySetLocalConsolePasswordOutput {
  GatewayARN: String
}

input AwsStorageGatewaySetSMBGuestPasswordInput {
  GatewayARN: String!
  Password: String!
}

type AwsStorageGatewaySetSMBGuestPasswordOutput {
  GatewayARN: String
}

input AwsStorageGatewayShutdownGatewayInput {
  GatewayARN: String!
}

type AwsStorageGatewayShutdownGatewayOutput {
  GatewayARN: String
}

input AwsStorageGatewayStartGatewayInput {
  GatewayARN: String!
}

type AwsStorageGatewayStartGatewayOutput {
  GatewayARN: String
}

input AwsStorageGatewayUpdateBandwidthRateLimitInput {
  GatewayARN: String!
  AverageUploadRateLimitInBitsPerSec: JSON
  AverageDownloadRateLimitInBitsPerSec: JSON
}

type AwsStorageGatewayUpdateBandwidthRateLimitOutput {
  GatewayARN: String
}

input AwsStorageGatewayUpdateChapCredentialsInput {
  TargetARN: String!
  SecretToAuthenticateInitiator: String!
  InitiatorName: String!
  SecretToAuthenticateTarget: String
}

type AwsStorageGatewayUpdateChapCredentialsOutput {
  TargetARN: String
  InitiatorName: String
}

input AwsStorageGatewayUpdateGatewayInformationInput {
  GatewayARN: String!
  GatewayName: String
  GatewayTimezone: String
}

type AwsStorageGatewayUpdateGatewayInformationOutput {
  GatewayARN: String
  GatewayName: String
}

input AwsStorageGatewayUpdateGatewaySoftwareNowInput {
  GatewayARN: String!
}

type AwsStorageGatewayUpdateGatewaySoftwareNowOutput {
  GatewayARN: String
}

input AwsStorageGatewayUpdateMaintenanceStartTimeInput {
  GatewayARN: String!
  HourOfDay: Int!
  MinuteOfHour: Int!
  DayOfWeek: Int
  DayOfMonth: Int
}

type AwsStorageGatewayUpdateMaintenanceStartTimeOutput {
  GatewayARN: String
}

input AwsStorageGatewayUpdateNFSFileShareInput {
  FileShareARN: String!
  KMSEncrypted: Boolean
  KMSKey: String
  NFSFileShareDefaults: AwsStorageGatewayS1cInput
  DefaultStorageClass: String
  ObjectACL: String
  ClientList: [String]
  Squash: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
  RequesterPays: Boolean
}

type AwsStorageGatewayUpdateNFSFileShareOutput {
  FileShareARN: String
}

input AwsStorageGatewayUpdateSMBFileShareInput {
  FileShareARN: String!
  KMSEncrypted: Boolean
  KMSKey: String
  DefaultStorageClass: String
  ObjectACL: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
  RequesterPays: Boolean
  SMBACLEnabled: Boolean
  AdminUserList: [String]
  ValidUserList: [String]
  InvalidUserList: [String]
}

type AwsStorageGatewayUpdateSMBFileShareOutput {
  FileShareARN: String
}

input AwsStorageGatewayUpdateSMBSecurityStrategyInput {
  GatewayARN: String!
  SMBSecurityStrategy: String!
}

type AwsStorageGatewayUpdateSMBSecurityStrategyOutput {
  GatewayARN: String
}

input AwsStorageGatewayUpdateSnapshotScheduleInput {
  VolumeARN: String!
  StartAt: Int!
  RecurrenceInHours: Int!
  Description: String
  Tags: [AwsStorageGatewayS9Input]
}

type AwsStorageGatewayUpdateSnapshotScheduleOutput {
  VolumeARN: String
}

input AwsStorageGatewayUpdateVTLDeviceTypeInput {
  VTLDeviceARN: String!
  DeviceType: String!
}

type AwsStorageGatewayUpdateVTLDeviceTypeOutput {
  VTLDeviceARN: String
}

"""AWS Security Token Service (2011-06-15)"""
type AwsSTS {
  assumeRole(input: AwsSTSAssumeRoleInput!, config: AwsConfig): AwsSTSAssumeRoleOutput
  assumeRoleWithSAML(input: AwsSTSAssumeRoleWithSAMLInput!, config: AwsConfig): AwsSTSAssumeRoleWithSAMLOutput
  assumeRoleWithWebIdentity(input: AwsSTSAssumeRoleWithWebIdentityInput!, config: AwsConfig): AwsSTSAssumeRoleWithWebIdentityOutput
  decodeAuthorizationMessage(input: AwsSTSDecodeAuthorizationMessageInput!, config: AwsConfig): AwsSTSDecodeAuthorizationMessageOutput
  getCallerIdentity(input: JSON, config: AwsConfig): AwsSTSGetCallerIdentityOutput
  getFederationToken(input: AwsSTSGetFederationTokenInput!, config: AwsConfig): AwsSTSGetFederationTokenOutput
  getSessionToken(input: AwsSTSGetSessionTokenInput, config: AwsConfig): AwsSTSGetSessionTokenOutput
}

input AwsSTSAssumeRoleInput {
  RoleArn: String!
  RoleSessionName: String!
  PolicyArns: [AwsSTSS4Input]
  Policy: String
  DurationSeconds: Int
  ExternalId: String
  SerialNumber: String
  TokenCode: String
}

type AwsSTSAssumeRoleOutput {
  Credentials: AwsSTSSc
  AssumedRoleUser: AwsSTSSh
  PackedPolicySize: Int
}

input AwsSTSAssumeRoleWithSAMLInput {
  RoleArn: String!
  PrincipalArn: String!
  SAMLAssertion: String!
  PolicyArns: [AwsSTSS4Input]
  Policy: String
  DurationSeconds: Int
}

type AwsSTSAssumeRoleWithSAMLOutput {
  Credentials: AwsSTSSc
  AssumedRoleUser: AwsSTSSh
  PackedPolicySize: Int
  Subject: String
  SubjectType: String
  Issuer: String
  Audience: String
  NameQualifier: String
}

input AwsSTSAssumeRoleWithWebIdentityInput {
  RoleArn: String!
  RoleSessionName: String!
  WebIdentityToken: String!
  ProviderId: String
  PolicyArns: [AwsSTSS4Input]
  Policy: String
  DurationSeconds: Int
}

type AwsSTSAssumeRoleWithWebIdentityOutput {
  Credentials: AwsSTSSc
  SubjectFromWebIdentityToken: String
  AssumedRoleUser: AwsSTSSh
  PackedPolicySize: Int
  Provider: String
  Audience: String
}

input AwsSTSDecodeAuthorizationMessageInput {
  EncodedMessage: String!
}

type AwsSTSDecodeAuthorizationMessageOutput {
  DecodedMessage: String
}

type AwsSTSGetCallerIdentityOutput {
  UserId: String
  Account: String
  Arn: String
}

input AwsSTSGetFederationTokenInput {
  Name: String!
  Policy: String
  PolicyArns: [AwsSTSS4Input]
  DurationSeconds: Int
}

type AwsSTSGetFederationTokenOutput {
  Credentials: AwsSTSSc
  FederatedUser: AwsSTSGetFederationTokenOutputFederatedUser
  PackedPolicySize: Int
}

type AwsSTSGetFederationTokenOutputFederatedUser {
  FederatedUserId: String!
  Arn: String!
}

input AwsSTSGetSessionTokenInput {
  DurationSeconds: Int
  SerialNumber: String
  TokenCode: String
}

type AwsSTSGetSessionTokenOutput {
  Credentials: AwsSTSSc
}

input AwsSTSS4Input {
  arn: String
}

type AwsSTSSc {
  AccessKeyId: String!
  SecretAccessKey: String!
  SessionToken: String!
  Expiration: Date!
}

type AwsSTSSh {
  AssumedRoleId: String!
  Arn: String!
}

"""AWS Support (2013-04-15)"""
type AwsSupport {
  addAttachmentsToSet(input: AwsSupportAddAttachmentsToSetInput!, config: AwsConfig): AwsSupportAddAttachmentsToSetOutput
  addCommunicationToCase(input: AwsSupportAddCommunicationToCaseInput!, config: AwsConfig): AwsSupportAddCommunicationToCaseOutput
  createCase(input: AwsSupportCreateCaseInput!, config: AwsConfig): AwsSupportCreateCaseOutput
  describeAttachment(input: AwsSupportDescribeAttachmentInput!, config: AwsConfig): AwsSupportDescribeAttachmentOutput
  describeCases(input: AwsSupportDescribeCasesInput, config: AwsConfig): AwsSupportDescribeCasesOutput
  describeCommunications(input: AwsSupportDescribeCommunicationsInput!, config: AwsConfig): AwsSupportDescribeCommunicationsOutput
  describeServices(input: AwsSupportDescribeServicesInput, config: AwsConfig): AwsSupportDescribeServicesOutput
  describeSeverityLevels(input: AwsSupportDescribeSeverityLevelsInput, config: AwsConfig): AwsSupportDescribeSeverityLevelsOutput
  describeTrustedAdvisorCheckRefreshStatuses(input: AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesInput!, config: AwsConfig): AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesOutput
  describeTrustedAdvisorCheckResult(input: AwsSupportDescribeTrustedAdvisorCheckResultInput!, config: AwsConfig): AwsSupportDescribeTrustedAdvisorCheckResultOutput
  describeTrustedAdvisorCheckSummaries(input: AwsSupportDescribeTrustedAdvisorCheckSummariesInput!, config: AwsConfig): AwsSupportDescribeTrustedAdvisorCheckSummariesOutput
  describeTrustedAdvisorChecks(input: AwsSupportDescribeTrustedAdvisorChecksInput!, config: AwsConfig): AwsSupportDescribeTrustedAdvisorChecksOutput
  refreshTrustedAdvisorCheck(input: AwsSupportRefreshTrustedAdvisorCheckInput!, config: AwsConfig): AwsSupportRefreshTrustedAdvisorCheckOutput
  resolveCase(input: AwsSupportResolveCaseInput, config: AwsConfig): AwsSupportResolveCaseOutput
}

input AwsSupportAddAttachmentsToSetInput {
  attachmentSetId: String
  attachments: [AwsSupportS4Input]!
}

type AwsSupportAddAttachmentsToSetOutput {
  attachmentSetId: String
  expiryTime: String
}

input AwsSupportAddCommunicationToCaseInput {
  caseId: String
  communicationBody: String!
  ccEmailAddresses: [String]
  attachmentSetId: String
}

type AwsSupportAddCommunicationToCaseOutput {
  result: Boolean
}

input AwsSupportCreateCaseInput {
  subject: String!
  serviceCode: String
  severityCode: String
  categoryCode: String
  communicationBody: String!
  ccEmailAddresses: [String]
  language: String
  issueType: String
  attachmentSetId: String
}

type AwsSupportCreateCaseOutput {
  caseId: String
}

input AwsSupportDescribeAttachmentInput {
  attachmentId: String!
}

type AwsSupportDescribeAttachmentOutput {
  attachment: AwsSupportS4
}

input AwsSupportDescribeCasesInput {
  caseIdList: [String]
  displayId: String
  afterTime: String
  beforeTime: String
  includeResolvedCases: Boolean
  nextToken: String
  maxResults: Int
  language: String
  includeCommunications: Boolean
}

type AwsSupportDescribeCasesOutput {
  cases: [AwsSupportDescribeCasesOutputCases]
  nextToken: String
}

type AwsSupportDescribeCasesOutputCases {
  caseId: String
  displayId: String
  subject: String
  status: String
  serviceCode: String
  categoryCode: String
  severityCode: String
  submittedBy: String
  timeCreated: String
  recentCommunications: AwsSupportDescribeCasesOutputCasesRecentCommunications
  ccEmailAddresses: [String]
  language: String
}

type AwsSupportDescribeCasesOutputCasesRecentCommunications {
  communications: [AwsSupportS17]
  nextToken: String
}

input AwsSupportDescribeCommunicationsInput {
  caseId: String!
  beforeTime: String
  afterTime: String
  nextToken: String
  maxResults: Int
}

type AwsSupportDescribeCommunicationsOutput {
  communications: [AwsSupportS17]
  nextToken: String
}

input AwsSupportDescribeServicesInput {
  serviceCodeList: [String]
  language: String
}

type AwsSupportDescribeServicesOutput {
  services: [AwsSupportDescribeServicesOutputServices]
}

type AwsSupportDescribeServicesOutputServices {
  code: String
  name: String
  categories: [AwsSupportDescribeServicesOutputServicesCategories]
}

type AwsSupportDescribeServicesOutputServicesCategories {
  code: String
  name: String
}

input AwsSupportDescribeSeverityLevelsInput {
  language: String
}

type AwsSupportDescribeSeverityLevelsOutput {
  severityLevels: [AwsSupportDescribeSeverityLevelsOutputSeverityLevels]
}

type AwsSupportDescribeSeverityLevelsOutputSeverityLevels {
  code: String
  name: String
}

input AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesInput {
  checkIds: [String]!
}

type AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesOutput {
  statuses: [AwsSupportS1x]!
}

input AwsSupportDescribeTrustedAdvisorCheckResultInput {
  checkId: String!
  language: String
}

type AwsSupportDescribeTrustedAdvisorCheckResultOutput {
  result: AwsSupportDescribeTrustedAdvisorCheckResultOutputResult
}

type AwsSupportDescribeTrustedAdvisorCheckResultOutputResult {
  checkId: String!
  timestamp: String!
  status: String!
  resourcesSummary: AwsSupportS22!
  categorySpecificSummary: AwsSupportS23!
  flaggedResources: [AwsSupportDescribeTrustedAdvisorCheckResultOutputResultFlaggedResources]!
}

type AwsSupportDescribeTrustedAdvisorCheckResultOutputResultFlaggedResources {
  status: String!
  region: String
  resourceId: String!
  isSuppressed: Boolean
  metadata: [String]!
}

input AwsSupportDescribeTrustedAdvisorChecksInput {
  language: String!
}

type AwsSupportDescribeTrustedAdvisorChecksOutput {
  checks: [AwsSupportDescribeTrustedAdvisorChecksOutputChecks]!
}

type AwsSupportDescribeTrustedAdvisorChecksOutputChecks {
  id: String!
  name: String!
  description: String!
  category: String!
  metadata: [String]!
}

input AwsSupportDescribeTrustedAdvisorCheckSummariesInput {
  checkIds: [String]!
}

type AwsSupportDescribeTrustedAdvisorCheckSummariesOutput {
  summaries: [AwsSupportDescribeTrustedAdvisorCheckSummariesOutputSummaries]!
}

type AwsSupportDescribeTrustedAdvisorCheckSummariesOutputSummaries {
  checkId: String!
  timestamp: String!
  status: String!
  hasFlaggedResources: Boolean
  resourcesSummary: AwsSupportS22!
  categorySpecificSummary: AwsSupportS23!
}

input AwsSupportRefreshTrustedAdvisorCheckInput {
  checkId: String!
}

type AwsSupportRefreshTrustedAdvisorCheckOutput {
  status: AwsSupportS1x!
}

input AwsSupportResolveCaseInput {
  caseId: String
}

type AwsSupportResolveCaseOutput {
  initialCaseStatus: String
  finalCaseStatus: String
}

type AwsSupportS17 {
  caseId: String
  body: String
  submittedBy: String
  timeCreated: String
  attachmentSet: [AwsSupportS17AttachmentSet]
}

type AwsSupportS17AttachmentSet {
  attachmentId: String
  fileName: String
}

type AwsSupportS1x {
  checkId: String!
  status: String!
  millisUntilNextRefreshable: JSON!
}

type AwsSupportS22 {
  resourcesProcessed: JSON!
  resourcesFlagged: JSON!
  resourcesIgnored: JSON!
  resourcesSuppressed: JSON!
}

type AwsSupportS23 {
  costOptimizing: AwsSupportS23CostOptimizing
}

type AwsSupportS23CostOptimizing {
  estimatedMonthlySavings: JSON!
  estimatedPercentMonthlySavings: JSON!
}

type AwsSupportS4 {
  fileName: String
  data: JSON
}

input AwsSupportS4Input {
  fileName: String
  data: JSON
}

"""Amazon Simple Workflow Service (2012-01-25)"""
type AwsSWF {
  countClosedWorkflowExecutions(input: AwsSWFCountClosedWorkflowExecutionsInput!, config: AwsConfig): JSON
  countOpenWorkflowExecutions(input: AwsSWFCountOpenWorkflowExecutionsInput!, config: AwsConfig): JSON
  countPendingActivityTasks(input: AwsSWFCountPendingActivityTasksInput!, config: AwsConfig): JSON
  countPendingDecisionTasks(input: AwsSWFCountPendingDecisionTasksInput!, config: AwsConfig): JSON
  deprecateActivityType(input: AwsSWFDeprecateActivityTypeInput!, config: AwsConfig): JSON
  deprecateDomain(input: AwsSWFDeprecateDomainInput!, config: AwsConfig): JSON
  deprecateWorkflowType(input: AwsSWFDeprecateWorkflowTypeInput!, config: AwsConfig): JSON
  describeActivityType(input: AwsSWFDescribeActivityTypeInput!, config: AwsConfig): AwsSWFDescribeActivityTypeOutput
  describeDomain(input: AwsSWFDescribeDomainInput!, config: AwsConfig): AwsSWFDescribeDomainOutput
  describeWorkflowExecution(input: AwsSWFDescribeWorkflowExecutionInput!, config: AwsConfig): AwsSWFDescribeWorkflowExecutionOutput
  describeWorkflowType(input: AwsSWFDescribeWorkflowTypeInput!, config: AwsConfig): AwsSWFDescribeWorkflowTypeOutput
  getWorkflowExecutionHistory(input: AwsSWFGetWorkflowExecutionHistoryInput!, config: AwsConfig): AwsSWFGetWorkflowExecutionHistoryOutput
  listActivityTypes(input: AwsSWFListActivityTypesInput!, config: AwsConfig): AwsSWFListActivityTypesOutput
  listClosedWorkflowExecutions(input: AwsSWFListClosedWorkflowExecutionsInput!, config: AwsConfig): JSON
  listDomains(input: AwsSWFListDomainsInput!, config: AwsConfig): AwsSWFListDomainsOutput
  listOpenWorkflowExecutions(input: AwsSWFListOpenWorkflowExecutionsInput!, config: AwsConfig): JSON
  listTagsForResource(input: AwsSWFListTagsForResourceInput!, config: AwsConfig): AwsSWFListTagsForResourceOutput
  listWorkflowTypes(input: AwsSWFListWorkflowTypesInput!, config: AwsConfig): AwsSWFListWorkflowTypesOutput
  pollForActivityTask(input: AwsSWFPollForActivityTaskInput!, config: AwsConfig): AwsSWFPollForActivityTaskOutput
  pollForDecisionTask(input: AwsSWFPollForDecisionTaskInput!, config: AwsConfig): AwsSWFPollForDecisionTaskOutput
  recordActivityTaskHeartbeat(input: AwsSWFRecordActivityTaskHeartbeatInput!, config: AwsConfig): AwsSWFRecordActivityTaskHeartbeatOutput
  registerActivityType(input: AwsSWFRegisterActivityTypeInput!, config: AwsConfig): JSON
  registerDomain(input: AwsSWFRegisterDomainInput!, config: AwsConfig): JSON
  registerWorkflowType(input: AwsSWFRegisterWorkflowTypeInput!, config: AwsConfig): JSON
  requestCancelWorkflowExecution(input: AwsSWFRequestCancelWorkflowExecutionInput!, config: AwsConfig): JSON
  respondActivityTaskCanceled(input: AwsSWFRespondActivityTaskCanceledInput!, config: AwsConfig): JSON
  respondActivityTaskCompleted(input: AwsSWFRespondActivityTaskCompletedInput!, config: AwsConfig): JSON
  respondActivityTaskFailed(input: AwsSWFRespondActivityTaskFailedInput!, config: AwsConfig): JSON
  respondDecisionTaskCompleted(input: AwsSWFRespondDecisionTaskCompletedInput!, config: AwsConfig): JSON
  signalWorkflowExecution(input: AwsSWFSignalWorkflowExecutionInput!, config: AwsConfig): JSON
  startWorkflowExecution(input: AwsSWFStartWorkflowExecutionInput!, config: AwsConfig): AwsSWFStartWorkflowExecutionOutput
  tagResource(input: AwsSWFTagResourceInput!, config: AwsConfig): JSON
  terminateWorkflowExecution(input: AwsSWFTerminateWorkflowExecutionInput!, config: AwsConfig): JSON
  undeprecateActivityType(input: AwsSWFUndeprecateActivityTypeInput!, config: AwsConfig): JSON
  undeprecateDomain(input: AwsSWFUndeprecateDomainInput!, config: AwsConfig): JSON
  undeprecateWorkflowType(input: AwsSWFUndeprecateWorkflowTypeInput!, config: AwsConfig): JSON
  untagResource(input: AwsSWFUntagResourceInput!, config: AwsConfig): JSON
}

input AwsSWFCountClosedWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSWFS3Input
  closeTimeFilter: AwsSWFS3Input
  executionFilter: AwsSWFS5Input
  typeFilter: AwsSWFS7Input
  tagFilter: AwsSWFSaInput
  closeStatusFilter: AwsSWFScInput
}

input AwsSWFCountOpenWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSWFS3Input!
  typeFilter: AwsSWFS7Input
  tagFilter: AwsSWFSaInput
  executionFilter: AwsSWFS5Input
}

input AwsSWFCountPendingActivityTasksInput {
  domain: String!
  taskList: AwsSWFSjInput!
}

input AwsSWFCountPendingDecisionTasksInput {
  domain: String!
  taskList: AwsSWFSjInput!
}

input AwsSWFDeprecateActivityTypeInput {
  domain: String!
  activityType: AwsSWFSnInput!
}

input AwsSWFDeprecateDomainInput {
  name: String!
}

input AwsSWFDeprecateWorkflowTypeInput {
  domain: String!
  workflowType: AwsSWFSrInput!
}

input AwsSWFDescribeActivityTypeInput {
  domain: String!
  activityType: AwsSWFSnInput!
}

type AwsSWFDescribeActivityTypeOutput {
  typeInfo: AwsSWFSu!
  configuration: AwsSWFDescribeActivityTypeOutputConfiguration!
}

type AwsSWFDescribeActivityTypeOutputConfiguration {
  defaultTaskStartToCloseTimeout: String
  defaultTaskHeartbeatTimeout: String
  defaultTaskList: AwsSWFSj
  defaultTaskPriority: String
  defaultTaskScheduleToStartTimeout: String
  defaultTaskScheduleToCloseTimeout: String
}

input AwsSWFDescribeDomainInput {
  name: String!
}

type AwsSWFDescribeDomainOutput {
  domainInfo: AwsSWFS12!
  configuration: AwsSWFDescribeDomainOutputConfiguration!
}

type AwsSWFDescribeDomainOutputConfiguration {
  workflowExecutionRetentionPeriodInDays: String!
}

input AwsSWFDescribeWorkflowExecutionInput {
  domain: String!
  execution: AwsSWFS17Input!
}

type AwsSWFDescribeWorkflowExecutionOutput {
  executionInfo: AwsSWFS1a!
  executionConfiguration: AwsSWFDescribeWorkflowExecutionOutputExecutionConfiguration!
  openCounts: AwsSWFDescribeWorkflowExecutionOutputOpenCounts!
  latestActivityTaskTimestamp: Date
  latestExecutionContext: String
}

type AwsSWFDescribeWorkflowExecutionOutputExecutionConfiguration {
  taskStartToCloseTimeout: String!
  executionStartToCloseTimeout: String!
  taskList: AwsSWFSj!
  taskPriority: String
  childPolicy: String!
  lambdaRole: String
}

type AwsSWFDescribeWorkflowExecutionOutputOpenCounts {
  openActivityTasks: Int!
  openDecisionTasks: Int!
  openTimers: Int!
  openChildWorkflowExecutions: Int!
  openLambdaFunctions: Int
}

input AwsSWFDescribeWorkflowTypeInput {
  domain: String!
  workflowType: AwsSWFSrInput!
}

type AwsSWFDescribeWorkflowTypeOutput {
  typeInfo: AwsSWFS1m!
  configuration: AwsSWFDescribeWorkflowTypeOutputConfiguration!
}

type AwsSWFDescribeWorkflowTypeOutputConfiguration {
  defaultTaskStartToCloseTimeout: String
  defaultExecutionStartToCloseTimeout: String
  defaultTaskList: AwsSWFSj
  defaultTaskPriority: String
  defaultChildPolicy: String
  defaultLambdaRole: String
}

input AwsSWFGetWorkflowExecutionHistoryInput {
  domain: String!
  execution: AwsSWFS17Input!
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSWFGetWorkflowExecutionHistoryOutput {
  events: [AwsSWFS1t]!
  nextPageToken: String
}

input AwsSWFListActivityTypesInput {
  domain: String!
  name: String
  registrationStatus: String!
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSWFListActivityTypesOutput {
  typeInfos: [AwsSWFSu]!
  nextPageToken: String
}

input AwsSWFListClosedWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSWFS3Input
  closeTimeFilter: AwsSWFS3Input
  executionFilter: AwsSWFS5Input
  closeStatusFilter: AwsSWFScInput
  typeFilter: AwsSWFS7Input
  tagFilter: AwsSWFSaInput
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

input AwsSWFListDomainsInput {
  nextPageToken: String
  registrationStatus: String!
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSWFListDomainsOutput {
  domainInfos: [AwsSWFS12]!
  nextPageToken: String
}

input AwsSWFListOpenWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSWFS3Input!
  typeFilter: AwsSWFS7Input
  tagFilter: AwsSWFSaInput
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
  executionFilter: AwsSWFS5Input
}

input AwsSWFListTagsForResourceInput {
  resourceArn: String!
}

type AwsSWFListTagsForResourceOutput {
  tags: [AwsSWFS4o]
}

input AwsSWFListWorkflowTypesInput {
  domain: String!
  name: String
  registrationStatus: String!
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSWFListWorkflowTypesOutput {
  typeInfos: [AwsSWFS1m]!
  nextPageToken: String
}

input AwsSWFPollForActivityTaskInput {
  domain: String!
  taskList: AwsSWFSjInput!
  identity: String
}

type AwsSWFPollForActivityTaskOutput {
  taskToken: String!
  activityId: String!
  startedEventId: JSON!
  workflowExecution: AwsSWFS17!
  activityType: AwsSWFSn!
  input: String
}

input AwsSWFPollForDecisionTaskInput {
  domain: String!
  taskList: AwsSWFSjInput!
  identity: String
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSWFPollForDecisionTaskOutput {
  taskToken: String!
  startedEventId: JSON!
  workflowExecution: AwsSWFS17!
  workflowType: AwsSWFSr!
  events: [AwsSWFS1t]!
  nextPageToken: String
  previousStartedEventId: JSON
}

input AwsSWFRecordActivityTaskHeartbeatInput {
  taskToken: String!
  details: String
}

type AwsSWFRecordActivityTaskHeartbeatOutput {
  cancelRequested: Boolean!
}

input AwsSWFRegisterActivityTypeInput {
  domain: String!
  name: String!
  version: String!
  description: String
  defaultTaskStartToCloseTimeout: String
  defaultTaskHeartbeatTimeout: String
  defaultTaskList: AwsSWFSjInput
  defaultTaskPriority: String
  defaultTaskScheduleToStartTimeout: String
  defaultTaskScheduleToCloseTimeout: String
}

input AwsSWFRegisterDomainInput {
  name: String!
  description: String
  workflowExecutionRetentionPeriodInDays: String!
  tags: [AwsSWFS4oInput]
}

input AwsSWFRegisterWorkflowTypeInput {
  domain: String!
  name: String!
  version: String!
  description: String
  defaultTaskStartToCloseTimeout: String
  defaultExecutionStartToCloseTimeout: String
  defaultTaskList: AwsSWFSjInput
  defaultTaskPriority: String
  defaultChildPolicy: String
  defaultLambdaRole: String
}

input AwsSWFRequestCancelWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  runId: String
}

input AwsSWFRespondActivityTaskCanceledInput {
  taskToken: String!
  details: String
}

input AwsSWFRespondActivityTaskCompletedInput {
  taskToken: String!
  result: String
}

input AwsSWFRespondActivityTaskFailedInput {
  taskToken: String!
  reason: String
  details: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsCancelTimerDecisionAttributesInput {
  timerId: String!
}

input AwsSWFRespondDecisionTaskCompletedDecisionsCancelWorkflowExecutionDecisionAttributesInput {
  details: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsCompleteWorkflowExecutionDecisionAttributesInput {
  result: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsContinueAsNewWorkflowExecutionDecisionAttributesInput {
  input: String
  executionStartToCloseTimeout: String
  taskList: AwsSWFSjInput
  taskPriority: String
  taskStartToCloseTimeout: String
  childPolicy: String
  tagList: [String]
  workflowTypeVersion: String
  lambdaRole: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsFailWorkflowExecutionDecisionAttributesInput {
  reason: String
  details: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsInput {
  decisionType: String!
  scheduleActivityTaskDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsScheduleActivityTaskDecisionAttributesInput
  requestCancelActivityTaskDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsRequestCancelActivityTaskDecisionAttributesInput
  completeWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsCompleteWorkflowExecutionDecisionAttributesInput
  failWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsFailWorkflowExecutionDecisionAttributesInput
  cancelWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsCancelWorkflowExecutionDecisionAttributesInput
  continueAsNewWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsContinueAsNewWorkflowExecutionDecisionAttributesInput
  recordMarkerDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsRecordMarkerDecisionAttributesInput
  startTimerDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsStartTimerDecisionAttributesInput
  cancelTimerDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsCancelTimerDecisionAttributesInput
  signalExternalWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsSignalExternalWorkflowExecutionDecisionAttributesInput
  requestCancelExternalWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsRequestCancelExternalWorkflowExecutionDecisionAttributesInput
  startChildWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsStartChildWorkflowExecutionDecisionAttributesInput
  scheduleLambdaFunctionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsScheduleLambdaFunctionDecisionAttributesInput
}

input AwsSWFRespondDecisionTaskCompletedDecisionsRecordMarkerDecisionAttributesInput {
  markerName: String!
  details: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsRequestCancelActivityTaskDecisionAttributesInput {
  activityId: String!
}

input AwsSWFRespondDecisionTaskCompletedDecisionsRequestCancelExternalWorkflowExecutionDecisionAttributesInput {
  workflowId: String!
  runId: String
  control: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsScheduleActivityTaskDecisionAttributesInput {
  activityType: AwsSWFSnInput!
  activityId: String!
  control: String
  input: String
  scheduleToCloseTimeout: String
  taskList: AwsSWFSjInput
  taskPriority: String
  scheduleToStartTimeout: String
  startToCloseTimeout: String
  heartbeatTimeout: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsScheduleLambdaFunctionDecisionAttributesInput {
  id: String!
  name: String!
  control: String
  input: String
  startToCloseTimeout: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsSignalExternalWorkflowExecutionDecisionAttributesInput {
  workflowId: String!
  runId: String
  signalName: String!
  input: String
  control: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsStartChildWorkflowExecutionDecisionAttributesInput {
  workflowType: AwsSWFSrInput!
  workflowId: String!
  control: String
  input: String
  executionStartToCloseTimeout: String
  taskList: AwsSWFSjInput
  taskPriority: String
  taskStartToCloseTimeout: String
  childPolicy: String
  tagList: [String]
  lambdaRole: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsStartTimerDecisionAttributesInput {
  timerId: String!
  control: String
  startToFireTimeout: String!
}

input AwsSWFRespondDecisionTaskCompletedInput {
  taskToken: String!
  decisions: [AwsSWFRespondDecisionTaskCompletedDecisionsInput]
  executionContext: String
}

type AwsSWFS12 {
  name: String!
  status: String!
  description: String
  arn: String
}

type AwsSWFS17 {
  workflowId: String!
  runId: String!
}

input AwsSWFS17Input {
  workflowId: String!
  runId: String!
}

type AwsSWFS1a {
  execution: AwsSWFS17!
  workflowType: AwsSWFSr!
  startTimestamp: Date!
  closeTimestamp: Date
  executionStatus: String!
  closeStatus: String
  parent: AwsSWFS17
  tagList: [String]
  cancelRequested: Boolean
}

type AwsSWFS1m {
  workflowType: AwsSWFSr!
  status: String!
  description: String
  creationDate: Date!
  deprecationDate: Date
}

type AwsSWFS1t {
  eventTimestamp: Date!
  eventType: String!
  eventId: JSON!
  workflowExecutionStartedEventAttributes: AwsSWFS1tWorkflowExecutionStartedEventAttributes
  workflowExecutionCompletedEventAttributes: AwsSWFS1tWorkflowExecutionCompletedEventAttributes
  completeWorkflowExecutionFailedEventAttributes: AwsSWFS1tCompleteWorkflowExecutionFailedEventAttributes
  workflowExecutionFailedEventAttributes: AwsSWFS1tWorkflowExecutionFailedEventAttributes
  failWorkflowExecutionFailedEventAttributes: AwsSWFS1tFailWorkflowExecutionFailedEventAttributes
  workflowExecutionTimedOutEventAttributes: AwsSWFS1tWorkflowExecutionTimedOutEventAttributes
  workflowExecutionCanceledEventAttributes: AwsSWFS1tWorkflowExecutionCanceledEventAttributes
  cancelWorkflowExecutionFailedEventAttributes: AwsSWFS1tCancelWorkflowExecutionFailedEventAttributes
  workflowExecutionContinuedAsNewEventAttributes: AwsSWFS1tWorkflowExecutionContinuedAsNewEventAttributes
  continueAsNewWorkflowExecutionFailedEventAttributes: AwsSWFS1tContinueAsNewWorkflowExecutionFailedEventAttributes
  workflowExecutionTerminatedEventAttributes: AwsSWFS1tWorkflowExecutionTerminatedEventAttributes
  workflowExecutionCancelRequestedEventAttributes: AwsSWFS1tWorkflowExecutionCancelRequestedEventAttributes
  decisionTaskScheduledEventAttributes: AwsSWFS1tDecisionTaskScheduledEventAttributes
  decisionTaskStartedEventAttributes: AwsSWFS1tDecisionTaskStartedEventAttributes
  decisionTaskCompletedEventAttributes: AwsSWFS1tDecisionTaskCompletedEventAttributes
  decisionTaskTimedOutEventAttributes: AwsSWFS1tDecisionTaskTimedOutEventAttributes
  activityTaskScheduledEventAttributes: AwsSWFS1tActivityTaskScheduledEventAttributes
  activityTaskStartedEventAttributes: AwsSWFS1tActivityTaskStartedEventAttributes
  activityTaskCompletedEventAttributes: AwsSWFS1tActivityTaskCompletedEventAttributes
  activityTaskFailedEventAttributes: AwsSWFS1tActivityTaskFailedEventAttributes
  activityTaskTimedOutEventAttributes: AwsSWFS1tActivityTaskTimedOutEventAttributes
  activityTaskCanceledEventAttributes: AwsSWFS1tActivityTaskCanceledEventAttributes
  activityTaskCancelRequestedEventAttributes: AwsSWFS1tActivityTaskCancelRequestedEventAttributes
  workflowExecutionSignaledEventAttributes: AwsSWFS1tWorkflowExecutionSignaledEventAttributes
  markerRecordedEventAttributes: AwsSWFS1tMarkerRecordedEventAttributes
  recordMarkerFailedEventAttributes: AwsSWFS1tRecordMarkerFailedEventAttributes
  timerStartedEventAttributes: AwsSWFS1tTimerStartedEventAttributes
  timerFiredEventAttributes: AwsSWFS1tTimerFiredEventAttributes
  timerCanceledEventAttributes: AwsSWFS1tTimerCanceledEventAttributes
  startChildWorkflowExecutionInitiatedEventAttributes: AwsSWFS1tStartChildWorkflowExecutionInitiatedEventAttributes
  childWorkflowExecutionStartedEventAttributes: AwsSWFS1tChildWorkflowExecutionStartedEventAttributes
  childWorkflowExecutionCompletedEventAttributes: AwsSWFS1tChildWorkflowExecutionCompletedEventAttributes
  childWorkflowExecutionFailedEventAttributes: AwsSWFS1tChildWorkflowExecutionFailedEventAttributes
  childWorkflowExecutionTimedOutEventAttributes: AwsSWFS1tChildWorkflowExecutionTimedOutEventAttributes
  childWorkflowExecutionCanceledEventAttributes: AwsSWFS1tChildWorkflowExecutionCanceledEventAttributes
  childWorkflowExecutionTerminatedEventAttributes: AwsSWFS1tChildWorkflowExecutionTerminatedEventAttributes
  signalExternalWorkflowExecutionInitiatedEventAttributes: AwsSWFS1tSignalExternalWorkflowExecutionInitiatedEventAttributes
  externalWorkflowExecutionSignaledEventAttributes: AwsSWFS1tExternalWorkflowExecutionSignaledEventAttributes
  signalExternalWorkflowExecutionFailedEventAttributes: AwsSWFS1tSignalExternalWorkflowExecutionFailedEventAttributes
  externalWorkflowExecutionCancelRequestedEventAttributes: AwsSWFS1tExternalWorkflowExecutionCancelRequestedEventAttributes
  requestCancelExternalWorkflowExecutionInitiatedEventAttributes: AwsSWFS1tRequestCancelExternalWorkflowExecutionInitiatedEventAttributes
  requestCancelExternalWorkflowExecutionFailedEventAttributes: AwsSWFS1tRequestCancelExternalWorkflowExecutionFailedEventAttributes
  scheduleActivityTaskFailedEventAttributes: AwsSWFS1tScheduleActivityTaskFailedEventAttributes
  requestCancelActivityTaskFailedEventAttributes: AwsSWFS1tRequestCancelActivityTaskFailedEventAttributes
  startTimerFailedEventAttributes: AwsSWFS1tStartTimerFailedEventAttributes
  cancelTimerFailedEventAttributes: AwsSWFS1tCancelTimerFailedEventAttributes
  startChildWorkflowExecutionFailedEventAttributes: AwsSWFS1tStartChildWorkflowExecutionFailedEventAttributes
  lambdaFunctionScheduledEventAttributes: AwsSWFS1tLambdaFunctionScheduledEventAttributes
  lambdaFunctionStartedEventAttributes: AwsSWFS1tLambdaFunctionStartedEventAttributes
  lambdaFunctionCompletedEventAttributes: AwsSWFS1tLambdaFunctionCompletedEventAttributes
  lambdaFunctionFailedEventAttributes: AwsSWFS1tLambdaFunctionFailedEventAttributes
  lambdaFunctionTimedOutEventAttributes: AwsSWFS1tLambdaFunctionTimedOutEventAttributes
  scheduleLambdaFunctionFailedEventAttributes: AwsSWFS1tScheduleLambdaFunctionFailedEventAttributes
  startLambdaFunctionFailedEventAttributes: AwsSWFS1tStartLambdaFunctionFailedEventAttributes
}

type AwsSWFS1tActivityTaskCanceledEventAttributes {
  details: String
  scheduledEventId: JSON!
  startedEventId: JSON!
  latestCancelRequestedEventId: JSON
}

type AwsSWFS1tActivityTaskCancelRequestedEventAttributes {
  decisionTaskCompletedEventId: JSON!
  activityId: String!
}

type AwsSWFS1tActivityTaskCompletedEventAttributes {
  result: String
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tActivityTaskFailedEventAttributes {
  reason: String
  details: String
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tActivityTaskScheduledEventAttributes {
  activityType: AwsSWFSn!
  activityId: String!
  input: String
  control: String
  scheduleToStartTimeout: String
  scheduleToCloseTimeout: String
  startToCloseTimeout: String
  taskList: AwsSWFSj!
  taskPriority: String
  decisionTaskCompletedEventId: JSON!
  heartbeatTimeout: String
}

type AwsSWFS1tActivityTaskStartedEventAttributes {
  identity: String
  scheduledEventId: JSON!
}

type AwsSWFS1tActivityTaskTimedOutEventAttributes {
  timeoutType: String!
  scheduledEventId: JSON!
  startedEventId: JSON!
  details: String
}

type AwsSWFS1tCancelTimerFailedEventAttributes {
  timerId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tCancelWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionCanceledEventAttributes {
  workflowExecution: AwsSWFS17!
  workflowType: AwsSWFSr!
  details: String
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionCompletedEventAttributes {
  workflowExecution: AwsSWFS17!
  workflowType: AwsSWFSr!
  result: String
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionFailedEventAttributes {
  workflowExecution: AwsSWFS17!
  workflowType: AwsSWFSr!
  reason: String
  details: String
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionStartedEventAttributes {
  workflowExecution: AwsSWFS17!
  workflowType: AwsSWFSr!
  initiatedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionTerminatedEventAttributes {
  workflowExecution: AwsSWFS17!
  workflowType: AwsSWFSr!
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionTimedOutEventAttributes {
  workflowExecution: AwsSWFS17!
  workflowType: AwsSWFSr!
  timeoutType: String!
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tCompleteWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tContinueAsNewWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tDecisionTaskCompletedEventAttributes {
  executionContext: String
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tDecisionTaskScheduledEventAttributes {
  taskList: AwsSWFSj!
  taskPriority: String
  startToCloseTimeout: String
}

type AwsSWFS1tDecisionTaskStartedEventAttributes {
  identity: String
  scheduledEventId: JSON!
}

type AwsSWFS1tDecisionTaskTimedOutEventAttributes {
  timeoutType: String!
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tExternalWorkflowExecutionCancelRequestedEventAttributes {
  workflowExecution: AwsSWFS17!
  initiatedEventId: JSON!
}

type AwsSWFS1tExternalWorkflowExecutionSignaledEventAttributes {
  workflowExecution: AwsSWFS17!
  initiatedEventId: JSON!
}

type AwsSWFS1tFailWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tLambdaFunctionCompletedEventAttributes {
  scheduledEventId: JSON!
  startedEventId: JSON!
  result: String
}

type AwsSWFS1tLambdaFunctionFailedEventAttributes {
  scheduledEventId: JSON!
  startedEventId: JSON!
  reason: String
  details: String
}

type AwsSWFS1tLambdaFunctionScheduledEventAttributes {
  id: String!
  name: String!
  control: String
  input: String
  startToCloseTimeout: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tLambdaFunctionStartedEventAttributes {
  scheduledEventId: JSON!
}

type AwsSWFS1tLambdaFunctionTimedOutEventAttributes {
  scheduledEventId: JSON!
  startedEventId: JSON!
  timeoutType: String
}

type AwsSWFS1tMarkerRecordedEventAttributes {
  markerName: String!
  details: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tRecordMarkerFailedEventAttributes {
  markerName: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tRequestCancelActivityTaskFailedEventAttributes {
  activityId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tRequestCancelExternalWorkflowExecutionFailedEventAttributes {
  workflowId: String!
  runId: String
  cause: String!
  initiatedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSWFS1tRequestCancelExternalWorkflowExecutionInitiatedEventAttributes {
  workflowId: String!
  runId: String
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSWFS1tScheduleActivityTaskFailedEventAttributes {
  activityType: AwsSWFSn!
  activityId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tScheduleLambdaFunctionFailedEventAttributes {
  id: String!
  name: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tSignalExternalWorkflowExecutionFailedEventAttributes {
  workflowId: String!
  runId: String
  cause: String!
  initiatedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSWFS1tSignalExternalWorkflowExecutionInitiatedEventAttributes {
  workflowId: String!
  runId: String
  signalName: String!
  input: String
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSWFS1tStartChildWorkflowExecutionFailedEventAttributes {
  workflowType: AwsSWFSr!
  cause: String!
  workflowId: String!
  initiatedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSWFS1tStartChildWorkflowExecutionInitiatedEventAttributes {
  workflowId: String!
  workflowType: AwsSWFSr!
  control: String
  input: String
  executionStartToCloseTimeout: String
  taskList: AwsSWFSj!
  taskPriority: String
  decisionTaskCompletedEventId: JSON!
  childPolicy: String!
  taskStartToCloseTimeout: String
  tagList: [String]
  lambdaRole: String
}

type AwsSWFS1tStartLambdaFunctionFailedEventAttributes {
  scheduledEventId: JSON
  cause: String
  message: String
}

type AwsSWFS1tStartTimerFailedEventAttributes {
  timerId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tTimerCanceledEventAttributes {
  timerId: String!
  startedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tTimerFiredEventAttributes {
  timerId: String!
  startedEventId: JSON!
}

type AwsSWFS1tTimerStartedEventAttributes {
  timerId: String!
  control: String
  startToFireTimeout: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tWorkflowExecutionCanceledEventAttributes {
  details: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tWorkflowExecutionCancelRequestedEventAttributes {
  externalWorkflowExecution: AwsSWFS17
  externalInitiatedEventId: JSON
  cause: String
}

type AwsSWFS1tWorkflowExecutionCompletedEventAttributes {
  result: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tWorkflowExecutionContinuedAsNewEventAttributes {
  input: String
  decisionTaskCompletedEventId: JSON!
  newExecutionRunId: String!
  executionStartToCloseTimeout: String
  taskList: AwsSWFSj!
  taskPriority: String
  taskStartToCloseTimeout: String
  childPolicy: String!
  tagList: [String]
  workflowType: AwsSWFSr!
  lambdaRole: String
}

type AwsSWFS1tWorkflowExecutionFailedEventAttributes {
  reason: String
  details: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tWorkflowExecutionSignaledEventAttributes {
  signalName: String!
  input: String
  externalWorkflowExecution: AwsSWFS17
  externalInitiatedEventId: JSON
}

type AwsSWFS1tWorkflowExecutionStartedEventAttributes {
  input: String
  executionStartToCloseTimeout: String
  taskStartToCloseTimeout: String
  childPolicy: String!
  taskList: AwsSWFSj!
  taskPriority: String
  workflowType: AwsSWFSr!
  tagList: [String]
  continuedExecutionRunId: String
  parentWorkflowExecution: AwsSWFS17
  parentInitiatedEventId: JSON
  lambdaRole: String
}

type AwsSWFS1tWorkflowExecutionTerminatedEventAttributes {
  reason: String
  details: String
  childPolicy: String!
  cause: String
}

type AwsSWFS1tWorkflowExecutionTimedOutEventAttributes {
  timeoutType: String!
  childPolicy: String!
}

input AwsSWFS3Input {
  oldestDate: Date!
  latestDate: Date
}

type AwsSWFS4o {
  key: String!
  value: String
}

input AwsSWFS4oInput {
  key: String!
  value: String
}

input AwsSWFS5Input {
  workflowId: String!
}

input AwsSWFS7Input {
  name: String!
  version: String
}

input AwsSWFSaInput {
  tag: String!
}

input AwsSWFScInput {
  status: String!
}

input AwsSWFSignalWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  runId: String
  signalName: String!
  input: String
}

type AwsSWFSj {
  name: String!
}

input AwsSWFSjInput {
  name: String!
}

type AwsSWFSn {
  name: String!
  version: String!
}

input AwsSWFSnInput {
  name: String!
  version: String!
}

type AwsSWFSr {
  name: String!
  version: String!
}

input AwsSWFSrInput {
  name: String!
  version: String!
}

input AwsSWFStartWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  workflowType: AwsSWFSrInput!
  taskList: AwsSWFSjInput
  taskPriority: String
  input: String
  executionStartToCloseTimeout: String
  tagList: [String]
  taskStartToCloseTimeout: String
  childPolicy: String
  lambdaRole: String
}

type AwsSWFStartWorkflowExecutionOutput {
  runId: String
}

type AwsSWFSu {
  activityType: AwsSWFSn!
  status: String!
  description: String
  creationDate: Date!
  deprecationDate: Date
}

input AwsSWFTagResourceInput {
  resourceArn: String!
  tags: [AwsSWFS4oInput]!
}

input AwsSWFTerminateWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  runId: String
  reason: String
  details: String
  childPolicy: String
}

input AwsSWFUndeprecateActivityTypeInput {
  domain: String!
  activityType: AwsSWFSnInput!
}

input AwsSWFUndeprecateDomainInput {
  name: String!
}

input AwsSWFUndeprecateWorkflowTypeInput {
  domain: String!
  workflowType: AwsSWFSrInput!
}

input AwsSWFUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

"""Amazon Textract (2018-06-27)"""
type AwsTextract {
  analyzeDocument(input: AwsTextractAnalyzeDocumentInput!, config: AwsConfig): AwsTextractAnalyzeDocumentOutput
  detectDocumentText(input: AwsTextractDetectDocumentTextInput!, config: AwsConfig): AwsTextractDetectDocumentTextOutput
  getDocumentAnalysis(input: AwsTextractGetDocumentAnalysisInput!, config: AwsConfig): AwsTextractGetDocumentAnalysisOutput
  getDocumentTextDetection(input: AwsTextractGetDocumentTextDetectionInput!, config: AwsConfig): AwsTextractGetDocumentTextDetectionOutput
  startDocumentAnalysis(input: AwsTextractStartDocumentAnalysisInput!, config: AwsConfig): AwsTextractStartDocumentAnalysisOutput
  startDocumentTextDetection(input: AwsTextractStartDocumentTextDetectionInput!, config: AwsConfig): AwsTextractStartDocumentTextDetectionOutput
}

input AwsTextractAnalyzeDocumentInput {
  Document: AwsTextractS2Input!
  FeatureTypes: [String]!
}

type AwsTextractAnalyzeDocumentOutput {
  DocumentMetadata: AwsTextractSb
  Blocks: [AwsTextractSd]
}

input AwsTextractDetectDocumentTextInput {
  Document: AwsTextractS2Input!
}

type AwsTextractDetectDocumentTextOutput {
  DocumentMetadata: AwsTextractSb
  Blocks: [AwsTextractSd]
}

input AwsTextractGetDocumentAnalysisInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
}

type AwsTextractGetDocumentAnalysisOutput {
  DocumentMetadata: AwsTextractSb
  JobStatus: String
  NextToken: String
  Blocks: [AwsTextractSd]
  Warnings: [AwsTextractS13]
  StatusMessage: String
}

input AwsTextractGetDocumentTextDetectionInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
}

type AwsTextractGetDocumentTextDetectionOutput {
  DocumentMetadata: AwsTextractSb
  JobStatus: String
  NextToken: String
  Blocks: [AwsTextractSd]
  Warnings: [AwsTextractS13]
  StatusMessage: String
}

type AwsTextractS13 {
  ErrorCode: String
  Pages: [Int]
}

input AwsTextractS1bInput {
  S3Object: AwsTextractS4Input
}

input AwsTextractS1eInput {
  SNSTopicArn: String!
  RoleArn: String!
}

input AwsTextractS2Input {
  Bytes: JSON
  S3Object: AwsTextractS4Input
}

input AwsTextractS4Input {
  Bucket: String
  Name: String
  Version: String
}

type AwsTextractSb {
  Pages: Int
}

type AwsTextractSd {
  BlockType: String
  Confidence: Float
  Text: String
  RowIndex: Int
  ColumnIndex: Int
  RowSpan: Int
  ColumnSpan: Int
  Geometry: AwsTextractSdGeometry
  Id: String
  Relationships: [AwsTextractSdRelationships]
  EntityTypes: [String]
  SelectionStatus: String
  Page: Int
}

type AwsTextractSdGeometry {
  BoundingBox: AwsTextractSdGeometryBoundingBox
  Polygon: [AwsTextractSdGeometryPolygon]
}

type AwsTextractSdGeometryBoundingBox {
  Width: Float
  Height: Float
  Left: Float
  Top: Float
}

type AwsTextractSdGeometryPolygon {
  X: Float
  Y: Float
}

type AwsTextractSdRelationships {
  Type: String
  Ids: [String]
}

input AwsTextractStartDocumentAnalysisInput {
  DocumentLocation: AwsTextractS1bInput!
  FeatureTypes: [String]!
  ClientRequestToken: String
  JobTag: String
  NotificationChannel: AwsTextractS1eInput
}

type AwsTextractStartDocumentAnalysisOutput {
  JobId: String
}

input AwsTextractStartDocumentTextDetectionInput {
  DocumentLocation: AwsTextractS1bInput!
  ClientRequestToken: String
  JobTag: String
  NotificationChannel: AwsTextractS1eInput
}

type AwsTextractStartDocumentTextDetectionOutput {
  JobId: String
}

"""Amazon Transcribe Service (2017-10-26)"""
type AwsTranscribeService {
  createVocabulary(input: AwsTranscribeServiceCreateVocabularyInput!, config: AwsConfig): AwsTranscribeServiceCreateVocabularyOutput
  deleteTranscriptionJob(input: AwsTranscribeServiceDeleteTranscriptionJobInput!, config: AwsConfig): JSON
  deleteVocabulary(input: AwsTranscribeServiceDeleteVocabularyInput!, config: AwsConfig): JSON
  getTranscriptionJob(input: AwsTranscribeServiceGetTranscriptionJobInput!, config: AwsConfig): AwsTranscribeServiceGetTranscriptionJobOutput
  getVocabulary(input: AwsTranscribeServiceGetVocabularyInput!, config: AwsConfig): AwsTranscribeServiceGetVocabularyOutput
  listTranscriptionJobs(input: AwsTranscribeServiceListTranscriptionJobsInput, config: AwsConfig): AwsTranscribeServiceListTranscriptionJobsOutput
  listVocabularies(input: AwsTranscribeServiceListVocabulariesInput, config: AwsConfig): AwsTranscribeServiceListVocabulariesOutput
  startTranscriptionJob(input: AwsTranscribeServiceStartTranscriptionJobInput!, config: AwsConfig): AwsTranscribeServiceStartTranscriptionJobOutput
  updateVocabulary(input: AwsTranscribeServiceUpdateVocabularyInput!, config: AwsConfig): AwsTranscribeServiceUpdateVocabularyOutput
}

input AwsTranscribeServiceCreateVocabularyInput {
  VocabularyName: String!
  LanguageCode: String!
  Phrases: [String]
  VocabularyFileUri: String
}

type AwsTranscribeServiceCreateVocabularyOutput {
  VocabularyName: String
  LanguageCode: String
  VocabularyState: String
  LastModifiedTime: Date
  FailureReason: String
}

input AwsTranscribeServiceDeleteTranscriptionJobInput {
  TranscriptionJobName: String!
}

input AwsTranscribeServiceDeleteVocabularyInput {
  VocabularyName: String!
}

input AwsTranscribeServiceGetTranscriptionJobInput {
  TranscriptionJobName: String!
}

type AwsTranscribeServiceGetTranscriptionJobOutput {
  TranscriptionJob: AwsTranscribeServiceSg
}

input AwsTranscribeServiceGetVocabularyInput {
  VocabularyName: String!
}

type AwsTranscribeServiceGetVocabularyOutput {
  VocabularyName: String
  LanguageCode: String
  VocabularyState: String
  LastModifiedTime: Date
  FailureReason: String
  DownloadUri: String
}

input AwsTranscribeServiceListTranscriptionJobsInput {
  Status: String
  JobNameContains: String
  NextToken: String
  MaxResults: Int
}

type AwsTranscribeServiceListTranscriptionJobsOutput {
  Status: String
  NextToken: String
  TranscriptionJobSummaries: [AwsTranscribeServiceListTranscriptionJobsOutputTranscriptionJobSummaries]
}

type AwsTranscribeServiceListTranscriptionJobsOutputTranscriptionJobSummaries {
  TranscriptionJobName: String
  CreationTime: Date
  CompletionTime: Date
  LanguageCode: String
  TranscriptionJobStatus: String
  FailureReason: String
  OutputLocationType: String
}

input AwsTranscribeServiceListVocabulariesInput {
  NextToken: String
  MaxResults: Int
  StateEquals: String
  NameContains: String
}

type AwsTranscribeServiceListVocabulariesOutput {
  Status: String
  NextToken: String
  Vocabularies: [AwsTranscribeServiceListVocabulariesOutputVocabularies]
}

type AwsTranscribeServiceListVocabulariesOutputVocabularies {
  VocabularyName: String
  LanguageCode: String
  LastModifiedTime: Date
  VocabularyState: String
}

type AwsTranscribeServiceSg {
  TranscriptionJobName: String
  TranscriptionJobStatus: String
  LanguageCode: String
  MediaSampleRateHertz: Int
  MediaFormat: String
  Media: AwsTranscribeServiceSk
  Transcript: AwsTranscribeServiceSgTranscript
  CreationTime: Date
  CompletionTime: Date
  FailureReason: String
  Settings: AwsTranscribeServiceSm
}

type AwsTranscribeServiceSgTranscript {
  TranscriptFileUri: String
}

type AwsTranscribeServiceSk {
  MediaFileUri: String
}

input AwsTranscribeServiceSkInput {
  MediaFileUri: String
}

type AwsTranscribeServiceSm {
  VocabularyName: String
  ShowSpeakerLabels: Boolean
  MaxSpeakerLabels: Int
  ChannelIdentification: Boolean
}

input AwsTranscribeServiceSmInput {
  VocabularyName: String
  ShowSpeakerLabels: Boolean
  MaxSpeakerLabels: Int
  ChannelIdentification: Boolean
}

input AwsTranscribeServiceStartTranscriptionJobInput {
  TranscriptionJobName: String!
  LanguageCode: String!
  MediaSampleRateHertz: Int
  MediaFormat: String!
  Media: AwsTranscribeServiceSkInput!
  OutputBucketName: String
  Settings: AwsTranscribeServiceSmInput
}

type AwsTranscribeServiceStartTranscriptionJobOutput {
  TranscriptionJob: AwsTranscribeServiceSg
}

input AwsTranscribeServiceUpdateVocabularyInput {
  VocabularyName: String!
  LanguageCode: String!
  Phrases: [String]
  VocabularyFileUri: String
}

type AwsTranscribeServiceUpdateVocabularyOutput {
  VocabularyName: String
  LanguageCode: String
  LastModifiedTime: Date
  VocabularyState: String
}

"""AWS Transfer for SFTP (2018-11-05)"""
type AwsTransfer {
  createServer(input: AwsTransferCreateServerInput, config: AwsConfig): AwsTransferCreateServerOutput
  createUser(input: AwsTransferCreateUserInput!, config: AwsConfig): AwsTransferCreateUserOutput
  deleteServer(input: AwsTransferDeleteServerInput!, config: AwsConfig): JSON
  deleteSshPublicKey(input: AwsTransferDeleteSshPublicKeyInput!, config: AwsConfig): JSON
  deleteUser(input: AwsTransferDeleteUserInput!, config: AwsConfig): JSON
  describeServer(input: AwsTransferDescribeServerInput!, config: AwsConfig): AwsTransferDescribeServerOutput
  describeUser(input: AwsTransferDescribeUserInput!, config: AwsConfig): AwsTransferDescribeUserOutput
  importSshPublicKey(input: AwsTransferImportSshPublicKeyInput!, config: AwsConfig): AwsTransferImportSshPublicKeyOutput
  listServers(input: AwsTransferListServersInput, config: AwsConfig): AwsTransferListServersOutput
  listTagsForResource(input: AwsTransferListTagsForResourceInput!, config: AwsConfig): AwsTransferListTagsForResourceOutput
  listUsers(input: AwsTransferListUsersInput!, config: AwsConfig): AwsTransferListUsersOutput
  startServer(input: AwsTransferStartServerInput!, config: AwsConfig): JSON
  stopServer(input: AwsTransferStopServerInput!, config: AwsConfig): JSON
  tagResource(input: AwsTransferTagResourceInput!, config: AwsConfig): JSON
  testIdentityProvider(input: AwsTransferTestIdentityProviderInput!, config: AwsConfig): AwsTransferTestIdentityProviderOutput
  untagResource(input: AwsTransferUntagResourceInput!, config: AwsConfig): JSON
  updateServer(input: AwsTransferUpdateServerInput!, config: AwsConfig): AwsTransferUpdateServerOutput
  updateUser(input: AwsTransferUpdateUserInput!, config: AwsConfig): AwsTransferUpdateUserOutput
}

input AwsTransferCreateServerInput {
  EndpointDetails: AwsTransferS2Input
  EndpointType: String
  HostKey: String
  IdentityProviderDetails: AwsTransferS6Input
  IdentityProviderType: String
  LoggingRole: String
  Tags: [AwsTransferSaInput]
}

type AwsTransferCreateServerOutput {
  ServerId: String!
}

input AwsTransferCreateUserInput {
  HomeDirectory: String
  Policy: String
  Role: String!
  ServerId: String!
  SshPublicKeyBody: String
  Tags: [AwsTransferSaInput]
  UserName: String!
}

type AwsTransferCreateUserOutput {
  ServerId: String!
  UserName: String!
}

input AwsTransferDeleteServerInput {
  ServerId: String!
}

input AwsTransferDeleteSshPublicKeyInput {
  ServerId: String!
  SshPublicKeyId: String!
  UserName: String!
}

input AwsTransferDeleteUserInput {
  ServerId: String!
  UserName: String!
}

input AwsTransferDescribeServerInput {
  ServerId: String!
}

type AwsTransferDescribeServerOutput {
  Server: AwsTransferDescribeServerOutputServer!
}

type AwsTransferDescribeServerOutputServer {
  Arn: String!
  EndpointDetails: AwsTransferS2
  EndpointType: String
  HostKeyFingerprint: String
  IdentityProviderDetails: AwsTransferS6
  IdentityProviderType: String
  LoggingRole: String
  ServerId: String
  State: String
  Tags: [AwsTransferSa]
  UserCount: Int
}

input AwsTransferDescribeUserInput {
  ServerId: String!
  UserName: String!
}

type AwsTransferDescribeUserOutput {
  ServerId: String!
  User: AwsTransferDescribeUserOutputUser!
}

type AwsTransferDescribeUserOutputUser {
  Arn: String!
  HomeDirectory: String
  Policy: String
  Role: String
  SshPublicKeys: [AwsTransferDescribeUserOutputUserSshPublicKeys]
  Tags: [AwsTransferSa]
  UserName: String
}

type AwsTransferDescribeUserOutputUserSshPublicKeys {
  DateImported: Date!
  SshPublicKeyBody: String!
  SshPublicKeyId: String!
}

input AwsTransferImportSshPublicKeyInput {
  ServerId: String!
  SshPublicKeyBody: String!
  UserName: String!
}

type AwsTransferImportSshPublicKeyOutput {
  ServerId: String!
  SshPublicKeyId: String!
  UserName: String!
}

input AwsTransferListServersInput {
  MaxResults: Int
  NextToken: String
}

type AwsTransferListServersOutput {
  NextToken: String
  Servers: [AwsTransferListServersOutputServers]!
}

type AwsTransferListServersOutputServers {
  Arn: String!
  IdentityProviderType: String
  EndpointType: String
  LoggingRole: String
  ServerId: String
  State: String
  UserCount: Int
}

input AwsTransferListTagsForResourceInput {
  Arn: String!
  MaxResults: Int
  NextToken: String
}

type AwsTransferListTagsForResourceOutput {
  Arn: String
  NextToken: String
  Tags: [AwsTransferSa]
}

input AwsTransferListUsersInput {
  MaxResults: Int
  NextToken: String
  ServerId: String!
}

type AwsTransferListUsersOutput {
  NextToken: String
  ServerId: String!
  Users: [AwsTransferListUsersOutputUsers]!
}

type AwsTransferListUsersOutputUsers {
  Arn: String!
  HomeDirectory: String
  Role: String
  SshPublicKeyCount: Int
  UserName: String
}

type AwsTransferS2 {
  VpcEndpointId: String
}

input AwsTransferS2Input {
  VpcEndpointId: String
}

type AwsTransferS6 {
  Url: String
  InvocationRole: String
}

input AwsTransferS6Input {
  Url: String
  InvocationRole: String
}

type AwsTransferSa {
  Key: String!
  Value: String!
}

input AwsTransferSaInput {
  Key: String!
  Value: String!
}

input AwsTransferStartServerInput {
  ServerId: String!
}

input AwsTransferStopServerInput {
  ServerId: String!
}

input AwsTransferTagResourceInput {
  Arn: String!
  Tags: [AwsTransferSaInput]!
}

input AwsTransferTestIdentityProviderInput {
  ServerId: String!
  UserName: String!
  UserPassword: String
}

type AwsTransferTestIdentityProviderOutput {
  Message: String
  StatusCode: Int!
  Url: String!
}

input AwsTransferUntagResourceInput {
  Arn: String!
  TagKeys: [String]!
}

input AwsTransferUpdateServerInput {
  EndpointDetails: AwsTransferS2Input
  EndpointType: String
  HostKey: String
  IdentityProviderDetails: AwsTransferS6Input
  LoggingRole: String
  ServerId: String!
}

type AwsTransferUpdateServerOutput {
  ServerId: String!
}

input AwsTransferUpdateUserInput {
  HomeDirectory: String
  Policy: String
  Role: String
  ServerId: String!
  UserName: String!
}

type AwsTransferUpdateUserOutput {
  ServerId: String!
  UserName: String!
}

"""Amazon Translate (2017-07-01)"""
type AwsTranslate {
  deleteTerminology(input: AwsTranslateDeleteTerminologyInput!, config: AwsConfig): JSON
  getTerminology(input: AwsTranslateGetTerminologyInput!, config: AwsConfig): AwsTranslateGetTerminologyOutput
  importTerminology(input: AwsTranslateImportTerminologyInput!, config: AwsConfig): AwsTranslateImportTerminologyOutput
  listTerminologies(input: AwsTranslateListTerminologiesInput, config: AwsConfig): AwsTranslateListTerminologiesOutput
  translateText(input: AwsTranslateTranslateTextInput!, config: AwsConfig): AwsTranslateTranslateTextOutput
}

input AwsTranslateDeleteTerminologyInput {
  Name: String!
}

input AwsTranslateGetTerminologyInput {
  Name: String!
  TerminologyDataFormat: String!
}

type AwsTranslateGetTerminologyOutput {
  TerminologyProperties: AwsTranslateS6
  TerminologyDataLocation: AwsTranslateGetTerminologyOutputTerminologyDataLocation
}

type AwsTranslateGetTerminologyOutputTerminologyDataLocation {
  RepositoryType: String!
  Location: String!
}

input AwsTranslateImportTerminologyInput {
  Name: String!
  MergeStrategy: String!
  Description: String
  TerminologyData: AwsTranslateImportTerminologyTerminologyDataInput!
  EncryptionKey: AwsTranslateSbInput
}

type AwsTranslateImportTerminologyOutput {
  TerminologyProperties: AwsTranslateS6
}

input AwsTranslateImportTerminologyTerminologyDataInput {
  File: JSON!
  Format: String!
}

input AwsTranslateListTerminologiesInput {
  NextToken: String
  MaxResults: Int
}

type AwsTranslateListTerminologiesOutput {
  TerminologyPropertiesList: [AwsTranslateS6]
  NextToken: String
}

type AwsTranslateS6 {
  Name: String
  Description: String
  Arn: String
  SourceLanguageCode: String
  TargetLanguageCodes: [String]
  EncryptionKey: AwsTranslateSb
  SizeBytes: Int
  TermCount: Int
  CreatedAt: Date
  LastUpdatedAt: Date
}

type AwsTranslateSb {
  Type: String!
  Id: String!
}

input AwsTranslateSbInput {
  Type: String!
  Id: String!
}

input AwsTranslateTranslateTextInput {
  Text: String!
  TerminologyNames: [String]
  SourceLanguageCode: String!
  TargetLanguageCode: String!
}

type AwsTranslateTranslateTextOutput {
  TranslatedText: String!
  SourceLanguageCode: String!
  TargetLanguageCode: String!
  AppliedTerminologies: [AwsTranslateTranslateTextOutputAppliedTerminologies]
}

type AwsTranslateTranslateTextOutputAppliedTerminologies {
  Name: String
  Terms: [AwsTranslateTranslateTextOutputAppliedTerminologiesTerms]
}

type AwsTranslateTranslateTextOutputAppliedTerminologiesTerms {
  SourceText: String
  TargetText: String
}

"""AWS WAF (2015-08-24)"""
type AwsWAF {
  createByteMatchSet(input: AwsWAFCreateByteMatchSetInput!, config: AwsConfig): AwsWAFCreateByteMatchSetOutput
  createGeoMatchSet(input: AwsWAFCreateGeoMatchSetInput!, config: AwsConfig): AwsWAFCreateGeoMatchSetOutput
  createIPSet(input: AwsWAFCreateIPSetInput!, config: AwsConfig): AwsWAFCreateIPSetOutput
  createRateBasedRule(input: AwsWAFCreateRateBasedRuleInput!, config: AwsConfig): AwsWAFCreateRateBasedRuleOutput
  createRegexMatchSet(input: AwsWAFCreateRegexMatchSetInput!, config: AwsConfig): AwsWAFCreateRegexMatchSetOutput
  createRegexPatternSet(input: AwsWAFCreateRegexPatternSetInput!, config: AwsConfig): AwsWAFCreateRegexPatternSetOutput
  createRule(input: AwsWAFCreateRuleInput!, config: AwsConfig): AwsWAFCreateRuleOutput
  createRuleGroup(input: AwsWAFCreateRuleGroupInput!, config: AwsConfig): AwsWAFCreateRuleGroupOutput
  createSizeConstraintSet(input: AwsWAFCreateSizeConstraintSetInput!, config: AwsConfig): AwsWAFCreateSizeConstraintSetOutput
  createSqlInjectionMatchSet(input: AwsWAFCreateSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFCreateSqlInjectionMatchSetOutput
  createWebACL(input: AwsWAFCreateWebACLInput!, config: AwsConfig): AwsWAFCreateWebACLOutput
  createXssMatchSet(input: AwsWAFCreateXssMatchSetInput!, config: AwsConfig): AwsWAFCreateXssMatchSetOutput
  deleteByteMatchSet(input: AwsWAFDeleteByteMatchSetInput!, config: AwsConfig): AwsWAFDeleteByteMatchSetOutput
  deleteGeoMatchSet(input: AwsWAFDeleteGeoMatchSetInput!, config: AwsConfig): AwsWAFDeleteGeoMatchSetOutput
  deleteIPSet(input: AwsWAFDeleteIPSetInput!, config: AwsConfig): AwsWAFDeleteIPSetOutput
  deleteLoggingConfiguration(input: AwsWAFDeleteLoggingConfigurationInput!, config: AwsConfig): JSON
  deletePermissionPolicy(input: AwsWAFDeletePermissionPolicyInput!, config: AwsConfig): JSON
  deleteRateBasedRule(input: AwsWAFDeleteRateBasedRuleInput!, config: AwsConfig): AwsWAFDeleteRateBasedRuleOutput
  deleteRegexMatchSet(input: AwsWAFDeleteRegexMatchSetInput!, config: AwsConfig): AwsWAFDeleteRegexMatchSetOutput
  deleteRegexPatternSet(input: AwsWAFDeleteRegexPatternSetInput!, config: AwsConfig): AwsWAFDeleteRegexPatternSetOutput
  deleteRule(input: AwsWAFDeleteRuleInput!, config: AwsConfig): AwsWAFDeleteRuleOutput
  deleteRuleGroup(input: AwsWAFDeleteRuleGroupInput!, config: AwsConfig): AwsWAFDeleteRuleGroupOutput
  deleteSizeConstraintSet(input: AwsWAFDeleteSizeConstraintSetInput!, config: AwsConfig): AwsWAFDeleteSizeConstraintSetOutput
  deleteSqlInjectionMatchSet(input: AwsWAFDeleteSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFDeleteSqlInjectionMatchSetOutput
  deleteWebACL(input: AwsWAFDeleteWebACLInput!, config: AwsConfig): AwsWAFDeleteWebACLOutput
  deleteXssMatchSet(input: AwsWAFDeleteXssMatchSetInput!, config: AwsConfig): AwsWAFDeleteXssMatchSetOutput
  getByteMatchSet(input: AwsWAFGetByteMatchSetInput!, config: AwsConfig): AwsWAFGetByteMatchSetOutput
  getChangeToken(input: JSON, config: AwsConfig): AwsWAFGetChangeTokenOutput
  getChangeTokenStatus(input: AwsWAFGetChangeTokenStatusInput!, config: AwsConfig): AwsWAFGetChangeTokenStatusOutput
  getGeoMatchSet(input: AwsWAFGetGeoMatchSetInput!, config: AwsConfig): AwsWAFGetGeoMatchSetOutput
  getIPSet(input: AwsWAFGetIPSetInput!, config: AwsConfig): AwsWAFGetIPSetOutput
  getLoggingConfiguration(input: AwsWAFGetLoggingConfigurationInput!, config: AwsConfig): AwsWAFGetLoggingConfigurationOutput
  getPermissionPolicy(input: AwsWAFGetPermissionPolicyInput!, config: AwsConfig): AwsWAFGetPermissionPolicyOutput
  getRateBasedRule(input: AwsWAFGetRateBasedRuleInput!, config: AwsConfig): AwsWAFGetRateBasedRuleOutput
  getRateBasedRuleManagedKeys(input: AwsWAFGetRateBasedRuleManagedKeysInput!, config: AwsConfig): AwsWAFGetRateBasedRuleManagedKeysOutput
  getRegexMatchSet(input: AwsWAFGetRegexMatchSetInput!, config: AwsConfig): AwsWAFGetRegexMatchSetOutput
  getRegexPatternSet(input: AwsWAFGetRegexPatternSetInput!, config: AwsConfig): AwsWAFGetRegexPatternSetOutput
  getRule(input: AwsWAFGetRuleInput!, config: AwsConfig): AwsWAFGetRuleOutput
  getRuleGroup(input: AwsWAFGetRuleGroupInput!, config: AwsConfig): AwsWAFGetRuleGroupOutput
  getSampledRequests(input: AwsWAFGetSampledRequestsInput!, config: AwsConfig): AwsWAFGetSampledRequestsOutput
  getSizeConstraintSet(input: AwsWAFGetSizeConstraintSetInput!, config: AwsConfig): AwsWAFGetSizeConstraintSetOutput
  getSqlInjectionMatchSet(input: AwsWAFGetSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFGetSqlInjectionMatchSetOutput
  getWebACL(input: AwsWAFGetWebACLInput!, config: AwsConfig): AwsWAFGetWebACLOutput
  getXssMatchSet(input: AwsWAFGetXssMatchSetInput!, config: AwsConfig): AwsWAFGetXssMatchSetOutput
  listActivatedRulesInRuleGroup(input: AwsWAFListActivatedRulesInRuleGroupInput, config: AwsConfig): AwsWAFListActivatedRulesInRuleGroupOutput
  listByteMatchSets(input: AwsWAFListByteMatchSetsInput, config: AwsConfig): AwsWAFListByteMatchSetsOutput
  listGeoMatchSets(input: AwsWAFListGeoMatchSetsInput, config: AwsConfig): AwsWAFListGeoMatchSetsOutput
  listIPSets(input: AwsWAFListIPSetsInput, config: AwsConfig): AwsWAFListIPSetsOutput
  listLoggingConfigurations(input: AwsWAFListLoggingConfigurationsInput, config: AwsConfig): AwsWAFListLoggingConfigurationsOutput
  listRateBasedRules(input: AwsWAFListRateBasedRulesInput, config: AwsConfig): AwsWAFListRateBasedRulesOutput
  listRegexMatchSets(input: AwsWAFListRegexMatchSetsInput, config: AwsConfig): AwsWAFListRegexMatchSetsOutput
  listRegexPatternSets(input: AwsWAFListRegexPatternSetsInput, config: AwsConfig): AwsWAFListRegexPatternSetsOutput
  listRuleGroups(input: AwsWAFListRuleGroupsInput, config: AwsConfig): AwsWAFListRuleGroupsOutput
  listRules(input: AwsWAFListRulesInput, config: AwsConfig): AwsWAFListRulesOutput
  listSizeConstraintSets(input: AwsWAFListSizeConstraintSetsInput, config: AwsConfig): AwsWAFListSizeConstraintSetsOutput
  listSqlInjectionMatchSets(input: AwsWAFListSqlInjectionMatchSetsInput, config: AwsConfig): AwsWAFListSqlInjectionMatchSetsOutput
  listSubscribedRuleGroups(input: AwsWAFListSubscribedRuleGroupsInput, config: AwsConfig): AwsWAFListSubscribedRuleGroupsOutput
  listTagsForResource(input: AwsWAFListTagsForResourceInput!, config: AwsConfig): AwsWAFListTagsForResourceOutput
  listWebACLs(input: AwsWAFListWebACLsInput, config: AwsConfig): AwsWAFListWebACLsOutput
  listXssMatchSets(input: AwsWAFListXssMatchSetsInput, config: AwsConfig): AwsWAFListXssMatchSetsOutput
  putLoggingConfiguration(input: AwsWAFPutLoggingConfigurationInput!, config: AwsConfig): AwsWAFPutLoggingConfigurationOutput
  putPermissionPolicy(input: AwsWAFPutPermissionPolicyInput!, config: AwsConfig): JSON
  tagResource(input: AwsWAFTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsWAFUntagResourceInput!, config: AwsConfig): JSON
  updateByteMatchSet(input: AwsWAFUpdateByteMatchSetInput!, config: AwsConfig): AwsWAFUpdateByteMatchSetOutput
  updateGeoMatchSet(input: AwsWAFUpdateGeoMatchSetInput!, config: AwsConfig): AwsWAFUpdateGeoMatchSetOutput
  updateIPSet(input: AwsWAFUpdateIPSetInput!, config: AwsConfig): AwsWAFUpdateIPSetOutput
  updateRateBasedRule(input: AwsWAFUpdateRateBasedRuleInput!, config: AwsConfig): AwsWAFUpdateRateBasedRuleOutput
  updateRegexMatchSet(input: AwsWAFUpdateRegexMatchSetInput!, config: AwsConfig): AwsWAFUpdateRegexMatchSetOutput
  updateRegexPatternSet(input: AwsWAFUpdateRegexPatternSetInput!, config: AwsConfig): AwsWAFUpdateRegexPatternSetOutput
  updateRule(input: AwsWAFUpdateRuleInput!, config: AwsConfig): AwsWAFUpdateRuleOutput
  updateRuleGroup(input: AwsWAFUpdateRuleGroupInput!, config: AwsConfig): AwsWAFUpdateRuleGroupOutput
  updateSizeConstraintSet(input: AwsWAFUpdateSizeConstraintSetInput!, config: AwsConfig): AwsWAFUpdateSizeConstraintSetOutput
  updateSqlInjectionMatchSet(input: AwsWAFUpdateSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFUpdateSqlInjectionMatchSetOutput
  updateWebACL(input: AwsWAFUpdateWebACLInput!, config: AwsConfig): AwsWAFUpdateWebACLOutput
  updateXssMatchSet(input: AwsWAFUpdateXssMatchSetInput!, config: AwsConfig): AwsWAFUpdateXssMatchSetOutput
}

input AwsWAFCreateByteMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateByteMatchSetOutput {
  ByteMatchSet: AwsWAFS5
  ChangeToken: String
}

input AwsWAFCreateGeoMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateGeoMatchSetOutput {
  GeoMatchSet: AwsWAFSh
  ChangeToken: String
}

input AwsWAFCreateIPSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateIPSetOutput {
  IPSet: AwsWAFSo
  ChangeToken: String
}

input AwsWAFCreateRateBasedRuleInput {
  Name: String!
  MetricName: String!
  RateKey: String!
  RateLimit: JSON!
  ChangeToken: String!
  Tags: [AwsWAFSxInput]
}

type AwsWAFCreateRateBasedRuleOutput {
  Rule: AwsWAFS12
  ChangeToken: String
}

input AwsWAFCreateRegexMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateRegexMatchSetOutput {
  RegexMatchSet: AwsWAFS19
  ChangeToken: String
}

input AwsWAFCreateRegexPatternSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateRegexPatternSetOutput {
  RegexPatternSet: AwsWAFS1e
  ChangeToken: String
}

input AwsWAFCreateRuleGroupInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
  Tags: [AwsWAFSxInput]
}

type AwsWAFCreateRuleGroupOutput {
  RuleGroup: AwsWAFS1m
  ChangeToken: String
}

input AwsWAFCreateRuleInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
  Tags: [AwsWAFSxInput]
}

type AwsWAFCreateRuleOutput {
  Rule: AwsWAFS1j
  ChangeToken: String
}

input AwsWAFCreateSizeConstraintSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateSizeConstraintSetOutput {
  SizeConstraintSet: AwsWAFS1p
  ChangeToken: String
}

input AwsWAFCreateSqlInjectionMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWAFS1w
  ChangeToken: String
}

input AwsWAFCreateWebACLInput {
  Name: String!
  MetricName: String!
  DefaultAction: AwsWAFS20Input!
  ChangeToken: String!
  Tags: [AwsWAFSxInput]
}

type AwsWAFCreateWebACLOutput {
  WebACL: AwsWAFS23
  ChangeToken: String
}

input AwsWAFCreateXssMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateXssMatchSetOutput {
  XssMatchSet: AwsWAFS2f
  ChangeToken: String
}

input AwsWAFDeleteByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteByteMatchSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteIPSetInput {
  IPSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteIPSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteLoggingConfigurationInput {
  ResourceArn: String!
}

input AwsWAFDeletePermissionPolicyInput {
  ResourceArn: String!
}

input AwsWAFDeleteRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWAFDeleteRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWAFDeleteRegexMatchSetInput {
  RegexMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteRegexPatternSetInput {
  RegexPatternSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteRuleGroupInput {
  RuleGroupId: String!
  ChangeToken: String!
}

type AwsWAFDeleteRuleGroupOutput {
  ChangeToken: String
}

input AwsWAFDeleteRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWAFDeleteRuleOutput {
  ChangeToken: String
}

input AwsWAFDeleteSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteWebACLInput {
  WebACLId: String!
  ChangeToken: String!
}

type AwsWAFDeleteWebACLOutput {
  ChangeToken: String
}

input AwsWAFDeleteXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteXssMatchSetOutput {
  ChangeToken: String
}

input AwsWAFGetByteMatchSetInput {
  ByteMatchSetId: String!
}

type AwsWAFGetByteMatchSetOutput {
  ByteMatchSet: AwsWAFS5
}

type AwsWAFGetChangeTokenOutput {
  ChangeToken: String
}

input AwsWAFGetChangeTokenStatusInput {
  ChangeToken: String!
}

type AwsWAFGetChangeTokenStatusOutput {
  ChangeTokenStatus: String
}

input AwsWAFGetGeoMatchSetInput {
  GeoMatchSetId: String!
}

type AwsWAFGetGeoMatchSetOutput {
  GeoMatchSet: AwsWAFSh
}

input AwsWAFGetIPSetInput {
  IPSetId: String!
}

type AwsWAFGetIPSetOutput {
  IPSet: AwsWAFSo
}

input AwsWAFGetLoggingConfigurationInput {
  ResourceArn: String!
}

type AwsWAFGetLoggingConfigurationOutput {
  LoggingConfiguration: AwsWAFS3n
}

input AwsWAFGetPermissionPolicyInput {
  ResourceArn: String!
}

type AwsWAFGetPermissionPolicyOutput {
  Policy: String
}

input AwsWAFGetRateBasedRuleInput {
  RuleId: String!
}

input AwsWAFGetRateBasedRuleManagedKeysInput {
  RuleId: String!
  NextMarker: String
}

type AwsWAFGetRateBasedRuleManagedKeysOutput {
  ManagedKeys: [String]
  NextMarker: String
}

type AwsWAFGetRateBasedRuleOutput {
  Rule: AwsWAFS12
}

input AwsWAFGetRegexMatchSetInput {
  RegexMatchSetId: String!
}

type AwsWAFGetRegexMatchSetOutput {
  RegexMatchSet: AwsWAFS19
}

input AwsWAFGetRegexPatternSetInput {
  RegexPatternSetId: String!
}

type AwsWAFGetRegexPatternSetOutput {
  RegexPatternSet: AwsWAFS1e
}

input AwsWAFGetRuleGroupInput {
  RuleGroupId: String!
}

type AwsWAFGetRuleGroupOutput {
  RuleGroup: AwsWAFS1m
}

input AwsWAFGetRuleInput {
  RuleId: String!
}

type AwsWAFGetRuleOutput {
  Rule: AwsWAFS1j
}

input AwsWAFGetSampledRequestsInput {
  WebAclId: String!
  RuleId: String!
  TimeWindow: AwsWAFS49Input!
  MaxItems: JSON!
}

type AwsWAFGetSampledRequestsOutput {
  SampledRequests: [AwsWAFGetSampledRequestsOutputSampledRequests]
  PopulationSize: JSON
  TimeWindow: AwsWAFS49
}

type AwsWAFGetSampledRequestsOutputSampledRequests {
  Request: AwsWAFGetSampledRequestsOutputSampledRequestsRequest!
  Weight: JSON!
  Timestamp: Date
  Action: String
  RuleWithinRuleGroup: String
}

type AwsWAFGetSampledRequestsOutputSampledRequestsRequest {
  ClientIP: String
  Country: String
  URI: String
  Method: String
  HTTPVersion: String
  Headers: [AwsWAFGetSampledRequestsOutputSampledRequestsRequestHeaders]
}

type AwsWAFGetSampledRequestsOutputSampledRequestsRequestHeaders {
  Name: String
  Value: String
}

input AwsWAFGetSizeConstraintSetInput {
  SizeConstraintSetId: String!
}

type AwsWAFGetSizeConstraintSetOutput {
  SizeConstraintSet: AwsWAFS1p
}

input AwsWAFGetSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
}

type AwsWAFGetSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWAFS1w
}

input AwsWAFGetWebACLInput {
  WebACLId: String!
}

type AwsWAFGetWebACLOutput {
  WebACL: AwsWAFS23
}

input AwsWAFGetXssMatchSetInput {
  XssMatchSetId: String!
}

type AwsWAFGetXssMatchSetOutput {
  XssMatchSet: AwsWAFS2f
}

input AwsWAFListActivatedRulesInRuleGroupInput {
  RuleGroupId: String
  NextMarker: String
  Limit: Int
}

type AwsWAFListActivatedRulesInRuleGroupOutput {
  NextMarker: String
  ActivatedRules: [AwsWAFS25]
}

input AwsWAFListByteMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListByteMatchSetsOutput {
  NextMarker: String
  ByteMatchSets: [AwsWAFListByteMatchSetsOutputByteMatchSets]
}

type AwsWAFListByteMatchSetsOutputByteMatchSets {
  ByteMatchSetId: String!
  Name: String!
}

input AwsWAFListGeoMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListGeoMatchSetsOutput {
  NextMarker: String
  GeoMatchSets: [AwsWAFListGeoMatchSetsOutputGeoMatchSets]
}

type AwsWAFListGeoMatchSetsOutputGeoMatchSets {
  GeoMatchSetId: String!
  Name: String!
}

input AwsWAFListIPSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListIPSetsOutput {
  NextMarker: String
  IPSets: [AwsWAFListIPSetsOutputIPSets]
}

type AwsWAFListIPSetsOutputIPSets {
  IPSetId: String!
  Name: String!
}

input AwsWAFListLoggingConfigurationsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListLoggingConfigurationsOutput {
  LoggingConfigurations: [AwsWAFS3n]
  NextMarker: String
}

input AwsWAFListRateBasedRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListRateBasedRulesOutput {
  NextMarker: String
  Rules: [AwsWAFS5k]
}

input AwsWAFListRegexMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListRegexMatchSetsOutput {
  NextMarker: String
  RegexMatchSets: [AwsWAFListRegexMatchSetsOutputRegexMatchSets]
}

type AwsWAFListRegexMatchSetsOutputRegexMatchSets {
  RegexMatchSetId: String!
  Name: String!
}

input AwsWAFListRegexPatternSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListRegexPatternSetsOutput {
  NextMarker: String
  RegexPatternSets: [AwsWAFListRegexPatternSetsOutputRegexPatternSets]
}

type AwsWAFListRegexPatternSetsOutputRegexPatternSets {
  RegexPatternSetId: String!
  Name: String!
}

input AwsWAFListRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWAFListRuleGroupsOutputRuleGroups]
}

type AwsWAFListRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
}

input AwsWAFListRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListRulesOutput {
  NextMarker: String
  Rules: [AwsWAFS5k]
}

input AwsWAFListSizeConstraintSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListSizeConstraintSetsOutput {
  NextMarker: String
  SizeConstraintSets: [AwsWAFListSizeConstraintSetsOutputSizeConstraintSets]
}

type AwsWAFListSizeConstraintSetsOutputSizeConstraintSets {
  SizeConstraintSetId: String!
  Name: String!
}

input AwsWAFListSqlInjectionMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListSqlInjectionMatchSetsOutput {
  NextMarker: String
  SqlInjectionMatchSets: [AwsWAFListSqlInjectionMatchSetsOutputSqlInjectionMatchSets]
}

type AwsWAFListSqlInjectionMatchSetsOutputSqlInjectionMatchSets {
  SqlInjectionMatchSetId: String!
  Name: String!
}

input AwsWAFListSubscribedRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListSubscribedRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWAFListSubscribedRuleGroupsOutputRuleGroups]
}

type AwsWAFListSubscribedRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
  MetricName: String!
}

input AwsWAFListTagsForResourceInput {
  NextMarker: String
  Limit: Int
  ResourceARN: String!
}

type AwsWAFListTagsForResourceOutput {
  NextMarker: String
  TagInfoForResource: AwsWAFListTagsForResourceOutputTagInfoForResource
}

type AwsWAFListTagsForResourceOutputTagInfoForResource {
  ResourceARN: String
  TagList: [AwsWAFSx]
}

input AwsWAFListWebACLsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListWebACLsOutput {
  NextMarker: String
  WebACLs: [AwsWAFListWebACLsOutputWebACLs]
}

type AwsWAFListWebACLsOutputWebACLs {
  WebACLId: String!
  Name: String!
}

input AwsWAFListXssMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListXssMatchSetsOutput {
  NextMarker: String
  XssMatchSets: [AwsWAFListXssMatchSetsOutputXssMatchSets]
}

type AwsWAFListXssMatchSetsOutputXssMatchSets {
  XssMatchSetId: String!
  Name: String!
}

input AwsWAFPutLoggingConfigurationInput {
  LoggingConfiguration: AwsWAFS3nInput!
}

type AwsWAFPutLoggingConfigurationOutput {
  LoggingConfiguration: AwsWAFS3n
}

input AwsWAFPutPermissionPolicyInput {
  ResourceArn: String!
  Policy: String!
}

"""AWS WAF Regional (2016-11-28)"""
type AwsWAFRegional {
  associateWebACL(input: AwsWAFRegionalAssociateWebACLInput!, config: AwsConfig): JSON
  createByteMatchSet(input: AwsWAFRegionalCreateByteMatchSetInput!, config: AwsConfig): AwsWAFRegionalCreateByteMatchSetOutput
  createGeoMatchSet(input: AwsWAFRegionalCreateGeoMatchSetInput!, config: AwsConfig): AwsWAFRegionalCreateGeoMatchSetOutput
  createIPSet(input: AwsWAFRegionalCreateIPSetInput!, config: AwsConfig): AwsWAFRegionalCreateIPSetOutput
  createRateBasedRule(input: AwsWAFRegionalCreateRateBasedRuleInput!, config: AwsConfig): AwsWAFRegionalCreateRateBasedRuleOutput
  createRegexMatchSet(input: AwsWAFRegionalCreateRegexMatchSetInput!, config: AwsConfig): AwsWAFRegionalCreateRegexMatchSetOutput
  createRegexPatternSet(input: AwsWAFRegionalCreateRegexPatternSetInput!, config: AwsConfig): AwsWAFRegionalCreateRegexPatternSetOutput
  createRule(input: AwsWAFRegionalCreateRuleInput!, config: AwsConfig): AwsWAFRegionalCreateRuleOutput
  createRuleGroup(input: AwsWAFRegionalCreateRuleGroupInput!, config: AwsConfig): AwsWAFRegionalCreateRuleGroupOutput
  createSizeConstraintSet(input: AwsWAFRegionalCreateSizeConstraintSetInput!, config: AwsConfig): AwsWAFRegionalCreateSizeConstraintSetOutput
  createSqlInjectionMatchSet(input: AwsWAFRegionalCreateSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFRegionalCreateSqlInjectionMatchSetOutput
  createWebACL(input: AwsWAFRegionalCreateWebACLInput!, config: AwsConfig): AwsWAFRegionalCreateWebACLOutput
  createXssMatchSet(input: AwsWAFRegionalCreateXssMatchSetInput!, config: AwsConfig): AwsWAFRegionalCreateXssMatchSetOutput
  deleteByteMatchSet(input: AwsWAFRegionalDeleteByteMatchSetInput!, config: AwsConfig): AwsWAFRegionalDeleteByteMatchSetOutput
  deleteGeoMatchSet(input: AwsWAFRegionalDeleteGeoMatchSetInput!, config: AwsConfig): AwsWAFRegionalDeleteGeoMatchSetOutput
  deleteIPSet(input: AwsWAFRegionalDeleteIPSetInput!, config: AwsConfig): AwsWAFRegionalDeleteIPSetOutput
  deleteLoggingConfiguration(input: AwsWAFRegionalDeleteLoggingConfigurationInput!, config: AwsConfig): JSON
  deletePermissionPolicy(input: AwsWAFRegionalDeletePermissionPolicyInput!, config: AwsConfig): JSON
  deleteRateBasedRule(input: AwsWAFRegionalDeleteRateBasedRuleInput!, config: AwsConfig): AwsWAFRegionalDeleteRateBasedRuleOutput
  deleteRegexMatchSet(input: AwsWAFRegionalDeleteRegexMatchSetInput!, config: AwsConfig): AwsWAFRegionalDeleteRegexMatchSetOutput
  deleteRegexPatternSet(input: AwsWAFRegionalDeleteRegexPatternSetInput!, config: AwsConfig): AwsWAFRegionalDeleteRegexPatternSetOutput
  deleteRule(input: AwsWAFRegionalDeleteRuleInput!, config: AwsConfig): AwsWAFRegionalDeleteRuleOutput
  deleteRuleGroup(input: AwsWAFRegionalDeleteRuleGroupInput!, config: AwsConfig): AwsWAFRegionalDeleteRuleGroupOutput
  deleteSizeConstraintSet(input: AwsWAFRegionalDeleteSizeConstraintSetInput!, config: AwsConfig): AwsWAFRegionalDeleteSizeConstraintSetOutput
  deleteSqlInjectionMatchSet(input: AwsWAFRegionalDeleteSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFRegionalDeleteSqlInjectionMatchSetOutput
  deleteWebACL(input: AwsWAFRegionalDeleteWebACLInput!, config: AwsConfig): AwsWAFRegionalDeleteWebACLOutput
  deleteXssMatchSet(input: AwsWAFRegionalDeleteXssMatchSetInput!, config: AwsConfig): AwsWAFRegionalDeleteXssMatchSetOutput
  disassociateWebACL(input: AwsWAFRegionalDisassociateWebACLInput!, config: AwsConfig): JSON
  getByteMatchSet(input: AwsWAFRegionalGetByteMatchSetInput!, config: AwsConfig): AwsWAFRegionalGetByteMatchSetOutput
  getChangeToken(input: JSON, config: AwsConfig): AwsWAFRegionalGetChangeTokenOutput
  getChangeTokenStatus(input: AwsWAFRegionalGetChangeTokenStatusInput!, config: AwsConfig): AwsWAFRegionalGetChangeTokenStatusOutput
  getGeoMatchSet(input: AwsWAFRegionalGetGeoMatchSetInput!, config: AwsConfig): AwsWAFRegionalGetGeoMatchSetOutput
  getIPSet(input: AwsWAFRegionalGetIPSetInput!, config: AwsConfig): AwsWAFRegionalGetIPSetOutput
  getLoggingConfiguration(input: AwsWAFRegionalGetLoggingConfigurationInput!, config: AwsConfig): AwsWAFRegionalGetLoggingConfigurationOutput
  getPermissionPolicy(input: AwsWAFRegionalGetPermissionPolicyInput!, config: AwsConfig): AwsWAFRegionalGetPermissionPolicyOutput
  getRateBasedRule(input: AwsWAFRegionalGetRateBasedRuleInput!, config: AwsConfig): AwsWAFRegionalGetRateBasedRuleOutput
  getRateBasedRuleManagedKeys(input: AwsWAFRegionalGetRateBasedRuleManagedKeysInput!, config: AwsConfig): AwsWAFRegionalGetRateBasedRuleManagedKeysOutput
  getRegexMatchSet(input: AwsWAFRegionalGetRegexMatchSetInput!, config: AwsConfig): AwsWAFRegionalGetRegexMatchSetOutput
  getRegexPatternSet(input: AwsWAFRegionalGetRegexPatternSetInput!, config: AwsConfig): AwsWAFRegionalGetRegexPatternSetOutput
  getRule(input: AwsWAFRegionalGetRuleInput!, config: AwsConfig): AwsWAFRegionalGetRuleOutput
  getRuleGroup(input: AwsWAFRegionalGetRuleGroupInput!, config: AwsConfig): AwsWAFRegionalGetRuleGroupOutput
  getSampledRequests(input: AwsWAFRegionalGetSampledRequestsInput!, config: AwsConfig): AwsWAFRegionalGetSampledRequestsOutput
  getSizeConstraintSet(input: AwsWAFRegionalGetSizeConstraintSetInput!, config: AwsConfig): AwsWAFRegionalGetSizeConstraintSetOutput
  getSqlInjectionMatchSet(input: AwsWAFRegionalGetSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFRegionalGetSqlInjectionMatchSetOutput
  getWebACL(input: AwsWAFRegionalGetWebACLInput!, config: AwsConfig): AwsWAFRegionalGetWebACLOutput
  getWebACLForResource(input: AwsWAFRegionalGetWebACLForResourceInput!, config: AwsConfig): AwsWAFRegionalGetWebACLForResourceOutput
  getXssMatchSet(input: AwsWAFRegionalGetXssMatchSetInput!, config: AwsConfig): AwsWAFRegionalGetXssMatchSetOutput
  listActivatedRulesInRuleGroup(input: AwsWAFRegionalListActivatedRulesInRuleGroupInput, config: AwsConfig): AwsWAFRegionalListActivatedRulesInRuleGroupOutput
  listByteMatchSets(input: AwsWAFRegionalListByteMatchSetsInput, config: AwsConfig): AwsWAFRegionalListByteMatchSetsOutput
  listGeoMatchSets(input: AwsWAFRegionalListGeoMatchSetsInput, config: AwsConfig): AwsWAFRegionalListGeoMatchSetsOutput
  listIPSets(input: AwsWAFRegionalListIPSetsInput, config: AwsConfig): AwsWAFRegionalListIPSetsOutput
  listLoggingConfigurations(input: AwsWAFRegionalListLoggingConfigurationsInput, config: AwsConfig): AwsWAFRegionalListLoggingConfigurationsOutput
  listRateBasedRules(input: AwsWAFRegionalListRateBasedRulesInput, config: AwsConfig): AwsWAFRegionalListRateBasedRulesOutput
  listRegexMatchSets(input: AwsWAFRegionalListRegexMatchSetsInput, config: AwsConfig): AwsWAFRegionalListRegexMatchSetsOutput
  listRegexPatternSets(input: AwsWAFRegionalListRegexPatternSetsInput, config: AwsConfig): AwsWAFRegionalListRegexPatternSetsOutput
  listResourcesForWebACL(input: AwsWAFRegionalListResourcesForWebACLInput!, config: AwsConfig): AwsWAFRegionalListResourcesForWebACLOutput
  listRuleGroups(input: AwsWAFRegionalListRuleGroupsInput, config: AwsConfig): AwsWAFRegionalListRuleGroupsOutput
  listRules(input: AwsWAFRegionalListRulesInput, config: AwsConfig): AwsWAFRegionalListRulesOutput
  listSizeConstraintSets(input: AwsWAFRegionalListSizeConstraintSetsInput, config: AwsConfig): AwsWAFRegionalListSizeConstraintSetsOutput
  listSqlInjectionMatchSets(input: AwsWAFRegionalListSqlInjectionMatchSetsInput, config: AwsConfig): AwsWAFRegionalListSqlInjectionMatchSetsOutput
  listSubscribedRuleGroups(input: AwsWAFRegionalListSubscribedRuleGroupsInput, config: AwsConfig): AwsWAFRegionalListSubscribedRuleGroupsOutput
  listTagsForResource(input: AwsWAFRegionalListTagsForResourceInput!, config: AwsConfig): AwsWAFRegionalListTagsForResourceOutput
  listWebACLs(input: AwsWAFRegionalListWebACLsInput, config: AwsConfig): AwsWAFRegionalListWebACLsOutput
  listXssMatchSets(input: AwsWAFRegionalListXssMatchSetsInput, config: AwsConfig): AwsWAFRegionalListXssMatchSetsOutput
  putLoggingConfiguration(input: AwsWAFRegionalPutLoggingConfigurationInput!, config: AwsConfig): AwsWAFRegionalPutLoggingConfigurationOutput
  putPermissionPolicy(input: AwsWAFRegionalPutPermissionPolicyInput!, config: AwsConfig): JSON
  tagResource(input: AwsWAFRegionalTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsWAFRegionalUntagResourceInput!, config: AwsConfig): JSON
  updateByteMatchSet(input: AwsWAFRegionalUpdateByteMatchSetInput!, config: AwsConfig): AwsWAFRegionalUpdateByteMatchSetOutput
  updateGeoMatchSet(input: AwsWAFRegionalUpdateGeoMatchSetInput!, config: AwsConfig): AwsWAFRegionalUpdateGeoMatchSetOutput
  updateIPSet(input: AwsWAFRegionalUpdateIPSetInput!, config: AwsConfig): AwsWAFRegionalUpdateIPSetOutput
  updateRateBasedRule(input: AwsWAFRegionalUpdateRateBasedRuleInput!, config: AwsConfig): AwsWAFRegionalUpdateRateBasedRuleOutput
  updateRegexMatchSet(input: AwsWAFRegionalUpdateRegexMatchSetInput!, config: AwsConfig): AwsWAFRegionalUpdateRegexMatchSetOutput
  updateRegexPatternSet(input: AwsWAFRegionalUpdateRegexPatternSetInput!, config: AwsConfig): AwsWAFRegionalUpdateRegexPatternSetOutput
  updateRule(input: AwsWAFRegionalUpdateRuleInput!, config: AwsConfig): AwsWAFRegionalUpdateRuleOutput
  updateRuleGroup(input: AwsWAFRegionalUpdateRuleGroupInput!, config: AwsConfig): AwsWAFRegionalUpdateRuleGroupOutput
  updateSizeConstraintSet(input: AwsWAFRegionalUpdateSizeConstraintSetInput!, config: AwsConfig): AwsWAFRegionalUpdateSizeConstraintSetOutput
  updateSqlInjectionMatchSet(input: AwsWAFRegionalUpdateSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFRegionalUpdateSqlInjectionMatchSetOutput
  updateWebACL(input: AwsWAFRegionalUpdateWebACLInput!, config: AwsConfig): AwsWAFRegionalUpdateWebACLOutput
  updateXssMatchSet(input: AwsWAFRegionalUpdateXssMatchSetInput!, config: AwsConfig): AwsWAFRegionalUpdateXssMatchSetOutput
}

input AwsWAFRegionalAssociateWebACLInput {
  WebACLId: String!
  ResourceArn: String!
}

input AwsWAFRegionalCreateByteMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateByteMatchSetOutput {
  ByteMatchSet: AwsWAFRegionalS9
  ChangeToken: String
}

input AwsWAFRegionalCreateGeoMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateGeoMatchSetOutput {
  GeoMatchSet: AwsWAFRegionalSk
  ChangeToken: String
}

input AwsWAFRegionalCreateIPSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateIPSetOutput {
  IPSet: AwsWAFRegionalSr
  ChangeToken: String
}

input AwsWAFRegionalCreateRateBasedRuleInput {
  Name: String!
  MetricName: String!
  RateKey: String!
  RateLimit: JSON!
  ChangeToken: String!
  Tags: [AwsWAFRegionalS10Input]
}

type AwsWAFRegionalCreateRateBasedRuleOutput {
  Rule: AwsWAFRegionalS15
  ChangeToken: String
}

input AwsWAFRegionalCreateRegexMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateRegexMatchSetOutput {
  RegexMatchSet: AwsWAFRegionalS1c
  ChangeToken: String
}

input AwsWAFRegionalCreateRegexPatternSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateRegexPatternSetOutput {
  RegexPatternSet: AwsWAFRegionalS1h
  ChangeToken: String
}

input AwsWAFRegionalCreateRuleGroupInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
  Tags: [AwsWAFRegionalS10Input]
}

type AwsWAFRegionalCreateRuleGroupOutput {
  RuleGroup: AwsWAFRegionalS1p
  ChangeToken: String
}

input AwsWAFRegionalCreateRuleInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
  Tags: [AwsWAFRegionalS10Input]
}

type AwsWAFRegionalCreateRuleOutput {
  Rule: AwsWAFRegionalS1m
  ChangeToken: String
}

input AwsWAFRegionalCreateSizeConstraintSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateSizeConstraintSetOutput {
  SizeConstraintSet: AwsWAFRegionalS1s
  ChangeToken: String
}

input AwsWAFRegionalCreateSqlInjectionMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWAFRegionalS1z
  ChangeToken: String
}

input AwsWAFRegionalCreateWebACLInput {
  Name: String!
  MetricName: String!
  DefaultAction: AwsWAFRegionalS23Input!
  ChangeToken: String!
  Tags: [AwsWAFRegionalS10Input]
}

type AwsWAFRegionalCreateWebACLOutput {
  WebACL: AwsWAFRegionalS26
  ChangeToken: String
}

input AwsWAFRegionalCreateXssMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateXssMatchSetOutput {
  XssMatchSet: AwsWAFRegionalS2h
  ChangeToken: String
}

input AwsWAFRegionalDeleteByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteByteMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteIPSetInput {
  IPSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteIPSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteLoggingConfigurationInput {
  ResourceArn: String!
}

input AwsWAFRegionalDeletePermissionPolicyInput {
  ResourceArn: String!
}

input AwsWAFRegionalDeleteRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteRegexMatchSetInput {
  RegexMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteRegexPatternSetInput {
  RegexPatternSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteRuleGroupInput {
  RuleGroupId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteRuleGroupOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteRuleOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteWebACLInput {
  WebACLId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteWebACLOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteXssMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDisassociateWebACLInput {
  ResourceArn: String!
}

input AwsWAFRegionalGetByteMatchSetInput {
  ByteMatchSetId: String!
}

type AwsWAFRegionalGetByteMatchSetOutput {
  ByteMatchSet: AwsWAFRegionalS9
}

type AwsWAFRegionalGetChangeTokenOutput {
  ChangeToken: String
}

input AwsWAFRegionalGetChangeTokenStatusInput {
  ChangeToken: String!
}

type AwsWAFRegionalGetChangeTokenStatusOutput {
  ChangeTokenStatus: String
}

input AwsWAFRegionalGetGeoMatchSetInput {
  GeoMatchSetId: String!
}

type AwsWAFRegionalGetGeoMatchSetOutput {
  GeoMatchSet: AwsWAFRegionalSk
}

input AwsWAFRegionalGetIPSetInput {
  IPSetId: String!
}

type AwsWAFRegionalGetIPSetOutput {
  IPSet: AwsWAFRegionalSr
}

input AwsWAFRegionalGetLoggingConfigurationInput {
  ResourceArn: String!
}

type AwsWAFRegionalGetLoggingConfigurationOutput {
  LoggingConfiguration: AwsWAFRegionalS3r
}

input AwsWAFRegionalGetPermissionPolicyInput {
  ResourceArn: String!
}

type AwsWAFRegionalGetPermissionPolicyOutput {
  Policy: String
}

input AwsWAFRegionalGetRateBasedRuleInput {
  RuleId: String!
}

input AwsWAFRegionalGetRateBasedRuleManagedKeysInput {
  RuleId: String!
  NextMarker: String
}

type AwsWAFRegionalGetRateBasedRuleManagedKeysOutput {
  ManagedKeys: [String]
  NextMarker: String
}

type AwsWAFRegionalGetRateBasedRuleOutput {
  Rule: AwsWAFRegionalS15
}

input AwsWAFRegionalGetRegexMatchSetInput {
  RegexMatchSetId: String!
}

type AwsWAFRegionalGetRegexMatchSetOutput {
  RegexMatchSet: AwsWAFRegionalS1c
}

input AwsWAFRegionalGetRegexPatternSetInput {
  RegexPatternSetId: String!
}

type AwsWAFRegionalGetRegexPatternSetOutput {
  RegexPatternSet: AwsWAFRegionalS1h
}

input AwsWAFRegionalGetRuleGroupInput {
  RuleGroupId: String!
}

type AwsWAFRegionalGetRuleGroupOutput {
  RuleGroup: AwsWAFRegionalS1p
}

input AwsWAFRegionalGetRuleInput {
  RuleId: String!
}

type AwsWAFRegionalGetRuleOutput {
  Rule: AwsWAFRegionalS1m
}

input AwsWAFRegionalGetSampledRequestsInput {
  WebAclId: String!
  RuleId: String!
  TimeWindow: AwsWAFRegionalS4dInput!
  MaxItems: JSON!
}

type AwsWAFRegionalGetSampledRequestsOutput {
  SampledRequests: [AwsWAFRegionalGetSampledRequestsOutputSampledRequests]
  PopulationSize: JSON
  TimeWindow: AwsWAFRegionalS4d
}

type AwsWAFRegionalGetSampledRequestsOutputSampledRequests {
  Request: AwsWAFRegionalGetSampledRequestsOutputSampledRequestsRequest!
  Weight: JSON!
  Timestamp: Date
  Action: String
  RuleWithinRuleGroup: String
}

type AwsWAFRegionalGetSampledRequestsOutputSampledRequestsRequest {
  ClientIP: String
  Country: String
  URI: String
  Method: String
  HTTPVersion: String
  Headers: [AwsWAFRegionalGetSampledRequestsOutputSampledRequestsRequestHeaders]
}

type AwsWAFRegionalGetSampledRequestsOutputSampledRequestsRequestHeaders {
  Name: String
  Value: String
}

input AwsWAFRegionalGetSizeConstraintSetInput {
  SizeConstraintSetId: String!
}

type AwsWAFRegionalGetSizeConstraintSetOutput {
  SizeConstraintSet: AwsWAFRegionalS1s
}

input AwsWAFRegionalGetSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
}

type AwsWAFRegionalGetSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWAFRegionalS1z
}

input AwsWAFRegionalGetWebACLForResourceInput {
  ResourceArn: String!
}

type AwsWAFRegionalGetWebACLForResourceOutput {
  WebACLSummary: AwsWAFRegionalS54
}

input AwsWAFRegionalGetWebACLInput {
  WebACLId: String!
}

type AwsWAFRegionalGetWebACLOutput {
  WebACL: AwsWAFRegionalS26
}

input AwsWAFRegionalGetXssMatchSetInput {
  XssMatchSetId: String!
}

type AwsWAFRegionalGetXssMatchSetOutput {
  XssMatchSet: AwsWAFRegionalS2h
}

input AwsWAFRegionalListActivatedRulesInRuleGroupInput {
  RuleGroupId: String
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListActivatedRulesInRuleGroupOutput {
  NextMarker: String
  ActivatedRules: [AwsWAFRegionalS28]
}

input AwsWAFRegionalListByteMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListByteMatchSetsOutput {
  NextMarker: String
  ByteMatchSets: [AwsWAFRegionalListByteMatchSetsOutputByteMatchSets]
}

type AwsWAFRegionalListByteMatchSetsOutputByteMatchSets {
  ByteMatchSetId: String!
  Name: String!
}

input AwsWAFRegionalListGeoMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListGeoMatchSetsOutput {
  NextMarker: String
  GeoMatchSets: [AwsWAFRegionalListGeoMatchSetsOutputGeoMatchSets]
}

type AwsWAFRegionalListGeoMatchSetsOutputGeoMatchSets {
  GeoMatchSetId: String!
  Name: String!
}

input AwsWAFRegionalListIPSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListIPSetsOutput {
  NextMarker: String
  IPSets: [AwsWAFRegionalListIPSetsOutputIPSets]
}

type AwsWAFRegionalListIPSetsOutputIPSets {
  IPSetId: String!
  Name: String!
}

input AwsWAFRegionalListLoggingConfigurationsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListLoggingConfigurationsOutput {
  LoggingConfigurations: [AwsWAFRegionalS3r]
  NextMarker: String
}

input AwsWAFRegionalListRateBasedRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListRateBasedRulesOutput {
  NextMarker: String
  Rules: [AwsWAFRegionalS5r]
}

input AwsWAFRegionalListRegexMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListRegexMatchSetsOutput {
  NextMarker: String
  RegexMatchSets: [AwsWAFRegionalListRegexMatchSetsOutputRegexMatchSets]
}

type AwsWAFRegionalListRegexMatchSetsOutputRegexMatchSets {
  RegexMatchSetId: String!
  Name: String!
}

input AwsWAFRegionalListRegexPatternSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListRegexPatternSetsOutput {
  NextMarker: String
  RegexPatternSets: [AwsWAFRegionalListRegexPatternSetsOutputRegexPatternSets]
}

type AwsWAFRegionalListRegexPatternSetsOutputRegexPatternSets {
  RegexPatternSetId: String!
  Name: String!
}

input AwsWAFRegionalListResourcesForWebACLInput {
  WebACLId: String!
  ResourceType: String
}

type AwsWAFRegionalListResourcesForWebACLOutput {
  ResourceArns: [String]
}

input AwsWAFRegionalListRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWAFRegionalListRuleGroupsOutputRuleGroups]
}

type AwsWAFRegionalListRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
}

input AwsWAFRegionalListRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListRulesOutput {
  NextMarker: String
  Rules: [AwsWAFRegionalS5r]
}

input AwsWAFRegionalListSizeConstraintSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListSizeConstraintSetsOutput {
  NextMarker: String
  SizeConstraintSets: [AwsWAFRegionalListSizeConstraintSetsOutputSizeConstraintSets]
}

type AwsWAFRegionalListSizeConstraintSetsOutputSizeConstraintSets {
  SizeConstraintSetId: String!
  Name: String!
}

input AwsWAFRegionalListSqlInjectionMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListSqlInjectionMatchSetsOutput {
  NextMarker: String
  SqlInjectionMatchSets: [AwsWAFRegionalListSqlInjectionMatchSetsOutputSqlInjectionMatchSets]
}

type AwsWAFRegionalListSqlInjectionMatchSetsOutputSqlInjectionMatchSets {
  SqlInjectionMatchSetId: String!
  Name: String!
}

input AwsWAFRegionalListSubscribedRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListSubscribedRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWAFRegionalListSubscribedRuleGroupsOutputRuleGroups]
}

type AwsWAFRegionalListSubscribedRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
  MetricName: String!
}

input AwsWAFRegionalListTagsForResourceInput {
  NextMarker: String
  Limit: Int
  ResourceARN: String!
}

type AwsWAFRegionalListTagsForResourceOutput {
  NextMarker: String
  TagInfoForResource: AwsWAFRegionalListTagsForResourceOutputTagInfoForResource
}

type AwsWAFRegionalListTagsForResourceOutputTagInfoForResource {
  ResourceARN: String
  TagList: [AwsWAFRegionalS10]
}

input AwsWAFRegionalListWebACLsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListWebACLsOutput {
  NextMarker: String
  WebACLs: [AwsWAFRegionalS54]
}

input AwsWAFRegionalListXssMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListXssMatchSetsOutput {
  NextMarker: String
  XssMatchSets: [AwsWAFRegionalListXssMatchSetsOutputXssMatchSets]
}

type AwsWAFRegionalListXssMatchSetsOutputXssMatchSets {
  XssMatchSetId: String!
  Name: String!
}

input AwsWAFRegionalPutLoggingConfigurationInput {
  LoggingConfiguration: AwsWAFRegionalS3rInput!
}

type AwsWAFRegionalPutLoggingConfigurationOutput {
  LoggingConfiguration: AwsWAFRegionalS3r
}

input AwsWAFRegionalPutPermissionPolicyInput {
  ResourceArn: String!
  Policy: String!
}

type AwsWAFRegionalS10 {
  Key: String
  Value: String
}

input AwsWAFRegionalS10Input {
  Key: String
  Value: String
}

type AwsWAFRegionalS15 {
  RuleId: String!
  Name: String
  MetricName: String
  MatchPredicates: [AwsWAFRegionalS17]!
  RateKey: String!
  RateLimit: JSON!
}

type AwsWAFRegionalS17 {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

input AwsWAFRegionalS17Input {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

type AwsWAFRegionalS1c {
  RegexMatchSetId: String
  Name: String
  RegexMatchTuples: [AwsWAFRegionalS1e]
}

type AwsWAFRegionalS1e {
  FieldToMatch: AwsWAFRegionalSc!
  TextTransformation: String!
  RegexPatternSetId: String!
}

input AwsWAFRegionalS1eInput {
  FieldToMatch: AwsWAFRegionalScInput!
  TextTransformation: String!
  RegexPatternSetId: String!
}

type AwsWAFRegionalS1h {
  RegexPatternSetId: String!
  Name: String
  RegexPatternStrings: [String]!
}

type AwsWAFRegionalS1m {
  RuleId: String!
  Name: String
  MetricName: String
  Predicates: [AwsWAFRegionalS17]!
}

type AwsWAFRegionalS1p {
  RuleGroupId: String!
  Name: String
  MetricName: String
}

type AwsWAFRegionalS1s {
  SizeConstraintSetId: String!
  Name: String
  SizeConstraints: [AwsWAFRegionalS1u]!
}

type AwsWAFRegionalS1u {
  FieldToMatch: AwsWAFRegionalSc!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

input AwsWAFRegionalS1uInput {
  FieldToMatch: AwsWAFRegionalScInput!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

type AwsWAFRegionalS1z {
  SqlInjectionMatchSetId: String!
  Name: String
  SqlInjectionMatchTuples: [AwsWAFRegionalS21]!
}

type AwsWAFRegionalS21 {
  FieldToMatch: AwsWAFRegionalSc!
  TextTransformation: String!
}

input AwsWAFRegionalS21Input {
  FieldToMatch: AwsWAFRegionalScInput!
  TextTransformation: String!
}

type AwsWAFRegionalS23 {
  Type: String!
}

input AwsWAFRegionalS23Input {
  Type: String!
}

type AwsWAFRegionalS26 {
  WebACLId: String!
  Name: String
  MetricName: String
  DefaultAction: AwsWAFRegionalS23!
  Rules: [AwsWAFRegionalS28]!
  WebACLArn: String
}

type AwsWAFRegionalS28 {
  Priority: Int!
  RuleId: String!
  Action: AwsWAFRegionalS23
  OverrideAction: AwsWAFRegionalS28OverrideAction
  Type: String
  ExcludedRules: [AwsWAFRegionalS28ExcludedRules]
}

type AwsWAFRegionalS28ExcludedRules {
  RuleId: String!
}

input AwsWAFRegionalS28ExcludedRulesInput {
  RuleId: String!
}

input AwsWAFRegionalS28Input {
  Priority: Int!
  RuleId: String!
  Action: AwsWAFRegionalS23Input
  OverrideAction: AwsWAFRegionalS28OverrideActionInput
  Type: String
  ExcludedRules: [AwsWAFRegionalS28ExcludedRulesInput]
}

type AwsWAFRegionalS28OverrideAction {
  Type: String!
}

input AwsWAFRegionalS28OverrideActionInput {
  Type: String!
}

type AwsWAFRegionalS2h {
  XssMatchSetId: String!
  Name: String
  XssMatchTuples: [AwsWAFRegionalS2j]!
}

type AwsWAFRegionalS2j {
  FieldToMatch: AwsWAFRegionalSc!
  TextTransformation: String!
}

input AwsWAFRegionalS2jInput {
  FieldToMatch: AwsWAFRegionalScInput!
  TextTransformation: String!
}

type AwsWAFRegionalS3r {
  ResourceArn: String!
  LogDestinationConfigs: [String]!
  RedactedFields: [AwsWAFRegionalSc]
}

input AwsWAFRegionalS3rInput {
  ResourceArn: String!
  LogDestinationConfigs: [String]!
  RedactedFields: [AwsWAFRegionalScInput]
}

type AwsWAFRegionalS4d {
  StartTime: Date!
  EndTime: Date!
}

input AwsWAFRegionalS4dInput {
  StartTime: Date!
  EndTime: Date!
}

type AwsWAFRegionalS54 {
  WebACLId: String!
  Name: String!
}

type AwsWAFRegionalS5r {
  RuleId: String!
  Name: String!
}

input AwsWAFRegionalS7kInput {
  Action: String!
  Predicate: AwsWAFRegionalS17Input!
}

type AwsWAFRegionalS9 {
  ByteMatchSetId: String!
  Name: String
  ByteMatchTuples: [AwsWAFRegionalSb]!
}

type AwsWAFRegionalSb {
  FieldToMatch: AwsWAFRegionalSc!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

input AwsWAFRegionalSbInput {
  FieldToMatch: AwsWAFRegionalScInput!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

type AwsWAFRegionalSc {
  Type: String!
  Data: String
}

input AwsWAFRegionalScInput {
  Type: String!
  Data: String
}

type AwsWAFRegionalSk {
  GeoMatchSetId: String!
  Name: String
  GeoMatchConstraints: [AwsWAFRegionalSm]!
}

type AwsWAFRegionalSm {
  Type: String!
  Value: String!
}

input AwsWAFRegionalSmInput {
  Type: String!
  Value: String!
}

type AwsWAFRegionalSr {
  IPSetId: String!
  Name: String
  IPSetDescriptors: [AwsWAFRegionalSt]!
}

type AwsWAFRegionalSt {
  Type: String!
  Value: String!
}

input AwsWAFRegionalStInput {
  Type: String!
  Value: String!
}

input AwsWAFRegionalTagResourceInput {
  ResourceARN: String!
  Tags: [AwsWAFRegionalS10Input]!
}

input AwsWAFRegionalUntagResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

input AwsWAFRegionalUpdateByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateByteMatchSetUpdatesInput]!
}

type AwsWAFRegionalUpdateByteMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateByteMatchSetUpdatesInput {
  Action: String!
  ByteMatchTuple: AwsWAFRegionalSbInput!
}

input AwsWAFRegionalUpdateGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateGeoMatchSetUpdatesInput]!
}

type AwsWAFRegionalUpdateGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateGeoMatchSetUpdatesInput {
  Action: String!
  GeoMatchConstraint: AwsWAFRegionalSmInput!
}

input AwsWAFRegionalUpdateIPSetInput {
  IPSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateIPSetUpdatesInput]!
}

type AwsWAFRegionalUpdateIPSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateIPSetUpdatesInput {
  Action: String!
  IPSetDescriptor: AwsWAFRegionalStInput!
}

input AwsWAFRegionalUpdateRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalS7kInput]!
  RateLimit: JSON!
}

type AwsWAFRegionalUpdateRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateRegexMatchSetInput {
  RegexMatchSetId: String!
  Updates: [AwsWAFRegionalUpdateRegexMatchSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFRegionalUpdateRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateRegexMatchSetUpdatesInput {
  Action: String!
  RegexMatchTuple: AwsWAFRegionalS1eInput!
}

input AwsWAFRegionalUpdateRegexPatternSetInput {
  RegexPatternSetId: String!
  Updates: [AwsWAFRegionalUpdateRegexPatternSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFRegionalUpdateRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateRegexPatternSetUpdatesInput {
  Action: String!
  RegexPatternString: String!
}

input AwsWAFRegionalUpdateRuleGroupInput {
  RuleGroupId: String!
  Updates: [AwsWAFRegionalUpdateRuleGroupUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFRegionalUpdateRuleGroupOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateRuleGroupUpdatesInput {
  Action: String!
  ActivatedRule: AwsWAFRegionalS28Input!
}

input AwsWAFRegionalUpdateRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalS7kInput]!
}

type AwsWAFRegionalUpdateRuleOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateSizeConstraintSetUpdatesInput]!
}

type AwsWAFRegionalUpdateSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateSizeConstraintSetUpdatesInput {
  Action: String!
  SizeConstraint: AwsWAFRegionalS1uInput!
}

input AwsWAFRegionalUpdateSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateSqlInjectionMatchSetUpdatesInput]!
}

type AwsWAFRegionalUpdateSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateSqlInjectionMatchSetUpdatesInput {
  Action: String!
  SqlInjectionMatchTuple: AwsWAFRegionalS21Input!
}

input AwsWAFRegionalUpdateWebACLInput {
  WebACLId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateWebACLUpdatesInput]
  DefaultAction: AwsWAFRegionalS23Input
}

type AwsWAFRegionalUpdateWebACLOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateWebACLUpdatesInput {
  Action: String!
  ActivatedRule: AwsWAFRegionalS28Input!
}

input AwsWAFRegionalUpdateXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateXssMatchSetUpdatesInput]!
}

type AwsWAFRegionalUpdateXssMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateXssMatchSetUpdatesInput {
  Action: String!
  XssMatchTuple: AwsWAFRegionalS2jInput!
}

type AwsWAFS12 {
  RuleId: String!
  Name: String
  MetricName: String
  MatchPredicates: [AwsWAFS14]!
  RateKey: String!
  RateLimit: JSON!
}

type AwsWAFS14 {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

input AwsWAFS14Input {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

type AwsWAFS19 {
  RegexMatchSetId: String
  Name: String
  RegexMatchTuples: [AwsWAFS1b]
}

type AwsWAFS1b {
  FieldToMatch: AwsWAFS9!
  TextTransformation: String!
  RegexPatternSetId: String!
}

input AwsWAFS1bInput {
  FieldToMatch: AwsWAFS9Input!
  TextTransformation: String!
  RegexPatternSetId: String!
}

type AwsWAFS1e {
  RegexPatternSetId: String!
  Name: String
  RegexPatternStrings: [String]!
}

type AwsWAFS1j {
  RuleId: String!
  Name: String
  MetricName: String
  Predicates: [AwsWAFS14]!
}

type AwsWAFS1m {
  RuleGroupId: String!
  Name: String
  MetricName: String
}

type AwsWAFS1p {
  SizeConstraintSetId: String!
  Name: String
  SizeConstraints: [AwsWAFS1r]!
}

type AwsWAFS1r {
  FieldToMatch: AwsWAFS9!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

input AwsWAFS1rInput {
  FieldToMatch: AwsWAFS9Input!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

type AwsWAFS1w {
  SqlInjectionMatchSetId: String!
  Name: String
  SqlInjectionMatchTuples: [AwsWAFS1y]!
}

type AwsWAFS1y {
  FieldToMatch: AwsWAFS9!
  TextTransformation: String!
}

input AwsWAFS1yInput {
  FieldToMatch: AwsWAFS9Input!
  TextTransformation: String!
}

type AwsWAFS20 {
  Type: String!
}

input AwsWAFS20Input {
  Type: String!
}

type AwsWAFS23 {
  WebACLId: String!
  Name: String
  MetricName: String
  DefaultAction: AwsWAFS20!
  Rules: [AwsWAFS25]!
  WebACLArn: String
}

type AwsWAFS25 {
  Priority: Int!
  RuleId: String!
  Action: AwsWAFS20
  OverrideAction: AwsWAFS25OverrideAction
  Type: String
  ExcludedRules: [AwsWAFS25ExcludedRules]
}

type AwsWAFS25ExcludedRules {
  RuleId: String!
}

input AwsWAFS25ExcludedRulesInput {
  RuleId: String!
}

input AwsWAFS25Input {
  Priority: Int!
  RuleId: String!
  Action: AwsWAFS20Input
  OverrideAction: AwsWAFS25OverrideActionInput
  Type: String
  ExcludedRules: [AwsWAFS25ExcludedRulesInput]
}

type AwsWAFS25OverrideAction {
  Type: String!
}

input AwsWAFS25OverrideActionInput {
  Type: String!
}

type AwsWAFS2f {
  XssMatchSetId: String!
  Name: String
  XssMatchTuples: [AwsWAFS2h]!
}

type AwsWAFS2h {
  FieldToMatch: AwsWAFS9!
  TextTransformation: String!
}

input AwsWAFS2hInput {
  FieldToMatch: AwsWAFS9Input!
  TextTransformation: String!
}

type AwsWAFS3n {
  ResourceArn: String!
  LogDestinationConfigs: [String]!
  RedactedFields: [AwsWAFS9]
}

input AwsWAFS3nInput {
  ResourceArn: String!
  LogDestinationConfigs: [String]!
  RedactedFields: [AwsWAFS9Input]
}

type AwsWAFS49 {
  StartTime: Date!
  EndTime: Date!
}

input AwsWAFS49Input {
  StartTime: Date!
  EndTime: Date!
}

type AwsWAFS5 {
  ByteMatchSetId: String!
  Name: String
  ByteMatchTuples: [AwsWAFS8]!
}

type AwsWAFS5k {
  RuleId: String!
  Name: String!
}

input AwsWAFS7aInput {
  Action: String!
  Predicate: AwsWAFS14Input!
}

type AwsWAFS8 {
  FieldToMatch: AwsWAFS9!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

input AwsWAFS8Input {
  FieldToMatch: AwsWAFS9Input!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

type AwsWAFS9 {
  Type: String!
  Data: String
}

input AwsWAFS9Input {
  Type: String!
  Data: String
}

type AwsWAFSh {
  GeoMatchSetId: String!
  Name: String
  GeoMatchConstraints: [AwsWAFSj]!
}

type AwsWAFSj {
  Type: String!
  Value: String!
}

input AwsWAFSjInput {
  Type: String!
  Value: String!
}

type AwsWAFSo {
  IPSetId: String!
  Name: String
  IPSetDescriptors: [AwsWAFSq]!
}

type AwsWAFSq {
  Type: String!
  Value: String!
}

input AwsWAFSqInput {
  Type: String!
  Value: String!
}

type AwsWAFSx {
  Key: String
  Value: String
}

input AwsWAFSxInput {
  Key: String
  Value: String
}

input AwsWAFTagResourceInput {
  ResourceARN: String!
  Tags: [AwsWAFSxInput]!
}

input AwsWAFUntagResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

input AwsWAFUpdateByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateByteMatchSetUpdatesInput]!
}

type AwsWAFUpdateByteMatchSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateByteMatchSetUpdatesInput {
  Action: String!
  ByteMatchTuple: AwsWAFS8Input!
}

input AwsWAFUpdateGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateGeoMatchSetUpdatesInput]!
}

type AwsWAFUpdateGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateGeoMatchSetUpdatesInput {
  Action: String!
  GeoMatchConstraint: AwsWAFSjInput!
}

input AwsWAFUpdateIPSetInput {
  IPSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateIPSetUpdatesInput]!
}

type AwsWAFUpdateIPSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateIPSetUpdatesInput {
  Action: String!
  IPSetDescriptor: AwsWAFSqInput!
}

input AwsWAFUpdateRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWAFS7aInput]!
  RateLimit: JSON!
}

type AwsWAFUpdateRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWAFUpdateRegexMatchSetInput {
  RegexMatchSetId: String!
  Updates: [AwsWAFUpdateRegexMatchSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFUpdateRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateRegexMatchSetUpdatesInput {
  Action: String!
  RegexMatchTuple: AwsWAFS1bInput!
}

input AwsWAFUpdateRegexPatternSetInput {
  RegexPatternSetId: String!
  Updates: [AwsWAFUpdateRegexPatternSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFUpdateRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateRegexPatternSetUpdatesInput {
  Action: String!
  RegexPatternString: String!
}

input AwsWAFUpdateRuleGroupInput {
  RuleGroupId: String!
  Updates: [AwsWAFUpdateRuleGroupUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFUpdateRuleGroupOutput {
  ChangeToken: String
}

input AwsWAFUpdateRuleGroupUpdatesInput {
  Action: String!
  ActivatedRule: AwsWAFS25Input!
}

input AwsWAFUpdateRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWAFS7aInput]!
}

type AwsWAFUpdateRuleOutput {
  ChangeToken: String
}

input AwsWAFUpdateSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateSizeConstraintSetUpdatesInput]!
}

type AwsWAFUpdateSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateSizeConstraintSetUpdatesInput {
  Action: String!
  SizeConstraint: AwsWAFS1rInput!
}

input AwsWAFUpdateSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateSqlInjectionMatchSetUpdatesInput]!
}

type AwsWAFUpdateSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateSqlInjectionMatchSetUpdatesInput {
  Action: String!
  SqlInjectionMatchTuple: AwsWAFS1yInput!
}

input AwsWAFUpdateWebACLInput {
  WebACLId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateWebACLUpdatesInput]
  DefaultAction: AwsWAFS20Input
}

type AwsWAFUpdateWebACLOutput {
  ChangeToken: String
}

input AwsWAFUpdateWebACLUpdatesInput {
  Action: String!
  ActivatedRule: AwsWAFS25Input!
}

input AwsWAFUpdateXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateXssMatchSetUpdatesInput]!
}

type AwsWAFUpdateXssMatchSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateXssMatchSetUpdatesInput {
  Action: String!
  XssMatchTuple: AwsWAFS2hInput!
}

"""Amazon WorkDocs (2016-05-01)"""
type AwsWorkDocs {
  abortDocumentVersionUpload(input: AwsWorkDocsAbortDocumentVersionUploadInput!, config: AwsConfig): JSON
  activateUser(input: AwsWorkDocsActivateUserInput!, config: AwsConfig): AwsWorkDocsActivateUserOutput
  addResourcePermissions(input: AwsWorkDocsAddResourcePermissionsInput!, config: AwsConfig): AwsWorkDocsAddResourcePermissionsOutput
  createComment(input: AwsWorkDocsCreateCommentInput!, config: AwsConfig): AwsWorkDocsCreateCommentOutput
  createCustomMetadata(input: AwsWorkDocsCreateCustomMetadataInput!, config: AwsConfig): JSON
  createFolder(input: AwsWorkDocsCreateFolderInput!, config: AwsConfig): AwsWorkDocsCreateFolderOutput
  createLabels(input: AwsWorkDocsCreateLabelsInput!, config: AwsConfig): JSON
  createNotificationSubscription(input: AwsWorkDocsCreateNotificationSubscriptionInput!, config: AwsConfig): AwsWorkDocsCreateNotificationSubscriptionOutput
  createUser(input: AwsWorkDocsCreateUserInput!, config: AwsConfig): AwsWorkDocsCreateUserOutput
  deactivateUser(input: AwsWorkDocsDeactivateUserInput!, config: AwsConfig): JSON
  deleteComment(input: AwsWorkDocsDeleteCommentInput!, config: AwsConfig): JSON
  deleteCustomMetadata(input: AwsWorkDocsDeleteCustomMetadataInput!, config: AwsConfig): JSON
  deleteDocument(input: AwsWorkDocsDeleteDocumentInput!, config: AwsConfig): JSON
  deleteFolder(input: AwsWorkDocsDeleteFolderInput!, config: AwsConfig): JSON
  deleteFolderContents(input: AwsWorkDocsDeleteFolderContentsInput!, config: AwsConfig): JSON
  deleteLabels(input: AwsWorkDocsDeleteLabelsInput!, config: AwsConfig): JSON
  deleteNotificationSubscription(input: AwsWorkDocsDeleteNotificationSubscriptionInput!, config: AwsConfig): JSON
  deleteUser(input: AwsWorkDocsDeleteUserInput!, config: AwsConfig): JSON
  describeActivities(input: AwsWorkDocsDescribeActivitiesInput, config: AwsConfig): AwsWorkDocsDescribeActivitiesOutput
  describeComments(input: AwsWorkDocsDescribeCommentsInput!, config: AwsConfig): AwsWorkDocsDescribeCommentsOutput
  describeDocumentVersions(input: AwsWorkDocsDescribeDocumentVersionsInput!, config: AwsConfig): AwsWorkDocsDescribeDocumentVersionsOutput
  describeFolderContents(input: AwsWorkDocsDescribeFolderContentsInput!, config: AwsConfig): AwsWorkDocsDescribeFolderContentsOutput
  describeGroups(input: AwsWorkDocsDescribeGroupsInput!, config: AwsConfig): AwsWorkDocsDescribeGroupsOutput
  describeNotificationSubscriptions(input: AwsWorkDocsDescribeNotificationSubscriptionsInput!, config: AwsConfig): AwsWorkDocsDescribeNotificationSubscriptionsOutput
  describeResourcePermissions(input: AwsWorkDocsDescribeResourcePermissionsInput!, config: AwsConfig): AwsWorkDocsDescribeResourcePermissionsOutput
  describeRootFolders(input: AwsWorkDocsDescribeRootFoldersInput!, config: AwsConfig): AwsWorkDocsDescribeRootFoldersOutput
  describeUsers(input: AwsWorkDocsDescribeUsersInput, config: AwsConfig): AwsWorkDocsDescribeUsersOutput
  getCurrentUser(input: AwsWorkDocsGetCurrentUserInput!, config: AwsConfig): AwsWorkDocsGetCurrentUserOutput
  getDocument(input: AwsWorkDocsGetDocumentInput!, config: AwsConfig): AwsWorkDocsGetDocumentOutput
  getDocumentPath(input: AwsWorkDocsGetDocumentPathInput!, config: AwsConfig): AwsWorkDocsGetDocumentPathOutput
  getDocumentVersion(input: AwsWorkDocsGetDocumentVersionInput!, config: AwsConfig): AwsWorkDocsGetDocumentVersionOutput
  getFolder(input: AwsWorkDocsGetFolderInput!, config: AwsConfig): AwsWorkDocsGetFolderOutput
  getFolderPath(input: AwsWorkDocsGetFolderPathInput!, config: AwsConfig): AwsWorkDocsGetFolderPathOutput
  getResources(input: AwsWorkDocsGetResourcesInput, config: AwsConfig): AwsWorkDocsGetResourcesOutput
  initiateDocumentVersionUpload(input: AwsWorkDocsInitiateDocumentVersionUploadInput!, config: AwsConfig): AwsWorkDocsInitiateDocumentVersionUploadOutput
  removeAllResourcePermissions(input: AwsWorkDocsRemoveAllResourcePermissionsInput!, config: AwsConfig): JSON
  removeResourcePermission(input: AwsWorkDocsRemoveResourcePermissionInput!, config: AwsConfig): JSON
  updateDocument(input: AwsWorkDocsUpdateDocumentInput!, config: AwsConfig): JSON
  updateDocumentVersion(input: AwsWorkDocsUpdateDocumentVersionInput!, config: AwsConfig): JSON
  updateFolder(input: AwsWorkDocsUpdateFolderInput!, config: AwsConfig): JSON
  updateUser(input: AwsWorkDocsUpdateUserInput!, config: AwsConfig): AwsWorkDocsUpdateUserOutput
}

input AwsWorkDocsAbortDocumentVersionUploadInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
}

input AwsWorkDocsActivateUserInput {
  UserId: String!
  AuthenticationToken: String
}

type AwsWorkDocsActivateUserOutput {
  User: AwsWorkDocsS8
}

input AwsWorkDocsAddResourcePermissionsInput {
  AuthenticationToken: String
  ResourceId: String!
  Principals: [AwsWorkDocsAddResourcePermissionsPrincipalsInput]!
  NotificationOptions: AwsWorkDocsAddResourcePermissionsNotificationOptionsInput
}

input AwsWorkDocsAddResourcePermissionsNotificationOptionsInput {
  SendEmail: Boolean
  EmailMessage: String
}

type AwsWorkDocsAddResourcePermissionsOutput {
  ShareResults: [AwsWorkDocsAddResourcePermissionsOutputShareResults]
}

type AwsWorkDocsAddResourcePermissionsOutputShareResults {
  PrincipalId: String
  InviteePrincipalId: String
  Role: String
  Status: String
  ShareId: String
  StatusMessage: String
}

input AwsWorkDocsAddResourcePermissionsPrincipalsInput {
  Id: String!
  Type: String!
  Role: String!
}

input AwsWorkDocsCreateCommentInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  ParentId: String
  ThreadId: String
  Text: String!
  Visibility: String
  NotifyCollaborators: Boolean
}

type AwsWorkDocsCreateCommentOutput {
  Comment: AwsWorkDocsS13
}

input AwsWorkDocsCreateCustomMetadataInput {
  AuthenticationToken: String
  ResourceId: String!
  VersionId: String
  CustomMetadata: JSON!
}

input AwsWorkDocsCreateFolderInput {
  AuthenticationToken: String
  Name: String
  ParentFolderId: String!
}

type AwsWorkDocsCreateFolderOutput {
  Metadata: AwsWorkDocsS1d
}

input AwsWorkDocsCreateLabelsInput {
  ResourceId: String!
  Labels: [String]!
  AuthenticationToken: String
}

input AwsWorkDocsCreateNotificationSubscriptionInput {
  OrganizationId: String!
  Endpoint: String!
  Protocol: String!
  SubscriptionType: String!
}

type AwsWorkDocsCreateNotificationSubscriptionOutput {
  Subscription: AwsWorkDocsS1p
}

input AwsWorkDocsCreateUserInput {
  OrganizationId: String
  Username: String!
  EmailAddress: String
  GivenName: String!
  Surname: String!
  Password: String!
  TimeZoneId: String
  StorageRule: AwsWorkDocsSjInput
  AuthenticationToken: String
}

type AwsWorkDocsCreateUserOutput {
  User: AwsWorkDocsS8
}

input AwsWorkDocsDeactivateUserInput {
  UserId: String!
  AuthenticationToken: String
}

input AwsWorkDocsDeleteCommentInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  CommentId: String!
}

input AwsWorkDocsDeleteCustomMetadataInput {
  AuthenticationToken: String
  ResourceId: String!
  VersionId: String
  Keys: [String]
  DeleteAll: Boolean
}

input AwsWorkDocsDeleteDocumentInput {
  AuthenticationToken: String
  DocumentId: String!
}

input AwsWorkDocsDeleteFolderContentsInput {
  AuthenticationToken: String
  FolderId: String!
}

input AwsWorkDocsDeleteFolderInput {
  AuthenticationToken: String
  FolderId: String!
}

input AwsWorkDocsDeleteLabelsInput {
  ResourceId: String!
  AuthenticationToken: String
  Labels: [String]
  DeleteAll: Boolean
}

input AwsWorkDocsDeleteNotificationSubscriptionInput {
  SubscriptionId: String!
  OrganizationId: String!
}

input AwsWorkDocsDeleteUserInput {
  AuthenticationToken: String
  UserId: String!
}

input AwsWorkDocsDescribeActivitiesInput {
  AuthenticationToken: String
  StartTime: Date
  EndTime: Date
  OrganizationId: String
  ActivityTypes: String
  ResourceId: String
  UserId: String
  IncludeIndirectActivities: Boolean
  Limit: Int
  Marker: String
}

type AwsWorkDocsDescribeActivitiesOutput {
  UserActivities: [AwsWorkDocsDescribeActivitiesOutputUserActivities]
  Marker: String
}

type AwsWorkDocsDescribeActivitiesOutputUserActivities {
  Type: String
  TimeStamp: Date
  IsIndirectActivity: Boolean
  OrganizationId: String
  Initiator: AwsWorkDocsS2d
  Participants: AwsWorkDocsDescribeActivitiesOutputUserActivitiesParticipants
  ResourceMetadata: AwsWorkDocsS2j
  OriginalParent: AwsWorkDocsS2j
  CommentMetadata: AwsWorkDocsDescribeActivitiesOutputUserActivitiesCommentMetadata
}

type AwsWorkDocsDescribeActivitiesOutputUserActivitiesCommentMetadata {
  CommentId: String
  Contributor: AwsWorkDocsS8
  CreatedTimestamp: Date
  CommentStatus: String
  RecipientId: String
}

type AwsWorkDocsDescribeActivitiesOutputUserActivitiesParticipants {
  Users: [AwsWorkDocsS2d]
  Groups: [AwsWorkDocsS2g]
}

input AwsWorkDocsDescribeCommentsInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  Limit: Int
  Marker: String
}

type AwsWorkDocsDescribeCommentsOutput {
  Comments: [AwsWorkDocsS13]
  Marker: String
}

input AwsWorkDocsDescribeDocumentVersionsInput {
  AuthenticationToken: String
  DocumentId: String!
  Marker: String
  Limit: Int
  Include: String
  Fields: String
}

type AwsWorkDocsDescribeDocumentVersionsOutput {
  DocumentVersions: [AwsWorkDocsS2u]
  Marker: String
}

input AwsWorkDocsDescribeFolderContentsInput {
  AuthenticationToken: String
  FolderId: String!
  Sort: String
  Order: String
  Limit: Int
  Marker: String
  Type: String
  Include: String
}

type AwsWorkDocsDescribeFolderContentsOutput {
  Folders: [AwsWorkDocsS1d]
  Documents: [AwsWorkDocsS39]
  Marker: String
}

input AwsWorkDocsDescribeGroupsInput {
  AuthenticationToken: String
  SearchQuery: String!
  OrganizationId: String
  Marker: String
  Limit: Int
}

type AwsWorkDocsDescribeGroupsOutput {
  Groups: [AwsWorkDocsS2g]
  Marker: String
}

input AwsWorkDocsDescribeNotificationSubscriptionsInput {
  OrganizationId: String!
  Marker: String
  Limit: Int
}

type AwsWorkDocsDescribeNotificationSubscriptionsOutput {
  Subscriptions: [AwsWorkDocsS1p]
  Marker: String
}

input AwsWorkDocsDescribeResourcePermissionsInput {
  AuthenticationToken: String
  ResourceId: String!
  PrincipalId: String
  Limit: Int
  Marker: String
}

type AwsWorkDocsDescribeResourcePermissionsOutput {
  Principals: [AwsWorkDocsDescribeResourcePermissionsOutputPrincipals]
  Marker: String
}

type AwsWorkDocsDescribeResourcePermissionsOutputPrincipals {
  Id: String
  Type: String
  Roles: [AwsWorkDocsDescribeResourcePermissionsOutputPrincipalsRoles]
}

type AwsWorkDocsDescribeResourcePermissionsOutputPrincipalsRoles {
  Role: String
  Type: String
}

input AwsWorkDocsDescribeRootFoldersInput {
  AuthenticationToken: String!
  Limit: Int
  Marker: String
}

type AwsWorkDocsDescribeRootFoldersOutput {
  Folders: [AwsWorkDocsS1d]
  Marker: String
}

input AwsWorkDocsDescribeUsersInput {
  AuthenticationToken: String
  OrganizationId: String
  UserIds: String
  Query: String
  Include: String
  Order: String
  Sort: String
  Marker: String
  Limit: Int
  Fields: String
}

type AwsWorkDocsDescribeUsersOutput {
  Users: [AwsWorkDocsS8]
  TotalNumberOfUsers: JSON
  Marker: String
}

input AwsWorkDocsGetCurrentUserInput {
  AuthenticationToken: String!
}

type AwsWorkDocsGetCurrentUserOutput {
  User: AwsWorkDocsS8
}

input AwsWorkDocsGetDocumentInput {
  AuthenticationToken: String
  DocumentId: String!
  IncludeCustomMetadata: Boolean
}

type AwsWorkDocsGetDocumentOutput {
  Metadata: AwsWorkDocsS39
  CustomMetadata: JSON
}

input AwsWorkDocsGetDocumentPathInput {
  AuthenticationToken: String
  DocumentId: String!
  Limit: Int
  Fields: String
  Marker: String
}

type AwsWorkDocsGetDocumentPathOutput {
  Path: AwsWorkDocsS42
}

input AwsWorkDocsGetDocumentVersionInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  Fields: String
  IncludeCustomMetadata: Boolean
}

type AwsWorkDocsGetDocumentVersionOutput {
  Metadata: AwsWorkDocsS2u
  CustomMetadata: JSON
}

input AwsWorkDocsGetFolderInput {
  AuthenticationToken: String
  FolderId: String!
  IncludeCustomMetadata: Boolean
}

type AwsWorkDocsGetFolderOutput {
  Metadata: AwsWorkDocsS1d
  CustomMetadata: JSON
}

input AwsWorkDocsGetFolderPathInput {
  AuthenticationToken: String
  FolderId: String!
  Limit: Int
  Fields: String
  Marker: String
}

type AwsWorkDocsGetFolderPathOutput {
  Path: AwsWorkDocsS42
}

input AwsWorkDocsGetResourcesInput {
  AuthenticationToken: String
  UserId: String
  CollectionType: String
  Limit: Int
  Marker: String
}

type AwsWorkDocsGetResourcesOutput {
  Folders: [AwsWorkDocsS1d]
  Documents: [AwsWorkDocsS39]
  Marker: String
}

input AwsWorkDocsInitiateDocumentVersionUploadInput {
  AuthenticationToken: String
  Id: String
  Name: String
  ContentCreatedTimestamp: Date
  ContentModifiedTimestamp: Date
  ContentType: String
  DocumentSizeInBytes: JSON
  ParentFolderId: String!
}

type AwsWorkDocsInitiateDocumentVersionUploadOutput {
  Metadata: AwsWorkDocsS39
  UploadMetadata: AwsWorkDocsInitiateDocumentVersionUploadOutputUploadMetadata
}

type AwsWorkDocsInitiateDocumentVersionUploadOutputUploadMetadata {
  UploadUrl: String
  SignedHeaders: JSON
}

input AwsWorkDocsRemoveAllResourcePermissionsInput {
  AuthenticationToken: String
  ResourceId: String!
}

input AwsWorkDocsRemoveResourcePermissionInput {
  AuthenticationToken: String
  ResourceId: String!
  PrincipalId: String!
  PrincipalType: String
}

type AwsWorkDocsS13 {
  CommentId: String!
  ParentId: String
  ThreadId: String
  Text: String
  Contributor: AwsWorkDocsS8
  CreatedTimestamp: Date
  Status: String
  Visibility: String
  RecipientId: String
}

type AwsWorkDocsS1d {
  Id: String
  Name: String
  CreatorId: String
  ParentFolderId: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  ResourceState: String
  Signature: String
  Labels: [String]
  Size: JSON
  LatestVersionSize: JSON
}

type AwsWorkDocsS1p {
  SubscriptionId: String
  EndPoint: String
  Protocol: String
}

type AwsWorkDocsS2d {
  Id: String
  Username: String
  GivenName: String
  Surname: String
  EmailAddress: String
}

type AwsWorkDocsS2g {
  Id: String
  Name: String
}

type AwsWorkDocsS2j {
  Type: String
  Name: String
  OriginalName: String
  Id: String
  VersionId: String
  Owner: AwsWorkDocsS2d
  ParentId: String
}

type AwsWorkDocsS2u {
  Id: String
  Name: String
  ContentType: String
  Size: JSON
  Signature: String
  Status: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  ContentCreatedTimestamp: Date
  ContentModifiedTimestamp: Date
  CreatorId: String
  Thumbnail: JSON
  Source: JSON
}

type AwsWorkDocsS39 {
  Id: String
  CreatorId: String
  ParentFolderId: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  LatestVersionMetadata: AwsWorkDocsS2u
  ResourceState: String
  Labels: [String]
}

type AwsWorkDocsS42 {
  Components: [AwsWorkDocsS42Components]
}

type AwsWorkDocsS42Components {
  Id: String
  Name: String
}

type AwsWorkDocsS8 {
  Id: String
  Username: String
  EmailAddress: String
  GivenName: String
  Surname: String
  OrganizationId: String
  RootFolderId: String
  RecycleBinFolderId: String
  Status: String
  Type: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  TimeZoneId: String
  Locale: String
  Storage: AwsWorkDocsS8Storage
}

type AwsWorkDocsS8Storage {
  StorageUtilizedInBytes: JSON
  StorageRule: AwsWorkDocsSj
}

type AwsWorkDocsSj {
  StorageAllocatedInBytes: JSON
  StorageType: String
}

input AwsWorkDocsSjInput {
  StorageAllocatedInBytes: JSON
  StorageType: String
}

input AwsWorkDocsUpdateDocumentInput {
  AuthenticationToken: String
  DocumentId: String!
  Name: String
  ParentFolderId: String
  ResourceState: String
}

input AwsWorkDocsUpdateDocumentVersionInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  VersionStatus: String
}

input AwsWorkDocsUpdateFolderInput {
  AuthenticationToken: String
  FolderId: String!
  Name: String
  ParentFolderId: String
  ResourceState: String
}

input AwsWorkDocsUpdateUserInput {
  AuthenticationToken: String
  UserId: String!
  GivenName: String
  Surname: String
  Type: String
  StorageRule: AwsWorkDocsSjInput
  TimeZoneId: String
  Locale: String
  GrantPoweruserPrivileges: String
}

type AwsWorkDocsUpdateUserOutput {
  User: AwsWorkDocsS8
}

"""Amazon WorkLink (2018-09-25)"""
type AwsWorkLink {
  associateDomain(input: AwsWorkLinkAssociateDomainInput!, config: AwsConfig): JSON
  associateWebsiteAuthorizationProvider(input: AwsWorkLinkAssociateWebsiteAuthorizationProviderInput!, config: AwsConfig): AwsWorkLinkAssociateWebsiteAuthorizationProviderOutput
  associateWebsiteCertificateAuthority(input: AwsWorkLinkAssociateWebsiteCertificateAuthorityInput!, config: AwsConfig): AwsWorkLinkAssociateWebsiteCertificateAuthorityOutput
  createFleet(input: AwsWorkLinkCreateFleetInput!, config: AwsConfig): AwsWorkLinkCreateFleetOutput
  deleteFleet(input: AwsWorkLinkDeleteFleetInput!, config: AwsConfig): JSON
  describeAuditStreamConfiguration(input: AwsWorkLinkDescribeAuditStreamConfigurationInput!, config: AwsConfig): AwsWorkLinkDescribeAuditStreamConfigurationOutput
  describeCompanyNetworkConfiguration(input: AwsWorkLinkDescribeCompanyNetworkConfigurationInput!, config: AwsConfig): AwsWorkLinkDescribeCompanyNetworkConfigurationOutput
  describeDevice(input: AwsWorkLinkDescribeDeviceInput!, config: AwsConfig): AwsWorkLinkDescribeDeviceOutput
  describeDevicePolicyConfiguration(input: AwsWorkLinkDescribeDevicePolicyConfigurationInput!, config: AwsConfig): AwsWorkLinkDescribeDevicePolicyConfigurationOutput
  describeDomain(input: AwsWorkLinkDescribeDomainInput!, config: AwsConfig): AwsWorkLinkDescribeDomainOutput
  describeFleetMetadata(input: AwsWorkLinkDescribeFleetMetadataInput!, config: AwsConfig): AwsWorkLinkDescribeFleetMetadataOutput
  describeIdentityProviderConfiguration(input: AwsWorkLinkDescribeIdentityProviderConfigurationInput!, config: AwsConfig): AwsWorkLinkDescribeIdentityProviderConfigurationOutput
  describeWebsiteCertificateAuthority(input: AwsWorkLinkDescribeWebsiteCertificateAuthorityInput!, config: AwsConfig): AwsWorkLinkDescribeWebsiteCertificateAuthorityOutput
  disassociateDomain(input: AwsWorkLinkDisassociateDomainInput!, config: AwsConfig): JSON
  disassociateWebsiteAuthorizationProvider(input: AwsWorkLinkDisassociateWebsiteAuthorizationProviderInput!, config: AwsConfig): JSON
  disassociateWebsiteCertificateAuthority(input: AwsWorkLinkDisassociateWebsiteCertificateAuthorityInput!, config: AwsConfig): JSON
  listDevices(input: AwsWorkLinkListDevicesInput!, config: AwsConfig): AwsWorkLinkListDevicesOutput
  listDomains(input: AwsWorkLinkListDomainsInput!, config: AwsConfig): AwsWorkLinkListDomainsOutput
  listFleets(input: AwsWorkLinkListFleetsInput, config: AwsConfig): AwsWorkLinkListFleetsOutput
  listWebsiteAuthorizationProviders(input: AwsWorkLinkListWebsiteAuthorizationProvidersInput!, config: AwsConfig): AwsWorkLinkListWebsiteAuthorizationProvidersOutput
  listWebsiteCertificateAuthorities(input: AwsWorkLinkListWebsiteCertificateAuthoritiesInput!, config: AwsConfig): AwsWorkLinkListWebsiteCertificateAuthoritiesOutput
  restoreDomainAccess(input: AwsWorkLinkRestoreDomainAccessInput!, config: AwsConfig): JSON
  revokeDomainAccess(input: AwsWorkLinkRevokeDomainAccessInput!, config: AwsConfig): JSON
  signOutUser(input: AwsWorkLinkSignOutUserInput!, config: AwsConfig): JSON
  updateAuditStreamConfiguration(input: AwsWorkLinkUpdateAuditStreamConfigurationInput!, config: AwsConfig): JSON
  updateCompanyNetworkConfiguration(input: AwsWorkLinkUpdateCompanyNetworkConfigurationInput!, config: AwsConfig): JSON
  updateDevicePolicyConfiguration(input: AwsWorkLinkUpdateDevicePolicyConfigurationInput!, config: AwsConfig): JSON
  updateDomainMetadata(input: AwsWorkLinkUpdateDomainMetadataInput!, config: AwsConfig): JSON
  updateFleetMetadata(input: AwsWorkLinkUpdateFleetMetadataInput!, config: AwsConfig): JSON
  updateIdentityProviderConfiguration(input: AwsWorkLinkUpdateIdentityProviderConfigurationInput!, config: AwsConfig): JSON
}

input AwsWorkLinkAssociateDomainInput {
  FleetArn: String!
  DomainName: String!
  DisplayName: String
  AcmCertificateArn: String!
}

input AwsWorkLinkAssociateWebsiteAuthorizationProviderInput {
  FleetArn: String!
  AuthorizationProviderType: String!
  DomainName: String
}

type AwsWorkLinkAssociateWebsiteAuthorizationProviderOutput {
  AuthorizationProviderId: String
}

input AwsWorkLinkAssociateWebsiteCertificateAuthorityInput {
  FleetArn: String!
  Certificate: String!
  DisplayName: String
}

type AwsWorkLinkAssociateWebsiteCertificateAuthorityOutput {
  WebsiteCaId: String
}

input AwsWorkLinkCreateFleetInput {
  FleetName: String!
  DisplayName: String
  OptimizeForEndUserLocation: Boolean
}

type AwsWorkLinkCreateFleetOutput {
  FleetArn: String
}

input AwsWorkLinkDeleteFleetInput {
  FleetArn: String!
}

input AwsWorkLinkDescribeAuditStreamConfigurationInput {
  FleetArn: String!
}

type AwsWorkLinkDescribeAuditStreamConfigurationOutput {
  AuditStreamArn: String
}

input AwsWorkLinkDescribeCompanyNetworkConfigurationInput {
  FleetArn: String!
}

type AwsWorkLinkDescribeCompanyNetworkConfigurationOutput {
  VpcId: String
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

input AwsWorkLinkDescribeDeviceInput {
  FleetArn: String!
  DeviceId: String!
}

type AwsWorkLinkDescribeDeviceOutput {
  Status: String
  Model: String
  Manufacturer: String
  OperatingSystem: String
  OperatingSystemVersion: String
  PatchLevel: String
  FirstAccessedTime: Date
  LastAccessedTime: Date
  Username: String
}

input AwsWorkLinkDescribeDevicePolicyConfigurationInput {
  FleetArn: String!
}

type AwsWorkLinkDescribeDevicePolicyConfigurationOutput {
  DeviceCaCertificate: String
}

input AwsWorkLinkDescribeDomainInput {
  FleetArn: String!
  DomainName: String!
}

type AwsWorkLinkDescribeDomainOutput {
  DomainName: String
  DisplayName: String
  CreatedTime: Date
  DomainStatus: String
  AcmCertificateArn: String
}

input AwsWorkLinkDescribeFleetMetadataInput {
  FleetArn: String!
}

type AwsWorkLinkDescribeFleetMetadataOutput {
  CreatedTime: Date
  LastUpdatedTime: Date
  FleetName: String
  DisplayName: String
  OptimizeForEndUserLocation: Boolean
  CompanyCode: String
  FleetStatus: String
}

input AwsWorkLinkDescribeIdentityProviderConfigurationInput {
  FleetArn: String!
}

type AwsWorkLinkDescribeIdentityProviderConfigurationOutput {
  IdentityProviderType: String
  ServiceProviderSamlMetadata: String
  IdentityProviderSamlMetadata: String
}

input AwsWorkLinkDescribeWebsiteCertificateAuthorityInput {
  FleetArn: String!
  WebsiteCaId: String!
}

type AwsWorkLinkDescribeWebsiteCertificateAuthorityOutput {
  Certificate: String
  CreatedTime: Date
  DisplayName: String
}

input AwsWorkLinkDisassociateDomainInput {
  FleetArn: String!
  DomainName: String!
}

input AwsWorkLinkDisassociateWebsiteAuthorizationProviderInput {
  FleetArn: String!
  AuthorizationProviderId: String!
}

input AwsWorkLinkDisassociateWebsiteCertificateAuthorityInput {
  FleetArn: String!
  WebsiteCaId: String!
}

input AwsWorkLinkListDevicesInput {
  FleetArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsWorkLinkListDevicesOutput {
  Devices: [AwsWorkLinkListDevicesOutputDevices]
  NextToken: String
}

type AwsWorkLinkListDevicesOutputDevices {
  DeviceId: String
  DeviceStatus: String
}

input AwsWorkLinkListDomainsInput {
  FleetArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsWorkLinkListDomainsOutput {
  Domains: [AwsWorkLinkListDomainsOutputDomains]
  NextToken: String
}

type AwsWorkLinkListDomainsOutputDomains {
  DomainName: String!
  DisplayName: String
  CreatedTime: Date!
  DomainStatus: String!
}

input AwsWorkLinkListFleetsInput {
  NextToken: String
  MaxResults: Int
}

type AwsWorkLinkListFleetsOutput {
  FleetSummaryList: [AwsWorkLinkListFleetsOutputFleetSummaryList]
  NextToken: String
}

type AwsWorkLinkListFleetsOutputFleetSummaryList {
  FleetArn: String
  CreatedTime: Date
  LastUpdatedTime: Date
  FleetName: String
  DisplayName: String
  CompanyCode: String
  FleetStatus: String
}

input AwsWorkLinkListWebsiteAuthorizationProvidersInput {
  FleetArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsWorkLinkListWebsiteAuthorizationProvidersOutput {
  WebsiteAuthorizationProviders: [AwsWorkLinkListWebsiteAuthorizationProvidersOutputWebsiteAuthorizationProviders]
  NextToken: String
}

type AwsWorkLinkListWebsiteAuthorizationProvidersOutputWebsiteAuthorizationProviders {
  AuthorizationProviderId: String
  AuthorizationProviderType: String!
  DomainName: String
  CreatedTime: Date
}

input AwsWorkLinkListWebsiteCertificateAuthoritiesInput {
  FleetArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsWorkLinkListWebsiteCertificateAuthoritiesOutput {
  WebsiteCertificateAuthorities: [AwsWorkLinkListWebsiteCertificateAuthoritiesOutputWebsiteCertificateAuthorities]
  NextToken: String
}

type AwsWorkLinkListWebsiteCertificateAuthoritiesOutputWebsiteCertificateAuthorities {
  WebsiteCaId: String
  CreatedTime: Date
  DisplayName: String
}

input AwsWorkLinkRestoreDomainAccessInput {
  FleetArn: String!
  DomainName: String!
}

input AwsWorkLinkRevokeDomainAccessInput {
  FleetArn: String!
  DomainName: String!
}

input AwsWorkLinkSignOutUserInput {
  FleetArn: String!
  Username: String!
}

input AwsWorkLinkUpdateAuditStreamConfigurationInput {
  FleetArn: String!
  AuditStreamArn: String
}

input AwsWorkLinkUpdateCompanyNetworkConfigurationInput {
  FleetArn: String!
  VpcId: String!
  SubnetIds: [String]!
  SecurityGroupIds: [String]!
}

input AwsWorkLinkUpdateDevicePolicyConfigurationInput {
  FleetArn: String!
  DeviceCaCertificate: String
}

input AwsWorkLinkUpdateDomainMetadataInput {
  FleetArn: String!
  DomainName: String!
  DisplayName: String
}

input AwsWorkLinkUpdateFleetMetadataInput {
  FleetArn: String!
  DisplayName: String
  OptimizeForEndUserLocation: Boolean
}

input AwsWorkLinkUpdateIdentityProviderConfigurationInput {
  FleetArn: String!
  IdentityProviderType: String!
  IdentityProviderSamlMetadata: String
}

"""Amazon WorkMail (2017-10-01)"""
type AwsWorkMail {
  associateDelegateToResource(input: AwsWorkMailAssociateDelegateToResourceInput!, config: AwsConfig): JSON
  associateMemberToGroup(input: AwsWorkMailAssociateMemberToGroupInput!, config: AwsConfig): JSON
  createAlias(input: AwsWorkMailCreateAliasInput!, config: AwsConfig): JSON
  createGroup(input: AwsWorkMailCreateGroupInput!, config: AwsConfig): AwsWorkMailCreateGroupOutput
  createResource(input: AwsWorkMailCreateResourceInput!, config: AwsConfig): AwsWorkMailCreateResourceOutput
  createUser(input: AwsWorkMailCreateUserInput!, config: AwsConfig): AwsWorkMailCreateUserOutput
  deleteAlias(input: AwsWorkMailDeleteAliasInput!, config: AwsConfig): JSON
  deleteGroup(input: AwsWorkMailDeleteGroupInput!, config: AwsConfig): JSON
  deleteMailboxPermissions(input: AwsWorkMailDeleteMailboxPermissionsInput!, config: AwsConfig): JSON
  deleteResource(input: AwsWorkMailDeleteResourceInput!, config: AwsConfig): JSON
  deleteUser(input: AwsWorkMailDeleteUserInput!, config: AwsConfig): JSON
  deregisterFromWorkMail(input: AwsWorkMailDeregisterFromWorkMailInput!, config: AwsConfig): JSON
  describeGroup(input: AwsWorkMailDescribeGroupInput!, config: AwsConfig): AwsWorkMailDescribeGroupOutput
  describeOrganization(input: AwsWorkMailDescribeOrganizationInput!, config: AwsConfig): AwsWorkMailDescribeOrganizationOutput
  describeResource(input: AwsWorkMailDescribeResourceInput!, config: AwsConfig): AwsWorkMailDescribeResourceOutput
  describeUser(input: AwsWorkMailDescribeUserInput!, config: AwsConfig): AwsWorkMailDescribeUserOutput
  disassociateDelegateFromResource(input: AwsWorkMailDisassociateDelegateFromResourceInput!, config: AwsConfig): JSON
  disassociateMemberFromGroup(input: AwsWorkMailDisassociateMemberFromGroupInput!, config: AwsConfig): JSON
  getMailboxDetails(input: AwsWorkMailGetMailboxDetailsInput!, config: AwsConfig): AwsWorkMailGetMailboxDetailsOutput
  listAliases(input: AwsWorkMailListAliasesInput!, config: AwsConfig): AwsWorkMailListAliasesOutput
  listGroupMembers(input: AwsWorkMailListGroupMembersInput!, config: AwsConfig): AwsWorkMailListGroupMembersOutput
  listGroups(input: AwsWorkMailListGroupsInput!, config: AwsConfig): AwsWorkMailListGroupsOutput
  listMailboxPermissions(input: AwsWorkMailListMailboxPermissionsInput!, config: AwsConfig): AwsWorkMailListMailboxPermissionsOutput
  listOrganizations(input: AwsWorkMailListOrganizationsInput, config: AwsConfig): AwsWorkMailListOrganizationsOutput
  listResourceDelegates(input: AwsWorkMailListResourceDelegatesInput!, config: AwsConfig): AwsWorkMailListResourceDelegatesOutput
  listResources(input: AwsWorkMailListResourcesInput!, config: AwsConfig): AwsWorkMailListResourcesOutput
  listUsers(input: AwsWorkMailListUsersInput!, config: AwsConfig): AwsWorkMailListUsersOutput
  putMailboxPermissions(input: AwsWorkMailPutMailboxPermissionsInput!, config: AwsConfig): JSON
  registerToWorkMail(input: AwsWorkMailRegisterToWorkMailInput!, config: AwsConfig): JSON
  resetPassword(input: AwsWorkMailResetPasswordInput!, config: AwsConfig): JSON
  updateMailboxQuota(input: AwsWorkMailUpdateMailboxQuotaInput!, config: AwsConfig): JSON
  updatePrimaryEmailAddress(input: AwsWorkMailUpdatePrimaryEmailAddressInput!, config: AwsConfig): JSON
  updateResource(input: AwsWorkMailUpdateResourceInput!, config: AwsConfig): JSON
}

input AwsWorkMailAssociateDelegateToResourceInput {
  OrganizationId: String!
  ResourceId: String!
  EntityId: String!
}

input AwsWorkMailAssociateMemberToGroupInput {
  OrganizationId: String!
  GroupId: String!
  MemberId: String!
}

input AwsWorkMailCreateAliasInput {
  OrganizationId: String!
  EntityId: String!
  Alias: String!
}

input AwsWorkMailCreateGroupInput {
  OrganizationId: String!
  Name: String!
}

type AwsWorkMailCreateGroupOutput {
  GroupId: String
}

input AwsWorkMailCreateResourceInput {
  OrganizationId: String!
  Name: String!
  Type: String!
}

type AwsWorkMailCreateResourceOutput {
  ResourceId: String
}

input AwsWorkMailCreateUserInput {
  OrganizationId: String!
  Name: String!
  DisplayName: String!
  Password: String!
}

type AwsWorkMailCreateUserOutput {
  UserId: String
}

input AwsWorkMailDeleteAliasInput {
  OrganizationId: String!
  EntityId: String!
  Alias: String!
}

input AwsWorkMailDeleteGroupInput {
  OrganizationId: String!
  GroupId: String!
}

input AwsWorkMailDeleteMailboxPermissionsInput {
  OrganizationId: String!
  EntityId: String!
  GranteeId: String!
}

input AwsWorkMailDeleteResourceInput {
  OrganizationId: String!
  ResourceId: String!
}

input AwsWorkMailDeleteUserInput {
  OrganizationId: String!
  UserId: String!
}

input AwsWorkMailDeregisterFromWorkMailInput {
  OrganizationId: String!
  EntityId: String!
}

input AwsWorkMailDescribeGroupInput {
  OrganizationId: String!
  GroupId: String!
}

type AwsWorkMailDescribeGroupOutput {
  GroupId: String
  Name: String
  Email: String
  State: String
  EnabledDate: Date
  DisabledDate: Date
}

input AwsWorkMailDescribeOrganizationInput {
  OrganizationId: String!
}

type AwsWorkMailDescribeOrganizationOutput {
  OrganizationId: String
  Alias: String
  State: String
  DirectoryId: String
  DirectoryType: String
  DefaultMailDomain: String
  CompletedDate: Date
  ErrorMessage: String
}

input AwsWorkMailDescribeResourceInput {
  OrganizationId: String!
  ResourceId: String!
}

type AwsWorkMailDescribeResourceOutput {
  ResourceId: String
  Email: String
  Name: String
  Type: String
  BookingOptions: AwsWorkMailS18
  State: String
  EnabledDate: Date
  DisabledDate: Date
}

input AwsWorkMailDescribeUserInput {
  OrganizationId: String!
  UserId: String!
}

type AwsWorkMailDescribeUserOutput {
  UserId: String
  Name: String
  Email: String
  DisplayName: String
  State: String
  UserRole: String
  EnabledDate: Date
  DisabledDate: Date
}

input AwsWorkMailDisassociateDelegateFromResourceInput {
  OrganizationId: String!
  ResourceId: String!
  EntityId: String!
}

input AwsWorkMailDisassociateMemberFromGroupInput {
  OrganizationId: String!
  GroupId: String!
  MemberId: String!
}

input AwsWorkMailGetMailboxDetailsInput {
  OrganizationId: String!
  UserId: String!
}

type AwsWorkMailGetMailboxDetailsOutput {
  MailboxQuota: Int
  MailboxSize: JSON
}

input AwsWorkMailListAliasesInput {
  OrganizationId: String!
  EntityId: String!
  NextToken: String
  MaxResults: Int
}

type AwsWorkMailListAliasesOutput {
  Aliases: [String]
  NextToken: String
}

input AwsWorkMailListGroupMembersInput {
  OrganizationId: String!
  GroupId: String!
  NextToken: String
  MaxResults: Int
}

type AwsWorkMailListGroupMembersOutput {
  Members: [AwsWorkMailListGroupMembersOutputMembers]
  NextToken: String
}

type AwsWorkMailListGroupMembersOutputMembers {
  Id: String
  Name: String
  Type: String
  State: String
  EnabledDate: Date
  DisabledDate: Date
}

input AwsWorkMailListGroupsInput {
  OrganizationId: String!
  NextToken: String
  MaxResults: Int
}

type AwsWorkMailListGroupsOutput {
  Groups: [AwsWorkMailListGroupsOutputGroups]
  NextToken: String
}

type AwsWorkMailListGroupsOutputGroups {
  Id: String
  Email: String
  Name: String
  State: String
  EnabledDate: Date
  DisabledDate: Date
}

input AwsWorkMailListMailboxPermissionsInput {
  OrganizationId: String!
  EntityId: String!
  NextToken: String
  MaxResults: Int
}

type AwsWorkMailListMailboxPermissionsOutput {
  Permissions: [AwsWorkMailListMailboxPermissionsOutputPermissions]
  NextToken: String
}

type AwsWorkMailListMailboxPermissionsOutputPermissions {
  GranteeId: String!
  GranteeType: String!
  PermissionValues: [String]!
}

input AwsWorkMailListOrganizationsInput {
  NextToken: String
  MaxResults: Int
}

type AwsWorkMailListOrganizationsOutput {
  OrganizationSummaries: [AwsWorkMailListOrganizationsOutputOrganizationSummaries]
  NextToken: String
}

type AwsWorkMailListOrganizationsOutputOrganizationSummaries {
  OrganizationId: String
  Alias: String
  ErrorMessage: String
  State: String
}

input AwsWorkMailListResourceDelegatesInput {
  OrganizationId: String!
  ResourceId: String!
  NextToken: String
  MaxResults: Int
}

type AwsWorkMailListResourceDelegatesOutput {
  Delegates: [AwsWorkMailListResourceDelegatesOutputDelegates]
  NextToken: String
}

type AwsWorkMailListResourceDelegatesOutputDelegates {
  Id: String!
  Type: String!
}

input AwsWorkMailListResourcesInput {
  OrganizationId: String!
  NextToken: String
  MaxResults: Int
}

type AwsWorkMailListResourcesOutput {
  Resources: [AwsWorkMailListResourcesOutputResources]
  NextToken: String
}

type AwsWorkMailListResourcesOutputResources {
  Id: String
  Email: String
  Name: String
  Type: String
  State: String
  EnabledDate: Date
  DisabledDate: Date
}

input AwsWorkMailListUsersInput {
  OrganizationId: String!
  NextToken: String
  MaxResults: Int
}

type AwsWorkMailListUsersOutput {
  Users: [AwsWorkMailListUsersOutputUsers]
  NextToken: String
}

type AwsWorkMailListUsersOutputUsers {
  Id: String
  Email: String
  Name: String
  DisplayName: String
  State: String
  UserRole: String
  EnabledDate: Date
  DisabledDate: Date
}

input AwsWorkMailPutMailboxPermissionsInput {
  OrganizationId: String!
  EntityId: String!
  GranteeId: String!
  PermissionValues: [String]!
}

input AwsWorkMailRegisterToWorkMailInput {
  OrganizationId: String!
  EntityId: String!
  Email: String!
}

input AwsWorkMailResetPasswordInput {
  OrganizationId: String!
  UserId: String!
  Password: String!
}

type AwsWorkMailS18 {
  AutoAcceptRequests: Boolean
  AutoDeclineRecurringRequests: Boolean
  AutoDeclineConflictingRequests: Boolean
}

input AwsWorkMailS18Input {
  AutoAcceptRequests: Boolean
  AutoDeclineRecurringRequests: Boolean
  AutoDeclineConflictingRequests: Boolean
}

input AwsWorkMailUpdateMailboxQuotaInput {
  OrganizationId: String!
  UserId: String!
  MailboxQuota: Int!
}

input AwsWorkMailUpdatePrimaryEmailAddressInput {
  OrganizationId: String!
  EntityId: String!
  Email: String!
}

input AwsWorkMailUpdateResourceInput {
  OrganizationId: String!
  ResourceId: String!
  Name: String
  BookingOptions: AwsWorkMailS18Input
}

"""Amazon WorkSpaces (2015-04-08)"""
type AwsWorkSpaces {
  associateIpGroups(input: AwsWorkSpacesAssociateIpGroupsInput!, config: AwsConfig): JSON
  authorizeIpRules(input: AwsWorkSpacesAuthorizeIpRulesInput!, config: AwsConfig): JSON
  copyWorkspaceImage(input: AwsWorkSpacesCopyWorkspaceImageInput!, config: AwsConfig): AwsWorkSpacesCopyWorkspaceImageOutput
  createIpGroup(input: AwsWorkSpacesCreateIpGroupInput!, config: AwsConfig): AwsWorkSpacesCreateIpGroupOutput
  createTags(input: AwsWorkSpacesCreateTagsInput!, config: AwsConfig): JSON
  createWorkspaces(input: AwsWorkSpacesCreateWorkspacesInput!, config: AwsConfig): AwsWorkSpacesCreateWorkspacesOutput
  deleteIpGroup(input: AwsWorkSpacesDeleteIpGroupInput!, config: AwsConfig): JSON
  deleteTags(input: AwsWorkSpacesDeleteTagsInput!, config: AwsConfig): JSON
  deleteWorkspaceImage(input: AwsWorkSpacesDeleteWorkspaceImageInput!, config: AwsConfig): JSON
  describeAccount(input: JSON, config: AwsConfig): AwsWorkSpacesDescribeAccountOutput
  describeAccountModifications(input: AwsWorkSpacesDescribeAccountModificationsInput, config: AwsConfig): AwsWorkSpacesDescribeAccountModificationsOutput
  describeClientProperties(input: AwsWorkSpacesDescribeClientPropertiesInput!, config: AwsConfig): AwsWorkSpacesDescribeClientPropertiesOutput
  describeIpGroups(input: AwsWorkSpacesDescribeIpGroupsInput, config: AwsConfig): AwsWorkSpacesDescribeIpGroupsOutput
  describeTags(input: AwsWorkSpacesDescribeTagsInput!, config: AwsConfig): AwsWorkSpacesDescribeTagsOutput
  describeWorkspaceBundles(input: AwsWorkSpacesDescribeWorkspaceBundlesInput, config: AwsConfig): AwsWorkSpacesDescribeWorkspaceBundlesOutput
  describeWorkspaceDirectories(input: AwsWorkSpacesDescribeWorkspaceDirectoriesInput, config: AwsConfig): AwsWorkSpacesDescribeWorkspaceDirectoriesOutput
  describeWorkspaceImages(input: AwsWorkSpacesDescribeWorkspaceImagesInput, config: AwsConfig): AwsWorkSpacesDescribeWorkspaceImagesOutput
  describeWorkspaces(input: AwsWorkSpacesDescribeWorkspacesInput, config: AwsConfig): AwsWorkSpacesDescribeWorkspacesOutput
  describeWorkspacesConnectionStatus(input: AwsWorkSpacesDescribeWorkspacesConnectionStatusInput, config: AwsConfig): AwsWorkSpacesDescribeWorkspacesConnectionStatusOutput
  disassociateIpGroups(input: AwsWorkSpacesDisassociateIpGroupsInput!, config: AwsConfig): JSON
  importWorkspaceImage(input: AwsWorkSpacesImportWorkspaceImageInput!, config: AwsConfig): AwsWorkSpacesImportWorkspaceImageOutput
  listAvailableManagementCidrRanges(input: AwsWorkSpacesListAvailableManagementCidrRangesInput!, config: AwsConfig): AwsWorkSpacesListAvailableManagementCidrRangesOutput
  modifyAccount(input: AwsWorkSpacesModifyAccountInput, config: AwsConfig): JSON
  modifyClientProperties(input: AwsWorkSpacesModifyClientPropertiesInput!, config: AwsConfig): JSON
  modifyWorkspaceProperties(input: AwsWorkSpacesModifyWorkspacePropertiesInput!, config: AwsConfig): JSON
  modifyWorkspaceState(input: AwsWorkSpacesModifyWorkspaceStateInput!, config: AwsConfig): JSON
  rebootWorkspaces(input: AwsWorkSpacesRebootWorkspacesInput!, config: AwsConfig): AwsWorkSpacesRebootWorkspacesOutput
  rebuildWorkspaces(input: AwsWorkSpacesRebuildWorkspacesInput!, config: AwsConfig): AwsWorkSpacesRebuildWorkspacesOutput
  revokeIpRules(input: AwsWorkSpacesRevokeIpRulesInput!, config: AwsConfig): JSON
  startWorkspaces(input: AwsWorkSpacesStartWorkspacesInput!, config: AwsConfig): AwsWorkSpacesStartWorkspacesOutput
  stopWorkspaces(input: AwsWorkSpacesStopWorkspacesInput!, config: AwsConfig): AwsWorkSpacesStopWorkspacesOutput
  terminateWorkspaces(input: AwsWorkSpacesTerminateWorkspacesInput!, config: AwsConfig): AwsWorkSpacesTerminateWorkspacesOutput
  updateRulesOfIpGroup(input: AwsWorkSpacesUpdateRulesOfIpGroupInput!, config: AwsConfig): JSON
}

input AwsWorkSpacesAssociateIpGroupsInput {
  DirectoryId: String!
  GroupIds: [String]!
}

input AwsWorkSpacesAuthorizeIpRulesInput {
  GroupId: String!
  UserRules: [AwsWorkSpacesS7Input]!
}

input AwsWorkSpacesCopyWorkspaceImageInput {
  Name: String!
  Description: String
  SourceImageId: String!
  SourceRegion: String!
  Tags: [AwsWorkSpacesShInput]
}

type AwsWorkSpacesCopyWorkspaceImageOutput {
  ImageId: String
}

input AwsWorkSpacesCreateIpGroupInput {
  GroupName: String!
  GroupDesc: String
  UserRules: [AwsWorkSpacesS7Input]
  Tags: [AwsWorkSpacesShInput]
}

type AwsWorkSpacesCreateIpGroupOutput {
  GroupId: String
}

input AwsWorkSpacesCreateTagsInput {
  ResourceId: String!
  Tags: [AwsWorkSpacesShInput]!
}

input AwsWorkSpacesCreateWorkspacesInput {
  Workspaces: [AwsWorkSpacesSvInput]!
}

type AwsWorkSpacesCreateWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesCreateWorkspacesOutputFailedRequests]
  PendingRequests: [AwsWorkSpacesS1b]
}

type AwsWorkSpacesCreateWorkspacesOutputFailedRequests {
  WorkspaceRequest: AwsWorkSpacesSv
  ErrorCode: String
  ErrorMessage: String
}

input AwsWorkSpacesDeleteIpGroupInput {
  GroupId: String!
}

input AwsWorkSpacesDeleteTagsInput {
  ResourceId: String!
  TagKeys: [String]!
}

input AwsWorkSpacesDeleteWorkspaceImageInput {
  ImageId: String!
}

input AwsWorkSpacesDescribeAccountModificationsInput {
  NextToken: String
}

type AwsWorkSpacesDescribeAccountModificationsOutput {
  AccountModifications: [AwsWorkSpacesDescribeAccountModificationsOutputAccountModifications]
  NextToken: String
}

type AwsWorkSpacesDescribeAccountModificationsOutputAccountModifications {
  ModificationState: String
  DedicatedTenancySupport: String
  DedicatedTenancyManagementCidrRange: String
  StartTime: Date
  ErrorCode: String
  ErrorMessage: String
}

type AwsWorkSpacesDescribeAccountOutput {
  DedicatedTenancySupport: String
  DedicatedTenancyManagementCidrRange: String
}

input AwsWorkSpacesDescribeClientPropertiesInput {
  ResourceIds: [String]!
}

type AwsWorkSpacesDescribeClientPropertiesOutput {
  ClientPropertiesList: [AwsWorkSpacesDescribeClientPropertiesOutputClientPropertiesList]
}

type AwsWorkSpacesDescribeClientPropertiesOutputClientPropertiesList {
  ResourceId: String
  ClientProperties: AwsWorkSpacesS2a
}

input AwsWorkSpacesDescribeIpGroupsInput {
  GroupIds: [String]
  NextToken: String
  MaxResults: Int
}

type AwsWorkSpacesDescribeIpGroupsOutput {
  Result: [AwsWorkSpacesDescribeIpGroupsOutputResult]
  NextToken: String
}

type AwsWorkSpacesDescribeIpGroupsOutputResult {
  groupId: String
  groupName: String
  groupDesc: String
  userRules: [AwsWorkSpacesS7]
}

input AwsWorkSpacesDescribeTagsInput {
  ResourceId: String!
}

type AwsWorkSpacesDescribeTagsOutput {
  TagList: [AwsWorkSpacesSh]
}

input AwsWorkSpacesDescribeWorkspaceBundlesInput {
  BundleIds: [String]
  Owner: String
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspaceBundlesOutput {
  Bundles: [AwsWorkSpacesDescribeWorkspaceBundlesOutputBundles]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspaceBundlesOutputBundles {
  BundleId: String
  Name: String
  Owner: String
  Description: String
  RootStorage: AwsWorkSpacesDescribeWorkspaceBundlesOutputBundlesRootStorage
  UserStorage: AwsWorkSpacesDescribeWorkspaceBundlesOutputBundlesUserStorage
  ComputeType: AwsWorkSpacesDescribeWorkspaceBundlesOutputBundlesComputeType
}

type AwsWorkSpacesDescribeWorkspaceBundlesOutputBundlesComputeType {
  Name: String
}

type AwsWorkSpacesDescribeWorkspaceBundlesOutputBundlesRootStorage {
  Capacity: String
}

type AwsWorkSpacesDescribeWorkspaceBundlesOutputBundlesUserStorage {
  Capacity: String
}

input AwsWorkSpacesDescribeWorkspaceDirectoriesInput {
  DirectoryIds: [String]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspaceDirectoriesOutput {
  Directories: [AwsWorkSpacesDescribeWorkspaceDirectoriesOutputDirectories]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspaceDirectoriesOutputDirectories {
  DirectoryId: String
  Alias: String
  DirectoryName: String
  RegistrationCode: String
  SubnetIds: [String]
  DnsIpAddresses: [String]
  CustomerUserName: String
  IamRoleId: String
  DirectoryType: String
  WorkspaceSecurityGroupId: String
  State: String
  WorkspaceCreationProperties: AwsWorkSpacesDescribeWorkspaceDirectoriesOutputDirectoriesWorkspaceCreationProperties
  ipGroupIds: [String]
}

type AwsWorkSpacesDescribeWorkspaceDirectoriesOutputDirectoriesWorkspaceCreationProperties {
  EnableWorkDocs: Boolean
  EnableInternetAccess: Boolean
  DefaultOu: String
  CustomSecurityGroupId: String
  UserEnabledAsLocalAdministrator: Boolean
}

input AwsWorkSpacesDescribeWorkspaceImagesInput {
  ImageIds: [String]
  NextToken: String
  MaxResults: Int
}

type AwsWorkSpacesDescribeWorkspaceImagesOutput {
  Images: [AwsWorkSpacesDescribeWorkspaceImagesOutputImages]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspaceImagesOutputImages {
  ImageId: String
  Name: String
  Description: String
  OperatingSystem: AwsWorkSpacesDescribeWorkspaceImagesOutputImagesOperatingSystem
  State: String
  RequiredTenancy: String
  ErrorCode: String
  ErrorMessage: String
}

type AwsWorkSpacesDescribeWorkspaceImagesOutputImagesOperatingSystem {
  Type: String
}

input AwsWorkSpacesDescribeWorkspacesConnectionStatusInput {
  WorkspaceIds: [String]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspacesConnectionStatusOutput {
  WorkspacesConnectionStatus: [AwsWorkSpacesDescribeWorkspacesConnectionStatusOutputWorkspacesConnectionStatus]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspacesConnectionStatusOutputWorkspacesConnectionStatus {
  WorkspaceId: String
  ConnectionState: String
  ConnectionStateCheckTimestamp: Date
  LastKnownUserConnectionTimestamp: Date
}

input AwsWorkSpacesDescribeWorkspacesInput {
  WorkspaceIds: [String]
  DirectoryId: String
  UserName: String
  BundleId: String
  Limit: Int
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspacesOutput {
  Workspaces: [AwsWorkSpacesS1b]
  NextToken: String
}

input AwsWorkSpacesDisassociateIpGroupsInput {
  DirectoryId: String!
  GroupIds: [String]!
}

input AwsWorkSpacesImportWorkspaceImageInput {
  Ec2ImageId: String!
  IngestionProcess: String!
  ImageName: String!
  ImageDescription: String!
  Tags: [AwsWorkSpacesShInput]
}

type AwsWorkSpacesImportWorkspaceImageOutput {
  ImageId: String
}

input AwsWorkSpacesListAvailableManagementCidrRangesInput {
  ManagementCidrRangeConstraint: String!
  MaxResults: Int
  NextToken: String
}

type AwsWorkSpacesListAvailableManagementCidrRangesOutput {
  ManagementCidrRanges: [String]
  NextToken: String
}

input AwsWorkSpacesModifyAccountInput {
  DedicatedTenancySupport: String
  DedicatedTenancyManagementCidrRange: String
}

input AwsWorkSpacesModifyClientPropertiesInput {
  ResourceId: String!
  ClientProperties: AwsWorkSpacesS2aInput!
}

input AwsWorkSpacesModifyWorkspacePropertiesInput {
  WorkspaceId: String!
  WorkspaceProperties: AwsWorkSpacesS10Input!
}

input AwsWorkSpacesModifyWorkspaceStateInput {
  WorkspaceId: String!
  WorkspaceState: String!
}

input AwsWorkSpacesRebootWorkspacesInput {
  RebootWorkspaceRequests: [AwsWorkSpacesRebootWorkspacesRebootWorkspaceRequestsInput]!
}

type AwsWorkSpacesRebootWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesS4g]
}

input AwsWorkSpacesRebootWorkspacesRebootWorkspaceRequestsInput {
  WorkspaceId: String!
}

input AwsWorkSpacesRebuildWorkspacesInput {
  RebuildWorkspaceRequests: [AwsWorkSpacesRebuildWorkspacesRebuildWorkspaceRequestsInput]!
}

type AwsWorkSpacesRebuildWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesS4g]
}

input AwsWorkSpacesRebuildWorkspacesRebuildWorkspaceRequestsInput {
  WorkspaceId: String!
}

input AwsWorkSpacesRevokeIpRulesInput {
  GroupId: String!
  UserRules: [String]!
}

type AwsWorkSpacesS10 {
  RunningMode: String
  RunningModeAutoStopTimeoutInMinutes: Int
  RootVolumeSizeGib: Int
  UserVolumeSizeGib: Int
  ComputeTypeName: String
}

input AwsWorkSpacesS10Input {
  RunningMode: String
  RunningModeAutoStopTimeoutInMinutes: Int
  RootVolumeSizeGib: Int
  UserVolumeSizeGib: Int
  ComputeTypeName: String
}

type AwsWorkSpacesS1b {
  WorkspaceId: String
  DirectoryId: String
  UserName: String
  IpAddress: String
  State: String
  BundleId: String
  SubnetId: String
  ErrorMessage: String
  ErrorCode: String
  ComputerName: String
  VolumeEncryptionKey: String
  UserVolumeEncryptionEnabled: Boolean
  RootVolumeEncryptionEnabled: Boolean
  WorkspaceProperties: AwsWorkSpacesS10
  ModificationStates: [AwsWorkSpacesS1bModificationStates]
}

type AwsWorkSpacesS1bModificationStates {
  Resource: String
  State: String
}

type AwsWorkSpacesS2a {
  ReconnectEnabled: String
}

input AwsWorkSpacesS2aInput {
  ReconnectEnabled: String
}

type AwsWorkSpacesS4g {
  WorkspaceId: String
  ErrorCode: String
  ErrorMessage: String
}

type AwsWorkSpacesS7 {
  ipRule: String
  ruleDesc: String
}

input AwsWorkSpacesS7Input {
  ipRule: String
  ruleDesc: String
}

type AwsWorkSpacesSh {
  Key: String!
  Value: String
}

input AwsWorkSpacesShInput {
  Key: String!
  Value: String
}

input AwsWorkSpacesStartWorkspacesInput {
  StartWorkspaceRequests: [AwsWorkSpacesStartWorkspacesStartWorkspaceRequestsInput]!
}

type AwsWorkSpacesStartWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesS4g]
}

input AwsWorkSpacesStartWorkspacesStartWorkspaceRequestsInput {
  WorkspaceId: String
}

input AwsWorkSpacesStopWorkspacesInput {
  StopWorkspaceRequests: [AwsWorkSpacesStopWorkspacesStopWorkspaceRequestsInput]!
}

type AwsWorkSpacesStopWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesS4g]
}

input AwsWorkSpacesStopWorkspacesStopWorkspaceRequestsInput {
  WorkspaceId: String
}

type AwsWorkSpacesSv {
  DirectoryId: String!
  UserName: String!
  BundleId: String!
  VolumeEncryptionKey: String
  UserVolumeEncryptionEnabled: Boolean
  RootVolumeEncryptionEnabled: Boolean
  WorkspaceProperties: AwsWorkSpacesS10
  Tags: [AwsWorkSpacesSh]
}

input AwsWorkSpacesSvInput {
  DirectoryId: String!
  UserName: String!
  BundleId: String!
  VolumeEncryptionKey: String
  UserVolumeEncryptionEnabled: Boolean
  RootVolumeEncryptionEnabled: Boolean
  WorkspaceProperties: AwsWorkSpacesS10Input
  Tags: [AwsWorkSpacesShInput]
}

input AwsWorkSpacesTerminateWorkspacesInput {
  TerminateWorkspaceRequests: [AwsWorkSpacesTerminateWorkspacesTerminateWorkspaceRequestsInput]!
}

type AwsWorkSpacesTerminateWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesS4g]
}

input AwsWorkSpacesTerminateWorkspacesTerminateWorkspaceRequestsInput {
  WorkspaceId: String!
}

input AwsWorkSpacesUpdateRulesOfIpGroupInput {
  GroupId: String!
  UserRules: [AwsWorkSpacesS7Input]!
}

"""AWS X-Ray (2016-04-12)"""
type AwsXRay {
  batchGetTraces(input: AwsXRayBatchGetTracesInput!, config: AwsConfig): AwsXRayBatchGetTracesOutput
  createGroup(input: AwsXRayCreateGroupInput!, config: AwsConfig): AwsXRayCreateGroupOutput
  createSamplingRule(input: AwsXRayCreateSamplingRuleInput!, config: AwsConfig): AwsXRayCreateSamplingRuleOutput
  deleteGroup(input: AwsXRayDeleteGroupInput, config: AwsConfig): JSON
  deleteSamplingRule(input: AwsXRayDeleteSamplingRuleInput, config: AwsConfig): AwsXRayDeleteSamplingRuleOutput
  getEncryptionConfig(input: JSON, config: AwsConfig): AwsXRayGetEncryptionConfigOutput
  getGroup(input: AwsXRayGetGroupInput, config: AwsConfig): AwsXRayGetGroupOutput
  getGroups(input: AwsXRayGetGroupsInput, config: AwsConfig): AwsXRayGetGroupsOutput
  getSamplingRules(input: AwsXRayGetSamplingRulesInput, config: AwsConfig): AwsXRayGetSamplingRulesOutput
  getSamplingStatisticSummaries(input: AwsXRayGetSamplingStatisticSummariesInput, config: AwsConfig): AwsXRayGetSamplingStatisticSummariesOutput
  getSamplingTargets(input: AwsXRayGetSamplingTargetsInput!, config: AwsConfig): AwsXRayGetSamplingTargetsOutput
  getServiceGraph(input: AwsXRayGetServiceGraphInput!, config: AwsConfig): AwsXRayGetServiceGraphOutput
  getTimeSeriesServiceStatistics(input: AwsXRayGetTimeSeriesServiceStatisticsInput!, config: AwsConfig): AwsXRayGetTimeSeriesServiceStatisticsOutput
  getTraceGraph(input: AwsXRayGetTraceGraphInput!, config: AwsConfig): AwsXRayGetTraceGraphOutput
  getTraceSummaries(input: AwsXRayGetTraceSummariesInput!, config: AwsConfig): AwsXRayGetTraceSummariesOutput
  putEncryptionConfig(input: AwsXRayPutEncryptionConfigInput!, config: AwsConfig): AwsXRayPutEncryptionConfigOutput
  putTelemetryRecords(input: AwsXRayPutTelemetryRecordsInput!, config: AwsConfig): JSON
  putTraceSegments(input: AwsXRayPutTraceSegmentsInput!, config: AwsConfig): AwsXRayPutTraceSegmentsOutput
  updateGroup(input: AwsXRayUpdateGroupInput, config: AwsConfig): AwsXRayUpdateGroupOutput
  updateSamplingRule(input: AwsXRayUpdateSamplingRuleInput!, config: AwsConfig): AwsXRayUpdateSamplingRuleOutput
}

input AwsXRayBatchGetTracesInput {
  TraceIds: [String]!
  NextToken: String
}

type AwsXRayBatchGetTracesOutput {
  Traces: [AwsXRayBatchGetTracesOutputTraces]
  UnprocessedTraceIds: [String]
  NextToken: String
}

type AwsXRayBatchGetTracesOutputTraces {
  Id: String
  Duration: JSON
  Segments: [AwsXRayBatchGetTracesOutputTracesSegments]
}

type AwsXRayBatchGetTracesOutputTracesSegments {
  Id: String
  Document: String
}

input AwsXRayCreateGroupInput {
  GroupName: String!
  FilterExpression: String
}

type AwsXRayCreateGroupOutput {
  Group: AwsXRaySi
}

input AwsXRayCreateSamplingRuleInput {
  SamplingRule: AwsXRaySkInput!
}

type AwsXRayCreateSamplingRuleOutput {
  SamplingRuleRecord: AwsXRayS10
}

input AwsXRayDeleteGroupInput {
  GroupName: String
  GroupARN: String
}

input AwsXRayDeleteSamplingRuleInput {
  RuleName: String
  RuleARN: String
}

type AwsXRayDeleteSamplingRuleOutput {
  SamplingRuleRecord: AwsXRayS10
}

type AwsXRayGetEncryptionConfigOutput {
  EncryptionConfig: AwsXRayS19
}

input AwsXRayGetGroupInput {
  GroupName: String
  GroupARN: String
}

type AwsXRayGetGroupOutput {
  Group: AwsXRaySi
}

input AwsXRayGetGroupsInput {
  NextToken: String
}

type AwsXRayGetGroupsOutput {
  Groups: [AwsXRayGetGroupsOutputGroups]
  NextToken: String
}

type AwsXRayGetGroupsOutputGroups {
  GroupName: String
  GroupARN: String
  FilterExpression: String
}

input AwsXRayGetSamplingRulesInput {
  NextToken: String
}

type AwsXRayGetSamplingRulesOutput {
  SamplingRuleRecords: [AwsXRayS10]
  NextToken: String
}

input AwsXRayGetSamplingStatisticSummariesInput {
  NextToken: String
}

type AwsXRayGetSamplingStatisticSummariesOutput {
  SamplingStatisticSummaries: [AwsXRayGetSamplingStatisticSummariesOutputSamplingStatisticSummaries]
  NextToken: String
}

type AwsXRayGetSamplingStatisticSummariesOutputSamplingStatisticSummaries {
  RuleName: String
  Timestamp: Date
  RequestCount: Int
  BorrowCount: Int
  SampledCount: Int
}

input AwsXRayGetSamplingTargetsInput {
  SamplingStatisticsDocuments: [AwsXRayGetSamplingTargetsSamplingStatisticsDocumentsInput]!
}

type AwsXRayGetSamplingTargetsOutput {
  SamplingTargetDocuments: [AwsXRayGetSamplingTargetsOutputSamplingTargetDocuments]
  LastRuleModification: Date
  UnprocessedStatistics: [AwsXRayGetSamplingTargetsOutputUnprocessedStatistics]
}

type AwsXRayGetSamplingTargetsOutputSamplingTargetDocuments {
  RuleName: String
  FixedRate: JSON
  ReservoirQuota: Int
  ReservoirQuotaTTL: Date
  Interval: Int
}

type AwsXRayGetSamplingTargetsOutputUnprocessedStatistics {
  RuleName: String
  ErrorCode: String
  Message: String
}

input AwsXRayGetSamplingTargetsSamplingStatisticsDocumentsInput {
  RuleName: String!
  ClientID: String!
  Timestamp: Date!
  RequestCount: Int!
  SampledCount: Int!
  BorrowCount: Int
}

input AwsXRayGetServiceGraphInput {
  StartTime: Date!
  EndTime: Date!
  GroupName: String
  GroupARN: String
  NextToken: String
}

type AwsXRayGetServiceGraphOutput {
  StartTime: Date
  EndTime: Date
  Services: [AwsXRayS27]
  ContainsOldGroupVersions: Boolean
  NextToken: String
}

input AwsXRayGetTimeSeriesServiceStatisticsInput {
  StartTime: Date!
  EndTime: Date!
  GroupName: String
  GroupARN: String
  EntitySelectorExpression: String
  Period: Int
  NextToken: String
}

type AwsXRayGetTimeSeriesServiceStatisticsOutput {
  TimeSeriesServiceStatistics: [AwsXRayGetTimeSeriesServiceStatisticsOutputTimeSeriesServiceStatistics]
  ContainsOldGroupVersions: Boolean
  NextToken: String
}

type AwsXRayGetTimeSeriesServiceStatisticsOutputTimeSeriesServiceStatistics {
  Timestamp: Date
  EdgeSummaryStatistics: AwsXRayS2d
  ServiceSummaryStatistics: AwsXRayS2m
  ResponseTimeHistogram: [AwsXRayS2h]
}

input AwsXRayGetTraceGraphInput {
  TraceIds: [String]!
  NextToken: String
}

type AwsXRayGetTraceGraphOutput {
  Services: [AwsXRayS27]
  NextToken: String
}

input AwsXRayGetTraceSummariesInput {
  StartTime: Date!
  EndTime: Date!
  TimeRangeType: String
  Sampling: Boolean
  SamplingStrategy: AwsXRayGetTraceSummariesSamplingStrategyInput
  FilterExpression: String
  NextToken: String
}

type AwsXRayGetTraceSummariesOutput {
  TraceSummaries: [AwsXRayGetTraceSummariesOutputTraceSummaries]
  ApproximateTime: Date
  TracesProcessedCount: JSON
  NextToken: String
}

type AwsXRayGetTraceSummariesOutputTraceSummaries {
  Id: String
  Duration: JSON
  ResponseTime: JSON
  HasFault: Boolean
  HasError: Boolean
  HasThrottle: Boolean
  IsPartial: Boolean
  Http: AwsXRayGetTraceSummariesOutputTraceSummariesHttp
  Annotations: JSON
  Users: [AwsXRayGetTraceSummariesOutputTraceSummariesUsers]
  ServiceIds: [AwsXRayS39]
  ResourceARNs: [AwsXRayGetTraceSummariesOutputTraceSummariesResourceARNs]
  InstanceIds: [AwsXRayGetTraceSummariesOutputTraceSummariesInstanceIds]
  AvailabilityZones: [AwsXRayGetTraceSummariesOutputTraceSummariesAvailabilityZones]
  EntryPoint: AwsXRayS39
  FaultRootCauses: [AwsXRayGetTraceSummariesOutputTraceSummariesFaultRootCauses]
  ErrorRootCauses: [AwsXRayGetTraceSummariesOutputTraceSummariesErrorRootCauses]
  ResponseTimeRootCauses: [AwsXRayGetTraceSummariesOutputTraceSummariesResponseTimeRootCauses]
  Revision: Int
  MatchedEventTime: Date
}

type AwsXRayGetTraceSummariesOutputTraceSummariesAvailabilityZones {
  Name: String
}

type AwsXRayGetTraceSummariesOutputTraceSummariesErrorRootCauses {
  Services: [AwsXRayGetTraceSummariesOutputTraceSummariesErrorRootCausesServices]
}

type AwsXRayGetTraceSummariesOutputTraceSummariesErrorRootCausesServices {
  Name: String
  Names: [String]
  Type: String
  AccountId: String
  EntityPath: [AwsXRayGetTraceSummariesOutputTraceSummariesErrorRootCausesServicesEntityPath]
  Inferred: Boolean
}

type AwsXRayGetTraceSummariesOutputTraceSummariesErrorRootCausesServicesEntityPath {
  Name: String
  Exceptions: [AwsXRayS3o]
  Remote: Boolean
}

type AwsXRayGetTraceSummariesOutputTraceSummariesFaultRootCauses {
  Services: [AwsXRayGetTraceSummariesOutputTraceSummariesFaultRootCausesServices]
}

type AwsXRayGetTraceSummariesOutputTraceSummariesFaultRootCausesServices {
  Name: String
  Names: [String]
  Type: String
  AccountId: String
  EntityPath: [AwsXRayGetTraceSummariesOutputTraceSummariesFaultRootCausesServicesEntityPath]
  Inferred: Boolean
}

type AwsXRayGetTraceSummariesOutputTraceSummariesFaultRootCausesServicesEntityPath {
  Name: String
  Exceptions: [AwsXRayS3o]
  Remote: Boolean
}

type AwsXRayGetTraceSummariesOutputTraceSummariesHttp {
  HttpURL: String
  HttpStatus: Int
  HttpMethod: String
  UserAgent: String
  ClientIp: String
}

type AwsXRayGetTraceSummariesOutputTraceSummariesInstanceIds {
  Id: String
}

type AwsXRayGetTraceSummariesOutputTraceSummariesResourceARNs {
  ARN: String
}

type AwsXRayGetTraceSummariesOutputTraceSummariesResponseTimeRootCauses {
  Services: [AwsXRayGetTraceSummariesOutputTraceSummariesResponseTimeRootCausesServices]
}

type AwsXRayGetTraceSummariesOutputTraceSummariesResponseTimeRootCausesServices {
  Name: String
  Names: [String]
  Type: String
  AccountId: String
  EntityPath: [AwsXRayGetTraceSummariesOutputTraceSummariesResponseTimeRootCausesServicesEntityPath]
  Inferred: Boolean
}

type AwsXRayGetTraceSummariesOutputTraceSummariesResponseTimeRootCausesServicesEntityPath {
  Name: String
  Coverage: JSON
  Remote: Boolean
}

type AwsXRayGetTraceSummariesOutputTraceSummariesUsers {
  UserName: String
  ServiceIds: [AwsXRayS39]
}

input AwsXRayGetTraceSummariesSamplingStrategyInput {
  Name: String
  Value: JSON
}

input AwsXRayPutEncryptionConfigInput {
  KeyId: String
  Type: String!
}

type AwsXRayPutEncryptionConfigOutput {
  EncryptionConfig: AwsXRayS19
}

input AwsXRayPutTelemetryRecordsInput {
  TelemetryRecords: [AwsXRayPutTelemetryRecordsTelemetryRecordsInput]!
  EC2InstanceId: String
  Hostname: String
  ResourceARN: String
}

input AwsXRayPutTelemetryRecordsTelemetryRecordsBackendConnectionErrorsInput {
  TimeoutCount: Int
  ConnectionRefusedCount: Int
  HTTPCode4XXCount: Int
  HTTPCode5XXCount: Int
  UnknownHostCount: Int
  OtherCount: Int
}

input AwsXRayPutTelemetryRecordsTelemetryRecordsInput {
  Timestamp: Date!
  SegmentsReceivedCount: Int
  SegmentsSentCount: Int
  SegmentsSpilloverCount: Int
  SegmentsRejectedCount: Int
  BackendConnectionErrors: AwsXRayPutTelemetryRecordsTelemetryRecordsBackendConnectionErrorsInput
}

input AwsXRayPutTraceSegmentsInput {
  TraceSegmentDocuments: [String]!
}

type AwsXRayPutTraceSegmentsOutput {
  UnprocessedTraceSegments: [AwsXRayPutTraceSegmentsOutputUnprocessedTraceSegments]
}

type AwsXRayPutTraceSegmentsOutputUnprocessedTraceSegments {
  Id: String
  ErrorCode: String
  Message: String
}

type AwsXRayS10 {
  SamplingRule: AwsXRaySk
  CreatedAt: Date
  ModifiedAt: Date
}

type AwsXRayS19 {
  KeyId: String
  Status: String
  Type: String
}

type AwsXRayS27 {
  ReferenceId: Int
  Name: String
  Names: [String]
  Root: Boolean
  AccountId: String
  Type: String
  State: String
  StartTime: Date
  EndTime: Date
  Edges: [AwsXRayS27Edges]
  SummaryStatistics: AwsXRayS2m
  DurationHistogram: [AwsXRayS2h]
  ResponseTimeHistogram: [AwsXRayS2h]
}

type AwsXRayS27Edges {
  ReferenceId: Int
  StartTime: Date
  EndTime: Date
  SummaryStatistics: AwsXRayS2d
  ResponseTimeHistogram: [AwsXRayS2h]
  Aliases: [AwsXRayS27EdgesAliases]
}

type AwsXRayS27EdgesAliases {
  Name: String
  Names: [String]
  Type: String
}

type AwsXRayS2d {
  OkCount: JSON
  ErrorStatistics: AwsXRayS2f
  FaultStatistics: AwsXRayS2g
  TotalCount: JSON
  TotalResponseTime: JSON
}

type AwsXRayS2f {
  ThrottleCount: JSON
  OtherCount: JSON
  TotalCount: JSON
}

type AwsXRayS2g {
  OtherCount: JSON
  TotalCount: JSON
}

type AwsXRayS2h {
  Value: JSON
  Count: Int
}

type AwsXRayS2m {
  OkCount: JSON
  ErrorStatistics: AwsXRayS2f
  FaultStatistics: AwsXRayS2g
  TotalCount: JSON
  TotalResponseTime: JSON
}

type AwsXRayS39 {
  Name: String
  Names: [String]
  AccountId: String
  Type: String
}

type AwsXRayS3o {
  Name: String
  Message: String
}

type AwsXRaySi {
  GroupName: String
  GroupARN: String
  FilterExpression: String
}

type AwsXRaySk {
  RuleName: String
  RuleARN: String
  ResourceARN: String!
  Priority: Int!
  FixedRate: JSON!
  ReservoirSize: Int!
  ServiceName: String!
  ServiceType: String!
  Host: String!
  HTTPMethod: String!
  URLPath: String!
  Version: Int!
  Attributes: JSON
}

input AwsXRaySkInput {
  RuleName: String
  RuleARN: String
  ResourceARN: String!
  Priority: Int!
  FixedRate: JSON!
  ReservoirSize: Int!
  ServiceName: String!
  ServiceType: String!
  Host: String!
  HTTPMethod: String!
  URLPath: String!
  Version: Int!
  Attributes: JSON
}

input AwsXRayUpdateGroupInput {
  GroupName: String
  GroupARN: String
  FilterExpression: String
}

type AwsXRayUpdateGroupOutput {
  Group: AwsXRaySi
}

input AwsXRayUpdateSamplingRuleInput {
  SamplingRuleUpdate: AwsXRayUpdateSamplingRuleSamplingRuleUpdateInput!
}

type AwsXRayUpdateSamplingRuleOutput {
  SamplingRuleRecord: AwsXRayS10
}

input AwsXRayUpdateSamplingRuleSamplingRuleUpdateInput {
  RuleName: String
  RuleARN: String
  ResourceARN: String
  Priority: Int
  FixedRate: JSON
  ReservoirSize: Int
  Host: String
  ServiceName: String
  ServiceType: String
  HTTPMethod: String
  URLPath: String
  Attributes: JSON
}

scalar Date

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Query {
  """AWS SDK 2.490.0"""
  aws(
    """Will override default configs for aws-sdk."""
    config: AwsConfig
  ): Aws
}
